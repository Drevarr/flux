created: 20230401000636000
creator: Drevarr
modified: 20230705163523593
modifier: drevarr
tags: ChartData
title: 202304010006_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Whose Guardian", "Smol Daddy Tika", "Jeckyll Mbs", "Ju\u00e7", "Arriasa", "Zadie Miststep", "Smol Gluvs", "Mike The Archmagus", "Mac Chiato", "Xanvias Tlesel", "Johosh The Great", "Brioche Bunbringer", "Drevarr Moonwillow", "Bella Lunabringer"];
const professions = ["Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Druid", "Tempest", "Scourge", "Tempest", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1232, 443, 2804, 352, 5933, 348, 2847, 1188, 19254, 2999, 1529, 511, 256, 397, 273, 10228, 577, 451, 221, 508, 9913, 259, 613, 412, 27264, 7695], [500, 876, 936, 271, 5307, 385, 3282, 882, 347, 537, 10305, 354, 752, 347, 285, 321, 371, 331, 2352, 1836, 506, 331, 367, 218, 482], [847, 442, 854, 529, 4931, 10193, 5132, 489, 310, 641, 23020, 256, 488, 311, 363, 285, 352, 8419, 339, 585, 469, 534, 254, 293, 688, 392, 219, 1057, 21744], [378, 425, 5838, 380, 713, 8683, 6002, 328, 403, 621, 40545, 213, 324, 217, 380, 1239, 450, 1038], [286, 394, 478, 477, 423, 760, 4976, 308, 646, 286, 377, 302, 262, 467, 330, 12889, 816, 268, 301, 1510, 532, 227, 1002, 536], [368, 208, 387, 296, 432, 320, 5117, 5684, 298, 1538, 427, 353, 1506, 1851], [490, 421, 1880, 624, 1332, 238, 6453, 321, 303, 755, 23019, 424, 507, 294, 256, 275, 203, 450, 10671, 618, 12602, 442, 341, 210, 435, 233, 1183, 697], [5035, 418, 1552, 3880, 4459, 344, 3335, 356, 307, 585, 31444, 499, 327, 283, 369, 300, 332, 964, 705, 298, 242, 445, 244, 216, 895, 258, 269, 2561, 286], [459, 402, 3365, 246, 396, 316, 1097, 355, 550, 298, 2662, 284, 610, 238, 215, 237, 333, 262, 740, 428, 9168, 265, 212, 352, 666, 578, 3314], [421, 1638, 3433, 3143, 373, 368, 1091, 329, 222, 697, 1583, 341, 1131, 273, 205, 849, 257, 177, 1099, 1449, 2102, 652, 340, 182, 2554, 318, 553, 1789, 680], [2300, 338, 2753, 277, 3431, 256, 9965, 465, 247, 392, 28114, 308, 413, 225, 267, 291, 1380, 362, 327, 228, 456, 214, 199, 548, 380, 154, 990, 246], [733, 291, 2306, 603, 920, 211, 1436, 481, 244, 443, 25953, 234, 404, 232, 328, 279, 240, 277, 746, 727, 4637, 208, 193, 446, 382, 207, 806, 317], [343, 275, 13206, 208, 4842, 223, 2442, 417, 238, 509, 7399, 283, 365, 209, 175, 225, 446, 295, 263, 385, 686, 203, 152, 2106, 322, 253, 3777, 6394], [285, 268, 3290, 352, 426, 312, 1950, 476, 203, 242, 1408, 415, 336, 222, 223, 156, 172, 306, 199, 617, 184, 606, 192, 139, 1365, 274, 176, 523, 447], [372, 195, 3328, 249, 258, 220, 765, 203, 231, 304, 1705, 187, 266, 203, 331, 239, 197, 217, 226, 269, 10847, 1147, 182, 164, 1567, 296, 127, 404, 236]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

