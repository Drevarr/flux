created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Reina Armitage", "Mmathuss", "Gamora Titus", "Danaeryn", "Alarics Clone", "Sakis Ranger", "Gestern Yesteryear", "Legoh Brave", "Jimbo The Pleb", "Lady Fluffs", "Whip \u00d1 Sl\u00e0pper", "Jerryatric Reflexes"];
const professions = ["Druid", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Druid", "Firebrand", "Tempest", "Berserker", "Druid", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.2155, 4.1698, 2.8811, 4.3261, 6.9878, 2.9258, 0.0, 0.0, 2.1254, 3.9496, 6.7813, 3.1726, 4.6512, 0.0, 0.0], [0.738, 3.1547, 12.017, 15.1952, 10.9181, 0.9925, 3.4776], [0.5051, 12.8478, 8.2579, 5.8752, 0.0, 4.6368, 5.3928, 5.4169, 0.0, 0.0, 2.7261, 0.8165, 1.4876], [19.8996, 2.8538, 2.9621, 1.2209, 14.7798, 2.389, 9.8302], [0.0, 16.8948, 0.9576, 0.0, 10.1556, 0.0, 5.2931, 3.7969, 11.8584, 5.7737, 4.2647, 0.0, 2.3344, 0.0, 3.7508, 3.9606, 0.0, 4.4554, 0.0, 0.0], [0.0, 0.4408, 0.0, 0.0, 14.4378, 0.0, 5.5787, 7.2504, 23.7607, 5.45, 11.8685, 0.0, 0.3247, 8.636, 4.4022, 15.7406, 4.3554], [0.0, 6.8027, 9.1968, 24.6035, 7.2245, 6.9084, 10.0016, 1.9292, 7.3944, 6.6123, 3.1606, 0.5915, 0.0, 6.6101, 0.0, 0.0, 1.9789, 0.0, 0.0, 8.694, 0.0, 4.7491, 0.0, 0.0, 0.0, 0.0, 0.0, 6.7392, 0.0], [4.064, 4.919, 13.463, 1.8679, 0.0, 4.5978, 13.0626, 3.1464, 3.2651, 4.6299, 37.283, 10.0947, 8.1043, 7.9852, 0.0, 0.0], [6.5795, 14.5692, 11.2917, 1.8278, 14.625, 6.588, 8.568, 1.7554, 7.8836, 6.4482, 3.0911, 10.1673, 1.5941, 0.0, 5.8346, 1.4573, 6.9034, 0.4712, 7.889, 1.1794, 1.3432, 0.0, 2.473, 4.0482, 0.0], [0.0, 52.2576, 35.0322, 0.265, 24.0786, 0.0, 23.8381, 8.8722], [7.7906, 15.5268, 11.3316, 1.9582, 15.8886, 1.2155, 1.7898, 6.6398, 5.8194, 7.2306, 5.0912, 5.4681, 1.7775, 25.3282, 1.8796, 6.0858, 4.7665, 9.4003, 1.5137, 7.1162, 4.8384, 3.8081, 0.259, 0.4856, 1.3608], [68.761, 14.9723, 84.8718, 42.2508, 64.8883, 48.4823, 53.8898, 64.9409, 44.6145, 13.5464, 38.0504, 28.4425, 19.2179, 35.3942, 45.5248, 63.648, 14.0444, 15.4238]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

