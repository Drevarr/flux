created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Mememonoko", "Ryvalia Fazebringer", "Sister Elonith", "Oo Dads Mad", "Gabe Malhorn", "Blancooo Padreee", "Arcanophage Farra", "Lord Erin The Wise", "Gestern Yesteryear", "\u00c1rkantor", "\u00c1rkantor", "Mmathuss", "Grim Grooblin", "Bombmaker Caelon", "Victoria Raskae", "Arch Payne", "Air One Com", "Tika Fiery", "Grasszanine", "Xanvias Einzbern", "Johosh The Mighty", "Daring Deathblade", "Aronorf Xideliesi", "Newtype Khan", "Solus Sanctus", "Venomina", "Mister Jekyll", "Kahlianne", "Glorious Gluvs", "Tribal S", "Bella Sassy", "Be\u00eb", "Daphne Agla\u00e9", "Mesmerizing Dark", "Skyew\u00edng", "Zaedy Zae", "Jr Baldassari", "Mike The Archmagus", "Mort\u00e4rion", "Duke Silvver", "Artakama Nahid", "The Fancy Cheese", "Arriasa", "Bodger Bloddger", "Black Raspberry Pie", "Drumina", "Regis Hawkesburne", "Eibh\u00ebar", "Primal Clone"];
const professions = ["Scrapper", "Vindicator", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Spellbreaker", "Spellbreaker", "Weaver", "Firebrand", "Herald", "Vindicator", "Firebrand", "Chronomancer", "Scrapper", "Renegade", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Berserker", "Reaper", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Scourge", "Scourge", "Berserker", "Druid", "Firebrand", "Scourge", "Scourge", "Chronomancer", "Druid", "Druid", "Herald", "Weaver", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Druid", "Berserker", "Chronomancer", "Druid", "Berserker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 15, 32, 17, 0, 0, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 26, 10, 36], [0, 0, 14, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 30, 35, 0, 34, 12, 25], [0, 0, 0, 7, 0, 0, 0, 17, 22, 16, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 28, 0, 6, 0, 0, 13, 38, 19], [0, 0, 0, 38, 26, 0, 0, 16, 0, 5, 33, 0, 27, 17, 9], [38, 15, 67, 34, 0, 0, 0, 0, 0, 19, 0, 0, 0], [0, 0, 38, 26, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 38, 0, 0, 0, 17, 0, 10, 22, 12], [57, 76, 23, 31], [105, 34, 36, 26], [0, 15, 15, 27, 0, 6, 0, 0, 4, 0, 24, 0, 0, 38, 62, 0, 0, 1, 0, 0, 26], [0, 0, 0, 0, 0, 0, 64, 22, 16, 20, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 3, 0, 46, 24, 19], [0, 0, 0, 22, 72, 28, 44, 32, 0, 28], [29, 0, 36, 0, 5, 0, 13, 0, 0, 0, 40, 0, 0, 59, 46], [21, 24, 38, 78, 0, 0, 0, 0, 0, 26, 0, 0, 0, 2, 0, 0, 0, 24, 0, 21], [123, 18, 12, 45, 0, 0, 0, 6, 0, 0, 0, 9, 25], [0, 0, 0, 35, 0, 0, 22, 0, 7, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 75, 0], [28, 0, 43, 106, 6, 28, 9, 0, 0, 0, 21, 3], [0, 0, 11, 34, 0, 31, 11, 16, 23, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 16, 0, 12, 15, 13], [0, 0, 0, 59, 20, 0, 30, 30, 7, 0, 0, 0, 26, 0, 0, 0, 17, 0, 0, 0, 7, 0, 26, 23, 6], [0, 0, 0, 25, 45, 0, 7, 0, 23, 63, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 44, 0], [0, 0, 0, 18, 0, 18, 3, 18, 7, 0, 0, 0, 0, 0, 30, 0, 0, 0, 78, 0, 0, 0, 9, 0, 18, 32, 42], [0, 0, 0, 23, 0, 0, 28, 33, 32, 53, 0, 0, 0, 0, 0, 32, 0, 0, 8, 0, 0, 0, 0, 0, 0, 24, 14, 30], [0, 0, 0, 9, 20, 0, 90, 6, 34, 16, 19, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 15, 41, 13], [0, 0, 0, 36, 26, 0, 34, 0, 0, 7, 0, 32, 0, 0, 6, 23, 0, 0, 27, 43, 0, 33, 15, 2], [0, 0, 0, 0, 46, 0, 25, 0, 107, 7, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 15, 0, 0, 38, 21, 0], [0, 0, 0, 4, 66, 0, 1, 37, 24, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 14, 57, 11], [14, 0, 0, 49, 0, 0, 0, 0, 21, 39, 0, 0, 0, 0, 0, 34, 0, 0, 24, 0, 0, 0, 0, 0, 0, 37, 37, 51], [45, 0, 0, 16, 17, 0, 38, 22, 25, 14, 31, 0, 0, 0, 0, 20, 0, 0, 28, 0, 0, 0, 0, 14, 21, 24, 17], [14, 0, 0, 21, 0, 0, 31, 39, 33, 30, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 93, 20], [0, 0, 0, 79, 0, 0, 31, 6, 18, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 49, 2, 15], [0, 0, 1, 18, 27, 0, 42, 15, 55, 10, 0, 0, 0, 0, 47, 0, 0, 0, 28, 0, 0, 15, 37, 0, 14, 23, 12], [0, 0, 0, 0, 36, 0, 35, 36, 73, 35, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 12, 0, 17, 21, 37], [0, 0, 0, 7, 38, 0, 10, 20, 86, 19, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 35, 0, 0, 23, 81, 11], [0, 0, 0, 15, 83, 0, 20, 0, 78, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 18, 0, 15, 31, 13], [0, 0, 0, 18, 22, 0, 13, 55, 24, 70, 32, 0, 0, 38, 0, 0, 38, 0, 0, 0, 0, 9, 0, 39, 11], [5, 0, 2, 26, 55, 0, 19, 39, 0, 2, 2, 0, 1, 0, 19, 0, 2, 37, 39, 1, 2, 9, 26, 0, 17, 56, 11], [30, 0, 61, 43, 0, 29, 4, 42, 51, 0, 0, 0, 0, 0, 33, 0, 0, 26, 13, 0, 14, 0, 21, 0, 4], [0, 0, 0, 27, 81, 0, 34, 19, 13, 53, 46, 10, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 0, 60, 0, 22, 9, 19], [0, 0, 44, 0, 75, 8, 109, 12, 26, 0, 0, 3, 0, 36, 36, 21, 0, 24, 13], [0, 0, 0, 36, 30, 0, 87, 4, 31, 68, 0, 0, 0, 0, 0, 75, 0, 0, 13, 26, 0, 0, 0, 9, 0, 9, 14, 9], [0, 0, 4, 32, 78, 0, 55, 10, 47, 35, 1, 0, 0, 0, 0, 38, 0, 0, 0, 49, 0, 0, 22, 3, 0, 44], [0, 0, 20, 37, 57, 0, 21, 39, 10, 47, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 73, 0, 15, 6, 55], [0, 0, 0, 0, 0, 0, 10, 3, 58, 69, 0, 0, 0, 0, 0, 78, 0, 0, 0, 23, 0, 0, 0, 0, 0, 96, 31, 82], [29, 0, 0, 14, 14, 0, 36, 125, 73, 0, 0, 0, 15, 0, 0, 0, 42, 0, 0, 2, 16, 0, 19, 50, 30], [0, 0, 58, 40, 0, 63, 19, 44, 46, 0, 0, 0, 0, 0, 54, 0, 0, 0, 49, 0, 0, 0, 43, 0, 24, 14, 36], [0, 0, 17, 28, 43, 0, 44, 12, 31, 21, 12, 0, 0, 0, 0, 45, 0, 0, 13, 60, 4, 0, 8, 64, 0, 38, 13, 58], [5, 0, 7, 24, 33, 0, 88, 37, 118, 33, 27, 0, 0, 0, 0, 17, 0, 0, 2, 20, 0, 0, 0, 35, 0, 11, 39, 54], [0, 0, 0, 18, 31, 0, 174, 23, 49, 78, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 50, 0, 0, 33, 0, 56, 10], [12, 0, 0, 18, 55, 0, 0, 18, 22, 47, 15, 0, 0, 13, 15, 0, 0, 53, 37, 18, 0, 0, 8, 0, 25, 146, 65], [50, 0, 4, 27, 15, 0, 33, 69, 51, 39, 18, 1, 0, 18, 0, 31, 0, 0, 1, 5, 7, 0, 19, 39, 0, 45, 35, 62], [18, 0, 10, 29, 46, 0, 77, 21, 130, 42, 13, 0, 0, 5, 0, 65, 0, 0, 1, 12, 32, 0, 14, 41, 0, 47, 42, 57]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

