created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "X Mad X King X", "Alizayd Delnbone", "Solus Sanctus", "Xo Zen Xo", "Super Druid", "Tegan Parker", "Klengah", "Zaedy Zae", "Arriasa", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Tempest", "Druid", "Druid", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[237.8525, 253.1579, 267.275, 0.0, 31.6852, 72.9865, 9.1658, 36.6696, 393.4681, 54.6207, 69.3761, 624.1824, 64.7342, 551.9778, 1772.7857, 0.2212, 136.2115, 13.463, 11.8316, 116.5213, 2.4073, 232.7612, 45.8493, 2.0323], [449.5357, 812.234, 716.9195, 369.945, 38.5333, 317.3588, 280.462, 240.0667, 989.9286, 191.0442, 375.0192, 39.0926, 229.8316], [189.3861, 501.4, 766.5429, 40.6195, 528.8269, 48.4593, 0.0, 752.5158, 604.0213, 161.4036, 446.5373, 697.4795, 715.8065, 640.6341], [196.1475, 382.8158, 466.625, 88.1429, 350.5556, 425.9595, 317.3797, 338.3036, 294.766, 242.2874, 178.9541, 0.0, 205.5706, 203.5696, 466.8667, 379.4, 161.7434, 506.4231, 26.1407, 0.0, 286.4421, 532.6915, 117.36, 278.1194, 346.3836, 662.0484, 227.939], [1510.9464, 1317.8936, 1826.1839, 1464.945, 5.2667, 994.0647, 432.5823, 1799.4444, 1896.6429, 671.3894, 2338.0962, 75.3148, 1302.5474], [1491.7024, 833.3704, 3717.3919, 1347.7326, 2945.6786, 4981.4681, 2434.5287, 2109.4587, 124.2, 1111.8765, 14.1582, 1239.2444], [1743.3443, 1526.9211, 1144.9, 841.2738, 828.7593, 2488.7703, 950.3155, 2235.3036, 1739.4255, 2793.1264, 1615.8807, 68.2333, 525.2471, 565.8544, 1198.6, 2048.7429, 623.5752, 764.9231, 89.2333, 0.0, 606.4316, 1310.8936, 347.6873, 1120.411, 1143.6613, 1608.3293], [1743.4918, 1196.0263, 2438.375, 1030.5476, 2333.5926, 2681.9865, 542.4866, 997.9911, 1880.1277, 2065.0, 1549.6881, 88.9333, 663.3471, 512.1203, 597.8222, 1703.0571, 370.9912, 3614.2115, 103.9185, 2176.5789, 1084.3191, 380.2073, 604.1791, 1805.137, 1388.6452, 1686.0976], [1543.4262, 73.0, 3384.2, 2527.9643, 1359.0926, 3296.0, 617.246, 2665.2411, 3379.7872, 1357.6667, 2744.3028, 0.0, 1306.4882, 616.3165, 2632.0444, 2298.4857, 268.6637, 2309.1154, 129.2593, 610.8211, 1808.9149, 469.5927, 1876.5672, 1496.4795, 1490.0, 1925.0854], [1763.8361, 3261.6053, 731.425, 1903.6667, 1002.037, 3311.7297, 2080.8717, 3129.6071, 3626.6596, 2788.7931, 2161.7523, 1341.2706, 1346.2658, 2791.6667, 55.8571, 1070.4248, 2570.8942, 230.537, 2734.1684, 3102.4574, 675.3564, 2210.1343, 3195.8904, 2710.0645, 1256.939], [2184.4918, 3637.0526, 3002.65, 2568.6667, 1461.7222, 3879.8784, 2073.2139, 2125.625, 4802.234, 4153.7471, 1334.9633, 58.2, 2364.3647, 148.3165, 2448.0, 3042.0143, 791.0354, 3791.2885, 79.0704, 0.0, 2376.0632, 840.3723, 867.9418, 1265.3284, 2400.3973, 1638.3065, 2672.1707], [1715.2459, 4131.5789, 1971.225, 2271.1667, 3026.1296, 3649.5541, 2180.1176, 4109.6964, 3598.1915, 3438.2184, 2790.4771, 21.1, 1564.8412, 1061.9241, 1211.4222, 3654.4143, 1461.292, 3881.0769, 97.2704, 17.6, 1312.0947, 3061.8936, 786.5127, 1649.8507, 3559.5753, 3079.9355, 2287.3415]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

