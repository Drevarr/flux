created: 20230703220627000
creator: Drevarr
modified: 20230705163541342
modifier: drevarr
tags: ChartData
title: 202307032206_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Smol Daddy Tika", "Necrotic Windrunner", "Demon Sekhmet", "Primal Clone", "Arcanophage Farra", "Cpt Z Brannigan", "Morvtron", "Grasszanine", "Be\u00eb", "Charr Surethang", "Eibh\u00ebar", "Smol Dome Dim", "Lord Erin The Wise", "Be\u00eb", "Oo Dads Mad", "Lucky Leipreach\u00e1n", "\u00c1rkantor", "Morv\u00e4rth", "\u00c1rkantor", "Ateriuz", "Inedible Plant", "Mike The Archmagus", "Kary\u00edna", "Johosh The Mighty", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Berserker", "Berserker", "Reaper", "Berserker", "Chronomancer", "Spellbreaker", "Scrapper", "Scrapper", "Spellbreaker", "Reaper", "Berserker", "Chronomancer", "Berserker", "Weaver", "Scourge", "Berserker", "Scrapper", "Herald", "Reaper", "Vindicator", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 16.1429, 0.0, 14.5982, 2.2952, 0.0, 8.2366, 0.0, 0.2162, 0.0, 0.0, 62.6667, 0.0, 0.0, 0.0, 8.7228, 0.0, 43.6759, 196.2738, 0.0, 0.0, 0.0, 57.8889], [0.0, 0.0, 5.8772, 68.8981, 243.0357, 218.6386, 0.0, 205.2656, 0.0], [0.0, 28.8381, 14.0229, 41.9892, 31.814, 59.473, 0.0, 29.3721, 59.1296, 0.0, 50.875, 30.5325, 17.6535, 0.0, 91.0278, 135.381, 9.0, 0.0, 20.4531, 79.0643], [0.0, 25.5417, 58.119, 0.0, 0.0, 60.5703, 0.0, 42.771, 37.9355, 83.6279, 0.0, 0.0, 0.0], [0.0, 0.0, 12.3571, 0.0, 31.0051, 0.0, 21.9618, 0.0, 0.0, 94.9324, 0.0, 0.0, 40.2222, 0.0, 0.0, 0.0, 20.0495, 0.0, 63.3611, 123.5476, 24.9398, 22.1977, 64.5625, 50.0877], [0.0, 0.0, 0.0, 37.3095, 0.0, 0.0, 27.545, 0.0, 42.1908, 30.0323, 0.0, 5.1351, 6.6364, 0.0, 14.537, 0.0, 0.0, 56.6494, 0.0, 0.0, 7.7963, 91.4881, 24.1205, 0.0, 58.8594, 132.7485], [64.2727, 52.2277, 0.0, 19.9167, 196.5833, 156.4217, 0.0, 0.3281, 209.9123], [0.0, 0.0, 0.0, 0.0, 72.9125, 0.0, 0.4427, 0.2688, 0.0, 107.5135, 117.5636, 0.0, 258.7407], [11.6321, 0.0, 0.0, 10.4762, 31.2034, 0.0, 44.7541, 0.0, 17.3206, 8.2903, 36.2162, 58.9636, 0.0, 9.0741, 0.0, 0.0, 4.3117, 13.9208, 0.0, 65.4352, 85.0357, 66.9036, 0.0, 0.0, 102.3918], [104.7273, 0.0, 0.0, 0.0, 0.0, 0.0, 158.5556, 227.6667, 37.6024, 0.0, 18.2188, 274.9883], [0.0, 0.0, 32.5, 11.0079, 18.7966, 95.3093, 83.019, 0.0, 51.1613], [3.1762, 0.0, 29.7917, 13.3889, 11.1017, 0.0, 35.8378, 5.1143, 0.0, 0.914, 0.0, 18.3108, 33.2909, 0.0, 82.1667, 0.0, 0.1786, 14.6234, 18.0297, 0.0, 109.1111, 164.1429, 30.9639, 37.686, 26.6719, 100.614], [0.0, 0.0, 80.1053, 312.4907, 523.9762, 86.8795, 0.0, 15.1719, 54.6316], [0.0, 2.4722, 0.0, 0.0, 74.0127, 14.5905, 24.2595, 89.172, 42.2326, 116.973, 29.7455, 0.0, 304.8519, 0.0, 107.4643], [25.9948, 0.0, 91.0139, 39.4762, 0.0, 0.0, 89.5856, 22.419, 16.7557, 66.6129, 0.0, 16.0, 39.1163, 278.2778], [0.0, 0.0, 21.9048, 0.0, 0.0, 10.5184, 8.6095, 57.7636, 0.0, 63.2963, 0.0, 0.0, 27.1818, 7.901, 0.0, 86.7593, 319.5, 67.6627, 28.3488, 31.6875, 354.4561], [0.0, 64.0694, 28.1349, 154.5932, 0.0, 74.0393, 11.419, 102.1527, 59.9247, 108.8837, 91.7568, 59.6364, 111.6279, 234.8519, 0.0, 0.0, 95.8571, 0.0], [612.6548, 106.506, 10.7442, 31.7031, 471.0468], [51.7662, 146.8119, 0.0, 84.1944, 254.7262, 109.253, 0.0, 0.0, 504.0351], [0.0, 0.0, 130.2222, 45.1587, 0.0, 0.0, 163.4994, 112.0762, 44.3511, 187.9032, 142.3023, 9.3243, 329.1818, 43.8372, 0.0, 0.0, 0.0, 66.2338, 28.8317, 0.0, 19.713], [25.399, 51.8194, 12.7937, 0.0, 0.0, 78.9493, 14.6095, 53.4198, 75.4731, 197.3023, 383.2973, 219.6364, 0.0, 306.8519, 0.0, 105.5357, 22.6623, 36.1683, 66.1579, 73.3426, 256.7143, 117.4578, 37.7442, 0.0, 287.5146], [10.9637, 34.7083, 20.4048, 68.2881, 9.1212, 150.8504, 62.1143, 131.6107, 2.9892, 38.907, 163.9054, 0.0, 0.0, 77.6296, 0.0, 0.0, 89.8571, 0.0, 0.0, 39.7222, 512.75, 12.1325, 0.0, 63.625, 247.3567], [0.0, 0.0, 34.2639, 11.9048, 0.0, 160.8454, 79.8476, 14.4885, 29.1398, 77.9535, 204.527, 670.7273, 57.9302, 508.4444, 19.8438, 309.5029], [28.5026, 0.0, 78.3056, 51.9603, 0.0, 69.4848, 119.4854, 32.0762, 146.2595, 19.8925, 212.8372, 133.5811, 496.2909, 0.0, 147.7407, 0.0, 0.0, 21.1558, 0.0, 0.0, 200.0648, 519.8571, 89.9157, 62.0814, 0.0, 302.4211], [24.2642, 0.0, 9.9306, 13.6746, 36.7797, 104.3802, 4.5048, 51.1069, 28.5806, 19.6977, 83.9189, 664.6727, 0.0, 342.0185, 0.0, 0.0, 126.0779, 172.6832, 0.0, 210.963, 427.1429, 260.4458, 0.0, 89.4219, 674.6784], [18.8808, 0.0, 0.0, 102.2302, 0.0, 0.0, 173.3219, 0.0, 67.8702, 143.5484, 169.9302, 322.2973, 340.5455, 0.0, 174.7407, 0.0, 0.0, 127.1948, 117.4851, 36.6842, 19.1852, 668.7857, 295.0964, 0.0, 182.5938, 542.3918], [0.0, 56.7361, 187.754, 0.0, 182.5615, 43.6, 203.7252, 23.3441, 99.6977, 419.6892, 554.1455, 0.0, 22.7593, 0.0, 0.0, 433.8442, 155.3861, 116.9298, 85.3889, 761.5952, 601.0, 135.3372]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

