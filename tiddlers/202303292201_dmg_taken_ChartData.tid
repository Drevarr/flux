created: 20230329220116000
creator: Drevarr
modified: 20230705163523268
modifier: drevarr
tags: ChartData
title: 202303292201_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Bringer", "Legacy Of Mathus", "Domina Flagbringer", "Rina Of Theros", "Plum Crazybringer", "Smol Gluvs", "Bee Honeybringer", "Jorja Peachbringer", "Morton Saltbringer", "Nazhul Naxxremis", "Sizzln Sisigbringer", "K\u00f4sair", "Gavann", "Ark Darkness", "Sp\u00edcy Cheese", "Big Macbringer", "Brioche Bunbringer", "Xanvias Tlesel", "Boysto Yardbringer", "Lord Mac\u00fcmbeiro", "Newtype Khan", "Spicy Gyrosbringer", "\u00c4lplrmagron\u00e4bringer", "Sister Elon\u00edth", "Bork Borkbringer", "Cael Saladbringer", "Oo Dads Mad", "Ryvalia Fazebringer", "Pieca Pizzabringer", "Charred Fishbringer", "Zaylen Harker", "Ravioli Fetabringer", "Avian Nefaris", "Arkintor", "Bubble Teabringer", "Redoxone", "Band Aidbringer", "Bella Lunabringer", "Abigail Ryn", "Johosh The Great", "Bura Beignetbringer", "Kiloak", "Leana Deeb", "Morv\u00e4rth", "Verin Lan", "Mesmer Kamoidra", "Grasszanine", "K\u00f4sair", "Lil Red Robin", "Jr Baldassari"];
const professions = ["Scrapper", "Berserker", "Spellbreaker", "Scourge", "Scrapper", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Weaver", "Berserker", "Firebrand", "Firebrand", "Berserker", "Tempest", "Chronomancer", "Berserker", "Vindicator", "Berserker", "Spellbreaker", "Scrapper", "Vindicator", "Dragonhunter", "Tempest", "Vindicator", "Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Tempest", "Firebrand", "Soulbeast", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Weaver", "Scourge", "Renegade", "Chronomancer", "Spellbreaker", "Spellbreaker", "Firebrand", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.1311, 0.0, 347.9189, 98.46, 487.1647, 484.2793, 0.0, 146.1026, 109.6061, 1355.75], [58.3833, 0.0, 274.2546, 40.5503, 531.6512, 322.3333, 0.0, 37.9394, 23.087, 150.7273], [140.1525, 8.4737, 353.0563, 52.3032, 466.9119, 81.5, 154.3469, 108.4444, 297.6316], [60.5484, 92.0769, 279.1876, 69.8108, 531.241, 85.4649, 0.0, 41.025, 146.7, 0.0], [245.1935, 64.125, 423.4482, 92.6861, 536.255, 350.7233, 0.0, 62.0, 121.9615, 189.8], [28.1639, 0.0, 274.0711, 120.9342, 430.0593, 496.9778, 22.6324, 18.225, 43.7714, 403.5143], [10.661, 0.0, 248.8184, 92.9718, 495.8399, 145.5575, 0.0, 10.3077, 139.8077, 102.8857], [58.5, 0.0, 242.3057, 82.38, 591.5679], [32.2097, 20.6579, 248.1608, 20.7133, 598.5252, 259.1875, 93.2308, 253.8235, 64.4722], [65.918, 0.0, 492.5033, 60.0364, 703.888], [29.6984, 14.4062, 352.4882, 62.77, 450.1096, 288.0833, 0.0, 78.425, 0.0, 364.1875], [71.7302, 0.0, 272.7978, 82.0, 391.7142, 365.2967, 0.0, 345.6053], [38.1613, 0.0, 244.447, 55.8733, 399.2606, 144.2393, 0.0, 40.0, 0.0, 8.6667], [23.3167, 0.0, 312.2194, 391.5259], [542.7254, 273.3773, 15.2647], [0.0, 114.7778, 241.5695, 136.8667, 323.7481, 97.0424, 0.0, 506.4865, 65.0602, 152.75], [51.3387, 0.0, 196.3696, 35.4811, 362.3316, 280.2365, 0.0, 99.4872, 239.6571, 146.0], [113.9032, 51.3704, 245.2692, 43.8079, 302.9073, 191.9826, 0.0, 17.85, 72.3529, 200.5455], [44.75, 53.0, 369.9259, 57.8862, 256.768, 270.0213, 3.9322, 0.0, 56.0, 17.3448], [31.7308, 499.2111, 0.0, 283.0919, 282.6739, 101.0893, 3.35], [39.7797, 0.0, 221.1315, 58.7303, 305.9099, 256.1342, 0.0, 121.4474, 89.0392, 247.9394], [25.7414, 0.0, 195.7648, 58.22, 359.1914, 147.0409, 45.2745, 119.8438, 0.0, 0.0], [24.4516, 0.0, 256.1843, 60.2685, 293.1697, 231.9448, 0.0, 53.2105, 79.5075, 208.8788], [91.1, 518.4444, 107.9953, 0.0, 83.0833, 14.5588], [48.322, 43.3448, 240.899, 37.2754, 310.6551, 74.9592, 26.5429, 43.275, 148.7931], [16.625, 0.0, 198.0807, 79.7181, 296.0472, 211.6754, 0.0, 92.4643, 0.0], [17.4915, 0.0, 101.45, 974.5503], [70.6032, 72.5556, 167.3097, 29.9508, 305.5048, 452.7436, 0.0, 19.25, 63.9429, 144.7778], [181.3, 62.56, 374.4884, 130.0861, 0.0, 8.325, 15.6, 213.1176], [28.55, 0.0, 242.6072, 12.9648, 243.5465, 80.625, 0.0, 966.6765, 0.0, 79.2258], [29.2097, 0.0, 190.5611, 25.3814, 320.2098, 197.8438, 0.0, 6.0938, 0.0, 46.8182], [92.4516, 0.0, 188.9416, 48.958, 261.1943, 166.1304, 57.0769, 129.1711, 13.5556], [5.4019, 200.2473, 410.0964, 75.8983, 0.0, 9.625, 89.1429, 217.4444], [31.1967, 0.0, 196.319, 26.0069, 276.9983, 0.0, 17.5128, 16.0208, 21.2778], [36.0508, 0.0, 222.2452, 59.7846, 235.6658, 98.9592, 62.9211, 117.7027, 3.0312], [597.4804, 148.1565], [39.9839, 0.0, 158.6621, 69.9733, 260.5248, 203.4678, 0.0, 54.7586, 6.8533, 18.1944], [53.1613, 68.8824, 138.6074, 49.72, 315.2242, 64.9826, 0.0, 92.2895, 54.18, 147.9667], [5.8852, 29.4242, 159.4115, 31.3165, 271.7408], [54.5254, 0.0, 162.165, 57.1429, 235.7443, 57.9598, 2.0704, 2.0833, 5.4286, 72.4545], [89.3333, 0.0, 146.6914, 73.6111, 190.9301, 57.0263, 0.0, 12.175, 21.9714, 17.12], [408.836, 92.0917, 0.0, 11.9189, 67.4516, 20.1714], [172.5357, 155.6492, 81.9067, 17.4737, 58.8519], [263.7642, 257.3443, 32.9, 6.6667, 298.4783], [258.2838, 0.0, 117.7895, 179.6122, 0.0], [69.6704, 63.2276], [7.8908, 168.2911, 0.0, 648.0, 97.8, 129.0286], [199.8824], [0.0, 2.46, 150.9167], [32.0345]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

