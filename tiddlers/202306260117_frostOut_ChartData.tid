created: 20230626011754000
creator: Drevarr
modified: 20230705163537922
modifier: drevarr
tags: ChartData
title: 202306260117_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Seiker Novus Terra", "Tegan Parker", "Etchery Of Ascalon", "Zhavashian", "Elon The Archmagus", "Daddy Demon"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.8753, 0.0, 19.942, 41.032, 87.8421, 38.6796, 59.6869, 55.9717, 19.1929, 35.7029, 153.2, 0.0, 0.0], [50.5683, 91.6641, 80.1472, 152.1274, 110.4192, 30.6398, 70.6094, 94.6512, 17.0544, 104.0827, 47.4904, 106.9654, 85.0531, 244.0466, 103.6946, 0.0, 219.4, 45.2088, 0.0], [117.2808, 151.8804, 216.7776, 14.6731, 55.2086, 116.9532, 98.2211, 70.5806, 74.197, 233.2149, 202.3632, 126.5101, 0.0, 108.56, 39.9895, 70.0269, 94.7538, 40.3682, 84.8467, 47.7319, 0.0, 192.4, 68.7744, 0.0], [60.7014, 60.2563, 144.8289, 220.7822, 173.4048, 103.5989, 107.8818, 121.149, 0.0, 123.9224, 63.6617, 92.3757, 156.9396, 184.7213, 378.1642, 17.102, 105.938, 42.5731, 72.7836, 110.424], [82.6443, 101.8076, 0.0, 205.1003, 241.3152, 93.287, 104.287, 74.0502, 257.7645, 159.0519, 113.4411, 343.9958, 263.4181, 184.0271, 36.8999, 153.226, 120.3054, 95.4912, 149.4084, 113.433], [74.1258, 0.0, 271.0661, 128.2241, 152.6851, 274.7578, 380.8579, 283.4865, 79.7269, 194.166, 200.6214, 120.3871, 132.3368, 103.49, 114.2603, 160.2187, 58.5851, 832.6, 132.7104, 44.7424], [76.3992, 130.284, 78.939, 248.1948, 285.6384, 76.729, 17.4821, 129.7674, 0.0, 219.438, 131.2127, 144.0249, 320.4625, 498.8166, 410.4065, 40.7896, 163.3, 156.1387, 79.6044, 63.8274, 66.8458, 89.9181, 55.151, 16.0218, 317.8, 45.6408, 15.6064]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

