created: 20230310230833000
creator: Drevarr
modified: 20230705163521558
modifier: drevarr
tags: ChartData
title: 202303102308_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Alatreon", "Raimaru Hanzo", "Xmus Jaxnflaxn Waxn", "Sumatra Satyricon", "Air One Com", "Lord Erin The Wise", "Elisha Raskae", "Dark Sidiuz", "K\u00f4sair", "R\u00fana Bierdna", "Cat Wigglebooty", "Oo Dads Mad", "Sub Train", "Akira Moonbright", "High Sorcer Baradun", "Legacy Of Mathus", "Kmpek", "K\u00f4sair", "Venomina The Siren", "Ace Hammers", "Mac Chiato", "Blanco Padre Guard", "Smol Gluvs", "Ark Darkness", "\u00c1rkantor", "Cerys Fireblade", "Sp\u00edcy Cheese", "Zefirokai", "Sofya De Nova", "Demon Sekhmet", "Riann Swordbreak", "Aronorf Xideliesi", "Arcanophage Farra", "Be\u00eb", "Rozaalyna", "Raelyn Sunray", "Xanvias Tseli", "Morton Saltbringer", "Tegan Parker", "Mistwalker Caelon", "Koralia Danai", "Zaylen Harker", "Zadie Miststep", "Black Raspberry Pie", "Primal Clone", "Kiloak", "Viral Marketing", "Bella Sassy", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Tempest", "Spellbreaker", "Holosmith", "Soulbeast", "Firebrand", "Weaver", "Virtuoso", "Scourge", "Spellbreaker", "Spellbreaker", "Scrapper", "Spellbreaker", "Firebrand", "Herald", "Tempest", "Berserker", "Vindicator", "Berserker", "Tempest", "Vindicator", "Tempest", "Firebrand", "Scourge", "Firebrand", "Vindicator", "Berserker", "Berserker", "Tempest", "Weaver", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Scourge", "Scourge", "Firebrand", "Berserker", "Chronomancer", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 22, 9, 5, 3, 35], [3, 1, 7, 1, 0, 2, 0, 5, 1, 10, 12, 7, 2, 2, 1, 5, 4, 5, 12], [1, 0, 6, 4, 1, 4, 0, 4, 0, 7, 0, 0, 0, 0, 6, 0, 7, 10, 4, 5, 4, 4, 2, 1, 0, 14], [5, 7, 1, 0, 3, 31, 0, 5, 4, 0, 3, 1, 3, 1, 3, 0, 1, 0, 1, 5, 1, 3, 5, 1, 0, 5, 0, 1], [8, 17, 14, 7, 8, 52], [4, 12, 8, 4, 4, 31, 1, 6, 4, 1, 4, 5, 5, 0, 3, 1, 0, 1, 0, 3, 0, 1, 0, 0, 3, 0, 5, 2, 0], [3, 11, 7, 5, 17, 64, 1], [3, 1, 4, 5, 6, 64, 0, 1, 7, 2, 4, 4, 4, 2, 5], [1, 11, 8, 3, 4, 5, 6, 0, 6, 1, 0, 1, 8, 0, 11, 11, 10, 7, 3, 3, 4, 2, 1, 10], [4, 14, 10, 5, 4, 45, 7, 7, 1, 1, 1, 10, 1, 6, 1, 0, 1], [35, 0, 10, 6, 2, 3, 6, 3, 1, 8, 0, 0, 1, 8, 10, 8, 7, 4, 7, 1, 0], [5, 10, 8, 4, 4, 68, 0, 12, 9, 4, 6, 4], [2, 11, 10, 2, 5, 3, 7, 1, 11, 1, 0, 3, 1, 13, 0, 10, 7, 10, 5, 7, 4, 5, 3, 1, 17], [2, 12, 9, 1, 4, 65, 0, 3, 2, 1, 4, 1, 3, 0, 3, 1, 0, 2, 1, 5, 0, 2, 6, 4, 4, 6, 1], [2, 17, 3, 7, 4, 65, 1, 6, 5, 0, 0, 4, 0, 7, 0, 0, 1, 10, 3, 0, 0, 2, 1, 1, 0, 7], [4, 8, 9, 1, 3, 33, 0, 6, 6, 0, 2, 2, 4, 0, 5, 1, 0, 1, 0, 7, 0, 9, 12, 10, 8, 3, 2, 7, 2, 1, 11], [1, 14, 14, 3, 2, 34, 0, 4, 2, 1, 9, 4, 2, 6, 0, 0, 0, 0, 1, 8, 19, 12, 8, 11, 3, 3, 2, 0, 14], [8, 18, 11, 8, 3, 131], [6, 19, 13, 2, 3, 38, 1, 11, 9, 3, 5, 5, 7, 2, 4, 0, 0, 2, 1, 6, 0, 3, 9, 7, 3, 3, 0, 4, 2, 4, 9], [2, 2, 8, 5, 9, 64, 0, 4, 6, 2, 5, 6, 5, 0, 7, 1, 0, 1, 1, 1, 7, 9, 10, 5, 5, 3, 3, 4, 1, 7], [0, 6, 5, 3, 70, 0, 8, 3, 1, 2, 2, 4, 1, 4, 1, 3, 1, 6, 0, 7, 9, 6, 6, 8, 1, 4, 3, 3, 19], [4, 16, 10, 4, 3, 57, 1, 9, 5, 3, 5, 2, 4, 1, 6, 1, 1, 1, 1, 4, 1, 7, 12, 4, 7, 3, 3, 6, 3, 1, 9], [1, 4, 8, 4, 5, 71, 0, 8, 6, 2, 6, 1, 7, 0, 6, 1, 0, 1, 0, 7, 0, 8, 7, 5, 7, 5, 6, 3, 6, 1, 8], [52, 1, 13, 8, 2, 5, 9, 10, 1, 11, 3, 0, 2, 10, 1, 11, 17, 7, 5, 5, 6, 1, 5, 5, 12], [2, 13, 26, 2, 6, 77, 0, 3, 4, 0, 2, 1, 4, 2, 4, 1, 0, 0, 0, 7, 0, 7, 4, 9, 6, 5, 3, 4, 2, 1, 11], [5, 16, 12, 6, 4, 81, 1, 10, 6, 2, 2, 2, 11, 2, 2, 0, 1, 2, 0, 1, 1, 5, 5, 11, 4, 4, 3, 2, 3, 1, 7], [8, 15, 7, 1, 8, 60, 1, 5, 5, 1, 2, 6, 4, 2, 7, 2, 0, 4, 1, 6, 1, 7, 8, 6, 7, 7, 3, 4, 3, 4, 18], [6, 17, 8, 6, 5, 87, 0, 7, 11, 4, 4, 6, 6, 1, 6, 1, 0, 1, 1, 8, 0, 9, 7, 10, 6, 7, 8], [7, 13, 7, 6, 7, 109, 1, 5, 8, 5, 1, 4, 6, 0, 4, 2, 0, 1, 0, 6, 0, 5, 3, 7, 4, 2, 2, 6, 3, 1, 8], [8, 16, 9, 3, 4, 94, 0, 8, 5, 2, 7, 7, 6, 2, 10, 1, 0, 4, 7, 0, 14, 7, 10, 5, 9], [8, 25, 13, 4, 8, 74, 0, 6, 7, 2, 4, 2, 8, 0, 10, 2, 1, 3, 0, 4, 0, 14, 11, 7, 5, 5, 2, 0, 2, 2, 16], [7, 11, 10, 8, 6, 88, 0, 9, 6, 4, 2, 9, 4, 1, 5, 3, 0, 4, 1, 5, 1, 9, 10, 10, 6, 6, 4, 2, 3, 1, 10], [5, 9, 12, 6, 7, 113, 0, 13, 8, 3, 6, 5, 3, 6, 0, 4, 2, 4, 0, 10, 7, 10, 4, 8, 4, 6, 1, 0, 3], [12, 21, 12, 6, 7, 87, 0, 8, 8, 4, 7, 7, 1, 5, 1, 0, 2, 1, 3, 0, 7, 14, 9, 10, 8, 2, 6, 5, 0, 18], [6, 18, 14, 8, 6, 95, 1, 8, 6, 4, 6, 5, 8, 1, 8, 1, 0, 1, 1, 11, 0, 3, 13, 8, 6, 5, 1, 10, 7, 5, 13], [14, 25, 13, 5, 8, 94, 2, 10, 5, 3, 3, 6, 2, 7, 1, 1, 3, 2, 3, 10, 11, 7, 7, 5, 3, 6, 3, 4, 18], [12, 17, 10, 10, 6, 99, 0, 14, 10, 3, 7, 5, 10, 2, 7, 0, 1, 3, 1, 4, 1, 13, 13, 9, 9, 5, 5, 5, 4, 3, 14], [7, 20, 13, 11, 6, 97, 1, 13, 9, 7, 4, 6, 1, 4, 1, 0, 3, 0, 10, 1, 8, 17, 9, 11, 5, 5, 9, 6, 3, 16], [4, 16, 6, 7, 7, 125, 0, 6, 7, 3, 2, 7, 7, 2, 5, 0, 0, 4, 1, 10, 0, 16, 14, 10, 5, 3, 7, 4, 7, 4, 15], [11, 25, 9, 11, 6, 126, 2, 11, 9, 4, 10, 6, 8, 2, 5, 1, 0, 2, 0, 7, 0, 11, 18, 13, 6, 8, 7, 4, 4, 0, 10], [9, 12, 16, 10, 8, 154, 2, 11, 11, 7, 6, 8, 6, 3, 10, 2, 0, 2, 5, 1, 7, 14, 11, 8, 6, 3, 9, 3, 3, 13], [12, 26, 14, 10, 10, 138, 1, 9, 8, 5, 5, 7, 7, 2, 7, 1, 1, 3, 13, 12, 16, 10, 3, 7, 3, 8, 5, 3, 20], [6, 13, 15, 8, 7, 154, 0, 18, 13, 3, 7, 5, 8, 1, 3, 3, 1, 6, 1, 7, 1, 10, 14, 12, 8, 4, 6, 6, 4, 2, 20], [12, 21, 18, 10, 16, 114, 0, 11, 9, 1, 4, 10, 10, 1, 22, 1, 0, 4, 1, 24, 0, 8, 14, 23, 5, 5, 3, 3, 4, 6, 8], [19, 16, 19, 10, 22, 148, 0, 8, 16, 2, 12, 6, 5, 1, 6, 0, 0, 3, 1, 8, 0, 10, 8, 15, 8, 4, 3, 4, 3, 1, 11], [5, 27, 11, 6, 9, 156, 0, 16, 8, 4, 6, 20, 6, 2, 9, 2, 0, 3, 3, 12, 1, 8, 12, 10, 10, 7, 7, 8, 7, 2, 10], [11, 31, 20, 8, 8, 151, 2, 11, 7, 4, 4, 6, 9, 1, 10, 6, 0, 3, 2, 11, 1, 15, 14, 12, 6, 7, 6, 3, 2, 2, 16], [8, 22, 18, 11, 6, 160, 2, 14, 8, 5, 5, 11, 11, 0, 7, 0, 1, 5, 9, 2, 13, 15, 15, 12, 6, 10, 5, 5, 3, 16], [12, 17, 12, 15, 5, 155, 2, 17, 14, 4, 5, 11, 8, 0, 9, 1, 2, 2, 1, 18, 2, 19, 17, 9, 11, 5, 10, 12, 6, 3, 19], [10, 25, 20, 13, 7, 151, 2, 8, 9, 5, 8, 14, 13, 4, 10, 4, 0, 4, 1, 10, 3, 13, 30, 20, 16, 14, 7, 16, 13, 7, 25]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

