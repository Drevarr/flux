created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Lord Sahan", "Belvyn Brightblade", "Blanco Padre Guard", "Drevarr Moonwillow", "Audens Silvermarker", "Klenga", "Sub Train", "Crusader Siolith", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 185.5527, 100.5774, 0.0, 0.0, 4.14, 0.0, 15.6792, 0.0, 25.0673, 0.0, 0.0, 46.5713, 0.0], [505.6016], [14.7867, 120.1299, 387.0706, 0.0, 0.0], [16.4228, 209.2403, 176.4676, 0.0, 0.0, 0.0, 0.0, 0.0, 22.9586, 0.0, 0.0, 0.0, 98.1548, 0.0, 0.0], [1.5126, 274.0991, 177.382, 0.0, 5.089, 7.728, 0.0, 35.4089, 7.245, 0.0, 3.3633, 0.0, 107.3438, 10.836, 0.0], [18.1824, 424.1205, 92.6531, 0.0, 0.0, 14.4072, 0.5788, 129.2227, 6.4078], [122.06, 773.7943, 250.5292, 0.0, 40.1856, 0.0, 229.047, 15.1984, 10.0654, 0.0, 0.0, 395.3341, 3.06, 0.0], [14.2928, 796.9179, 374.5746, 0.0, 171.8376, 38.3222, 227.7404, 37.513, 0.0, 0.0, 1.7335, 293.8379, 19.062, 0.0], [43.4032, 751.2347, 688.8028, 47.9136, 0.0, 172.9938, 222.3732, 96.8498, 0.0, 0.0, 436.0579, 74.25, 0.0], [30.0056, 1250.9298, 747.9301, 0.0, 0.0, 45.54, 0.0, 225.6498, 0.0, 57.792, 12.8038, 0.0, 599.3708, 80.298, 0.0], [35.5622, 1742.7291, 1161.2118, 16.3199, 111.9456, 152.9167, 412.8856, 63.7882, 98.0297, 0.0, 602.0857, 65.718, 3.9006], [67.4201, 1854.3991, 1209.0623, 0.0, 109.7928, 12.2366, 354.6112, 57.2194, 67.713, 38.6447, 643.436, 94.338], [71.711, 1596.6557, 991.4493, 65.869, 118.2384, 49.7113, 680.9999, 148.0234, 88.7107, 87.912, 59.3594, 915.1369, 71.082]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

