created: 20230722082451000
creator: Drevarr
tags: ChartData
title: 202307220824_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Kayrin Willowroot", "Jmbrage Necro", "Xx Zen Xx", "Drac Tepes", "Aronorf Xideliesi", "Vesnan", "Luke The Ghastly", "Vee Nemesis"];
const professions = ["Druid", "Reaper", "Druid", "Scourge", "Firebrand", "Reaper", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1111, 0.0312, 0.066, 0.106, 0.0233, 0.0156, 0.0764, 0.0436, 0.0179, 0.1339, 0.1053, 0.1333, 0.0, 0.0488, 0.0096, 0.0385, 0.0, 0.0337], [0.0, 0.0185, 0.4737, 0.2035, 0.2619, 0.5529], [0.0667, 0.0625, 0.0377, 0.1987, 0.093, 0.0312, 0.0764, 0.0561, 0.0, 0.1093, 0.0175, 0.0267, 0.0988, 0.0976, 0.0322, 0.0769, 0.0, 0.0787], [0.1111, 0.193, 0.1327, 0.0, 0.1238, 0.6824, 0.2159, 0.2273], [0.0, 0.0, 0.0283, 0.1258, 0.0, 0.125, 0.0972, 0.0249, 0.0536, 0.0929, 0.1228, 0.2667, 0.0123, 0.0569, 0.0322, 0.0481, 0.0, 0.0637, 0.2059, 0.0833, 0.0727, 0.0263, 0.0, 0.0351, 0.0177, 0.0685, 0.0762, 0.0941, 0.0455, 0.0253], [0.2, 0.5938, 0.1415, 0.3245, 0.0465, 0.375, 0.1181, 0.0467, 0.0, 0.082, 0.3333, 0.3867, 0.3086, 0.4797, 0.1061, 0.1346, 0.1154, 0.1348], [0.125, 0.4151, 0.6689, 0.7442, 0.7969, 0.4028, 0.243, 0.1067, 0.7901, 0.4634, 0.3248, 0.8173, 0.1154, 0.2846, 0.5139, 0.1273, 0.0197, 0.0526], [0.4, 0.25, 0.2264, 0.7881, 0.3256, 0.6719, 0.0903, 0.1838, 0.0, 0.2787, 0.0, 0.28, 0.4568, 0.0244, 0.1994, 0.2885, 0.1538, 0.3933, 0.2353, 0.0694, 0.5091, 0.0, 0.037, 0.1404, 0.5929, 0.1918, 0.5905, 0.7647, 0.0795, 0.1667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

