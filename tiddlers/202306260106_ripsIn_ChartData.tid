created: 20230626010646000
creator: Drevarr
modified: 20230705163537329
modifier: drevarr
tags: ChartData
title: 202306260106_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Pale Pam", "Liyo Morgaine", "Lady The Mirage", "Charr Surethang", "Necrotic Windrunner", "Aribel Darkbringer", "Pixzil", "Phageir", "Microsakis", "Elonith Requiem", "Iskalla", "Rednuii", "Yngvar The Burdened", "Xanvias", "Drevarr Moonwillow", "Gamora Titus", "Gestern Yesteryear"];
const professions = ["Druid", "Vindicator", "Virtuoso", "Berserker", "Scourge", "Reaper", "Dragonhunter", "Catalyst", "Berserker", "Scourge", "Firebrand", "Tempest", "Scourge", "Reaper", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0722, 0.0, 0.2931, 0.0, 0.0493, 0.0833, 0.0938, 0.1731, 0.0889], [0.0, 0.2241, 0.0, 0.169, 0.5417, 0.0781, 0.2115], [0.0563, 0.0962, 0.0, 0.0, 0.0, 0.0781, 0.0182, 0.0303, 0.0, 0.0645, 0.0, 0.0, 0.0, 0.0, 0.1579, 0.3774, 0.1429, 0.1111, 0.0392, 0.0, 0.0118, 0.0, 0.0102, 0.0145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1719, 0.0341], [0.0, 0.1111, 0.0, 0.0, 0.2784, 0.0, 0.2414, 0.0, 0.1056, 0.2083, 0.0813, 0.0769, 0.0222, 0.0, 0.0, 0.0781], [0.0825, 0.0, 0.1379, 0.0, 0.0704, 0.3542, 0.0563, 0.1346, 0.0, 0.0, 0.0, 0.0469, 0.0, 0.0823, 0.0, 0.0323, 0.04, 0.0233, 0.0222, 0.0, 0.0263, 0.0377, 0.0, 0.0, 0.037, 0.0686, 0.0, 0.0353, 0.0, 0.0714, 0.029, 0.0238, 0.075, 0.027, 0.0, 0.0, 0.0], [0.0, 0.1905, 0.0, 0.0706, 0.268, 0.0, 0.2414, 0.0, 0.2535, 0.2917, 0.1437], [0.0, 0.1724, 0.0, 0.2394, 0.3125, 0.0469, 0.0962, 0.0, 0.0, 0.0, 0.0156, 0.0, 0.0779, 0.0, 0.0323, 0.02, 0.0, 0.0444, 0.0, 0.3421, 0.1316, 0.0, 0.0, 0.1471, 0.0, 0.1647, 0.0, 0.1429], [0.0, 0.0, 0.0938, 0.0364, 0.0736, 0.0256, 0.0, 0.0, 0.0, 0.0889, 0.1842, 0.3962, 0.3393, 0.2469, 0.049, 0.0, 0.2706, 0.0, 0.0918, 0.0, 0.0714, 0.125, 0.0, 0.0135, 0.2963, 0.125, 0.0795], [0.0, 0.0, 0.0, 0.134, 0.0, 0.1897, 0.0, 0.1761, 0.3958, 0.1062, 0.0385, 0.2, 0.0, 0.0, 0.0312, 0.0182, 0.0519, 0.0, 0.0484, 0.08, 0.0233, 0.0, 0.0, 0.1842, 0.0, 0.0357, 0.0617, 0.0784, 0.0941, 0.0, 0.0918, 0.0145, 0.0833, 0.1, 0.0541, 0.1111, 0.0469, 0.0568], [0.0, 0.1429, 0.0, 0.0471, 0.0309, 0.0, 0.2241, 0.0, 0.0915, 0.4792, 0.0875, 0.1154, 0.0889, 0.0, 0.0, 0.0, 0.0545, 0.0433, 0.0, 0.0161, 0.16, 0.0, 0.0889, 0.0, 0.3421, 0.3208, 0.0, 0.125, 0.1358, 0.049, 0.0, 0.2941, 0.0, 0.0306, 0.0145, 0.1667, 0.125, 0.0, 0.0405, 0.0, 0.0781, 0.0341], [0.1753, 0.0, 0.2241, 0.0, 0.0493, 0.25, 0.0469, 0.25, 0.1111, 0.0, 0.0, 0.0625, 0.0, 0.0606, 0.0, 0.0645, 0.0, 0.0, 0.1556, 0.0345, 0.4474, 0.1321, 0.0, 0.2857, 0.0617, 0.0196, 0.05, 0.2235, 0.0, 0.2143, 0.1159, 0.0595, 0.05, 0.0, 0.0135, 0.4815, 0.0938, 0.0682], [0.2165, 0.0, 0.1897, 0.0, 0.1338, 0.1625, 0.1346, 0.0889, 0.0, 0.0, 0.0469, 0.0182, 0.0606, 0.0, 0.0645, 0.02, 0.0, 0.2222, 0.0345, 0.4211, 0.1321, 0.1071, 0.1481, 0.1078, 0.05, 0.1412, 0.0, 0.1429, 0.0145, 0.1071, 0.0, 0.0, 0.027, 0.0741, 0.0, 0.1477], [0.0385, 0.0, 0.0, 0.0, 0.0625, 0.0, 0.1126, 0.0, 0.0645, 0.18, 0.0, 0.7105, 0.5849, 0.0, 0.4107, 0.4444, 0.098, 0.025, 0.3059, 0.012, 0.1939, 0.0725, 0.2857, 0.0, 0.0, 0.0135, 0.2222, 0.2188, 0.0], [0.0412, 0.0, 0.1552, 0.0, 0.1338, 0.4583, 0.15, 0.0577, 0.1778, 0.0, 0.0, 0.0938, 0.0364, 0.1299, 0.0, 0.0323, 0.1, 0.0233, 0.2, 0.0, 0.6842, 0.3019, 0.0, 0.1964, 0.1852, 0.0784, 0.0, 0.1882, 0.0, 0.1735, 0.1014, 0.1667, 0.025, 0.0, 0.027, 0.1481, 0.0625, 0.0455], [0.0, 0.1111, 0.0, 0.0471, 0.1959, 0.0357, 0.1379, 0.0, 0.0986, 0.5208, 0.2375, 0.0577, 0.0444, 0.0222, 0.0, 0.0156, 0.0364, 0.0909, 0.0, 0.0323, 0.22, 0.0233, 0.1111, 0.0, 0.5263, 0.283, 0.0, 0.2321, 0.1605, 0.1569, 0.0, 0.2706, 0.0, 0.051, 0.0, 0.0119, 0.1, 0.0, 0.0676, 0.0, 0.1719], [0.2062, 0.0, 0.2241, 0.0, 0.169, 0.6458, 0.1406, 0.0577, 0.0667, 0.0, 0.0, 0.0156, 0.0545, 0.1385, 0.0, 0.0323, 0.18, 0.0, 0.1778, 0.0, 0.3158, 0.4151, 0.0893, 0.3457, 0.049, 0.05, 0.2353, 0.012, 0.2143, 0.0725, 0.2024], [0.0, 0.0635, 0.1395, 0.0, 0.1856, 0.0, 0.1207, 0.0109, 0.2113, 0.4792, 0.1156, 0.2115, 0.0444, 0.0, 0.0, 0.0938, 0.0, 0.0952, 0.0, 0.0323, 0.14, 0.0233, 0.2, 0.0, 0.4737, 0.6226, 0.6607, 0.2346, 0.049, 0.0, 0.2353, 0.012, 0.1122, 0.087, 0.0476, 0.025, 0.0, 0.0541, 0.4815, 0.0625, 0.0682]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

