created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Sr Conrad", "High Sorcer Baradun", "Melody Phoenixstorm", "Sienna Veil", "Bee Nemesis", "Illusionist Zeroo", "Kurtis Ruhr", "Roderik Manloy", "Cedryn X", "Aira Draugr", "Jamaass", "Cuz Imasir", "Belvyn Brightblade", "Greg The Knight", "Yummy Kiwi", "Rhaevynn", "Rahani Sunray", "Vee Usagi", "Talia The Pestilent", "Blaize Harlot", "Loganlek", "Darks Na", "Govinda Ektar", "Belladonna Horror", "Lord Erin The Wise", "Mort\u00e4rion", "Forever Dreaming", "Sofya De Nova", "Venomina The Fierce", "Morv\u00e4rth", "Oo Dads Mad", "Ax Axun", "Bearah", "Koralia Danai", "Sygaldry Verdandi", "Rina Of Theros", "Tootsie Pop Rocks", "Glorious Gluvs", "Gabe Malhorn", "Daphne Agla\u00e9", "Mistwalker Cael", "Hyde En Sikh", "Zaedy Zae", "Newtype Khan", "Xanvias Einzbern", "Drevarr Moonwillow", "Sub Train", "Crusader Siolith", "Tegan Parker", "Be\u00eb"];
const professions = ["Spellbreaker", "Tempest", "Scrapper", "Renegade", "Spellbreaker", "Chronomancer", "Vindicator", "Renegade", "Berserker", "Herald", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Reaper", "Scourge", "Spellbreaker", "Dragonhunter", "Vindicator", "Tempest", "Weaver", "Scrapper", "Scourge", "Tempest", "Spellbreaker", "Reaper", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Berserker", "Firebrand", "Reaper", "Herald", "Chronomancer", "Druid", "Spellbreaker", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.268], [0.0701, 0.0495, 0.234, 0.0833, 0.2456, 0.34, 0.0, 0.1859], [0.0763, 0.0495, 0.234, 0.0833, 0.2456, 0.39, 0.1364, 0.1282], [0.0664, 0.0671, 0.1742], [0.131, 0.1887], [0.0969, 0.0693, 0.1915, 0.1667, 0.2018, 0.42, 0.0, 0.1346], [0.3246, 0.0735], [0.0907, 0.0891, 0.2766, 0.1667, 0.2456, 0.41, 0.0455, 0.1346], [0.1304, 0.1849, 0.1111, 0.0588, 0.14, 0.0592, 0.0118, 0.099, 0.1234], [0.2082, 0.0594, 0.0638, 0.0833, 0.1667, 0.33, 0.1364, 0.141], [0.0417, 0.1228, 0.36, 0.109, 0.2609, 0.3014, 0.0585, 0.0, 0.33, 0.1053], [0.22, 0.4013, 0.0261, 0.0543, 0.1434], [0.1938, 0.0693, 0.4255, 0.0833, 0.193, 0.32, 0.0, 0.109], [0.2845, 0.0297, 0.1915, 0.1667, 0.2456, 0.23, 0.1364, 0.1026], [0.3072, 0.099, 0.1702, 0.125, 0.1842, 0.38, 0.0641], [0.2206, 0.1287, 0.4894, 0.0833, 0.2281, 0.28, 0.1364, 0.0577, 0.1159, 0.1781, 0.1404, 0.0, 0.21], [0.09, 0.1118, 0.3768, 0.0895, 0.1452], [0.1588, 0.0099, 0.0638, 0.0417, 0.2281, 0.45, 0.1364, 0.0897, 0.1304, 0.2603, 0.1111, 0.0588, 0.24, 0.0789, 0.1114], [0.1438, 0.1111, 0.0, 0.24, 0.5526, 0.1114, 0.0927, 0.2105], [0.233, 0.1188, 0.234, 0.0833, 0.2544, 0.37, 0.0909, 0.141, 0.3913, 0.2808, 0.0702, 0.0588, 0.38], [0.6019, 0.0735, 0.1434], [0.2206, 0.1485, 0.1277, 0.0, 0.2193, 0.1218, 0.0435, 0.2534, 0.1111, 0.0882, 0.29, 0.1382, 0.0, 0.1246, 0.1361], [0.0, 0.0594, 0.0, 0.0, 0.193, 0.38, 0.0455, 0.1474, 0.0, 0.0526, 0.5237, 0.0607, 0.1216], [0.0417, 0.1842, 0.23, 0.0909, 0.1603, 0.2029, 0.1644, 0.0409, 0.0294, 0.17, 0.4079, 0.5071], [0.2193, 0.34, 0.1282, 0.5072, 0.1644, 0.0936, 0.0588, 0.4, 0.3684, 0.1611, 0.0863, 0.1452], [0.0392, 0.0594, 0.0638, 0.0417, 0.2456, 0.27, 0.0, 0.0897, 0.0435, 0.1918, 0.0, 0.19, 0.0855, 0.4218, 0.0511, 0.1633], [0.2609, 0.3493, 0.1754, 0.0588, 0.29, 0.5066, 0.5735], [0.19, 0.4408, 0.6706, 0.1342, 0.1107], [0.1739, 0.1986, 0.0468, 0.0, 0.15, 0.5197, 0.5711, 0.0895, 0.1143], [0.1979, 0.1287, 0.234, 0.125, 0.2895, 0.32, 0.0962, 0.1449, 0.2192, 0.0877, 0.0294, 0.26, 0.3421, 0.1185, 0.1086, 0.1434], [0.1711, 0.0891, 0.2553, 0.0417, 0.2193, 0.26, 0.0, 0.1795, 0.2319, 0.1027, 0.0409, 0.0, 0.2, 0.4145, 0.4692], [0.2948, 0.1089, 0.1489, 0.0417, 0.2193, 0.16, 0.0705, 0.1449, 0.2945, 0.1111, 0.0294, 0.14, 0.0592, 0.1967, 0.0958, 0.1597], [0.1649, 0.1089, 0.3404, 0.125, 0.1491, 0.23, 0.1538, 0.2609, 0.3082, 0.0351, 0.0, 0.18, 0.4671, 0.3578, 0.1118, 0.1216], [0.2433, 0.0891, 0.3191, 0.0, 0.193, 0.19, 0.1026, 0.1014, 0.1644, 0.0877, 0.0588, 0.11, 0.3289, 0.5308, 0.0575, 0.0907], [0.1835, 0.0693, 0.2553, 0.0833, 0.3333, 0.19, 0.0, 0.1282, 0.1739, 0.3562, 0.0877, 0.0, 0.13, 0.4211, 0.4763, 0.099, 0.0799], [0.1052, 0.099, 0.4043, 0.0417, 0.1842, 0.31, 0.1923, 0.1594, 0.2671, 0.1462, 0.0588, 0.29, 0.5724, 0.4692, 0.1534, 0.0998], [0.2165, 0.0396, 0.0213, 0.125, 0.2368, 0.5, 0.1218, 0.1304, 0.1644, 0.152, 0.0, 0.17, 0.5395, 0.4739, 0.1949, 0.1289], [0.2351, 0.125, 0.2193, 0.24, 0.1218, 0.4058, 0.2808, 0.0526, 0.0882, 0.16, 0.4868, 0.5474, 0.131, 0.1597], [0.2763, 0.099, 0.2553, 0.0833, 0.2632, 0.3, 0.0, 0.0962, 0.1884, 0.1301, 0.0877, 0.0, 0.19, 0.4737, 0.5924, 0.1054, 0.1252], [0.3237, 0.1089, 0.0426, 0.125, 0.2456, 0.0, 0.0909, 0.1346, 0.1449, 0.226, 0.1287, 0.0, 0.25, 0.5197, 0.6943, 0.115, 0.0817], [0.2536, 0.1386, 0.4468, 0.0417, 0.2632, 0.27, 0.0, 0.1923, 0.2899, 0.1712, 0.0994, 0.0588, 0.29, 0.5461, 0.4905, 0.1054, 0.2105], [0.2969, 0.0792, 0.2979, 0.0833, 0.2281, 0.27, 0.1923, 0.2899, 0.2123, 0.1462, 0.0, 0.22, 0.3947, 0.5379, 0.1342, 0.1906], [0.3794, 0.0297, 0.2766, 0.125, 0.2018, 0.16, 0.1282, 0.2609, 0.137, 0.076, 0.0588, 0.16, 0.4803, 0.6422, 0.1342, 0.1397], [0.2866, 0.099, 0.2979, 0.0833, 0.2281, 0.29, 0.0, 0.1474, 0.3188, 0.3493, 0.0994, 0.0294, 0.22, 0.5, 0.6043, 0.0927, 0.1488], [0.3216, 0.1089, 0.1702, 0.0, 0.2544, 0.34, 0.1026, 0.3043, 0.2192, 0.1228, 0.0588, 0.2, 0.5395, 0.6445, 0.0958, 0.1452], [0.3031, 0.1683, 0.2128, 0.125, 0.2895, 0.34, 0.6364, 0.1474, 0.3043, 0.274, 0.117, 0.0882, 0.27, 0.4539, 0.6043, 0.1182, 0.1869], [0.2928, 0.1881, 0.4043, 0.0, 0.2982, 0.44, 0.0455, 0.0577, 0.3043, 0.2055, 0.0526, 0.0294, 0.24, 0.5987, 0.7464, 0.0575, 0.1579], [0.3608, 0.0891, 0.234, 0.0417, 0.2105, 0.3, 0.0455, 0.1538, 0.1014, 0.1781, 0.1462, 0.0, 0.23, 0.6974, 0.7346, 0.115, 0.118], [0.3773, 0.1584, 0.2979, 0.0417, 0.307, 0.46, 0.6364, 0.1304, 0.3014, 0.117, 0.0, 0.02, 0.6316, 0.7038, 0.1182, 0.1688], [0.3216, 0.1287, 0.2979, 0.0, 0.2895, 0.28, 0.0, 0.1923, 0.2319, 0.3288, 0.1345, 0.0, 0.22, 0.5789, 0.7322, 0.1182, 0.1924]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

