created: 20230401223327000
creator: Drevarr
modified: 20230705163524189
modifier: drevarr
tags: ChartData
title: 202304012233_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Hyde En Sikh", "Macette", "Aronorf Xideliesi", "Astraea Lumena", "Johosh The Great", "Newtype Khan", "Koralia Danai", "Gabe Malhorn", "Sygaldry Verdandi", "Xanvias Tlesel", "Bella Sassy", "Venomina The Fierce"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.7596, 0.0, 9.0406, 105.0336, 9.5148, 67.8205, 0.0, 258.0717, 23.8857, 6.7158, 39.6032, 6.747, 6.6924, 7.9315, 52.29, 16.8776], [34.0032, 53.5936, 20.8362, 76.8943, 1.938, 26.1779, 13.8965, 13.965, 2.4149, 23.1184, 15.9819, 14.405, 18.722, 19.6582, 0.0, 9.0628, 8.9422, 42.336, 0.0, 21.7026, 14.3412, 132.848, 18.4402, 17.6904, 13.7278, 6.05, 7.0191, 7.0829, 28.1938, 24.6806], [48.3437, 78.1517, 37.9117, 63.3188, 5.2326, 17.7948, 11.8544, 7.581, 2.5323, 21.6161, 0.0, 10.9577, 13.4798, 23.3107, 0.0, 7.9402, 10.8684, 37.6992, 5.508, 20.8749, 9.69, 158.2624, 16.8004, 5.3235, 17.2693, 9.1168, 8.5635, 9.4003, 20.8447, 23.2645], [18.8557, 35.112, 6.6242, 57.1701, 8.613, 76.1497, 13.1217, 49.7815, 6.9077, 7.1599, 0.0, 71.568, 0.0, 47.2215, 11.6797, 410.7891, 35.5191, 0.0, 32.9392, 6.8445, 0.0, 14.688, 65.5629, 14.0454], [95.2829, 106.5088, 31.2035, 258.6444, 11.6151, 76.4764, 23.8415, 25.7754, 25.4904, 69.7308, 31.4279, 5.602, 14.2938, 92.8735, 7.1604, 5.4212, 18.7279, 73.7184, 36.692, 14.8322, 228.0365, 17.7905, 7.1253, 26.9797, 15.808, 0.0, 18.2294, 27.793], [108.145, 211.1181, 52.7003, 149.3309, 9.8063, 58.4759, 33.2296, 40.3788, 7.8819, 44.6094, 29.4373, 41.9531, 9.1494, 54.5011, 0.0, 12.0609, 39.8742, 53.424, 53.7966, 27.7263, 268.6995, 37.2518, 7.5933, 38.8606, 7.8622, 0.0, 28.2173, 33.8059, 49.4768], [90.552, 154.9466, 72.6218, 152.7755, 15.6461, 66.9104, 36.3854, 39.4212, 32.081, 49.9925, 20.1609, 54.9613, 126.8546, 0.0, 34.403, 33.4347, 111.888, 5.8536, 92.6497, 28.579, 426.7309], [171.7901, 105.8304, 33.6428, 335.4374, 7.274, 73.5963, 14.6125, 33.1569, 0.0, 74.4463, 44.2325, 72.6408, 12.731, 57.2508, 7.2446, 7.2831, 0.0, 42.0672, 0.0, 96.0522, 7.3644, 270.7789, 37.0971, 5.6043, 37.7754, 0.0, 0.0, 50.3309, 25.6105, 35.4314], [160.1107, 175.1629, 28.5608, 282.6549, 12.2352, 56.7273, 12.4114, 54.7428, 7.3453, 87.5495, 7.8665, 7.2333, 25.4294, 52.326, 5.7704, 19.5493, 4.2602, 33.6672, 0.0, 58.2107, 7.8295, 410.7891, 13.4589, 5.8149, 62.832, 7.7785, 7.7517, 16.7606, 46.2771, 38.0902], [78.1334, 105.0163, 26.8838, 381.8374, 34.7677, 49.99, 14.8247, 27.6906, 0.0, 52.3711, 34.184, 72.5177, 14.359, 82.9829, 31.0003, 7.7896, 14.0459, 62.16, 0.0, 58.6705, 7.752, 444.752, 34.4981, 7.7922, 62.4131, 19.3487, 7.6725, 18.8333, 57.1448, 100.0229], [137.2694, 296.4608, 124.0516, 326.9274, 11.9898, 71.8477, 55.9572, 29.4063, 0.0, 35.8878, 33.9352, 30.2567, 24.4851, 76.6627, 21.3548, 49.7632, 40.7881, 153.216, 0.0, 39.9106, 0.0, 333.3907, 19.2137, 40.7394, 17.2312, 10.6362, 16.9191, 17.8051, 12.8275, 54.1008], [186.7219, 188.3238, 46.1446, 391.8671, 9.4833, 81.1565, 43.9702, 38.1444, 6.054, 19.1541, 36.0215, 65.6845, 13.9357, 82.7777, 0.0, 18.5636, 39.5508, 38.7744, 0.0, 74.3497, 15.8658, 510.5984, 57.2081, 8.0262, 42.0594, 7.904, 6.0291, 7.9642, 27.2585, 21.964], [85.7472, 333.6371, 291.6052, 358.1308, 74.1737, 130.7351, 82.5568, 73.4559, 41.338, 84.7536, 0.0, 86.9352, 188.0042, 49.0277, 101.9357, 38.0182, 167.5968, 0.0, 187.5064, 58.9152, 752.0352, 40.9646, 0.0, 88.6312, 48.2742, 41.6813, 244.8364, 90.9483]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

