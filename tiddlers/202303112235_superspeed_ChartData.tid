created: 20230311223557000
creator: Drevarr
modified: 20230705163521831
modifier: drevarr
tags: ChartData
title: 202303112235_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rock", "My Birthday Girl", "Mom You Never Had", "Xanvias Tseli", "High Sorcer Baradun", "Venomina The Fierce", "Tegan Parker", "Sofya De Nova", "Mac Chiato", "Smol Daddy Tika", "K\u00f4sair", "Sheep Paws", "Zadie Miststep", "Harry Callahann", "Vopiscus Zergherdus", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Scrapper", "Tempest", "Berserker", "Tempest", "Spellbreaker", "Tempest", "Weaver", "Tempest", "Berserker", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.313, 0.66, 0, 0.185, 0, 0.256, 0.257, 0.205, 0.046, 0.319, 0.287, 0.099, 0.028, 0, 0, 0, 0.141, 0, 0.147, 0.831, 0.183, 0.563, 0.375], [0.585, 0, 0.117, 0, 0.123, 0.235, 0.141, 0, 0, 0.234, 0.369, 0.321, 0, 0, 0.089, 0, 0.559, 0], [0.386, 0.443, 0.778, 0.648, 0.316, 0.079, 0.391, 0.658, 0.617], [0, 0, 0, 0, 0, 0, 0, 0, 0.949, 1.283, 1.028, 0.329, 0.374, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.356, 0.44, 0.234, 0.37, 0.491, 0.851, 0.611, 0.512, 0.54, 0.031, 0.528, 0.395, 0.224, 0.64, 0.711, 0, 0.966, 0.349], [0.12, 0, 0.316, 0.575, 0.409, 0.892, 1.093, 0.341, 0.461, 0.104, 0.691, 0, 0.683, 0, 1.579, 0.649, 0.775], [0.447, 0.438, 0.245, 0.358, 0.269, 0.307, 0.356, 0.482, 0.391, 0, 0.224, 0, 0.474, 0, 0.557, 0.23, 0.661, 0.731, 0.874, 0.636], [0.546, 0.44, 0.467, 0, 0.013, 0.545, 0.344, 0.307, 0.276, 0.574, 0.364, 0.394, 0.506, 0, 0.002, 0.477, 0.973, 0, 0, 0.465, 0, 0, 0.138], [0.602, 0.879, 0.467, 0.37, 0, 0.553, 0.107, 0.205, 0.276, 0.373, 0.443, 0, 0.189, 0, 0, 0.119, 0, 0.281, 1.209, 0.294, 0.522, 0.634, 1.165, 0.913], [0.573, 0, 0, 0.618, 0.409, 0.284, 0.517, 0.224, 0.179, 0.804, 0.756, 0.329, 0.501, 1.568, 1.107, 0, 0.666, 0, 0.171, 0.387, 0.034, 1.362, 1.172], [0.779, 0.183, 0, 0, 0.257, 0.46, 0.342, 0.319, 0.71, 0.559, 0, 0, 0, 0, 0, 0.443, 0, 0.415, 1.635, 1.217, 1.065, 1.468], [0.904, 0.825, 0, 0.618, 0.816, 1.134, 0.994, 0, 0.282, 1.001, 0.836, 0, 0.819, 0, 0, 0, 0, 0.468, 0], [0.842, 0.877, 0.583, 0.741, 0.736, 0.68, 0.857, 0.818, 0.8, 0.801, 0.729, 0, 0.448, 0, 0.831, 0.729, 0.517], [0.304, 1.757, 0.321, 0.742, 0.644, 0.618, 0.761, 0.358, 0.782, 1.097, 0.919, 0.691, 0, 0, 0.237, 0, 0.864, 0.603, 1.414, 2.135, 0.223, 2.555], [2.242, 1.603, 0.438, 0.598, 2.016, 2.299, 1.934], [1.707, 2.013, 0.725, 1.388, 1.581, 1.591, 1.523, 1.075, 1.38, 1.916, 1.772, 0.592, 1.516, 1.289, 1.778, 1.899, 1.941, 1.494, 1.806, 1.874, 2.827, 2.322, 2.011, 2.308]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

