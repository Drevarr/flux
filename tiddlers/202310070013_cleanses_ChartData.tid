created: 20231007001352000
creator: Drevarr
tags: ChartData
title: 202310070013_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Brutal Araden", "Arcanophage Farra", "Solus Luxes", "Newtype Khan", "Raziel Umbra", "Samarandal", "Black Raspberry Pie", "Eibh\u00ebar", "Leafzely", "High Sorcer Baradun", "Conditions M\u00e6 Apply", "Tegan Parker", "Arriasa", "Legendary Sakis", "Mac Aaroni", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.13, 0.1119, 0.0, 0.1852, 0.0, 0.0116, 0.0, 0.1496], [0.0, 0.0364, 0.0, 0.0, 0.0, 0.0244, 0.0278, 0.1322, 0.09, 0.035, 0.0, 0.037, 0.1163, 0.0, 0.0342], [0.0833, 0.0, 0.2909, 0.1333, 0.0593, 0.0, 0.0325, 0.0972, 0.0661, 0.06, 0.035, 0.0, 0.0, 0.0741, 0.0, 0.0698, 0.0, 0.0769], [0.0, 0.0, 0.3091, 0.0533, 0.0254, 0.0606, 0.0488, 0.1667, 0.0115, 0.0367, 0.042, 0.0556, 0.0, 0.0, 0.537, 0.0, 0.0116, 0.0, 0.0983], [0.1667, 0.0, 0.6182, 0.1867, 0.0, 0.0, 0.0, 0.0115, 0.1767, 0.1119, 0.0, 0.0, 0.0, 0.0342], [0.1944, 0.4909, 0.2933, 0.0763, 0.1061, 0.1382, 0.0581, 0.0, 0.0, 0.2607], [0.7639, 0.0, 0.0, 0.2267, 0.0, 0.0, 0.0244, 0.1667, 0.0, 0.0033, 0.2378, 0.0, 0.0, 0.7222, 0.0, 0.0, 0.0, 0.0417, 0.047], [0.0694, 0.0, 0.7091, 0.32, 0.1695, 0.1364, 0.0732, 0.2361, 0.0, 0.0, 0.5035, 0.0, 0.0, 0.0, 0.3704, 0.0, 0.0, 0.0, 0.0, 0.1026], [0.5556, 0.0, 0.8364, 0.28, 0.0169, 0.2273, 0.0569, 0.375, 0.1552, 0.2467, 0.4755, 0.0, 0.0, 1.2778, 0.0154, 0.2791, 0.0, 0.0, 0.5], [0.6528, 0.0, 1.1091, 0.4133, 0.0, 0.2424, 0.1138, 0.5139, 0.4425, 0.54, 0.3147, 0.1064, 0.0312, 0.9074, 0.0077, 0.2179], [0.4028, 0.0741, 1.1636, 0.6267, 0.3051, 0.303, 0.2276, 0.6389, 0.5, 0.47, 0.2238, 0.0, 0.0, 0.0, 1.4815, 0.1769, 0.3372, 0.0227, 0.125, 0.2607], [0.6528, 0.0741, 1.7636, 0.5733, 0.178, 0.0, 0.0407, 0.4583, 0.819, 0.8467, 0.7552, 1.5741, 0.0077, 0.1744, 0.0, 0.4017], [1.0417, 0.0, 1.6364, 1.3733, 0.0847, 0.1212, 0.2033, 0.5556, 1.1322, 1.1867, 0.6713], [0.375, 1.9273, 0.9867, 0.0085, 0.303, 0.2114, 0.7222, 0.9368, 0.98, 0.7063, 0.0, 0.7407, 0.0154, 0.2093, 0.0, 0.0, 0.7949], [1.1667, 0.0, 1.6545, 0.4933, 0.3983, 0.1515, 0.3902, 1.0, 0.9943, 0.81, 1.2308, 0.0, 1.9259, 0.0, 0.0233, 0.0, 0.0, 0.4188], [1.0556, 0.0741, 2.6182, 1.3867, 0.4407, 0.197, 0.2114, 1.0417, 1.296, 1.21, 0.7203, 0.0, 1.6296, 0.0692, 0.6395, 0.0, 0.0, 0.9103], [1.1667, 0.3333, 2.4909, 1.5867, 0.5508, 0.5152, 0.3252, 1.4583, 1.273, 1.0533, 1.035, 0.1111, 0.0426, 0.0, 2.1667, 0.1538, 0.4419, 0.0, 1.2179]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

