created: 20230204000024000
creator: Drevarr
modified: 20230705163518620
modifier: drevarr
tags: ChartData
title: 202302040000_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Evil Stepmother", "Newtype Khan", "Grasszanine", "Arcanophage Farra", "Tyrisai", "Raven The Guard"];
const professions = ["Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.5826, 2.6729, 11.3064, 0.0, 0.0, 7.3559, 2.6951, 5.1862, 5.0, 5.4541, 0.0, 0.0, 0.0, 21.582, 7.191, 4.1184, 13.4992, 8.1158, 5.4012, 2.7146, 5.5084, 2.6879, 0.2244, 0.0, 11.6673, 2.6823, 0.0, 10.6898, 16.2486], [48.3582, 179.2589, 42.4711, 8.3398], [15.22, 5.7431, 0.0, 10.9336, 21.0622, 0.0, 0.0, 11.696, 26.946, 12.0195, 0.0, 0.0, 26.7696, 27.495, 14.0283, 12.767, 0.0, 12.3311, 12.1776, 11.1712, 0.0, 12.9703, 26.7648, 12.7032, 0.0, 0.0, 0.0, 12.8979], [22.1982, 0.0, 0.0, 0.0, 0.0, 12.7361, 12.7512, 0.0, 9.503, 25.6474, 0.0, 12.789, 0.0, 25.4628, 25.38, 11.7117, 19.3107, 35.805, 16.3396, 15.4503, 12.7156, 10.5092, 11.3546, 0.0, 0.0, 0.3606, 10.3043, 0.0, 26.163], [30.6286, 34.7655, 10.836, 0.0, 34.4176, 35.033, 39.5577, 34.2569, 0.0, 50.7753, 37.3045, 70.7364, 0.0, 52.4304, 21.573, 81.7245, 65.4368, 74.4062, 44.0591, 0.0, 70.2187, 27.7685, 47.6401, 111.6288, 46.5328, 37.0332, 53.0696, 0.0, 37.179], [34.9664, 45.6557, 15.708, 17.7779, 37.8937, 67.3672, 34.0225, 60.7874, 12.544, 55.7099, 37.5901, 45.0702, 81.8928, 38.5776, 68.0823, 105.1565, 49.8542, 38.3861, 22.2495, 72.9986, 45.0885, 24.1679, 3.0029, 94.674, 54.0735, 49.9732, 7.0477, 96.6195], [65.4444, 18.6732, 152.4996, 124.1082, 113.1916, 166.063, 87.8416, 97.6298, 54.3933, 107.1299, 64.3486, 66.7814, 199.2346]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

