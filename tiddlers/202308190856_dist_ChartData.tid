created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Wren Raveness", "Ains Chon", "Nadumi", "Xanvias Tsolice", "Crabbedmermaid", "Samara Evermoore", "Smol Gluvs", "Liu Mira", "Xuerreux", "Red Reaper Robin", "Drevarr Moonwillow", "Grae Leon", "Aloe Pen", "Kosa\u00efr", "Grootsmaid"];
const professions = ["Chronomancer", "Reaper", "Thief", "Weaver", "Firebrand", "Deadeye", "Reaper", "Berserker", "Berserker", "Reaper", "Scrapper", "Tempest", "Vindicator", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[961, 783, 789, 1202, 904, 1376, 388, 1340, 427, 621, 1231, 497, 1093, 554, 386, 620, 637, 526, 1288], [811, 1734, 4899, 1023, 1251, 1363, 1012, 3260, 746, 4091, 2254, 507, 909, 1177, 1993, 594, 626], [22824, 350, 1320, 1267, 737, 1059, 281, 1232, 531, 746, 762, 2968, 2234, 2714], [1934, 502, 285, 5424, 338, 493, 3519, 588, 589, 402, 901, 326, 1036], [384, 432, 718, 3020, 852, 265, 379, 313, 12387, 1581, 310, 849], [597, 659, 5566, 929, 938, 989, 331, 1784, 626, 346, 7437, 9138, 6051, 2431, 2016, 2953], [876, 521, 1556, 2669, 813, 389, 3512, 361, 1917, 523, 600, 296], [731, 434, 493, 339, 973, 1332, 2692, 1081, 242, 4468, 396, 10655, 1728, 2321, 187, 468, 1880, 252, 1894], [439, 421, 751, 984, 1024, 545, 338, 415, 436, 466, 380, 428, 369, 2636, 390, 2444, 1153, 263, 1316], [330, 312, 346, 686, 633, 608, 674, 699, 218, 4256, 362, 337, 3898, 369, 1111], [286, 286, 298, 522, 587, 824, 423, 345, 306, 1142, 325, 1008, 2017, 655, 462], [318, 294, 473, 532, 1883, 333, 2850, 356, 1646, 563, 326, 459, 238, 294, 193, 659], [1146, 751, 1292, 3780, 1072, 266, 478, 634, 244, 2686, 300, 333, 314, 483, 374, 489], [493, 458, 681, 278, 1152, 239, 801, 539, 277, 821, 308, 4248, 267], [1207, 1748, 228, 269, 336, 296, 423, 267, 401, 598, 492, 213]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

