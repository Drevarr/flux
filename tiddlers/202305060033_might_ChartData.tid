created: 20230506003334000
creator: Drevarr
modified: 20230705163528622
modifier: drevarr
tags: ChartData
title: 202305060033_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Black Raspberry Pie", "Miphest\u00f6", "Johosh The Great", "Stoic Rapidfire", "Koralia Danai", "High Sorcer Baradun", "Solus Sanctus", "Air One Com", "Aronorf Xideliesi", "Tegan Parker", "Venomina The Siren", "Drevarr Moonwillow", "Jupi Jupi Jupi", "Bella Sassy", "Lucas Ryn", "Newtype Khan", "Artakama Nahid", "Smol Daddy Tika", "Blancooo Padreee"];
const professions = ["Firebrand", "Chronomancer", "Tempest", "Willbender", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.4651, 37.363, 15.0863, 3.996, 0.0, 0.9692, 46.4025, 9.6237, 19.8058, 6.736, 1.2384, 3.9182, 50.1228, 5.7513, 45.684, 90.8258], [25.5086, 51.4722, 4.4924, 6.0939, 3.6508, 0.0, 57.5391, 33.683, 19.5026, 0.0, 1.1146, 0.0, 60.5556, 8.0057, 38.07, 67.2602], [47.8174, 86.745, 11.4656, 0.0, 0.0, 166.3066, 19.6376, 8.084, 22.4532, 0.0, 1.1111, 70.7616], [26.664, 46.7691, 27.2223, 1.2654, 3.3785, 3.5011, 64.5923, 24.3194, 19.5026, 9.3694, 9.4944, 6.5205, 48.762, 6.9015, 58.656, 95.7353], [43.1957, 65.5813, 15.6897, 0.0, 3.6253, 7.5362, 100.6006, 33.5529, 4.8504, 4.6015, 0.0, 0.0, 55.1124, 6.9475, 72.474, 44.1855], [23.731, 65.5813, 8.1801, 0.0, 0.0, 0.0, 80.5547, 17.5568, 33.0434, 6.5696, 5.903, 6.2281, 67.8132, 12.6067, 72.192, 120.2827], [54.839, 169.0482, 35.0671, 6.5268, 1.1472, 254.6569, 23.0188], [27.8194, 72.6358, 12.4713, 5.994, 0.0, 1.167, 86.4943, 19.5075, 25.1615, 5.1282, 1.775, 8.5381, 64.1844, 14.4471, 69.372, 141.8845], [23.0199, 70.8069, 3.4866, 2.4642, 0.0, 0.0, 98.7445, 28.611, 24.353, 8.122, 7.3066, 5.848, 70.308, 11.3645, 72.192, 144.3393], [10.9738, 5.431, 0.7326, 2.8483, 142.9197, 32.5125, 30.5171, 4.0471, 1.5274, 7.5439, 90.2664, 19.9683, 89.112, 155.1402], [47.1064, 83.3483, 0.0, 0.0, 9.5142, 106.5401, 10.0138, 21.2205, 13.2779, 4.9536, 0.0, 67.3596, 19.9223, 81.216, 136.4841], [61.4161, 85.6998, 16.7625, 20.313, 12.8768, 138.4651, 33.5529, 13.5407, 10.0901, 0.0413, 12.1931, 45.5868, 9.018, 111.39, 100.6447], [45.6843, 68.9779, 35.3354, 7.1262, 4.4848, 4.5098, 143.2909, 45.7776, 39.3085, 21.3444, 6.3158, 8.9767, 96.8436, 11.6405, 91.086, 155.1402], [45.2399, 139.5235, 49.4158, 0.8991, 6.1953, 1.0088, 104.3128, 12.3548, 33.4475, 11.0603, 11.9712, 13.1288, 107.2764, 10.4903, 81.216, 158.5769], [67.4599, 110.5214, 16.2932, 7.326, 0.0, 0.0, 187.0949, 31.212, 38.298, 12.5017, 17.2138, 127.6884, 12.2387, 121.824, 219.9456], [53.328, 153.3714, 22.8641, 5.8941, 1.6595, 9.8702, 252.0584, 44.3471, 69.2193, 14.4421, 23.9837, 19.3276, 136.08, 25.1675, 155.1, 290.6424], [95.1016, 236.7197, 60.6132, 14.7852, 5.6592, 13.6284, 273.9604, 106.3809, 105.6983, 27.0547, 40.537, 13.9767, 227.4804, 35.4277, 256.338, 126.1742], [56.261, 188.9054, 75.096, 3.8628, 0.0, 305.1428, 118.4755, 74.0696, 17.824, 37.895, 2.1638, 254.2428, 30.8727, 254.364, 503.2237], [104.1674, 297.8592, 71.6765, 10.4229, 3.387, 2.9868, 306.2565, 90.6448, 130.2534, 38.7803, 35.088, 17.2808, 279.8712, 55.6261, 275.232, 566.0654], [122.21, 365.5307, 90.9869, 24.0093, 7.0548, 22.4107, 579.4744, 165.2936, 164.4083, 51.8364, 53.1274, 27.6318, 336.1176, 61.6074, 369.984, 714.3323]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

