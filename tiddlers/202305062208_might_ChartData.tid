created: 20230506220820000
creator: Drevarr
modified: 20230705163528917
modifier: drevarr
tags: ChartData
title: 202305062208_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ever Moore", "Kosa\u00efr", "Johoshua", "Sygaldry Verdandi", "Lil Red Robin", "Aronorf Xideliesi", "Jupi Jupi Jupi", "Venomina The Fierce", "Ark Darkness", "Miphest\u00f6", "Koralia Danai", "Drevarr Moonwillow", "High Sorcer Baradun", "Bella Sassy", "Artakama Nahid", "Newtype Khan", "Smol Daddy Tika", "Blancooo Padreee"];
const professions = ["Firebrand", "Catalyst", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.7504, 15.7248, 84.2515, 5.658, 4.8827, 29.0862, 11.4572, 4.212, 13.9372, 14.9256], [39.764, 208.2834], [38.9491, 32.9011, 118.053, 3.2534, 7.7695, 39.2291, 0.0, 3.0794, 13.5553, 9.6596], [3.3817, 32.7015, 22.032, 13.3626, 12.4186, 26.8531, 87.783, 7.61, 10.3712, 26.8488, 13.0712, 0.6178, 11.837, 14.4894], [4.68, 21.8141, 57.577, 26.4902, 131.17, 6.3087, 9.6941, 33.2627, 14.3413, 2.6676, 8.846, 10.906], [23.905, 63.1391, 43.3329, 11.592, 24.6694, 26.3424, 8.4672, 85.765, 6.1301, 36.5442, 2.8841, 5.5318, 11.9643, 10.314], [25.3044, 60.8751, 42.6933, 11.664, 20.101, 47.7926, 9.193, 100.9, 9.3074, 1.9602, 21.6282, 8.6789, 1.1606, 2.9274, 0.9036], [10.09, 22.5188, 46.6528, 133.4982, 25.0312, 17.1943, 82.3502, 33.5282], [13.9932, 55.0894, 57.0843, 8.424, 27.9814, 32.1754, 7.8624, 113.5125, 4.0455, 13.1868, 27.8929, 2.7783, 3.2854, 18.7738, 5.3595], [40.8135, 101.8778, 33.8988, 19.368, 53.2493, 35.4413, 96.3595, 2.5461, 7.2349, 18.9433], [24.7213, 62.3844, 65.0793, 24.48, 10.5073, 32.928, 21.5309, 107.4585, 8.487, 1.39, 39.9749, 11.8012, 3.4258, 14.1281, 9.9089], [36.0325, 102.8839, 57.4041, 14.472, 24.7836, 65.2915, 32.9011, 117.044, 4.583, 9.9792, 54.8909, 1.9316, 1.2355, 16.0373, 21.8743], [46.8772, 49.3038, 130.4784, 38.952, 7.081, 84.8602, 99.913, 90.81, 13.4095, 0.0], [43.0291, 93.3251, 64.2798, 47.448, 38.0319, 66.4205, 41.6102, 206.3405, 14.0318, 7.9121, 54.1451, 19.0777, 3.4351, 12.028, 14.8322], [48.0433, 220.1063, 81.2292, 28.944, 46.1408, 124.1856, 60.7219, 160.431, 0.0, 3.4927, 84.5737, 0.0, 0.0, 10.5006, 27.7947], [112.1788, 138.101, 141.9912, 33.048, 79.1475, 142.8134, 74.0275, 288.0695, 17.3418, 22.7027, 93.8216, 0.0, 0.0, 51.612, 15.3307], [157.7733, 307.6457, 142.9506, 65.448, 75.2644, 134.1581, 57.456, 478.7705, 28.092, 47.223, 155.5739, 14.8705, 0.0, 81.0137, 45.0262], [193.3394, 241.488, 115.6077, 76.392, 119.8063, 220.3354, 155.3126, 662.4085, 26.5643, 36.1033, 193.908, 29.8998, 0.0, 96.0328]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

