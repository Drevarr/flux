created: 20230607222341000
creator: Drevarr
modified: 20230705163534249
modifier: drevarr
tags: ChartData
title: 202306072223_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Oo Dads Mad", "No Reserv\u00e9", "Mistwalker Cael", "Kary\u00edna", "Sister Elonith", "Gabe Malhorn", "Demon Sekhmet", "Zayde Sunsabre", "Chrozz", "Crusader Siolith", "Xanvias Einzbern", "Belvyn Brightblade", "Sumatra Satyricon", "Sygaldry Verdandi", "Newtype Khan", "Sub Train", "Solus Sanctus", "Grasszanine", "Rafaellagabriela", "Skye Nightroad", "Johosh The Great", "Etcherii", "Tootsie Pop Rocks", "Primal Clone", "Eibh\u00ebar", "Uneeta Healah", "Inedible Plant", "Venomina The Siren", "Arriasa", "Tegan Parker", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Firebrand", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Willbender", "Firebrand", "Berserker", "Firebrand", "Soulbeast", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Scrapper", "Vindicator", "Tempest", "Druid", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.99, 62.2128, 3.0, 18.1965, 0.0, 0.0, 5.0185, 0.963, 0.0, 0.0, 3.9744, 3.975, 6.9847], [0.0, 0.0, 65.0233], [0.0, 0.0, 68.0799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 66.0075, 0.0, 24.8559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9924], [0.0, 3.99, 73.0053, 0.0, 5.0044, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.9744, 1.9875, 7.9847], [0.0, 0.0, 72.0606, 4.0, 14.0917, 13.4247, 0.0, 0.0, 22.989, 0.0, 0.0, 4.9924], [79.158, 2.0, 18.0611, 25.0411, 0.0, 5.0185, 2.9259, 19.0879, 0.0, 3.9744, 8.125, 22.7328], [0.0, 14.17, 86.0983], [3.0, 0.0, 98.09, 1.0, 8.0087, 14.1233, 0.0, 25.8148, 7.8889, 29.4835, 25.1282, 27.425, 7.9847], [0.0, 1.99, 111.129, 0.0, 45.214, 17.0274, 0.0, 13.0556, 4.9259, 13.8681, 0.0, 3.9744, 6.9625, 7.9847], [1.0, 0.0, 110.4976, 1.0, 47.1659, 15.0959, 0.0, 29.8704, 0.963, 13.3626, 0.0, 4.9744, 1.9875, 20.0305], [0.0, 1.99, 117.0566, 5.0, 21.0524, 15.0274, 0.0, 0.0, 0.0, 6.978, 0.0, 0.0, 0.0, 4.9924], [8.0098, 0.0, 123.4756], [0.0, 0.0, 124.4805, 0.0, 15.0917, 0.0], [0.0, 0.0, 148.731, 2.0, 36.7555, 27.9863, 0.0, 12.1852, 0.0, 32.5604, 0.0, 13.5128, 13.9375, 25.7863], [0.0, 3.99, 152.4695, 0.0, 80.4236, 24.2192, 0.0, 0.0, 5.8889, 27.967, 0.0, 20.7436, 13.575, 27.0687], [172.8153, 2.0, 47.6638, 19.0274, 0.0, 2.0, 1.7778, 19.989, 0.0, 27.1795, 0.0, 6.9924], [0.0, 0.99, 182.0807, 0.0, 54.4716, 26.1918, 0.0, 11.1296, 18.4074, 28.1868, 0.0, 15.7436, 20.6875, 25.9771], [6.0049, 0.0, 216.5239, 0.0, 81.6463, 37.2192, 0.0, 19.2037, 0.0, 25.9451, 0.0, 22.1026, 0.0, 9.0916], [225.3019, 2.0, 54.7686, 28.3014, 0.0, 19.5, 11.1852, 30.4396, 0.0, 18.1026, 11.6125, 25.2214], [0.0, 0.0, 227.6152, 100.6201], [0.0, 0.0, 227.7385, 4.0, 56.8341, 42.6438, 0.0, 16.2593, 8.8519, 26.6703, 0.0, 18.9744, 2.9875, 39.5725], [8.0098, 3.99, 231.946, 3.0, 62.8341, 41.4932, 0.0, 15.1667, 14.1481, 32.1758, 0.0, 22.4615, 22.4375], [1.0, 0.99, 322.7179, 0.0, 179.9301, 74.5205, 0.95, 48.1667, 19.5556, 68.4396, 0.0, 42.3077, 0.0, 70.5954], [0.0, 3.99, 341.1988, 10.1351, 173.8559, 85.9178, 0.0, 49.3889, 31.0, 52.4835, 0.0, 54.3333, 46.2625, 112.8015], [12.0341, 0.0, 363.6648, 16.0068, 150.8341, 97.3699, 0.0, 51.463, 26.6296, 78.4945, 0.0, 32.8974, 45.425, 115.6412], [3.0, 19.97, 384.0654, 14.0, 80.4148, 41.3151, 0.0, 38.3519, 23.7778, 19.9341, 0.0, 50.1282, 26.975, 109.8931], [10.0098, 3.99, 411.2334, 23.0, 166.0044, 101.6438, 0.0, 45.0926, 6.8889, 74.8791, 0.0, 30.641, 24.175, 70.2366], [1.99, 498.0312, 20.2162, 256.1834, 146.8904, 1.95, 84.8333, 21.2963, 87.5275, 0.0, 44.3333, 60.9125, 145.4275], [39.0976, 49.19, 488.0527, 41.7703, 258.786, 121.274, 8.9, 80.0185, 42.7407, 115.3736, 0.0, 99.3333, 68.15, 222.3282], [13.1268, 5.99, 517.6468, 35.4122, 235.5328, 66.3699, 0.0, 97.8519, 63.0741, 66.989, 0.0, 72.0, 101.9625, 178.2137], [30.3171, 73.71, 514.0807, 55.8378, 257.441, 143.2466, 0.0, 86.1296, 77.0, 134.7802, 1.0, 108.2564, 70.3125, 153.3969], [36.6098, 21.13, 534.9478, 49.0541, 254.8821, 131.9178, 7.95, 105.963, 49.4074, 133.5165, 2.0, 69.3333, 80.275, 138.0534]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

