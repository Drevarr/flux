created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Dargon Spiritwalker", "Luke The Ghastly", "\u00c4rt\u00ebmiza", "Deffray N", "Konoko K", "Tegan Parker", "Bearah", "Smol Gluvs", "F\u00e4dscelsior", "Belvyn Brightblade", "Sofya De Nova", "Hyde En Sikh", "Koralia Danai", "Seiker Novus Terra", "Crusader Siolith", "Tootsie Pop Rocks", "Ryzen Grimsaw", "Traidoruns Maximus", "Sygaldry Verdandi", "High Sorcer Baradun", "Christie Raskae", "Bella Sassy", "Pr\u00e6tor Lightbringer", "Gabe Malhorn", "Drevarr Moonwillow", "Sygaldry Verdandi", "Starla Rayn", "Philip Poundhouse", "Tikonis", "Aira Draugr", "Fourty Eighth", "Govinda Ektar", "Fqa Rev", "Melody Phoenixstorm", "Venomina The Fierce", "Oo Dads Mad", "Helgariz", "Krytsmancer", "Matrim The Mad", "Jimbo The Pleb", "Mort\u00e4rion", "Itty Bitty Mew", "Zatoshin", "Glorious Gluvs", "Kos\u00e1ir", "Rina Of Theros", "Latedoctor", "Serene Azura", "Keypek The Drunk", "Rhaevynn", "Lord Erin The Wise", "Nsidejob", "Charr Surethang", "No Reserv\u00e9", "Zenady", "Mistwalker Cael", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Reaper", "Scourge", "Spellbreaker", "Scourge", "Tempest", "Tempest", "Firebrand", "Reaper", "Tempest", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Tempest", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Willbender", "Reaper", "Herald", "Holosmith", "Herald", "Scourge", "Vindicator", "Herald", "Scrapper", "Spellbreaker", "Berserker", "Berserker", "Reaper", "Catalyst", "Berserker", "Scrapper", "Catalyst", "Vindicator", "Berserker", "Virtuoso", "Reaper", "Reaper", "Dragonhunter", "Scrapper", "Reaper", "Weaver", "Catalyst", "Berserker", "Vindicator", "Berserker", "Herald", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [0.0], [0.0, 204.6598], [59.3277, 0.0], [6.732, 14.5904, 47.3953, 18.2667, 20.5611], [0.0, 7.1327, 20.5745, 76.6571, 4.7328, 7.426, 10.6729, 20.8616, 0.0, 52.1522, 11.5909], [14.84, 21.1959, 35.843, 136.7442, 27.8222], [371.4742], [24.602, 12.9894, 30.1934, 47.3299, 18.4312, 4.6186], [0.0, 18.3402, 48.2816, 69.7209, 60.2556, 17.8479], [49.6531, 25.4787, 24.3143, 6.9695, 38.7039, 17.7212, 14.1017, 2.9322, 24.6413, 71.8364], [0.0, 75.4021, 16.3174, 44.5116, 33.2889, 34.0923, 6.6429, 14.0957, 0.0, 30.4071, 18.4909, 8.4944, 2.6977, 37.4237, 4.663, 33.7636], [4.48, 1.3093, 24.2048, 74.6512, 24.0556, 54.2718, 0.6122, 10.9362, 33.8, 22.0814, 51.6104, 12.9851, 3.9379, 0.0, 3.0652, 23.7636], [0.0, 15.268, 46.6962, 85.6977, 50.6222, 49.99, 27.4082, 31.2766, 16.3143, 26.1832, 59.6623], [0.0, 104.6082, 31.1024, 31.186, 149.4556, 64.1721, 61.1939, 31.7447, 6.5878, 26.1325, 53.8141, 20.2966, 0.0, 0.0], [19.6, 19.0928, 44.9471, 21.0233, 69.0667, 58.4613, 85.6633, 50.8404, 1.7429, 56.112, 33.5792, 28.71, 1.0226], [72.404, 180.5763, 353.0978, 466.8818], [134.0723, 128.1939, 74.4149, 47.8857, 46.6692, 112.5766], [0.0, 50.2394, 13.4898, 19.4149, 60.0571, 41.5064, 97.8182, 72.7621, 58.2316, 0.0, 39.3804, 162.7091], [30.5661, 109.6735, 120.8404, 49.8982, 103.0909, 26.8513, 51.3418, 6.1356, 92.7283, 159.3545], [204.4913, 176.7553, 0.0, 0.0, 181.6022], [0.0, 137.0309, 12.8447, 12.3488, 12.5, 98.2219, 41.3163, 13.4468, 38.6, 17.1094, 57.6026, 132.0558, 43.322, 0.0, 28.0326, 261.4], [155.1443, 29.8208, 23.7209, 29.5889, 70.1746, 60.2755, 23.8617, 25.5143, 70.5038, 139.3714, 19.6506, 20.661, 14.4576, 105.1848, 93.7273], [33.395, 151.732, 56.4915, 107.4884, 20.2111, 84.8529, 90.0, 26.4787, 110.8857, 22.4046, 115.1766, 48.4944, 83.2684, 34.8814, 59.4457, 82.8909], [0.0, 143.3918, 74.9846, 161.0465, 80.3333, 99.1646, 115.6735, 87.0319, 18.9714, 19.1221, 96.7143, 20.7063, 49.3785, 28.8475, 122.4022, 110.0818], [258.0928, 325.1433, 496.9302, 61.5333], [76.7732, 334.5341, 406.8837, 471.3556, 0.0], [297.2143, 162.3936, 141.8, 219.9237, 212.7273, 172.6877], [54.2677, 408.2514, 291.6102, 611.6522, 650.9455], [25.89, 214.3711, 268.3106, 870.1628, 337.1, 311.6509], [215.9975, 151.8545, 193.6691, 269.3588, 525.1525, 602.3913], [117.9278, 119.1638, 290.186, 365.2111, 144.1247, 49.3163, 96.4787, 73.4571, 46.313, 132.5948, 126.8178, 88.7401, 138.7966, 189.9783, 187.4545], [960.192], [0.0, 218.9175, 448.0648, 1154.5581, 598.7444], [194.5614, 556.6744, 222.3556, 199.7781, 76.7755, 28.6915, 50.9924, 233.7299, 89.8216, 37.6271, 0.0, 135.25, 314.6273], [0.0, 0.0, 563.6928, 152.2326, 1387.3111, 0.0], [712.2342, 363.7599, 145.1864, 283.3043, 1003.2091], [657.1561, 200.0395, 705.7458, 1169.1413, 1289.3727], [673.0973, 540.7857, 169.4681, 465.2286, 166.7583, 91.3532, 125.2571, 122.5, 814.3636], [541.6392, 951.0802, 1217.814, 589.7333], [600.0375, 501.414, 977.6633, 321.766, 220.8286, 74.8677], [746.29, 903.452, 233.1525, 867.3152, 988.4636], [788.0648, 488.5102, 212.383, 47.4857, 241.5064, 284.7532, 192.2751, 237.9859, 212.8152, 865.6818], [419.1468, 949.2791, 167.0778, 425.6908, 612.2653, 280.5319, 127.743, 456.439, 195.7955, 209.0141, 605.9492, 401.2283, 600.6], [98.91, 521.7216, 684.9642, 1152.5116, 387.0, 705.4898, 238.2021, 251.944, 623.5065, 180.8885, 154.4548, 113.678, 218.6304, 675.2], [71.635, 709.3918, 591.756, 975.093, 804.2667, 735.2195, 727.898, 267.6277, 103.9429, 240.4885, 266.987, 238.5539, 166.6215, 30.4457, 624.9818], [21.15, 853.7835, 891.4334, 832.4651, 723.3, 373.5835, 822.2245, 331.7447, 63.4286, 493.2519, 289.5091, 116.3606, 258.7288, 0.0, 0.0], [613.8247, 402.3532, 1076.0233, 162.1556, 683.7631, 310.449, 107.5532, 38.4857, 336.3664, 781.174, 419.6877, 214.4463, 35.4068, 495.1087, 693.9364], [1676.4592, 830.617, 315.1714, 962.486, 1448.6494, 643.0186, 275.2316], [338.9278, 683.9078, 1289.3256, 585.4111, 446.2718, 612.2857, 517.8298, 517.6857, 286.6031, 585.2364, 270.9926, 183.952, 108.5593, 557.1739, 920.5727], [386.3379, 1442.093, 392.1444, 713.5187, 0.0, 211.1915, 114.7714, 429.6641, 622.0494, 862.6208, 406.2627, 114.8983, 318.5217, 1177.9727], [1604.3711, 603.0648, 749.814, 387.5667, 558.409, 259.602, 44.0745, 237.8, 321.0051, 790.6805, 205.3123, 346.2373, 223.0847, 733.3478, 1382.7909], [1343.8866, 1226.7765, 2915.9767, 0.0, 1784.187], [1042.5876, 647.442, 1338.4186, 1085.6333, 1052.7631, 531.5918, 328.9787, 295.6857, 295.6921, 926.5558, 707.5353], [79.1134, 695.8618, 2725.6977, 657.8778, 1204.9377, 1206.6327, 481.2979, 623.0571, 389.0254, 1255.4831, 367.6877, 293.6102, 125.7288, 203.9239, 897.7636], [67.44, 870.2474, 1039.1536, 311.6047, 25.9, 10.6459, 1596.7449, 613.8191, 445.7714, 544.2392, 1580.5558, 519.0967, 530.7006, 562.4915, 1309.7717, 1687.4818], [45.145, 405.5258, 1015.1416, 2188.5581, 1124.4889, 1441.3042, 1256.6327, 189.8723, 443.2, 558.8804, 1606.0545, 331.6914, 524.2316, 17.9492, 921.8043, 1670.8], [179.16, 1653.6392, 1677.2457, 3650.8605, 1184.7667, 942.3317, 1636.5918, 871.4787, 247.7429, 699.9593, 3467.9766, 989.8216, 719.2288, 213.6949, 1582.7065, 1398.2364]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

