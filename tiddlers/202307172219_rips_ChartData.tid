created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Drumina", "Ryvalia Fazebringer", "Soweng", "Tootsy Pop Star", "Tribal S", "Elonith Requiem", "Blade Stacker", "Daphne Agla\u00e9", "Rozaalyna", "Venomina", "Newtype Khan", "Black Raspberry Pie", "Rina Of Theros", "Morton Saltbringer", "Primal Clone", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Druid", "Chronomancer", "Reaper", "Scourge", "Druid", "Scourge", "Virtuoso", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0174, 0.0531, 0.0179, 0.014, 0.0245, 0.0058, 0.0606, 0.0247, 0.0559, 0.0, 0.0781, 0.0427, 0.019], [0.0, 0.0117, 0.0409, 0.028, 0.0491, 0.0029, 0.1515, 0.0473, 0.0726, 0.0312, 0.0156, 0.0474, 0.0633], [0.0, 0.0588, 0.1776, 0.0396, 0.0087, 0.3737, 0.0494, 0.2961, 0.0312, 0.0781, 0.0284, 0.2848], [0.0, 0.0648, 0.0691, 0.2009, 0.2132, 0.0262, 0.0606], [0.0, 0.1041, 0.0767, 0.0841, 0.0792, 0.0349, 0.1515, 0.0658, 0.0782, 0.0, 0.125, 0.0474, 0.0443], [0.1605, 0.3408, 0.0625, 0.6875, 0.218, 0.5316], [0.0707, 0.4444, 0.5866, 0.0312, 0.7969, 0.0664, 0.4557], [0.0, 0.0181, 0.156, 0.2757, 0.1226, 0.0174, 0.3636, 0.249, 0.162, 0.0938, 0.5156, 0.0758, 0.3734], [0.0, 0.0723, 0.2455, 0.3224, 0.0075, 0.0174, 0.6162, 0.3539, 0.4413, 0.0, 0.4219], [0.0, 0.017, 0.1637, 0.1308, 0.234, 0.0174, 0.4343, 0.3477, 0.4078, 0.0625, 0.9531, 0.1991, 0.5127], [0.0087, 0.068, 0.1662, 0.3037, 0.3264, 0.0698, 0.4545, 0.323, 0.2737, 0.1875, 0.3906, 0.1327, 0.3861], [0.0, 0.1158, 0.0818, 0.3785, 0.3302, 0.0087, 0.8788, 0.463, 0.3966, 0.0, 0.8594, 0.1848, 0.5316], [0.0609, 0.084, 0.2839, 0.285, 0.4, 0.0029, 0.9899, 0.428, 0.3408, 0.0938, 0.8125, 0.1611, 0.481], [0.0174, 0.0882, 0.1944, 0.3271, 0.5321, 0.0581, 1.2525, 0.5185, 0.4246, 0.0938, 1.0, 0.2891, 0.4684], [0.0087, 0.1222, 0.0972, 0.6355, 0.5604, 0.064, 1.0505, 0.5597, 0.5978, 0.0625, 0.7656, 0.1611, 0.7089], [0.0174, 0.1583, 0.2327, 0.2196, 0.5189, 0.1076, 1.2828, 0.5926, 0.3184, 0.0938, 1.1562, 0.3744, 0.6519], [0.2, 0.186, 0.2609, 1.0093, 0.8528, 0.0756, 1.8889, 0.7428, 0.4693, 0.2812, 1.5, 0.3412, 0.8038]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

