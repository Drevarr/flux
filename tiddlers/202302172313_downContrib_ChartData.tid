created: 20230217231312000
creator: Drevarr
modified: 20230705163519447
modifier: drevarr
tags: ChartData
title: 202302172313_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Nelliel T", "Eva Akos", "Arcanophage Farra", "Husky Guard", "Ace Hammers", "Mako Engi", "Smol Gluvs", "Veron Blackburn", "Minka Bringer", "Legacy Of Mathus", "Whose Guardian", "Panther B Me", "Jeckyll Mbs", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Rina Of Theros", "Fruji", "Demon Sekhmet", "K\u00f4sair", "Be\u00eb", "Sofya De Meme", "Sister Elonith", "Mike The Archmagus", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Soulbeast", "Scourge", "Scourge", "Spellbreaker", "Dragonhunter", "Vindicator", "Scrapper", "Scourge", "Herald", "Scrapper", "Berserker", "Dragonhunter", "Scourge", "Berserker", "Weaver", "Berserker", "Scourge", "Scrapper", "Berserker", "Berserker", "Scourge", "Weaver", "Berserker", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[246.0, 3955.0, 6191.0, 9535.0, 1331.0, 0.0, 687.0, 0.0, 0.0, 3492.0, 726.0, 1017.0, 368.0, 0.0, 20558.0, 11853.0, 135.0, 2594.0, 0.0, 4146.0, 815.0, 1515.0, 0.0, 2337.0, 2227.0, 0.0], [0.0, 11863.0, 286.0, 10644.0, 7799.0, 5614.0, 771.0, 123.0, 0.0, 548.0, 30.0, 0.0, 0.0, 4991.0, 4167.0, 22015.0, 419.0, 0.0, 0.0, 0.0, 8285.0, 0.0, 6892.0, 0.0, 3235.0, 9401.0, 0.0], [0.0, 0.0, 12303.0, 18074.0, 14149.0, 0.0, 10893.0, 0.0, 0.0, 1238.0, 0.0, 25474.0, 0.0, 5088.0, 9872.0], [1708.0, 4739.0, 6053.0, 27365.0, 6093.0, 921.0, 0.0, 551.0, 0.0, 3150.0, 0.0, 7734.0, 2804.0, 16703.0, 18537.0, 0.0, 910.0, 0.0, 1300.0, 269.0, 2457.0, 9664.0, 0.0, 0.0, 3230.0, 2887.0], [11642.0, 6077.0, 7993.0, 11024.0, 9313.0, 7751.0, 0.0, 2902.0, 0.0, 2152.0, 0.0, 0.0, 0.0, 3318.0, 15710.0, 20698.0, 0.0, 0.0, 0.0, 5367.0, 7095.0, 0.0, 7437.0, 0.0, 0.0, 10313.0, 4713.0], [1534.0, 9556.0, 5074.0, 44624.0, 21379.0, 0.0, 0.0, 0.0, 0.0, 9412.0, 1893.0, 1505.0, 2020.0, 11243.0, 17694.0, 1040.0, 0.0, 0.0, 3473.0, 0.0, 3570.0, 0.0, 1409.0, 3697.0, 932.0], [5774.0, 18565.0, 11864.0, 32385.0, 26731.0, 4288.0, 10427.0, 0.0, 5741.0, 0.0, 0.0, 10203.0, 0.0, 7484.0, 5183.0, 3075.0], [1583.0, 5258.0, 6205.0, 29993.0, 6367.0, 976.0, 1544.0, 1432.0, 4113.0, 553.0, 5523.0, 5975.0, 0.0, 459.0, 4696.0, 16154.0, 20984.0, 0.0, 0.0, 0.0, 2982.0, 15559.0, 1441.0, 5738.0, 0.0, 7237.0, 10607.0, 7381.0], [13087.0, 21658.0, 9158.0, 37120.0, 711.0, 4724.0, 1498.0, 0.0, 7613.0, 0.0, 3940.0, 1553.0, 41794.0, 32427.0, 3765.0, 11417.0, 0.0, 0.0], [10291.0, 15949.0, 18388.0, 45748.0, 11378.0, 5790.0, 1847.0, 0.0, 1611.0, 4635.0, 736.0, 0.0, 4058.0, 11797.0, 21585.0, 31984.0, 6711.0, 2819.0, 0.0, 361.0], [7796.0, 51813.0, 15778.0, 9867.0, 20551.0, 862.0, 0.0, 0.0, 15557.0, 0.0, 14443.0, 14063.0, 0.0, 10580.0, 5275.0, 25686.0, 14125.0, 0.0, 26210.0], [9683.0, 24232.0, 12830.0, 38549.0, 20632.0, 4369.0, 766.0, 2698.0, 0.0, 16983.0, 320.0, 4661.0, 613.0, 19659.0, 42372.0, 9383.0, 0.0, 3475.0, 7631.0, 5789.0, 15938.0, 0.0, 27560.0, 1992.0, 4072.0], [4621.0, 20930.0, 3216.0, 43517.0, 13204.0, 1989.0, 1171.0, 6549.0, 2404.0, 2639.0, 3900.0, 9257.0, 0.0, 5217.0, 3025.0, 47313.0, 31051.0, 0.0, 6946.0, 0.0, 735.0, 7176.0, 2786.0, 13600.0, 0.0, 17700.0, 13519.0, 17079.0], [0.0, 25939.0, 4137.0, 25382.0, 27156.0, 576.0, 4563.0, 3601.0, 0.0, 528.0, 1668.0, 908.0, 11361.0, 65814.0, 51388.0, 0.0, 8874.0, 0.0, 0.0, 5273.0, 2205.0, 28212.0, 0.0, 0.0, 16885.0, 0.0], [8438.0, 17681.0, 18930.0, 35440.0, 18181.0, 7029.0, 0.0, 6693.0, 4288.0, 1943.0, 16604.0, 0.0, 0.0, 1635.0, 12488.0, 22305.0, 60380.0, 0.0, 890.0, 0.0, 6541.0, 15775.0, 0.0, 0.0, 17268.0, 16182.0], [34033.0, 7784.0, 71959.0, 11453.0, 0.0, 4849.0, 10064.0, 2626.0, 10674.0, 0.0, 0.0, 5439.0, 48212.0, 19334.0, 4038.0, 6129.0, 0.0, 1857.0, 9315.0, 0.0, 37249.0, 0.0, 6414.0, 9268.0], [6018.0, 12660.0, 9966.0, 80367.0, 11529.0, 7397.0, 3050.0, 0.0, 6186.0, 790.0, 17732.0, 6293.0, 0.0, 5686.0, 7242.0, 54594.0, 34230.0, 0.0, 7575.0, 0.0, 0.0, 14238.0, 4846.0, 16053.0, 0.0, 10090.0, 15608.0, 3461.0], [17451.0, 31738.0, 30336.0, 75805.0, 5371.0, 15359.0, 18009.0, 5950.0, 5914.0, 4051.0, 14412.0, 10578.0, 0.0, 2227.0, 15431.0, 40388.0, 49657.0, 0.0, 8391.0, 0.0, 0.0, 21072.0, 4185.0, 34167.0, 0.0, 0.0, 25297.0, 26692.0], [36951.0, 18909.0, 18301.0, 76751.0, 31878.0, 17762.0, 0.0, 0.0, 0.0, 0.0, 21125.0, 6016.0, 12662.0, 30252.0, 46948.0, 55720.0, 26004.0, 0.0, 5213.0, 21801.0, 2747.0, 17021.0, 0.0, 7645.0, 26285.0, 6178.0], [23477.0, 30494.0, 1578.0, 67900.0, 62752.0, 14619.0, 5327.0, 0.0, 0.0, 0.0, 16959.0, 0.0, 0.0, 20653.0, 0.0, 51988.0, 47770.0, 0.0, 25027.0, 0.0, 2.0, 22462.0, 0.0, 61983.0, 0.0, 0.0, 18681.0, 20585.0], [8204.0, 17133.0, 4344.0, 53580.0, 29445.0, 11119.0, 13511.0, 0.0, 12901.0, 2523.0, 13929.0, 13862.0, 0.0, 5265.0, 18395.0, 85309.0, 90783.0, 1510.0, 591.0, 0.0, 0.0, 43888.0, 0.0, 46449.0, 0.0, 26974.0, 19488.0, 0.0], [15051.0, 52146.0, 36827.0, 59351.0, 6653.0, 17815.0, 1632.0, 29660.0, 9893.0, 14914.0, 10029.0, 0.0, 30408.0, 12711.0, 57444.0, 36319.0, 1661.0, 23086.0, 0.0, 1583.0, 11201.0, 2840.0, 14257.0, 0.0, 23472.0, 43913.0, 15753.0], [25131.0, 33510.0, 8113.0, 90159.0, 23434.0, 3577.0, 1955.0, 5719.0, 6216.0, 4758.0, 13880.0, 8650.0, 20726.0, 20023.0, 58905.0, 61068.0, 2253.0, 6574.0, 0.0, 0.0, 41866.0, 11073.0, 45773.0, 0.0, 14632.0, 27346.0, 14290.0], [11338.0, 63659.0, 23321.0, 44654.0, 12816.0, 14910.0, 1923.0, 4910.0, 6175.0, 4631.0, 58540.0, 14940.0, 7458.0, 2470.0, 2663.0, 88024.0, 121705.0, 261.0, 0.0, 1100.0, 28036.0, 2826.0, 22584.0, 0.0, 4026.0, 20233.0], [19046.0, 46445.0, 15082.0, 96855.0, 46862.0, 12196.0, 13446.0, 3178.0, 0.0, 2311.0, 28013.0, 11317.0, 0.0, 0.0, 19680.0, 38551.0, 77816.0, 0.0, 25355.0, 0.0, 2146.0, 37205.0, 7228.0, 25067.0, 0.0, 21303.0, 19687.0, 15413.0], [15354.0, 62819.0, 9358.0, 97146.0, 111882.0, 14272.0, 2659.0, 11609.0, 6476.0, 9798.0, 12785.0, 41543.0, 12360.0, 85223.0, 82177.0, 1388.0, 7385.0, 0.0, 0.0, 33057.0, 0.0, 28624.0, 0.0, 4443.0, 33766.0, 38170.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

