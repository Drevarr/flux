created: 20230218220736000
creator: Drevarr
modified: 20230705163519574
modifier: drevarr
tags: ChartData
title: 202302182207_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Gabeulon", "Sumatra Satyricon", "Ark Est Destroyer", "Xmus Jaxnflaxn Waxn", "Th\u00fbnad", "Newtype Khan", "Sygaldry Verdandi", "Irish Mini Rev", "Adalvarn", "Sailor Soup", "Kia Forte", "Husky Guard", "Aveliad Frostmoon", "Kalenthian", "Dark Sidiuz", "Kira Dragonblaze", "Ace Hammers", "Minka Bringer", "Peanut Strongpaw", "Morv\u00e4rth", "Rina Of Theros", "Lord Erin The Wise", "Legacy Of Mathus", "Be\u00eb", "Sheep Poh", "Sp\u00edcy Cheese", "Xanvias Tseli"];
const professions = ["Firebrand", "Soulbeast", "Spellbreaker", "Engineer", "Soulbeast", "Spellbreaker", "Dragonhunter", "Vindicator", "Mirage", "Reaper", "Scrapper", "Dragonhunter", "Scrapper", "Mechanist", "Scourge", "Dragonhunter", "Vindicator", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Weaver", "Berserker", "Scourge", "Catalyst", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9711.0, 12343.0, 12021.0, 2858.0, 7891.0, 8670.0, 1929.0, 0.0, 13107.0, 5346.0], [11677.0, 2653.0, 6166.0, 3930.0, 9546.0, 9061.0, 12219.0, 969.0, 1485.0, 1453.0, 15202.0], [30252.0, 36224.0, 11569.0, 0.0], [22942.0, 5962.0, 26675.0, 1946.0, 9617.0, 11694.0, 1952.0, 0.0, 0.0, 864.0], [2791.0, 33246.0, 3239.0, 9394.0, 0.0, 33611.0], [22352.0, 6851.0, 7575.0, 5440.0, 1840.0, 3699.0, 12955.0, 1054.0, 5112.0, 1957.0, 15123.0], [95736.0], [18116.0, 31179.0, 0.0, 67477.0], [33413.0, 22059.0, 7313.0, 22817.0, 1450.0, 55699.0], [48272.0, 20493.0, 9347.0, 25899.0, 14700.0, 329.0, 0.0, 30248.0], [20464.0, 1102.0, 27308.0, 18934.0, 1841.0, 8037.0, 7343.0, 68285.0], [38790.0, 41031.0, 21149.0, 0.0, 7310.0, 15982.0, 8251.0, 0.0, 12518.0, 11790.0], [51089.0, 44581.0, 49409.0, 20984.0, 2592.0], [42759.0, 20875.0, 0.0, 1055.0, 26613.0, 3277.0, 2439.0, 2189.0, 12767.0, 57792.0], [45392.0, 48833.0, 35393.0, 51173.0], [49171.0, 28016.0, 35738.0, 70117.0, 0.0], [29694.0, 25422.0, 44751.0, 33757.0, 7057.0, 6599.0, 30051.0, 1244.0, 4625.0, 40264.0], [32761.0, 22866.0, 69505.0, 60896.0, 4096.0, 11549.0, 18871.0, 0.0, 0.0, 14248.0, 39476.0], [50986.0, 47441.0, 36904.0, 6120.0, 28143.0, 25388.0, 8731.0, 14884.0, 7529.0, 71598.0], [49604.0, 47590.0, 55718.0, 0.0, 43207.0, 32393.0, 16177.0, 884.0, 3214.0, 49717.0], [65929.0, 83177.0, 40168.0, 68759.0, 0.0, 19923.0, 31013.0, 10208.0, 897.0, 19772.0, 41328.0], [0.0, 133279.0, 74462.0, 42724.0, 0.0, 21424.0, 33743.0, 3414.0, 28872.0, 63067.0], [70768.0, 105015.0, 38453.0, 95993.0, 1395.0, 20077.0, 53920.0, 2251.0, 5019.0, 1871.0, 44277.0], [121264.0, 98403.0, 46379.0, 63199.0, 7898.0, 3167.0, 19059.0, 10383.0, 8295.0, 77291.0], [101071.0, 123852.0, 5304.0, 24356.0, 64172.0, 3978.0, 315.0, 40064.0, 147925.0], [86336.0, 81866.0, 82762.0, 95371.0, 7118.0, 89199.0, 35752.0, 0.0, 0.0, 107411.0], [138641.0, 117760.0, 121977.0, 61148.0, 0.0, 27966.0, 70007.0, 16217.0, 4966.0, 11248.0, 114848.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

