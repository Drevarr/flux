created: 20230702223827000
creator: Drevarr
modified: 20230705163540951
modifier: drevarr
tags: ChartData
title: 202307022238_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Zayde Sunsabre", "Vopiscus Zergherdus", "Sarette Fay", "Perpetual Hope", "Neohelios", "Pixzil", "Aronorf Xideliesi", "Aezlenne", "S\u00e2ucy K\u00e2t", "Vini Boy", "Amiti\u00e9l", "Ima Lou", "Thats Not Nice", "Demon Staph", "Valaria Emberstorm", "Spirita Demon", "Artakama Nahid"];
const professions = ["Scrapper", "Spellbreaker", "Scrapper", "Chronomancer", "Tempest", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Firebrand", "Druid", "Firebrand", "Druid", "Tempest", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.9852, 0.0, 0.0, 0.0, 12.5254, 4.0, 51.5769, 0.0, 19.3016, 0.0, 39.1476, 127.1724, 0.0], [0.9922, 17.0374, 8.0081, 0.0, 35.156, 0.0, 0.0, 3.9683, 5.1186, 6.0, 23.141, 0.0, 5.0159, 13.0141, 31.1286, 9.9901, 0.0, 2.0, 1.975, 13.0543, 4.9861, 21.7857, 0.0, 0.0, 1.9937, 10.0051, 4.9962, 2.0, 17.3636, 7.871, 8.0053, 5.0079, 0.0, 1.9938, 0.0, 1.9831, 0.0, 18.102, 11.0196, 9.0203, 0.0, 5.9552, 26.188, 3.2511, 5.0, 7.963, 0.0, 6.9913, 10.9333], [25.2836, 46.8205, 105.0485, 36.9623, 0.0, 15.3148, 0.0, 86.1179, 53.65], [9.0559, 17.0775, 13.0654, 18.3902, 0.0, 22.2936, 0.0, 40.506, 0.0, 11.127, 29.7458, 29.236, 22.4231, 0.0, 18.1032, 0.0, 4.0, 25.335, 0.0, 0.0, 10.0652, 32.2569, 13.0119, 0.0, 0.0, 0.0, 0.0, 30.0568, 0.0, 0.0, 0.0, 34.4545, 38.5873, 0.0, 20.0123, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.9851, 3.6325, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0393, 0.0], [21.0317, 3.0455, 47.858, 0.9818, 2.9661, 0.0, 16.2041, 34.3333, 46.6554, 0.0, 10.9104, 61.094, 75.0881, 16.0556, 3.0, 66.69, 23.0], [0.0, 0.0, 58.5949, 26.0404, 8.9962, 0.0, 34.5974, 11.8065, 136.5775, 32.3254, 56.7963, 4.9661, 37.0408, 42.3137, 35.3041, 0.0, 2.9701, 0.0], [35.9225, 37.8505, 77.5366, 65.6972, 13.9556, 0.0, 0.0, 7.9524, 0.0, 9.0, 0.0, 0.0, 17.0794, 6.0, 12.0048, 16.9852, 0.0, 0.975, 6.0217, 10.9722, 17.119, 0.0, 0.0, 2.9937, 0.0, 6.9962, 0.0, 2.0, 0.0, 40.6631, 15.0238, 8.2099, 0.0, 1.0, 5.9412, 7.3716, 0.0, 6.0171, 6.0, 0.0, 0.0, 16.0655, 0.0], [17.9302, 18.0561, 18.3171, 0.0, 36.656, 1.9926, 17.1807, 0.0, 19.8571, 10.0678, 20.0, 16.641, 10.0317, 1.0, 10.0048, 37.0345, 0.0, 0.0, 0.975, 0.0, 18.9583, 11.3333, 0.0, 17.981, 4.0808, 25.0, 0.0, 12.0649, 1.9677, 32.0963, 21.1825, 0.0, 25.1543, 0.9818, 0.0, 0.0, 3.0, 2.0, 2.0068, 0.0, 9.0598, 28.0441, 0.0, 0.0, 4.0, 0.0, 12.9869, 11.0833], [25.9225, 7.4486, 47.8699, 0.0, 0.9954, 0.0, 3.0, 21.9206, 20.2203, 10.0, 13.0513, 0.0, 0.0, 0.0, 9.0048, 41.3202, 0.0, 0.0, 0.0, 25.2174, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 59.3977, 0.0, 53.4935, 42.2834, 16.0476, 0.0, 14.9877, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 3.0085, 17.0264, 0.0, 0.0, 0.0, 0.0, 27.0306, 21.05], [0.9938, 13.9457, 12.8131, 38.439, 0.0, 8.0596, 15.9556, 33.1446, 0.0, 31.6032, 32.4915, 8.0674, 33.3974, 23.1032, 14.0141, 30.0238, 23.0099, 0.0, 14.8571, 4.925, 28.2826, 11.0347, 0.0, 0.0, 0.0, 8.9873, 0.0, 48.2689, 0.0, 35.9351, 0.0, 78.5027], [67.4496, 45.9346, 115.4065, 0.0, 111.4817, 8.9704, 17.0, 50.9365, 26.9831, 50.3483, 59.6795, 0.0, 50.4524, 17.0141, 104.7524, 106.0591, 10.8824], [14.938, 30.0561, 44.5122, 0.0, 54.5642, 0.9926, 47.6386, 0.0, 41.2698, 2.0, 22.0449, 0.0, 0.0, 13.0476, 0.0, 19.0476, 69.064, 9.925, 20.087, 11.9861, 30.3095, 4.0455, 0.0, 3.9937, 11.1566, 31.0985, 0.0, 23.3506, 92.0428, 40.4444, 0.0, 41.2716, 0.0, 0.0, 0.0, 16.102, 12.0, 16.0405, 0.0, 6.9403, 22.7094, 46.304, 10.2453, 0.0, 5.9815, 0.0, 32.0524], [1.0, 79.2248, 9.9926, 38.8554, 0.0, 65.6349, 15.678, 43.1798, 26.0897, 34.5556, 16.8451, 83.8857, 119.5517, 1.0, 0.0, 13.0543, 60.5764, 49.1786, 0.0, 0.0, 35.4684, 0.0, 86.7576, 0.0, 12.0649, 5.9032, 45.0695], [39.6047, 29.215, 61.2276, 0.0, 59.0046, 9.0, 23.1205, 0.0, 39.7778, 26.6271, 41.9326, 47.3846, 2.3571, 34.0, 8.169, 55.5048, 59.5911, 0.0, 0.975, 42.5109, 43.9236, 17.8214, 3.0455, 0.0, 42.1582, 0.0, 107.4659, 0.0, 25.1688, 12.9677, 74.5134, 50.8889, 59.963, 0.0, 0.0, 0.9756, 5.0204, 15.3529, 11.0203, 0.0, 33.9573, 61.7093, 12.0189, 0.0, 12.963, 19.7727, 56.6288], [106.5194, 62.757, 135.9837, 0.0, 155.8119, 23.9407, 104.1325, 0.0, 67.0, 63.7119, 69.2809, 110.1538, 0.0, 96.0556, 20.1549, 171.3048, 196.2562, 11.9118, 0.0, 24.525, 55.4674, 102.9861, 109.5357], [52.7952, 0.0, 55.1746, 32.5254, 73.3483, 69.7821, 0.0, 55.6905, 13.2676, 87.8476, 133.8621, 0.0, 11.5238, 6.925, 43.913, 50.0764, 59.619, 12.2273, 0.0, 65.2468, 0.0, 125.7576, 3.0323, 66.5065, 2.9355, 68.8235, 65.7381, 0.0, 109.179, 0.0, 0.0, 10.0612, 40.2353, 63.5135, 0.0, 24.806, 42.3162, 106.8018, 34.0189, 0.0, 20.0556, 0.0, 71.3668, 39.2167], [8.0, 0.0, 164.8797, 182.0303, 14.129, 97.2987, 0.0, 228.8663, 114.3571, 3.0, 121.3704, 0.9818, 1.9831, 0.0, 54.3265, 77.9412, 76.0743, 0.0, 23.8209, 108.2906, 145.0529, 6.9245, 0.0, 36.1111, 3.0, 128.3231], [23.0186, 77.9845, 64.2991, 115.0732, 17.1957, 131.789, 33.9185, 51.5783, 3.0303, 76.8254, 37.7458, 66.5281, 96.1026, 7.1667, 95.2698, 43.9155, 150.8, 116.0394, 16.0, 0.0, 19.875, 53.8043, 74.1667, 69.5119, 16.3182, 2.0, 112.7468, 22.1414, 151.0909, 10.0968, 84.5584, 150.4064, 65.1905, 2.0455, 79.3333, 1.9818, 0.9831, 41.2653, 46.4902, 82.5541, 3.0208, 30.0746, 92.4786, 118.5066, 51.1321, 12.1613, 46.037, 19.4545, 117.1921, 75.1333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

