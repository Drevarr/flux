created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Loganlek", "Newtype Khan", "Venomina The Fierce", "Belvyn Brightblade", "Greg The Knight", "Yummy Kiwi", "Zaedy Zae", "Sygaldry Verdandi", "Sub Train", "Bearah", "Crusader Siolith", "Gabe Malhorn", "Koralia Danai"];
const professions = ["Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[180.8734, 91.108, 131.138], [42.2532, 33.0351, 16.5487, 0.0, 0.0, 10.32, 0.0, 33.827, 9.9001, 21.8912, 32.9654, 0.0, 21.238, 0.0, 102.8625, 40.3207, 78.0216], [29.1608, 28.9898, 25.756, 0.0, 56.499, 52.7531, 168.0362, 124.0544, 312.7476], [356.7078, 29.9445, 128.6225, 0.0, 56.5896, 247.28, 0.0, 104.949], [840.3498, 0.0, 72.709, 0.0, 221.5248, 138.2, 0.0, 158.549], [537.4188, 214.419, 87.2015, 0.0, 482.676, 231.16, 216.2254], [404.199, 19.6425, 22.7174, 35.5586, 128.4096, 85.8, 150.7007, 36.2926, 107.0735, 84.4774, 15.4224, 72.335, 115.6294, 279.4568, 301.6318, 477.8272], [741.177, 161.2263, 40.2038, 0.0, 250.7544, 127.92, 0.0, 117.1778, 68.5032, 257.7805, 57.3842, 19.8373, 133.533, 305.8894, 828.1666, 166.9918, 503.1732], [428.9922, 68.1992, 29.3468, 0.0, 64.068, 199.88, 17.721, 217.138, 57.0782, 223.6282, 50.6399, 0.0, 191.031, 251.0554, 856.4743, 472.9054, 702.4148], [515.07, 148.8639, 106.3328, 23.8867, 119.2896, 306.6, 256.3189, 223.6442, 164.7552, 176.9782, 0.0, 165.871, 384.9066, 721.6833, 266.1877, 720.9284], [889.9362, 149.3447, 100.345, 10.296, 308.8032, 267.2, 39.644, 332.9165, 211.3511, 256.2913, 122.3847, 42.3878, 155.4, 334.403, 1010.3566, 668.086, 1313.584], [991.5534, 169.9487, 188.1715, 77.6599, 258.7344, 294.28, 17.864, 394.5474, 103.2709, 284.189, 192.0364, 93.296, 225.182, 467.1857, 1070.0992, 542.6043, 1004.3628], [1202.4702, 128.1912, 88.4352, 0.0, 267.5352, 328.6, 345.1453, 132.549, 289.5005, 183.2573, 20.9202, 185.592, 482.4267, 1316.64, 772.2774, 1601.6468]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

