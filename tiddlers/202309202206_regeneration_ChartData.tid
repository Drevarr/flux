created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Leafzel", "Tegan Parker", "Jmbrage Rev", "Cat Wigglebooty", "Etchery Howls", "Arriasa", "Tootsie Pop Rocks", "Klengah", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Vindicator", "Scrapper", "Druid", "Druid", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[249.1289, 6.4575, 8.88, 4.3316, 1.9296, 0.0, 34.5193, 6.0058, 36.354, 15.6111, 19.9045, 0.0, 6.5654, 4.1736, 56.7603], [56.744, 113.5872, 51.0144, 78.4666, 27.2186, 32.2914, 47.2586, 19.0162, 67.6674, 28.1253, 99.6795, 49.4592], [988.9757, 4.23, 73.6418, 101.4594, 46.3392, 211.2752, 150.144, 32.8981, 154.8274], [1115.4251, 25.995, 88.3826, 71.2715, 124.1856, 92.598, 191.2051, 66.8528, 29.9074, 122.5356, 42.7098, 78.9581], [235.0726, 168.336, 205.4461, 223.1923, 133.8964, 141.2265, 307.8124, 79.4958, 309.4927, 262.6933, 42.1286], [264.5275, 334.5696, 0.0, 294.1517, 236.2878, 479.7083, 623.126, 63.0191, 215.6844, 190.9074, 295.6954], [1392.3571, 57.585, 7.699, 176.596, 223.0848, 219.2599, 327.7056, 109.0353, 182.3713, 20.8058, 91.4291, 42.2303, 115.1387, 0.0, 82.3437], [1391.2576, 37.2675, 155.6042, 521.8578, 175.824, 49.9872, 229.3091, 563.5622, 70.5649, 70.5277, 37.2319, 183.6149, 25.7536, 38.7332, 51.6483, 88.3494], [1850.4024, 143.13, 118.3171, 230.1079, 370.5984, 493.4411, 231.4829, 105.3383, 303.4104, 275.7349, 68.2212, 84.3758, 563.9577, 97.6819], [4308.7044, 145.4325, 199.1606, 516.5933, 298.08, 85.44, 369.9062, 1020.8486, 238.1363, 533.0425, 29.5337, 280.3409, 151.1192, 192.6624, 180.856, 345.9789]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

