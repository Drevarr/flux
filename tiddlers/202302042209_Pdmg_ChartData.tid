created: 20230204220933000
creator: Drevarr
modified: 20230705163518701
modifier: drevarr
tags: ChartData
title: 202302042209_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "Ace Rages", "Domina Flagbringer", "Kira Dragonblaze", "Smol Gluvs", "Whose Guardian", "Dark Sidiuz", "Warrior Husky", "Manuel Radiador", "Nelliel T", "Grasszanine", "Bubblesparklepuff", "Daddys Lil Orchid", "Rozaalyna", "Madrigal Moonshade", "Rina Of Theros", "Fungus", "Legacy Of Mathus", "Be\u00eb", "Etch\u00e9ry", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Kosa\u00edr", "Sofya De Meme", "Demon Sekhmet", "Xanvias Einzbern", "Mistwalker Caelon"];
const professions = ["Necromancer", "Berserker", "Spellbreaker", "Dragonhunter", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Scrapper", "Scourge", "Spellbreaker", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Scourge", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Weaver", "Scrapper", "Weaver", "Berserker", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[294.6171, 154.96, 465.6596, 513.8422], [152.0827, 267.9826, 138.1557, 335.4556, 35.8442, 31.9534, 300.7857, 186.4089, 0.0, 194.866, 175.4477], [181.771, 132.5037, 206.7951, 211.2544, 221.1495, 131.3834, 0.0, 418.4647, 0.0, 76.8166, 274.4683], [502.3513, 526.5136, 212.1967, 510.5947, 103.0, 60.9845], [199.2158, 148.8263, 378.7459, 419.8373, 177.5452, 195.038, 129.0179, 334.4721, 0.0, 110.5326, 262.1184], [473.8297, 293.8139, 575.8279, 422.1716, 616.9688], [422.0503, 318.5763, 214.4819, 584.0536, 915.4424, 231.92, 402.3228, 128.5232], [238.8993, 183.1836, 284.7459, 410.5799, 3.9688, 302.487, 114.1339, 67.0669, 0.0, 269.8148, 314.0806], [817.1367, 769.938, 509.1393], [207.3501, 321.7618, 586.8197, 87.0976, 0.0, 254.6252, 51.1429, 64.9554, 0.0, 429.9171, 433.0875], [279.4269, 232.5062, 311.0082, 312.1982, 215.109, 125.8532, 92.0804, 490.4201, 0.0, 241.8325, 350.8559], [608.0089, 113.8699, 131.44, 924.9859, 1203.8353], [617.1763, 254.7717, 537.8525, 706.7456, 80.5483, 389.7358, 474.8839, 0.0, 76.68, 714.4092, 40.9142], [471.018, 351.4541, 539.2377, 485.3284, 345.0717, 169.9914, 354.1607, 962.3309, 0.0, 411.8995, 420.6741], [543.2686, 345.3077, 608.9508, 729.2426, 111.972, 397.8566, 129.1786, 18.6691, 0.0, 594.1058, 866.3516], [531.3789, 345.1911, 597.6311, 743.1538, 613.3707, 553.4439, 0.0, 969.461, 0.0, 363.97, 528.3465], [595.3717, 416.4491, 663.2131, 478.4379, 583.3925, 370.4318, 518.3393, 992.2416, 16.16, 368.9647, 651.0532], [589.9976, 759.335, 322.1803, 1111.5325, 823.8318, 244.8463, 287.7232, 374.0446, 0.0, 332.1252, 651.048], [791.8861, 639.4764, 851.2459, 909.3402, 393.4984, 567.5043, 504.6339, 1163.7993, 0.0, 446.3369], [879.2266, 594.8834, 1265.3689, 1183.358, 314.3022, 748.3731, 324.2679, 1262.0223, 0.0, 539.8025, 933.7479], [675.0096, 922.0298, 0.0, 1025.5947, 1298.5919, 828.3506, 471.5536, 1808.6097, 103.96, 448.0018, 836.9262], [1037.6175, 942.1191, 952.877, 957.6893, 536.053, 240.0864, 512.8839, 1832.8178, 68.12, 921.1958, 809.837], [626.2219, 1076.7196, 969.5959, 623.6071, 2108.9145, 0.0, 2177.3351, 1903.4768], [1328.0995, 1017.5062, 1408.3525, 1502.2396, 1484.2243, 1454.5889, 1409.4643, 2344.0446, 35.64, 556.2522], [1304.6643, 793.598, 1086.0656, 2030.3314, 1054.6106, 1160.7737, 231.6339, 1074.5465, 214.68, 1823.9453, 1545.012], [1276.9209, 769.2903, 1978.2787, 1513.9822, 1475.1963, 966.4214, 623.6071, 2130.0595, 293.44, 1926.6367, 1136.8473], [1422.1847, 1088.5806, 1343.2377, 1716.3077, 1144.7165, 1152.601, 554.1607, 2266.6059, 195.88, 1331.3915, 1720.4614]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

