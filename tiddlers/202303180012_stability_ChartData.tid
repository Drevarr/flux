created: 20230318001239000
creator: Drevarr
modified: 20230705163522424
modifier: drevarr
tags: ChartData
title: 202303180012_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Arcanophage Farra", "Smol Daddy Tika", "Blanco Padre Guard", "Kmpek", "Ark Darkness", "Air One Com", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Xyntharos", "Whose Guardian", "Zaylen Harker", "Khailerian", "Viral Marketing", "Bella Sassy", "Sygaldry Verdandi", "Koralia Danai", "Jupi Jupi Jupi"];
const professions = ["Berserker", "Spellbreaker", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.0368, 0.0, 1.0114, 1.8697, 0.9984, 1.3475, 0.0, 1.012, 0.0, 0.2808, 0.0, 7.6567, 1.1635, 0.0, 0.0, 0.0, 1.2253, 0.0, 0.0, 0.0, 1.2572, 7.2971], [0.0, 0.0, 0.0, 0.0, 0.0, 13.5465, 1.8907, 0.0, 2.1168, 0.0, 0.0, 0.0, 0.0, 2.451, 1.911, 12.0187], [5.568, 0.0, 6.0682, 3.3238, 0.0, 2.0642, 2.2673, 1.5787, 0.0, 2.2464, 0.0, 0.0, 8.8347, 1.5029, 1.1322, 2.0462, 1.4553, 1.0768, 0.0, 0.0, 1.4407, 0.0, 1.3075, 6.0094], [21.4978, 5.2358, 2.1958, 0.0, 0.441, 4.9012, 3.1671, 0.0, 0.0, 4.8285, 3.0174, 32.6222], [14.3376, 0.0, 0.0, 2.9084, 1.8824, 0.086, 0.0, 0.0, 0.0, 1.7472, 2.8512, 34.7498, 2.424, 0.0, 0.0, 0.0, 1.3738, 0.0, 0.0, 0.0, 3.1683, 16.3111], [14.8944, 3.192, 0.4334, 21.605, 0.0728, 0.43, 0.2204, 0.0, 3.5532, 33.8664, 3.9113, 0.0, 0.2205], [9.8832, 1.7338, 5.8167, 0.3727, 0.1889, 0.3643, 0.0, 1.4976, 2.0064, 0.0, 30.038, 3.6845, 2.5389, 0.0, 1.5435, 2.1164, 0.0, 0.0, 0.0, 4.8781, 21.2474], [9.1872, 0.0, 4.1899, 21.3972, 1.8616, 0.0, 0.0, 0.0, 3.2994, 5.8968, 1.7688, 0.0, 37.4002, 0.0, 1.8184, 0.0, 0.0, 0.0, 0.0, 1.2005, 0.0, 0.0, 0.0, 10.731], [15.312, 0.0504, 4.7678, 23.0591, 0.208, 1.1468, 0.0, 1.1334, 2.0727, 2.0904, 0.8712, 37.6947, 0.5818, 0.0, 0.0, 1.323, 0.8169, 0.2236, 2.1374, 1.0157, 0.7598, 0.4526, 23.179], [8.6304, 0.0, 9.2467, 24.9288, 3.9728, 2.781, 1.4485, 2.2669, 0.0, 1.56, 3.564, 0.9103, 29.7435, 3.4906, 0.0, 0.0, 0.0, 6.7577, 1.863, 1.0248, 0.0, 0.0, 4.0735, 27.0421], [14.4768, 6.2496, 0.0, 9.3483, 2.3816, 3.4977, 3.5899, 7.165, 0.423, 5.0544, 3.5112, 1.4815, 38.5782, 3.636, 0.0, 1.5523, 2.3373, 6.1264, 0.0, 2.3424, 2.3775, 0.0, 26.1836], [17.6784, 3.3768, 17.771, 19.943, 2.5516, 3.6213, 0.0, 3.4686, 2.3712, 6.1776, 0.0, 22.3812, 5.5267, 4.3917, 0.2822, 4.2336, 7.0176, 3.2044, 2.196, 0.2594, 3.603, 3.9226, 36.2708], [19.3488, 0.2856, 3.7565, 42.7944, 1.4144, 2.7237, 0.0945, 1.3358, 0.1692, 1.6224, 4.0128, 0.0, 40.3451, 0.0, 2.7791, 0.0, 0.297, 0.149, 0.6149, 0.2696, 1.7602, 52.7965], [16.1472, 6.384, 7.8019, 33.4461, 0.4056, 0.0, 0.5353, 3.3194, 2.4534, 2.808, 4.4352, 0.2142, 49.7688, 4.1693, 4.2888, 0.0, 0.2205, 3.1561, 0.0, 0.0, 0.0245, 2.6654, 37.5585], [0.0846, 5.5224, 6.8112, 3.213, 58.6035, 5.7206, 3.0193, 4.0925, 8.5995, 9.7281, 10.5818, 4.597, 2.6772, 3.9706, 7.3423, 45.7141], [26.5872, 4.5696, 30.9187, 25.9675, 3.1824, 5.8773, 7.1167, 13.8037, 6.5565, 3.6504, 4.2768, 48.0019, 0.6302, 4.872, 0.0, 2.205, 4.864, 9.2032, 0.937, 0.5147, 5.9342, 37.5585], [21.576, 4.5864, 13.5811, 26.383, 3.484, 3.9851, 4.818, 6.3958, 4.0185, 5.9592, 5.0424, 0.232, 69.2051, 0.0, 6.0042, 3.3869, 4.9392, 9.0597, 6.1106, 0.1757, 0.9804, 6.0851, 51.938], [21.9936, 3.3264, 27.4512, 47.9879, 2.6104, 1.9496, 2.3932, 8.015, 0.4653, 5.5536, 5.148, 61.2539, 7.3205, 4.7348, 1.6229, 6.174, 6.869, 4.5085, 1.8739, 0.0, 2.3775, 2.5648, 51.7234]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

