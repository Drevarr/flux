created: 20230303232222000
creator: Drevarr
modified: 20230705163521061
modifier: drevarr
tags: ChartData
title: 202303032322_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Stoic Rapidfire", "Ravioli Fetabringer", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Druid", "Firebrand", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 177.4608, 139.3333, 43.0, 29.2368, 0.0, 0.0, 334.2632, 7.6744, 135.1025, 62.0147, 48.24, 226.2586, 8.1345, 0.0, 0.0, 424.0668, 6.7907, 232.0291, 267.5298, 3.3846, 184.6963, 202.2093, 129.1778, 160.7081], [760.5588, 434.8824, 195.1765, 288.2895, 182.3091, 157.315, 593.1404, 363.2636, 262.6765, 5.867, 1354.5238, 275.2051, 175.2143, 1171.1003, 355.1221, 646.3278, 248.3892], [247.9412, 156.0294, 16.3922, 420.0, 180.0263, 95.4727, 94.7953, 383.8947, 115.2403, 640.3052, 230.1176, 221.512, 645.6627, 425.042, 157.5, 42.0385, 619.7921, 15.8605, 507.6721, 736.9643, 91.1026, 44.0893, 477.2542, 97.5116, 268.8667, 104.5784], [1221.5294, 444.3725, 293.7632, 22.8182, 124.622, 730.614, 460.6279, 1772.5581, 628.75, 473.672, 1935.3425, 1419.1933, 83.2353, 104.4231, 2000.3069, 1497.694, 1377.7619, 87.3077, 543.5714, 1356.678, 150.8023, 979.0056, 610.6757], [841.3824, 517.6242, 392.4118, 104.875, 302.9474, 148.8364, 279.1102, 1013.0, 796.2636, 2605.9863, 872.9559, 710.256, 2772.1113, 1522.0084, 268.2647, 290.8462, 3215.9233, 148.093, 2103.3862, 1816.9048, 407.9231, 60.9643, 1731.3263, 520.0291, 967.4111, 696.7405]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

