created: 20230403221011000
creator: Drevarr
modified: 20230705163524272
modifier: drevarr
tags: ChartData
title: 202304032210_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Viral Marketing", "Jeckyll Mbs", "Ak\u00e1nt\u00f3r", "Newtype Khan", "Xyntharos", "Lagertha Scorned", "Eibh\u00ebar", "Etch\u00e9ry", "Johosh The Great", "Zenek Tryst", "Xanvias Tlesel", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Firebrand", "Berserker", "Druid", "Spellbreaker", "Vindicator", "Scrapper", "Chronomancer", "Berserker", "Firebrand", "Tempest", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[251, 215, 431, 397, 370, 314, 530, 207, 289], [312, 227, 383, 271, 862, 789, 3494, 5313, 344, 381, 293, 283, 4533, 663, 901, 1910, 1306], [279, 204, 414, 294, 336, 620, 529, 276, 292, 671, 329, 258, 806, 426, 1433, 633, 288], [266, 212, 398, 423, 383, 765, 295, 223, 268, 1009, 168, 409, 1338, 553, 561, 640, 348], [236, 255, 398, 6082, 335, 336, 332, 312, 292, 485, 253, 291, 1680, 434, 508, 411, 379], [13982, 391, 19036, 819, 1160, 298, 253, 337, 574, 177, 326, 541, 1205], [236, 241, 515, 456, 625, 308, 425, 437, 308, 926, 163, 253, 1118, 520, 1174, 1891, 298], [212, 230, 657, 411, 361, 741, 526, 213, 662, 945, 265, 273, 595], [323, 250, 306, 450, 304, 429, 382, 253, 299, 1188, 264, 1340, 335, 702, 447, 289], [407, 296, 320, 337, 407, 446, 365, 262, 534, 276, 381, 727, 625], [226, 201, 326, 225, 291, 319, 309, 184, 270, 614, 475, 174, 647, 333, 473, 1078, 320], [303, 208, 287, 411, 384, 306, 231, 273, 219, 594, 214, 206, 650, 248, 376, 420, 281], [188, 165, 415, 200, 187, 286, 213, 206, 233, 327, 209, 991, 226, 457, 257, 238]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

