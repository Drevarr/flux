created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Ka Otik Nightm\u00e6r", "Aloe Pen", "Jerryatric Reflexes", "Samara Evermoore", "Flick Embermage", "Flick Embermage", "Ria Zera", "Luke The Ghastly", "Grae Leon", "Kosair", "Meryndah", "Crabbedmermaid", "Sapir Yong", "Mold One", "Govinda Ektar", "Hawaiian Supreme", "Gumaass", "Xuerreux", "Grae Leon", "Necrotic Windrunner", "Amiti\u00e9l", "Reina Armitage", "Minnie Darley", "Masa Yuki Asahina", "Chocolate Teapot", "Darks Na", "Xanvias Tsolice", "Drevarr Moonwillow", "Crabbedmermaid", "Elonith Requiem", "Mom Tapper", "Gestern Yesteryear", "Serum Vision", "Drac Tepes"];
const professions = ["Dragonhunter", "Reaper", "Vindicator", "Berserker", "Deadeye", "Tempest", "Weaver", "Scrapper", "Scourge", "Weaver", "Firebrand", "Druid", "Dragonhunter", "Firebrand", "Reaper", "Vindicator", "Spellbreaker", "Dragonhunter", "Berserker", "Tempest", "Reaper", "Willbender", "Druid", "Dragonhunter", "Reaper", "Chronomancer", "Firebrand", "Weaver", "Scrapper", "Firebrand", "Reaper", "Spellbreaker", "Firebrand", "Tempest", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0175, 0.1687, 0.72, 0.1831], [0.019, 0.1404, 0.0672], [0.0857, 0.1286, 0.092, 0.2603], [0.0986, 0.1203, 0.1206, 0.1194], [0.0964, 0.1286, 0.3143, 0.069, 0.2374], [0.1034, 0.1081, 0.1348, 0.0222, 0.0571, 0.2424, 0.0122, 0.3786, 0.05, 0.0775, 0.0], [0.0476, 0.0351, 0.0964, 1.16, 0.1408, 0.0443, 0.1096, 0.0373], [0.0877, 0.0964, 0.56, 0.2676, 0.0506, 0.1206, 0.0522], [0.2254, 0.1456, 0.2018, 0.1343], [0.0061, 0.165, 0.0636, 0.115, 0.0, 0.0, 0.0976, 0.2239], [0.0833, 0.0702, 0.1566, 1.44, 0.3521, 0.2025, 0.1272, 0.097], [0.0, 0.0, 0.1011, 0.0, 0.0857, 0.2121, 0.0244, 0.2233, 0.0864, 0.0722, 0.08, 0.0, 0.0244, 0.2087], [0.1228, 0.1807, 0.92, 0.2958, 0.1519, 0.1754, 0.1716], [0.0702, 0.0482, 1.12, 0.1972, 0.1266, 0.1031, 0.0746, 0.0345, 0.0, 0.1124, 0.1143, 0.303, 0.0, 0.1456, 0.0909, 0.0428, 0.0], [0.0, 0.0455, 0.0, 0.0286, 0.4096, 0.1571, 0.5571, 0.0805, 0.3516], [0.0, 0.0443, 0.136, 0.0896, 0.0, 0.1081, 0.1798, 0.0, 0.0571, 0.303, 0.0, 0.037, 0.1506, 0.0, 0.0857, 0.2968], [0.6727, 0.0, 0.4578, 0.1, 0.2714, 0.0115, 0.4475], [0.0, 0.1674, 0.2083, 0.0273, 0.0312, 0.037, 0.1143, 0.4518, 0.1143, 0.1857, 0.0805, 0.379], [0.0886, 0.1469, 0.1194, 0.0, 0.0541, 0.2022, 0.0, 0.1714, 0.5152, 0.0061, 0.2136, 0.0909, 0.1016, 0.0, 0.0, 0.0, 0.2087], [0.0, 0.5208, 0.8091, 0.125, 0.2222, 0.0, 0.4036, 0.1429, 0.3714, 0.0575, 0.4977], [0.0, 0.0388, 0.0818, 0.0936, 0.0, 0.0, 0.0732, 0.2109, 0.2917, 0.3818, 0.0938, 0.0, 0.0, 0.3735, 0.0, 0.0571, 0.0575, 0.3927], [0.0175, 0.1325, 0.1268, 0.0443, 0.1053, 0.1567, 0.1034, 0.0811, 0.1685, 0.1429, 0.3939, 0.0, 0.1748, 0.0773, 0.1578, 0.0, 0.1951, 0.187, 0.2812, 0.5364], [0.0, 0.0351, 0.1325, 1.0, 0.169, 0.1835, 0.1294, 0.0448, 0.0, 0.0541, 0.1236, 0.0, 0.0857, 0.303, 0.0061, 0.1165, 0.0636, 0.1096, 0.0, 0.0, 0.0, 0.163, 0.4271, 0.6636], [0.0591, 0.1257, 0.0, 0.0, 0.2761, 0.4479, 0.6727, 0.0625, 0.1852, 0.0, 0.1506, 0.1429, 0.2286, 0.1149, 0.2648], [0.0, 0.0723, 0.32, 0.114, 0.1642, 0.0, 0.1351, 0.2697, 0.0571, 0.4242, 0.0122, 0.3689, 0.0818, 0.1471, 0.0, 0.0976, 0.037, 0.3958, 0.4091, 0.0, 0.0, 0.0, 0.247, 0.0286, 0.2714, 0.023, 0.1963], [0.0, 0.1579, 0.1084, 0.0141, 0.0696, 0.1294, 0.0821, 0.2703, 0.2472, 0.0222, 0.1143, 0.6364, 0.0183, 0.2524, 0.0818, 0.1043, 0.04, 0.0882, 0.122, 0.2565, 0.2812, 0.6636], [0.1905, 0.1203, 0.1118, 0.0896, 0.069, 0.0, 0.1461, 0.0444, 0.2, 0.5455, 0.0122, 0.301, 0.0864, 0.1337, 0.2, 0.0, 0.0488, 0.2348, 0.6979, 0.9727], [0.1447, 0.1343, 0.2414, 0.0811, 0.1011, 0.0, 0.0571, 0.5455, 0.0, 0.2621, 0.0364, 0.1123, 0.0, 0.122, 0.1978, 0.5417, 0.5545, 0.0741, 0.0857, 0.2892, 0.1143, 0.2857, 0.023, 0.3927], [0.0833, 0.4561, 0.0361, 0.92, 0.1408, 0.1835, 0.1053, 0.1269, 0.2414, 0.1892, 0.1236, 0.0, 0.2857, 0.697, 0.061, 0.4369, 0.1, 0.1123, 0.0, 0.0294, 0.0976, 0.2761, 0.4583, 0.6545], [0.1034, 0.0541, 0.1236, 0.0444, 0.0857, 0.7273, 0.0122, 0.3495, 0.0409, 0.139, 0.0, 0.0, 0.0732, 0.2348, 0.4583, 0.6818, 0.125, 0.0, 0.4157, 0.1429, 0.4571, 0.1379, 0.4703], [0.1892, 0.1573, 0.0, 0.2571, 0.6667, 0.0, 0.4078, 0.1364, 0.1578, 0.0, 0.0294, 0.0488, 0.2826, 0.4583, 0.1091, 0.0, 0.0, 0.0, 0.4458, 0.1143, 0.5857, 0.1034, 0.5708], [0.1127, 0.0696, 0.1776, 0.1343, 0.1034, 0.3146, 0.0222, 0.0571, 0.2727, 0.0549, 0.3398, 0.1136, 0.2246, 0.0, 0.0588, 0.0732, 0.1478, 0.2812, 0.8364, 0.0, 0.0, 0.0286, 0.1446, 0.0571, 0.5714, 0.1379, 0.4155], [0.1905, 0.0702, 0.0964, 0.84, 0.169, 0.1139, 0.1338, 0.1119, 0.3103, 0.3514, 0.191, 0.0, 0.1429, 0.2121, 0.0244, 0.1942, 0.1318, 0.1578, 0.0, 0.0, 0.0244, 0.1565, 0.4792, 0.5636, 0.0312, 0.1111, 0.0, 0.4759, 0.0857, 0.3714, 0.0345, 0.347], [0.1905, 0.0175, 0.1446, 1.04, 0.2254, 0.2025, 0.1447, 0.1119, 0.1034, 0.027, 0.1573, 0.1333, 0.1714, 0.4848, 0.0305, 0.2233, 0.1182, 0.1711, 0.0, 0.0976, 0.1696, 0.4688, 0.8455, 0.1875, 0.0, 0.2831, 0.1143, 0.3857, 0.069, 0.4018], [0.0964, 0.4, 0.2113, 0.2405, 0.1974, 0.0896, 0.0, 0.2703, 0.191, 0.0, 0.3714, 0.9394, 0.0061, 0.4466, 0.1773, 0.254, 0.0, 0.1176, 0.2683, 0.2543, 0.2083, 0.0182, 0.0938, 0.0, 0.5422, 0.1, 0.4429, 0.069, 0.1918]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

