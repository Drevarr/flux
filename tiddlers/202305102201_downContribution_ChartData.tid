created: 20230510220110000
creator: Drevarr
modified: 20230705163529473
modifier: drevarr
tags: ChartData
title: 202305102201_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Pyraliis", "Rozaalyna", "Demon Sekhmet", "Tootsy Pop Tart", "Husky Guard", "Smol Gluvs", "Jeckyll Mbs", "Maaaathexxs", "No Reserv\u00e9", "Lord Erin The Wise", "River No Hug", "Oops All Beans", "Farra The Bloodless", "Permanent Dawn", "Khailerian", "Be\u00eb", "Kary\u00edna", "Kosa\u00efr", "Elonith Requiem", "Mike The Archmagus", "Xanvias Einzbern", "Mistwalker Caelon", "Dimsnail"];
const professions = ["Berserker", "Scourge", "Spellbreaker", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Scourge", "Herald", "Weaver", "Scourge", "Spellbreaker", "Vindicator", "Weaver", "Vindicator", "Scourge", "Vindicator", "Weaver", "Scourge", "Weaver", "Berserker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[310.1923, 608.1915, 154.2316], [58.8723, 61.2125, 0.0, 36.6987, 0.0, 1039.1795, 0.0, 0.0, 193.7714, 99.7179], [278.0, 130.234, 34.376, 26.3208, 10.2118, 29.452, 0.0, 166.6923, 0.0, 0.0, 509.2571, 118.9744, 8.717, 90.5047, 67.9286, 31.3652], [0.0, 430.9787, 20.5232, 5.7099, 59.3059, 33.0524, 0.0, 0.0, 0.0, 234.4857, 118.7821, 35.7241, 100.8972, 107.4762, 42.2079], [49.7872, 33.3079, 20.3618, 24.6235, 49.9716, 0.0, 487.5641, 0.0, 42.6857, 41.2051, 18.3113, 254.028, 81.6905, 77.0028], [94.9231, 402.4468, 16.9564, 10.43, 0.0, 17.1485, 0.0, 202.7692, 57.5172, 0.0, 367.0857, 102.7436, 24.3939, 216.5327, 747.0, 15.5927], [0.0, 764.5429, 290.3718, 86.2642, 194.3458, 446.9524, 79.7388], [119.0213, 83.3406, 81.9113, 81.7412, 34.4105, 48.3986, 397.7692, 0.0, 0.0, 367.1143, 252.7821, 18.0684, 188.7103, 0.0], [17.7692, 79.6809, 38.3733, 89.413, 120.4706, 59.9236, 0.0, 404.5385, 0.0, 0.0, 542.9143, 131.9744, 32.934, 118.2897, 238.0, 69.5674], [155.8846, 187.5319, 17.6812, 162.4812, 151.8941, 53.9476, 0.0, 113.9231, 202.2069, 0.0, 600.8286, 189.0641, 27.9528, 112.6916, 424.8095, 19.809], [327.1154, 203.383, 55.9428, 102.215, 85.9412, 54.1812, 0.0, 566.4359, 0.0, 0.0, 413.3714, 288.0513, 80.1769, 61.0093], [487.5, 167.2766, 98.7684, 39.2321, 30.9176, 36.19, 0.0, 516.9231, 0.0, 778.8857, 291.2564, 24.8844, 169.0187, 42.6429, 99.8736], [82.158, 88.8908, 68.1882, 37.4847, 0.0, 696.1026, 0.0, 0.0, 1004.4857, 250.2179, 60.4363, 108.5981, 1111.3571, 0.0], [220.3404, 76.2616, 133.0137, 91.1647, 58.4214, 0.0, 220.2564, 0.0, 0.0, 857.0857, 434.4103, 42.5165, 211.7944, 89.0337], [0.0, 404.1489, 63.6158, 18.2423, 35.2, 37.952, 0.0, 970.7949, 199.5862, 0.0, 1176.2571, 288.5128, 53.6321, 438.2617, 332.619, 29.927], [250.8077, 196.234, 77.3951, 49.2389, 79.9647, 74.417, 1491.0256, 584.1379, 0.0, 819.5429, 445.2564, 79.8797, 545.4953, 1750.3571, 78.1124], [921.4615, 417.4468, 202.9428, 95.2628, 95.6471, 60.3428, 69.3623, 266.9744, 290.069, 0.0, 927.8286, 209.5897, 133.8915, 261.6168, 1149.6429, 111.1039], [879.8462, 87.4255, 348.1008, 138.4949, 29.9059, 229.9913, 0.0, 265.9744, 0.0, 0.0, 1109.6, 558.3333, 98.2665, 104.729], [508.6923, 765.8511, 124.7411, 136.4608, 92.3412, 101.6354, 23.2609, 1529.0, 0.0, 0.0, 1423.0571, 300.1282, 133.1156, 393.1495, 184.1667, 114.736], [62.3462, 532.4894, 231.9782, 211.4881, 26.0706, 157.9869, 0.0, 868.3333, 0.0, 929.0857, 356.5385, 43.9198, 589.9065, 186.5476, 119.3708], [487.3846, 1023.2766, 211.6785, 222.8157, 44.7412, 142.9345, 0.0, 1101.9744, 0.0, 2550.5429, 965.2949, 102.7594, 384.9346, 305.6667, 132.7921], [810.2692, 36.1489, 180.0463, 252.9625, 188.8235, 141.1943, 37.1159, 628.3077, 294.1379, 0.0, 1285.9429, 1022.8462, 160.8585, 1027.8598, 232.2143, 202.3989], [587.3846, 907.5532, 334.6185, 137.802, 181.4588, 238.5524, 0.0, 1395.4103, 0.0, 1172.4, 969.7179, 248.8821, 449.5607, 0.0, 395.3146]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

