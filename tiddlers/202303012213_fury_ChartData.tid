created: 20230301221309000
creator: Drevarr
modified: 20230705163520921
modifier: drevarr
tags: ChartData
title: 202303012213_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Smol Daddy Tika", "Arduran Illl", "Mac Aaroni", "Sofya De Nova", "Lord Erin The Wise", "Skye Nightroad", "Xyntharos", "Jeckyll Mbs", "Mike The Archmagus", "Mistwalker Caelon", "Arriasa", "Etchery Howls", "Tribal S", "Demon Sekhmet", "Fribble Bibble", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Weaver", "Tempest", "Catalyst", "Weaver", "Scrapper", "Vindicator", "Spellbreaker", "Weaver", "Vindicator", "Druid", "Druid", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[40.572, 41.0014, 21.528, 0.0, 0.0, 52.9916, 0.0, 49.5277, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.5232, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.5466, 0.0, 0.0, 0.0, 0.0, 14.8896, 0.0, 44.5687, 0.0, 0.0, 10.7696, 132.5358, 9.0522, 0.0, 0.0, 46.7775, 34.1325, 68.3307, 43.3339, 15.8171, 17.1574, 32.0021], [0.0, 83.5344, 0.0, 0.0, 0.0, 28.6416, 16.2803, 89.2182, 0.0, 140.2397, 51.4294, 37.4282, 0.0, 0.0, 0.0, 10.5754, 0.0, 0.0, 0.0, 0.0, 54.3629, 0.0, 29.6525, 0.0, 0.0, 109.4993, 21.0984, 15.3709, 12.3024, 0.0, 0.0, 13.6764, 0.0, 39.3888, 0.0, 0.0, 0.0, 52.92, 0.0], [9.2391, 0.0, 9.2646, 35.7102, 33.8832, 171.6788, 91.4189, 57.8986, 138.9527, 123.0753, 34.7776, 36.8928, 36.6816, 76.4122], [23.9175, 7.9235, 0.0, 25.333, 16.96, 29.5061, 53.9757, 0.0, 17.2397, 23.7322, 23.6944, 0.0, 0.0, 0.0, 31.415, 0.0, 0.0, 34.8616, 31.5058, 32.6122, 15.8371, 0.0, 0.0, 110.1304, 0.0, 21.7478, 12.4891, 47.3135, 23.6808, 0.0, 31.9873, 29.8062, 23.3528, 21.3523, 48.8733, 32.8779, 44.6718, 41.0582, 16.632, 0.0, 26.2667, 64.7064], [88.464, 93.2832, 84.6661, 46.7097, 20.8331, 0.0, 15.4826, 38.88, 9.4583, 55.1949, 50.8613, 31.7698, 71.5651, 28.0416, 32.2733, 1.056, 32.1191, 62.3231, 46.233, 46.0766, 41.8925, 24.5784, 15.5196, 47.7398], [14.868, 37.1722, 57.9163, 44.9152, 11.6222, 9.2489, 0.0, 71.2548, 57.6019, 53.3722, 36.1522, 65.5747, 11.8879, 0.0, 9.62, 49.559, 14.8473, 29.9846, 51.049, 35.3901, 98.1763, 3.4886, 63.648, 47.8073, 11.4169, 50.8051, 51.6274, 26.1785, 0.0, 39.9975, 100.5894, 3.9964, 22.6618, 17.4216, 46.0202, 48.1849], [10.1556, 28.9837, 31.0063, 38.4683, 5.2527, 0.0, 24.9086, 108.4647, 0.0, 59.6304, 87.8732, 18.7895, 48.8224, 8.9964, 15.9504, 19.4573, 4.6558, 0.0, 12.1992, 0.0, 16.727, 0.0, 0.0, 16.361, 0.0, 310.0377, 0.0, 26.9818, 25.2898, 43.9854, 26.7432, 28.107, 28.0759, 98.136, 64.521, 39.8534, 15.9936, 35.3727, 58.4654, 26.9311, 35.2901, 18.392, 0.0, 39.2753], [19.7316, 73.4019, 58.6339, 36.8034, 17.123, 31.7857, 39.1106, 91.6989, 36.2976, 67.2269, 91.8966, 101.4182, 20.8331, 12.0204, 11.9592, 40.4006, 32.2425, 57.9614, 25.5479, 33.0475, 62.2987, 0.0, 10.6704, 17.6981, 261.9148, 9.0823, 37.6602, 5.6923, 35.4765, 15.6552, 23.8302, 18.2172, 67.077, 32.9346, 33.4118, 57.1914, 39.8277, 69.3375, 56.679, 45.481, 16.8045, 38.9136, 92.8462], [252.5141, 105.9744, 121.3075, 100.0017, 142.393, 40.1977, 51.2459, 129.0168, 52.44, 39.1997, 0.0, 251.3435, 29.0573, 25.7712, 73.9037, 104.544, 49.1994, 47.6862, 104.5818, 138.6106, 105.0294, 33.9917, 94.7797, 90.1402], [29.0808, 57.4962, 38.272, 24.1806, 20.8386, 34.1352, 156.3671, 29.4758, 53.6083, 83.5582, 48.6717, 13.1921, 0.0, 12.9826, 34.1107, 4.7108, 42.2105, 24.07, 27.859, 88.3397, 43.5418, 76.4899, 6.9485, 19.8968, 253.2369, 65.3939, 52.4486, 55.8567, 79.4376, 21.7404, 33.6482, 108.4194, 107.3745, 84.2266, 102.7446, 45.1291, 64.5301, 59.7093, 75.4488, 41.9338, 31.9858, 131.9208], [22.8312, 77.7023, 57.707, 39.3008, 14.6208, 25.5892, 57.0284, 160.1309, 47.5334, 75.1776, 119.1856, 108.1342, 0.0, 21.2436, 11.9592, 75.5136, 35.8168, 60.9955, 29.7473, 17.9274, 85.0133, 48.0902, 48.9341, 10.9331, 19.9135, 326.4468, 12.0884, 45.2403, 27.1022, 56.8174, 42.3192, 8.748, 26.8436, 92.2374, 41.4571, 43.6339, 64.2957, 85.3578, 62.1264, 83.0126, 67.8888, 41.5659, 36.7616], [79.6824, 95.7288, 19.9433, 14.538, 69.2401, 75.639, 163.4669, 0.0, 113.1994, 181.1109, 140.2801, 49.8089, 58.59, 0.0, 113.495, 126.697, 184.7268, 55.7175, 31.9246, 124.645, 36.6086, 70.537, 10.2784, 12.6988, 256.0769, 41.3821, 22.3795, 67.2883, 12.9349, 19.7736, 5.2326, 57.6521, 164.43, 121.8677], [88.9308, 243.0627, 178.4432, 32.8733, 105.3026, 40.7362, 82.0629, 220.18, 126.0749, 115.7184, 102.8005, 199.6672, 37.1686, 11.8908, 62.018, 133.1942, 15.5072, 213.7925, 54.7363, 79.1107, 101.7139, 30.4638, 155.7289, 31.3084, 139.9923, 45.6235, 151.1012, 95.832, 62.694], [43.1928, 120.2942, 65.8099, 39.5138, 25.0435, 53.3817, 113.49, 234.8928, 111.4099, 114.144, 129.9147, 175.1427, 38.2052, 44.1072, 55.5999, 65.8714, 47.1081, 0.0, 20.6571, 147.5496, 61.007, 112.2826, 32.9402, 27.6131, 490.538, 26.9272, 58.0845, 33.7008, 80.7314, 65.9736, 16.7832, 45.3287, 146.682, 39.7719, 66.4013, 98.889, 141.7135, 92.524, 111.9496, 95.2258, 46.3091, 97.5788, 166.5312], [360.4656, 97.2922, 113.1994, 189.3909, 166.6911, 32.9217, 83.6892, 40.5413, 83.4278, 155.9516, 127.167, 106.438, 59.0674, 125.8805, 105.7632, 123.5146, 25.7805, 542.6054, 102.272, 65.4758, 134.9755, 109.8504, 19.1646, 96.4708, 132.3644, 110.3731, 147.2982, 56.2666, 164.0803, 211.6928, 121.3834, 37.6165, 131.7461, 183.9367], [56.8764, 101.6787, 80.2516, 45.3411, 14.476, 0.0, 75.9539, 233.3531, 175.9795, 179.7571, 298.1973, 327.6473, 0.0, 43.1892, 52.939, 111.2141, 70.9004, 45.8694, 122.8131, 71.5739, 156.1032, 61.9786, 208.5782, 14.3686, 6.9221, 612.6597, 35.0181, 93.0074, 38.0904, 125.7462, 106.2336, 0.0, 56.9288, 162.2376, 101.2113, 90.9638, 34.8789, 71.0572, 162.3422, 133.8445, 75.3581], [38.4552, 229.5723, 130.8424, 117.6894, 67.148, 76.9284, 48.2742, 563.9652, 268.7846, 207.9782, 287.5266, 403.1073, 128.5601, 89.2728, 90.8925, 137.0304, 141.6726, 0.0, 11.167, 63.133, 222.2986, 129.1238, 130.5158, 0.0, 68.853, 874.1012, 145.7968, 113.1309, 69.3557, 16.4208, 0.0, 103.5166, 186.2496, 298.0967, 136.8154, 158.8293, 101.084, 212.0063, 247.8854, 85.6397, 74.8264, 177.7939, 234.799], [104.454, 248.07, 141.0383, 88.3978, 80.7968, 91.2721, 122.9055, 438.8202, 59.9731, 220.9277, 292.2497, 349.4553, 90.8565, 69.39, 61.7403, 192.5338, 93.373, 123.0173, 105.9923, 22.0123, 252.9965, 86.2886, 160.8422, 11.3062, 66.8967, 1025.7278, 7.2914, 109.9424, 145.8197, 125.8148, 112.5696, 79.5906, 88.6213, 299.5236, 48.7759, 108.24, 169.932, 165.3696, 131.9446, 230.0879, 182.1053, 74.5747, 136.9051, 333.7145]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

