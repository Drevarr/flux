created: 20230520220730000
creator: Drevarr
modified: 20230705163531110
modifier: drevarr
tags: ChartData
title: 202305202207_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Arriasa", "Grasszanine", "Pedro O Mago Preto", "Newtype Khan", "Drevarr Moonwillow", "Tika Mi", "Artakama Nahid"];
const professions = ["Tempest", "Druid", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[192.5991, 31.697, 0.0, 20.2205, 0.0, 31.4318, 0.0, 22.5492, 0.0, 0.0, 87.3382, 0.0, 390.3782, 14.4826, 0.0, 105.3607, 30.092, 56.7244, 288.7526, 31.6404, 407.691, 31.8247, 0.0, 135.5292, 0.0, 31.6827, 31.593, 50.9762, 0.0, 0.0, 50.8068, 94.5895], [343.416, 0.0, 0.0, 0.0, 11.3488, 34.8381, 0.0, 0.0, 0.0, 0.0, 178.6353, 74.7456, 383.0688, 0.0, 17.516, 97.8142, 0.0, 0.0, 236.7165, 47.6136, 418.167, 0.0, 0.0, 89.9975, 87.561, 0.0, 97.478, 76.6584, 0.0, 0.0, 72.468, 96.9831], [237.1001, 105.4284, 80.0713, 35.6584, 0.0, 0.0, 60.6455, 0.0, 54.8327, 129.9275, 0.0, 497.8541, 74.6821, 0.0, 129.6257, 11.319, 289.7103, 0.0, 668.136, 0.0, 0.0, 137.3566, 0.0, 84.9807, 0.0, 201.9872, 0.0, 0.0, 57.8092, 50.5296, 159.6586], [903.8995, 253.3705, 47.7943, 135.7944, 75.6204, 74.1883, 0.0, 111.0054, 80.6065, 255.6126, 590.8522, 139.8012, 1614.3034, 203.7572, 119.5511], [466.9027, 66.5431, 65.9669, 126.6258, 33.4068, 11.1213, 42.3065, 161.9191, 0.0, 78.6255, 204.5488, 69.4212, 587.1917, 147.6289, 91.6538, 98.1045, 0.0, 54.6223, 387.5574, 80.784, 838.953, 0.0, 0.0, 303.1895, 183.159, 15.5075, 207.4204, 68.9904, 0.0, 92.6923, 119.2356, 279.3361], [786.8519, 300.6763, 47.4533, 91.463, 0.0, 68.6848, 72.0742, 171.8091, 0.0, 189.9319, 999.95, 40.2492, 1481.3798, 212.0997, 92.998, 374.7128, 87.6058, 170.0437, 803.8463, 86.9958, 1343.256, 113.9517, 39.1472, 814.3934, 27.9695, 124.6581, 75.2259, 368.0993, 77.6952, 62.2377, 71.1656, 209.286, 375.3441], [980.882, 492.2959, 141.1418, 223.2926, 117.8996, 125.3587, 0.0, 320.1195, 132.087, 335.9246, 1023.9439, 165.444, 2359.8662, 409.6501, 204.7527, 567.9612, 97.2101, 308.7176, 1279.1947, 225.9198, 1858.617, 246.7146, 180.9914, 1408.8946, 393.0516, 251.949, 699.0451, 164.1816, 161.2053, 93.3303, 218.4336, 673.4741], [1290.8149, 472.7848, 195.5864, 238.7305, 73.8984, 106.4844, 0.0, 240.6435, 88.8178, 433.8304, 1126.0384, 123.3384, 2514.1766, 316.0139, 190.2974, 498.5334, 158.2693, 262.4068, 1502.3434, 166.4334, 2344.005, 135.5574, 1319.963, 47.5605, 469.4454, 300.4221, 577.4373, 211.8312, 181.1187, 205.6765, 423.1656, 817.1757]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

