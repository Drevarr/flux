created: 20230220220953000
creator: Drevarr
modified: 20230705163519718
modifier: drevarr
tags: ChartData
title: 202302202209_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Skye Nightroad", "Tootsie Pop Bringer", "My Birthday Girl", "Lord Erin The Wise", "Mistwalker Caelon", "Xyntharos", "Etchery Howls", "Fribble Bibble", "Veron Blackburn", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Scrapper", "Scrapper", "Weaver", "Vindicator", "Vindicator", "Druid", "Scrapper", "Herald", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.9809, 168.9206, 1600.3572, 31.684, 46.8443, 85.5007, 65.1908, 14.1911], [190.4666, 896.6171, 47.5146, 71.1068, 50.4857, 56.8075, 55.0572, 95.2084, 42.9685, 31.7856, 105.7056, 0.0, 15.776, 63.1881, 3.9971, 31.4685, 28.0566, 39.6144, 70.1757, 95.6842, 31.8519, 95.2197, 15.8936, 16.7146, 31.6777, 90.2097], [39.9646, 176.9645, 959.751, 10.7276, 49.2316, 56.9856, 42.8736, 7.8869, 66.3189, 95.3955, 59.719, 105.5947, 76.2115, 15.9057, 25.041, 64.3626, 21.3853, 45.6597, 11.8404, 64.3248, 35.7989, 186.4886, 63.873, 95.1604, 15.8936, 27.8494, 27.7066, 58.6602], [27.911, 511.0711, 1301.4849, 31.7066, 31.6193, 41.3591, 50.6062, 21.413, 47.5077, 103.688, 60.0188, 45.4978, 98.3875, 31.8114, 0.0, 59.2339, 32.2461, 0.0, 11.9232, 37.5408, 221.7072, 74.1096, 101.4452, 63.6525, 48.7738, 32.4849, 61.9058], [20.995, 686.0246, 1453.8171, 35.6983, 56.3447, 64.5018, 0.0, 77.956, 130.8727, 11.9095, 71.4437, 128.8426, 23.6651, 11.781, 17.7741, 0.0, 45.7326, 30.03, 35.6832, 41.8068, 51.767, 35.2359, 95.0419, 142.9648, 0.0, 0.0, 41.6683], [19.1672, 725.6693, 1545.3323, 25.4016, 44.2134, 9.7499, 58.6832, 21.147, 63.3575, 152.1963, 92.6201, 76.2485, 185.3174, 38.1195, 25.806, 37.7014, 0.0, 54.5049, 35.8987, 39.2688, 60.5772, 100.8821, 63.5346, 130.9123, 140.4717, 63.9191, 29.5424, 42.6229], [39.3471, 1607.6189, 2362.0184, 94.8024, 86.903, 49.7257, 149.4469, 221.9037, 104.2297, 116.0544, 231.0, 118.1124], [116.5346, 1634.0486, 3390.6953, 41.323, 27.4537, 0.0, 25.839, 37.8651, 174.9317, 184.0572, 130.9619, 96.9091, 319.1866, 96.5952, 0.0, 79.866, 2.0202, 56.1573, 116.3791, 6.912, 90.1904, 379.3421, 100.3356, 126.9992, 110.3206, 19.0562, 0.0, 48.971], [395.941, 1823.9407, 3450.354, 630.7013, 276.6207, 774.6988, 445.2361, 253.2499, 910.9162, 239.8626, 386.053, 485.46, 157.4313, 373.1994, 137.3658, 287.7552, 352.656, 1161.6821], [107.2968, 2153.1636, 4631.9424, 203.4623, 143.6753, 186.7169, 189.9836, 106.9453, 323.5028, 491.318, 215.3995, 275.4629, 554.2522, 138.1203, 73.253, 214.1505, 87.2293, 180.7677, 63.4062, 167.0112, 110.5605, 741.181, 313.5699, 283.9398, 451.2547, 209.6675, 107.6363, 222.7559]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

