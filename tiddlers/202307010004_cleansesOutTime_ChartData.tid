created: 20230701000406000
creator: Drevarr
modified: 20230705163539998
modifier: drevarr
tags: ChartData
title: 202307010004_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Sakis Ranger", "Tegan Parker", "Drevarr Moonwillow", "Ak\u00e1nt\u00f3r", "Arriasa", "Tribal S", "Sumatra Satyricon"];
const professions = ["Druid", "Tempest", "Scrapper", "Druid", "Druid", "Druid", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[121.7377, 120.1639, 88.5513, 115.4688, 114.8696, 55.74, 49.1089, 38.3651, 53.7, 60.6667, 110.3632, 133.44, 73.7973, 54.0278, 129.4574, 0.0, 69.37, 78.1061, 0.0, 63.5055, 107.3462, 191.9641], [107.0984, 15.0492, 95.859, 74.1771, 80.4783, 21.48, 54.0891, 66.254, 78.36, 26.8235, 151.4978, 100.4933, 97.973, 64.0556, 49.1702, 99.21, 48.93, 87.4545, 0.0, 122.6044, 119.1239, 224.8478], [100.0984, 36.1803, 98.6026, 110.9167, 85.7391, 55.68, 56.0099, 74.9683, 54.84, 53.0784, 151.4574, 92.72, 57.6622, 70.0278, 112.1915, 98.48, 107.55, 125.7727, 2.0, 99.4286, 176.5598, 252.4524], [121.6557, 84.6393, 101.4487, 132.125, 88.7717, 58.34, 60.4554, 61.2222, 130.16, 104.902, 226.6637, 90.1467, 83.8919, 70.3889, 160.8404, 158.67, 135.08, 133.803, 0.0, 84.0989, 110.4744, 208.6786], [92.8525, 81.2131, 122.1923, 149.2812, 101.8696, 68.06, 36.7327, 101.0159, 89.3, 148.5882, 178.7354, 150.3333, 113.7973, 85.1528, 173.2447, 84.35, 113.33, 107.1212, 2.0, 97.5165, 211.859, 246.4609], [93.1967, 137.8197, 112.1795, 176.5, 83.9457, 59.68, 70.9109, 94.2381, 141.3, 94.549, 220.1794, 121.5733, 117.5811, 103.9722, 145.5106, 156.66, 158.59, 105.7576, 0.0, 153.5495, 190.4786, 308.0951], [6.0984, 20.0656, 11.0769, 22393.9271, 21.5109, 0.0, 4.9802, 10.0635, 4.0, 0.9804, 11.0, 7.9733, 18.3919, 10.0417, 7.2128, 0.0, 7.01, 11.0, 0.0, 18.011, 4.0256]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

