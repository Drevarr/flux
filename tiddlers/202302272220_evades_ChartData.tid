created: 20230227222028000
creator: Drevarr
modified: 20230705163520385
modifier: drevarr
tags: ChartData
title: 202302272220_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Demon Sekhmet", "\u00c1rk\u00e1ntor", "Rozaalyna", "Drevarr Moonwillow", "Sassy Daddy Demon", "What Charr U Saying", "Viral Marketing", "Rina Of Theros", "Bella Sassy", "Jupi Jupi Jupi", "Tegan Parker", "Etchery Howls", "Sofya De Nova", "Blanco Padre Guard", "Cat Wigglebooty", "Legacy Of Mathus", "Smol Daddy Tika", "Ark Darkness", "Zadie Miststep", "Sygaldry Verdandi", "Tribal S", "Black Raspberry Pie", "Jeckyll Mbs", "Dark Sidiuz", "Smol Gluvs", "Kahless The Drunk", "Sp\u00edcy Cheese", "Tootsie Pop Bringer", "Oo Dads Mad", "Fribble Bibble", "Gavann", "Husky Guard", "Be\u00eb", "Zaylen Harker", "Mac Aaroni", "M A C U M B E I R O", "Xanvias Tseli", "My Birthday Girl", "Arcanophage Farra", "Primal Clone", "Eibh\u00ebar", "Koralia Danai", "Lord Erin The Wise", "High Sorcer Baradun", "Venomina The Siren", "Ravioli Fetabringer", "Mike The Archmagus", "Ryvalia Fazebringer", "Mistwalker Caelon"];
const professions = ["Spellbreaker", "Berserker", "Scourge", "Scourge", "Scrapper", "Vindicator", "Berserker", "Willbender", "Scourge", "Firebrand", "Dragonhunter", "Tempest", "Druid", "Weaver", "Firebrand", "Scrapper", "Berserker", "Berserker", "Firebrand", "Tempest", "Firebrand", "Druid", "Chronomancer", "Berserker", "Scourge", "Scourge", "Firebrand", "Berserker", "Scrapper", "Spellbreaker", "Scrapper", "Firebrand", "Dragonhunter", "Scourge", "Firebrand", "Tempest", "Weaver", "Berserker", "Scrapper", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Weaver", "Tempest", "Tempest", "Firebrand", "Weaver", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 2, 0, 3, 80, 0], [0, 65, 1, 0, 12, 0, 2, 10], [48, 0, 1, 0, 1, 40, 0], [4, 13, 6, 28, 4, 6, 3, 1, 0, 26, 0, 0], [0, 14, 11, 2, 19, 4, 15, 7, 0, 0, 1, 0, 10, 0, 0, 1, 0, 0, 11, 0], [7, 33, 9, 0, 3, 16, 10, 5, 1, 3, 4, 6], [0, 42, 0, 0, 5, 0, 3, 45, 4], [2, 18, 20, 0, 13, 12, 5, 13, 0, 9, 0, 9], [0, 13, 1, 0, 2, 6, 7, 1, 17, 1, 0, 30, 1, 12, 0, 0, 3, 0, 0, 12, 0], [0, 10, 19, 16, 3, 6, 0, 2, 0, 0, 5, 0, 35, 0, 1, 6, 0, 2, 2, 0], [0, 20, 3, 1, 0, 5, 0, 65, 1, 0, 1, 0, 0, 11], [1, 13, 18, 0, 1, 0, 0, 51, 0, 0, 0, 0, 0, 32, 0], [1, 19, 6, 3, 8, 3, 3, 32, 17, 1, 8, 0, 15, 0, 0, 1, 0], [0, 0, 2, 0, 4, 5, 2, 1, 0, 48, 3, 0, 4, 0, 1, 49, 0], [0, 10, 5, 0, 7, 0, 0, 2, 3, 28, 0, 5, 0, 30, 0, 0, 2, 0, 0, 31], [0, 13, 11, 7, 13, 6, 0, 0, 3, 0, 8, 1, 27, 0, 0, 0, 0, 1, 38], [0, 1, 10, 10, 34, 2, 0, 5, 2, 7, 5, 0, 54, 0], [0, 9, 15, 0, 0, 1, 27, 14, 0, 0, 0, 6, 0, 25, 1, 0, 0, 0, 0, 34, 0], [29, 1, 5, 11, 12, 1, 5, 0, 11, 0, 54, 0, 0, 4, 0], [0, 30, 8, 0, 49, 1, 12, 10, 5, 0, 0, 0, 12, 0, 0, 1, 0, 0, 6, 0], [0, 27, 0, 1, 22, 25, 0, 6, 7, 0, 6, 0, 25, 0, 1, 0, 3, 12, 0], [0, 30, 22, 1, 14, 6, 0, 0, 3, 0, 9, 1, 15, 2, 0, 0, 0, 32, 1], [0, 7, 0, 15, 7, 0, 10, 0, 47, 0, 0, 0, 1, 2, 50, 0], [0, 22, 6, 0, 7, 0, 2, 7, 0, 0, 0, 1, 25, 2, 0, 7, 0, 0, 61, 0], [0, 11, 7, 0, 1, 6, 37, 31, 0, 0, 47, 0, 0], [0, 5, 0, 28, 0, 64, 1, 0, 7, 0, 1, 52, 0], [0, 34, 15, 16, 4, 4, 0, 9, 12, 0, 1, 0, 37, 0, 0, 0, 0, 5, 24, 0], [0, 22, 4, 4, 2, 14, 10, 7, 2, 0, 6, 0, 40, 0, 0, 2, 0, 0, 49, 0], [0, 17, 7, 0, 4, 2, 0, 30, 0, 10, 0, 18, 2, 17, 4, 0, 3, 0, 0, 49, 1], [0, 60, 25, 0, 24, 32, 0, 4, 19, 0, 4], [0, 38, 10, 0, 16, 8, 5, 1, 6, 7, 0, 0, 0, 58, 0, 0, 0, 0, 0, 20], [0, 34, 2, 0, 8, 8, 33, 0, 13, 18, 0, 1, 0, 57, 0], [2, 29, 16, 0, 3, 6, 1, 8, 0, 0, 0, 4, 0, 33, 0, 5, 0, 2, 65, 0], [0, 16, 26, 0, 7, 3, 13, 0, 39, 0, 0, 30, 0, 1, 40, 0], [14, 13, 4, 3, 0, 14, 0, 1, 6, 0, 51, 0, 12, 0, 0, 66, 1], [0, 22, 30, 0, 3, 13, 5, 5, 1, 1, 1, 2, 0, 54, 0, 0, 2, 0, 1, 50, 0], [5, 61, 0, 0, 9, 0, 1, 119, 1], [0, 21, 7, 0, 8, 0, 53, 6, 14, 30, 0, 0, 0, 34, 0, 0, 5, 0, 0, 23, 0], [1, 26, 0, 0, 37, 36, 4, 0, 3, 11, 1, 5, 0, 53, 0, 0, 4, 0, 1, 45, 0], [2, 35, 28, 5, 6, 16, 0, 0, 0, 1, 10, 0, 38, 2, 0, 10, 0, 2, 74, 1], [0, 37, 24, 7, 7, 18, 0, 1, 12, 0, 14, 1, 58, 4, 0, 2, 0, 1, 50, 0], [1, 24, 42, 10, 23, 8, 8, 5, 7, 1, 0, 1, 55, 1, 0, 4, 0, 2, 48, 0], [0, 43, 21, 14, 9, 14, 10, 1, 27, 0, 14, 0, 53, 7, 0, 4, 0, 4, 31, 0], [2, 27, 12, 0, 1, 16, 1, 0, 5, 0, 0, 6, 1, 74, 0, 10, 0, 1, 109], [20, 0, 58, 17, 6, 55, 2, 0, 0, 2, 1, 61, 1, 1, 3, 1, 1, 55, 0], [4, 50, 30, 5, 3, 21, 9, 1, 14, 0, 2, 1, 83, 0, 0, 3, 0, 1, 72, 0], [5, 45, 38, 14, 9, 6, 21, 3, 41, 1, 2, 1, 48, 0, 0, 0, 0, 2, 68, 0], [1, 45, 15, 0, 3, 3, 29, 0, 8, 25, 2, 2, 3, 68, 1, 0, 7, 0, 10, 94], [0, 47, 94, 8, 25, 5, 29, 3, 22, 1, 25, 0, 49, 1, 0, 7, 0, 1, 74, 0], [7, 61, 26, 0, 10, 25, 36, 12, 10, 2, 0, 10, 1, 89, 0, 0, 6, 0, 1, 128, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

