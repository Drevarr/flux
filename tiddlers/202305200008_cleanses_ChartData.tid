created: 20230520000848000
creator: Drevarr
modified: 20230705163530648
modifier: drevarr
tags: ChartData
title: 202305200008_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Needragee", "Stoic Rapidfire", "Black Raspberry Pie", "Paul Bjart Mist Cop", "Primal Clone", "Cat Wigglebooty", "Venomina The Siren", "High Sorcer Baradun", "Tegan Parker", "Artakama Nahid", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Druid", "Chronomancer", "Scrapper", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.6054, 0.0, 0.0814, 0.0, 0.1329, 0.0, 0.0, 0.0, 0.0, 0.09, 0.1944, 0.0104, 0.0, 0.0, 0.0072, 0.0175, 0.0532, 0.0, 0.0263, 0.0], [0.0375, 0.3529, 0.1899, 0.0769, 0.2867, 0.0, 0.0, 0.6184, 0.0103, 0.3175, 0.4056, 0.1554, 0.3696, 0.04, 0.2826, 0.3275, 0.1489, 0.0, 0.2895, 0.0959, 0.0802, 0.0, 0.4239, 0.0, 0.2895], [0.5472, 0.4352, 0.7609, 0.28, 0.6087, 0.6199, 0.234, 0.0, 0.0, 1.4211, 0.6712, 0.5561], [0.0377, 0.4321, 0.2157, 0.186, 0.0256, 0.2727, 0.0, 0.0673, 0.4737, 0.1031, 0.1564, 0.1333, 0.0777, 0.0217, 0.0, 0.029, 0.0585, 0.0213, 0.0, 0.0, 0.0132, 0.0685, 0.0107, 0.0, 0.2283, 0.2264, 0.1316], [0.1887, 0.3302, 0.0543, 0.0, 0.1049, 0.0333, 0.0769, 0.6053, 0.1443, 0.2322, 0.2167, 0.2798, 0.1739, 0.0, 0.1449, 0.152, 0.117, 0.0, 0.0, 0.2763, 0.0137, 0.107, 0.0, 0.2935, 0.1698, 0.0], [0.1887, 0.4438, 0.3333, 0.1357, 0.0, 0.3287, 0.0333, 0.1346, 0.5263, 0.0825, 0.0616, 0.0556, 0.1295, 0.5435, 0.0, 0.3696, 0.117, 0.0106, 0.0, 0.0132, 0.2603, 0.1283, 0.0606, 0.0924, 0.8302, 0.2982], [0.0189, 0.6464, 0.3922, 0.2791, 0.0, 0.0909, 0.0, 0.0288, 0.3553, 0.1237, 0.1896, 0.3167, 0.0881, 0.0217, 0.0, 0.3406, 0.2164, 0.0957, 0.0, 0.3289, 0.0, 0.1016], [0.1981, 1.2014, 0.1373, 0.1899, 0.0, 0.2657, 0.0, 0.0577, 0.5789, 0.0, 0.2654, 0.3, 0.0881, 0.2174, 0.14, 0.1522, 0.1579, 0.1064, 0.0635, 0.0, 0.4737, 0.1644, 0.0802, 0.0909, 0.1793, 0.2264, 0.1228], [0.4151, 1.5504, 0.2941, 0.2209, 0.1538, 0.2937, 0.0, 0.0481, 0.4868, 0.0, 0.455, 0.35], [0.0283, 2.096, 0.1961, 0.5116, 0.0513, 0.4056, 0.1, 0.0962, 0.7237, 0.1134, 0.2891, 0.8167, 0.228, 0.4348, 0.0, 0.087, 0.3216, 0.3191, 0.0, 0.0417, 0.6184, 0.1781, 0.1818, 0.1515, 0.8478, 0.9057, 0.0], [0.6132, 1.8864, 0.8627, 0.6395, 0.4615, 0.6993, 0.1333, 0.2885, 1.0, 0.2474, 0.8483, 0.7222, 0.4093, 0.5217, 0.22, 0.5435, 0.538, 0.4362, 0.1905, 0.6842, 0.2877, 0.3262, 0.4242, 0.9185, 0.5849, 0.5088], [0.5377, 2.4321, 1.0392, 0.593, 0.1795, 0.6643, 0.3333, 0.4231, 1.6184, 0.3814, 0.7109, 1.0444, 0.6218, 0.7609, 0.34, 0.8986, 0.7602, 0.5638, 0.0952, 0.0, 1.0, 0.5205, 0.4866, 0.3636, 1.2446, 1.0189, 1.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

