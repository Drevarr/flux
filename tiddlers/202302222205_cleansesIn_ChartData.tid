created: 20230222220539000
creator: Drevarr
modified: 20230705163519808
modifier: drevarr
tags: ChartData
title: 202302222205_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Forever Broke", "Mustache Bloodclaw", "Pixil Ranger", "Acme Corporation", "Sofya De Meme", "Sygaldry Verdandi", "Dark Sidiuz", "Xyntharos", "Sumatra Satyricon", "Kosair", "Ravioli Fetabringer", "Ark Darkness", "Mistwalker Caelon", "Ace Hammers", "Blanco Padre Guard", "Rina Of Theros", "Eibh\u00ebar", "Xanvias Tseli", "Kmpek", "Koralia Danai", "Zaylen Harker", "Bella Sassy", "Primal Clone", "Kiloak", "Cat Wigglebooty", "Husky Guard", "Venomina The Siren", "My Birthday Girl", "Tribal S", "Tootsie Pop Bringer", "Newtype Khan", "Sp\u00edcy Cheese", "Sassy Daddy Demon", "Fribble Bibble", "Lord Erin The Wise", "Drevarr Moonwillow", "Zadie Miststep", "Legacy Of Mathus", "Black Raspberry Pie", "Smol Daddy Tika", "Elonith Tenebris", "Jeckyll Mbs", "Arcanophage Farra", "Mac Aaroni", "Panther B Me", "Smol Gluvs", "\u00c1rk\u00e1ntor", "Ryvalia Fazebringer", "Mike The Archmagus", "One Whole Keg"];
const professions = ["Reaper", "Herald", "Druid", "Scrapper", "Catalyst", "Firebrand", "Scourge", "Vindicator", "Soulbeast", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Scourge", "Chronomancer", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Dragonhunter", "Tempest", "Scrapper", "Druid", "Scrapper", "Spellbreaker", "Berserker", "Vindicator", "Scrapper", "Weaver", "Scrapper", "Tempest", "Berserker", "Chronomancer", "Berserker", "Scourge", "Berserker", "Spellbreaker", "Tempest", "Scourge", "Scourge", "Scourge", "Chronomancer", "Tempest", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1212, 0.0349, 0.1842, 0.1271, 0.425, 0.4625], [0.0909, 0.0, 0.2237, 0.1271, 0.3125, 0.4125, 0.082], [0.1912, 0.3153, 0.383], [0.0, 0.3092, 0.1271, 0.425, 0.325, 0.0265, 0.1176, 0.2523, 0.1383], [0.0303, 0.093, 0.1316, 0.1102, 0.175, 0.2, 0.1772, 0.1716, 0.1502, 0.3404], [0.3953, 0.1351, 0.1818, 0.0116, 0.0789, 0.2712, 0.1875, 0.5, 0.1825, 0.1618, 0.1141, 0.2128], [0.3721, 0.025, 0.2875, 0.1693, 0.2402, 0.2913, 0.5638], [0.3256, 0.1081, 0.0, 0.0465, 0.2434, 0.1695, 0.1875, 0.15, 0.2407, 0.1569, 0.1381, 0.5638], [0.4884, 0.2703, 0.0152, 0.0581, 0.1842, 0.1356, 0.3375, 0.2625, 0.1772, 0.2304, 0.3093], [0.2326, 0.3243, 0.0303, 0.0465, 0.1645, 0.2034, 0.2, 0.6125, 0.2593, 0.0833, 0.1562, 0.4255], [0.4186, 0.3243, 0.0758, 0.0349, 0.1513, 0.1102, 0.4125, 0.5625, 0.1984, 0.1324, 0.1772, 0.3936], [0.1515, 0.0349, 0.2105, 0.0424, 0.275, 0.525, 0.2513, 0.1961, 0.1802, 0.5106], [0.1628, 0.2432, 0.1515, 0.093, 0.1447, 0.1017, 0.325, 0.425, 0.2354, 0.1961, 0.1712, 0.4894], [0.5349, 0.2703, 0.0758, 0.0116, 0.1842, 0.161, 0.35, 0.6125, 0.2143, 0.1029, 0.1441, 0.5], [0.4186, 0.4595, 0.1061, 0.0581, 0.4737, 0.1102, 0.3125, 0.0, 0.1402, 0.2304, 0.2042, 0.3936], [0.093, 0.2703, 0.0606, 0.1163, 0.1447, 0.0508, 0.1625, 0.7375, 0.2857, 0.1078, 0.2102, 0.5106], [0.2326, 0.1081, 0.1364, 0.0698, 0.1776, 0.0508, 0.45, 0.6625, 0.2593, 0.1471, 0.1952, 0.3723], [0.0465, 0.1081, 0.0303, 0.1047, 0.1711, 0.1102, 0.2375, 0.5625, 0.2751, 0.1961, 0.1712, 0.6383], [0.1061, 0.0698, 0.1382, 0.0763, 0.4625, 0.65, 0.3042, 0.1961, 0.1592, 0.4574], [0.7442, 0.2703, 0.0152, 0.0465, 0.1382, 0.1186, 0.4, 0.5625, 0.2116, 0.1765, 0.1772, 0.5638], [0.2791, 0.6757, 0.0116, 0.2105, 0.1949, 0.125, 0.1375, 0.3148, 0.1765, 0.2162, 0.5638], [0.4186, 0.3514, 0.0909, 0.0465, 0.1184, 0.0763, 0.65, 0.575, 0.2513, 0.2255, 0.1231, 0.5], [0.1395, 0.3514, 0.1515, 0.0, 0.1513, 0.1864, 0.45, 0.575, 0.2857, 0.2353, 0.1592, 0.3723], [0.2121, 0.0465, 0.25, 0.2373, 0.1875, 0.95, 0.1878, 0.201, 0.1952, 0.5319], [0.5581, 0.3243, 0.0758, 0.0, 0.1974, 0.2034, 0.3625, 0.35, 0.2513, 0.1618, 0.2072, 0.734], [0.0581, 0.2763, 0.1525, 0.4125, 0.5, 0.3042, 0.1422, 0.3063, 0.3723], [0.0758, 0.0465, 0.2105, 0.1695, 0.1875, 0.95, 0.2328, 0.1912, 0.2973, 0.4468], [0.1628, 0.2162, 0.0152, 0.0349, 0.1118, 0.2119, 0.525, 0.8125, 0.2354, 0.1373, 0.2132, 0.7128], [0.6977, 0.1892, 0.1818, 0.1047, 0.1842, 0.1695, 0.175, 0.6125, 0.2963, 0.1569, 0.1862, 0.5851], [0.1395, 0.1351, 0.1515, 0.0349, 0.2105, 0.2458, 0.45, 0.4375, 0.3545, 0.1961, 0.1652, 0.4894], [0.186, 0.027, 0.3485, 0.0698, 0.1382, 0.0932, 0.4625, 0.625, 0.3228, 0.2353, 0.1832, 0.5106], [0.3256, 0.6486, 0.0606, 0.0465, 0.1316, 0.1102, 0.2875, 0.825, 0.3677, 0.2549, 0.2312], [0.3256, 0.2432, 0.0909, 0.0465, 0.1118, 0.2458, 0.4375, 0.7125, 0.2566, 0.2892, 0.2132, 0.4468], [0.1628, 0.3514, 0.0758, 0.0698, 0.2105, 0.2373, 0.3875, 0.525, 0.2619, 0.2451, 0.2162, 0.5851], [0.3721, 0.1351, 0.3333, 0.0814, 0.0855, 0.0763, 0.4, 0.375, 0.246, 0.3284, 0.2763, 0.6809], [0.1061, 0.1163, 0.1908, 0.178, 0.375, 0.8375, 0.3175, 0.2255, 0.1982, 0.6277], [0.3488, 0.1622, 0.1818, 0.0581, 0.3553, 0.178, 0.4125, 0.575, 0.328, 0.1569, 0.2102, 0.5532], [0.4884, 0.2703, 0.0758, 0.0465, 0.1645, 0.1441, 0.2875, 0.45, 0.3677, 0.1667, 0.2793, 0.7128], [0.4884, 0.2973, 0.1061, 0.0116, 0.1842, 0.1949, 0.45, 0.675, 0.3201, 0.1814, 0.2132, 0.6915], [0.2558, 0.3784, 0.1364, 0.0814, 0.2303, 0.1356, 0.6, 0.425, 0.2989, 0.3186, 0.2192, 0.5319], [0.3488, 0.2703, 0.2576, 0.0698, 0.2961, 0.2034, 0.325, 0.25, 0.2513, 0.299, 0.2793, 0.7553], [0.3721, 0.4595, 0.1047, 0.2237, 0.1102, 0.3, 0.7375, 0.3545, 0.2059, 0.2462, 0.6489], [0.186, 0.2162, 0.2727, 0.0814, 0.1447, 0.2034, 0.45, 0.9, 0.381, 0.2255, 0.2252, 0.4043], [0.6512, 0.2703, 0.303, 0.0465, 0.3224, 0.1186, 0.4, 0.8875, 0.2143, 0.2745, 0.2462, 0.5638], [0.2093, 0.5405, 0.2879, 0.1395, 0.2434, 0.1356, 0.425, 0.7375, 0.328, 0.2157, 0.1862, 0.7553], [0.1163, 0.2703, 0.0465, 0.2303, 0.1186, 0.4375, 0.9125, 0.3783, 0.2402, 0.2072, 0.7872], [0.3256, 0.0811, 0.1212, 0.0116, 0.2303, 0.1356, 0.4, 0.7125, 0.3836, 0.3725, 0.2252, 0.6809], [0.2093, 0.1351, 0.2424, 0.093, 0.1842, 0.0593, 0.4125, 0.975, 0.3783, 0.402, 0.2372, 0.5957], [0.4884, 0.5135, 0.0909, 0.0465, 0.2039, 0.3729, 0.35, 0.775, 0.3148, 0.3186, 0.2312, 0.7447], [0.2326, 0.5676, 0.2727, 0.1842, 0.1525, 0.4625, 0.775, 0.3571, 0.3971, 0.2883, 0.5638]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

