created: 20230722000818000
creator: Drevarr
tags: ChartData
title: 202307220008_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Mister Jekyll", "Cosmedicz", "Zefirokai", "Cat Wigglebooty", "Luke The Ghastly", "Kahlianne", "Name Is What", "Squishy Jellyfish", "Mike The Archmagus", "Lord Of Bones", "Mistwalker Cael", "Venomina The Sly", "Primal Clone", "Johosh The Mighty", "Tegan Parker", "Rina Of Theros", "Eibh\u00ebar", "Rozaalyna", "Tribal S", "Be\u00eb", "Raelyn Sunray", "Xanvias Einzbern", "Black Raspberry Pie", "Arriasa", "Regis Hawkesburne", "Oo Dads Mad", "Zaedy Zae", "Klengah", "Air One Com", "Gavann", "Wall Knot", "Seiker Novus Terra", "Keypek The Drunk", "Aronorf Xideliesi", "Gestern Yesteryear", "Yummy Kiwi", "Koralia Danai", "Sub Train", "Drevarr Moonwillow", "Bella Sassy", "Grasszanine", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Scourge", "Soulbeast", "Catalyst", "Scrapper", "Scourge", "Scourge", "Reaper", "Firebrand", "Weaver", "Scourge", "Vindicator", "Druid", "Chronomancer", "Berserker", "Tempest", "Scourge", "Chronomancer", "Scourge", "Druid", "Scourge", "Firebrand", "Berserker", "Chronomancer", "Druid", "Berserker", "Berserker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.1731, 0.0389, 5.341, 5.9741, 4.3512, 0.8193, 2.9753, 3.234, 1.8218, 2.0065, 2.6891, 16.6453, 3.2524, 5.4158, 0.0, 0.0, 1.0935], [6.9115, 23.6258, 22.8389, 3.9842, 3.532, 4.0338, 6.0799, 6.3423], [20.1096, 6.8429, 8.428, 7.3431, 14.7941, 5.1391, 13.7122, 9.2978], [5.3626, 0.0, 3.577, 5.5385, 1.8493, 1.4151, 6.468, 4.6084, 8.7587, 25.6393, 7.8753, 25.9357, 6.7487, 4.4739, 0.0, 1.4661, 0.8384], [14.747, 3.8102, 4.41, 6.9698, 12.2921, 5.0646, 12.8066, 8.5701, 6.4464, 22.9638, 2.305, 0.0, 5.8543, 6.1222, 0.6837, 0.5174, 5.7226], [19.0669, 4.0435, 3.479, 3.8583, 5.3302, 4.6178, 7.6322, 8.9744, 2.1021, 15.3835, 11.909, 42.9681, 0.8131, 5.3373, 0.1367, 0.2587, 4.4104], [9.6824, 3.6547, 12.691, 3.1115, 14.4677, 0.0, 15.6526, 3.6382, 10.8608, 22.9638, 16.3268, 32.1293, 0.0, 3.2181, 0.0, 0.0, 3.9002], [18.0242, 3.9269, 5.096, 2.8626, 6.0917, 0.0, 10.6075, 8.8126, 9.7397, 26.3081, 19.7842, 49.5488, 5.6917, 14.2852, 4.9454, 4.7001, 2.6608], [20.8544, 2.4494, 6.811, 3.8583, 13.1624, 3.9847, 16.6874, 6.3063, 5.6757, 27.8687, 23.4338, 39.0971, 9.3506, 4.003, 3.6692, 4.1395, 2.8796], [37.091, 3.6936, 14.896, 8.7122, 13.5975, 4.2826, 20.5682, 13.7445, 10.5105, 35.672, 22.8575, 14.7098], [16.0877, 3.9269, 5.096, 3.4227, 12.4009, 4.3198, 19.9214, 8.4084, 6.5165, 28.3147, 22.8575, 43.3552, 9.5946, 5.7298, 2.4613, 3.579, 4.9937], [19.3648, 2.255, 1.47, 1.0579, 10.9868, 8.4535, 9.9607, 5.417, 4.1341, 21.8491, 16.3268, 87.8717, 6.9927, 6.8286, 0.0, 5.5194, 2.1505], [14.0022, 2.0218, 8.281, 7.3431, 17.6224, 4.2454, 20.1802, 12.2084, 8.969, 15.6065, 25.7387, 58.4521, 13.1722, 6.5932, 3.2134, 2.7166, 8.42], [15.4918, 6.2986, 10.633, 12.1971, 11.0956, 4.5433, 13.3241, 12.8552, 8.4785, 27.6458, 29.5803, 59.6134, 9.0254, 9.6543, 3.7603, 4.2258, 4.1917], [34.8566, 0.0, 9.212, 0.0, 4.2424, 14.5981, 39.8429, 19.3231, 4.8348, 4.682, 16.711, 60.3876, 3.3337, 31.239, 0.0, 4.5563], [30.3878, 7.8538, 11.319, 3.9205, 15.8819, 3.4261, 16.2994, 15.3615, 9.1091, 32.9966, 25.5466, 42.581, 14.2292, 11.6165, 3.7831, 5.045, 9.5134], [20.1096, 4.86, 7.987, 7.7788, 15.0116, 6.6287, 17.981, 11.3998, 8.8989, 35.2261, 24.2021, 56.5166, 16.6685, 11.852, 4.8087, 4.312, 5.7226], [34.1118, 10.584, 10.0813, 12.6185, 3.3144, 12.936, 15.6849, 11.2112, 28.3147, 30.1566, 68.9038, 10.8142, 10.2037, 1.732, 4.0964], [26.8128, 1.1275, 7.693, 4.9162, 5.8741, 4.2826, 22.3793, 10.1063, 10.9309, 46.3736, 18.0555, 73.9361, 14.4732, 15.855, 0.0, 0.0, 3.7543], [31.5795, 5.4821, 9.702, 8.7122, 13.9238, 5.1019, 18.1104, 6.6297, 4.2042, 31.8818, 27.2754, 63.8715, 12.9283, 12.7939, 1.732, 5.735, 10.4247], [21.4502, 5.7542, 3.332, 0.6845, 0.7615, 0.0, 25.7426, 10.753, 13.6637, 25.1933, 47.4438, 77.0329, 10.6516, 16.1689, 9.0021, 7.3629], [24.2805, 0.7776, 14.847, 5.7874, 26.8687, 16.9814, 14.6177, 11.4807, 5.2553, 37.6786, 26.8912, 56.9037, 4.3907, 16.0904, 1.9372, 2.9322, 13.8874], [24.4294, 4.2768, 8.379, 4.2316, 14.4677, 4.8784, 13.9709, 10.5913, 15.976, 44.813, 26.8912, 71.2264, 17.8069, 10.7531, 3.8059, 4.5276, 8.9667], [29.0472, 1.6718, 3.724, 2.3647, 10.9868, 6.1074, 18.4985, 12.8552, 16.1862, 59.7506, 23.4338, 76.2587, 16.0181, 4.2385, 4.3551, 4.6292], [18.769, 1.9829, 11.662, 5.414, 23.8228, 11.5816, 15.5232, 18.7572, 13.1031, 41.0228, 31.117, 66.5812, 13.5788, 3.2181, 3.578, 5.6056, 6.1965], [25.919, 5.8709, 9.114, 6.2852, 23.4965, 7.1501, 20.5682, 17.4636, 13.1031, 32.1048, 24.9704, 66.1941, 27.6454, 1.9623, 3.2818, 9.6957], [22.9398, 9.1757, 8.967, 0.9334, 12.9448, 15.4918, 30.6583, 13.7445, 9.4595, 49.4949, 19.4001, 77.0329, 16.5059, 2.4332, 0.0, 0.0, 10.8621], [22.7909, 1.5552, 7.399, 1.6802, 16.8609, 1.3779, 31.0464, 9.5403, 9.9499, 47.2654, 39.9526, 85.162, 15.7741, 13.4218, 1.6181, 3.8808, 4.5927], [34.2608, 4.9378, 5.929, 1.8669, 31.7638, 6.8894, 20.0508, 23.3656, 12.7527, 47.7113, 24.7783, 67.3554, 9.8385, 8.006, 4.558, 0.0, 12.6117], [30.5368, 1.0886, 8.281, 2.987, 32.7428, 7.4852, 27.8124, 14.6338, 10.3003, 25.4163, 34.9586, 65.0328, 5.9356, 41.0503, 4.7631, 17.8948], [28.3024, 5.9098, 2.744, 4.4806, 24.2579, 15.4918, 15.1351, 13.3402, 14.995, 56.8522, 50.325, 72.0006, 14.4732, 0.0, 0.0, 7.8047, 5.3946], [84.7582, 23.1336, 3.92, 6.223, 30.1321, 0.3352, 48.51, 59.1013, 2.3123, 62.649, 7.8753, 75.8716], [34.8566, 5.7154, 16.317, 11.9482, 28.174, 11.8051, 26.5188, 27.1656, 18.989, 36.1179, 33.614, 109.9364, 20.3275, 16.1689, 3.7603, 4.5276, 14.7623], [42.9005, 2.255, 9.212, 7.5298, 28.0652, 7.0011, 32.2106, 14.0679, 14.3643, 63.5407, 52.0537, 97.5492, 15.8555, 16.8753, 0.0, 5.2606, 15.0539], [22.195, 4.3934, 1.764, 2.8626, 26.4335, 12.3264, 48.7687, 22.9614, 15.2052, 72.4588, 49.9408, 105.2912, 13.9853, 7.0641, 8.1132, 12.936, 15.6006], [40.0702, 12.5194, 8.82, 8.1521, 26.4335, 7.3363, 33.6336, 34.6846, 11.4915, 64.8785, 54.3586, 86.3233, 17.8069, 11.0671, 15.3149, 21.2582, 7.1806], [44.9859, 11.2752, 1.078, 12.6949, 34.0481, 0.0, 47.4751, 29.5911, 8.6887, 72.0129, 50.517, 103.7428, 15.6928, 29.4337, 3.145, 13.8415, 8.5657], [30.0899, 13.919, 5.929, 2.3025, 28.3916, 26.4776, 55.8835, 31.3698, 16.2562, 87.1735, 74.335, 106.0654, 16.7499, 8.163, 12.5345, 19.1022, 17.6054], [53.7746, 11.1974, 11.564, 10.7036, 27.195, 11.321, 46.4402, 17.6253, 39.7998, 99.4357, 77.6003, 157.5497, 17.2377, 10.3607, 8.1132, 5.8643, 10.7892], [54.9662, 9.8366, 12.103, 12.0726, 46.7754, 6.0329, 69.5957, 37.0293, 25.5055, 127.5274, 58.9686, 139.356, 21.9537, 29.3553, 1.9372, 26.3032, 25.4785], [116.6357, 15.7075, 37.093, 21.4071, 63.5275, 16.8325, 74.5114, 43.0931, 44.4944, 157.8486, 122.355, 245.8085, 45.9401, 26.6866, 12.1927, 5.6487, 20.1204], [116.0398, 6.1042, 43.61, 31.4261, 80.0621, 25.286, 108.6624, 67.6714, 72.4524, 214.255, 153.0878, 345.2932, 15.7741, 27.55, 0.0, 0.0, 35.721], [138.0859, 23.017, 38.906, 40.8851, 95.4001, 28.7865, 124.315, 73.331, 73.5735, 188.8387, 147.7095, 276.3894, 59.0311, 38.5386, 30.0828, 9.7451, 41.5166]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

