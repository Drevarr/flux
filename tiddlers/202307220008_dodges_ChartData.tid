created: 20230722000818000
creator: Drevarr
tags: ChartData
title: 202307220008_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Cosmedicz", "Tribal S", "Keypek The Drunk", "Zaedy Zae", "Seiker Novus Terra", "Lord Of Bones", "Zefirokai", "Koralia Danai", "Daphne Agla\u00e9", "Oo Dads Mad", "Rina Of Theros", "Mister Jekyll", "Xanvias Einzbern", "Luke The Ghastly", "Squishy Jellyfish", "Bella Sassy", "Yummy Kiwi", "Gavann", "Cat Wigglebooty", "Arriasa", "Be\u00eb", "Sub Train", "Wall Knot", "Grasszanine", "Sofya De Nova", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Black Raspberry Pie", "Name Is What", "Primal Clone", "Rozaalyna", "Regis Hawkesburne", "Permanent Dawn", "Lord Erin The Wise", "Johosh The Mighty", "Raelyn Sunray", "Air One Com", "Venomina The Sly", "Klengah", "Tegan Parker", "Sirplay", "Eibh\u00ebar", "Aronorf Xideliesi", "Kahlianne", "Gestern Yesteryear", "Arcanophage Farra", "Mike The Archmagus", "Newtype Khan", "Glorious Gluvs", "Mistwalker Cael"];
const professions = ["Soulbeast", "Druid", "Scrapper", "Druid", "Tempest", "Scourge", "Catalyst", "Firebrand", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Druid", "Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Weaver", "Chronomancer", "Scrapper", "Chronomancer", "Reaper", "Chronomancer", "Scourge", "Berserker", "Weaver", "Weaver", "Berserker", "Firebrand", "Firebrand", "Druid", "Druid", "Tempest", "Berserker", "Chronomancer", "Firebrand", "Scourge", "Firebrand", "Spellbreaker", "Weaver", "Spellbreaker", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 12, 9, 0, 1, 1, 0, 1], [3, 0, 0, 1, 1, 0, 0, 2, 2, 1, 4, 9, 0, 1, 0, 1, 2], [2, 0, 1, 0, 2, 0, 1, 1, 2, 7, 3, 8, 0, 1, 0, 0, 0], [4, 0, 2, 0, 1, 0, 0, 1, 2, 7, 1, 9, 1, 2, 0, 0, 0], [4, 0, 0, 0, 1, 1, 3, 3, 2, 6, 2, 11], [11, 0, 3, 1, 3, 1, 2, 0, 5, 10, 3, 1], [18, 2, 5, 1, 4, 1, 7, 3], [10, 1, 1, 0, 4, 0, 1, 2, 3, 4, 3, 10, 1, 2, 0, 0, 0], [7, 0, 2, 0, 2, 0, 2, 1, 6, 10, 3, 2, 5, 3, 0, 0, 0], [8, 0, 2, 1, 4, 2, 2, 1, 2, 7, 6, 14, 0, 1, 0, 2], [5, 1, 2, 2, 0, 1, 2, 2, 6, 10, 7, 15, 0, 2, 0, 0, 1], [11, 0, 3, 1, 4, 1, 9, 4, 3, 4, 1, 16, 2, 2, 0, 0, 0], [4, 1, 0, 0, 2, 1, 0, 1, 2, 15, 9, 23, 0, 2, 0, 0, 1], [12, 1, 5, 0, 1, 1, 5, 4, 0, 19, 2, 7, 2, 2, 0, 0, 1], [4, 0, 2, 0, 2, 1, 1, 2, 3, 9, 9, 19, 6, 3, 0, 1, 1], [5, 2, 4, 1, 1, 3, 3, 0, 2, 12, 8, 10, 9, 3, 2, 0, 2], [6, 0, 1, 1, 0, 0, 0, 2, 4, 7, 10, 18, 11, 3, 1, 0, 3], [6, 2, 5, 1, 5, 1, 2, 0, 2, 11, 4, 24, 3, 1, 0, 1], [7, 0, 3, 2, 5, 0, 4, 5, 11, 9, 10, 8, 3, 3, 1, 0, 1], [10, 4, 3, 2, 2, 2, 6, 3, 5, 4, 4, 17, 5, 2, 0, 4], [4, 0, 4, 1, 2, 1, 3, 3, 2, 16, 4, 30, 1, 5, 0, 0, 2], [10, 0, 3, 1, 0, 1, 4, 2, 5, 12, 7, 24, 8, 1, 0, 0, 0], [10, 0, 2, 3, 4, 1, 5, 2, 2, 18, 5, 20, 4, 3, 1, 0, 0], [8, 0, 3, 0, 2, 1, 3, 2, 1, 19, 11, 27, 2, 3, 2, 0, 1], [1, 4, 0, 4, 3, 8, 4, 3, 22, 10, 18, 6, 3, 0, 0, 0], [10, 4, 4, 2, 3, 3, 3, 5, 5, 16, 6, 21, 6, 4, 0, 1, 3], [8, 1, 5, 4, 7, 3, 4, 2, 6, 14, 11, 17, 7, 1, 1, 2, 3], [11, 1, 2, 0, 3, 2, 4, 2, 7, 16, 11, 24, 8, 4, 0, 1, 1], [4, 1, 2, 2, 5, 1, 3, 3, 7, 26, 16, 25, 2, 0, 0, 0, 0], [4, 1, 5, 1, 5, 1, 7, 5, 5, 15, 6, 38, 8, 2, 0, 2, 3], [14, 4, 3, 12, 5, 8, 5, 2, 18, 7, 19, 4, 3, 2, 2], [12, 2, 1, 2, 5, 0, 5, 4, 8, 28, 13, 21, 3, 0, 0, 2, 2], [7, 0, 6, 2, 2, 1, 8, 1, 6, 16, 17, 38, 4, 1, 1], [14, 0, 6, 3, 7, 3, 2, 3, 9, 23, 6, 31, 9, 0], [6, 0, 2, 0, 3, 3, 6, 4, 2, 26, 10, 40, 9, 3, 1, 0, 3], [18, 3, 3, 0, 10, 3, 3, 5, 8, 20, 9, 31, 4, 1, 1, 4], [13, 3, 7, 1, 8, 6, 7, 5, 6, 21, 10, 14, 13, 6, 1, 2, 1], [13, 1, 5, 2, 3, 3, 5, 6, 8, 21, 21, 35, 3, 2, 2, 0, 4], [17, 3, 10, 3, 6, 2, 7, 6, 11, 16, 15, 23, 5, 5, 1, 2, 2], [14, 4, 5, 2, 11, 4, 6, 3, 11, 24, 18, 26, 8, 3, 1, 3], [26, 3, 11, 3, 8, 4, 9, 4, 3, 3, 18, 51], [12, 1, 7, 2, 7, 3, 7, 7, 11, 32, 10, 37, 8, 3, 2, 3, 3], [19, 4, 5, 2, 6, 3, 5, 5, 10, 20, 18, 39, 11, 7, 0, 1, 4], [18, 4, 10, 3, 5, 5, 7, 8, 11, 27, 19, 31, 5, 4, 1, 2, 5], [16, 2, 8, 2, 6, 2, 11, 8, 12, 27, 17, 44, 9, 4, 5, 4, 6], [20, 3, 7, 1, 12, 5, 5, 7, 14, 26, 23, 48, 4, 6, 0, 3, 5], [15, 4, 3, 5, 11, 5, 12, 5, 11, 42, 24, 34, 8, 7, 3, 5, 4], [26, 5, 7, 7, 14, 10, 9, 10, 17, 32, 30, 40, 8, 6, 2, 2, 7], [21, 5, 7, 4, 13, 7, 10, 9, 17, 33, 29, 66, 12, 7, 4, 2, 7], [28, 3, 11, 5, 15, 7, 19, 11, 11, 40, 30, 80, 13, 6, 2, 0, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

