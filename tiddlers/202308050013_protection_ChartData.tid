created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Jaylah Feres", "Keypek The Drunk", "Lurker Holystrike", "J\u00e2sm\u00eene", "Audens Silvermarker", "Delayed Worlds", "Head Bobber", "Kisumaiassu", "Alarics Clone", "Kosa\u00efr", "Air One Com", "Ryvalia Fazebringer", "Arriasa", "Klengah", "Venomina The Sly", "Gestern Yesteryear", "Zaylen Harker", "Zaedy Zae", "Kahlyanne", "Aronorf Xideliesi", "Drevarr Moonwillow", "Sub Train", "Yummy Kiwi", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Scrapper", "Scrapper", "Willbender", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Druid", "Druid", "Druid", "Firebrand", "Firebrand", "Druid", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[116.2123, 172.572, 10.3776, 15.0627, 0.0, 0.0, 0.0, 29.1447, 12.8432, 13.7117, 0.0, 33.3338, 24.6242, 0.0, 10.3488, 13.8432, 0.0, 0.0, 19.7194, 31.9656, 19.2423, 0.0, 13.7963, 10.3837], [0.0, 109.2269, 252.357, 13.7503, 10.2589, 15.0218, 0.0, 0.0, 0.0, 30.7888, 6.8448, 13.8069, 0.0, 21.3389, 35.7538, 0.0, 24.3264, 21.84, 14.8746, 3.7485, 3.4469, 39.7958, 1.1597, 11.6204, 3.4447, 12.6114, 15.4733, 0.0, 12.0552, 11.178], [121.2926, 599.865, 43.5859, 20.8978, 20.5827, 0.0, 14.5818], [93.5626, 429.066, 0.0, 0.0, 27.0825, 8.2432, 0.0, 34.3758, 0.0, 37.1358, 18.596, 0.0, 46.8834, 0.0, 38.7744, 25.0656, 110.1398, 68.0767, 0.0, 18.6592, 0.0, 18.5785, 19.5098, 13.4656, 18.63], [43.2032, 173.7765, 35.9849, 146.2579, 113.661, 38.5506, 97.5072, 144.0096, 52.6268, 18.6375, 100.8413, 95.5284, 0.0, 61.2255, 5.3665, 20.0174, 0.0, 73.6499, 50.3364, 135.9369], [0.0, 210.1982, 420.201, 0.0, 29.3383, 46.943, 0.0, 0.0, 0.0, 96.9248, 0.0, 28.6612, 34.3818, 0.0, 0.0, 32.571, 104.2944, 55.3728, 49.272, 0.0, 68.6971, 120.6772, 27.6139, 13.7063, 34.4062, 33.8715, 0.0, 25.8902], [233.6947, 1232.235, 70.4812, 28.497], [0.0, 52.7083, 609.321, 0.0, 0.0, 0.0, 55.2391, 69.553, 22.419, 54.9792, 0.0, 0.0, 92.3141, 175.4999, 36.9864, 162.4896, 122.1024, 0.0, 0.0, 0.0, 178.897, 27.7806, 0.0, 0.0, 0.0, 0.0, 0.0, 17.2017], [9.8938, 160.4534, 677.877, 56.7309, 22.0105, 53.9483, 63.4458, 33.5248, 78.4613, 19.8973, 63.3541, 75.403, 11.385, 16.5312, 32.3904, 11.8835, 20.2125, 86.8934, 68.1688, 10.3205, 22.5743, 34.0119, 21.4139, 10.2419, 41.3586], [0.0, 156.8549, 817.353, 0.0, 14.927, 14.0107, 0.0, 22.0731, 0.0, 127.3399, 0.0, 63.3213, 18.596, 18.6219, 16.6248, 0.0, 72.7776, 76.4736, 41.7134, 0.0, 36.553, 154.4852, 18.6176, 43.0044], [221.2056, 934.962, 40.9915, 14.7913, 3.4666, 14.7959, 0.0, 96.4764, 32.016, 128.9279, 13.9564, 61.9625, 89.1759, 0.0, 36.8256, 47.3088, 22.4735, 51.8635, 65.3131, 0.0, 59.8927, 18.3113, 13.7963, 9.3308, 0.0, 64.8766, 24.9021], [36.3248, 161.9352, 737.568, 82.9343, 5.7537, 11.4108, 5.6549, 28.497, 49.578, 121.9594, 45.7792, 94.6487, 28.554, 103.3149, 102.3923, 13.959, 108.864, 33.1968, 38.3586, 0.0, 82.7251, 124.8226, 43.0244, 33.8668, 59.4173, 19.9192, 13.7974, 37.4081, 58.0014], [325.5638, 943.827, 74.1998, 36.0378, 18.3701, 60.2845, 69.6484, 0.0, 56.3295, 81.5939, 0.0, 76.7424, 122.7744, 16.8147, 102.1238, 152.1822, 0.0, 42.9681, 0.0, 33.1695, 0.0, 26.7297, 51.1083], [21.3675, 240.8918, 929.052, 125.4825, 23.3404, 56.9094, 0.0, 51.5755, 71.5166, 0.0, 81.4131, 35.6454, 111.93, 92.3757, 0.0, 101.6736, 102.2112, 0.0, 89.2982, 40.2564, 0.0, 0.0, 22.2274, 20.3559, 31.9117, 0.0, 38.9528, 35.7075], [0.0, 227.556, 937.917, 38.0512, 27.7371, 97.8581, 0.0, 19.3039, 40.3095, 50.1438, 19.3936, 81.1274, 29.6479, 89.0669, 68.0992, 20.5722, 84.5376, 30.8448, 61.0746, 136.9133, 153.4719, 6.3308, 73.6441, 16.1662, 90.909, 44.0677, 62.8282, 10.1844], [47.8962, 249.8496, 313.0176, 182.375, 8.925, 362.4034, 451.4801, 35.7442, 167.2664, 123.9729, 116.7186, 135.603, 117.6029, 80.2226, 180.711], [11.3572, 520.9445, 1666.029, 38.0599, 10.0429, 15.3009, 150.1326, 22.5584, 187.393, 25.4233], [247.2422, 984.015, 131.1037, 52.6787, 57.126, 0.0, 35.742, 52.4144, 111.1982, 19.0624, 86.8406, 24.6689, 79.7228, 150.2496, 0.0, 110.1408, 72.0384, 31.7701, 149.0174, 163.1445, 0.0, 24.6985, 26.1435, 36.3952, 51.0998, 56.8331, 45.2323, 61.7895], [0.0, 519.6744, 1597.473, 228.3937, 68.6099, 53.8039, 16.8637, 50.5862, 125.5628, 209.0945, 31.6848, 54.8467, 14.7485, 43.5394, 94.2538, 14.7906, 65.4528, 84.2016, 12.0047, 4.7145, 75.8314, 78.7626, 18.201, 0.0, 35.1679, 28.0215, 20.5624, 40.3296, 22.7907], [444.7397, 1327.977, 63.4763, 0.0, 129.2016, 17.9676, 25.3682, 160.6695, 19.7616, 99.6953, 37.5125, 106.3633, 109.4874, 0.0, 166.5216, 136.0128, 93.0468, 27.048, 155.0294, 205.4276, 6.8863, 82.7586, 3.6623, 50.4031, 56.9205, 0.0, 62.7946, 98.8011], [31.339, 303.3374, 1006.473, 177.284, 57.8353, 140.0346, 51.6488, 112.4992, 132.4216, 78.3104, 240.1448, 60.9932, 90.9887, 152.1277, 29.997, 159.5328, 147.9744, 75.1408, 205.0493, 213.442, 24.1112, 26.1979, 59.6477, 88.5334, 89.0955, 59.0499, 78.0399, 86.5053], [0.0, 612.1786, 2276.532, 82.2425, 17.9124, 0.0, 79.3247, 167.8299, 206.7032, 23.736, 70.4628, 23.0281, 101.128, 189.4814, 270.8832, 18.4128, 50.0804, 0.0, 276.1512, 190.0436, 124.2003, 89.7435, 23.9108], [0.0, 465.061, 1335.069, 154.8857, 30.7225, 158.8118, 6.8391, 81.9329, 137.8275, 204.2371, 107.7136, 218.5299, 82.2673, 152.3547, 221.4095, 81.4572, 275.7888, 224.2464, 90.6621, 16.107, 340.0387, 323.4333, 0.0, 68.1394, 93.9497, 49.1335, 129.7822, 24.4608, 147.4162], [16.0968, 818.9899, 2001.717, 144.1622, 20.7078, 64.1314, 41.8922, 133.3931, 344.58, 66.4608, 211.6741, 56.6554, 186.6826, 295.0735, 41.7186, 75.1296, 273.3696, 97.8164, 44.1105, 222.3638, 294.047, 0.0, 141.7766, 39.741, 131.8268, 101.205, 71.4332, 40.4639, 114.1398], [26.7288, 896.8882, 2622.858, 43.9318, 95.4785, 156.7896, 0.0, 81.3372, 62.3619, 272.0172, 62.7072, 258.9984, 23.3298, 197.6834, 136.4767, 29.3832, 256.368, 197.9712, 56.1838, 0.0, 291.7022, 356.7808, 42.4413, 97.3581, 38.3419, 116.3272, 0.0, 147.6513, 140.8428], [30.4066, 796.1285, 2797.203, 319.7166, 47.8207, 97.5692, 56.5593, 81.2184, 298.4716, 81.7696, 260.5219, 85.3792, 253.4828, 396.2833, 15.147, 327.8016, 184.1952, 157.0721, 40.614, 363.205, 358.7153, 7.9382, 71.4297, 179.3782, 23.8685, 63.531, 0.0, 191.6075, 111.78]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

