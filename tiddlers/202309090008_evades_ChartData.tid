created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Snugglies Wugglies", "Firebrand pl1-2628", "Oo Dads Mad", "Tribal S", "Koralia Danai", "Lucky Luprac\u00e1n", "Be\u00eb", "The Broccoli Effect", "Air One Com", "Seiker Novus Terra", "Rina Of Theros", "Heals For Daddy", "Philip Poundhouse", "Graumas", "Th\u00f6rfinn Stormcloak", "Mew Mew", "Drevarr Moonwillow", "Mew Mew", "Kahlyanne", "K\u00e2 \u00d4tik R\u00e6j", "J\u00e2sm\u00eene", "Permanent Dawn", "Gestern Yesteryear", "Legoh Brave", "Trooobi", "High Sorcer Baradun", "Mort\u00e4rion", "Raziel Umbra", "Regis Hawkesburne", "Tegan Parker", "Cupi Cupita", "K\u00f4sair", "Black Raspberry Pie", "Brutal Araden", "Sub Train", "Jimbo The Pleb", "Mister Jekyll", "Xanvias Einzbern", "Graumas", "Wren Raveness", "Jobless Jennifer", "Solus Luxes", "Elon Illusionblade", "Loganlek", "Sofya De Nova", "No Reserv\u00e9", "Ryvalia Fazebringer", "Glorious Gluvs", "Lord Erin The Wise", "Mistwalker Cael"];
const professions = ["Virtuoso", "Firebrand", "Berserker", "Druid", "Firebrand", "Scrapper", "Reaper", "Harbinger", "Firebrand", "Tempest", "Reaper", "Druid", "Herald", "Deadeye", "Berserker", "Scrapper", "Scrapper", "Holosmith", "Tempest", "Berserker", "Tempest", "Weaver", "Firebrand", "Tempest", "Herald", "Tempest", "Scrapper", "Chronomancer", "Berserker", "Tempest", "Herald", "Spellbreaker", "Chronomancer", "Renegade", "Firebrand", "Berserker", "Reaper", "Berserker", "Thief", "Chronomancer", "Berserker", "Firebrand", "Chronomancer", "Berserker", "Tempest", "Vindicator", "Chronomancer", "Berserker", "Weaver", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 5, 0, 0, 1, 1, 1, 0, 0, 2, 0, 8], [0, 3, 11, 0, 0, 0, 1, 2, 0, 2, 0, 0], [0, 0, 17, 3, 2, 1, 0], [0, 2, 13, 0, 0, 0, 1, 2, 0, 0, 0, 0, 7], [5, 13, 0, 0, 0, 1, 0, 3, 4, 0, 0], [0, 5, 0, 3, 0, 6, 0, 4, 0, 0, 2, 0, 8], [0, 0, 6, 0, 0, 1, 15, 3, 0, 0, 0, 0, 6], [0, 5, 0, 26], [0, 0, 21, 0, 0, 2, 1, 0, 2, 1, 0, 5], [2, 19, 0, 0, 8, 2, 1, 0, 0, 0], [0, 1, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0, 6], [0, 2, 27, 2, 0, 1, 4, 3], [0, 6, 9, 1, 1, 6, 7, 0, 0, 9], [6, 34], [0, 9, 22, 0, 3, 3, 4], [4, 4, 13, 0, 0, 1, 4, 0, 15], [0, 0, 29, 0, 1, 0, 0, 0, 3, 0, 0, 10], [0, 48], [0, 12, 19, 0, 6, 15, 0, 0, 0, 3, 0, 3], [0, 0, 32, 1, 2, 0, 3, 0, 5, 7, 0, 9], [0, 7, 23, 2, 4, 26], [0, 0, 9, 2, 0, 10, 2, 15, 0, 5, 6, 0, 16], [0, 10, 34, 0, 3, 3, 4, 0, 3, 3, 8], [0, 0, 36, 2, 0, 1, 1, 3, 0, 6, 5, 0, 14], [0, 4, 43, 0, 4, 4, 17], [0, 3, 60, 4, 0, 2, 0, 5], [0, 0, 41, 3, 0, 0, 3, 7, 0, 0, 4, 0, 16], [2, 2, 26, 2, 0, 3, 11, 14, 0, 1, 1, 0, 16], [0, 1, 38, 1, 0, 14, 7, 6, 0, 3, 0, 0, 10], [0, 0, 43, 0, 4, 9, 4, 0, 3, 4, 0, 19], [1, 3, 76, 2, 6, 0], [2, 11, 38, 0, 0, 4, 3, 10, 0, 5, 0, 19], [0, 4, 67, 7, 1, 4, 1, 0, 0, 6, 0, 4], [1, 3, 42, 1, 0, 0, 7, 12, 0, 3, 5, 0, 21], [0, 1, 60, 0, 0, 1, 6, 3, 0, 0, 11, 0, 14], [0, 0, 75, 0, 0, 14, 8, 3, 0, 0, 1, 0], [0, 6, 48, 1, 0, 4, 10, 3, 15, 4, 0, 0, 19], [0, 6, 53, 8, 7, 23, 5, 0, 0, 0, 0, 8], [5, 0, 8, 26, 3, 0, 3, 6, 0, 64], [0, 5, 46, 0, 0, 6, 13, 12, 0, 2, 6, 0, 26], [0, 9, 73, 14, 0, 9, 6, 8], [0, 4, 58, 5, 0, 9, 6, 11, 0, 5, 7, 0, 16], [0, 1, 73, 4, 0, 4, 3, 1, 1, 8, 2, 0, 24], [0, 0, 96, 8, 0, 3, 4, 6, 1, 0, 1, 0, 6], [0, 2, 103, 0, 0, 2, 3, 2, 0, 0, 0, 0, 13], [0, 14, 55, 2, 0, 1, 5, 3, 0, 2, 7, 0, 37], [0, 6, 81, 3, 0, 1, 15, 9, 0, 1, 1, 0, 27], [7, 107, 1, 0, 15, 11, 16, 0, 4, 3, 0, 8], [0, 2, 68, 8, 10, 15, 21, 1, 0, 4, 0, 50], [0, 3, 112, 4, 0, 7, 6, 7, 0, 1, 1, 0, 51]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

