created: 20230626011754000
creator: Drevarr
modified: 20230705163537809
modifier: drevarr
tags: ChartData
title: 202306260117_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["The Fancy Cheese", "Be\u00eb", "Elonith Requiem", "Jacob Pine", "Rozaalyna", "Smol Gluvs", "Morv\u00e4rth"];
const professions = ["Scrapper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6214, 16003, 1754, 19993, 26086, 0, 29370, 27954, 0, 34236, 1374, 19406, 5585, 35958, 26571, 3060, 12851, 22597, 11663, 24199, 5361, 4802, 5098, 0, 63321, 5808, 0], [15497, 1584, 41130, 59708, 923, 128296, 0, 38308, 69556, 12967, 20801, 12734, 14636, 22378, 1517, 100844, 3729, 0], [0, 113668, 2790, 25079, 71289, 106467, 175907, 1829, 50287, 45685, 11556, 26658, 10360, 32527, 10082, 256, 43648], [3624, 7384, 0, 35270, 47933, 31568, 10782, 24118, 527, 94582, 20772, 30400, 125703, 69177, 50892, 2347, 75881, 58635, 27925, 46432, 10150, 10901, 15661, 569, 67902, 1327], [508, 9233, 0, 26015, 115277, 48878, 74623, 12536, 0, 35027, 39206, 13846, 100867, 92409, 82425, 0, 65237, 44261, 6655, 10944, 4101, 9744, 16555, 0, 79097, 825], [14122, 12011, 33884, 93989, 35697, 57220, 39385, 0, 68086, 32495, 70399, 44520, 133738, 101565, 48085, 40170, 15693, 13004, 29860, 21481, 11997, 618, 98399, 5773, 0], [13636, 13200, 62852, 89149, 48343, 15701, 49014, 143179, 37321, 90678, 109488, 84076, 97788, 593, 46443, 37560, 8884, 41663, 22416, 12030, 8990, 357, 108362, 19499, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

