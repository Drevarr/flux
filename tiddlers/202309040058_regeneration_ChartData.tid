created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Brazilian Hookah", "Kosair", "Danu Leon", "Reina Armitage", "Drevarr Moonwillow", "Flick Embermage", "Nose Llama"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Druid", "Druid", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 3.421, 0.0, 0.0, 0.0, 0.0, 0.0, 65.844, 0.0, 0.0, 0.0, 0.0, 0.0, 75.0196, 0.0, 20.6111, 41.6403, 12.3006, 31.5014, 57.783, 0.0, 0.0, 0.0, 3.4542, 1.9457, 3.1783, 4.5576, 15.2873, 13.6966, 0.0, 0.0, 20.8877, 26.8123, 0.0], [69.233, 79.5334, 31.1822, 277.8235, 18.9149, 20.592], [41.7011, 41.4792, 42.0117, 40.7507, 19.494, 68.161, 40.3248, 11.837, 13.722, 7.4166, 26.0002, 0.0, 0.0, 0.0, 128.3979, 9.8546, 3.9815, 27.8726, 15.334, 0.0, 0.0, 17.1989], [13.8013, 89.9688, 55.4922, 257.8111, 101.6515, 11.648, 219.3826, 317.4451, 102.6368], [59.0197, 33.894, 0.0, 180.0852, 41.104, 0.0, 0.0, 40.7966, 8.3864, 110.4193, 0.0, 610.3942, 269.3175, 151.1895, 8.5018, 212.0954, 33.8688, 0.0, 65.4899, 80.618, 60.3887], [0.0, 0.0, 0.0, 1.986, 0.0, 0.0, 0.0, 0.0, 3.8984, 0.0, 0.0, 0.0, 0.0, 8.7969, 0.0, 0.0, 1.9953, 0.0, 0.0, 0.0, 2.0045, 0.0, 7.9699, 0.0, 0.0, 0.0, 2.0038, 235.6766, 52.6473, 371.3353, 706.0154, 358.6075, 37.5066, 195.0893, 472.5024, 194.656], [125.6062, 99.5751, 136.962, 73.1531, 379.254, 242.648, 223.686, 113.9844, 231.8363, 26.0348, 95.1938, 99.2097, 915.4061, 193.1918, 195.5472, 254.6554, 277.2462, 219.744, 109.5696, 27.8272, 135.1584, 94.5688], [89.7695, 243.5214, 1068.3235, 197.358, 314.5177, 273.0067, 966.229, 359.2512, 235.5712, 82.9692, 57.6952, 104.3827, 120.2874, 72.2661, 915.9437, 52.2302, 41.1091, 32.7557, 120.5558, 19.815]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

