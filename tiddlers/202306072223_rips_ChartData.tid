created: 20230607222341000
creator: Drevarr
modified: 20230705163534433
modifier: drevarr
tags: ChartData
title: 202306072223_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Wh\u00f4o", "Ria Zerria", "Smol Gluvs", "Rozaalyna", "Zayde Sunsabre", "Be\u00eb", "Newtype Khan", "Grasszanine", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Scourge", "Scourge", "Reaper", "Reaper", "Spellbreaker", "Reaper", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.1111, 0.1429, 0.1081, 0.8462, 0.6625, 0.9237], [0.0146, 0.05, 0.0417, 0.0203, 0.6943], [0.0293, 0.03, 0.0904, 0.0, 0.2533, 0.726, 0.0, 0.3519, 0.2593, 0.3626, 0.0, 0.4103, 0.4, 0.5725], [0.0195, 0.02, 0.1005, 0.0541, 0.7511, 0.3151, 0.15, 0.5185, 0.5185, 0.4396, 0.0, 0.6154, 0.425], [0.0, 0.0, 0.1637, 0.027, 0.0655, 0.2329, 0.0, 0.4444, 0.1481, 0.8132, 0.8205, 0.475, 0.0], [0.0146, 0.03, 0.2356, 0.0405, 0.6463, 0.1644, 0.0, 0.6481, 0.4444, 0.7473, 0.0, 1.0256, 0.3625, 0.2443], [0.0927, 0.08, 0.2541, 0.0743, 0.7729, 0.4658, 0.05, 0.6481, 0.0741, 0.4725, 0.1081, 0.4615, 0.4375, 0.3435], [0.0341, 0.05, 0.2501, 0.0338, 0.7948, 0.9178, 0.0, 1.2593, 0.1852, 1.1538, 0.0, 1.0, 0.1375, 0.1374], [0.0341, 0.21, 0.1944, 0.0676, 1.0873, 1.0274, 0.05, 1.0741, 0.4444, 0.7473, 0.0, 1.3077, 0.525, 0.6412], [0.0341, 0.09, 0.5239, 0.0405, 1.0524, 1.2466, 0.2, 0.9259, 1.0, 1.0879, 0.2162, 2.0256, 1.0875, 0.9847]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

