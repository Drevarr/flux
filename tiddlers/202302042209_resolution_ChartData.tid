created: 20230204220933000
creator: Drevarr
modified: 20230705163518711
modifier: drevarr
tags: ChartData
title: 202302042209_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Belvyn Brightblade", "Aronorf Xideliesi", "Zaylen Harker", "Mac Arons", "Blanco Padre Guard", "Koralia Danai", "Sygaldry Verdandi", "Ravioli Fetabringer", "Johosh The Great"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[711.8857, 277.4453, 9.9552, 146.0768, 41.8391, 120.1425], [1554.5426, 294.6252, 169.4141, 407.2596, 126.3039, 919.1625], [1350.6213, 515.5942, 162.504, 458.1049, 673.6731, 737.9355, 218.7494, 82.5131, 35.1085, 906.0036, 714.4607], [1211.2682, 479.6546, 182.0045, 441.7085, 582.2876, 982.563, 181.1174, 0.0, 34.1285, 1068.5342, 951.2811], [1532.475, 488.5408, 149.2694, 553.0052, 419.6497, 882.975, 132.5184, 457.1171, 19.6367, 955.7352, 921.5714], [1570.889, 594.3847, 106.6963, 528.3278, 593.2979, 1076.0715, 119.9923, 691.2116, 36.7133, 1149.9384, 991.2749], [2407.8247, 948.8433, 179.135, 469.0358, 0.0, 1316.3565, 162.7853, 722.5824, 56.546, 1728.1026, 1553.4735], [2854.0814, 1026.4491, 298.0118, 707.6943, 819.4809, 762.8325, 265.0368, 687.3891, 59.045, 1710.3215, 1501.4815], [3028.1706, 669.0284, 172.3421, 882.2577, 762.0701, 1597.1715, 300.5722, 737.4769, 105.399, 1663.9239, 1450.6323], [2646.4822, 1136.2424, 276.5789, 906.9351, 950.0316, 1510.611, 227.6198, 738.3996, 37.4483, 1698.3748, 1826.8596]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

