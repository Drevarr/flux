created: 20230626012920000
creator: Drevarr
modified: 20230705163538623
modifier: drevarr
tags: ChartData
title: 202306260129_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Imalou", "Alarics Clone", "Sl\u00e4ngin", "Kosair", "Traidoruns Maximus", "Astraea Lumena"];
const professions = ["Berserker", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 19.8285, 6.6052, 6.0192, 15.7753, 39.9863], [5.7467, 5.702, 7.0006, 5.0764, 9.8842, 5.6977, 22.5903, 16.6167, 4.194, 5.8514, 5.6386, 0.0], [9.3085, 13.1722, 6.5518, 19.3749, 4.9196, 12.6086, 8.5143, 25.3403, 2.7966, 17.1232, 6.6204, 6.7053, 5.4092, 12.2482, 5.1122], [0.0, 35.2782, 0.0, 0.0, 9.947, 0.0, 0.0, 7.2313, 0.0, 17.1654, 0.0, 0.0, 0.0, 15.863, 11.371, 8.4353, 20.9763, 12.6131, 0.0, 9.5979, 8.3252, 10.713], [8.82, 18.8338, 30.123, 86.5725, 5.9126, 45.6994, 7.9164, 55.6941, 53.0817, 59.1924, 0.0, 7.116], [5.0123, 1.6074, 16.3885, 26.6713, 6.321, 31.4899, 22.2159, 19.1885, 27.3507, 53.0158, 27.36, 0.0, 21.3419, 10.812, 8.1518, 45.3542, 42.5799, 18.8614, 12.994, 34.0474, 6.4038, 19.662], [6.934, 38.0615, 4.6451, 76.6418, 0.0, 50.4029, 38.2367, 92.2965, 5.3284, 60.3322, 8.4312, 5.5986, 19.0172, 57.2506, 19.2984, 167.7238, 76.041]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

