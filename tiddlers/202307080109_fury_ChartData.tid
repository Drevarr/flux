created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Mistwalker Cael", "The Fancy Cheese", "Duke Silvver", "Pale Pam", "Pet Pirate", "Drumina", "Kary\u00edna", "Tribal S", "Xanvias Einzbern", "Melli Dragonswrath", "Johosh The Mighty", "Eibh\u00ebar", "Etchery Howls", "Black Raspberry Pie", "Zaedy Zae", "Ateriuz", "Arriasa", "Arcanophage Farra", "K\u00f4sair", "Mike The Archmagus", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Weaver", "Vindicator", "Scrapper", "Vindicator", "Druid", "Druid", "Druid", "Vindicator", "Druid", "Berserker", "Berserker", "Berserker", "Chronomancer", "Druid", "Chronomancer", "Druid", "Berserker", "Druid", "Spellbreaker", "Spellbreaker", "Weaver", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[40.9887, 48.504, 51.6474, 25.5571, 55.4112, 0.0, 48.8779, 55.1862, 19.5121, 42.2237, 29.48, 133.1275, 23.4511, 64.3815, 0.0, 10.011, 7.888, 21.5501, 62.031, 91.9425, 59.7798, 30.3966, 15.1158, 17.838, 0.0, 0.0, 27.8594, 39.8376, 43.4378, 56.3535, 134.408, 0.0], [104.5703, 79.242, 30.0424, 85.5331, 13.6032, 36.8843, 31.8427, 98.1045, 19.5121, 22.8614, 0.0, 155.4525, 0.0, 106.7895, 35.7586, 2.5695, 7.431, 11.224, 61.2973, 110.0619, 67.9714, 61.2495, 54.0408, 74.2887, 17.1091, 6.3661, 39.9924, 46.1736, 15.4785], [8.2606, 85.5855, 6.9864, 0.0, 0.0, 51.1814, 104.3855, 141.8157, 0.0, 63.4959, 30.0357, 6.8728, 27.888, 12.0809, 25.1546, 68.3496, 15.7233, 16.0965, 53.899, 616.4676, 30.7605, 129.5624, 164.143], [36.5237, 74.166, 44.2326, 67.369, 29.9208, 49.9005, 23.1941, 26.9352, 29.8356, 14.8522, 30.6592, 158.2725, 27.3596, 0.8123, 37.6675, 14.7829, 10.6624, 19.5859, 78.3058, 55.614, 52.8558, 30.5721, 31.9154, 32.2397, 11.5181, 18.5951, 26.0047, 21.7404, 31.936, 21.735, 137.0011, 12.516, 407.9565], [40.6761, 123.7416, 78.302, 125.9251, 50.3568, 35.685, 74.2123, 141.5259, 74.5349, 62.8819, 51.649, 358.845, 70.7512, 30.8976, 45.8837, 91.9246, 119.0595, 343.7304], [552.4033, 58.9771, 17.7341, 735.622, 601.6906], [35.72, 85.6152, 34.4529, 160.8826, 80.9016, 62.6535, 58.1381, 130.5738, 62.1575, 52.0992, 34.8159, 193.2875, 47.4566, 68.1863, 43.6109, 62.3018, 62.7341, 46.8041, 176.4215, 278.967, 133.0173, 96.5952, 114.9738, 6.3302, 32.9855, 44.5519], [87.9605, 127.9152, 57.3362, 61.9344, 51.324, 16.9065, 58.0944, 57.8565, 36.0514, 42.8976, 38.265, 152.045, 11.2543, 53.01, 20.2507, 10.7785, 0.0653, 25.703, 62.1644, 73.0158, 57.7318, 30.3264, 37.0454, 16.3698, 11.8944, 26.4713, 30.7574, 13.1472, 42.2754, 18.081, 52.9729, 5.978, 1064.3132], [103.1415, 79.0728, 56.7929, 96.0595, 12.7296, 74.997, 43.2869, 67.9959, 101.0194, 41.9645, 42.1269, 377.88, 11.088, 71.2643, 77.9722, 89.7653, 2.6656, 53.9313, 135.0675, 210.5259, 0.0, 41.8041, 99.1531, 139.3616, 20.9047, 77.5891, 64.3896, 44.6002, 53.7075, 176.2677, 36.372], [95.2385, 129.2688, 62.354, 68.544, 108.9816, 65.9588, 125.1432, 47.2914, 60.6981, 20.8397, 12.9712, 188.705, 6.0984, 118.7168, 25.6037, 0.0, 4.1344, 101.2405, 70.4352, 139.3938, 90.7911, 58.1607, 50.7905, 30.2403, 0.0, 55.1042, 69.2429, 124.74, 131.6594, 17.1675, 181.3304, 12.32, 1078.2139], [75.9497, 95.4288, 82.8084, 64.5293, 67.6416, 47.502, 80.4149, 82.2375, 104.857, 29.6525, 124.0518, 165.3225, 49.2307, 48.5213, 34.9714, 10.4448, 32.1504, 72.5632, 91.0455, 74.6304, 116.5852, 48.8943, 72.5243, 50.9524, 0.0, 45.5106, 27.9754, 22.2156, 70.8464, 4.851, 71.7419, 0.0, 916.8445, 93.7142, 32.5798, 226.1245, 252.9807], [83.7188, 130.0584, 57.9754, 68.3482, 62.6496, 34.0763, 31.3186, 80.7669, 2.0539, 9.7459, 0.0, 148.6375, 0.0, 121.4527, 46.5038, 39.3432, 31.8784, 79.6343, 79.8399, 124.3242, 38.813, 105.1596, 84.2723, 54.2951, 15.1469, 84.0924, 18.1222, 48.906, 48.5157, 2.205, 41.0571, 15.666, 1785.9429, 0.0, 39.4376], [53.8032, 108.6828, 63.153, 62.6198, 80.1216, 81.8123, 66.5246, 35.8892, 18.9216, 41.5373, 218.4325, 6.1538, 95.6318, 24.108, 0.1001, 56.3445, 78.1724, 139.035, 19.0164, 34.8192, 65.6713, 60.4806, 0.0, 21.4969, 57.419, 75.9924, 74.7008, 52.353, 48.2189, 48.09, 1099.3672, 62.1935, 355.4, 334.0498], [185.5208, 390.6264, 151.4584, 144.9706, 47.0808, 107.8155, 133.8792, 193.9257, 117.5587, 81.1296, 120.6911, 566.115, 96.6319, 203.3618, 29.7955, 131.2442, 37.7754, 99.7814, 239.2529, 391.8096, 248.7248, 175.0437, 215.8891, 16.9946, 49.5936, 138.101, 133.1148, 115.6716, 143.2224], [112.1608, 97.008, 77.8226, 110.6496, 40.5912, 53.3813, 77.7941, 33.9012, 62.4818, 35.4067, 34.4032, 259.205, 36.729, 121.923, 48.157, 51.0227, 26.2317, 56.0078, 117.0585, 131.1414, 63.0954, 72.4815, 28.1952, 69.634, 36.4896, 33.4001, 56.2212, 55.9152, 49.4946, 46.872, 119.7756, 58.044, 1633.6391, 64.5327, 4.0841, 506.4844, 396.0733], [78.4947, 79.2984, 79.7402, 185.9011, 133.4424, 52.0065, 94.043, 118.035, 68.2111, 28.4083, 54.1253, 232.0625, 11.2266, 120.726, 38.7499, 3.0033, 0.0, 37.2637, 127.7972, 207.6555, 95.1308, 57.5991, 71.7803, 16.6509, 0.0, 16.3151, 38.9491, 63.558, 23.9214, 37.4535, 110.2059, 14.014, 1616.7165, 87.3984, 16.6585, 619.9771, 389.8083], [55.7679, 49.2936, 91.6932, 61.4448, 54.9432, 38.3468, 92.1648, 66.7575, 46.0506, 51.8659, 152.7948, 245.9275, 18.3506, 106.875, 18.8338, 32.9028, 27.5699, 162.1307, 85.2426, 213.486, 54.9525, 72.2358, 33.4035, 43.7985, 32.2829, 9.4752, 48.2227, 127.908, 118.3833, 61.236, 203.1246, 44.772, 1778.6903, 77.9538, 529.7282, 237.1929], [49.4722, 79.4112, 29.2434, 50.5757, 63.804, 93.2783, 32.7163, 28.4445, 56.7525, 6.8947, 51.7079, 150.4, 12.6958, 43.3912, 22.3171, 40.7114, 0.0, 53.6507, 50.9588, 172.8519, 80.3077, 30.3966, 51.9653, 26.8352, 0.0, 13.8575, 19.0495, 52.8264, 69.3169, 74.907, 80.3237, 22.638, 2261.59, 0.731, 10.505, 798.4662, 605.199], [26.4328, 162.6012, 113.5539, 195.1056, 77.6568, 74.1195, 69.3638, 109.7145, 143.9351, 105.5722, 136.6693, 339.6925, 84.5183, 114.6555, 32.1571, 141.2886, 159.6053, 229.1145, 188.1906, 184.9467, 85.9248, 159.6553, 88.2842, 67.8586, 77.2525, 134.0422, 81.5364, 144.8742, 172.0215, 174.292, 10.878, 1726.7137], [155.4713, 275.6832, 74.8184, 206.7581, 185.64, 78.975, 150.7834, 104.9931, 223.5508, 101.1139, 71.0173, 276.9475, 14.2204, 178.3958, 23.4782, 64.7378, 112.0155, 165.6161, 338.9763, 98.4464, 56.8269, 92.5742, 143.1104, 59.3242, 29.7877, 87.4423, 148.3416, 225.8766, 148.617, 137.8037, 72.282, 1368.9207, 128.1589, 648.0992, 524.2552], [124.4395, 272.6376, 99.6513, 224.7264, 102.7104, 82.7482, 187.9987, 107.199, 64.6979, 76.4122, 115.4437, 391.275, 38.2259, 179.9347, 43.1189, 80.722, 36.1434, 128.2903, 189.8282, 405.8028, 116.4389, 166.7601, 161.2609, 102.3735, 54.647, 108.0469, 122.8366, 92.2284, 169.7133, 89.019, 221.8936, 74.984, 2337.1375, 126.2876, 94.2664], [131.5836, 200.6148, 80.2835, 50.6246, 150.8832, 136.3928, 177.9086, 124.4205, 99.1817, 82.8922, 35.5234, 163.09, 52.7512, 154.1138, 34.6762, 92.2681, 54.041, 113.0257, 176.3548, 248.3793, 151.7899, 71.2881, 7.9495, 40.7682, 33.0355, 80.8057, 119.243, 52.1136, 132.7606, 85.1445, 75.508, 16.072, 2775.9173, 136.9017, 8.8943, 1005.5078, 759.9445], [176.1442, 206.2548, 109.3991, 290.1859, 113.2248, 188.6625, 93.781, 61.8813, 156.745, 60.8083, 17.3048, 531.9225, 87.2626, 239.6565, 141.7354, 80.1214, 170.212, 204.7023, 459.8919, 168.027, 164.3031, 161.9266, 100.9677, 135.0512, 131.5306, 50.2524, 120.0963, 159.4215, 338.8909, 0.0, 4310.4382, 124.9133, 55.5118, 1354.0208, 1122.1868]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

