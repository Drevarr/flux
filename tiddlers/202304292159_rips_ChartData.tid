created: 20230429215910000
creator: Drevarr
modified: 20230705163527518
modifier: drevarr
tags: ChartData
title: 202304292159_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Madame Charrlotte", "Necrotic Windrunner", "Morv\u00e4rth", "Venomina The Fierce", "Oo Dads Mad", "Newtype Khan", "Smol Gluvs", "Ria Zerria", "Be\u00eb"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Reaper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.375, 0.1, 0.0304, 0.1618, 0.0778, 0.0133, 0.0, 0.0, 0.4103, 0.0, 0.0, 0.1304, 0.1014], [0.137, 0.1434, 0.1724, 0.1479, 0.0267, 0.009, 0.0], [0.0, 0.0066, 0.25, 0.1286, 0.0989, 0.1103, 0.2414, 0.2257, 0.0, 0.0, 0.0226, 0.1538, 0.2069, 0.0, 0.0, 0.1377], [0.0, 0.3651, 0.0, 0.0066, 0.5833, 0.2643, 0.0533, 0.4138, 0.1984, 0.0, 0.0, 0.0, 0.5513, 0.0, 0.0, 0.6087, 0.058], [0.0, 0.0, 0.2917, 0.1357, 0.1476, 0.1691, 0.6207, 0.2023, 0.0, 0.0, 0.0, 0.2051, 0.0, 0.0, 0.1739, 0.058], [0.0762, 0.0, 0.037, 0.254, 0.0, 0.0, 0.4375, 0.2286, 0.14, 0.1949, 0.3448, 0.3113], [0.0, 0.0208, 0.037, 0.7619, 0.0159, 0.0, 0.2708, 0.2, 0.1339, 0.0846, 0.0, 0.179, 0.0, 0.0, 0.0317, 0.5, 0.0345, 0.0, 0.087, 0.1159], [0.1111, 0.4127, 0.0317, 0.0066, 0.5, 0.2929, 0.1629, 0.25, 0.1724, 0.2607, 0.0, 0.0, 0.0045, 0.6154, 0.0862, 0.2424, 0.3478, 0.2899], [0.1111, 0.5397, 0.0635, 0.0132, 0.8542, 0.2, 0.2146, 0.3015, 0.4828, 0.2996, 0.0133, 0.0, 0.0136, 0.3077, 0.1379, 0.0303, 0.1957, 0.1884], [0.0741, 0.9206, 0.0476, 0.0263, 0.8333, 0.4714, 0.3501, 0.3787, 0.1724, 0.3268, 0.0, 0.009, 0.6667, 0.1034, 0.0, 0.1957, 0.1594]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

