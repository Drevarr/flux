created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Rozaalyna", "Morv\u00e4rth", "Necrotic Windrunner", "Rahani Sunray", "Grasszanine", "Ryvalia Fazebringer", "Venomina", "Daphne Agla\u00e9", "Elonith Requiem", "Arcanophage Farra", "Rina Of Theros", "Glass Tingle", "Newtype Khan", "Morton Saltbringer", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Firebrand", "Reaper", "Reaper", "Reaper", "Chronomancer", "Spellbreaker", "Chronomancer", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Reaper", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.0, 4.0, 3.4253, 1.0635, 2.0806, 2.0, 0.0, 1.0, 0.0, 0.0, 3.0037, 1.0072, 0.0, 1.0, 0.0, 0.0], [0.0, 4.009, 8.0, 11.4921, 12.9355, 0.0043, 0.0, 3.0126, 0.0, 0.0, 0.9963, 0.0, 0.0, 0.0, 0.0, 0.0], [8.2317, 0.0, 1.0343, 0.9737, 0.0], [5.9524, 12.9677, 2.0478, 0.0, 0.0, 0.0, 6.4154, 1.9963, 8.3626, 0.0455, 0.0, 2.9737, 0.0], [0.0, 4.8125, 4.0385, 6.5131, 10.636, 0.9935, 1.0], [0.0, 18.9279, 24.8966, 14.3968, 16.1855, 10.0609, 2.0, 4.0031, 4.9062, 0.0, 8.8015], [0.0, 9.2162, 8.023, 4.4286, 5.1371, 6.0348, 2.0971, 5.0063, 0.0, 4.0308, 3.0262, 9.1899, 3.987, 1.0, 2.0789, 1.0], [0.0, 19.1622, 14.1954, 15.5873, 12.75, 9.2739, 0.0, 0.0, 0.9688, 1.0, 6.3221, 7.2921, 0.0, 0.0, 0.0, 0.0], [0.0, 15.4955, 19.6207, 9.0794, 12.0726, 4.7261, 2.0, 6.2987, 0.0, 0.0, 2.0075, 8.3065, 0.0], [3.2874, 24.3492, 21.371, 13.0609, 2.0, 7.5881, 0.0, 0.0, 7.1011, 9.4058, 0.0, 2.0, 0.0], [0.0, 27.7477, 20.5862, 31.6349, 8.3871, 8.7826, 2.0, 4.2421, 3.0625, 0.0, 3.0562, 10.6259, 4.6883, 0.0, 0.0], [2.0, 12.1351, 21.2414, 9.0952, 14.371, 11.3087, 2.0971, 8.7799, 0.0, 1.0, 9.6105, 9.3468, 2.9026, 1.4592, 0.0, 1.0], [0.0, 28.8559, 29.8851, 30.8413, 11.7419, 10.3043, 3.5437, 8.0472, 0.9688, 0.0, 10.0824, 9.554, 3.0844, 0.0, 1.0789, 0.0], [26.1622, 22.3448, 20.746, 24.5, 13.0435, 3.0097, 7.5566, 0.0, 2.0077, 11.1798, 10.4345, 2.0065, 0.0, 1.9737, 3.0164], [1.1154, 29.1532, 30.4138, 40.381, 18.3548, 14.5087, 4.0485, 7.9151, 0.9963, 11.0403, 3.987, 4.2961, 2.9737, 0.0], [32.7117, 25.5977, 55.4762, 30.2581, 14.8696, 7.6602, 14.4308, 4.375, 2.0, 10.5805, 11.4029, 6.8247, 1.309, 2.3684, 0.0], [3.0, 54.2613, 47.9425, 53.4921, 44.1613, 16.0217, 2.835, 11.066, 6.9688, 2.2692, 10.4607, 11.5468, 7.5779, 0.0, 1.9737, 2.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

