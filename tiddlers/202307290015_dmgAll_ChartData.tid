created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Yafreisy", "Sub Train", "Solus Sanctus", "Newtype Khan", "Readnull", "Aronorf Xideliesi", "Kisumaiasu", "Cedryn X", "Luke The Ghastly", "Kosa\u00edr", "Name Is What", "King Jamls", "Daphne Agla\u00e9", "Indigo Shadowviper", "Grasszanine", "Yafreisy", "Arcanophage Farra", "Kisumaiasu", "Glorious Gluvs", "Itty Bitty Mew", "Readnull", "Rozaalyna", "Cerys Fireblade", "Asheena Feres", "Vee Usagi", "Brutal Araden", "Primal Clone", "Johosh The Mighty", "Rina Of Theros", "Jimbo The Pleb", "Mike The Archmagus", "Mort\u00e4rion", "Morton Saltbringer", "\u00c1rk\u00e1ntor", "Blancoo Padre", "Be\u00eb", "Lord Erin The Wise", "Kosa\u00edr", "Mistwalker Cael", "Xanvias Einzbern", "Keypek The Drunk"];
const professions = ["Catalyst", "Firebrand", "Firebrand", "Spellbreaker", "Dragonhunter", "Firebrand", "Scourge", "Berserker", "Scourge", "Holosmith", "Scourge", "Virtuoso", "Scourge", "Daredevil", "Spellbreaker", "Weaver", "Spellbreaker", "Reaper", "Berserker", "Catalyst", "Willbender", "Scourge", "Berserker", "Virtuoso", "Scourge", "Renegade", "Chronomancer", "Berserker", "Scourge", "Berserker", "Weaver", "Scrapper", "Chronomancer", "Scourge", "Scrapper", "Scourge", "Weaver", "Scrapper", "Vindicator", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[958.9787], [334.1667, 14.2252, 61.1488, 34.6374, 91.305, 54.75, 407.7903, 37.051, 156.0424, 47.1713, 62.2992, 120.3099, 81.44, 77.2222, 46.2319, 125.5332, 82.2857, 63.2323, 103.9155], [115.4889, 7.7658, 105.281, 21.0659, 127.5825, 299.9886, 187.6371, 41.4522, 106.5508, 35.8148, 93.25, 78.189, 99.3239, 0.32, 0.0, 91.087, 99.3246, 53.7041, 68.9605, 127.4031], [70.8714, 261.7887, 624.28, 0.0, 48.2899, 345.8341, 325.7653, 121.7133, 175.6206], [624.4778, 47.982, 571.8595, 356.978, 810.515], [149.1111, 3.7297, 84.5785, 195.8681, 154.48, 15.8636, 227.3226, 33.7898, 135.1949, 100.037, 32.6944, 126.2913, 78.3099, 43.2, 0.0, 18.7536, 155.0616, 48.9286, 82.7644, 171.633], [68.5486, 111.0704, 400.04, 2.6, 207.8406, 410.545, 170.602, 205.2323, 154.9753], [963.1, 113.5045, 169.2149, 153.5165, 499.5625, 7.6705, 1319.8629, 167.4841, 899.3814, 17.6713], [760.1667, 140.0901, 292.3223, 143.6923, 205.3825, 634.1818, 992.6855, 377.172, 656.4322, 98.1481, 199.1019, 364.9055, 199.2113, 684.72, 42.3556, 109.6087], [1441.0889, 90.8018, 473.9752, 123.4396, 630.8625, 0.0, 824.7823, 147.6051, 1521.9237], [1024.5111, 34.6396, 280.9669, 99.9231, 305.5775, 102.4659, 1205.8306, 112.2038, 569.7542, 53.037, 114.5, 137.3888, 307.2557], [666.3444, 171.4324, 367.4959, 140.4505, 764.6375, 729.4318, 1063.371, 231.9108, 647.1102, 127.0, 238.9028, 411.2992], [692.6667, 152.6757, 206.1736, 207.5714, 246.3325, 57.7045, 1186.8629, 159.828, 474.6102, 323.0324, 211.0472, 250.8028, 496.32, 34.9111, 173.3043, 631.4953, 123.6224, 93.4267], [131.9296, 125.44, 147.6667, 141.5507, 1371.2796, 123.6429, 183.1598, 327.9722], [398.9889, 88.2072, 255.8843, 63.5165, 102.995, 201.5227, 1003.6048, 203.8217, 576.4831, 0.0, 254.3009, 257.2467, 198.4789, 0.0, 45.8841, 256.4076, 187.8061, 173.9176, 291.7165], [377.2887, 366.6901, 18.2, 0.0, 115.7971, 258.4898, 467.9259, 802.7825], [399.0444, 174.9189, 1231.0579, 64.4945, 275.11, 340.3409, 610.8629, 180.5924, 636.7034, 0.0, 193.037, 265.1286, 297.831, 341.4, 0.0, 114.7681, 350.6256, 258.1837, 146.5025, 318.2959], [1288.6222, 324.955, 583.2149, 147.8132, 703.87, 640.9545, 3557.3145, 331.9108, 1395.7542, 580.3472], [365.3, 61.7748, 333.719, 73.4066, 288.1925, 454.625, 1084.0645, 288.4968, 587.5508, 187.463, 439.1155, 391.0845, 416.84, 0.0, 53.5652, 369.1777, 210.3061, 280.0362, 330.1237], [2541.2444, 39.018, 996.1322, 1328.022, 868.9575, 334.8523, 2170.7984, 529.7643, 2030.9322, 318.213], [1176.8295, 1157.8387, 9.4968, 173.0, 318.9167, 236.5249, 721.4085, 262.0, 6.4889, 98.2029, 888.2441, 221.5102, 313.9209, 463.1206], [772.3667, 317.1081, 175.0992, 212.8681, 764.2725, 483.0114, 2066.4516, 155.2484, 661.822, 47.7407, 523.5185, 560.9318, 414.0, 705.56, 0.0, 0.0, 410.6019, 231.6531, 254.1433], [838.2, 801.009, 663.0165, 161.7143, 755.3325, 1002.7727, 3605.2661, 410.4459, 1441.6102, 834.8889, 778.252], [0.0, 141.991, 369.0083, 119.3956, 529.5025, 510.3182, 1149.1694, 703.3376, 635.8983, 502.7778, 417.4769, 96.8688, 776.6901, 70.32, 95.4222, 659.2654, 354.7245, 343.4201, 534.7753], [1213.7333, 65.5676, 1354.8678, 159.1648, 352.47, 841.9545, 1754.2581, 198.9427, 504.9492, 0.0, 268.0509, 218.8504, 387.8592, 940.08, 74.6222, 283.4928, 769.3436, 292.7653, 391.0906, 331.8227], [353.2889, 190.0, 516.7355, 222.2418, 331.4925, 665.6023, 2690.6613, 215.7834, 252.5932, 82.4815, 319.1574, 370.6535, 269.9437, 330.04, 217.3333, 62.7971, 931.2654, 490.3673, 353.7381, 448.2577], [656.7444, 304.4324, 1034.1818, 206.044, 401.375, 497.3523, 1398.2419, 168.2611, 609.0508, 171.6667, 474.3241, 451.1759, 239.338, 492.12, 163.0667, 228.3478, 1003.2417, 273.1735, 429.402, 552.5969], [2601.0667, 443.2523, 1274.2727, 612.8462, 1897.9725, 1173.4773, 2959.5242, 187.5669, 3262.1017, 177.3333, 1189.2269, 802.9055], [957.6111, 504.2432, 519.0331, 281.0, 622.765, 661.4659, 1815.6855, 322.2739, 750.161, 172.7037, 482.1065, 624.9869, 658.4366, 387.4, 100.0, 278.2464, 1012.6635, 652.5, 433.5107, 651.6144], [717.1556, 127.6937, 385.7769, 977.3736, 865.18, 621.9205, 1328.7661, 474.8153, 1265.2203, 53.2963, 571.8056, 600.7192, 430.493, 619.64, 5.0222, 75.3478, 1139.2986, 166.0612, 544.8254, 566.7464], [1547.9333, 666.4955, 1315.8264, 1824.978, 1631.2, 633.375, 3860.7984, 910.3439, 1880.5339, 111.2222, 751.6991, 1038.2835, 1901.5493, 2204.92, 1978.0889, 295.2899], [1313.8333, 804.027, 1765.2645, 363.4505, 877.0475, 0.0, 4101.0806, 604.7325, 1500.6186, 665.2639, 528.2047, 323.4507, 1953.04, 1680.0, 9.3043, 2113.8697, 727.4592], [758.2556, 254.4234, 720.3471, 279.3187, 1409.025, 136.3758, 1014.0169, 191.0741, 892.7778, 690.8215, 0.0, 46.7778, 523.058, 1344.6256, 521.0714, 576.598, 828.0392], [1343.2889, 346.009, 535.6116, 775.8022, 952.78, 387.25, 2239.0726, 451.4268, 1571.8305, 77.1852, 692.0972, 813.6299, 618.662, 2557.52, 20.8667, 408.8261, 1137.41, 262.4694, 538.939, 1060.1237], [1678.5556, 200.2072, 896.1653, 468.6813, 1016.2425, 887.1932, 3247.7177, 391.051, 1612.8814, 280.4444, 649.4722, 832.3648, 1002.7887, 872.44, 132.4, 423.2899, 1705.8863, 465.9796, 542.687, 795.9443], [3138.7333, 509.6396, 913.1736, 766.8462, 309.7325, 298.5227, 1451.3468, 425.8089, 1417.1186, 829.1574, 1158.0394, 1523.5352, 2045.56, 620.8444, 706.5072, 1629.5664, 942.6531, 911.8567, 879.4423], [1435.5556, 42.5405, 2581.9669, 936.8242, 1389.5475, 124.2386, 2963.6452, 855.1656, 1685.9831, 140.2593, 956.1944, 1029.6772, 1636.0704, 854.2, 1851.4222, 366.1304, 1437.1043, 3011.5102, 616.2241, 368.0711], [730.0926, 1517.0971, 1193.8873, 1753.0, 1680.7556, 472.2174, 2155.3886, 609.1633, 1601.2405, 2471.6701], [2609.1778, 479.5586, 1203.0909, 576.3846, 1110.2725, 1638.9318, 7255.4597, 589.3312, 2104.8475, 104.5926, 974.1157, 1283.2388, 1328.0845, 1192.68, 708.3778, 415.4928, 2744.09, 832.2449, 1066.771, 1482.1278], [2187.8556, 710.3243, 916.8182, 1005.7692, 1417.7475, 1003.0114, 4939.2823, 372.4841, 3132.3475, 275.963, 1737.8704, 1662.4751, 596.8592, 881.24, 0.0, 726.3913, 2197.3318, 1343.0918, 1030.9852, 1930.6825], [3190.1778, 905.5676, 2210.876, 324.3297, 1826.57, 2195.6136, 5026.6532, 672.1529, 2518.4153, 1473.6435, 1345.5696, 854.1408, 1679.0, 78.0222, 552.3768, 2459.7441, 1820.5408, 1016.9703, 1837.0608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

