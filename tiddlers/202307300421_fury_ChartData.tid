created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Aloepenny", "Zefirokai", "Ijahmon", "Avatar Shazbott", "Whip \u00d1 Sl\u00e0pper", "Kosa\u00edr", "Jade Quufu", "Ax Axun", "Newtype Khan", "Raziel Umbra", "N\u00eec\u00f4le", "Marshall R", "Big Boy Belkins", "Astraea Lumena", "Scarlet Merc\u00fcry", "Loganlek", "Kosa\u00efr", "Sister Elonith", "Govinda Ektar", "Free H\u00e4nd", "Abserns Sorcerer", "Jimbo The Pleb", "Vee Nemesis", "Drevarr Moonwillow"];
const professions = ["Harbinger", "Catalyst", "Firebrand", "Tempest", "Tempest", "Scrapper", "Firebrand", "Vindicator", "Spellbreaker", "Chronomancer", "Spellbreaker", "Herald", "Holosmith", "Firebrand", "Firebrand", "Spellbreaker", "Weaver", "Berserker", "Vindicator", "Herald", "Weaver", "Berserker", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 96.5756, 91.7909, 0.0, 131.6561], [226.7427, 158.8875], [31.5795, 186.263, 184.3198], [38.1595, 25.0978, 28.9591, 0.0, 33.04, 0.0, 0.0, 39.7035, 41.5302, 45.4305, 7.3471, 47.6633, 18.5955, 29.2392, 47.7284, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 35.4176, 30.3276, 7.0081, 27.4744, 3.0738, 82.8826, 0.0, 35.3266, 0.0, 22.7157, 0.0, 28.2003, 28.215, 0.0, 0.0, 0.0, 21.9506, 28.2495, 13.6038, 0.0, 61.4008, 0.0, 0.0, 0.0], [164.9932, 0.0, 35.7655, 0.0, 36.6544, 0.0, 71.9955, 40.0995, 33.2321, 89.9325], [0.0, 0.0, 117.9576, 0.0, 76.9415, 146.4274, 153.5934, 0.0, 0.0, 41.5925, 0.0, 0.0], [10.3142, 14.0201, 252.3802, 36.3854, 65.7924, 9.0607, 24.0408, 23.872, 16.56, 66.6927, 25.9578], [270.9722, 109.9178, 216.0114], [6.3027, 30.7761, 353.9063, 76.2489, 76.4395, 2.0752, 9.7171, 88.32, 34.704], [40.0959, 419.7547, 85.0395, 224.4005], [52.6592, 138.208, 58.776, 109.6423, 104.1318, 97.641, 310.9603], [168.3618, 0.0, 19.6747, 38.0101, 26.7155, 7.344, 24.8101, 63.1275, 42.9689, 32.0775, 47.6237, 62.0129, 10.654, 76.1645, 192.8066, 82.0137], [16.1638, 0.0, 24.7269, 0.0, 27.2481, 0.0, 0.0, 77.5489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.9438, 0.0, 40.527, 56.0963, 69.732, 142.0754, 0.0, 32.634, 116.5794, 103.3035, 0.0, 140.5033, 0.0, 54.398, 23.2047], [120.8412, 49.984, 0.0, 55.9018, 0.0, 13.1686, 0.0, 0.0, 61.4075, 0.0, 0.0, 0.0, 0.0, 0.0, 77.913, 0.0, 29.0255, 65.4937, 45.9389, 133.7782, 0.0, 129.204, 169.9614, 40.5082], [38.4295, 78.5951, 364.7647, 143.6562, 163.5, 35.5118, 141.168, 58.488], [242.6852, 62.7827, 103.6198, 4.3243, 10.7453, 59.312, 23.844, 0.0, 56.8395, 44.4828, 49.416, 127.9212, 37.5791, 45.6159, 124.0476, 45.7882, 19.8899, 82.9275, 69.8015, 44.4395, 62.3466, 26.0383], [40.8595, 82.7793, 22.8659, 359.8129, 16.3447, 155.0934, 20.2589, 104.8709, 43.0061, 32.4648, 142.0494, 102.144, 135.8732, 213.0712, 81.1325], [217.6334, 29.7352, 90.252, 59.696, 12.372, 0.0, 46.4814, 37.5744, 13.7043, 111.1942, 47.5089, 105.9564, 41.9237, 66.7251, 10.4103, 34.4089, 29.4492, 27.336, 10.8108, 48.7844, 21.8224, 70.5976, 0.0, 90.919, 91.542, 46.642, 59.8237, 80.5522, 57.3998, 45.584, 164.9102, 72.3853, 144.2266, 72.9298], [53.6495, 124.5825, 261.2714, 120.274, 146.9455, 502.7092, 423.3793, 123.8636, 292.6989, 146.4638, 191.4184], [26.8242, 43.499, 135.9943, 20.0861, 140.0355, 113.0256, 35.7069, 35.5305, 93.7677, 85.7711, 39.468, 41.3995, 5.3592, 257.2097, 17.0905, 84.5498, 37.2427, 49.7416, 32.8806, 6.9466, 86.5734, 95.3895, 44.077, 64.3388, 108.1829, 124.2734, 12.047, 97.1065, 213.4706, 125.7441, 16.1076, 141.0585, 81.552, 49.0081, 108.085], [0.0, 89.7804, 64.4784, 60.2011, 138.0271, 79.4388, 141.7053, 172.3841, 48.745, 36.9917, 54.2197, 118.6103, 82.7816, 135.9282, 21.5169, 414.6234, 0.3563, 160.5789, 25.2236, 87.6995, 9.1853, 48.1637, 166.0582, 118.902, 37.0591, 143.1412, 79.1856, 162.8806], [34.8639, 97.0807, 34.9346, 78.2529, 159.9192, 95.4483, 46.2956, 93.9359, 80.9782, 37.5705, 67.8454, 26.1369, 114.4636, 197.3317, 34.9826, 83.1459, 38.4912, 154.7472, 146.376, 32.9756, 44.4675, 76.9766, 150.7442, 36.89, 103.896, 212.38, 48.6788, 40.0334, 139.001, 31.8598, 35.0771, 138.1697], [523.6851, 67.1016, 113.5867, 35.0708, 203.4648, 123.28, 33.996, 0.0, 247.7988, 99.0318, 65.515, 253.7806, 156.7681, 258.2118, 313.3454, 172.6912, 189.8938, 223.4763, 114.8011, 89.1698, 167.2597, 33.9478, 664.9555, 55.7223, 349.2435, 37.5168, 243.685, 52.7256, 299.3855, 276.7635]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

