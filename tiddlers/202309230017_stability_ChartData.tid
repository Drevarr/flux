created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Sly", "Arriasa", "Leafzely", "Zaedy Zae", "Jimbo The Pleb", "Halfpint The Drunk", "Oo Dads Mad", "Arcanophage Farra", "Budget Chicken", "Deborah Draconnum", "Mimbsi", "Grasszanine", "Inquisitor Stryker", "Klavde\u00efa", "No Reserv\u00e9", "Mistwalker Cael", "Air One Com", "Ryvalia Fazebringer", "Gamora Titus", "Gavann", "Sub Train", "Bella Sassy", "Koralia Danai"];
const professions = ["Druid", "Druid", "Scrapper", "Druid", "Berserker", "Berserker", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Vindicator", "Herald", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2.359, 0.0, 1.2662, 1.3862, 0.0, 0.8026, 0.6188, 0.0, 0.0, 0.928, 0.0, 0.9072, 0.7207, 0.6401, 0.7535, 1.1411, 0.7369, 1.0819, 0.0, 0.8064, 0.6541, 0.0, 0.7258, 0.0, 0.0], [0.0, 3.9809, 0.0, 1.447, 1.213, 0.7387, 0.7262, 0.714, 0.7448, 0.512, 0.0, 0.5376, 0.5405, 0.0, 3.7867, 0.6734, 0.7296, 0.6541, 0.7673], [0.0, 3.8334, 0.0, 2.1706, 1.9061, 0.0, 0.985, 0.2293, 1.666, 0.0, 0.7208, 0.576, 0.0, 0.0, 1.0039, 0.0, 0.0, 1.6678, 1.0235, 5.049, 1.0248, 0.8064, 1.003, 0.8996, 1.2442, 0.9235, 0.0], [0.0, 4.4232, 0.7666, 2.4419, 1.1552, 0.0, 0.8618, 1.1848, 1.428, 0.0, 0.0, 0.8, 0.0, 0.7392, 0.7979, 0.8534, 0.9828, 2.1945, 0.8188, 3.0654, 0.7027, 0.768, 1.2211, 0.4498, 0.7258, 0.817], [1.0656, 5.3078, 0.0, 1.447, 2.5992, 0.0, 0.0, 0.8791, 1.6184, 1.064, 1.0955, 1.056, 0.0, 0.0, 1.7503, 0.0, 0.0, 2.1067, 1.2691, 5.049, 0.0, 0.9984, 1.3083, 0.8467, 1.1405, 0.0, 0.528], [1.0156, 4.4232, 0.0, 4.522, 2.7725, 0.0, 0.9234, 1.7581, 1.9992, 0.5719, 0.0, 0.96, 0.0, 0.9524, 0.0, 0.9828, 2.6334, 0.0, 4.3277, 0.0, 0.8832, 0.9158, 0.9526, 1.0022, 0.9235, 0.0], [1.3653, 8.699, 1.2321, 4.3411, 2.1949, 1.1081, 0.9173, 0.714, 0.0, 0.0, 1.728, 0.0, 1.2096, 2.4196, 3.7338, 1.1794, 4.7401], [0.0, 2.6539, 0.0, 3.2558, 3.4656, 0.0, 2.5547, 0.0, 4.7124, 3.328, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1945, 0.0, 10.0979, 0.0, 2.2272, 0.9594, 3.4927, 1.4861, 3.623, 0.0], [4.3012, 2.2926, 15.1469, 4.8019, 7.2192, 5.364, 5.0539, 5.5642, 5.0438, 0.0], [4.7081, 19.8352, 2.8987, 6.9888, 7.1084, 3.0958, 7.2922, 4.369], [1.666, 0.0, 2.976, 0.0, 4.1328, 4.4015, 7.7343, 1.1466, 6.3202, 2.9067, 8.1144, 0.0, 3.84, 3.9685, 5.292, 4.1818, 2.593], [2.5474, 8.1092, 1.6017, 5.0646, 4.5053, 0.4617, 1.7581, 0.8568, 0.0, 3.008, 3.5952, 4.3501, 3.6271, 1.0483, 3.9501, 1.4329, 4.8686, 0.0, 1.2288, 3.2708, 1.7993, 3.456, 1.8826, 0.0], [0.0, 11.5003, 0.0, 4.3411, 8.3752, 1.3851, 2.1021, 1.9992, 0.0, 0.0, 4.832, 0.7728, 2.2403, 3.6691, 8.6902, 2.2926, 6.4915, 0.0, 1.8048, 2.5294, 2.0639, 2.3846, 3.1968], [4.166, 5.2836, 1.197, 0.0, 9.152, 4.9056, 3.1918, 9.2278, 3.1777, 10.9725, 1.2282, 12.8027, 0.0, 3.3024, 6.3671, 1.9316, 3.3523], [0.0, 11.2054, 0.3422, 12.2998, 10.5123, 1.1081, 0.0, 12.3284, 2.5004, 0.0, 1.44, 0.0, 1.8144, 0.8237, 0.8534, 2.1949, 4.5646, 1.0235, 8.6554, 0.0, 4.7232, 2.7038, 1.6405, 1.3478, 0.4262, 0.0], [0.0, 18.7249, 2.9023, 8.5014, 9.6459, 0.0, 1.6313, 1.5288, 0.0, 0.0, 0.0, 5.28, 0.0, 2.0496, 3.8867, 5.5474, 1.2776, 9.1291, 1.0644, 8.8357, 1.7275, 5.4528, 3.1835, 1.2172, 4.1472, 0.2131, 0.4224], [0.0, 20.1993, 1.5059, 10.2197, 10.9744, 0.0, 3.1703, 3.9749, 6.0452, 0.346, 5.12, 0.0, 1.1424, 3.7066, 6.4008, 2.0639, 9.3925, 2.1289, 12.8027, 2.4595, 3.648, 3.0527, 3.7309, 3.8362, 2.593, 0.0], [1.9147, 11.9426, 0.0, 12.2094, 4.5053, 0.0, 2.8625, 2.6754, 8.1396, 2.7531, 3.648, 0.0, 0.0, 3.9382, 10.7213, 2.7518, 6.7591, 1.8423, 19.1139, 0.0, 4.5312, 8.7656, 6.3769, 1.9354, 2.4864, 0.0], [2.2977, 12.6798, 1.9029, 10.6719, 10.7434, 0.0, 2.4624, 1.911, 5.1884, 0.0, 0.0, 7.072, 0.0, 4.6032, 8.0824, 10.1346, 4.1605, 9.3047, 1.1054, 10.8192, 3.4258, 3.7632, 5.6257, 3.8367, 5.184, 4.8307], [3.1801, 38.0395, 3.5731, 11.5763, 7.6243, 3.7552, 2.0257, 6.3784, 7.776, 2.8224, 3.4234, 10.4013, 2.9156, 11.3236, 2.6611, 12.2618, 0.0586, 2.2656, 4.9715, 0.0, 1.6934], [2.3643, 19.0198, 2.3957, 10.0388, 11.2632, 2.9241, 1.8346, 8.6632, 0.0, 0.0, 5.536, 0.0, 6.1152, 9.8842, 14.4018, 6.5192, 14.4837, 4.9537, 18.7533, 3.6307, 7.9104, 6.2362, 1.6141, 9.9187, 5.2214, 0.0], [7.9254, 31.847, 3.8743, 13.8373, 16.6926, 2.4288, 7.141, 8.4848, 11.8524, 0.1862, 0.0, 9.472, 0.1505, 8.2992, 7.3874, 10.5613, 5.3399, 13.4303, 7.2054, 31.3757, 4.8312, 8.5632, 6.2798, 7.7792, 9.0893, 8.4182, 0.1901], [4.1791, 38.0395, 3.6279, 21.0725, 17.2702, 0.0, 7.2949, 7.2618, 10.71, 1.9893, 8.224, 0.4831, 7.6944, 9.3951, 9.9746, 6.6175, 18.0827, 5.2813, 38.5885, 7.0858, 10.0608, 12.1236, 8.1497, 10.5062, 8.3472]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

