created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Sub Train", "Gabe Malhorn", "Rafaellagabriela", "Sygaldry Verdandi", "Konoko K", "Tegan Parker", "Elementsofmathus", "Crusader Siolith", "Kosa\u00efr", "My Birthday Girl", "Tribal S", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Tempest", "Scrapper", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 87.5147, 85.2984, 38.1634, 53.4851, 33.8175, 22.752, 10.9525, 91.4803, 14.9798, 25.382, 14.2579, 52.2792, 75.7944, 90.7958, 9.4464, 43.1789, 31.125, 9.6444, 3.645, 34.8576, 6.555, 15.815, 57.8565, 9.5071, 63.5052, 2.0862, 22.2815], [3.7918, 19.7661, 20.5524, 23.6676, 126.0943, 61.8435, 21.2544, 66.491, 57.1622, 49.1227, 18.0418, 24.2294, 7.5048, 48.8453, 153.7546, 151.4976, 35.73, 3.188, 23.6363, 31.0271, 0.9315, 28.6987, 110.2413, 0.1017, 15.4462, 20.6055, 45.7925], [3.2634, 64.5154, 91.0602, 41.624, 207.0994, 39.6495, 0.0, 14.4883, 26.0237, 56.7322, 21.0945, 67.0032, 13.0507, 116.915, 81.9504, 43.2614, 43.6338, 8.4121, 16.0538, 60.4453, 40.434, 23.7768, 67.0956, 6.3931, 21.505, 19.9386, 19.1889], [1.6006, 56.6531, 186.7536, 50.0456, 231.8207, 29.646, 0.0, 27.8986, 15.0336, 101.3131, 33.0995, 38.3069, 48.972, 84.913, 153.8846, 143.6544, 104.1527, 10.9035, 5.8388, 58.9131, 86.388, 34.2719, 52.2951, 20.5775, 46.4508, 3.078, 17.8103], [3.3722, 110.5139, 120.5226, 21.0782, 186.4205, 35.964, 59.5008, 55.1074, 41.2992, 50.8358, 68.0512, 23.0112, 60.9288, 94.3219, 157.787, 0.0, 156.7814, 53.4318, 32.3891, 0.0, 85.4202, 53.5785, 34.851, 177.5163, 15.7858, 73.491, 46.9737, 56.8215], [186.5657, 92.4264, 43.2696, 338.7909, 33.777, 0.0, 34.2373, 75.4445, 61.1146, 89.3858, 42.7738, 0.0, 157.8034, 116.1614, 16.3264, 94.7789, 24.7563, 63.9209, 19.0463, 83.7347, 67.7925, 26.2016, 62.1621, 0.0, 103.1118, 40.2534, 62.9321], [21.1464, 53.7966, 379.5267, 28.4715, 22.2768, 85.1189, 77.6218, 84.1819, 84.3437, 130.6675, 68.7898, 168.6643, 217.1035, 111.9514, 56.0119, 61.0812, 89.6337, 45.678, 62.1744, 54.5376, 14.8199, 92.7146, 24.2136, 101.9434], [19.2541, 175.6172, 235.8774, 51.062, 481.677, 153.1488, 211.9307, 72.4402, 19.935, 168.3888, 92.874, 92.1397, 190.2537, 22.1662, 110.8162, 70.3152, 134.5831], [315.4496, 223.5816, 76.472, 545.5793, 89.3025, 48.1824, 77.7885, 129.0816, 33.7445, 103.1058, 80.5843, 71.5373, 200.6083, 354.3379, 16.5312, 189.8054, 122.671, 86.3442, 61.8863, 166.78, 124.3725, 25.152, 273.4056, 58.1991, 51.9112, 31.7889, 19.1516], [19.5649, 237.1934, 323.73, 98.4698, 524.745, 86.1435, 17.4672, 143.4171, 109.4861, 127.9262, 147.3528, 115.3718, 28.8235, 297.1954, 264.1925, 255.6883, 74.2035, 65.6087, 18.405, 176.9691, 153.732, 33.4758, 137.4204, 20.8825, 190.5156, 53.5743, 152.915], [27.2882, 192.6646, 294.8616, 123.0086, 754.8554, 206.1855, 57.7152, 148.6346, 67.4957, 183.9811, 226.1399, 254.9731, 91.2533, 199.3306, 530.7264, 291.1891, 82.3359, 0.0, 26.19, 412.0086], [915.3108, 268.3125, 0.0, 351.2986, 227.4394, 677.8776, 252.4823, 436.8518, 185.6866, 760.2672, 1346.4581, 897.9226, 478.5996, 154.4979, 21.0262, 1094.6037, 337.065, 114.469, 309.0165, 152.037, 220.0616, 292.2561, 163.944], [200.2329, 836.2759, 788.7132, 271.3546, 2358.6316, 283.095, 201.312, 344.9169, 220.1818, 608.7154, 459.7229, 799.3008, 330.5419, 682.6723, 1262.6866, 107.7696, 1166.8205, 226.5298, 209.471, 128.3175, 747.4072, 248.745, 247.0329, 808.5558, 131.1036, 474.419, 225.036, 477.2261], [127.9253, 823.123, 798.5736, 176.7326, 2867.9841, 438.9795, 276.8112, 484.7119, 435.8707, 630.6274, 685.0053, 1132.7827, 265.7717, 1089.8131, 1494.8794, 32.6272, 826.921, 141.7771, 406.6722, 166.4775, 874.2733, 598.6785, 301.6798, 797.9712, 351.3425, 225.1106, 255.0807, 518.2493]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

