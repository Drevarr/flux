created: 20230506220820000
creator: Drevarr
modified: 20230705163528763
modifier: drevarr
tags: ChartData
title: 202305062208_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Artofliving", "Mannse Lee", "Newtype Khan", "Lil Red Robin", "Ark Darkness", "Sygaldry Verdandi", "Aronorf Xideliesi", "Jupi Jupi Jupi", "Tootsie Pop Rocks", "Na Ting Wong", "Miphest\u00f6", "High Sorcer Baradun", "Johoshua", "Zaidy Sagemist", "Artakama Nahid", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Herald", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Tempest", "Tempest", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1618724.25, 124562.1, 0.0, 0.0, 1156055.04, 121806.72, 42356811.0, 0.0, 34642.08, 455385.48, 0.0, 0.0, 0.0, 5110.24], [1266967.65, 17036726.85, 3439129.2, 22968.0, 1192009.77], [522879.24, 5785650.0, 1624743.9, 34488.0, 526279.68, 577463.04, 335180.16, 28526448.0, 0.0, 37528.92, 1417318.32, 0.0, 0.0, 274352.04, 10251.64], [0.0, 607140.36, 1444504.32, 733985.28, 39464008.0, 0.0, 23094.72, 2864617.8, 0.0, 0.0, 169218.76, 25644.68], [805308.66, 10660185.9, 1691901.9, 46656.0, 973069.2, 650280.96, 335180.16, 21999227.0, 0.0, 47187.36, 1955487.6, 0.0, 0.0, 227131.16, 0.0], [1539135.39, 6515145.0, 34488.0, 382489.29, 938542.08, 761806.08, 39338892.0, 1923.72, 2886.84, 1113181.08, 4974.48, 0.0, 103287.72, 7696.52], [348547.29, 12223820.7, 2495719.2, 103464.0, 1208798.64, 942117.12, 548795.52, 31808220.5, 5773.68, 1675365.12, 0.0, 224.64, 245459.48, 5110.24], [314030.73, 14451547.5, 876891.6, 0.0, 1324036.53, 866288.64, 1012435.2, 34203586.5, 3875.73, 17321.04, 2089284.12, 1640.52, 0.0, 65740.12, 0.0], [488012.85, 4269809.7, 124562.1, 0.0, 1616642.55, 2815814.4, 2205705.6, 81851089.0, 0.0, 43516.44, 4302072.72, 0.0, 0.0, 75413.4, 59079.36], [0.0, 4996024.32, 3553079.04, 101565940.0, 0.0, 107454.6, 5962969.32], [2322987.81, 24143517.45, 2499876.6, 162288.0, 1877836.8, 396144.0, 69994834.5, 0.0, 5773.68, 2381041.08], [2937522.51, 20851985.7, 9390447.3, 691920.0, 830306.7, 5499728.64, 4977504.0, 54423946.5, 45377.16, 14434.2], [12759505.92, 5690442.24, 181899493.0, 49394.34, 235829.88, 9714939.96, 0.0, 4380.48, 1294437.6, 163808.12], [3575145.99, 42169087.35, 6736427.1, 68976.0, 3096689.94, 8064725.76, 2827077.12, 131610933.0, 5827.74, 121389.84, 6367938.72, 6641.46, 0.0, 603179.92], [5770912.29, 49678861.05, 10972178.1, 496008.0, 2106717.66, 10364605.44, 5759147.52, 161266956.5, 50723.97, 197730.72, 8703635.16, 8308.44, 3781.44, 1117136.56, 155613.04], [6698311.62, 50005876.05, 12577254.3, 576072.0, 5217227.01, 17553070.08, 6527727.36, 173010203.0, 50186.46, 253721.16, 10618700.4, 20453.58, 2021.76, 1229142.96, 163309.56], [7721447.76, 49668547.5, 13261786.2, 718992.0, 3766303.17, 12082506.24, 6025259.52, 194099816.5, 47272.59, 162660.96, 11393437.44, 26777.52, 2059.2, 1083025.52, 141902.64]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

