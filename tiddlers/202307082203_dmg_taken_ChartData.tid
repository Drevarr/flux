created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Gabe Malhorn", "Black Raspberry Pie", "Xanvias Einzbern", "Johosh The Mighty", "Artakama Nahid", "Arriasa", "Mistwalker Cael", "Necrotic Windrunner", "Koralia Danai", "Aronorf Xideliesi", "High Sorcer Baradun", "Hyde En Sikh", "Sygaldry Verdandi", "Chocolate Teapot", "Cedryn X", "Sakis Ranger", "Klenga", "Lord Erin The Wise", "Tegan Parker", "Charr Surethang", "Venomina The Siren", "Govinda Ektar", "Mechanical Dark", "No Reserv\u00e9", "Heavenm", "Gavann", "Willgrantor", "Ateriuz", "Slingsshot", "Shandalar V Basing", "Lil Rev Robin", "Dark Sidiuz", "Enter Effore", "Permanent Dawn", "Itchy Dermatitis", "\u00c4rt\u00ebm\u00edza", "Seiker Novus Terra", "Ao Kita", "Keenngg", "Ain Sof Aur", "Sofya De Nova", "Mister Jekyll", "Sigrid Oluvkin", "Crusader Siolith", "Autoparthenogenesis", "Dark Sidiuz", "Crusader Siolith", "Sureting", "Kary\u00edna"];
const professions = ["Berserker", "Firebrand", "Chronomancer", "Berserker", "Berserker", "Tempest", "Druid", "Vindicator", "Reaper", "Firebrand", "Firebrand", "Weaver", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Druid", "Firebrand", "Weaver", "Tempest", "Berserker", "Tempest", "Vindicator", "Scrapper", "Vindicator", "Guardian", "Firebrand", "Firebrand", "Berserker", "Untamed", "Firebrand", "Vindicator", "Reaper", "Firebrand", "Weaver", "Scourge", "Druid", "Tempest", "Untamed", "Warrior", "Guardian", "Weaver", "Reaper", "Scourge", "Dragonhunter", "Chronomancer", "Scourge", "Firebrand", "Reaper", "Renegade"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1547.8017, 2990.3333, 6428.5625, 458.4688, 1503.2656, 76.973, 70.2444, 13872.3333, 1261.8125, 2752.4054, 1901.4048, 171.1224, 1753.9057, 2514.125], [1130.9167, 3138.9688, 4507.1765, 20.1818, 2238.234, 232.2025, 28.2609, 125.619, 5738.1538, 3276.9333, 2794.6531, 1654.1818, 130.9667, 302.5556, 2360.7111], [1651.1647, 36.2258, 1815.3241, 423.8333, 0.0, 253.1765, 4537.1875, 966.8958, 13672.3333, 2452.3906, 173.1481, 328.0741, 16137.0, 418.368], [238.8657, 1373.215, 3346.375, 4803.1818, 63.1081, 1092.0818, 119.075, 21.2051, 66.2, 2484.1905, 1216.4681, 2316.3143, 2071.4559, 358.9767, 210.3516, 2127.4762], [417.2462, 1517.4286, 4504.3077, 4386.875, 129.6923, 1941.1481, 120.1139, 41.3514, 197.9375, 4981.0, 2938.9773, 3221.1071], [149.6, 1412.4348, 2112.35, 4309.0556, 112.7941, 1767.899, 86.1948, 0.0, 58.4615, 2280.0244, 393.0625, 2487.8108, 1003.3649, 106.5778, 131.163, 1476.0769, 137.6593], [1310.4756, 3013.5238, 5710.3333, 21.2564, 1152.1509, 97.8608, 84.2647, 31.45, 4931.125, 13923.8, 2952.5758, 3116.6053, 243.6957, 228.0652, 2560.0526], [264.9322, 1094.3786, 1942.4722, 5378.2143, 69.5128, 1381.7182, 99.6875, 41.2, 139.6739, 973.7045, 691.8913, 2761.6923, 1373.6, 535.8864, 175.8478, 2269.5217], [1646.7826, 5473.4286, 4718.7647, 0.0, 1491.9324, 177.55, 153.7353, 76.4667, 3118.8056, 806.6341, 1175.25, 1506.7037, 311.814, 512.2267, 2393.7419], [135.9524, 1185.2766, 3360.8158, 5003.5, 90.1389, 1035.1121, 109.4179, 30.5806, 318.8462, 3760.6522, 249.2, 1653.7234, 4656.2778, 100.3714, 112.5463, 2343.55], [291.3284, 1136.07, 1002.0238, 515.8333, 6.1714, 985.4038, 19.7714, 530.7308, 3813.5161, 4126.0385, 8356.4286, 1714.1875, 350.8966, 329.2935, 4097.5556], [1434.2632, 4955.3636, 978.4286, 24.1429, 1728.7228, 131.4675, 4.7647, 340.4571, 3606.1765, 1868.7174, 3394.1818, 1908.9804, 818.6383, 1156.4375, 1108.9167], [539.2576, 1553.828, 3852.7353, 5203.3333, 53.359, 1742.3704, 108.1375, 48.2308, 299.0606, 4791.1622], [220.5152, 1523.9565, 2626.2647, 3942.5, 843.0571, 0.0, 204.5778, 3096.3889, 446.2885, 2672.6585, 1285.8571, 48.2222, 182.7609, 300.5], [277.8182, 738.1441, 2951.2105, 1059.6296, 115.4054, 602.8636, 162.1, 4024.6154, 2090.5, 510.2609, 1038.6522, 771.2982], [1067.9151, 3359.0952, 4320.4615, 0.0, 1667.8462, 96.1373, 30.2162, 260.3673, 4583.4375, 142.475, 6962.7273, 1708.8, 105.2045, 425.6667, 4936.3333], [1386.3535, 2990.4857, 2110.1786, 75.5161, 1318.5905, 198.0779, 36.3143, 51.5227, 1030.0714, 757.2444, 808.4, 4081.84, 232.125, 61.2941, 1069.7959], [187.9692, 1290.701, 3349.7143, 5203.8333, 8.9333, 1855.3571, 179.3636, 7.9412, 127.641, 5186.6316, 458.875, 2098.8286], [1081.45, 3919.1429, 1281.0, 631.15, 1456.0465, 173.4487, 24.5, 187.3673, 456.3556, 2816.0323, 1478.0811, 1358.5882, 350.0278, 2062.9667], [5041.75, 5.5333, 1532.8571, 383.9403, 52.7, 170.5455, 5164.0, 1228.2708, 2994.9091, 1693.2063, 343.0978, 2208.0278], [1370.1545, 3499.8621, 9802.625, 108.5946, 1213.8391, 274.5738, 52.95, 116.0625, 1813.7838, 3080.9762], [2902.2759, 4161.0833, 73.0, 1041.2642, 15.1389, 148.4902, 1421.2955, 21261.6667, 2485.2439, 1888.3171, 162.7778, 308.51, 964.2807], [1472.314, 4072.7222, 5837.3077, 2596.9524, 184.0, 2754.25, 294.2222, 251.1587], [1119.3833, 2265.1176, 255.1667, 570.4348, 5132.5263, 454.2333], [1247.4124, 2471.5556, 5110.4286, 174.5526, 2088.3269, 145.2875, 136.5, 371.4565], [5454.0488, 4420.8095, 16800.4], [4698.4667, 7736.9, 0.0, 2421.1758], [6.3467, 6.1282, 125.0222, 2797.8684, 23.6429, 3042.375, 1928.4773, 148.4722, 346.0, 658.8519], [2085.8929, 2.5161, 1614.283, 112.6875, 215.4062, 137.1224, 2528.9737], [7593.6667, 3879.6316, 7.6667, 1505.7467, 45.3544, 26.2564, 91.7333, 4932.4706], [7242.875, 4107.1875, 1987.9348, 718.5806, 224.8241, 2162.5882], [1372.7308, 2072.9231, 211.6222, 194.4815, 3050.0625], [2420.7349, 2262.2979], [146.1096, 0.0, 39.0952, 3969.4545, 550.6667, 599.8904, 203.4681, 55.0, 2306.5128], [90.8846, 1210.6818, 2155.1538, 885.0794, 342.6512, 98.7391, 990.06], [9147.0, 14921.2], [2897.9487, 1524.1842], [354.4524, 519.3426, 3259.0], [1552.7708, 1441.2609], [0.0, 1394.3434], [5252.375, 485.1739, 3595.2353], [2101.3, 1532.575], [7710.3333], [47.0811, 5466.35], [2809.3939], [1696.8421], [458.381], [214.0154], [150.5672], [19.3971]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

