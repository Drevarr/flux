created: 20230531221142000
creator: Drevarr
modified: 20230705163532495
modifier: drevarr
tags: ChartData
title: 202305312211_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Brace Stonebrow", "Miphest\u00f6", "Tootsie Pop Rocks", "My Birthday Girl", "Cyclotechnist Farra", "Lord Erin The Wise", "Permanent Dawn", "Mistwalker Cael", "Legacy Of Mathus", "Tribal S", "Arriasa", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Weaver", "Vindicator", "Spellbreaker", "Druid", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[194.922, 94.0013, 34.0416, 469.9845, 143.0016, 24.4663, 29.4823, 48.84, 68.15, 25.3165, 14.2128, 75.4594, 107.0153, 28.6387, 22.45], [379.6246, 0.0, 110.8968, 273.948, 173.43, 65.1801, 48.4946, 192.3184, 128.5801, 32.2714, 90.9253], [369.954, 124.5653, 47.2176, 622.496, 166.4628, 0.0, 37.0558, 71.3952, 48.2925, 6.0278, 133.6398, 40.8261, 132.6235, 0.0], [429.624, 111.253, 59.0976, 631.0553, 311.9222, 0.0, 28.9864, 67.2697, 75.4726, 46.9041, 107.6892, 0.0, 54.0622], [308.6265, 44.0122, 92.448, 908.8442, 259.6373, 0.0, 46.4775, 124.0536, 141.705, 74.4226, 135.4822, 54.129], [662.0055, 139.3718, 65.7504, 853.5976, 292.7064, 27.3089, 28.4906, 50.7936, 157.3325, 49.9098, 93.6334, 37.3857, 81.9462, 11.9962, 69.0646], [658.6905, 169.5283, 85.4928, 1228.6515, 493.8024, 24.1618, 40.1663, 166.6776, 254.74, 122.4839, 154.3668, 157.5703, 108.6327], [776.373, 256.8734, 89.0784, 1327.4727, 357.0571, 26.7505, 61.5793, 152.2032, 233.4725, 98.1318, 76.1306, 143.006, 151.4927, 0.0, 50.4188], [654.381, 300.0706, 68.6016, 1507.2184, 423.1954, 12.0301, 74.3369, 151.404, 229.83, 173.7599, 108.9648, 173.9696, 292.4726, 15.1782, 56.9555], [915.6571, 157.6859, 167.2468, 470.7288, 746.595, 472.013, 349.9244, 484.867, 553.9458, 92.759, 51.3832], [1043.8935, 649.8586, 99.9216, 2519.5526, 791.4245, 77.9674, 116.9375, 257.6976, 332.4075, 266.8284, 170.1588, 371.7926, 454.4782, 51.3075, 78.2804], [1248.0975, 536.0246, 121.4352, 2674.3984, 904.932, 66.8255, 119.6423, 175.6464, 229.125, 215.5523, 161.21, 340.3702, 401.2401, 58.8262, 167.8661], [1405.56, 454.3848, 64.584, 2868.9284, 769.0805, 106.7483, 120.5439, 348.6288, 427.5825, 298.0923, 240.828, 375.1183, 505.5598, 87.3242, 0.0], [1782.4755, 798.06, 190.728, 4407.2717, 1364.995, 149.3105, 242.1698, 660.672, 675.7425, 458.5109, 403.2882, 775.1221, 903.6999, 138.6035, 115.1434]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

