created: 20230625214748000
creator: Drevarr
modified: 20230705163536415
modifier: drevarr
tags: ChartData
title: 202306252147_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Sakis Ranger", "Arriasa", "Morton Saltbringer", "Tacitus Kilgore I", "Rozaalyna", "Duke Silvver", "Xyntharos", "Air One Com", "Sumatra Satyricon", "Raziel Umbra", "Zayde Sunsabre", "K\u00f4sair", "Tootsie Pop Khorne", "Bella Sassy", "Mammary Mission", "Kary\u00edna", "Mort\u00e4rion", "Tika Fiery", "Oo Dads Mad", "Irish Necroman", "Gestern Yesteryear", "Bellatrix Astra", "Grasszanine", "Koralia Danai", "Ryvalia Fazebringer", "Tegan Parker", "Newtype Khan", "Aronorf Xideliesi", "Solus Sanctus", "Primal Clone"];
const professions = ["Firebrand", "Druid", "Druid", "Chronomancer", "Spellbreaker", "Reaper", "Vindicator", "Vindicator", "Firebrand", "Soulbeast", "Chronomancer", "Spellbreaker", "Spellbreaker", "Reaper", "Firebrand", "Scourge", "Vindicator", "Scrapper", "Firebrand", "Spellbreaker", "Reaper", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1301.44, 273.91, 520.8], [0.0, 0.0, 0.0, 0.0, 0.0, 496.86, 0.0, 1095.64, 0.0, 0.0, 0.0, 0.0, 1378.0, 0.0, 0.0], [0.0, 0.0, 0.0, 43.2, 0.0, 165.62, 2277.52, 547.82, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 239.04, 0.0, 473.76, 0.0, 325.36, 0.0, 0.0, 0.0, 0.0, 2411.5, 0.0, 0.0], [1369.55, 0.0, 0.0, 734.4, 0.0, 1033.5, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1643.46, 312.48, 0.0, 0.0, 0.0, 2411.5, 0.0, 0.0], [524.16, 0.0, 0.0, 0.0, 0.0, 0.0, 1952.16, 547.82, 312.48, 0.0, 0.0, 0.0, 1033.5, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 473.76, 0.0, 0.0, 547.82, 0.0, 0.0, 1468.8, 0.0, 689.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 473.76, 0.0, 0.0, 0.0, 1458.24, 0.0, 0.0, 0.0, 1378.0, 0.0], [6299.93, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 789.6, 1159.34, 1952.16, 1643.46, 208.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 947.52, 0.0, 1626.8, 821.73, 0.0, 0.0, 0.0, 0.0, 4134.0, 0.0, 0.0], [349.44, 0.0, 0.0, 0.0, 0.0, 1324.96, 325.36, 4382.56, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [698.88, 0.0, 0.0, 0.0, 315.84, 0.0, 976.08, 3560.83, 0.0, 0.0, 0.0, 0.0, 2411.5, 0.0, 0.0], [349.44, 0.0, 0.0, 0.0, 315.84, 1324.96, 2277.52, 273.91, 416.64, 0.0, 612.0, 0.0, 344.5, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 473.76, 0.0, 325.36, 4930.38, 624.96, 0.0, 0.0, 1033.5, 0.0, 0.0], [698.88, 0.0, 0.0, 43.2, 473.76, 165.62, 1952.16, 2739.1, 208.32, 0.0, 0.0, 0.0, 1378.0, 0.0, 0.0], [0.0, 96.96, 239.04, 0.0, 1105.44, 662.48, 1952.16, 3013.01], [873.6, 0.0, 0.0, 0.0, 0.0, 828.1, 2277.52, 4108.65, 208.32, 0.0, 0.0, 0.0, 689.0, 0.0, 0.0], [698.88, 0.0, 0.0, 0.0, 3158.4, 993.72, 1952.16], [524.16, 0.0, 0.0, 0.0, 789.6, 331.24, 976.08, 2191.28, 312.48, 0.0, 0.0, 0.0, 4134.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 315.84, 1656.2, 2602.88, 1917.37, 729.12, 0.0, 244.8, 0.0, 1033.5, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1324.96, 650.72, 2465.19, 1041.6, 0.0, 0.0, 0.0, 3789.5, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 976.08, 5204.29, 104.16, 0.0, 244.8, 0.0, 4478.5, 0.0, 51.92], [1397.76, 0.0, 0.0, 0.0, 473.76, 165.62, 1952.16, 1917.37, 1354.08, 0.0, 0.0, 0.0, 1722.5, 0.0, 0.0], [0.0, 0.0, 0.0, 21.6, 947.52, 0.0, 1626.8, 3013.01, 104.16, 0.0, 2080.8, 0.0, 3445.0, 0.0, 51.92], [0.0, 0.0, 0.0, 0.0, 789.6, 993.72, 976.08, 3013.01, 520.8, 0.0, 0.0, 0.0, 7923.5, 0.0, 0.0], [698.88, 0.0, 79.68, 43.2, 947.52, 662.48, 1301.44, 7669.48, 208.32, 0.0, 612.0, 0.0, 6201.0, 0.0, 0.0], [0.0, 0.0, 0.0, 151.2, 1263.36, 1324.96, 4880.4, 2465.19, 1145.76, 0.0, 979.2, 0.0, 2756.0, 0.0], [1223.04, 0.0, 0.0, 0.0, 2842.56, 331.24, 1952.16, 5752.11, 208.32, 0.0, 244.8, 0.0, 6890.0, 0.0, 77.88], [2981.16, 3253.6, 6847.75, 833.28, 0.0, 0.0, 0.0, 10679.5, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

