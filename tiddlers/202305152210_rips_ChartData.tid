created: 20230515221048000
creator: Drevarr
modified: 20230705163530323
modifier: drevarr
tags: ChartData
title: 202305152210_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Panther B Me", "Necrotic Windrunner", "Smol Gluvs", "River No Hug", "Elonith Requiem", "Demon Sekhmet", "Be\u00eb", "Rozaalyna", "Rozaalyna", "Kyllarian", "Elonith Requiem", "Domitia Gravestorm", "Grasszanine", "Be\u00eb", "Newtype Khan", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Scourge", "Scourge", "Scourge", "Scourge", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0145, 0.0066, 0.0351, 0.0, 0.0, 0.0184, 0.0182, 0.0, 0.0, 0.0, 0.322, 0.4444, 0.0, 0.2907, 0.0, 0.5179, 0.3308, 0.3548], [0.0, 0.0, 0.0, 0.0283, 0.0164, 0.0243, 0.0, 0.0059, 0.1525, 0.3556, 0.0769, 0.5233, 0.0145, 0.5, 0.2923, 0.3441], [0.2029, 0.0033, 0.0175, 0.0, 0.0189, 0.041, 0.0668, 0.0, 0.0303, 0.0237, 0.6271, 0.3778, 0.0256, 0.2442, 0.0435, 0.1429, 0.1769, 0.0538, 0.4059], [0.0132, 0.0, 0.0, 0.0094, 0.043, 0.0789, 0.0, 0.0, 0.0355, 0.5085, 0.4, 0.0, 0.407, 0.029, 0.3571, 0.4692, 0.2366], [0.3059, 0.7958, 0.0952, 0.1935, 0.0, 0.1429, 0.0217, 0.4118], [0.0, 0.0263, 0.0, 0.0, 0.4407, 0.6, 0.0, 0.593, 0.0, 0.375, 0.7231, 0.5161], [0.2882, 0.3521, 0.1429, 0.5645, 0.0132, 0.3835, 0.0, 0.549], [0.2471, 0.5141, 0.0476, 0.6855, 0.0, 0.3083, 0.0217, 0.4706], [0.0, 0.0702, 0.0, 0.0236, 0.0184, 0.1296, 0.0, 0.0, 0.5424, 0.2889, 0.0256, 0.5349, 0.0145, 0.1964, 0.8385, 0.7849], [0.0506, 0.0, 0.0, 0.003, 0.1525, 0.5778, 0.0, 0.407, 0.058, 0.4464, 0.2615, 0.2796, 0.2588, 0.2394, 0.0476, 0.4194, 0.0132, 0.1504, 0.0, 0.4575], [0.0189, 0.0606, 0.0621, 0.7797, 0.8222, 0.0, 0.8837, 0.0145, 0.6429, 0.7923, 0.9247], [0.2029, 0.0, 0.0, 0.0, 0.0236, 0.0266, 0.0304, 0.0, 0.0303, 0.0207, 0.5254, 0.4222, 0.0, 0.4651, 0.029, 0.1964, 0.4462, 0.2258, 0.3412, 0.493, 0.0952, 0.4919, 0.0, 0.0451, 0.0, 0.3791], [0.3898, 0.6444, 0.0513, 0.5465, 0.0145, 0.1071, 0.5154, 0.6237, 0.3647, 0.5704, 0.0, 0.4919, 0.0, 0.3835, 0.0, 0.1242], [0.4203, 0.053, 0.0, 0.0, 0.0613, 0.0717, 0.0405, 0.0377, 0.0303, 0.0355, 0.9492, 0.4, 0.0513, 0.814, 0.0, 0.5357, 1.1615, 0.8172], [0.2029, 0.0265, 0.0526, 0.0208, 0.0613, 0.0738, 0.0587, 0.0, 0.0, 0.0237, 0.3559, 0.4667, 0.0513, 0.5233, 0.1014, 0.0714, 0.4077, 0.3011, 0.3235, 0.669, 0.0, 0.5887, 0.0199, 0.0526, 0.0, 0.4248], [0.0563, 0.0, 0.0283, 0.0328, 0.1012, 0.0, 0.0606, 0.0385, 0.4237, 0.2889, 0.0, 0.4651, 0.0145, 0.5179, 0.7462, 0.2581, 0.3529, 0.669, 0.0476, 0.629, 0.0464, 0.3609, 0.087, 0.6797], [0.0, 0.0, 0.0425, 0.0758, 0.2348, 0.0189, 0.2424, 0.0207, 0.4407, 0.4222, 0.0, 0.8023, 0.0725, 0.2321, 0.7846, 0.4409, 0.6471, 0.507, 0.9048, 0.8468, 0.053, 0.3759, 0.0435, 0.0915], [0.1739, 0.043, 0.2105, 0.0208, 0.0849, 0.2254, 0.251, 0.0, 0.0303, 0.1095, 0.5932, 0.8444, 0.1282, 0.9651, 0.1159, 0.6429, 0.7462, 0.914, 0.8353, 0.9648, 0.381, 1.0484, 0.0927, 0.7143, 0.3696, 0.9608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

