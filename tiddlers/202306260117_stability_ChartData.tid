created: 20230626011754000
creator: Drevarr
modified: 20230705163538067
modifier: drevarr
tags: ChartData
title: 202306260117_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Warrior Constantine", "Grasszanine", "Johosh The Mighty", "Cerys Fireblade", "Newtype Khan", "Daddy Demon", "Etchery Of Ascalon", "Zayde Sunsabre", "Xanvias Einzbern", "Blancooo Padreee", "Arcanophage Farra", "Mistwalker Cael", "Ryvalia Fazebringer", "Imalou", "Air One Com", "Kosair", "Xyntharos", "Traidoruns Maximus", "Gabe Malhorn", "Solus Sanctus", "Bella Sassy", "Tika Fiery", "Koralia Danai"];
const professions = ["Spellbreaker", "Spellbreaker", "Berserker", "Berserker", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.3122, 0.9771, 2.2226, 2.5056, 0.0, 0.8325, 0.567, 0.0, 1.8036, 0.696, 3.1988, 1.2864, 5.5347, 4.7817, 0.0, 2.53, 3.3699, 2.5578], [1.2879, 1.3959, 0.0, 1.1113, 1.4688, 1.4742, 0.0, 5.2605, 0.9826, 6.0856, 4.2375, 1.2107, 1.6394, 1.4332, 1.4524, 1.4824, 1.8488, 0.0, 1.2, 1.6632, 0.0], [1.215, 0.6049, 0.0, 1.2348, 2.0736, 0.6283, 0.8325, 1.2096, 1.1788, 1.2024, 1.351, 4.057, 2.9511, 3.2862, 2.5958, 0.0, 0.69, 1.2356, 0.4831, 1.0511, 0.8938, 0.0, 0.7683, 0.0, 5.4, 1.62, 0.0], [1.1907, 2.8849, 0.0, 5.927, 2.2464, 0.0, 2.0055, 1.9656, 0.3762, 3.0812, 2.6202, 0.0, 0.0, 1.2296, 0.0, 1.2789, 1.2103, 1.3034, 2.0675, 1.2005, 0.5713, 6.8, 0.0, 0.0], [1.9683, 0.0, 0.0, 1.7287, 2.6784, 0.2587, 0.0, 2.1924, 0.3275, 3.1208, 3.4808, 4.324, 0.1366, 0.0, 2.852, 1.2356, 1.5631, 2.2932, 1.4151, 1.8335, 1.1045, 0.0, 4.8, 1.728, 0.0], [1.3122, 2.2334, 3.3025, 2.9635, 1.3824, 0.3326, 0.6433, 0.8316, 0.3511, 1.6533, 1.7195, 1.6384, 4.9185, 7.6102, 4.5085, 0.0, 1.38, 2.4713, 0.4547, 1.7199, 0.4469, 0.7412, 1.3926, 0.0, 6.2, 0.3672, 0.0], [1.1907, 1.4424, 3.6247, 5.8036, 2.5056, 1.1827, 0.7568, 2.0412, 0.79, 1.2776, 0.9416, 3.1988, 4.7672, 6.7454, 4.7817, 1.2348, 2.024, 3.5946, 1.2789, 2.1658], [1.5309, 1.2563, 5.0627, 0.0, 1.4045, 3.1752, 2.1793, 1.3101, 3.4329, 4.1619, 7.4373, 0.0, 3.22, 1.5726, 1.7336, 1.4014, 1.1172, 1.7554, 1.3206, 0.0, 10.6, 1.7928, 0.0], [2.7702, 1.0702, 0.0, 2.4696, 5.0976, 1.3306, 3.1786, 1.7766, 1.4797, 2.48, 3.2752, 6.0856, 2.6485, 7.4373, 2.869, 0.0, 1.84, 1.2356, 2.1599, 2.5162, 0.931, 1.0923, 1.3206, 0.0, 3.4, 1.1448, 0.0], [1.458, 1.6286, 0.0, 4.3218, 4.4928, 1.2566, 0.4541, 1.5498, 2.4704, 4.2835, 2.8249, 3.1988, 5.8266, 7.2643, 2.3225, 0.0, 3.91, 1.1233, 1.08, 2.3569, 1.5641, 1.7164, 2.0889, 0.0, 7.0, 0.0], [1.944, 2.1869, 0.0, 4.4453, 5.7888, 1.2566, 4.2381, 2.835, 0.0, 4.4338, 4.2987, 4.057, 3.0268, 7.7832, 2.4592, 3.404, 3.8192, 1.4778, 1.4014, 1.8992, 1.1703, 1.1525, 0.0, 2.0, 2.808, 0.0], [0.6318, 2.2334, 0.0, 7.1618, 2.9376, 1.4784, 4.011, 5.7834, 0.0, 4.6593, 3.3571, 4.8372, 5.2212, 8.9939, 6.0113, 0.0, 6.026, 3.1452, 2.3589, 2.7073, 0.5214, 3.3939], [3.3777, 1.9077, 0.0, 5.0627, 1.5552, 6.0102, 0.0, 3.7575, 16.2691, 8.475, 8.0606, 1.8934, 8.51, 5.8412, 3.6946, 2.8028, 2.3834, 1.8335, 2.6891, 0.0, 10.8, 2.376, 0.0], [2.5126, 0.0, 10.9897, 7.776, 3.5851, 4.3894, 5.9346, 7.5902, 7.9424, 9.9085, 12.3342, 8.475, 5.6014, 1.8316, 6.026, 3.5946, 3.0125, 4.7457], [2.7459, 3.071, 0.0, 6.6679, 6.9984, 3.9178, 2.7245, 5.0652, 2.3199, 6.9889, 3.823, 10.2155, 14.1827, 7.924, 6.762, 5.6165, 1.0515, 6.0515, 2.9047, 1.9895, 3.0012, 0.0, 17.2, 1.9656, 0.0], [6.0922, 11.34, 1.5424, 12.0991, 8.2699, 9.1283, 17.1771, 14.5286, 9.8366, 11.086, 7.6384, 8.2702, 7.007, 3.0909, 2.6527, 4.706, 0.0, 7.2, 4.1472], [2.43, 4.5134, 5.5579, 12.2245, 0.0, 3.402, 0.0627, 2.1793, 3.2752, 3.1988, 8.702, 19.7174, 14.3451, 2.2844, 8.878, 8.0878, 2.2736, 4.1405, 4.655, 0.7802, 4.6339, 3.2292, 36.2, 2.7432, 2.3637], [4.0581, 6.5142, 0.6444, 13.4593, 5.616, 4.9157, 2.4974, 7.1442, 0.0, 7.1393, 8.3927, 10.5327, 5.8266, 6.5578, 4.0748, 8.924, 15.0522, 6.2808, 8.6632, 4.2454, 4.9543, 2.6171, 0.1987, 16.8, 4.8384, 1.1472], [6.3423, 4.0946, 2.0137, 11.7306, 14.688, 3.1046, 4.1624, 8.6793, 4.9153, 21.7173, 23.3496, 13.3888, 0.4528, 10.396, 9.885, 5.2009, 7.5484, 6.517, 6.1636, 7.8033, 0.0, 21.8, 4.968, 1.2165], [5.9778, 6.0024, 0.0, 12.595, 18.8352, 5.3222, 6.5085, 10.9998, 0.8026, 19.3135, 12.4048, 13.1854, 17.9338, 13.4909, 21.9958, 4.5688, 7.59, 9.9974, 4.7746, 7.5166, 3.8357, 4.018, 6.7468, 0.0, 27.4, 4.9032, 0.1681], [7.0956, 4.6065, 12.4852, 20.6212, 12.2688, 1.4414, 6.0544, 7.8624, 2.6334, 16.9088, 9.539, 10.6887, 2.7241, 0.0, 17.2141, 3.0047, 9.062, 15.2769, 3.5241, 6.4656, 6.1446, 9.1283, 7.0349, 2.5461, 43.8, 7.4304, 3.867], [3.9123, 6.933, 7.8134, 20.2507, 9.504, 2.772, 7.1139, 7.2576, 3.9125, 11.4228, 7.4101, 11.1569, 17.2528, 25.5981, 11.4761, 7.1824, 9.016, 11.4577, 7.5597, 6.9433, 7.3363, 5.3834, 5.7384, 0.0, 44.4, 1.4688, 3.3725], [6.9741, 9.4921, 4.833, 24.2021, 14.688, 5.0635, 6.1679, 16.2918, 20.6663, 11.3404, 15.2919, 20.8849, 26.2899, 18.7169, 0.5762, 12.65, 11.7947, 5.5987, 9.8416, 10.1293, 8.3872, 5.0421, 43.2, 6.7824, 0.0593]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

