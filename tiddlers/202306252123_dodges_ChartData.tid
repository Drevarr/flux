created: 20230625212343000
creator: Drevarr
modified: 20230705163535700
modifier: drevarr
tags: ChartData
title: 202306252123_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00f4sair", "Yummy Kiwi", "Sumatra Satyricon", "Ildemir Fares", "Miphest\u00f6", "Axunar", "Sygaldry Verdandi", "Tuff Spuffles", "Tika Fiery", "Belvyn Brightblade", "Rina Of Theros", "Latedoctor", "Xanvias Einzbern", "Enter Effore", "Audra Storm", "Irish Necroman", "Black Raspberry Pie", "Be\u00eb", "Zayde Sunsabre", "Venomina The Siren", "Sakis Ranger", "Primal Clone", "Seiker Novus Terra", "Koralia Danai", "Permanent Dawn", "Tootsie Pop Khorne", "Lord Erin The Wise", "Deutzaqio", "Eibh\u00ebar", "Shaca Booey", "Fribble Bibble", "Drevarr Moonwillow", "Blancooo Padreee", "Crusader Siolith", "Grasszanine", "Ryvalia Fazebringer", "Palm Sauce", "Ateriuz", "Johosh The Mighty", "Tegan Parker", "Morton Saltbringer", "Caelon Cai", "Rahani Sunray", "Newtype Khan", "Duke Silvver", "Elzy Lou", "Aronorf Xideliesi", "Traidoruns Maximus", "Smol Gluvs", "Mike The Archmagus"];
const professions = ["Berserker", "Firebrand", "Soulbeast", "Tempest", "Tempest", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Reaper", "Berserker", "Firebrand", "Weaver", "Reaper", "Chronomancer", "Reaper", "Spellbreaker", "Tempest", "Druid", "Chronomancer", "Tempest", "Firebrand", "Weaver", "Reaper", "Weaver", "Vindicator", "Chronomancer", "Berserker", "Scrapper", "Scrapper", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Vindicator", "Berserker", "Berserker", "Tempest", "Chronomancer", "Reaper", "Chronomancer", "Spellbreaker", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Reaper", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 3, 2, 1, 5, 1, 0, 1, 2, 1, 0, 2, 4, 0, 4, 2, 4, 1, 4], [0, 0, 0, 3, 1, 1, 2, 3, 0, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 0, 2, 3, 10, 5, 5], [0, 2, 1, 6, 1, 3, 2, 3, 2, 1, 2, 1, 2, 2, 3, 0, 0, 2, 4, 3, 5], [9, 18, 6, 13], [1, 3, 3, 1, 2, 6, 2, 5, 0, 4, 1, 3, 5, 3, 0, 1, 2, 2, 4], [2, 6, 1, 1, 0, 4, 2, 4, 3, 0, 2, 3, 0, 0, 2, 0, 0, 0, 3, 2, 0, 4, 3, 4, 2, 1], [0, 0, 0, 5, 4, 5, 5, 2, 0, 0, 3, 2, 2, 5, 0, 4, 4, 0, 0, 1, 1, 1, 0, 2, 2, 3], [0, 3, 4, 3, 6, 4, 4, 5, 0, 2, 0, 2, 5, 5, 2, 1, 2, 5, 1], [0, 0, 1, 1, 3, 7, 3, 4, 4, 3, 0, 3, 4, 1, 1, 2, 0, 3, 2, 3, 3, 2, 3, 3, 2], [1, 5, 6, 5, 9, 9, 6, 13, 4], [3, 2, 4, 3, 4, 2, 1, 0, 0, 3, 1, 3, 2, 2, 3, 0, 3, 5, 2, 3, 0, 3, 2, 7], [2, 1, 4, 1, 1, 2, 1, 1, 0, 1, 2, 1, 3, 8, 3, 0, 4, 2, 3, 2, 3, 8, 4, 4], [3, 4, 0, 3, 0, 8, 3, 8, 2, 3, 1, 2, 3, 0, 1, 3, 0, 3, 0, 1, 3, 3, 3, 4, 1], [7, 1, 0, 3, 0, 5, 5, 0, 5, 4, 5, 6, 7, 7, 5, 2], [4, 10, 1, 1, 3, 4, 0, 5, 0, 4, 1, 3, 3, 1, 4, 3, 8, 3, 6], [1, 9, 1, 1, 2, 4, 2, 3, 2, 0, 3, 1, 3, 3, 3, 4, 1, 4, 2, 2, 2, 2, 7, 0, 3], [5, 3, 3, 1, 0, 4, 0, 3, 0, 6, 5, 3, 0, 5, 4, 4, 5, 2, 4, 3, 5], [1, 0, 1, 1, 4, 5, 6, 3, 1, 4, 2, 3, 1, 3, 1, 3, 0, 5, 4, 2, 1, 2, 4, 3, 6], [0, 6, 0, 4, 4, 2, 2, 2, 0, 0, 2, 0, 1, 1, 3, 1, 3, 0, 8, 4, 2, 0, 3, 8, 1, 9], [0, 2, 2, 3, 1, 4, 4, 4, 2, 4, 1, 1, 2, 4, 2, 3, 1, 2, 3, 2, 2, 2, 5, 5, 6], [0, 0, 1, 2, 5, 7, 3, 9, 2, 0, 2, 1, 2, 1, 0, 2, 3, 0, 2, 6, 1, 2, 2, 7, 4, 3], [0, 0, 3, 3, 6, 1, 5, 7, 1, 0, 2, 1, 1, 2, 1, 0, 2, 0, 3, 5, 1, 6, 3, 7, 5, 3], [2, 1, 3, 5, 3, 3, 3, 10, 3, 5, 1, 5, 3, 5, 7, 5, 1, 3, 5], [0, 2, 3, 4, 3, 4, 6, 5, 5, 0, 6, 1, 2, 4, 2, 2, 2, 5, 2, 5, 4, 3, 6, 2, 3], [3, 5, 2, 6, 5, 3, 1, 3, 2, 0, 6, 0, 0, 4, 6, 1, 5, 2, 3, 5, 4, 2, 3, 10], [0, 6, 5, 4, 2, 4, 3, 6, 4, 3, 1, 2, 3, 2, 3, 4, 1, 4, 3, 2, 1, 0, 8, 4, 6], [0, 8, 4, 7, 2, 2, 3, 5, 1, 5, 0, 3, 3, 4, 6, 5, 0, 5, 5, 4, 6, 1, 5], [7, 10, 9, 10, 5, 11, 7, 7, 3, 9, 3, 12], [4, 4, 1, 3, 4, 5, 9, 5, 1, 7, 6, 4, 8, 6, 12, 4, 13], [3, 10, 5, 2, 4, 1, 8, 5, 3, 8, 8, 1, 7, 4, 2, 10, 5, 11], [1, 7, 5, 4, 6, 7, 4, 2, 1, 0, 4, 3, 4, 4, 5, 4, 4, 0, 3, 6, 4, 4, 3, 5, 3, 6], [3, 5, 5, 5, 3, 3, 3, 7, 4, 0, 4, 2, 4, 4, 2, 3, 3, 0, 6, 5, 3, 8, 3, 10, 3, 6], [3, 7, 3, 1, 0, 1, 4, 7, 4, 4, 1, 3, 2, 4, 7, 5, 2, 8, 8, 4, 5, 4, 11, 2, 8], [1, 3, 3, 7, 4, 4, 2, 3, 3, 0, 1, 2, 3, 5, 4, 5, 6, 2, 8, 7, 8, 5, 3, 7, 5, 7], [0, 13, 3, 5, 5, 13, 5, 7, 3, 0, 3, 2, 5, 2, 2, 3, 3, 0, 5, 6, 3, 2, 5, 10, 0, 5], [2, 6, 3, 5, 3, 6, 4, 9, 3, 0, 1, 2, 3, 4, 5, 5, 5, 0, 6, 3, 4, 6, 3, 11, 6, 7], [6, 5, 2, 1, 2, 1, 4, 11, 2, 0, 5, 3, 7, 4, 2, 9, 4, 2, 3, 4, 4, 8, 5, 5, 5, 9], [0, 4, 4, 3, 5, 9, 7, 4, 2, 0, 3, 0, 3, 2, 4, 1, 6, 2, 8, 5, 2, 6, 7, 16, 6, 7], [1, 4, 2, 7, 6, 12, 2, 5, 5, 0, 7, 3, 4, 7, 1, 6, 5, 1, 7, 3, 0, 5, 3, 12, 7, 6], [1, 10, 5, 4, 3, 2, 3, 6, 2, 2, 2, 6, 2, 2, 7, 7, 3, 9, 6, 7, 4, 5, 13, 5, 9], [2, 9, 4, 4, 6, 5, 5, 8, 5, 0, 5, 4, 1, 2, 6, 4, 4, 8, 4, 4, 5, 7, 12, 4, 10], [2, 8, 2, 5, 3, 9, 3, 6, 5, 2, 1, 5, 4, 5, 8, 5, 1, 8, 9, 5, 6, 4, 10, 4, 10], [3, 19, 9, 8, 4, 2, 3, 6, 2, 3, 1, 5, 7, 3, 9, 6, 2, 7, 7, 5, 7, 0, 2, 4, 7], [4, 16, 5, 6, 1, 3, 1, 5, 5, 0, 7, 0, 5, 7, 5, 7, 4, 2, 6, 5, 6, 8, 5, 4, 3, 12], [7, 4, 9, 9, 0, 8, 3, 5, 7, 7, 11, 5, 2, 6, 6, 6, 7, 8, 9, 1, 12], [9, 8, 4, 11, 7, 0, 9, 12, 8, 0, 6, 0, 2, 10, 5, 10, 9, 2, 7, 1, 9, 6, 5], [2, 11, 7, 7, 10, 5, 8, 7, 5, 2, 1, 4, 3, 5, 8, 5, 1, 7, 5, 6, 5, 4, 7, 5, 10], [5, 11, 4, 6, 3, 2, 6, 14, 7, 2, 7, 2, 1, 4, 5, 10, 8, 8, 8, 8, 7, 7, 14, 9], [4, 13, 6, 8, 5, 5, 5, 1, 4, 2, 5, 3, 3, 10, 6, 11, 9, 2, 10, 9, 5, 7, 6, 3, 7, 12], [14, 18, 5, 10, 5, 3, 5, 15, 8, 3, 6, 3, 2, 4, 6, 9, 6, 3, 10, 12, 8, 4, 11, 9, 4, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

