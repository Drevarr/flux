created: 20230429000309000
creator: Drevarr
modified: 20230705163527268
modifier: drevarr
tags: ChartData
title: 202304290003_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Oo Dads Mad", "X Devastation X", "Demon Sekhmet", "Smol Gluvs", "Endless Endings", "Kos\u00e4ir", "Newtype Khan", "Maaaathexxs", "Koisx", "Redoxone", "Rudjulin", "Rina Of Theros", "Lord Erin The Wise", "Kos\u00e4ir", "Morv\u00e4rth", "Panther B Me", "Xyntharos", "Permanent Dawn", "Be\u00eb", "Jupi Jupi Jupi", "Cyclotechnist Farra", "Xanvias Tsoli", "Mistwalker Caelon"];
const professions = ["Spellbreaker", "Spellbreaker", "Reaper", "Spellbreaker", "Scourge", "Spellbreaker", "Herald", "Spellbreaker", "Scourge", "Dragonhunter", "Soulbeast", "Willbender", "Scourge", "Weaver", "Vindicator", "Reaper", "Scourge", "Vindicator", "Weaver", "Scourge", "Dragonhunter", "Scrapper", "Holosmith", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[112.2584, 134.2332, 93.7324, 0.0, 187.5289, 48.1387, 43.0198, 162.4789, 66.6176, 0.0, 45.3099, 145.5949, 14.7879, 108.1786], [438.5112, 373.2383, 1057.1127, 0.0, 221.7618, 250.2117], [191.4653, 821.7746, 0.0, 961.5915, 189.3291, 35.0455, 251.0847], [363.382, 356.2176, 305.7887, 0.0, 164.1121, 160.7007, 181.9901, 269.6831, 38.7255, 0.0, 0.0, 7.4177, 13.9167, 145.498], [402.7753, 305.3005, 986.1972, 0.0, 82.2539, 99.5912, 76.8317, 182.9225, 39.2451, 0.0, 167.5493, 155.7722, 28.8864, 160.8553], [329.8546, 155.6496, 116.3663, 488.2324, 0.0, 0.0, 349.8592, 138.3418, 30.3864, 222.5919], [579.4168, 323.781, 124.0792, 999.3944, 0.0, 0.0, 0.0, 36.1392, 0.0], [317.8202, 352.4819, 611.6761, 0.0, 275.5342, 78.4453, 91.505, 212.5563, 154.0882, 0.0, 184.2394, 252.0886, 102.3788, 143.6897], [421.4326, 86.5078, 1084.0, 0.0, 185.1313, 396.562, 282.7129, 1211.831, 7.8797, 482.7887, 199.2532, 231.9621], [259.3427, 646.5026, 1986.9437, 0.0, 188.9335, 0.0, 72.5985, 288.1799], [743.9296, 344.625, 244.9107, 310.7518, 275.6931, 1141.8099, 69.3333, 7.7975, 381.9437, 175.5949, 95.2879, 279.9518], [668.6404, 283.8342, 1492.1972, 0.0, 220.7828, 483.0657, 368.1881, 1107.9014, 205.8529, 7.3924, 643.0704, 319.8101, 178.6288], [434.8652, 697.4197, 1233.3944, 21.0179, 281.4203, 264.292, 445.8614, 728.4437, 112.8529, 16.1709, 438.5634, 163.5443, 30.4015, 199.3155], [710.4719, 596.0311, 2972.2254, 385.3929, 481.296, 644.0438, 288.1386, 773.2113, 70.6373, 0.0], [1552.9607, 1362.5648, 1811.6761, 537.6858], [584.5955, 871.4508, 2340.5211, 233.5893, 664.9632, 232.9416, 914.8218, 739.9507, 727.2941, 0.0], [553.882, 848.7409, 1810.8873, 79.875, 699.0368, 270.7956, 648.2277, 818.5915, 66.2451, 0.0, 128.8451, 275.9873, 47.0303, 295.7705], [1138.5169, 1085.6839, 2283.4225, 19.875, 391.1191, 488.7153, 523.0792, 726.6972, 0.0, 0.0, 716.3521, 131.5823, 8.6591, 546.0013], [662.1404, 981.0777, 2059.5211, 1501.965, 746.0584, 312.7129, 0.0, 0.0, 347.5241], [924.5899, 815.8912, 2421.2535, 10.125, 757.3152, 345.9197, 849.4752, 795.9014, 371.3824, 68.7089, 802.0563, 236.6709, 100.2803, 623.266], [1179.5618, 1266.7513, 3474.2676, 0.0, 679.3082, 810.3285, 1101.4577, 118.0882, 0.0, 492.9577, 160.8608, 86.0379, 646.103], [948.3764, 1320.1554, 2516.0, 189.8571, 543.1699, 434.7372, 814.9307, 1008.4014, 421.3922, 0.0, 900.4085, 0.0, 64.4394, 1234.9687], [1678.0787, 1982.8169, 959.5744, 410.3431, 893.099, 1543.9366, 0.0, 0.0, 1292.6338, 662.2785, 525.2121, 1011.3194], [1788.9719, 1736.4093, 2772.4366, 0.0, 1060.8039, 928.5474, 702.2574, 1578.507, 317.3725, 114.943, 163.7042, 64.4684, 72.7576, 1302.6871]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

