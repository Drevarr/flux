created: 20230703220627000
creator: Drevarr
modified: 20230705163541416
modifier: drevarr
tags: ChartData
title: 202307032206_interupted_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Lord Erin The Wise", "Elphaba Rine", "Erma Starr", "Dim Og", "Johosh The Mighty", "Mmathuss", "Zayde Sunsabre", "\u00c4rt\u00ebm\u00edza", "Lucky Leipreach\u00e1n", "Air One Com", "Govinda Ektar", "Cpt Z Brannigan", "Zaylen Harker", "Smol Daddy Tika", "Be\u00eb", "Black Raspberry Pie", "Zadie Miststep", "Ryvalia Fazebringer", "Morv\u00e4rth", "Drevarr Moonwillow", "Koralia Danai", "Eibh\u00ebar", "Mistwalker Cael", "Arcanophage Farra", "Rahani Sunray", "Smol Dome Dim", "Primal Clone", "Sister Elon\u00edth", "Be\u00eb", "Mike The Archmagus", "Smol Daddy Tika", "\u00c1rkantor", "Oo Dads Mad", "Seiker Soulkeeper", "Miphest\u00f6", "Grasszanine", "Inedible Plant", "Solus Sanctus", "Drumina", "Necrotic Windrunner", "Glorious Gluvs", "Big Baby Norn", "Ateriuz", "Artakama Nahid", "Newtype Khan", "Gabe Malhorn", "Morton Saltbringer", "Tegan Parker", "Kary\u00edna", "Tootsie Pop Rocks", "Arriasa", "Crusader Siolith", "Sub Train"];
const professions = ["Berserker", "Weaver", "Tempest", "Guardian", "Scrapper", "Berserker", "Firebrand", "Spellbreaker", "Druid", "Scrapper", "Firebrand", "Vindicator", "Scrapper", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Tempest", "Chronomancer", "Reaper", "Scrapper", "Firebrand", "Chronomancer", "Vindicator", "Spellbreaker", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Reaper", "Tempest", "Spellbreaker", "Vindicator", "Berserker", "Firebrand", "Tempest", "Spellbreaker", "Vindicator", "Firebrand", "Druid", "Reaper", "Berserker", "Mechanist", "Berserker", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Vindicator", "Scrapper", "Druid", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Interupted per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 3, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0], [0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 2], [1, 0, 2, 0, 4], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 2, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 2, 2, 1], [0, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 3], [0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 4], [1, 2, 1, 1, 0, 0, 1, 0, 3], [0, 0, 1, 1, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 3, 0, 2, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 2, 0, 2, 0, 0, 5, 0, 2], [0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 2, 1, 0, 0, 1, 0, 2], [0, 1, 1, 1, 1, 3, 1, 1, 0, 2, 2], [2, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 2, 0, 1, 1, 0, 1, 1, 0], [1, 2, 1, 3, 3, 1, 2, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 0, 1], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 1, 1, 1, 1, 0, 2, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 5, 1, 1, 0, 3, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 1, 0, 1, 0, 0, 2, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 3], [1, 0, 1, 0, 0, 0, 2, 1, 4, 0, 1, 2, 1, 2], [2, 2, 2, 1, 1, 1, 1, 1, 4], [0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 1, 2, 2, 0, 0, 2, 0, 0, 3, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 2, 0, 2, 3, 3, 0], [2, 2, 1, 2, 0, 0, 1, 1, 0, 3, 2, 2], [2, 1, 1, 4, 3, 0, 0, 3, 2], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2, 3, 2, 4, 0, 3], [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 2, 2, 0], [0, 0, 0, 0, 0, 3, 0, 1, 0, 1, 0, 0, 1, 1, 4, 2, 0, 2, 1, 1, 0], [2, 3, 0, 1, 7, 2, 2], [0, 2, 2, 1, 1, 3, 0, 1, 7], [0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 0, 3, 0, 1, 2, 1, 0, 0, 3, 0, 1, 0, 2, 1], [0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 2, 0, 0, 2, 1, 2, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 1, 5, 1, 1, 2, 0, 0, 1, 2, 0], [1, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 3], [1, 0, 0, 0, 0, 1, 1, 1, 4, 1, 0, 1, 0, 0, 2, 0, 4, 5, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 2, 4, 2, 2, 1, 2, 0, 1], [3, 0, 2, 0, 1, 4, 1, 5, 2, 1, 1, 0, 0, 2], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 2, 2, 2, 1, 1, 2, 3], [0, 0, 0, 0, 4, 0, 0, 0, 0, 2, 1, 2, 0, 0, 2, 1, 1, 5, 2, 2, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 3, 1, 1, 1, 0, 2, 1, 2, 1, 2, 2, 0, 2, 2], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 2, 2, 2, 1, 1, 1, 2, 0, 3, 3, 1, 0, 1], [1, 0, 0, 0, 0, 3, 1, 0, 1, 3, 3, 3, 0, 5, 1, 2, 0, 2, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 3, 3, 1, 1, 1, 0, 2, 4, 1, 1, 2, 1, 2], [0, 0, 0, 0, 1, 0, 4, 0, 0, 2, 0, 1, 1, 4, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 0, 2], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 4, 1, 1, 2, 1, 3, 1, 3, 2, 1, 5, 2, 1, 0], [1, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 5, 2, 0, 5, 0, 1, 0, 1, 1, 2, 2, 2, 2, 0, 3], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 3, 3, 3, 4, 1, 1, 0, 3, 2, 2, 1, 3, 0, 2, 6], [2, 0, 1, 0, 0, 5, 0, 1, 0, 0, 3, 3, 1, 2, 0, 1, 0, 2, 1, 3, 1, 6, 2, 2, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

