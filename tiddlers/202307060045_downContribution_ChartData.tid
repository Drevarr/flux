created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Primal Clone", "Mistwalker Cael", "Eibh\u00ebar", "Xyntharos", "River No Hug", "Grasszanine", "Kary\u00edna", "Legacy Of Mathus", "Johosh The Mighty"];
const professions = ["Spellbreaker", "Chronomancer", "Vindicator", "Chronomancer", "Vindicator", "Reaper", "Berserker", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[228.2439, 25.3269, 33.3382, 58.3774, 234.7692, 66.5625, 1.0118, 0.0, 0.0, 98.0619, 172.9867], [132.2317, 39.9038, 45.3529, 130.0189, 133.1231, 113.2375, 73.9059, 83.9103, 31.3103, 249.9469, 314.2], [952.0976, 776.4038, 361.6176, 971.6038], [414.5366, 456.1538, 222.75, 423.7925, 387.2615, 275.025, 108.0353, 0.7436, 15.9138, 254.4602, 281.4933, 0.0], [518.025, 311.1882, 24.3846, 112.4483, 613.9027, 1078.0667, 0.0], [97.622, 270.0192, 360.0588, 560.8868, 712.2923, 192.5, 245.1059, 33.7051, 89.2759, 405.2655, 582.6], [195.5488, 761.6538, 620.5588, 501.7925, 548.1385, 195.6, 223.8706, 34.5385, 10.0345, 505.5841, 631.8933], [79.6951, 413.8654, 308.9706, 1110.7358, 541.5692, 717.6625, 0.0, 385.4615, 111.2586, 413.9292, 725.16, 0.0], [89.439, 1045.6538, 545.2647, 1243.1509, 656.1846, 1065.0125, 81.8235, 296.2564, 167.9828, 446.8938, 682.2133, 0.0], [631.878, 904.6923, 1001.5, 486.3208, 1222.6923, 1144.15, 147.3882, 45.9103, 381.4138, 1133.0796, 1095.3867]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

