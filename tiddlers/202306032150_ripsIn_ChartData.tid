created: 20230603215001000
creator: Drevarr
modified: 20230705163533610
modifier: drevarr
tags: ChartData
title: 202306032150_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Kyla Arachel\u00efe", "Melody Phoenixstorm", "Miphest\u00f6", "Belvyn Brightblade", "Sygaldry Verdandi", "Kira Dragonblaze", "High Sorcer Baradun", "Manuel Radiador", "Xokaa", "Smoulderling", "Blackout Angel", "Feberhinizer", "Govinda Ektar", "Mistwalker Cael", "Lord Erin The Wise", "High Sorcer Baradun", "Bianca Raveneye", "Pamtastic", "Yngvar The Burdened", "Xanvias Einzbern", "Pocket Stabbs", "Sygaldry Verdandi", "Kary\u00edna", "Aronorf Xideliesi", "Raffy The Swordsman", "Rhaevynn", "Arriasa", "Mammary Mission", "Koralia Danai", "Axunar", "Sumatra Satyricon", "Be\u00eb", "Duke Silvver", "Black Raspberry Pie", "Tacitus Tacitus", "Tegan Parker", "Tootsie Pop Rocks", "Zadey Starbolt", "Crusader Siolith", "Grasszanine", "Artakama Nahid", "Blanco Padre Guard", "Smol Gluvs", "Hyde En Sikh", "Tika Fiery", "Tribal S", "Drevarr Moonwillow", "Newtype Khan", "Jo Hosh"];
const professions = ["Reaper", "Reaper", "Scrapper", "Tempest", "Firebrand", "Dragonhunter", "Dragonhunter", "Tempest", "Scrapper", "Willbender", "Reaper", "Reaper", "Soulbeast", "Renegade", "Vindicator", "Weaver", "Weaver", "Scrapper", "Tempest", "Scourge", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Bladesworn", "Reaper", "Druid", "Scourge", "Firebrand", "Dragonhunter", "Soulbeast", "Scourge", "Vindicator", "Chronomancer", "Reaper", "Tempest", "Scrapper", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Scourge", "Chronomancer", "Firebrand", "Druid", "Scrapper", "Spellbreaker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3774], [0.0676, 0.3214], [0.0129, 0.0095, 0.0351, 0.0625, 0.0, 0.0189, 0.0, 0.0275, 0.3019, 0.0], [0.0, 0.0417, 0.0, 0.0755, 0.0, 0.2294], [0.0043, 0.0284, 0.0, 0.0, 0.0208, 0.0, 0.0, 0.0, 0.1193, 0.2642, 0.0588], [0.0086, 0.0142, 0.0, 0.0, 0.0833, 0.0, 0.0755, 0.0, 0.0826, 0.283], [0.0129, 0.0047, 0.0526, 0.0, 0.0417, 0.0, 0.0377, 0.0, 0.1193, 0.2453, 0.2258], [0.0, 0.125, 0.0377, 0.1009, 0.4906], [0.0, 0.0189, 0.0, 0.0826, 0.1887, 0.0645, 0.7353], [0.117, 0.0678, 0.1216, 0.3214, 0.1026], [0.2447, 0.1441, 0.1486, 0.0], [0.0734, 0.0, 0.1613, 0.1809, 0.0, 0.2297, 0.0, 0.2051], [0.0, 0.0095, 0.0, 0.0, 0.0, 0.0189, 0.0, 0.0917, 0.0189, 0.0294, 0.1702, 0.0, 0.0405, 0.125, 0.4359], [0.0702, 0.0, 0.1042, 0.1132, 0.1743, 0.0566, 0.0, 0.1176, 0.0532, 0.0085, 0.0676, 0.0, 0.4359], [0.0043, 0.0047, 0.0351, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0367, 0.1132, 0.0, 0.1489, 0.1271, 0.2838, 0.1071, 0.0], [0.0043, 0.0, 0.0175, 0.0, 0.0417, 0.0, 0.0566, 0.0, 0.2018, 0.1698, 0.0, 0.2059, 0.117, 0.0085, 0.0811, 0.0, 0.2308], [0.2647, 0.234, 0.1356, 0.0811, 0.1607, 0.2821], [0.2979, 0.1186, 0.2973, 0.2321], [0.0043, 0.0, 0.0351, 0.0, 0.0833, 0.0, 0.0, 0.0, 0.1927, 0.1132, 0.0968, 0.0294, 0.117, 0.0763, 0.1486, 0.0179, 0.2051], [0.0, 0.0189, 0.0, 0.0826, 0.1509, 0.2647, 0.2553, 0.1441, 0.1757, 0.0179, 0.1795], [0.0172, 0.0, 0.0526, 0.0, 0.0, 0.0, 0.0377, 0.0, 0.1009, 0.2642, 0.1765, 0.0638, 0.1356, 0.1081, 0.1429, 0.359], [0.0833, 0.0, 0.0377, 0.0, 0.1101, 0.2075, 0.2353, 0.2766, 0.1017, 0.0946, 0.1607, 0.2051], [0.4839, 0.2128, 0.161, 0.3108, 0.25, 0.2308], [0.0043, 0.0047, 0.1053, 0.0, 0.0625, 0.0, 0.0566, 0.0, 0.0459, 0.0755, 0.0, 0.4362, 0.1525, 0.1892, 0.1795], [0.0086, 0.0, 0.0351, 0.0, 0.0208, 0.0, 0.0566, 0.0, 0.0734, 0.1698, 0.0645, 0.4412, 0.1383, 0.0932, 0.2297, 0.2679, 0.1795], [0.5851, 0.2373, 0.3108], [0.0, 0.1651, 0.2075, 0.2353, 0.2766, 0.1102, 0.1622, 0.0536, 0.4359], [0.1284, 0.2642, 0.1613, 0.2941, 0.2021, 0.0847, 0.2703, 0.3571, 0.0], [0.0, 0.0189, 0.0, 0.1835, 0.434, 0.0968, 0.3235, 0.0, 0.3919, 0.2679, 0.3846], [0.0259, 0.0095, 0.0526, 0.0, 0.1042, 0.0, 0.0, 0.0, 0.1284, 0.3208, 0.2258, 0.0957, 0.0932, 0.3514, 0.1964, 0.2821], [0.0043, 0.0, 0.0175, 0.0, 0.0625, 0.0, 0.0566, 0.0, 0.0734, 0.3208, 0.0323, 0.5294, 0.1702, 0.178, 0.1892, 0.1607, 0.359], [0.0043, 0.0, 0.0877, 0.0, 0.0208, 0.0, 0.0189, 0.0, 0.0826, 0.6792, 0.7097, 0.2979, 0.0593, 0.027, 0.2679], [0.0086, 0.0047, 0.1053, 0.0, 0.0417, 0.0, 0.0189, 0.0, 0.156, 0.0, 0.4412, 0.2128, 0.1949, 0.2297, 0.3214, 0.2051], [0.0043, 0.0047, 0.0175, 0.0, 0.0833, 0.0, 0.0, 0.0, 0.1376, 0.4151, 0.4412, 0.2553, 0.2373, 0.1081, 0.1607, 0.1795], [0.0, 0.156, 0.2453, 0.7097, 0.266, 0.1525, 0.2027, 0.2143, 0.3333], [0.0, 0.156, 0.2642, 0.0645, 0.5882, 0.2234, 0.2034, 0.2568, 0.4872], [0.0, 0.0, 0.1053, 0.0, 0.0833, 0.0377, 0.0, 0.1284, 0.283, 0.7353, 0.0851, 0.1441, 0.2297, 0.3036, 0.3077], [0.0, 0.0095, 0.0526, 0.0, 0.0417, 0.0189, 0.0, 0.1284, 0.283, 0.0645, 0.6471, 0.3511, 0.1441, 0.1622, 0.3036, 0.0], [0.0043, 0.0095, 0.0, 0.1667, 0.0, 0.0189, 0.0, 0.211, 0.3019, 0.0, 0.1765, 0.4043, 0.1186, 0.2838, 0.2321, 0.0], [0.0, 0.0047, 0.0526, 0.0, 0.0417, 0.0, 0.0, 0.0, 0.0917, 0.3208, 0.6765, 0.2021, 0.2288, 0.2703, 0.1964, 0.3846], [0.1053, 0.0, 0.0208, 0.0, 0.0943, 0.0, 0.1101, 0.3019, 0.0323, 0.7353, 0.1383, 0.1864, 0.2162, 0.1964, 0.5128], [0.0129, 0.0095, 0.0351, 0.0, 0.0417, 0.0, 0.0566, 0.0, 0.1193, 0.2453, 0.1765, 0.1915, 0.0847, 0.5135, 0.3214, 0.5641], [0.0, 0.0, 0.1667, 0.0, 0.0189, 0.0, 0.1835, 0.283, 0.1613, 0.0882, 0.1383, 0.1525, 0.3919, 0.4464, 0.3333], [0.0216, 0.0047, 0.0526, 0.0, 0.1458, 0.0, 0.0377, 0.0, 0.1284, 0.1698, 0.6176, 0.3723, 0.0932, 0.2703, 0.2321, 0.3077], [0.0086, 0.0, 0.0175, 0.0, 0.0833, 0.0, 0.0566, 0.0, 0.0917, 0.4717, 0.4412, 0.2766, 0.0593, 0.4459, 0.1964, 0.5128], [0.0086, 0.0095, 0.0526, 0.0, 0.1667, 0.0, 0.0377, 0.0, 0.1927, 0.2642, 0.0, 0.4412, 0.3085, 0.2034, 0.2162, 0.2321, 0.4359], [0.0043, 0.0047, 0.0175, 0.0, 0.0833, 0.0, 0.0, 0.0, 0.3028, 0.7925, 0.5882, 0.1277, 0.1949, 0.2838, 0.1786, 0.0], [0.0129, 0.0047, 0.0351, 0.0, 0.0208, 0.0, 0.0189, 0.0, 0.0826, 0.3774, 0.2581, 0.7353, 0.2553, 0.1864, 0.3378, 0.2321, 0.4103], [0.0043, 0.0142, 0.0877, 0.0, 0.125, 0.0, 0.0377, 0.0, 0.0734, 0.4151, 0.3824, 0.3191, 0.2542, 0.2432, 0.4643, 0.7436], [0.0086, 0.0142, 0.1404, 0.0, 0.1042, 0.0, 0.0943, 0.0, 0.211, 0.4528, 0.5, 0.1809, 0.2458, 0.3919, 0.3214, 0.4615]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

