created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Audens Silvermarker", "Alarics Clone", "Air One Com", "Drevarr Moonwillow", "Head Bobber", "Delayed Worlds", "Zaylen Harker", "Gestern Yesteryear", "Aronorf Xideliesi", "Kisumaiassu", "Sub Train", "Yummy Kiwi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 67.3142, 196.212, 5.0158, 0.0, 0.65, 0.0, 0.0, 0.0, 4.4091, 28.5936, 0.9522, 6.2804, 0.0, 0.0, 0.0, 7.3248, 0.7392, 20.6142, 0.0, 39.9197, 27.2675, 3.9984, 16.7159, 28.9046, 25.0672, 0.0, 0.0, 57.3183], [41.952, 73.7955, 9.8261, 22.7969, 69.0035, 17.5032, 84.4704, 83.7312, 22.1906, 0.0, 72.3845, 54.535, 6.5627, 10.3709, 1.3054, 13.4578, 0.0, 32.0666, 4.2647, 34.9623], [0.0, 71.9712, 294.909, 0.0, 29.9083, 11.3385, 33.7032, 0.0, 11.5216, 0.0, 0.0, 0.0, 0.0, 5.9136, 3.7632, 7.7606, 0.0, 11.2224, 41.7304, 0.0, 43.3993, 32.8153, 0.0, 33.0427, 32.4783], [95.0443, 427.293, 0.0, 0.0, 0.0, 8.211, 0.0, 22.7926, 0.0, 29.8991, 0.0, 0.0, 0.0, 0.0, 18.816, 10.0128, 0.0, 15.3907, 33.5317, 0.0, 10.5375, 10.2253, 0.0, 0.0, 0.0, 36.9716, 0.0], [0.0, 122.351, 396.561, 0.0, 15.1713, 17.5495, 2.576, 17.2184, 50.6669, 1.104, 13.0451, 7.1291, 0.729, 6.8169, 0.0, 23.0496, 14.448, 0.0, 21.8837, 29.939, 0.0, 30.2379, 16.317, 5.2054, 15.912, 0.0, 8.0256, 3.7881], [155.3731, 654.237, 41.251, 0.0], [0.0, 116.424, 268.905, 0.0, 26.8686, 22.6049, 0.0, 10.0947, 0.0, 49.3965, 0.0, 5.8084, 29.9497, 4.3075, 13.2164, 25.0074, 47.1072, 38.7072, 53.1119, 0.0, 25.0901, 31.1366, 28.8634, 20.8495, 34.4062, 15.8828, 0.0, 20.8196], [0.0, 138.6504, 699.153, 10.0386, 6.7473, 10.2272, 39.4574, 0.0, 154.4468, 1.0939], [10.4742, 178.8192, 225.12, 77.3235, 6.258, 214.2677, 172.5408, 37.1377, 22.1578, 24.1492, 61.7872, 53.7615, 33.6718, 51.2431, 94.1436], [396.0533, 715.701, 107.7541, 20.1922, 50.6262, 20.5114, 19.3358, 56.3464, 9.9728, 126.833, 7.3554, 12.26, 20.0333, 0.0, 72.3072, 28.56, 44.3812, 37.4325, 81.1219, 167.2899, 0.0, 14.7441, 0.0, 3.6818, 4.797, 0.0, 51.411, 75.6999], [0.0, 176.5411, 727.521, 99.0196, 20.0565, 33.4379, 90.8523, 71.7901, 55.1507, 64.4736, 35.4218, 10.6559, 43.2743, 152.406, 21.3642, 156.1056, 153.6864, 24.2116, 16.149, 120.24, 196.7683, 38.6512, 48.4796, 26.1961, 22.6395, 0.0, 26.3939, 87.0642], [11.1759, 429.0754, 1184.364, 131.882, 77.7832, 0.0, 67.3463, 128.9586, 128.3861, 5.4096, 20.3771, 3.7531, 32.406, 138.8418, 156.3744, 51.744, 32.8615, 0.0, 169.9392, 89.2643, 37.7349, 38.8345, 23.9108], [16.3041, 327.0456, 826.809, 205.9089, 38.4845, 78.8642, 19.3055, 42.2947, 215.6501, 121.2121, 57.8496, 144.8296, 71.8566, 54.739, 116.4434, 25.245, 268.5984, 199.8528, 55.9009, 26.8485, 194.0674, 294.5076, 0.0, 61.1005, 65.268, 23.0644, 168.8017, 51.0619, 49.1275], [51.3597, 733.2595, 1732.221, 190.6884, 104.9504, 75.1088, 28.9078, 56.0602, 121.0885, 94.7576, 122.8752, 329.8421, 3.9229, 111.3999, 80.7592, 36.7686, 243.264, 242.1888, 92.4001, 49.3395, 252.1834, 202.5719, 10.9123, 35.6798, 29.8779, 109.8923, 40.9718, 47.9858, 95.5098], [53.3152, 612.6019, 1809.642, 391.9274, 78.4075, 25.8548, 63.3535, 138.6664, 228.3749, 95.496, 196.2484, 102.2023, 155.7345, 260.224, 16.0578, 311.472, 190.6464, 141.7125, 42.5985, 382.0426, 329.8817, 7.9831, 39.1093, 44.4185, 28.3544, 70.2585, 0.0, 186.4026, 117.4932], [37.1924, 727.5442, 1328.568, 163.9661, 35.8519, 37.8433, 71.001, 154.7263, 358.4051, 79.2672, 328.0329, 109.9349, 123.7924, 327.2798, 72.7254, 126.6048, 278.1408, 262.73, 61.0575, 198.2357, 219.2456, 16.0831, 242.4863, 31.8, 163.3129, 151.9538, 111.3349, 123.4401, 230.5152]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

