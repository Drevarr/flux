created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Name Is What", "Solus Sanctus", "Crusader Siolith", "Jerryatric Reflexes", "Sygaldry Verdandi", "Be\u00eb", "Vee Nemesis", "Avatar Shazbott", "Primal Clone", "Rahani Sunray", "Eibh\u00ebar", "Inedible Plant", "Elon Illusionblade", "Tootsie Pop Rocks", "Klengah", "Venomina The Sly", "Tegan Parker", "Drevarr Moonwillow", "Arriasa", "Zaedy Zae"];
const professions = ["Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Chronomancer", "Scrapper", "Druid", "Druid", "Tempest", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1536, 0.1837, 0.0817, 0.1967, 0.2535, 0.2375, 0.0, 0.1831, 0.0, 0.0073, 0.008, 0.0273, 0.0538, 0.0, 0.0, 0.0, 0.0488, 0.0308], [0.1599, 0.1429, 0.0254, 0.3934, 0.0282, 0.1125, 0.0, 0.1408, 0.0, 0.0073, 0.1155, 0.0586, 0.0, 0.0, 0.0108, 0.0, 0.0569, 0.0346], [0.0909, 0.1939, 0.0338, 0.2295, 0.169, 0.0125, 0.0, 0.0986, 0.0, 0.0, 0.0677, 0.1152, 0.0753, 0.0, 0.0, 0.0, 0.0976, 0.0423], [0.2449, 0.0817, 0.1148, 0.0, 0.125, 0.0, 0.169, 0.0071, 0.0876, 0.1235, 0.0781, 0.1935, 0.0294, 0.0, 0.0, 0.0, 0.0885], [0.1881, 0.2041, 0.031, 0.1967, 0.1268, 0.0625, 0.0, 0.0423, 0.0355, 0.0584, 0.0757, 0.1133, 0.0215, 0.049, 0.027, 0.2093, 0.0407, 0.0], [0.232, 0.1327, 0.0648, 0.1967, 0.0282, 0.1375, 0.0, 0.2958, 0.0426, 0.1022, 0.0478, 0.0781, 0.0, 0.049, 0.0, 0.2558, 0.0163, 0.0462], [0.0, 0.4082, 0.2451, 0.0656, 0.0141, 0.0, 0.1971, 0.1434, 0.123, 0.5376, 0.2059, 0.0811, 0.3721, 0.122, 0.0923], [0.5352, 0.6875, 0.0, 0.0284, 0.2336, 0.2072, 0.3535, 0.5269, 0.0588, 0.0541, 0.6279, 0.1626], [0.5799, 0.3776, 0.2451, 0.3607, 0.2817, 0.525, 0.0588, 0.2113, 0.0284, 0.1898, 0.0478, 0.1426, 0.5054, 0.3627, 0.0541, 0.2791, 0.0325, 0.2038], [0.6552, 0.5918, 0.1944, 0.5574, 0.0, 0.3125, 0.0, 0.169, 0.1348, 0.4234, 0.0996, 0.168, 0.2366, 0.3529, 0.0757, 0.3953, 0.1951], [0.4859, 0.4694, 0.2676, 0.918, 0.5211, 0.1375, 0.0, 0.6901, 0.0284, 0.365, 0.1713, 0.1641, 0.828, 0.2451, 0.1622, 0.2326, 0.0, 0.2385], [0.8777, 0.4694, 0.2704, 0.6393, 0.3803, 0.375, 0.0, 0.3546, 0.291, 0.3978, 0.1373, 0.0919, 0.0, 0.122, 0.2462], [0.442, 0.2449, 0.4563, 0.377, 0.662, 0.3625, 0.0, 0.5352, 0.1773, 0.5036, 0.255, 0.3809, 0.3978, 0.2451, 0.1189, 0.0, 0.1301, 0.2692], [1.0564, 0.6633, 0.5155, 0.7869, 0.5493, 0.7875, 0.0, 0.7606, 0.078, 0.4818, 0.3068, 0.3105, 0.3011, 0.0, 0.0162, 0.0, 0.2846, 0.5538], [1.3793, 1.2449, 0.3493, 0.8033, 0.4507, 1.275, 0.0, 1.169, 0.0993, 0.2555, 0.498, 0.6152, 0.5269, 0.1275, 0.0054, 0.0465, 0.1707, 0.4308], [1.6939, 0.3746, 1.918, 1.2958, 1.8625, 0.0, 0.0141, 0.0993, 0.7299, 0.1036, 0.9629, 1.0108, 0.3627, 0.0486, 0.1628, 0.5935, 0.6808], [2.185, 1.0, 0.4394, 0.9508, 0.3662, 0.9125, 0.0, 0.9577, 0.1064, 0.5328, 0.4462, 0.6699, 1.0323, 0.2353, 0.0811, 0.1628, 0.4959, 0.3154], [2.3511, 2.051, 0.9042, 1.8033, 1.4648, 1.45, 0.6176, 0.9718, 0.461, 1.2117, 1.4382, 1.6875, 1.0968, 0.6667, 0.3243, 1.1395, 0.5691, 0.5885], [3.0721, 2.3061, 0.9746, 2.0492, 1.6338, 2.2625, 0.1176, 2.0986, 0.4184, 0.6496, 0.7171, 1.5605, 1.4301, 0.6765, 0.0541, 0.4884, 0.8293, 0.6231], [2.6646, 1.9694, 1.1099, 2.2131, 1.4648, 2.0875, 0.0294, 2.1831, 0.2411, 1.1022, 1.3466, 1.7461, 1.4086, 0.5, 0.1622, 0.7442, 0.3496, 0.6577]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

