created: 20230626013408000
creator: Drevarr
modified: 20230705163538930
modifier: drevarr
tags: ChartData
title: 202306260134_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Sygaldry Verdandi", "Sub Train", "Ryvalia Fazebringer", "Miphest\u00f6", "Traidoruns Maximus", "Crusader Siolith", "Blanco Padre Guard", "Melli Dragonswrath", "Xanvias Einzbern", "Tika Fiery", "Aronorf Xideliesi", "Gestern Yesteryear", "Zayde Sunsabre", "Bella Sassy", "Koralia Danai", "Solus Sanctus", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.0614, 23.7168, 10.6373, 6.9077, 110.143, 10.2349, 5.8254, 18.8534, 5.9619, 13.3135, 8.5316, 16.3786, 15.0964, 13.6125, 23.1984, 13.3848, 12.3685, 8.4748, 5.2527, 11.1334, 12.0889, 15.4273, 21.1011, 13.655, 3.4509, 5.2003, 0.0, 18.6646, 15.7251, 13.4908, 10.4206, 12.0254], [95.9245, 15.0723, 10.0663, 21.6832, 19.0502, 22.4378, 8.64, 25.5312, 22.1832, 16.1078, 0.0, 7.6424, 13.5454, 7.2756, 25.3908, 33.8738, 30.268, 19.3536, 19.7036, 15.0696, 29.531, 12.2875, 17.0667, 14.3396, 10.5286], [76.8506, 61.5738, 81.0656, 44.9264, 62.3347, 24.1564, 21.2198, 18.7964, 35.923, 43.8109, 10.1858, 12.931, 18.8499], [16.0358, 17.7552, 7.4974, 7.5571, 116.7516, 14.9705, 11.8942, 25.9174, 4.8964, 10.0122, 13.3672, 21.6832, 27.6595, 15.3225, 28.8576, 26.8398, 14.4779, 4.6454, 15.6548, 18.9842, 20.4549, 16.3372, 19.5445, 7.6339, 13.0244, 0.0, 0.0, 24.1618, 7.509, 10.9173, 13.4547, 12.203], [29.4278, 42.2064, 21.4988, 9.1807, 153.3992, 24.4671, 0.0, 27.4925, 10.8584, 7.3062, 9.0244, 26.5232, 31.4853, 17.37, 25.2288, 30.2562, 14.0944, 5.0782, 10.8363, 23.1466, 20.9568, 28.2902, 21.1876, 20.375, 7.1245, 8.7745, 3.4202, 27.4217, 9.4594], [19.4832, 19.9289, 6.5239, 116.3511, 9.7257, 6.2057, 32.2655, 12.2283, 20.0244, 39.6396, 10.919, 59.1965, 35.46, 37.4544, 32.2452, 14.1902, 0.0, 6.3437, 12.8423, 30.6929, 15.4771, 29.4483, 27.8898, 55.2653, 21.4848, 0.0, 36.8179, 4.2421], [7.4833, 42.0979, 13.9281, 89.5444, 28.4175, 66.7872, 23.3532, 53.4052, 8.2584, 37.7824, 65.8865, 21.5843, 34.2874, 51.7583, 20.2406, 30.7243, 0.0, 46.1502, 21.7226, 14.0868, 14.3758, 20.9303], [72.6451, 34.8624, 73.66, 7.9999, 450.3847, 41.7035, 9.415, 72.836, 20.499], [0.0, 44.1072, 8.5226, 4.2804, 249.524, 51.8111, 0.0, 2.1479, 12.8626, 0.0, 11.1496, 19.7472, 72.38, 16.0875, 27.648, 4.2822, 35.188, 2.099, 31.585, 26.2222, 0.0, 35.6392, 0.0, 28.6249, 49.6474, 2.1151, 0.0, 14.7294, 12.8479, 17.0416, 0.0, 17.4821, 21.666], [24.2222, 0.0, 255.732, 41.4743, 0.0, 60.1398, 14.9176, 21.0888, 15.4924, 18.6243, 58.8346, 22.3425, 46.9584, 58.032, 68.3624, 0.0, 0.0, 15.9443, 30.2868, 17.7359, 63.3635, 58.7632, 77.9251, 9.7962, 0.0, 31.129, 24.9407, 13.6534, 21.9429, 10.0719], [61.3958, 45.1872, 13.7131, 27.9554, 291.178, 22.1502, 4.8368, 77.3226, 38.5624, 17.2643, 47.9248, 58.08, 30.1928, 27.63, 57.6288, 30.2562, 36.4344, 0.0, 31.4186, 36.0659, 38.916, 49.7777, 46.075, 39.6943, 37.3094, 15.6961, 30.2197, 3.6946, 24.2896, 90.718, 51.769, 9.1564, 74.7146], [59.8925, 80.4816, 44.9201, 18.5976, 221.4876, 50.9709, 0.0, 90.4961, 3.1712, 43.5666, 36.0052, 50.2586, 43.4797, 61.65, 81.9072, 38.1186, 43.5295, 5.2299, 6.993, 37.8444, 45.1087, 69.396, 75.0684, 45.7912, 47.0131, 42.3016, 11.9945, 0.0, 52.8618, 52.0269, 60.7087, 5.5444, 29.8351], [7.2248, 133.5008, 54.4948, 52.8572, 63.7868, 69.7734, 75.0167, 66.915, 101.0448, 71.955, 64.6231, 22.3276, 62.495, 67.3754, 39.5294, 90.3716, 35.1541, 86.2848, 59.6119, 150.4223, 0.0, 67.116, 81.478, 62.7133, 49.1051, 58.2749], [103.4381, 81.7776, 91.5062, 0.0, 514.4679, 31.5195, 45.0977, 58.0397, 15.2727, 0.0, 30.338, 10.5706, 0.0, 0.0, 41.5584, 27.0738, 84.4703, 0.0, 67.8321, 0.0, 30.1514, 0.0, 52.734, 0.0, 112.0627, 48.7582, 0.0, 8.477, 96.711, 56.1715, 60.2752, 7.3504, 52.7189], [73.9066, 57.024, 58.8575, 7.9999, 504.6552, 94.4057, 5.9167, 133.119, 61.6491, 29.7119, 20.5436, 73.1808, 52.4238, 48.555, 80.4816, 36.8784, 52.9258, 49.1674, 50.8728, 48.865, 45.5529, 96.3688, 32.7327, 31.7184, 38.0158, 31.6043, 0.0, 73.2523, 39.3249, 39.741, 16.85, 32.8288], [69.2064, 120.5712, 38.0635, 19.8965, 455.7918, 74.165, 4.9585, 145.0992, 43.332, 28.5754, 43.582, 55.2534, 67.21, 45.945, 77.2848, 52.533, 58.1992, 0.0, 41.6702, 34.0092, 104.9096, 77.6741, 85.7449, 78.6509, 37.1252, 0.0, 1.96, 25.6958, 26.9643, 51.8503, 26.5663, 31.7379], [80.1619, 114.3072, 56.5826, 30.0809, 392.3093, 55.07, 19.7122, 137.6533, 68.8034, 9.5612, 71.1788, 115.2694, 71.0875, 61.5375, 109.944, 76.284, 86.3879, 8.708, 35.3835, 64.1606, 89.809, 87.0628, 94.0038, 50.5613, 44.695, 22.057, 8.624, 32.791, 64.3144, 87.8258, 43.9761, 51.907], [112.9421, 45.792, 145.8461, 0.0, 354.0597, 134.0214, 0.0, 131.2575, 26.7653, 22.1351, 26.8268, 117.6314, 0.0, 91.4625, 77.9328, 0.0, 74.5946, 26.4865, 0.0, 48.7841, 81.6221, 139.4194, 56.2496, 149.178, 57.9802, 36.5686, 145.6084, 0.0, 63.3636, 89.6679, 33.7, 105.387], [103.2134, 164.9376, 122.9054, 4.6642, 744.5667, 101.3053, 56.6725, 120.041, 54.3425, 74.9742, 53.4688, 88.7462, 125.9412, 90.2025, 81.0864, 112.203, 101.5369, 0.0, 18.8312, 70.8083, 122.2639, 114.405, 47.3572, 73.2053, 44.2445, 37.9045, 8.8872, 23.079, 68.7779, 111.7823, 93.4334, 145.1843, 98.3087]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

