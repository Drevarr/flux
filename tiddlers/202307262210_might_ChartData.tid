created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Kahlianne", "Bork Borkbringer", "Tootsie Pop Bringer", "Legacy Of Mathus", "Venomina The Sly", "Arriasa", "Tribal S", "Elon Illusionblade", "Glorious Gluvs", "Kosa\u00edr", "Morton Saltbringer", "Seren\u00e1 Joy", "Jimbo The Pleb", "Be\u00eb", "Sister Elonith", "Zaedy Zae", "Brioche Bunbringer", "Tegan Parker", "Rozaalyna", "Xanvias Einzbern", "Primal Clone", "Klengah", "Name Is What", "Il Dim Il", "Squishy Jellyfish", "Gabe Malhorn", "Keypek The Drunk", "Koralia Danai", "Gavann", "Bubble Teabringer", "Sub Train", "Drevarr Moonwillow", "Johosh Icebringer", "Ravioli Ryebringer", "Crusader Siolith", "My Birthday Girl", "Bella Sassy", "Grasszanine", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Scourge", "Tempest", "Scrapper", "Berserker", "Druid", "Druid", "Druid", "Chronomancer", "Berserker", "Holosmith", "Chronomancer", "Chronomancer", "Berserker", "Scourge", "Berserker", "Druid", "Chronomancer", "Tempest", "Scourge", "Berserker", "Chronomancer", "Druid", "Scourge", "Scourge", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.5944, 1.8522, 8.798, 0.9675, 4.2563, 5.0784, 2.1614, 2.6784, 0.0, 10.631, 7.2725, 0.8352, 1.225, 7.5734, 1.0608, 3.78, 2.6995, 9.5472, 6.876], [27.8926, 40.6622, 0.1408, 2.0237, 6.3803, 9.896, 4.0214, 2.8616], [0.0, 6.221, 0.0, 0.7834, 2.1924, 0.3172, 4.0484, 7.08, 2.2535, 6.5002, 0.0, 18.4338, 8.8236, 1.7446, 1.8106, 1.5869, 7.4196, 1.9349, 0.0, 3.2928, 0.0, 2.0261, 0.0, 4.9858, 13.2936], [2.5465, 10.0979, 2.9568, 3.2966, 2.2529, 4.5473, 1.4494, 5.2109, 2.1104, 3.996, 4.3218, 14.6632, 0.0, 5.7408, 2.1614, 7.7376, 2.338, 19.2688, 7.7395, 3.4128, 4.7606, 7.5734], [5.5944, 0.0, 20.2492, 7.9335, 3.2186, 4.9018, 2.8454, 18.5107, 19.158, 8.6069, 0.0, 0.0, 10.4821, 0.0, 6.1387, 0.0, 9.9715, 1.4669], [0.0, 7.6636, 3.9494, 1.8446, 2.5732, 3.6985, 5.437, 1.8115, 2.1168, 12.2892, 5.0083, 4.9018, 1.9426, 9.9398, 1.568, 10.1881, 9.1406, 0.7238, 6.2014, 1.4976, 5.4432, 0.0, 16.0181, 9.7181], [1.3226, 14.4256, 0.0, 8.3232, 0.0, 1.7625, 4.5982, 5.7206, 4.4712, 2.664, 3.1752, 5.0274, 2.9025, 2.0304, 6.3149, 2.7086, 7.9757, 19.601, 8.6736, 0.0, 1.2806, 8.0125, 0.0, 2.5402, 0.0, 5.8344, 5.6842], [3.1584, 8.5652, 2.4358, 2.9376, 2.268, 3.9832, 4.8481, 8.8925, 4.7574, 1.9642, 0.924, 20.1547, 12.877, 3.096, 2.1994, 6.2014, 2.6832, 4.7779, 3.1373, 16.6546, 11.0933], [0.0, 0.541, 0.0, 4.2106, 0.6345, 8.7965, 3.9082, 0.0, 2.8771, 8.2908, 12.5685, 2.709, 1.9702, 6.0941, 4.405, 12.6778, 12.6244, 6.4051, 3.8976, 5.5978, 2.0966, 3.3264, 3.5021, 14.4269, 12.3768], [3.3163, 11.5405, 2.295, 4.4717, 3.901, 3.8422, 4.898, 9.912, 5.1858, 1.2483, 5.8733, 5.9371, 7.9162, 12.8102, 2.0736, 4.3987, 10.3174, 3.3322, 3.3869, 3.3562, 15.2755, 22.0949], [2.6827, 9.6437, 5.3802, 18.1545, 4.151, 9.8035, 4.2682, 11.6659, 1.386, 25.4702, 14.0779, 0.0, 4.1203, 5.5978, 2.2214, 4.8082, 4.3411, 12.6235, 11.0933], [3.9085, 9.7373, 2.3091, 3.1987, 3.3264, 4.8645, 7.447, 2.6054, 2.4324, 5.0616, 6.4386, 11.8703, 9.5202, 1.6845, 6.8006, 3.6662, 6.1306, 0.0, 14.064, 6.0715, 2.3184, 3.7027, 4.5002, 2.4336, 4.657, 3.6845, 13.1539, 11.8267], [5.3101, 9.557, 2.0275, 1.7626, 1.1491, 9.1298, 6.3475, 3.2851, 5.5801, 7.4059, 3.7926, 17.1769, 9.288, 8.3171, 5.4317, 3.4747, 6.1306, 1.561, 2.547, 1.3344, 0.2016, 4.0368, 13.5554, 2.3837, 3.5683, 5.2531, 13.5782, 9.7181], [1.895, 11.5405, 3.4355, 6.7565, 1.7993, 10.4429, 11.6424, 13.965, 11.7648, 5.6851, 7.7722, 5.4446, 9.4042, 0.0, 25.5809, 13.4774, 0.0, 0.0278, 4.116, 2.2963, 9.7373, 4.0858, 3.1824, 0.0], [3.7703, 9.9176, 2.5344, 2.1542, 2.2982, 4.23, 4.0484, 4.5312, 3.0405, 7.7256, 7.1442, 12.2892, 2.5929, 1.865, 5.8733, 2.5992, 9.1066, 1.449, 22.4802, 9.6744, 1.5552, 3.647, 6.7502, 1.7472, 2.5402, 4.1587, 14.8512, 9.7181], [6.3112, 0.0, 2.1869, 1.5725, 0.6345, 7.9468, 5.4374, 2.6827, 6.6067, 0.0, 20.2492, 7.1595, 1.3987, 1.0598, 2.052, 7.8566, 0.0, 14.064, 21.6173, 0.0, 0.0, 5.3234, 2.2838, 3.7195, 0.0, 28.2173, 16.5941], [3.948, 8.0242, 2.5062, 2.2848, 2.3587, 4.0185, 11.1455, 7.2499, 5.6874, 6.8198, 4.3218, 10.8927, 9.7524, 1.4589, 4.0627, 4.1861, 10.2374, 2.009, 14.1747, 11.4091, 0.2592, 4.176, 9.3296, 1.6224, 3.7195, 3.8304, 12.6235, 8.4346], [2.2522, 0.0, 2.6438, 0.0, 9.9686, 0.8227, 0.0, 32.3694, 39.9399, 5.6889, 0.0, 0.0, 0.0, 2.4998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1098, 0.0, 1.2701, 20.5747, 37.128, 22.1866], [1.4608, 15.5075, 2.281, 8.7802, 5.7458, 12.6949, 9.697, 9.702, 18.9924, 10.062, 1.8048, 6.6682, 7.7976, 10.8922, 2.45, 9.8559, 13.0104, 2.808, 2.617, 11.1406, 1.9219, 6.9854, 3.2832, 11.881], [6.0602, 10.5487, 0.1267, 5.0266, 4.3243, 2.5732, 8.0968, 11.3846, 5.1867, 3.6763, 9.261, 10.1944, 3.5991, 0.6317, 9.1411, 3.3379, 7.559, 0.0, 28.5709, 12.9437, 0.0, 4.8442, 11.6346, 1.585, 5.9573, 3.3562, 11.4566, 10.3598], [4.027, 9.8274, 2.3373, 5.5814, 3.024, 4.4415, 7.8968, 4.8144, 2.647, 3.037, 9.7902, 17.8752, 9.3267, 1.3386, 5.9174, 6.1834, 8.809, 1.785, 20.5976, 8.6736, 2.5776, 3.5635, 8.8906, 2.0842, 4.536, 6.5299, 13.5782, 13.0186], [4.3428, 17.1304, 3.0694, 3.5904, 0.9979, 11.0332, 7.447, 5.4374, 4.2924, 1.705, 4.1454, 35.4711, 8.0109, 2.5418, 2.1638, 1.7784, 2.6189, 0.91, 16.3895, 1.5346, 0.0, 5.0669, 5.1587, 1.7846, 5.2618, 4.1587, 34.9003, 17.0525], [3.415, 16.7698, 3.0835, 6.528, 1.7993, 4.653, 8.0968, 6.6067, 7.056, 22.763, 11.4939, 2.6771, 9.4061, 6.5938, 8.3328, 0.0, 20.5976, 11.1422, 4.6224, 4.9555, 12.8419, 2.2214, 8.1648, 3.9763, 18.564, 14.1187], [2.4478, 15.4174, 2.1261, 6.169, 6.4714, 4.9702, 11.8952, 10.1232, 12.4362, 21.2268, 8.7075, 8.3472, 10.0685, 6.4296, 11.6659, 1.778, 19.0473, 14.9453, 2.2464, 3.48, 14.2688, 3.095, 10.463, 3.8669, 11.881, 13.0186], [4.5994, 23.5318, 5.2096, 4.3085, 0.0, 12.5137, 9.6961, 12.6307, 7.1898, 2.2378, 21.0798, 18.1545, 6.8886, 2.6621, 8.1254, 0.4104, 5.2973, 1.54, 19.4902, 14.9453, 1.2096, 4.6493, 7.3539, 4.8797, 6.9552, 2.4806, 16.2302, 13.6603], [1.7582, 36.2502, 40.9174, 0.5031, 3.6998, 0.7949, 7.3872, 7.321, 1.526, 25.3595, 13.6776, 2.4192, 5.1782, 19.4275, 5.5162, 7.6507, 7.1866, 27.6869, 30.8045], [0.0, 14.4256, 0.5632, 2.4806, 2.7065, 7.755, 3.7485, 16.7654, 8.9067, 9.4838, 12.7008, 26.6731, 11.8035, 3.0381, 10.775, 5.6909, 13.3325, 1.386, 28.7924, 13.4774, 1.8288, 3.7027, 8.2869, 2.5085, 3.9614, 4.8883, 9.4411, 16.319], [5.6456, 32.3674, 6.9978, 6.2016, 0.0, 15.0517, 3.1487, 9.2323, 1.1089, 2.291, 20.4624, 15.7805, 5.6502, 1.1731, 4.4602, 3.9125, 8.3923, 19.2688, 12.5434, 0.5328, 8.2128, 13.8298, 5.7283, 6.048, 10.9075, 24.3984, 19.4362], [0.0, 0.0, 0.0, 0.0, 13.4303, 11.8952, 10.4784, 9.0856, 19.2874, 32.634, 47.3414, 7.1891, 5.6083, 7.3598, 17.4989, 23.0339, 18.0811, 2.5488, 11.4422, 6.0368, 0.0, 9.072, 11.8925, 37.6584, 32.5464], [6.9682, 17.491, 6.688, 5.0266, 17.6602, 11.4954, 8.8358, 8.2629, 3.1435, 15.2586, 36.309, 7.1595, 0.0, 9.3178, 5.6362, 17.7965, 31.6716, 17.7475, 4.0032, 3.2016, 18.4397, 2.2963, 13.2754, 16.343, 30.9754, 43.4563], [4.5007, 19.2942, 6.6739, 14.3942, 0.0, 21.0795, 9.6961, 18.408, 2.9331, 7.1928, 27.6948, 48.5982, 3.4443, 6.3469, 9.7152, 7.9344, 8.2138, 0.294, 28.3494, 19.6157, 4.4208, 0.0, 13.9944, 7.8749, 18.265, 8.5728, 33.3091, 36.4886], [18.1608, 29.0315, 4.9984, 4.896, 3.2357, 6.2392, 11.4954, 19.5974, 8.4059, 7.6723, 21.0798, 37.7055, 15.6348, 7.0538, 10.9958, 10.6157, 17.975, 1.484, 31.0072, 23.6856, 3.9312, 3.0902, 14.1042, 3.145, 8.9208, 3.648, 42.1138, 31.7213], [10.1661, 29.7528, 5.3082, 5.3203, 11.4761, 18.0128, 7.1971, 15.9158, 9.6937, 3.4632, 33.4278, 43.2915, 7.7013, 2.5117, 9.5827, 11.8469, 7.6186, 35.2153, 20.1494, 1.4256, 0.0, 15.092, 2.1091, 10.2514, 18.167, 43.1746, 40.7059], [5.8825, 29.4823, 7.3357, 6.6912, 1.7842, 17.3078, 15.2939, 12.2909, 2.4324, 3.5165, 60.1524, 42.1743, 13.0419, 4.9632, 18.5472, 10.9987, 12.4992, 42.0812, 17.2805, 3.816, 10.3565, 18.3299, 3.0451, 11.6424, 12.2573, 31.9301, 57.9418], [4.6389, 28.5807, 9.8138, 11.2934, 5.292, 18.612, 9.946, 6.4003, 7.5117, 1.5451, 34.3098, 52.648, 12.8484, 3.9254, 6.0941, 7.9891, 10.1184, 31.7824, 24.4195, 2.808, 5.5123, 16.2445, 5.5661, 17.267, 23.9674, 73.3013, 49.5989], [6.9682, 18.573, 0.0, 16.9075, 7.9834, 11.4563, 19.0424, 30.1325, 16.0607, 8.365, 5.2038, 50.274, 18.1503, 7.0838, 12.0557, 10.3694, 27.3197, 0.994, 43.4101, 29.7571, 2.2896, 4.7328, 21.7325, 1.2605, 14.9083, 12.1114, 70.331, 30.3461], [5.0534, 21.8187, 7.5046, 5.5488, 4.9291, 16.7438, 12.1951, 9.6288, 6.7963, 2.6107, 62.5338, 37.8452, 11.4552, 1.6243, 19.7395, 9.4666, 19.344, 5.572, 41.9705, 18.6816, 1.7856, 8.352, 22.6106, 5.7658, 15.8458, 13.607, 65.1331, 51.7992], [12.2388, 27.9496, 0.8589, 11.6198, 9.4198, 21.996, 23.2907, 27.5837, 18.5289, 20.5661, 30.6054, 77.0868, 23.9166, 10.0166, 29.9846, 21.8059, 37.8547, 3.059, 79.7328, 42.7008, 4.464, 13.7251, 27.0558, 3.7939, 16.5413, 10.5792, 103.428, 65.2762], [6.6721, 30.8347, 12.8691, 16.6138, 1.4364, 35.1795, 29.1883, 24.8083, 15.0234, 19.5538, 41.013, 145.3756, 30.9987, 23.1398, 21.5323, 46.4851, 6.454, 88.8135, 61.1155, 7.92, 3.3686, 41.5442, 2.496, 19.8374, 12.9504, 113.7178, 86.0875], [29.8864, 58.7843, 9.8419, 19.127, 5.0198, 32.148, 25.8397, 37.1558, 14.8445, 37.9886, 41.3658, 132.6675, 44.118, 13.4157, 41.1571, 28.2082, 46.9018, 5.047, 100.3304, 62.183, 6.6528, 16.1194, 23.763, 1.8595, 30.2098, 22.0704, 114.6725, 90.4882]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

