created: 20230318225613000
creator: Drevarr
modified: 20230705163522447
modifier: drevarr
tags: ChartData
title: 202303182256_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["S\u00edzz", "X Plays With Fire", "S\u00edzz", "Kmpek", "Oo Dads Mad", "S\u00edzz", "Ark Darkness", "Lord Erin The Wise", "Cerys Fireblade", "Sp\u00edcy Cheese", "Gavann", "Nelliel T", "Demon Sekhmet", "Blanco Padre Guard", "Koralia Danai", "Sumatra Satyricon", "Zaylen Harker", "Jupi Jupi Jupi", "High Sorcer Baradun", "Hyde En Sikh", "Xanvias Tseli", "Primal Clone", "Aronorf Xideliesi", "Legacy Of Mathus", "Zadie Miststep", "Venomina The Fierce", "Bella Sassy", "Tegan Parker", "Rina Of Theros", "Dark Sidiuz", "Newtype Khan", "Johosh The Great", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Morv\u00e4rth", "Boysto Yardbringer", "Nazhul Naxxremis", "\u00c1rkantor", "Be\u00eb", "Flower Redrose", "Smol Gluvs"];
const professions = ["Firebrand", "Holosmith", "Dragonhunter", "Vindicator", "Spellbreaker", "Willbender", "Firebrand", "Weaver", "Berserker", "Berserker", "Firebrand", "Reaper", "Spellbreaker", "Firebrand", "Firebrand", "Soulbeast", "Firebrand", "Dragonhunter", "Tempest", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Tempest", "Spellbreaker", "Firebrand", "Tempest", "Scourge", "Scourge", "Spellbreaker", "Firebrand", "Scrapper", "Scrapper", "Scourge", "Vindicator", "Scourge", "Vindicator", "Scourge", "Scrapper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6563, 7749, 331, 839, 5646, 0, 996], [7141, 1329, 3810, 0, 5452, 1228, 1589, 495, 1107], [833, 6564, 738, 5358, 7753, 3519, 1109, 0], [2178, 1188, 2183, 3609, 5915, 0, 0, 0, 1435, 2427, 2708, 5950, 0], [0, 4262, 0, 8357, 5880, 3532, 0, 2377, 4320], [1102, 14730, 5658, 1248, 5177, 1109], [0, 11338, 5495, 10906, 2604], [870, 11674, 0, 814, 11225, 3032, 0, 275, 2195, 1378, 9269, 1196, 2441, 0, 0], [0, 0, 0, 2756, 12119, 3015, 0, 0, 1116, 6857, 0, 1895, 811, 0, 3513, 655, 0, 1810, 0, 2995, 4813, 1209, 3757], [0, 1206, 4878, 13489, 3897, 0, 1113, 2167, 13504, 2285, 1097, 1096, 0, 1206, 1107, 3382], [0, 3014, 0, 4818, 22104, 8489, 0, 0, 4639, 8533], [0, 4433, 0, 2682, 18199, 3127, 0, 1113, 1116, 8127, 4418, 0, 4226, 0, 0, 0, 1099, 0, 1248, 1107, 1107, 803], [903, 4492, 0, 6325, 7856, 7927, 0, 0, 9367, 9844, 1081, 6453, 0, 3070, 0], [0, 0, 0, 1271, 15716, 1248, 0, 0, 5715, 4371, 5682, 0, 1631, 4871, 9130, 0, 0, 0, 2261, 5452, 1831, 0], [0, 6293, 1109, 7714, 2920, 0, 7603, 0, 346, 6549, 1823, 2188, 1097, 2334, 0, 1099, 1109, 5926, 2213, 7974, 1374], [0, 2960, 0, 8169, 13622, 0, 0, 1105, 4203, 4749, 11353, 1188, 4289, 0, 1089, 0, 0, 0, 0, 3638, 956, 1248, 3235], [0, 7296, 0, 1172, 15249, 3594, 0, 6564, 4870, 2314, 3297, 0, 2185, 2198, 202, 2215, 4804, 3571, 3899, 837, 4416, 3038], [27, 3291, 0, 1408, 26124, 5076, 1131, 0, 3756, 3240, 8730, 719, 258, 3384, 1326, 904, 0, 0, 3774, 8578], [0, 1109, 248, 11143, 1780, 594, 6724, 1930, 11955, 10597, 3058, 6885, 0, 0, 1734, 2198, 5037, 2024, 4050, 1248, 3066], [715, 2466, 0, 6530, 17219, 8444, 0, 0, 4264, 6184, 6575, 3519, 1197, 2552, 6089, 0, 0, 1563, 1248, 5729, 1107, 2102, 695], [10, 7241, 0, 6819, 10983, 3331, 0, 0, 3201, 5229, 4778, 3384, 3058, 166, 5860, 0, 0, 595, 4831, 5792, 1248, 5702, 7555], [624, 9748, 0, 4270, 17007, 2674, 0, 275, 2693, 8659, 9210, 9045, 0, 2703, 3903, 0, 0, 0, 0, 2733, 0, 4365, 1925], [0, 6823, 0, 3436, 16159, 10047, 0, 0, 4920, 5070, 6944, 5462, 508, 393, 6085, 0, 0, 1097, 1878, 1107, 2206, 5644, 2212], [0, 4957, 0, 2102, 28838, 3602, 0, 0, 4485, 1388, 9866, 2196, 1612, 2193, 2284, 22, 0, 0, 0, 7903, 5738, 3566, 4583], [0, 2295, 0, 9011, 16366, 11385, 0, 1103, 6512, 2194, 3431, 2258, 1127, 5632, 1105, 2974, 3295, 890, 1111, 4958, 4749, 6040], [0, 1460, 0, 3442, 19583, 13369, 392, 10509, 8451, 6942, 4505, 4284, 3150, 0, 0, 0, 1099, 1871, 2216, 2348, 4165, 4436], [323, 2376, 0, 4261, 13853, 3138, 0, 0, 5320, 9909, 3393, 9579, 2058, 5180, 1321, 0, 0, 1097, 3415, 9122, 3424, 8011, 8222], [0, 0, 9331, 14469, 14470, 0, 275, 7402, 8584, 5895, 3359, 3747, 0, 5401, 128, 2194, 2218, 9888, 3226, 2936, 692], [0, 8018, 181, 5790, 25530, 5300, 0, 0, 3887, 3165, 7225, 5734, 3231, 5208, 0, 0, 1099, 5699, 0, 2248, 6100, 0, 10546], [0, 8643, 38380, 16387, 0, 1116, 8768, 16386, 0, 0, 408, 4188, 5836, 0, 1097, 0], [483, 5490, 0, 10240, 26489, 8787, 0, 0, 10779, 9711, 8894, 11875, 5717, 1097, 0, 0, 2287], [1009, 4153, 0, 7600, 19448, 5942, 0, 1245, 9898, 14345, 9180, 14439, 896, 6465, 12820, 0, 210, 3071, 0, 4123, 1710, 4341, 0], [970, 8078, 180, 4268, 17209, 9801, 691, 0, 8603, 12505, 5146, 4874, 1027, 2391, 8905, 1101, 678, 7149, 5867, 6202, 7201, 9131, 3347], [248, 1841, 0, 15330, 42597, 17619, 3428, 0, 2596, 2990, 22751, 8682, 1688, 6817, 0, 0, 0], [7501, 20722, 6849, 1113, 0, 6574, 13045, 16624, 5173, 7951, 6900, 7156, 0, 1364, 0, 5668, 7859, 4908, 10465], [1009, 11488, 0, 8955, 23924, 15892, 551, 0, 6703, 6229, 10143, 1122, 3593, 1841, 1097, 1963, 3176, 2213, 9572, 11471, 9702, 1366], [1211, 15124, 0, 19540, 14794, 11504, 357, 0, 11364, 22710, 9988, 7917, 4228, 4423, 11546, 0], [0, 10633, 0, 8189, 23989, 11028, 0, 11368, 10928, 10203, 4076, 707, 3160, 11543, 2210, 473, 7538, 5767, 5664, 10576, 7122, 6392], [853, 5074, 0, 7939, 31953, 4443, 0, 0, 15167, 18138, 5475, 11194, 3611, 6661, 19977, 0, 0, 11541, 2089, 16066, 9051, 2226, 4822], [9, 11451, 0, 3465, 11671, 29856, 429, 11040, 8423, 7664, 10542, 58, 4471, 9586, 1291, 18090, 7531, 23186, 14968, 3438], [0, 10416, 0, 10841, 31610, 16187, 0, 0, 14448, 10883, 17901, 12689, 2413, 2624, 16116, 0, 0, 5440, 2379, 10385, 3487, 6307, 3566]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

