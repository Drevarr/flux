created: 20230607222341000
creator: Drevarr
modified: 20230705163534478
modifier: drevarr
tags: ChartData
title: 202306072223_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Arriasa", "Tootsie Pop Rocks", "Eibh\u00ebar", "Belvyn Brightblade", "Kaehln Lao", "Tegan Parker", "Primal Clone", "Venomina The Siren", "Ryvalia Fazebringer", "Blanco Padre Guard", "Grasszanine", "Uneeta Healah", "Artakama Nahid", "Crusader Siolith", "Newtype Khan", "Gabe Malhorn", "Sub Train", "Zayde Sunsabre", "Rafaellagabriela", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Drevarr Moonwillow", "Johosh The Great", "Etcherii"];
const professions = ["Dragonhunter", "Druid", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[147.4155, 51.198, 859.183], [79.5195, 137.356, 757.7675, 39.3325, 68.5901, 30.5359, 0.0, 0.0, 8.3754, 14.7984, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 839.8115, 0.4558, 101.1264, 1.2352, 0.0, 64.1617, 0.0, 81.3485, 0.0, 0.0, 0.0, 69.0501], [0.0, 13.708, 829.556, 9.4424, 222.2582, 43.1277, 0.0, 48.1399, 0.0, 87.3791, 30.1654, 90.1126, 51.336, 138.8705], [75.7373, 173.972, 1352.5865], [155.3763, 464.9616, 130.7211, 49.518, 65.6024, 91.4695, 242.8053, 150.2222, 32.6687, 75.1824, 241.0426], [48.708, 14.858, 1275.1005, 146.5851, 114.8664, 44.2599, 0.0, 64.8821, 12.1063, 60.6051, 0.0, 60.9422, 103.9968, 52.4341], [16.5128, 25.806, 1280.798, 75.1485, 209.1778, 25.0806, 0.0, 158.6531, 0.0, 75.318, 0.0, 96.4096, 0.0, 47.0421], [28.52, 1162.29, 214.7658, 283.7035, 31.2907, 37.6404, 121.716, 20.469, 53.5908, 0.0, 0.0, 15.5296, 104.3729], [0.0, 0.92, 1376.516, 56.3939, 334.2667, 71.8795, 0.0, 0.0, 0.0, 0.0, 53.2667, 0.0, 209.0976, 160.9335], [357.0998, 193.568, 2128.586, 149.776, 154.8773], [258.3922, 152.122, 2086.4245, 6.3818, 208.0786, 70.1296, 0.0, 38.5765, 0.0, 21.3422, 0.0, 53.5688, 0.0, 124.5103], [141.696, 63.158, 2545.643, 61.9942, 49.6838, 0.0, 0.0, 37.2848, 16.1417, 0.0, 0.0, 31.8794, 8.7216, 89.4625], [44.649, 47.886, 2619.7105, 209.4259, 202.033, 59.5965, 0.0, 49.4316, 11.0784, 41.7435, 0.0, 13.4012, 18.1792, 21.953], [126.567, 167.302, 2010.078, 189.2387, 293.9261, 102.0723, 0.0, 152.8654, 53.9579, 148.9251, 9.8642, 58.1974, 68.6688, 38.0738], [129.2422, 309.626, 2316.6035, 130.6307, 190.3814, 34.2757, 12.726, 41.2592, 21.7507, 40.3321, 80.425, 11.069, 9.9728, 145.1978], [2307.4875, 690.6627, 55.8394, 75.5163, 7.5012, 149.2387, 120.2631, 319.6202, 45.2003, 0.0, 132.48, 137.44], [3432.174, 136.9474, 275.5694, 33.6238, 44.6544, 149.512, 50.1128, 162.7826, 105.0855, 34.7677, 37.5728, 72.0212], [317.6168, 168.406, 3464.08, 278.1926, 34.9546, 54.4157, 0.0, 103.8064, 0.0, 89.9025, 22.8017, 84.9344, 120.4388], [3603.099, 260.9358, 223.6872, 121.8691, 29.8536, 87.561, 39.0852, 108.593, 35.4475, 76.0835, 110.4, 64.3734], [367.4318, 267.536, 3328.4795, 185.3966, 125.5286, 115.659, 49.1064, 26.9762, 27.0551, 98.4565, 14.0485, 28.0402, 116.5088, 105.3633], [302.3032, 369.702, 3355.8275, 188.5875, 344.2694, 164.9625, 61.9248, 83.0401, 61.483, 28.3993, 119.2295, 61.3548, 91.1904, 103.9878], [961.245, 111.826, 4012.1795, 483.4509, 247.9795, 129.932, 47.334, 35.9186, 18.4259, 28.3137, 0.0, 46.3749, 56.856, 101.2918], [294.0007, 171.994, 5541.3885, 414.8144, 347.7869, 120.7369, 50.8872, 75.1907, 42.7272, 105.428, 10.8824, 0.0, 46.4784, 89.0774], [829.2353, 257.692, 5233.7235, 416.247, 234.899, 68.2426, 35.7084, 54.2506, 74.6299, 226.3816, 120.1682, 27.8249, 125.5984, 221.4005], [1246.113, 453.192, 7121.875, 22.5966, 456.2779, 148.8711, 0.0, 137.3155, 104.223, 294.3431, 0.0, 85.0894, 30.728]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

