created: 20230531221142000
creator: Drevarr
modified: 20230705163532416
modifier: drevarr
tags: ChartData
title: 202305312211_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Crusader Siolith", "Sygaldry Verdandi", "Solus Sanctus", "Grasszanine", "Gavann", "Black Raspberry Pie", "Miphest\u00f6", "Primal Clone", "Eibh\u00ebar", "Cat Wigglebooty", "Venomina The Siren", "Etchery Of Ascalon", "Tegan Parker", "Artakama Nahid", "Johosh Of The North", "Tribal S", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.0468, 7.0035, 0.0, 58.9962, 21.0, 0.0, 0.0, 8.9892, 7.992, 0.0, 1.0, 0.9959, 37.7986, 0.0, 0.0], [47.1493, 10.5654, 2.9778, 58.1278, 14.9978, 0.0, 0.9891, 0.0, 11.988, 6.9883, 0.0, 15.1107, 20.7201, 0.0, 0.0], [57.1795, 13.0106, 0.0, 65.1026, 17.0, 0.0, 0.9891, 0.0, 13.988, 0.0, 3.0, 9.9959, 19.314, 0.0], [66.3967, 11.0212, 0.0, 79.1115, 10.9978, 0.0, 0.9891, 10.9838, 11.988, 9.9883, 2.0, 13.5205, 26.942, 0.0, 0.0], [56.0633, 9.0071, 0.0, 87.0497, 17.9978, 3.963, 0.0, 6.9892, 4.996, 0.0, 7.0, 29.9877, 8.9966, 3.9844, 0.0], [97.6546, 35.5724, 0.0, 88.1732, 45.0329, 0.0, 0.0, 0.0, 1.996, 0.9942, 8.0, 12.9754, 11.1126, 0.0, 0.0], [104.4766, 48.4912, 0.0, 148.3218, 47.1842, 0.0, 5.9891, 13.0108, 53.24, 13.9883, 21.0571, 45.4795, 51.9454, 0.9844, 1.1667], [124.537, 39.6219, 0.9889, 161.0214, 59.0768, 0.0, 9.9891, 13.9838, 39.032, 6.9883, 6.0, 44.5164, 44.7918, 0.0], [111.3107, 14.0247, 35.9333, 179.6568, 50.0351, 0.0, 0.9891, 8.0108, 35.144, 4.9942, 31.15, 24.2664, 31.6109, 0.0, 0.0], [135.6953, 35.318, 14.9111, 173.3904, 77.1952, 0.0, 0.0, 26.1189, 81.28, 6.0, 10.0071, 17.0656, 52.3447, 0.0, 0.0], [239.1885, 82.3958, 4.9667, 268.4005, 143.7961, 11.9074, 0.0, 52.1351, 63.62, 26.1579, 3.0, 48.0779, 90.8874, 1.9844, 0.0], [229.8401, 94.7244, 17.9, 321.3904, 144.6754, 0.0, 13.9891, 42.0757, 94.504, 19.0, 28.0143, 68.2172, 106.2628, 2.9844, 0.0], [284.7496, 107.3852, 22.9, 326.3193, 181.0241, 8.0556, 42.2935, 73.5081, 142.496], [269.8869, 134.3922, 24.0889, 346.3186, 136.5219, 18.8704, 4.9891, 44.0324, 115.712, 31.9942, 32.2071, 131.6639, 140.5119, 3.9844, 0.0], [303.6742, 149.5018, 31.9667, 376.7229, 219.2675, 23.9074, 48.2391, 54.3135, 144.436, 66.4503, 80.3714, 127.4385, 137.7952, 20.0156, 2.0], [334.9804, 196.1555, 20.8778, 426.3375, 6.9978, 24.037, 64.3913, 79.9351, 167.836, 54.4152, 73.4929, 159.3279, 153.9795, 18.9531, 0.0], [387.7376, 175.3534, 53.8, 397.7827, 216.0044, 7.9259, 26.0, 67.5351, 140.6, 56.1871, 59.0643, 131.5, 148.9488, 14.0312, 0.0], [362.1131, 195.2403, 47.9889, 404.0497, 273.511, 18.8519, 56.2174, 59.5514, 116.664, 58.8421, 48.0571, 129.4672, 121.8328, 6.9688, 0.0], [332.7617, 174.4664, 59.9778, 411.3835, 230.9123, 30.7593, 60.3696, 78.4, 153.952, 70.0936, 78.8214, 195.7869, 132.6007, 19.1406, 1.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

