created: 20230506220820000
creator: Drevarr
modified: 20230705163528983
modifier: drevarr
tags: ChartData
title: 202305062208_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Surethang Jr", "Skylar Shadowmoon", "Rock Danger", "Freylk Nasferatu", "Sub Train", "Im Killin It", "Permanent Dawn", "Vanhelsing Wizard", "My Birthday Girl", "Ever Moore", "Grilo Gringo", "High Sorcer Baradun", "Ria Zerria", "Audrinafa", "Na Ting Wong", "Kosa\u00efr", "Zaidy Sagemist", "Lord Erin The Wise", "Lil Red Robin", "Orangeluv", "Guard Ferro", "Kmpek", "Abigail Ryn", "Sygaldry Verdandi", "Husky Guard", "Dargon Spiritwalker", "Mammary Mission", "Xanvias Einzbern", "Johoshua", "Bella Sassy", "Cerys Fireblade", "Puny Demon", "Jupi Jupi Jupi", "Miphest\u00f6", "Koralia Danai", "Artakama Nahid", "Rina Of Theros", "Arriasa", "Artofliving", "Drevarr Moonwillow", "Smol Gluvs", "Newtype Khan", "Hyde En Sikh", "Ark Darkness", "Blancooo Padreee", "Tootsie Pop Rocks", "Aronorf Xideliesi", "Be\u00eb", "Smol Daddy Tika", "Antherisa"];
const professions = ["Chronomancer", "Scrapper", "Renegade", "Scourge", "Firebrand", "Scourge", "Weaver", "Chronomancer", "Scrapper", "Firebrand", "Dragonhunter", "Tempest", "Scourge", "Firebrand", "Scrapper", "Weaver", "Vindicator", "Weaver", "Firebrand", "Soulbeast", "Willbender", "Vindicator", "Catalyst", "Firebrand", "Dragonhunter", "Scourge", "Scourge", "Berserker", "Scrapper", "Firebrand", "Berserker", "Scourge", "Firebrand", "Tempest", "Firebrand", "Tempest", "Scourge", "Druid", "Herald", "Scrapper", "Scourge", "Spellbreaker", "Chronomancer", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Scourge", "Spellbreaker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0268, 0.0205, 0.0103, 0.0, 0.0617, 0.0365], [0.0401, 0.0308, 0.0154, 0.0063, 0.0617, 0.0208], [0.0443, 0.0913, 0.0287], [0.0401, 0.0171, 0.0077, 0.05, 0.0206, 0.0443, 0.0714], [0.0063, 0.0494, 0.0182, 0.0873, 0.0317], [0.0128, 0.0125, 0.0988, 0.0339, 0.0595, 0.0278], [0.0134, 0.0103, 0.0063, 0.0658, 0.0391, 0.0913, 0.0099, 0.0147, 0.0, 0.0, 0.0405, 0.0366], [0.0753, 0.058, 0.0494, 0.0118, 0.0, 0.0833, 0.0], [0.0234, 0.0291, 0.0179, 0.0063, 0.0165, 0.0234, 0.0317, 0.0416], [0.026, 0.0238, 0.0456, 0.0435, 0.0, 0.0442, 0.0, 0.0, 0.0878, 0.0244], [0.0339, 0.0198, 0.0515, 0.0, 0.0864, 0.0236, 0.0, 0.0811, 0.0122], [0.0268, 0.0, 0.0179, 0.0063, 0.0288, 0.0781, 0.0556, 0.0307, 0.0435, 0.0123], [0.0, 0.0714, 0.0435, 0.037, 0.0206, 0.0, 0.0417, 0.0608, 0.0854], [0.0412, 0.0443, 0.0476, 0.0406, 0.0, 0.0617, 0.0206, 0.0, 0.0417, 0.0743, 0.0244], [0.0, 0.013, 0.0714, 0.0714, 0.029, 0.0494, 0.0383], [0.0128, 0.0063, 0.0206, 0.0156, 0.0635, 0.0743, 0.0247, 0.0236, 0.0, 0.0, 0.0878], [0.0167, 0.0274, 0.0154, 0.0063, 0.0412, 0.0208, 0.0357, 0.0545, 0.058, 0.0247, 0.0265, 0.0, 0.0, 0.0541], [0.0437, 0.0922, 0.0247, 0.0354, 0.0, 0.0833, 0.0608, 0.0488], [0.0, 0.0494, 0.0234, 0.0476, 0.0694, 0.0145, 0.0617, 0.0383, 0.0, 0.0417, 0.0608, 0.0366], [0.0, 0.0516, 0.0773, 0.0, 0.037, 0.0708, 0.0159, 0.0811, 0.0854], [0.0547, 0.0516, 0.1041], [0.0103, 0.0063, 0.0576, 0.0286, 0.0516, 0.0783, 0.0145, 0.0123, 0.0206, 0.0, 0.0, 0.1014, 0.0122], [0.012, 0.0128, 0.0063, 0.0288, 0.0156, 0.0675, 0.0694, 0.0435, 0.0123, 0.0413, 0.0, 0.0, 0.0676, 0.0976], [0.0502, 0.0085, 0.0187, 0.0288, 0.013, 0.0476, 0.0664, 0.0435, 0.0617, 0.059, 0.0, 0.0, 0.0608, 0.0366], [0.0234, 0.0222, 0.0179, 0.0, 0.0165, 0.013, 0.0556, 0.0862, 0.0435, 0.037, 0.0324, 0.0, 0.0, 0.0135, 0.0122], [0.0201, 0.0308, 0.0154, 0.0063, 0.0535, 0.0234, 0.0516, 0.0605, 0.058, 0.1358, 0.0147, 0.0, 0.0417, 0.0608, 0.0122], [0.0368, 0.0154, 0.0051, 0.0063, 0.0617, 0.0234, 0.0516, 0.0803, 0.0, 0.037, 0.0088, 0.0, 0.0, 0.0541, 0.0366], [0.0167, 0.0205, 0.0103, 0.0, 0.0617, 0.0182, 0.0278, 0.0882, 0.0435, 0.0, 0.0265, 0.0, 0.0, 0.0541, 0.0244], [0.0521, 0.0595, 0.0951, 0.029, 0.0123, 0.0295, 0.0, 0.0, 0.1081, 0.0244], [0.0268, 0.0325, 0.0231, 0.0, 0.0576, 0.013, 0.0675, 0.0674, 0.0145, 0.0617, 0.0177, 0.0, 0.0417, 0.0608, 0.0976], [0.0268, 0.0564, 0.0282, 0.0, 0.0576, 0.0365, 0.1151, 0.0327, 0.029, 0.0494, 0.0265, 0.0, 0.0, 0.0878, 0.0], [0.0268, 0.0359, 0.0154, 0.0187, 0.0576, 0.013, 0.0675, 0.0773, 0.0145, 0.0494, 0.0531], [0.0201, 0.0325, 0.0231, 0.0, 0.0864, 0.0286, 0.0516, 0.0714, 0.0145, 0.0741, 0.0413, 0.0, 0.0, 0.0338, 0.0244], [0.0368, 0.0325, 0.0333, 0.0, 0.0182, 0.0556, 0.1011, 0.0145, 0.0247, 0.0383], [0.0301, 0.0256, 0.0128, 0.0, 0.1193, 0.013, 0.0754, 0.0773, 0.0, 0.0864, 0.0177, 0.0, 0.0, 0.0878, 0.0122], [0.0569, 0.0444, 0.0103, 0.0, 0.0494, 0.0286, 0.0476, 0.0813, 0.0145, 0.037, 0.0265, 0.0, 0.0417, 0.0473, 0.0244], [0.0368, 0.0393, 0.0231, 0.0, 0.0329, 0.0156, 0.0833, 0.0803, 0.0145, 0.1358, 0.0206, 0.0, 0.0417, 0.0608, 0.0122], [0.0334, 0.0325, 0.0128, 0.0, 0.0905, 0.026, 0.0714, 0.0842, 0.029, 0.0, 0.0265, 0.0, 0.0, 0.0541, 0.0122], [0.0401, 0.0222, 0.0256, 0.0, 0.0535, 0.013, 0.0794, 0.0803, 0.1014, 0.0494, 0.0324, 0.0, 0.0, 0.0811, 0.0366], [0.0435, 0.0256, 0.0205, 0.0, 0.0658, 0.0026, 0.0556, 0.0902, 0.0435, 0.0494, 0.0295, 0.0, 0.0417, 0.0946, 0.0366], [0.0167, 0.0359, 0.0154, 0.0063, 0.0576, 0.0156, 0.0278, 0.0842, 0.029, 0.0864, 0.0472, 0.0, 0.1216, 0.0732], [0.0201, 0.0239, 0.0128, 0.0063, 0.0576, 0.0208, 0.0635, 0.0892, 0.0435, 0.0741, 0.0413, 0.0, 0.0, 0.1081, 0.0122], [0.0201, 0.0222, 0.0179, 0.0063, 0.0576, 0.0078, 0.0437, 0.0862, 0.0725, 0.037, 0.0324, 0.0, 0.0833, 0.1419, 0.1341], [0.0201, 0.0291, 0.0205, 0.075, 0.07, 0.026, 0.0635, 0.0763, 0.029, 0.0123, 0.0265, 0.0, 0.0417, 0.0608, 0.122], [0.0301, 0.0393, 0.0051, 0.0125, 0.0288, 0.026, 0.0397, 0.0842, 0.0725, 0.0494, 0.0619, 0.0, 0.0, 0.1284], [0.0234, 0.012, 0.0231, 0.0, 0.0782, 0.0339, 0.0754, 0.0882, 0.0, 0.0617, 0.0649, 0.0, 0.0417, 0.0405, 0.0], [0.0368, 0.0291, 0.0256, 0.0063, 0.0741, 0.0755, 0.0595, 0.0674, 0.0494, 0.0649, 0.0, 0.0, 0.0608, 0.0244], [0.0234, 0.0342, 0.0205, 0.0125, 0.0535, 0.0365, 0.0635, 0.0842, 0.0, 0.0494, 0.0619, 0.0, 0.0, 0.1081, 0.0366], [0.0334, 0.0479, 0.0179, 0.0063, 0.0988, 0.026, 0.0397, 0.0892, 0.0435, 0.0864, 0.0531, 0.0, 0.0, 0.0405, 0.0488], [0.0, 0.0864, 0.0104, 0.0556, 0.1328, 0.087, 0.037, 0.0767, 0.0, 0.0, 0.0608, 0.061]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

