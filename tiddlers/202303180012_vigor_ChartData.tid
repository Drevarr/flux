created: 20230318001239000
creator: Drevarr
modified: 20230705163522437
modifier: drevarr
tags: ChartData
title: 202303180012_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Grasszanine", "Zadie Miststep", "Arcanophage Farra", "Zefirokai", "Solus Dominus", "Fribble Bibble", "Newtype Khan", "\u00c1rkantor", "Drevarr Moonwillow", "Mac Chiato"];
const professions = ["Vindicator", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Vindicator", "Scrapper", "Spellbreaker", "Vindicator", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[80.736, 13.944, 78.1637, 134.2, 2.9848, 12.9875, 17.7289, 32.0197, 9.8982, 11.856, 16.6056, 4.9623, 188.7681, 24.1915, 16.6404, 21.803, 23.814, 36.573, 13.9352, 13.6445, 7.038, 5.9314, 24.4912, 175.1299], [65.9808, 0.0, 0.0, 312.8564, 21.7464, 67.1738, 0.0, 86.0605, 0.0, 0.0, 0.0, 0.0, 181.7003, 0.0, 0.0, 0.0, 0.0, 37.5756, 0.0, 0.0, 0.0, 0.0, 0.0, 208.6106], [165.7872, 31.164, 26.1509, 173.8784, 8.4552, 61.4685, 0.0, 0.0, 0.0, 31.512, 31.2312, 0.0, 355.4494, 59.485, 31.5652, 63.2218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 94.2182], [59.627, 15.5664, 0.0, 0.0, 56.1382, 543.0396, 0.0, 0.0, 40.1486, 0.0, 48.6032, 0.0, 0.0, 0.0, 82.727, 518.9512], [138.8184, 480.685, 1052.8263, 107.9728], [144.072, 6.5688, 242.5819, 492.3438, 18.2312, 34.662, 26.735, 48.2522, 0.0, 30.9192, 51.5064, 21.4735, 574.2555, 0.0, 13.278, 94.9738, 52.92, 87.5525, 50.6736, 51.972, 29.6571, 79.2067, 388.2476], [306.7968, 0.0, 300.085, 289.7973, 63.1592, 0.0, 71.3878, 147.7115, 0.0, 0.0, 82.4472, 773.6252, 160.4203, 16.4002, 0.0, 73.4265, 74.0001, 0.0, 0.0, 0.0, 36.0297, 76.0888, 475.8125], [396.8592, 85.9152, 288.671, 512.4946, 15.2672, 38.9912, 0.0, 92.4563, 0.0, 0.0, 121.3608, 0.0, 647.5835, 54.2006, 83.0988, 0.0, 0.0, 125.0167, 61.2554, 66.407, 12.9775, 0.0, 0.0, 636.9922], [297.4704, 24.8808, 616.0627, 861.7055, 39.052, 39.794, 16.5637, 39.8728, 60.7851, 63.024, 97.9968, 21.1879, 1049.2679, 63.7997, 13.2437, 21.5914, 158.8482, 139.4231, 36.6586, 23.1837, 681.4185], [505.5744, 63.4032, 523.0176, 921.5346, 47.1328, 97.3346, 105.9324, 95.4114, 143.7354, 88.5456, 83.9256, 0.0, 1357.5989, 108.6922, 122.4867, 166.3805, 25.8867, 137.2325, 48.4007, 44.9448, 11.1394, 0.0, 87.4543, 985.7497], [749.8704, 39.5976, 723.5558, 181.9802, 210.2371, 88.7073, 207.9458, 151.2225, 78.7488, 188.76, 2027.5637, 83.4826, 293.8824, 235.8468, 220.218, 134.0242, 21.755, 122.9422, 359.8752, 1376.5727]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

