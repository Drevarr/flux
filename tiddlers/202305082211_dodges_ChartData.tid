created: 20230508221143000
creator: Drevarr
modified: 20230705163529162
modifier: drevarr
tags: ChartData
title: 202305082211_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Fae", "Astrid X Dragon", "Akatsv", "Gabe Malhorn", "Panther B Me", "F\u00f9gly", "Mincemeat Pie", "Ark Darkness", "High Sorcer Baradun", "Gavann", "Belvyn Brightblade", "Tribal S", "Xanvias Einzbern", "Grasszanine", "Be\u00eb", "Sygaldry Verdandi", "Tika Rucola", "Fribble Bibble", "Inedible Plant", "Koralia Danai", "Kiloak", "No Reserv\u00e9", "Corinna Barimen", "Drevarr Moonwillow", "Cerys Fireblade", "Jeckyll Mbs", "Arriasa", "Elektra Gd", "Kary\u00edna", "Sumatra Satyricon", "Miphest\u00f6", "La Morte Vivante", "Tootsy Pop Tart", "Husky Guard", "N\u00e9azoule", "Red Date Sayaccho", "Lord Erin The Wise", "Ryvalia Fazebringer", "Tegan Parker", "Mac Aaroni", "Zady Stardust", "Primal Clone", "Sister Elon\u00edth", "Rozaalyna", "Smol Gluvs", "Eibh\u00ebar", "Newtype Khan", "Osh Kosh Johosh", "Mistwalker Caelon", "Solus Sanctus"];
const professions = ["Firebrand", "Dragonhunter", "Reaper", "Firebrand", "Scourge", "Tempest", "Berserker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Druid", "Berserker", "Spellbreaker", "Scourge", "Firebrand", "Chronomancer", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Herald", "Guardian", "Scrapper", "Berserker", "Berserker", "Druid", "Tempest", "Vindicator", "Soulbeast", "Tempest", "Dragonhunter", "Scourge", "Dragonhunter", "Reaper", "Tempest", "Weaver", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Scourge", "Scourge", "Chronomancer", "Spellbreaker", "Chronomancer", "Vindicator", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 2, 9, 2, 0, 0, 9, 1, 0, 5, 5, 0, 3, 2, 3], [0, 11, 25, 6, 0], [2, 0, 8, 17, 5, 8, 3], [3, 6, 4, 11, 3, 10, 3, 3], [2, 0, 0, 1, 8, 9, 6, 0, 2, 19], [1, 5, 1, 0, 37, 8, 1, 2], [1, 0, 0, 1, 15, 3, 1, 1, 21, 1, 0, 5, 7, 2, 3, 3], [0, 1, 0, 4, 21, 6, 1, 4, 29], [1, 0, 0, 5, 25, 2, 0, 3, 17, 3, 1, 5, 1, 3, 0, 2], [0, 20, 4, 16, 19, 8, 7], [2, 5, 0, 0, 6, 45, 10, 0, 7], [1, 0, 0, 1, 21, 0, 0, 0, 17, 2, 4, 5, 10, 0, 9, 4, 4], [0, 3, 0, 0, 4, 14, 7, 0, 2, 28, 0, 0, 5, 2, 0, 11, 1, 2], [0, 1, 0, 0, 1, 40, 0, 6, 6, 14, 0, 7, 5, 4], [0, 0, 0, 0, 2, 9, 2, 0, 0, 34, 0, 4, 4, 17, 0, 7, 2, 4], [0, 0, 1, 3, 17, 3, 0, 0, 24, 1, 7, 8, 6, 8, 3, 4], [0, 1, 2, 0, 2, 17, 5, 0, 2, 18, 3, 3, 10, 12, 0, 10, 3, 4], [2, 1, 1, 0, 5, 17, 4, 1, 2, 25, 3, 7, 3, 11, 1, 3, 5, 3], [1, 1, 0, 0, 7, 25, 4, 0, 2, 56], [0, 1, 0, 0, 2, 21, 2, 0, 0, 31, 1, 7, 3, 8, 0, 11, 4, 6], [0, 3, 0, 4, 15, 1, 2, 1, 29, 2, 2, 7, 9, 1, 14, 6, 3], [2, 1, 0, 1, 1, 1, 52, 2, 8, 9, 11, 0, 3, 4, 5], [1, 5, 1, 3, 15, 5, 5, 65, 1], [0, 3, 21, 2, 0, 0, 35, 3, 7, 9, 11, 0, 6, 3, 2], [0, 2, 0, 2, 17, 10, 0, 4, 35, 5, 2, 8, 4, 0, 5, 5, 4], [2, 2, 0, 1, 8, 15, 5, 1, 0, 28, 3, 2, 11, 16, 2, 4, 3, 3], [1, 1, 0, 1, 2, 16, 3, 0, 1, 39, 3, 4, 8, 12, 12, 4, 2], [4, 4, 10, 11, 1, 10, 58, 3, 4, 4], [2, 5, 0, 0, 2, 16, 4, 0, 0, 41, 2, 1, 7, 12, 0, 3, 11, 5], [0, 4, 0, 0, 1, 23, 7, 0, 1, 44, 4, 2, 3, 7, 0, 10, 3, 3], [0, 2, 0, 0, 22, 9, 0, 2, 45, 1, 5, 5, 9, 0, 9, 3, 1], [5, 12, 39, 6, 6, 7, 2, 2, 22, 12, 8], [2, 1, 0, 0, 3, 33, 4, 1, 2, 40, 2, 0, 4, 11, 13, 4, 4], [2, 1, 2, 10, 29, 15, 2, 3, 21, 2, 6, 7, 10, 1, 12, 6, 4], [2, 3, 1, 4, 23, 12, 0, 50, 1, 6, 4, 15, 0, 8, 2, 3], [69, 3, 12, 12, 14, 0, 16, 5, 5], [3, 7, 2, 8, 23, 11, 1, 3, 43, 2, 9, 9, 9, 0, 6, 5, 4], [3, 4, 3, 6, 14, 4, 4, 5, 50, 4, 7, 14, 15, 2, 14, 7, 3], [0, 3, 7, 30, 12, 2, 3, 65, 2, 5, 3, 7, 2, 11, 5, 5], [2, 3, 0, 1, 11, 44, 13, 0, 3, 55, 2, 5, 4, 8, 0, 10, 3, 3], [1, 1, 0, 0, 7, 34, 13, 0, 1, 54, 0, 5, 16, 10, 1, 16, 5, 4], [2, 0, 0, 1, 6, 29, 9, 6, 60, 2, 9, 8, 18, 1, 12, 5, 3], [0, 3, 0, 37, 8, 7, 65, 4, 11, 10, 16, 2, 14, 8, 7], [1, 7, 0, 1, 9, 43, 8, 1, 1, 69, 4, 9, 5, 9, 1, 20, 5, 4], [5, 5, 1, 2, 8, 34, 8, 5, 3, 66, 5, 8, 10, 5, 3, 17, 9, 7], [3, 6, 0, 1, 7, 51, 13, 2, 7, 73, 4, 4, 10, 13, 0, 13, 2, 5], [5, 8, 1, 0, 18, 42, 19, 3, 6, 93, 2, 1, 3, 9, 3, 18, 7, 5], [2, 11, 1, 2, 15, 58, 15, 3, 6, 75, 4, 9, 9, 9, 0, 15, 6, 6], [4, 6, 2, 19, 61, 20, 0, 4, 102, 7, 7, 9, 10, 0, 23, 10, 8], [5, 11, 1, 3, 21, 45, 17, 6, 6, 100, 6, 9, 11, 18, 4, 20, 9, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

