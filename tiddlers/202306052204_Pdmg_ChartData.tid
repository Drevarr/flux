created: 20230605220452000
creator: Drevarr
modified: 20230705163533844
modifier: drevarr
tags: ChartData
title: 202306052204_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Rozaalyna", "Newtype Khan", "Mildly Ecstatic", "Skye Nightroad", "No Reserv\u00e9", "Smol Gluvs", "Cedryn X", "Be\u00eb", "Be\u00eb", "Tootsie Pop Rocks", "Kary\u00edna", "Jeckyll Mbs", "Lord Erin The Wise", "Duke Silvver", "Sister Elonith", "My Birthday Girl", "Cyclotechnist Farra", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Scourge", "Reaper", "Spellbreaker", "Scourge", "Scrapper", "Vindicator", "Scourge", "Berserker", "Reaper", "Scourge", "Scrapper", "Vindicator", "Berserker", "Weaver", "Vindicator", "Berserker", "Scrapper", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[411.6389, 165.7723, 808.3269, 358.1127], [0.0, 321.973, 172.08, 163.0606, 464.3398, 1006.3662, 0.0, 110.6667, 712.56, 120.6809, 0.0, 0.0], [397.4722, 111.1976, 363.0769, 221.4258, 9.7333, 188.2162, 246.6, 0.0, 177.1942, 391.2535, 303.0465, 34.8333, 292.9969, 10.3298, 132.4237, 15.3333], [415.0833, 100.4307, 504.1346, 188.2934, 61.5667, 229.2162, 9.84, 62.8788, 284.3592, 180.1549, 144.4884, 48.75, 451.6738, 32.109, 122.1186, 51.6889], [530.5455, 382.0971, 1315.4366, 0.0, 270.5, 943.8615, 31.3537, 667.3729, 84.9778], [143.52, 275.0303, 532.4175, 817.8169, 346.2791, 224.6458, 1271.3231, 51.117, 252.5593, 61.9778], [298.6667, 158.8582, 1304.2308, 299.9106, 6.3333, 184.7297, 30.0, 60.2121, 335.1748, 319.1549, 266.5814, 141.6875, 447.2338, 63.3271, 163.3559, 105.0444], [86.565, 482.9423, 326.3327, 247.3667, 334.8649, 0.0, 275.4545, 515.5437, 699.4648, 56.7442, 93.7292, 910.6646, 76.6489, 72.1356, 341.1556], [23.2333, 304.1892, 149.2, 759.2727, 913.5825, 1615.2676, 49.814, 502.375, 1376.8985, 160.0319, 1203.8814, 282.1778], [251.1111, 527.6498, 2899.8077, 864.4937], [491.5833, 273.3566, 1984.1538, 735.6691, 0.0, 1337.6486, 283.36, 259.2727, 427.2136, 965.2113, 23.4583, 1232.3692, 95.5638, 789.8136, 301.8667], [468.5556, 493.8776, 1076.6731, 743.7156, 154.7667, 108.6216, 317.52, 310.8485, 571.3301, 1288.4507, 476.3023, 273.2083, 728.9077, 150.5665, 344.2712, 255.0667], [207.6667, 491.4339, 52.1538, 868.6744, 174.1667, 170.027, 230.84, 0.0, 613.1068, 1331.0845, 405.6875, 1152.4431, 93.1489, 391.4915, 253.2667], [329.5, 446.304, 1015.8462, 1079.7066, 194.5333, 266.7027, 471.52, 691.7273, 1596.4175, 855.3099, 296.5581, 414.125, 858.6154, 84.609, 1171.8475, 142.3333], [190.4167, 563.7186, 1695.3462, 697.2612, 534.5, 455.4595, 376.12, 521.3636, 921.9223, 1131.0563, 641.1628, 230.9792, 996.6031, 416.5, 943.8305, 283.7333], [54.985, 1912.2692, 1633.9267, 205.6, 489.2162, 156.04, 510.697, 1328.233, 1771.2113, 274.9535, 343.9167, 2514.7262, 208.0239, 607.7966, 137.3556], [1355.5833, 631.3115, 2253.6154, 1481.6637, 99.0667, 268.5135, 325.96, 403.7879, 1359.2913, 1413.3239, 754.5581, 53.0208, 1803.3046, 246.4947, 1368.8983, 821.7333], [820.8776, 2727.2115, 1323.4061, 105.6333, 634.1892, 6.16, 179.8788, 1669.2621, 1413.4225, 494.5116, 545.0417, 2151.1569, 343.367, 1047.0339, 1129.5778], [83.1389, 782.0032, 3772.7115, 1282.347, 418.6667, 248.7568, 589.08, 510.697, 1613.4757, 2406.1268, 1433.7209, 570.6042, 2191.4615, 262.2181, 139.8475, 1025.6222], [1077.1111, 1079.058, 2835.6538, 2362.297, 145.6667, 266.9459, 293.76, 276.8182, 2512.9903, 2157.1972, 516.5116, 703.6875, 2880.92, 234.7793, 854.9831, 219.3556]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

