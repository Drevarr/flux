created: 20230607221050000
creator: Drevarr
modified: 20230705163534061
modifier: drevarr
tags: ChartData
title: 202306072210_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Etcherii", "Johosh The Great", "Tootsie Pop Rocks", "Artakama Nahid", "Tegan Parker", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[70.4244, 234.57, 495.5204, 75.3784, 700.5546, 504.4239, 24.6, 271.6111, 298.1111, 606.6813, 753.8, 721.0909, 547.8793], [99.4878, 216.69, 570.7082, 30.2365, 597.5328, 837.5326, 492.7963, 350.2222, 563.4066, 1016.18, 592.7818], [88.6, 477.31, 675.4068, 122.8378, 787.5022, 1109.5217, 0.0, 854.3889, 533.5556, 1148.1758, 1600.0, 474.4364, 1046.4828], [41.7024, 0.0, 734.5165, 103.2635, 2414.0437, 1843.9239, 0.45, 1935.0556, 433.4444, 2539.5165, 2280.0, 47.8182, 1521.6897], [110.3268, 372.18, 1434.3756, 328.4932, 1897.2445, 2149.1522, 48.95, 1146.8333, 854.7037, 2373.1538, 1627.02, 1790.3818, 2025.319], [49.122, 63.87, 1484.6718, 409.9932, 1984.1921, 1073.5, 1068.9074, 2004.0, 1131.7473, 2297.7, 2753.5636, 2732.1897], [195.4098, 752.96, 1996.3681, 401.8649, 2035.8559, 1494.6196, 20.45, 2232.7963, 1603.1852, 2556.2967, 1926.24, 2533.9636, 2127.6897], [94.3171, 649.86, 2373.7205, 507.5135, 3015.7249, 3124.1848, 22.45, 1268.0, 1111.0741, 4031.5165, 3924.56, 1380.4, 2654.681]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

