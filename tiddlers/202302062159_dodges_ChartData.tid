created: 20230206215940000
creator: Drevarr
modified: 20230705163518759
modifier: drevarr
tags: ChartData
title: 202302062159_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Mirrors Dancer", "Kahless The Drunk", "Oo Dads Mad", "Peanut Strongpaw", "Reyga Bannerclaw", "Isla Miststorm", "Daring Deathblade", "Al\u00eds", "Tyrisai", "Zaylen Harker", "High Sorcer Baradun", "Skye Nightroad", "Hyde En Sikh", "Bella Sassy", "Ace Rages", "Arkintor", "Cat Wigglebooty", "Sumatra Satyricon", "Grasszanine", "Zadie Miststep", "Gyppa X", "Arriasa", "Allexa Adalhart", "Sp\u00edcy Cheese", "Veron Blackburn", "Etchery Howls", "Gavann", "Be\u00eb", "Johosh The Great", "\u00c9\u00efbhear", "\u00c2 R K", "Drevarr Moonwillow", "Sygaldry Verdandi", "Fungus", "Rina Of Theros", "Lord Erin The Wise", "Legacy Of Mathus", "Belvyn Brightblade", "Demon Sekhmet", "Koralia Danai", "Raziel Umbra", "Arcanophage Farra", "Mac Aaroni", "Xanvias Tsollice", "Ravioli Fetabringer", "Newtype Khan", "Smol Gluvs", "Sigmund Mistwalker"];
const professions = ["Chronomancer", "Firebrand", "Spellbreaker", "Warrior", "Spellbreaker", "Willbender", "Scourge", "Harbinger", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Chronomancer", "Firebrand", "Berserker", "Tempest", "Scrapper", "Ranger", "Spellbreaker", "Tempest", "Herald", "Druid", "Spellbreaker", "Berserker", "Herald", "Druid", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Scourge", "Weaver", "Berserker", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Vindicator", "Firebrand", "Spellbreaker", "Scourge", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 2, 8, 0, 9], [8, 3, 2, 1, 4, 2, 0], [4, 2, 5, 1, 0, 12], [1, 3, 2, 4, 2, 3, 2, 0, 1, 4, 0, 2, 1], [3, 5, 5, 2, 3, 5, 1, 0, 1], [3, 2, 2, 11, 1, 6, 1], [3, 7, 2, 7, 1, 1, 4, 1], [4, 4, 1, 0, 4, 0, 2, 3, 4, 3, 1, 0, 1], [5, 5, 8, 1, 0, 8], [1, 1, 4, 11, 5, 7, 0], [2, 2, 1, 4, 0, 3, 5, 1, 2, 1, 7, 1, 2, 0, 1, 3, 0], [6, 1, 9, 3, 1, 8, 4, 4], [0, 0, 1, 7, 0, 7, 3, 2, 6, 4, 6, 1, 0, 0, 0, 0, 0], [0, 1, 1, 6, 0, 9, 4, 0, 5, 5, 3, 0, 2, 2, 0, 0, 0], [0, 1, 8, 0, 4, 0, 1, 3, 2, 8, 0, 2, 6, 1, 2, 0], [7, 6, 2, 8, 1, 8, 3, 4], [4, 0, 2, 0, 5, 10, 5, 8, 0, 1, 2, 1, 1, 0], [5, 1, 4, 6, 0, 2, 4, 2, 7, 2, 3, 0, 2, 3, 1], [11, 5, 10, 2, 8, 3, 4], [4, 2, 2, 9, 0, 6, 5, 3, 5, 1, 4, 0, 1, 2, 0, 0, 0], [13, 2, 9, 3, 4, 7, 2, 2, 2], [6, 5, 5, 13, 0, 9, 3, 5], [5, 11, 11, 1, 18], [1, 2, 3, 4, 0, 4, 5, 4, 2, 2, 11, 3, 3, 3, 2], [3, 3, 8, 15, 2, 11, 3, 5], [9, 3, 3, 4, 0, 4, 0, 1, 6, 5, 8, 1, 5, 4, 1], [7, 3, 8, 14, 0, 12, 5, 5], [2, 0, 2, 11, 0, 8, 6, 3, 8, 7, 3, 0, 0, 5, 1, 0], [3, 6, 4, 9, 0, 8, 5, 5, 3, 4, 4, 1, 3, 2, 2, 0, 1], [2, 8, 5, 10, 0, 11, 2, 3, 4, 2, 9, 1, 3, 3, 0, 0], [2, 3, 5, 11, 1, 13, 2, 0, 7, 4, 4, 3, 2, 6, 0, 1, 0], [0, 6, 5, 11, 0, 8, 5, 5, 6, 6, 8, 0, 2, 1, 1, 1, 0], [2, 1, 1, 15, 0, 15, 3, 3, 4, 5, 9, 2, 2, 2, 1, 0, 0], [3, 2, 6, 11, 0, 9, 2, 3, 7, 6, 10, 0, 1, 4, 0, 1, 0], [3, 2, 7, 6, 0, 11, 7, 5, 7, 5, 5, 2, 3, 2, 1, 1, 0], [7, 4, 5, 11, 0, 6, 0, 4, 6, 9, 8, 1, 2, 5, 1, 2], [5, 7, 7, 5, 0, 10, 4, 2, 8, 2, 7, 2, 3, 4, 0, 4, 1], [11, 10, 10, 20, 2, 4, 10, 4], [7, 7, 4, 15, 0, 5, 0, 6, 7, 8, 11, 2, 3, 5, 2], [5, 3, 3, 16, 0, 10, 7, 5, 11, 6, 9, 3, 2, 5, 1, 0, 0], [4, 7, 4, 18, 14, 3, 4, 9, 6, 10, 1, 2, 3, 4, 0, 0], [10, 4, 4, 5, 1, 16, 5, 5, 16, 4, 11, 2, 1, 5, 4, 2, 1], [7, 4, 11, 16, 1, 13, 3, 5, 8, 5, 12, 1, 1, 4, 2, 2, 1], [13, 9, 7, 21, 0, 9, 6, 6, 3, 5, 10, 0, 1, 11, 7], [17, 15, 10, 10, 3, 13, 3, 7, 12, 11, 10], [7, 9, 13, 15, 1, 11, 6, 8, 9, 7, 14, 2, 6, 9, 7, 5, 2], [16, 11, 12, 19, 1, 12, 9, 4, 10, 4, 13, 2, 1, 10, 5, 3, 3], [25, 9, 20, 27, 4, 6, 11, 5, 12, 8, 16, 3, 4, 11, 9, 8, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

