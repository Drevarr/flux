created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Free H\u00e4nd", "Gamora Titus", "Sakis Ranger", "Mmathuss", "Alarics Clone", "Lady Fluffs", "Gestern Yesteryear", "Jimbo The Pleb", "Jerryatric Reflexes"];
const professions = ["Renegade", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.7876, 27.9243, 20.1335, 11.9605, 6.1265, 12.8855, 13.2563, 19.7309, 0.0, 19.0141, 6.2798, 11.3947, 3.1762, 0.0, 6.3121, 0.0], [14.6556, 19.4359, 34.0487, 55.0555, 0.0, 12.7673, 6.431, 35.5568, 0.0, 0.0, 0.0, 0.0, 6.3987], [0.0, 0.0, 0.0, 0.0, 29.5308, 0.0, 0.0, 21.7512, 60.1924, 25.685, 50.4992, 0.0, 0.0, 0.0, 61.2058, 32.6808, 0.0], [5.7712, 49.9201, 47.4499, 89.0762, 81.445, 9.4319, 32.039], [13.4792, 41.8152, 26.6931, 8.4684, 38.0718, 6.6853, 37.3755, 16.4851, 21.2134, 31.8634, 13.1083, 6.7484, 16.7204, 18.0367, 13.3308, 6.4529, 13.0396, 17.9194, 6.5759, 12.9444], [0.0, 103.17, 90.6129, 19.0047, 116.298, 0.0, 50.1894, 46.975], [16.1452, 19.4175, 14.4848, 17.9021, 19.5762, 52.0296, 41.7354, 0.0, 17.784, 0.0, 73.7419, 11.2763, 38.1884, 30.6763, 34.5973, 0.0, 36.2847, 25.7857, 19.6567, 0.0, 0.0, 0.0, 14.49, 17.0352, 37.1804, 0.0, 0.0, 0.0, 8.0018], [47.2027, 29.868, 32.186, 6.98, 54.9198, 99.2091, 89.6213, 13.127, 87.9937, 41.4952, 2.2977, 41.6527, 12.4132, 0.0, 13.7752, 4.9031, 33.9782, 9.2891, 41.1677, 22.801, 9.3431, 0.0, 0.0, 3.2877, 2.3198], [139.2111, 75.8303, 170.9838, 215.0463, 201.329, 130.9651, 157.2116, 358.2944, 103.5935, 12.9021, 46.2268, 134.6702, 50.5328, 150.0005, 173.0824, 261.0547, 47.381, 68.0547]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

