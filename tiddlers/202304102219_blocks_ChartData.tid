created: 20230410221909000
creator: Drevarr
modified: 20230705163525121
modifier: drevarr
tags: ChartData
title: 202304102219_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Isla Miststorm", "Sumatra Satyricon", "Kmpek", "Legacy Of Mathus", "Nazhul Naxxremis", "Oo Dads Mad", "Venomina The Siren", "High Sorcer Baradun", "Rina Of Theros", "Sub Train", "Belvyn Brightblade", "Jeckyll Mbs", "Elonith Requiem", "Lord Erin The Wise", "Grasszanine", "Inedible Plant", "Mike The Archmagus", "Smol Gluvs", "Sp\u00edcy Cheese", "Tootsie Pop Rocks", "Blancooo Padreee", "Sassy Daddy Demon", "Arriasa", "Tribal S", "Rozaalyna", "Smol Daddy Tika", "Be\u00eb", "Ark Darkness", "Fribble Bibble", "Arcanophage Farra", "Mac Chiato", "Zadie Miststep", "Newtype Khan", "Zaylen Harker", "Gavann", "Mistwalker Caelon", "Xyntharos", "Sygaldry Verdandi", "Ak\u00e1nt\u00f3r", "Xanvias Einzbern", "Solus Sanctus", "Tegan Parker", "Black Raspberry Pie", "Asorlia", "Koralia Danai", "Drevarr Moonwillow", "Bella Sassy", "Johosh The Great", "Eibh\u00ebar", "Ryvalia Fazebringer"];
const professions = ["Willbender", "Soulbeast", "Vindicator", "Berserker", "Scourge", "Spellbreaker", "Tempest", "Tempest", "Scourge", "Firebrand", "Firebrand", "Berserker", "Scourge", "Weaver", "Spellbreaker", "Vindicator", "Weaver", "Scourge", "Berserker", "Scrapper", "Berserker", "Vindicator", "Druid", "Druid", "Scourge", "Berserker", "Scourge", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Druid", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 3, 6, 19, 62], [2, 17, 11, 40, 0, 0, 2, 1, 0, 1, 6, 8, 1, 0, 0, 1, 0, 2, 5, 0, 0], [1, 3, 5, 6, 0, 6, 4, 5, 13, 7, 2, 1, 1, 20, 16, 2, 19], [2, 5, 13, 93, 6, 2, 3], [0, 2, 3, 23, 65, 3, 0, 7, 2, 5, 6, 4, 1, 4, 1, 5], [1, 9, 19, 103], [33, 6, 1, 2, 10, 0, 3, 4, 8, 5, 2, 2, 5, 3, 8, 14, 8, 20], [4, 3, 26, 58, 4, 1, 3, 3, 6, 2, 1, 0, 0, 1, 7, 0, 16, 1, 7], [3, 10, 19, 64, 0, 1, 3, 6, 0, 8, 2, 5, 4, 2, 1, 4, 2, 10], [5, 5, 6, 13, 1, 6, 3, 5, 11, 15, 1, 9, 2, 19, 19, 7, 17], [3, 2, 9, 23, 118], [8, 2, 12, 11, 46, 4, 3, 4, 2, 0, 4, 1, 11, 12, 4, 2, 8, 3, 15, 12, 10], [1, 26, 72, 7, 6, 2, 9, 1, 7, 7, 7, 7, 1, 2, 10, 1, 14], [4, 3, 8, 28, 107, 1, 1, 3, 0, 0, 6, 0, 0, 3, 6, 1, 2, 1, 4, 7], [18, 65, 5, 1, 3, 4, 1, 3, 3, 3, 3, 7, 1, 12, 0, 9, 16, 12, 22], [0, 2, 15, 72, 6, 8, 1, 8, 0, 5, 3, 8, 4, 5, 0, 6, 1, 15, 12, 1, 19], [0, 0, 8, 23, 103, 1, 6, 3, 5, 0, 4, 1, 6, 5, 5, 1, 3, 1, 7, 7, 0, 8], [0, 2, 7, 26, 85, 7, 7, 3, 10, 0, 5, 1, 5, 6, 6, 5, 9, 1, 12], [3, 3, 9, 21, 68, 7, 3, 3, 12, 0, 4, 6, 3, 7, 4, 4, 1, 1, 13, 15, 11, 8], [6, 3, 9, 35, 83, 5, 3, 4, 7, 5, 3, 6, 3, 8, 3, 5, 0, 8, 20, 10], [1, 8, 13, 96, 4, 5, 4, 5, 0, 6, 3, 8, 4, 6, 3, 17, 2, 20, 8, 8, 17], [2, 14, 18, 121, 2, 3, 2, 7, 4, 5, 11, 4, 2, 29, 0, 7, 24, 2], [4, 3, 8, 34, 97, 6, 6, 3, 9, 0, 7, 3, 4, 10, 7, 3, 9, 0, 7, 16, 6, 17], [0, 10, 30, 126, 5, 1, 9, 0, 9, 5, 6, 8, 15, 0, 3, 1, 16, 12, 2, 5], [0, 15, 36, 149, 1, 1, 4, 8, 10, 1, 8, 7, 6, 0, 2, 1, 20], [0, 3, 16, 38, 87, 11, 2, 6, 9, 13, 4, 7, 20, 9, 4, 10, 0, 17, 7, 12, 6], [3, 2, 14, 26, 156, 7, 4, 3, 10, 0, 11, 3, 9, 6, 1, 4, 4, 2, 18], [4, 15, 31, 117, 7, 4, 3, 11, 1, 9, 4, 9, 9, 15, 4, 10, 1, 13, 13, 9], [7, 1, 5, 19, 154, 3, 4, 5, 10, 0, 3, 4, 5, 11, 4, 1, 2, 1, 11, 17, 10, 16], [1, 3, 19, 8, 131, 5, 4, 5, 9, 0, 8, 5, 8, 19, 8, 0, 12, 2, 13, 16, 5, 15], [2, 16, 9, 138, 7, 3, 1, 6, 1, 10, 4, 7, 10, 15, 3, 6, 2, 16, 15, 5, 23], [8, 2, 18, 28, 141, 6, 3, 5, 4, 4, 2, 5, 7, 7, 4, 8, 1, 14, 12, 8, 15], [14, 4, 16, 37, 101, 9, 2, 3, 13, 1, 7, 3, 11, 14, 12, 1, 9, 2, 16, 15, 9, 19], [11, 4, 11, 41, 107, 5, 4, 5, 11, 0, 8, 6, 6, 12, 2, 2, 1, 3, 20, 20, 18, 22], [3, 13, 38, 149, 8, 6, 5, 8, 1, 7, 5, 6, 7, 7, 1, 13, 1, 14, 16, 9, 20], [1, 4, 8, 36, 118, 12, 6, 5, 8, 1, 9, 5, 8, 8, 15, 0, 13, 0, 9, 44, 6, 22], [5, 0, 9, 36, 154, 4, 5, 6, 13, 1, 9, 3, 2, 15, 10, 4, 15, 0, 13, 10, 13, 15], [5, 20, 27, 161, 7, 4, 4, 6, 7, 7, 5, 14, 3, 19, 1, 16, 19, 16, 23], [7, 1, 10, 38, 165, 6, 4, 2, 11, 10, 3, 6, 7, 10, 1, 10, 1, 27, 22, 12, 15], [11, 5, 14, 44, 170, 9, 3, 6, 13, 0, 5, 6, 4, 11, 14, 1, 12, 1, 10, 21, 4, 12], [5, 13, 38, 179, 5, 5, 4, 10, 7, 6, 10, 10, 13, 1, 11, 1, 19, 21, 8, 16], [0, 14, 45, 180, 7, 2, 7, 8, 1, 12, 5, 5, 12, 8, 6, 7, 1, 14, 17, 15, 24], [2, 4, 15, 36, 147, 5, 4, 4, 9, 0, 9, 5, 7, 7, 23, 3, 1, 9, 13, 47, 32, 20], [1, 15, 35, 216, 6, 1, 4, 11, 12, 5, 4, 10, 5, 0, 16, 1, 22, 35, 23, 23], [13, 5, 19, 44, 196, 4, 5, 3, 14, 1, 8, 3, 9, 8, 12, 1, 21, 3, 9, 33, 6, 29], [17, 1, 26, 54, 209, 13, 5, 10, 14, 1, 5, 5, 7, 13, 7, 2, 23, 2, 20, 27, 7, 17], [5, 8, 13, 61, 201, 5, 4, 6, 12, 3, 9, 5, 7, 9, 11, 3, 23, 0, 25, 31, 16, 33], [10, 3, 20, 69, 200, 11, 5, 8, 9, 2, 11, 2, 8, 9, 19, 3, 23, 1, 19, 26, 17, 21], [4, 16, 38, 183, 6, 3, 7, 8, 0, 11, 4, 12, 14, 2, 4, 11, 0, 58, 53, 35, 27], [5, 18, 53, 188, 10, 6, 9, 15, 4, 5, 9, 11, 22, 16, 3, 24, 1, 28, 38, 24, 35]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

