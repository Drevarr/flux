created: 20230314004438000
creator: Drevarr
modified: 20230705163522089
modifier: drevarr
tags: ChartData
title: 202303140044_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Seren Nightroad", "Sumatra Satyricon", "Arcanophage Farra", "Elonith Tenebris", "Oo Dads Mad", "Smol Gluvs", "Daring Deathblade", "Ace Hammers", "Legendary Hacker", "Rozaalyna", "Minka Bringer", "Veron Blackburn", "Hauzzy", "Sigmund Mistwalker", "Rina Of Theros", "Tootsie Pop Rock", "Lil Lun\u00e4", "Cerys Fireblade", "Smol Daddy Tika", "Pererek Ninja", "Lord Erin The Wise", "Xyntharos", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Sofya De Nova", "Xanvias Tseli"];
const professions = ["Scourge", "Soulbeast", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Reaper", "Vindicator", "Herald", "Scourge", "Scrapper", "Herald", "Spellbreaker", "Vindicator", "Scourge", "Scrapper", "Weaver", "Berserker", "Berserker", "Dragonhunter", "Weaver", "Vindicator", "Berserker", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[309.9032, 105.3588, 361.2268, 88.1245, 0.0, 961.3636, 810.0, 82.9218, 472.6232, 986.1912, 91.8852, 864.3333, 72.7476, 268.9115, 766.9114], [174.8065, 130.6529, 234.3666, 8.834, 660.0769, 268.0455, 498.9608, 66.358, 140.3226, 455.942, 272.3529, 55.1311, 44.2143, 110.699, 320.3628, 514.4051, 314.902, 307.0267, 160.1383, 443.9487, 102.8938, 388.4324, 173.25, 202.687, 547.8687, 630.5231, 543.4333], [528.871, 42.4529, 230.2996, 96.7887, 0.0, 397.6212, 596.902, 30.1605, 0.0, 418.9275, 198.0294, 0.0, 176.5714, 228.3738, 144.7699, 21.8608, 257.7059, 317.0533, 285.3511, 232.7436, 442.7345, 279.7568, 57.6316, 496.6585, 420.2525, 406.6, 707.9667], [422.6018, 1381.9873, 1613.8824, 1063.2267, 1078.1383, 646.2564, 409.9558, 154.027, 155.3684, 1397.2073, 817.5253, 0.0, 2967.7333], [243.2258, 69.7941, 278.6698, 344.2981, 0.0, 853.0758, 1174.8627, 81.0, 638.6087, 234.5588, 62.8197, 76.0714, 63.1602, 15.8496, 880.8354, 709.0, 557.2667, 607.234, 315.1282, 724.5044, 145.6757, 96.5789, 373.0203, 222.7677, 755.0308, 2030.7667], [641.3065, 33.5529, 333.0541, 335.6491, 0.0, 1247.803, 506.3725, 72.716, 7.6452, 696.087, 224.5588, 18.2951, 520.881, 524.3641, 191.0531, 548.4684, 483.2157, 265.24, 364.0957, 686.1795, 593.3186, 91.4595, 239.5132, 405.6423, 638.7879, 758.2462], [622.2742, 158.1176, 301.1939, 489.0528, 0.5385, 1343.197, 948.2157, 62.0947, 0.0, 1302.6667, 704.6765, 4.0328, 479.1667, 75.1748, 157.292, 550.8354, 1306.5882, 260.8667, 158.4894, 461.4359, 259.6195, 147.3243, 248.1053, 642.435, 197.5051, 265.1538, 1036.1833], [371.1935, 48.1941, 308.208, 436.1358, 0.0, 1059.0606, 1366.1961, 113.0782, 71.5806, 1035.5217, 571.6324, 0.0, 734.0714, 817.5097, 511.8673, 1236.5443, 1193.7647, 249.9333, 465.8085, 0.0, 20.5921, 318.187, 357.8687, 148.0769, 2028.6333], [150.2059, 728.2233, 528.2302, 0.0, 1069.2576, 1534.2157, 71.1852, 0.0, 677.5942, 636.2059, 1023.9417, 1210.6471, 0.0, 643.7128, 713.7436, 967.9381, 1718.4833], [509.371, 16.8294, 425.5746, 338.283, 0.0, 911.8182, 1325.5098, 134.6831, 0.0, 1548.1159, 996.8676, 51.082, 774.3571, 313.9951, 60.8407, 41.4937, 1353.9804, 813.3867, 1005.5851, 162.9231, 82.8142, 628.2162, 306.3684, 809.6667, 1148.3232, 1751.7077], [0.0, 593.7309, 611.8528, 0.0, 1119.6667, 1089.8824, 235.7737, 0.0, 696.5072, 422.3676, 70.3934, 921.5, 265.6262, 565.7611, 600.8101, 878.3725, 510.7867, 212.4149, 442.0, 892.9115, 303.8919, 797.5921, 1124.7683, 315.3131, 497.4769, 1541.6833], [22.9283, 213.5925, 0.0, 1534.6515, 786.451, 96.1728, 109.1613, 769.7536, 224.1618, 166.7213, 313.5238, 1106.4466, 181.8584, 548.2911, 968.6078, 874.0933, 905.0319, 951.4615, 952.4867, 89.0541, 523.8026, 1257.0569, 2852.8687, 2863.1538, 2892.0333], [770.629, 173.1529, 610.9965, 558.0038, 0.0, 1436.0909, 1003.2157, 308.4486, 0.0, 835.0, 1031.0294, 0.0, 690.6905, 510.6748, 118.9646, 1268.5823, 648.451, 612.84, 367.5851, 423.7692, 1032.9115, 194.6757, 347.4605, 703.1707, 177.5556, 1010.4462, 1970.95], [1165.6129, 170.7, 736.6005, 655.0868, 0.0, 1534.9242, 1791.7255, 425.4979, 233.871, 1849.5072, 973.2647, 50.2131, 312.2381, 260.5437, 801.9115, 1938.2532, 1269.7255, 1028.7333, 9.0638, 43.7179, 25.5575, 0.0, 0.0, 6.4106, 10.3636, 534.2462, 2937.4333], [708.8871, 129.3353, 470.3467, 620.0075, 1011.1061, 923.7059, 118.2263, 30.9355, 790.1739, 990.1618, 21.4262, 1209.4524, 980.4515, 418.3628, 1322.6835, 1805.4706, 176.7467, 967.6277, 509.4359, 788.0354, 188.0811, 390.6316, 784.8171, 1636.9697, 1621.6615, 2285.0], [956.9355, 147.7294, 610.9953, 178.1245, 0.0, 1772.7273, 1544.098, 103.9259, 1922.4203, 970.7647, 2151.7049, 208.9762, 926.0534, 757.8319, 0.0, 1470.9804, 1000.44, 1080.8723, 580.5128, 0.0, 161.4595, 1047.9342, 1510.2927, 647.4646, 1037.5538], [682.9753, 206.3226, 1844.2609, 496.3088, 303.5082, 2250.6905, 1443.6311, 1439.9381, 1111.8354, 3344.8824, 4057.48, 2515.1489, 179.2308, 655.469, 75.3514, 1578.2895, 2649.313, 3024.8182, 2890.1538], [1451.3226, 118.1412, 726.4924, 591.9472, 0.0, 931.3333, 2109.5294, 102.0823, 106.3226, 1093.058, 1746.8235, 43.541, 636.7381, 1927.6748, 896.0265, 1214.3291, 1383.9412, 1431.8, 1966.5532, 208.3077, 1430.8496, 283.0541, 539.5132, 1207.8089, 263.5859, 1840.9538, 2235.55], [831.4516, 226.2235, 722.4324, 720.9434, 0.0, 2502.4242, 1199.2745, 197.2798, 5.6452, 739.6667, 1014.1324, 27.4754, 1274.4762, 1807.6942, 222.2301, 1508.6456, 1206.3725, 1684.5067, 1764.5426, 366.6154, 2850.9469, 288.7568, 485.9342, 836.9431, 799.7576, 275.9692, 3134.4167], [236.6706, 1280.7145, 308.9774, 0.0, 1402.0152, 2360.6471, 343.3374, 75.8387, 974.8841, 1312.6176, 40.4754, 1013.0, 256.0971, 748.2301, 1765.1899, 1353.5294, 1854.8667, 1232.4362, 26.4872, 503.3717, 1087.8649, 1171.3421, 1323.2317, 2756.1919, 2907.1846], [462.129, 25.2294, 863.2667, 698.9208, 0.0, 2461.2576, 2354.7255, 180.6502, 78.9677, 2541.0435, 714.6618, 126.0328, 2715.381, 1599.5243, 1042.9469, 1446.519, 1815.0, 844.3467, 2920.2553, 505.7179, 3048.885, 1411.6316, 1052.5244, 3465.6162, 2946.5846], [1110.9677, 173.8353, 924.611, 1027.4717, 0.0, 2911.3788, 2775.6863, 209.9959, 0.0, 1355.7971, 841.0588, 355.0492, 469.2381, 1417.8981, 537.0973, 2262.3671, 1470.4902, 2245.32, 3032.7979, 996.1538, 1963.2478, 483.7838, 915.4079, 1448.9187, 1290.3131, 3038.0154, 3157.6667], [1689.0161, 14.1529, 1295.7826, 636.2566, 1540.2727, 2728.8235, 90.5638, 138.8387, 3144.6232, 2352.8824, 72.0492, 3562.9762, 1806.5971, 583.2035, 3039.5443, 2407.0, 2408.28, 113.0319, 842.1026, 2054.9735, 383.0541, 957.6447, 2987.7602, 1970.2323, 4552.3231, 5127.4667], [1996.5968, 314.2647, 1618.2056, 1199.1472, 0.0, 3976.1515, 3625.6275, 581.0453, 0.0, 1954.8986, 1128.0147, 85.377, 717.5238, 2964.9612, 1043.0265, 3185.4557, 2895.0588, 2684.36, 4163.7234, 684.6154, 2057.4248, 712.5405, 1105.8947, 2502.4593, 3225.1414, 1982.6615, 4386.5833], [269.2903, 472.3118, 1321.49, 1221.4264, 0.0, 3264.197, 1773.3333, 406.786, 0.0, 1948.5217, 1512.1765, 121.4918, 2708.7619, 3847.8495, 2529.4071, 1612.5696, 2481.7843, 654.8533, 3691.3723, 679.1282, 2442.8496, 172.973, 2868.6711, 3275.4065, 4750.5354, 4498.4769, 6611.1333], [1679.0806, 81.5882, 1378.9589, 1525.2981, 850.3846, 4914.1818, 3277.4314, 289.3498, 0.0, 2137.5362, 1536.9265, 0.0, 4278.3333, 3153.4612, 1410.4867, 2967.9747, 4976.3922, 5450.4267, 5265.6489, 1904.9231, 5072.3717, 910.1892, 1032.2895, 4407.4065, 4707.0707]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

