created: 20230506220820000
creator: Drevarr
modified: 20230705163528792
modifier: drevarr
tags: ChartData
title: 202305062208_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Antherisa", "Hyde En Sikh", "Kosa\u00efr", "Na Ting Wong", "Jupi Jupi Jupi", "Artakama Nahid", "Freylk Nasferatu", "High Sorcer Baradun", "Koralia Danai", "Bella Sassy", "Lord Erin The Wise", "Orangeluv", "Sygaldry Verdandi", "Ria Zerria", "Kira Dragonblaze", "Johosh The Mighty", "Im Killin It", "Demon Dalham", "Grilo Gringo", "Surethang Jr", "Mannse Lee", "Hauzzy", "Zaidy Sagemist", "Guard Ferro", "Johoshua", "Tac Mancer", "Kosa\u00efr", "Audrinafa", "Lil Red Robin", "Ever Moore", "Venomina The Fierce", "Sub Train", "Vanhelsing Wizard", "Inkcubi", "Rock Danger", "Im Killin It", "Gavann", "Weather Forecast J", "Bluntnips", "Needragee", "Cuscuszera", "Elder Gazruhk", "Corinna Barimen", "Plastered Pinocchio", "Mmathuss", "Dustythekat", "Mmathuss", "Spreadflamesoflight", "Zady Stardust", "Raimaru Hanzo"];
const professions = ["Reaper", "Chronomancer", "Weaver", "Scrapper", "Firebrand", "Tempest", "Scourge", "Tempest", "Firebrand", "Firebrand", "Weaver", "Soulbeast", "Firebrand", "Scourge", "Dragonhunter", "Spellbreaker", "Scourge", "Dragonhunter", "Dragonhunter", "Chronomancer", "Scrapper", "Berserker", "Vindicator", "Willbender", "Scrapper", "Scourge", "Catalyst", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Daredevil", "Renegade", "Harbinger", "Firebrand", "Catalyst", "Herald", "Tempest", "Firebrand", "Vindicator", "Guardian", "Mechanist", "Willbender", "Reaper", "Firebrand", "Willbender", "Willbender", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[72.8188, 1284.5745, 108.3097, 179.5542, 427.2804, 22.1818, 175.2658, 511.3662, 0.0, 180.125, 266.2113, 204.5584], [607.4722, 237.012, 129.8059, 55.3565, 470.5504, 52.8775, 188.6096, 305.2249, 55.8788, 95.8875, 473.5984, 6.0, 14.44, 472.1208, 341.5593], [226.2447, 258.9927, 622.3291, 56.9601, 326.6294, 457.6881, 218.7901, 627.2054, 0.0, 31.1667, 290.4558], [105.3893, 121.0288, 429.6305, 589.6341, 138.2656, 242.274, 1177.6295], [739.0944, 308.2397, 121.0687, 50.9833, 638.3263, 56.1522, 131.6229, 209.6727, 17.1343, 59.7436, 444.8217, 2.45, 51.65, 408.0142, 61.6825], [621.8259, 359.6158, 134.3128, 77.855, 665.9149, 63.1693, 139.4908, 252.7841, 4.3284, 46.642, 290.5588, 1.9167, 7.0, 160.4155, 32.0517], [1141.8796, 376.7914, 241.6256, 939.3684, 2315.1159, 186.7292, 328.4264], [830.8855, 347.2591, 273.6073, 118.2868, 546.5229, 452.9818, 178.14, 481.104, 55.7164, 45.5735], [433.2445, 255.4225, 93.8453, 97.053, 801.8419, 25.1828, 159.4772, 220.1954, 0.0, 59.2208, 386.531, 0.0, 69.7143, 261.8794, 44.3571], [710.4806, 280.1533, 120.3057, 34.1, 406.5636, 71.9005, 129.98, 223.608, 2.8226, 81.4684, 274.4658, 5.5323, 7.7917, 168.979, 117.1176], [325.3134, 532.2819, 76.0897, 700.3359, 47.8448, 153.3846, 459.7651, 217.4605], [53.7456, 435.5743, 546.3784, 0.0, 152.9873, 429.3948, 14.0339, 373.8214, 60.1], [649.6655, 200.3214, 156.2385, 632.3737, 39.8377, 229.3234, 199.5422, 18.4603, 88.0385, 453.6107, 0.0, 78.8462, 200.8623, 69.5893], [1215.6271, 562.822, 44.8806, 61.5823, 882.1588, 23.4138, 134.0, 609.8671, 99.3676], [886.6905, 414.7135, 115.5725, 160.5735, 1074.608, 250.8125], [855.2828, 443.0548, 219.305, 166.0153, 1087.4545], [559.8439, 117.471, 1286.9015, 227.8309, 337.0366, 464.8171], [751.7872, 426.7973, 316.1719, 131.7594, 746.9873], [232.1816, 77.6546, 409.9062, 0.0, 148.8734, 410.1159, 17.8689, 531.234, 84.2807], [560.0614, 477.2912, 189.6865, 215.9044, 720.161, 184.9868], [716.5512, 532.7384, 161.5729, 211.0376, 755.322], [976.956, 558.3233, 239.6774], [310.1277, 193.9168, 76.6921, 120.8492, 293.1525, 120.2, 84.2805, 190.565, 38.2, 48.6125, 161.659, 222.0, 0.0, 135.2183], [272.882, 258.7381, 443.4697], [119.7958, 159.4821, 331.908, 26.2154, 32.6125, 372.908, 0.0, 0.0, 300.4392, 155.1928], [422.1823, 711.4403, 89.963, 1122.6073], [1057.7137, 503.8348], [532.2134, 66.5617, 147.257, 241.6391, 0.9821, 37.5128, 331.544, 0.0, 27.2917, 323.9281, 52.0339], [0.0, 716.1847, 50.2773, 180.665, 219.9246, 17.8657, 31.2375, 270.1721, 0.0, 7.25, 238.6224, 41.6923], [76.0208, 262.0184, 440.9025, 17.7794, 0.0, 486.4324, 2.7797, 0.0, 328.5175, 134.9178], [427.295, 133.9851, 561.5256, 932.4863, 47.8197, 13.24, 314.8156, 94.6724], [79.8015, 533.2331, 129.4196, 290.3669, 558.6338], [308.8973, 49.5692, 214.6053, 337.6575, 47.25, 14.6364, 231.7535], [223.2266, 224.6449, 351.9589, 52.7164, 57.4677, 507.6491, 61.0, 0.0, 362.9071], [192.4304, 305.284, 446.0569], [509.339], [422.5947, 383.5611], [387.9216, 367.0409, 2.4895], [79.6145, 438.2378, 15.619, 592.0833, 604.4255], [73.4706, 52.3286, 91.9091, 392.6434, 6.1, 0.0, 244.0154, 149.5263], [111.5639, 803.5685], [389.3, 4936.6364], [546.4828], [330.2286, 590.5632], [1528.2439, 11.8171, 39.194], [111.8, 0.0, 395.0915, 36.0506], [112.0156], [418.6724], [0.0], [0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

