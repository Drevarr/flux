created: 20230515002743000
creator: Drevarr
modified: 20230705163529941
modifier: drevarr
tags: ChartData
title: 202305150027_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["John John", "Morv\u00e4rth", "Evan Nightroad", "Lucas Ryn", "Koralia Danai", "Mistwalker Caelon", "Osh Kosh Johosh", "Gabe Malhorn", "Tika Mi", "Artakama Nahid", "Tribal S", "Xanvias Einzbern"];
const professions = ["Holosmith", "Reaper", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Tempest", "Tempest", "Druid", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[314, 15820, 403, 288, 4760, 653, 15899, 960, 457, 644, 10412, 292, 592], [235, 274, 671, 2703, 7885, 445, 463, 420, 720], [316, 12000, 270, 304, 1270, 341, 331, 18612, 7719, 515, 6788, 244, 327, 253, 547], [304, 2995, 359, 430, 252, 284, 6020, 672, 713, 632, 377, 307, 276, 227, 368], [203, 251, 246, 353, 229, 280, 364, 861, 441, 459, 647, 302, 285, 239, 545], [328, 244, 245, 250, 233, 356, 384, 3212, 615, 1143, 1116, 329, 203, 227, 1236], [322, 237, 280, 5685, 932, 627, 271, 1147, 688, 589, 555, 333, 241, 264, 626], [40438, 219, 320, 270, 467, 451, 5451, 267, 648, 598, 274, 276, 273, 271], [278, 211, 248, 254, 223, 283, 6226, 5363, 847, 578, 273, 208, 379, 342], [214, 1189, 221, 241, 367, 269, 4707, 17194, 277, 654, 397, 286, 301, 265, 524], [256, 244, 361, 199, 233, 10120, 8319, 855, 434, 354, 279, 218, 290, 365], [256, 5768, 261, 218, 222, 269, 309, 11321, 303, 310, 347, 243, 230, 211, 295]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

