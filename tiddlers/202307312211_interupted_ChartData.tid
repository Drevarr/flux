created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_interupted_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Xanvias Einzbern", "Mort\u00e4rion", "K\u00e2 \u00d4tik R\u00e6j", "Arriasa", "Arcanophage Farra", "Crusader Siolith", "Drevarr Moonwillow", "Solus Sanctus", "Zaedy Zae", "Sygaldry Verdandi", "Rayla Shadowmoon", "Rahani Sunray", "Bella Sassy", "Rozaalyna", "Kisumaiasu", "My Birthday Girl", "Klenga", "Ex Warcraft", "Belvyn Brightblade", "Oo Dads Mad", "Blanco Padre Guard", "Legacy Of Mathus", "Cedryn X", "Cat Wigglebooty", "Name Is What", "Tegan Parker", "Black Raspberry Pie", "Aira Draugr", "Glorious Gluvs", "Etchery Howls", "Newtype Khan", "Mistwalker Cael", "High Sorcer Baradun", "Bee Nemesis", "Be\u00eb", "Grasszanine", "Primal Clone", "Sub Train", "Marshall R", "Tootsie Pop Rocks", "Audens Silvermarker", "Tribal S", "Mike The Archmagus", "Keypek The Drunk", "Revitiel", "Venomina The Sly", "Kary\u00edna", "Daphne Agla\u00e9", "Mister Jekyll", "Eibh\u00ebar"];
const professions = ["Chronomancer", "Berserker", "Scrapper", "Berserker", "Druid", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Druid", "Firebrand", "Herald", "Chronomancer", "Firebrand", "Scourge", "Scourge", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Berserker", "Firebrand", "Berserker", "Berserker", "Scrapper", "Scourge", "Tempest", "Chronomancer", "Herald", "Berserker", "Druid", "Spellbreaker", "Vindicator", "Tempest", "Berserker", "Scourge", "Spellbreaker", "Chronomancer", "Firebrand", "Herald", "Scrapper", "Firebrand", "Druid", "Weaver", "Scrapper", "Vindicator", "Druid", "Vindicator", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Interupted per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0], [0, 3, 0], [0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 4, 1], [0, 1, 0, 0, 0, 4, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 4, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 5, 2], [0, 3, 5, 0, 0], [0, 7, 1, 0], [0, 2, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 3, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0], [0, 4, 4, 0, 0, 1, 0, 0, 0, 0], [0, 4, 1, 1, 0, 0, 1, 0, 0, 0, 2, 0], [1, 2, 4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 3, 4, 0, 1, 0, 0, 0, 2, 0, 0], [1, 4, 2, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0], [1, 5, 4, 0, 0], [0, 4, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0], [0, 1, 5, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0], [1, 5, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0], [0, 3, 5, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0], [0, 7, 0, 0, 0, 2, 0, 0, 3, 0, 0], [0, 8, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0], [0, 4, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0], [0, 4, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 4, 0], [2, 5, 3, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0], [0, 6, 3, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0], [0, 9, 4, 0, 1], [0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 8, 1, 0, 0, 1, 0, 2, 2], [1, 6, 8, 1, 0, 1, 0, 0, 0, 0, 0], [0, 8, 3, 0, 0, 1, 0, 1, 0, 0, 0, 4, 0, 0], [0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0], [0, 10, 3, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0], [0, 6, 9, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0], [0, 7, 4, 0, 0, 1, 1, 3, 0, 0, 0, 0, 4, 0, 0], [2, 6, 10, 0, 1, 1, 0, 0, 2], [0, 5, 7, 0, 1, 1, 0, 1, 7, 0, 0], [2, 13, 2, 0, 0, 1, 0, 3, 0, 0, 0, 0, 4, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

