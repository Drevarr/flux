created: 20230310230833000
creator: Drevarr
modified: 20230705163521616
modifier: drevarr
tags: ChartData
title: 202303102308_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Alatreon", "Mac Chiato", "Zadie Miststep", "Drevarr Moonwillow", "\u00c1rkantor"];
const professions = ["Tempest", "Tempest", "Tempest", "Scrapper", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1593.8636, 1103.3206, 1435.4455, 371.2457, 2508.3231, 462.7003], [1.5905, 1136.2591, 410.88, 2075.2154, 1201.4531, 203.9857, 601.3107, 1281.5361, 407.7253, 869.8246, 1149.3793, 1135.5938, 485.0556, 1186.5368, 391.1795, 1623.9773, 10.625, 2432.3827, 416.1613, 992.7362, 973.2994, 1719.6512, 563.5524, 1282.4483, 234.575, 780.8804, 1949.1765, 709.5604, 1572.3108], [684.9364, 841.527, 966.2273, 417.2857, 1646.9538, 1229.5056, 84.4571, 608.9061, 1167.3918, 152.3297, 1631.386, 1538.3448, 875.8958, 307.5741, 1160.3263, 227.8846, 163.7826, 628.1818, 162.2083, 1447.5185, 351.6129, 883.816, 836.2166, 1154.7209, 511.7413, 1608.0172, 142.225, 1056.4457, 1277.0196, 682.3407, 1678.7095], [1763.3, 922.7746, 1358.4136, 495.6686, 3216.4769, 1631.6433, 131.5714, 708.1974, 1580.8041, 365.5165, 2121.9649, 1622.2931, 1086.5938, 377.0185, 1279.4211, 650.7436, 448.913, 431.8864, 647.5833, 2927.0123, 661.3226, 1046.8773, 1231.8089, 1843.5349, 539.2867, 1508.8448, 346.95, 940.8478, 1549.902, 768.0989, 1730.2838], [2341.3182, 2188.9905, 2907.5773, 1204.6457, 5629.6769, 2723.4374, 80.9714, 905.6278, 3380.6289, 653.4176, 4504.8947, 4448.2241, 1529.1979, 597.963, 2373.4105, 539.7821, 304.8261, 1425.7273, 1458.6667, 4726.8025, 1264.9355, 1928.7055, 1283.0828, 4041.4302, 983.0629, 1867.3966, 774.5917, 1945.9891, 3623.2745, 1250.6813, 3322.75]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

