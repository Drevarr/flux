created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Jmbrage Rev", "Oo Dads Mad", "Belvyn Brightblade", "Govinda Ektar", "Aira Draugr", "Necrotic Windrunner", "Jimbo The Pleb", "Lord Erin The Wise", "Luke The Ghastly", "Rockdemon", "Mort\u00e4rion", "Amiti\u00e9l", "Jimbo One Eye", "Daphne Agla\u00e9", "Venomina The Sly", "Rahani Sunray", "Morton Saltbringer", "Zaylen Harker", "Lucky Luprac\u00e1n", "Rina Of Theros", "Inedible Plant", "Glorious Gluvs", "Klengah", "Solus Sanctus", "K\u00e2 \u00d4tik R\u00e6j", "Cedryn X", "Black Raspberry Pie", "Legacy Of Mathus", "Kisumaiassu", "Koralia Danai", "Mistwalker Cael", "Be\u00eb", "Keypek The Drunk", "Xanvias Einzbern", "\u00c1rk\u00e1ntor", "Arriasa", "Blancooo Padreee", "Mike The Archmagus", "Tegan Parker", "Tootsie Pop Rocks", "Arcanophage Farra", "Tribal S", "Sub Train", "Xenryeth", "Bella Sassy", "Eibh\u00ebar", "Newtype Khan", "Drevarr Moonwillow", "Zaedy Zae", "Ryvalia Fazebringer"];
const professions = ["Vindicator", "Berserker", "Firebrand", "Vindicator", "Herald", "Scourge", "Berserker", "Weaver", "Scourge", "Daredevil", "Scrapper", "Firebrand", "Scrapper", "Scourge", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Scrapper", "Scourge", "Vindicator", "Berserker", "Druid", "Firebrand", "Berserker", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Scourge", "Scrapper", "Berserker", "Scourge", "Druid", "Spellbreaker", "Weaver", "Tempest", "Scrapper", "Spellbreaker", "Druid", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Spellbreaker", "Scrapper", "Druid", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.7295, 0.0417, 0.4468, 1.6034, 0.3506], [0.0659, 0.0133, 0.1692, 0.9619, 0.3333, 0.26, 0.3968, 0.1366, 0.1, 0.268], [0.022, 0.0, 0.0571, 0.0476, 0.64, 0.5873, 0.4098, 0.4167, 0.5052], [0.2459, 0.8085, 0.3448, 0.4805, 1.02, 0.5614, 0.3816, 0.4118], [0.033, 0.0, 0.0692, 0.7714, 0.1429, 0.42, 1.0794, 0.4683], [0.044, 0.0267, 0.0769, 0.2, 0.3333, 0.22, 0.1429, 0.161, 0.15, 0.0928, 0.1557, 0.0, 0.3404, 0.5862, 0.1774, 0.2982, 0.0, 0.4211, 0.4824], [0.5319, 0.6724, 0.3117, 0.78, 0.3548, 0.6667, 0.0, 0.8553, 0.5882], [0.2088, 0.0267, 0.0538, 0.3524, 0.0, 0.0, 0.3333, 0.078, 0.15, 0.3918, 0.2623, 0.0417, 0.4681, 0.4655, 0.2468, 0.62, 0.2903, 0.193, 0.2632, 0.0824], [0.2049, 0.0833, 0.6596, 0.9828, 0.4026, 0.94, 0.5161, 0.7368, 0.0, 0.3289, 0.5882], [0.5164, 0.2766, 0.7414, 0.3896, 1.04, 0.4839, 0.9825, 0.0, 0.4211, 0.3529], [0.0659, 0.0267, 0.1154, 0.4857, 0.1905, 0.58, 1.0159, 0.1902, 0.2833, 0.8247, 0.4016, 0.0, 0.8936, 0.5], [0.0488, 0.1167, 0.2577, 0.7377, 0.5957, 0.931, 0.6883, 1.0, 0.9355, 0.614, 0.0, 0.4474, 0.3647], [0.033, 0.0, 0.2077, 0.5048, 0.0952, 0.5, 1.2857, 0.7171, 0.35, 0.6186, 0.541], [0.033, 0.0267, 0.0923, 0.5905, 0.1905, 0.22, 0.7302, 0.278, 0.3333, 0.2887, 0.2623, 0.0417, 0.5106, 0.6897, 0.5161, 0.3509, 0.0, 0.5921, 1.0235], [0.1868, 0.0, 0.1077, 0.2857, 0.0, 0.68, 0.2063, 0.2634, 0.1333, 0.7113, 0.2623, 0.0, 0.5319, 0.7586, 0.3636, 0.86, 0.2419, 0.7368, 0.0, 0.4211, 0.4353], [0.2381, 0.44, 0.6825, 0.3122, 0.2, 0.6082, 0.1148, 0.4468, 1.2931, 0.4805, 0.82, 0.6935, 0.7368, 0.0, 0.4474, 0.4471], [0.0549, 0.0, 0.1154, 1.0095, 0.1429, 0.12, 0.4127, 0.3707, 0.5984, 0.0833, 0.3191, 0.7143, 0.92, 0.5806, 0.6667, 0.0, 0.4737, 0.3176], [0.033, 0.0267, 0.1154, 0.619, 0.1429, 0.12, 0.6032, 0.2293, 0.2333, 0.3402, 0.5902, 0.0417, 0.5319, 1.1034, 0.5714, 0.72, 0.1754, 0.0, 0.7237, 0.4824], [0.0667, 0.1429, 0.56, 0.4603, 0.4976, 0.5333, 0.3093, 0.6475, 0.0, 0.6809, 1.4138, 0.2597, 1.5, 0.9677, 0.0, 0.0], [0.0659, 0.16, 0.1538, 0.8571, 0.1905, 0.24, 0.4603, 0.3024, 0.1167, 0.4021, 0.5492, 0.0417, 0.4894, 1.0345, 0.2903, 0.8772, 0.0, 0.5395, 0.6235], [0.0879, 0.0533, 0.1923, 0.8667, 0.0476, 0.32, 0.6667, 0.2683, 0.1333, 0.3608, 0.4016, 0.1667, 0.4255, 1.2759, 0.5584, 0.32, 0.2581, 0.7544, 0.6053, 0.2471], [0.044, 0.0267, 0.1692, 0.6476, 0.0, 0.4, 0.619, 0.2829, 0.2667, 0.2784, 0.4426, 0.0417, 0.4681, 0.931, 0.3896, 0.64, 0.5806, 0.6667, 0.0, 0.6053, 0.8353], [0.044, 0.0933, 0.1923, 0.5143, 0.1429, 0.36, 0.5714, 0.2585, 0.2167, 0.6907, 0.5328, 0.5106, 1.0172, 0.2727, 0.92, 0.4032, 0.4386, 0.0, 0.6842, 0.6], [0.033, 0.1733, 0.1154, 0.6667, 0.3333, 0.22, 0.7302, 0.239, 0.35, 0.3608, 0.5328, 0.2083, 0.4255, 0.7241, 0.7273, 0.72, 0.6935, 0.5088, 0.0, 0.6579, 0.4588], [0.022, 0.0133, 0.1769, 0.5333, 0.381, 0.26, 0.5238, 0.3854, 0.2167, 0.7113, 0.4262, 0.0833, 0.383, 0.8793, 0.2468, 1.16, 0.3065, 0.3158, 0.9737, 0.7765], [0.033, 0.08, 0.1231, 0.4952, 0.1429, 0.32, 0.7143, 0.4098, 0.2667, 0.2371, 0.5328, 0.0, 0.2979, 0.7069, 0.6364, 0.6, 0.5645, 0.6491, 0.0, 1.1184, 0.7647], [0.0549, 0.0667, 0.1308, 0.581, 0.0952, 0.2, 0.6032, 0.4195, 0.2667, 0.3505, 0.623, 0.0417, 0.6383, 0.7273, 0.84, 0.5, 0.8596, 0.0, 0.8816, 0.7059], [0.0549, 0.1905, 0.64, 0.9048, 0.8537, 0.4667, 0.6804, 0.541, 0.0417, 0.4043, 1.3793, 0.5584, 0.76, 0.5323, 0.807], [0.022, 0.0533, 0.1154, 0.6571, 0.0, 0.2, 1.0952, 0.3317, 0.2833, 0.4742, 0.5328, 0.5957, 1.3448, 0.4545, 1.36, 0.5, 0.4912, 0.0, 0.5921, 0.2353], [0.033, 0.04, 0.1769, 0.7143, 0.1905, 0.16, 0.4762, 0.1854, 0.1, 0.567, 0.7049, 0.0, 0.3617, 1.0862, 0.4156, 0.86, 0.6935, 0.8596, 0.0, 1.1184, 0.5529], [0.022, 0.0667, 0.1769, 0.3524, 0.2381, 0.24, 0.9841, 0.3268, 0.0333, 0.7216, 0.6066, 0.0, 0.6596, 0.6034, 0.3117, 1.14, 0.4516, 1.2807, 0.7105, 0.6941], [0.044, 0.0, 0.1462, 0.8857, 0.1429, 0.24, 1.381, 0.1902, 0.1167, 0.5464, 0.541, 0.0417, 0.6596, 1.2414, 0.3871, 1.1579, 1.0263, 0.8235], [0.0549, 0.0133, 0.0923, 0.8571, 0.0952, 0.44, 0.6984, 0.3951, 0.3333, 0.6289, 0.3197, 0.125, 0.5745, 1.2759, 0.4286, 0.56, 0.4839, 0.3333, 0.0, 0.8421, 0.9529], [0.0549, 0.0133, 0.1385, 0.2, 0.0952, 0.3, 1.0159, 0.4146, 0.3333, 0.8454, 0.8361, 0.0417, 0.3191, 1.1552, 0.6234, 1.1, 0.7419, 0.8246, 0.8158], [0.0549, 0.2, 0.1462, 0.7905, 0.0, 0.36, 0.7619, 0.5463, 0.4667, 0.567, 0.7049, 0.125, 0.5957, 1.069, 0.7742, 0.4211, 0.0, 0.75, 0.9294], [0.033, 0.04, 0.1538, 0.2667, 0.0476, 0.14, 0.5714, 0.1756, 0.1667, 0.9794, 1.0574, 0.4255, 1.1379, 0.5455, 1.46, 1.2258, 0.8246, 0.0, 0.9079, 0.3765], [0.0549, 0.1467, 0.2, 0.8857, 0.0, 0.46, 1.127, 0.5512, 0.25, 0.6804, 0.4918, 0.4255, 0.8966, 0.6623, 0.24, 0.2742, 1.1579, 0.0, 0.6842, 0.6706], [0.011, 0.2267, 0.1538, 0.6667, 0.1905, 0.36, 0.381, 0.5756, 0.3167, 0.701, 0.6885, 0.0833, 0.5745, 1.1897, 0.4156, 0.84, 0.5323, 0.7719, 0.6842, 0.8471], [0.022, 0.2, 0.1077, 0.7048, 0.3333, 0.3, 0.5873, 0.4537, 0.8525, 0.6809, 0.7931, 1.013, 0.96, 1.1452, 1.7719, 0.8158, 0.2941], [0.0769, 0.0267, 0.1923, 0.6381, 0.2381, 0.22, 1.0, 0.2927, 0.0333, 0.4845, 0.9672, 0.7021, 1.7069, 0.5584, 0.9, 0.7258, 0.8596, 0.8421, 0.8118], [0.0549, 0.1615, 0.8095, 0.0952, 0.46, 0.6984, 0.4878, 0.4, 0.9485, 0.8033, 0.0417, 0.3617, 1.1552, 0.5455, 0.58, 0.7419, 0.8772, 0.0, 0.9211, 0.4824], [0.022, 0.1467, 0.1154, 0.7714, 0.0952, 0.24, 1.0, 0.3024, 0.15, 0.9175, 0.7541, 0.0, 0.383, 1.2759, 0.9091, 1.08, 0.7903, 0.7018, 0.0, 0.5395, 1.0], [0.0549, 0.0933, 0.0846, 0.6571, 0.0, 0.24, 0.7778, 0.678, 0.15, 0.9588, 0.8361, 0.125, 0.4894, 1.2931, 0.4935, 0.86, 0.5323, 0.8421, 0.0, 0.8553, 0.6824], [0.0549, 0.0133, 0.1538, 0.9905, 0.0476, 0.46, 0.9365, 0.3561, 0.35, 0.3711, 0.7705, 0.7021, 1.431, 0.6234, 0.52, 0.9677, 1.4737, 0.6974, 0.7059], [0.0549, 0.1733, 0.1769, 0.8571, 0.1429, 0.26, 0.8889, 0.4, 0.2, 0.8454, 0.623, 0.7021, 1.0, 0.7143, 0.96, 1.2419, 1.1404, 0.0, 0.6184, 0.8118], [0.0879, 0.0267, 0.1462, 0.819, 0.0476, 0.34, 0.6825, 0.6049, 0.15, 1.0825, 0.7705, 0.0417, 0.5745, 0.9655, 0.5325, 0.98, 0.9516, 0.9825, 0.0, 0.75, 0.7176], [0.0989, 0.1333, 0.1769, 1.0286, 0.2381, 0.58, 0.8571, 0.3561, 0.4667, 1.2474, 0.5656, 0.0, 0.6596, 1.069, 0.8312, 1.08, 0.371, 0.8947, 0.8816, 0.8588], [0.0549, 0.16, 0.1231, 0.7524, 0.0476, 0.34, 0.9683, 0.5073, 0.3, 1.0722, 0.7705, 0.0, 0.5319, 1.0517, 0.4026, 1.32, 0.871, 1.3509, 0.0, 0.6579, 1.0824], [0.033, 0.1467, 0.1615, 1.019, 0.0476, 0.38, 0.873, 0.3463, 0.35, 0.8041, 1.123, 0.0, 0.5957, 1.0517, 0.7273, 1.7, 0.3065, 0.8947, 0.0, 1.1974, 1.3412], [0.0769, 0.1733, 0.1231, 1.0952, 0.2381, 0.3, 0.8571, 0.6293, 0.3, 1.2062, 0.918, 0.5957, 1.3276, 0.2857, 0.96, 1.1774, 1.6316, 1.1447, 1.1529]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

