created: 20230322220917000
creator: Drevarr
modified: 20230705163522905
modifier: drevarr
tags: ChartData
title: 202303222209_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Eibh\u00ebar", "Smol Gluvs", "Abigail Ryn", "Grasszanine", "Dark Sidiuz", "Seren Nightroad", "Xanvias Einzbern", "Einar Xxl", "Newtype Khan", "Husky Guard", "Venomina The Siren", "Primal Clone", "Nazhul Naxxremis", "Ryvalia Fazebringer", "Black Raspberry Pie", "Sizzln Sisigbringer", "Charred Fishbringer", "Ark Darkness", "Elonith Primal", "Gabe Malhorn", "Zadie Miststep", "Kiloak", "Drevarr Moonwillow", "Blanco Padre Guard", "Solus Sanctus", "Koralia Danai", "Viral Marketing", "Zaylen Harker", "Johosh The Great", "Bella Sassy"];
const professions = ["Scourge", "Chronomancer", "Scourge", "Tempest", "Spellbreaker", "Scourge", "Scourge", "Berserker", "Firebrand", "Spellbreaker", "Dragonhunter", "Tempest", "Chronomancer", "Scourge", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.5946, 29.2298, 18.492, 0.0, 152.4336, 0.0, 10.8288, 10.7722, 16.8941, 0.0, 36.073, 21.2268, 194.88, 34.6104, 80.6371, 12.852, 6.1525, 22.6334, 32.203, 50.1001, 0.0, 0.0, 21.0959], [117.1526, 80.1173, 19.849, 0.0, 53.0112, 26.0813, 0.0, 15.9466, 25.5398, 0.0, 16.6003, 10.0548, 132.356, 82.9251, 37.4544, 58.608, 0.0, 0.0, 31.4895, 9.2492, 31.1731, 0.0, 23.3049, 0.0, 15.6013, 0.0], [39.3811, 49.1777, 62.629, 0.0, 179.4672, 45.8496, 109.8432, 37.9613, 34.5521, 0.0, 31.0886, 44.835, 185.542, 0.0, 28.5926, 0.0, 42.72, 38.1667, 39.2727, 35.9459, 7.6666, 0.0, 0.0], [142.416, 0.0, 0.0, 0.0, 65.1024, 26.1734, 31.68, 0.0, 0.0, 0.0, 71.639, 0.0, 239.54, 109.6346, 5.4346, 35.064, 0.0, 21.6632, 50.3803, 141.4829, 0.0, 11.0671, 6.2654, 34.1128, 21.5927], [71.0842, 78.5974, 0.0, 0.0, 25.872, 0.0, 16.4448, 22.1558, 7.1181, 0.0, 34.7802, 279.734, 81.0373, 14.1005, 23.508, 123.9542, 37.4132, 3.924, 88.7787, 113.6045, 0.0, 3.0484, 6.1013, 0.0, 1.7047], [285.0797, 45.1338, 39.399, 0.0, 118.0608, 0.0, 22.896, 26.1072, 0.0, 326.424, 0.0, 6.032, 85.2051, 41.184, 35.0235, 6.5607], [34.7663, 37.812, 0.0, 42.0288, 71.5622, 10.5408, 0.0, 15.1833, 0.0, 61.7126, 36.897, 539.98, 64.676, 27.5645, 0.0, 0.0, 53.9827, 12.2698, 96.5112], [64.1491, 80.1716, 58.42, 0.0, 124.1856, 46.9094, 9.9072, 101.4653, 50.6825, 0.0, 40.8038, 52.9788, 274.456, 128.1634, 31.2365, 10.404, 0.0, 0.0, 12.4207, 0.0, 26.6746, 0.0, 0.0, 0.0, 0.0, 0.0], [6.7267, 10.4333, 94.521, 697.914, 82.7154, 48.1277, 72.612, 45.4661, 71.03, 35.5108], [349.2288, 168.7837, 1.196, 0.0, 69.432, 6.912, 6.7104, 14.4883, 0.0, 81.2275, 0.0, 193.256, 0.2797, 49.5475, 5.868, 19.6742, 14.9247, 54.8716, 0.0, 58.2912, 45.8109, 120.8765, 34.2547, 0.0, 0.0], [438.1459, 55.2842, 3.979, 35.811, 24.4992, 28.8, 7.9488, 38.9491, 12.1895, 7.6253, 16.0512, 38.4258, 450.66, 133.9667, 16.9402, 0.0, 8.6205, 0.0, 0.0, 7.9179, 0.0, 0.0, 0.0, 3.2832, 0.0], [15.6038, 30.9939, 0.0, 0.0, 124.8192, 15.575, 26.3808, 73.1002, 34.1243, 0.0, 82.5792, 31.458, 342.258, 15.4523, 41.616, 52.344, 71.397, 15.5043, 52.1474, 59.3493, 85.6627, 56.6162, 40.2922, 30.6979, 0.0, 33.7878], [500.3136, 16.9896, 21.045, 0.0, 151.5888, 31.2422, 0.0, 110.3558, 0.0, 8.1946, 16.4934, 159.558, 0.0, 48.96, 0.0, 0.0, 19.8223, 0.0, 1.1211, 0.0, 251.2545, 46.2344, 0.0, 0.0, 0.0], [66.3782, 107.4201, 41.814, 0.0, 53.7504, 6.0365, 161.0496, 66.7027, 10.4787, 0.0, 146.1504, 29.9292, 354.032, 3.9155, 73.9786, 17.64, 31.2492, 34.9499, 65.5086, 179.0289, 115.9488, 0.0, 3.4902], [282.3552, 18.7537, 88.481, 0.0, 5.5968, 86.4922, 0.0, 0.0, 0.0, 0.0, 0.0422, 73.6764, 481.11, 0.0, 0.0, 24.336, 0.0, 204.251, 2.5295, 209.8596, 81.5443, 0.0, 0.6627, 23.6117, 0.0], [304.3987, 157.5477, 40.204, 17.388, 0.0, 16.9114, 0.0, 71.736, 0.0, 0.0, 65.3453, 8.8788, 1477.028, 61.2499, 80.3434, 0.0, 0.0, 12.2296, 0.0, 2.8729, 16.727, 0.0, 0.0, 0.0, 0.0, 1.6901], [297.216, 44.1296, 72.818, 46.92, 58.7664, 144.7373, 68.6304, 93.2803, 36.324, 59.1302, 59.305, 74.2056, 642.698, 27.1989, 58.8989, 60.696, 123.6761, 69.4071, 41.6401, 286.5863], [883.4746, 87.5536, 25.898, 0.0, 69.9072, 104.6477, 5.2992, 41.16, 52.1489, 106.1069, 8.7318, 876.96, 24.1923, 8.7638, 81.54, 0.0, 17.7358, 17.4149, 116.1761, 110.4998, 2.2861, 62.2496, 4.5691, 0.0, 10.5632], [320.0026, 184.8528, 242.7034, 59.4432, 35.8445, 38.493, 68.5133, 79.3212, 1072.652, 27.6184, 57.3811, 102.06, 64.7926, 23.9665, 132.8333, 231.7215, 0.0], [483.2237, 57.4554, 61.019, 28.819, 59.7168, 168.4224, 56.304, 84.5309, 58.5033, 16.5485, 93.7728, 81.1146, 894.418, 229.3376, 38.7763, 66.6, 165.6314, 21.0105, 5.5455, 101.8117, 221.8234, 17.9672, 29.7331, 0.8208, 0.0, 50.9804], [1397.046, 467.8347, 92.3875, 97.416, 223.8544, 94.0981, 57.0119, 202.7125, 64.8173, 55.3839, 104.7729, 163.2571, 0.0, 91.3539], [871.3382, 50.9418, 104.006, 10.764, 157.3968, 59.6275, 2.6784, 67.6906, 76.1306, 15.6749, 76.4122, 125.4792, 1126.65, 177.5968, 77.6506, 62.532, 28.7118, 5.0425, 37.7485, 113.7937, 96.3072, 48.1863, 50.4757, 0.4925, 12.872, 6.2942], [446.3194, 139.0382, 35.144, 0.0, 351.7536, 98.473, 62.352, 264.7882, 78.6968, 30.239, 255.7632, 116.7474, 961.814, 337.2242, 187.5168, 66.42, 28.7465, 47.1505, 16.0528, 270.7505, 46.4429, 43.6498, 106.7168, 69.4944, 0.0, 45.8518], [1058.3366, 24.5888, 62.353, 33.764, 153.4368, 91.561, 27.504, 105.887, 61.5583, 27.2064, 167.6083, 81.3204, 1497.734, 258.4243, 45.0922, 62.424, 26.9738, 31.7041, 51.0124, 125.4954, 68.809, 12.1984, 88.117, 89.7134, 0.0, 0.0], [1083.3523, 49.4491, 39.882, 140.898, 118.6944, 93.911, 96.8256, 125.5027, 111.9657, 33.1094, 228.6874, 77.616, 1397.452, 192.4198, 34.5168, 12.24, 30.8321, 15.5043, 96.7387, 138.0379, 221.1264, 79.9949, 2.3194, 97.9488, 0.0, 23.1517], [616.9709, 15.5241, 66.493, 220.708, 66.3168, 220.7693, 229.1904, 205.7059, 145.3875, 51.4051, 203.4701, 88.0824, 862.344, 176.6878, 50.8205, 81.324, 433.5267, 93.4315, 45.175, 106.5064, 153.1411, 126.931, 126.4652, 137.2104, 0.0, 33.0739], [1376.1101, 0.0, 87.078, 0.0, 58.3968, 216.5299, 114.1632, 199.0733, 120.0309, 19.8528, 114.513, 1542.394, 290.5176, 61.8365, 91.224, 162.7116, 10.6646, 46.31, 259.8196, 229.2365, 20.9855, 91.7177, 141.1776, 0.0, 23.6763], [1293.1373, 43.5054, 128.961, 167.394, 137.016, 229.5245, 148.6368, 526.9891, 140.4689, 114.5549, 217.7364, 1607.354, 135.3651, 102.6202, 77.22, 70.5976, 135.0468, 147.8808, 260.24, 331.6896, 97.1763, 117.9606, 65.3357, 0.0, 69.8632], [1532.1485, 12.7015, 76.498, 0.0, 177.8304, 235.008, 93.9168, 102.5002, 131.2733, 154.007, 113.7192, 2125.41, 186.8962, 92.8282, 94.788, 159.0618, 70.2475, 112.3375, 272.1519, 259.079, 89.6215, 73.4713, 150.7262, 8.4034, 59.6787], [1409.0515, 41.1714, 102.787, 182.528, 144.7776, 277.7242, 171.3888, 180.2573, 100.8456, 210.7776, 168.756, 2378.754, 309.6757, 101.641, 88.632, 120.8605, 115.5433, 62.0386, 136.9869, 313.632, 56.3483, 82.8154, 133.8725, 12.9494, 87.0558], [1566.576, 13.0272, 49.197, 246.146, 295.416, 334.0339, 351.072, 372.3216, 226.0089, 108.913, 65.5987, 95.9322, 1731.59, 313.801, 121.0781, 182.7, 121.799, 133.0762, 177.9434, 336.5462, 412.2835, 45.9359, 15.7281, 68.2632, 0.0, 98.2164]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

