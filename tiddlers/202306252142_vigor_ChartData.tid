created: 20230625214256000
creator: Drevarr
modified: 20230705163536188
modifier: drevarr
tags: ChartData
title: 202306252142_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Booboo Hurts", "Arriasa", "Drumina", "Gamora Titus", "Blaze All Might", "Tacitus Kilgore I", "Ani Deasun", "Shrimp Tempsura"];
const professions = ["Firebrand", "Firebrand", "Druid", "Druid", "Dragonhunter", "Firebrand", "Spellbreaker", "Vindicator", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 29.7, 0.0, 8.2579, 52.5059, 14.9778, 62.2498, 0.0, 0.0, 15.3126, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 29.4354, 14.3329, 0.0, 64.2675, 0.0, 23.3165, 27.375, 0.0, 71.257, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 59.0695, 26.6961, 172.095, 0.0], [51.29, 0.0, 0.0, 0.0, 0.0, 11.9959, 0.0, 0.0, 38.745, 0.0, 58.5941, 0.0, 51.1409, 0.0, 0.0, 47.3387, 36.7484, 0.0, 0.0], [62.8821, 0.0, 0.0, 3.0613, 0.0, 36.8626, 28.415, 0.0, 105.93, 4.032, 59.8368, 3.0219], [40.0739, 0.0, 2.4542, 15.8915, 32.2898, 31.8946, 0.0, 87.7781, 131.7525, 24.129, 65.1802], [47.088, 62.8482, 0.0, 62.2178, 79.6198, 23.0764, 9.4783, 111.3849, 47.1075, 22.155, 138.3533, 5.5328, 41.0618, 84.6677, 11.1875, 24.7008, 112.4987], [91.5437, 39.382, 10.3277, 68.7323, 58.3947, 35.3262, 210.7463, 54.138, 74.7187, 65.7045, 100.8034, 288.6808, 36.855, 17.9454, 122.7614], [319.3097, 678.5424, 101.3267, 78.0526, 333.4889, 183.5688, 57.4825, 23.1898]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

