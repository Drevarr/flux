created: 20230208220141000
creator: Drevarr
modified: 20230705163518934
modifier: drevarr
tags: ChartData
title: 202302082201_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Xyntharos", "Arcanophage Farra", "Zadie Miststep", "Newtype Khan", "\u00c9\u00efbhear", "Drevarr Moonwillow", "Elonith Primal", "Mac Aaroni"];
const professions = ["Firebrand", "Vindicator", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[419.593, 19.788, 80.9754, 47.7574, 0.0, 0.0, 0.0, 200.0856, 130.9946, 36.8746, 104.405], [264.5971, 5.9597, 55.615, 13.8837, 11.891, 14.6931, 11.8919, 297.2112, 56.7229, 48.7344, 267.995], [875.5834, 54.0096, 169.6257, 9.0229, 0.0, 0.0, 0.0, 430.3728, 45.9449, 0.0, 256.025], [573.3619, 23.0006, 151.9402, 30.8053, 0.0, 28.8336, 123.3263, 555.2976, 92.7879, 24.3672, 426.93], [971.28, 0.0, 186.9776, 15.7368, 69.897, 53.0842, 0.0, 1172.7144, 149.0962, 171.661, 818.615], [2001.0413, 167.1038, 411.4398, 72.3348, 0.0, 82.148, 72.3492, 1390.9896, 158.0088, 72.42, 1194.0075], [1955.2378, 181.6771, 478.4002, 176.1736, 95.335, 82.3783, 293.2222, 1590.732, 305.516, 72.5904, 1333.99], [2128.6368, 157.3262, 535.4612, 154.4519, 77.51, 156.0052, 121.8294, 2369.796, 493.2335, 212.6933, 2347.7825], [2668.873, 169.2456, 860.1416, 214.0575, 82.455, 169.3626, 153.7628, 2660.1432, 467.3248, 203.2531, 1810.4625]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

