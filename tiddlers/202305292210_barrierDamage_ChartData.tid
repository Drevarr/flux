created: 20230529221000000
creator: Drevarr
modified: 20230705163532135
modifier: drevarr
tags: ChartData
title: 202305292210_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Solus Sanctus", "Lord Erin The Wise", "Tegan Parker", "Riann Swordbreak", "Drevarr Moonwillow", "Rozaalyna", "Smol Gluvs", "Tootsie Pop Rocks", "Cyclotechnist Farra"];
const professions = ["Chronomancer", "Firebrand", "Weaver", "Tempest", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 9193, 0, 0, 856, 0, 2463, 698, 0, 14163, 0, 0, 10608, 0, 6165], [0, 14416, 0, 0, 1248, 0, 0, 1114, 0, 10897, 0, 1517, 10472, 0, 5144], [0, 15931, 0, 1248, 1517, 0, 1862, 1248, 0, 5243, 0, 1517, 8778, 0, 9064], [0, 17508, 0, 0, 2496, 0, 965, 0, 0, 20809, 0, 342, 11384, 441, 4422], [802, 35721, 0, 0, 8846, 0, 1651, 7548, 1480, 24973], [859, 23154, 0, 0, 3936, 95, 2050, 7016, 968, 17881, 0, 961, 14678, 421, 9460], [0, 38576, 0, 0, 3516, 0, 6899, 4588, 6, 20656, 1248, 0, 33646, 269, 10972], [0, 39507, 0, 0, 6075, 0, 5236, 11053, 3048, 27116, 0, 1844, 22435, 379, 28127], [0, 32196, 1075, 0, 33625, 3099, 8064, 2921, 4711, 46126, 0, 4226, 45088, 396, 64326], [4761, 94347, 735, 239, 19166, 0, 25138, 15346, 2541, 62468, 216, 9959, 107267, 703, 80896]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

