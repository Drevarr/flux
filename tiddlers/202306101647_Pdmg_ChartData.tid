created: 20230610164704000
creator: Drevarr
modified: 20230705163534952
modifier: drevarr
tags: ChartData
title: 202306101647_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blackout Angel", "Eibh\u00ebar", "Arcanophage Farra", "Cedryn X", "Yngvar The Burdened", "Lindirine", "Newtype Khan", "Lucky Leipreach\u00e1n", "Little Heks", "Morv\u00e4rth", "Rakloz Blightspire", "Lord Erin The Wise", "Smol Gluvs", "Rosie Sunray", "Melli Dragonswrath", "Duke Silvver", "Kary\u00edna", "Be\u00eb", "Xyntharos", "Elonith Requiem", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Einzbern"];
const professions = ["Reaper", "Chronomancer", "Spellbreaker", "Berserker", "Scourge", "Reaper", "Spellbreaker", "Scrapper", "Reaper", "Reaper", "Berserker", "Weaver", "Reaper", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Reaper", "Vindicator", "Reaper", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[119.3256, 89.4048, 285.06, 1459.375, 296.8197, 27.8851, 160.3164, 228.1163, 117.0, 199.8148, 0.0, 136.0704, 47.5385, 1.5577, 0.0, 444.1383], [299.6512, 108.4762, 110.96, 367.9792, 531.9836, 31.1609, 144.5763, 190.1628, 30.1341, 0.0, 87.1724, 127.1408, 421.1346, 12.8269, 96.3723, 98.4146, 26.7391, 121.8371, 7.0118, 173.5469, 138.6807, 431.0099], [31.6279, 145.1905, 105.85, 754.5, 788.7869, 81.1494, 70.1469, 226.5814, 0.0, 148.4138, 210.5775, 202.0192, 0.0, 65.4894, 223.7805, 106.7826, 162.0351, 0.0, 315.6875, 164.7815, 238.6634], [480.7442, 421.5714, 141.94, 1020.6458, 608.4426, 71.1149, 132.4407, 150.0698, 38.1463, 279.7931, 125.4085, 517.8654, 80.2308, 80.9855, 37.2713, 236.8293, 125.0435, 124.2428, 59.0588, 56.2188, 198.8824, 365.198], [173.8873, 156.0769, 242.6923, 0.0, 109.6223, 72.3415, 596.1739, 443.2843, 174.9529, 512.7344, 143.7395, 865.8317], [339.4521, 348.6585, 625.6087, 232.9265, 170.3294, 274.0625, 298.7059, 1435.9406], [58.0465, 174.6429, 240.01, 1064.3333, 508.8033, 145.8506, 106.435, 252.3721, 0.0, 183.8148, 346.8276, 264.6197, 155.9038, 78.8654, 0.0, 195.1543, 35.4146, 163.0, 285.0543, 0.0, 125.2969, 199.9832, 433.9307], [400.2683, 293.2963, 171.7324, 641.0962, 545.8269, 0.0, 36.7926, 231.2683, 735.3913, 389.0511, 302.6588, 215.8438, 379.7899, 792.0297], [33.2619, 66.63, 1128.5208, 475.1639, 82.4368, 253.791, 267.186, 61.1951, 26.963, 28.4138, 519.5493, 190.9231, 12.4423, 0.0, 385.8989, 0.0, 304.3913, 490.6997, 103.0118, 248.6094, 216.5042, 511.0396], [330.0423, 266.0385, 98.1731, 0.0, 657.1596, 72.9512, 379.6087, 593.7796, 182.8588, 311.2656, 358.9832, 1222.2772], [893.1163, 539.0238, 467.94, 2121.8333, 2080.7213, 64.8966, 979.7458, 1357.7907], [70.5349, 608.7619, 1208.34, 1595.2083, 1476.8689, 32.3333, 184.8136, 186.1628, 0.0, 338.4507, 542.0577, 252.7692, 0.0, 839.3191], [1036.6744, 190.7619, 684.59, 3278.25, 1227.3279, 62.1609, 141.0565, 89.4884, 147.7317, 13.6296, 581.5517, 53.2113, 292.4038, 295.5192, 0.0, 140.6436, 306.0244, 112.6957, 534.5687, 178.2118, 298.7812, 334.9076, 1340.3069], [97.3488, 355.5238, 458.22, 2620.7083, 1866.5574, 0.0, 110.2938, 614.4884, 60.7317, 0.0, 111.7606, 309.4423, 3.0962, 311.6436, 106.0732, 639.1304, 659.7444, 163.6471, 364.8125, 518.5378, 1746.0495], [241.6977, 1236.3571, 581.79, 1309.375, 715.5574, 165.8161, 262.4068, 211.7674, 24.3049, 221.5556, 304.1379, 361.0845, 152.0, 253.8654, 0.0, 721.8032, 412.2439, 179.1739, 704.0064, 45.1059, 163.0469, 659.3445, 1573.9505], [1136.6279, 1092.7143, 1346.15, 2226.3542, 1905.7377, 175.1839, 888.3333, 401.6279, 42.6341, 2024.3704, 648.931, 744.9859, 1215.7115, 443.5, 56.2754, 228.5585, 127.9024, 488.6957, 783.8371, 130.8235, 410.2969, 546.3697, 1048.8911], [1630.1628, 469.6429, 927.75, 1148.4792, 2618.8197, 158.9655, 447.2373, 528.3256, 125.0732, 766.2963, 394.8621, 408.9014, 495.2692, 266.5962, 31.8261, 815.4734, 192.2195, 884.3478, 1014.1086, 377.8353, 938.3281, 552.6723, 1527.6337], [523.5349, 634.2143, 609.77, 625.2292, 3166.4098, 171.4483, 656.1356, 203.2326, 21.1463, 1691.5185, 745.1379, 463.0845, 948.7692, 218.9038, 57.8841, 1237.4149, 278.7317, 546.6522, 909.6837, 115.1176, 93.9688, 610.7647, 1665.505], [525.7442, 475.4762, 724.89, 1391.4583, 2459.7705, 210.5172, 470.5198, 1359.6744, 263.622, 322.3333, 298.8028, 715.1731, 228.9231, 0.0, 1399.6755, 0.0, 552.1739, 1077.6422, 298.8353, 838.6719, 953.6134, 1442.3564], [611.2326, 887.7857, 720.41, 3446.8333, 1272.377, 86.1379, 638.0113, 449.3023, 1029.7683, 887.4483, 1400.6761, 189.6346, 190.4423, 247.7681, 1837.133, 137.4878, 700.4348, 998.0671, 225.4471, 742.5469, 1248.8487, 2173.9307], [1183.0465, 1433.381, 1214.26, 3956.625, 2246.1803, 266.069, 449.3559, 459.3953, 27.3171, 754.8621, 385.169, 1123.5, 264.7308, 0.0, 1423.7394, 699.7805, 744.3478, 1249.7412, 325.5059, 723.5938, 1163.4958, 2722.4158], [1558.3023, 158.2857, 1182.82, 4655.5417, 3155.0328, 237.2414, 216.6893, 1013.2558, 65.7561, 629.8148, 764.4828, 371.0986, 48.8846, 542.3462, 2481.6809, 298.7805, 222.5652, 1301.3355, 41.5647, 275.25, 1675.5042, 1869.4455], [2626.8605, 1944.2619, 837.36, 5446.5833, 2800.3443, 169.6552, 722.7062, 620.093, 124.6707, 0.0, 377.1831, 593.9423, 114.5962, 0.0, 2707.7606, 175.6829, 206.9565, 2637.5751, 177.5529, 426.6719, 785.3613, 2630.3267]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

