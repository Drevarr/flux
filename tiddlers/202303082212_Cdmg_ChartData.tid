created: 20230308221219000
creator: Drevarr
modified: 20230705163521421
modifier: drevarr
tags: ChartData
title: 202303082212_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["My Birthday Girl", "Nelliel T", "Xyntharos", "K\u00f4sair", "Eibh\u00ebar", "Momomeko", "Jupi Jupi Jupi", "Ravioli Fetabringer", "Brother Titus", "Sp\u00edcy Cheese", "Sygaldry Verdandi", "Lord Erin The Wise", "Seren Nightroad", "Legacy Of Mathus", "Smol Daddy Tika", "Tootsie Poppa", "Dark Sidiuz", "Cerys Fireblade", "Panther B Me", "Morton Saltbringer", "Rozaalyna", "Smol Gluvs", "Xanvias Tseli", "Be\u00eb"];
const professions = ["Scrapper", "Reaper", "Vindicator", "Berserker", "Chronomancer", "Chronomancer", "Dragonhunter", "Firebrand", "Berserker", "Berserker", "Firebrand", "Weaver", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge", "Chronomancer", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[70.9231, 77.4655, 0.0, 10.4737, 38.8235, 22.4222, 37.4803, 0.9362, 33.978, 21.4869, 0.1159, 9.0845, 3.3836, 0.0, 0.0, 17.3838, 23.6043, 0.5917, 8.2532, 0.0, 7.7914, 10.1944, 33.0336, 43.0101, 9.3731, 15.9753, 22.4324, 0.0, 35.1222, 15.2727, 42.6053, 19.2963], [6.641, 3.6724, 0.0, 1.8421, 69.8971, 46.8389, 7.4158, 4.1809, 36.1099, 15.288, 4.3963, 12.2653, 7.9589, 3.2174, 0.0, 16.303, 32.9358, 6.9286, 8.6547, 10.3333, 40.6555, 25.3535, 26.2463, 55.2346, 9.9459, 26.6111, 40.95, 18.0132, 21.3889], [0.0, 4.3103, 0.0, 22.4474, 42.9265, 36.0222, 26.8244, 3.8298, 18.4286, 40.089, 7.3963, 8.7609, 0.1644, 0.0, 0.0, 28.404, 19.4973, 0.0, 0.0, 0.0, 34.8417, 1.8611, 11.5378, 25.7576, 16.3433, 1.5556, 30.1441, 0.0, 5.2111, 45.25, 50.5921, 20.5], [95.6344, 0.1064, 84.8242, 43.4869, 15.2195, 76.3469, 52.6027], [42.5385, 5.8103, 0.775, 0.0, 15.7059, 29.1944, 20.2616, 1.4043, 23.7253, 16.2147, 1.0915, 26.1778, 51.411, 0.0, 0.0, 47.0505, 49.8396, 0.0, 5.8354, 0.0, 29.0504, 10.4167, 29.7059, 30.8182, 19.2761, 17.4568, 28.6577, 38.1222, 53.4136, 27.8947, 20.8333], [13.3973, 0.0, 0.0, 4.2626, 56.9947, 0.0, 0.2278, 0.0714, 313.0144, 128.5556, 121.9412, 38.2727, 41.2463, 16.1605, 8.1171, 8.4737, 7.7, 9.6136, 15.6447, 374.1111], [16.5897, 12.2069, 0.425, 35.1842, 38.2059, 117.3667, 46.4229, 22.5745, 43.8462, 37.7749, 1.7561, 27.5539, 1.9315, 0.0, 0.0, 65.3838, 20.5775, 0.0, 35.443, 0.0, 28.9209, 164.9167, 49.7647, 78.2525, 20.8134, 44.1358, 14.6577, 0.0, 48.9, 44.7409, 67.8421, 63.5741], [187.5641, 22.0172, 0.0, 52.0526, 108.1912, 70.6, 37.6452, 73.6702, 7.6374, 36.1518, 9.9146, 72.8688, 3.2192, 0.0, 0.0, 13.0749, 0.0, 0.0, 0.0, 23.0647, 3.3333, 23.3613, 89.2929, 40.2985, 18.5062, 53.5586, 0.0, 99.0222, 26.4864, 24.25, 46.5556], [58.8892, 31.2466, 0.0, 0.0, 92.798, 86.8556, 0.0, 0.0, 2.9286, 212.1079, 37.6111, 106.0588, 58.9293, 13.4552, 98.4321, 9.1351, 0.0, 27.0556, 112.1955, 100.6842, 13.4259], [189.7534, 0.0, 0.0, 0.0, 0.6738, 0.0, 0.7722, 0.0, 26.4532, 1.2778, 177.7647, 65.101, 90.7537, 257.321, 193.5946, 0.0, 0.0, 137.2818, 70.9079, 199.3519], [123.1282, 6.2759, 0.0, 133.6316, 20.5588, 79.4333, 26.8961, 3.6809, 57.3407, 5.7853, 29.6768, 43.895, 55.4247, 0.0, 43.4747, 60.4813, 0.9917, 54.3291, 47.1429, 44.3525, 191.5, 39.437, 152.7273, 2.9328, 5.7207, 98.8889, 67.2909, 37.3421, 7.6667], [28.7692, 0.0, 0.0, 84.1579, 12.3235, 76.8667, 87.8602, 12.0319, 120.967, 24.9895, 58.122, 50.1458, 69.6301, 0.0, 0.0, 108.4343, 89.3904, 0.0, 70.0759, 0.0, 80.6187, 68.6389, 51.0756, 21.5556, 40.7239, 0.0, 24.0631, 0.0, 0.0, 56.3455, 81.6447, 31.0556], [124.2564, 23.4138, 0.0, 59.6053, 7.1176, 265.5722, 53.9677, 32.6915, 38.1758, 53.2827, 9.2073, 123.0292, 92.9726, 0.0, 0.0, 141.1717, 106.9144, 0.0, 14.962, 6.8571, 46.554, 27.9722, 108.9244], [0.0, 2.025, 43.7105, 79.7794, 162.9111, 113.0502, 20.7553, 15.3626, 20.356, 8.7378, 35.1283, 52.4521, 0.0, 0.0, 87.6364, 28.9679, 0.0, 1.2785, 25.0357, 123.1079, 0.0, 34.0672, 113.9136, 56.6216, 0.0, 41.2, 180.5227, 41.9737, 95.8519], [1.9231, 30.0, 0.0, 8.8421, 96.7647, 214.3889, 110.9462, 25.9894, 36.3516, 6.5602, 6.622, 18.3965, 69.5068, 0.0, 0.0, 71.2941, 0.0, 3.2785, 0.8571, 96.1871, 10.4444, 104.9748, 18.3737, 76.5448, 206.8642, 141.1351, 0.0, 37.5889, 132.9864, 79.0526, 49.4815], [99.7436, 52.1207, 7.95, 52.6316, 67.8382, 179.8944, 66.9713, 7.6277, 33.4396, 56.4921, 29.6829, 42.895, 153.9452, 0.0, 0.0, 73.4444, 59.4011, 0.0, 2.1392, 0.0, 28.1655, 9.5556, 180.3109, 107.3434, 22.4478, 91.284, 135.7117, 0.0, 135.1333, 81.5636, 80.6316, 208.8889], [86.734, 245.8462, 39.8743, 32.1768, 116.312, 48.5342, 0.0, 19.5667, 195.9495, 107.4225, 10.8608, 84.8849, 62.8889, 118.6891, 144.4949, 209.1418, 87.7117, 0.0, 83.6333, 89.4955, 81.6974, 125.8889], [119.6154, 18.2241, 0.0, 76.25, 46.0778, 132.9928, 0.2128, 72.6923, 18.0576, 32.4207, 67.3353, 17.5753, 0.0, 0.0, 60.404, 74.7647, 0.0, 0.0, 0.0, 289.4029, 36.9167, 195.4958, 44.4444, 32.1716, 96.0617, 96.3333, 0.0, 149.3556, 90.4636, 164.5526, 139.4074], [118.3077, 17.0, 0.0, 26.1579, 124.4412, 137.1333, 98.4731, 62.7021, 82.2088, 61.267, 19.2927, 62.4052, 160.3288, 0.0, 166.3131, 113.1872, 0.0, 52.4684, 39.4286, 21.1799, 153.3889, 74.8571, 66.0, 118.2164, 95.679, 83.7477, 0.0, 5.8778, 127.9, 49.2632, 85.5185], [38.4103, 3.3448, 0.4, 19.1316, 80.9853, 158.1722, 104.1971, 54.7021, 90.4945, 79.2618, 44.9695, 52.1924, 92.9726, 0.0, 50.8182, 138.3636, 0.0, 11.1139, 420.8571, 80.554, 0.0, 122.8235, 84.4949, 27.0, 100.3704, 74.3784, 0.0, 64.2333, 121.0136, 215.5526, 29.7407], [53.8205, 3.6034, 0.0, 189.9706, 158.9778, 107.4659, 14.766, 86.2088, 100.1257, 43.5793, 53.4023, 205.6712, 0.0, 79.4332, 0.0, 47.7089, 10.0714, 133.3381, 120.3611, 210.958, 276.2626, 41.791, 186.6667, 180.3243, 152.4444, 40.0273, 264.0658, 113.8148], [151.1316, 387.7941, 102.4833, 108.5986, 27.0319, 302.2967, 42.4293, 2.8415, 70.3324, 68.7397, 0.0, 0.0, 200.5556, 217.2086, 0.0, 69.6709, 1.7143, 99.7842, 102.6667, 145.0924, 37.9798, 136.7388, 197.037, 115.2072, 0.0, 68.1444, 208.0818, 88.4211, 232.7778], [0.0, 29.6379, 0.0, 0.0, 175.7206, 370.7278, 187.2007, 16.6596, 7.033, 74.4293, 53.1159, 121.6647, 39.7808, 0.0, 0.0, 23.303, 164.107, 0.0, 10.8354, 0.4286, 208.1151, 156.9167, 223.9916, 37.7071, 25.7015, 182.9012, 147.8829, 0.0, 8.0778, 243.0727, 186.4737, 86.0185], [112.0513, 0.9138, 140.5147, 484.5556, 189.0108, 63.8511, 261.6264, 129.1361, 46.7683, 159.2653, 311.0822, 0.0, 0.0, 267.9192, 175.9626, 0.725, 21.1899, 25.4286, 19.259, 56.3611, 310.8824, 188.899, 96.4328, 224.6914, 26.1982, 0.0, 243.4333, 305.5545, 274.0526, 381.5926]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

