created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["World Devourerer", "Drevarr Moonwillow", "Alarics Clone", "Vera Khin", "Darks Na", "Thought Bound", "Pixzil", "Bella Sassy"];
const professions = ["Guardian", "Scrapper", "Chronomancer", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.394, 2.7653, 0.8081, 40.9114, 62.1482, 0.0, 0.0, 0.0, 56.8781, 53.3747, 14.3562, 21.4771, 8.4823, 29.5293], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 61.586, 110.8629, 4.7658, 12.1077, 19.749, 40.8868, 14.5509, 0.6327, 13.5279, 47.2845, 32.7888, 0.0, 13.2935, 10.0711, 13.3146, 13.821, 20.3711, 21.5325], [81.0603, 0.0, 49.7837, 0.0, 8.955, 35.9736, 28.7298, 5.4208, 17.0607, 16.4697, 16.7111, 29.3538, 31.5795, 26.7696, 22.7814, 35.0816, 9.4605, 5.6238, 0.0, 11.9973, 40.4115], [103.7201, 135.2503, 27.0738, 14.5629, 34.1141, 15.5105, 42.2505, 48.4126, 23.7997, 49.5571, 21.5424, 0.0, 63.6422], [0.0, 4.5898, 51.0182, 21.4637, 0.0, 80.8125, 0.0, 22.1407, 17.2458, 87.489, 24.1623, 13.457, 0.8395, 0.0, 4.3261, 27.83, 0.0, 3.7757, 119.6687, 0.0, 0.99, 0.0, 0.0, 0.0, 6.8376, 49.8285, 1.1088, 0.0, 27.9414, 3.3623, 0.0, 16.9575, 1.3398, 56.898], [142.6006, 146.5635, 32.4012, 39.5802, 36.6643, 12.6326, 8.5731, 7.3205, 8.8183, 79.271, 59.4864, 8.7204, 10.6812, 87.8961, 13.7748, 13.7955, 83.5548, 105.27], [21.3111, 59.1925, 5.2884, 2.6037, 0.0, 8.8643, 39.8766, 1.5596, 0.0244, 46.9792, 17.928, 22.9039, 36.6296, 4.7346, 313.1145, 106.0269, 266.307], [209.0206, 192.7414, 53.5704, 62.1522, 148.4314, 27.3719, 69.2736, 9.8901, 23.0121, 283.4016, 128.5056, 2.6252, 230.9809, 35.7484, 69.5838, 114.699, 123.2007, 320.334]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

