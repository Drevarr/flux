created: 20230510220110000
creator: Drevarr
modified: 20230705163529416
modifier: drevarr
tags: ChartData
title: 202305102201_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Mistwalker Caelon", "Raelyn Sunray", "Tegan Parker", "Venomina The Siren", "Husky Guard", "Kary\u00edna", "Jeckyll Mbs", "Pyraliis", "Tootsy Pop Tart", "Kosa\u00efr", "Tika Fiery", "Solus Sanctus", "Lord Erin The Wise", "Sumatra Satyricon", "Maaaathexxs", "Ark Darkness", "Lucas Ryn", "Spreadflamesoflight", "Etchery Howls", "Dimsnail", "Mac Aaroni", "Sygaldry Verdandi", "Pymmera", "Mike The Archmagus", "Xanvias Einzbern", "River No Hug", "Gavann", "Smol Gluvs", "Be\u00eb", "Elonith Requiem"];
const professions = ["Chronomancer", "Vindicator", "Firebrand", "Tempest", "Tempest", "Dragonhunter", "Vindicator", "Berserker", "Berserker", "Scourge", "Weaver", "Firebrand", "Firebrand", "Weaver", "Soulbeast", "Scourge", "Firebrand", "Firebrand", "Willbender", "Druid", "Vindicator", "Tempest", "Firebrand", "Weaver", "Weaver", "Berserker", "Scourge", "Firebrand", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.5385, 39.0426, 3.3787, 0.2253, 1.4588, 2.083, 6.3116, 44.5897, 0.0, 0.0, 53.1429, 4.8974, 1.5307, 3.514, 21.3571, 6.2978], [3.8077, 0.0, 6.376, 1.1024, 1.9176, 13.679, 0.0, 11.3333, 1.4828, 0.0, 41.4, 4.0513, 2.7075, 4.6355, 0.0476, 3.7303], [0.5502, 0.0, 1.8718, 0.0, 0.0, 90.4857, 39.2308, 9.3137, 24.9533, 41.9762, 0.0], [30.4681, 3.6594, 6.5461, 0.0, 9.6834, 0.0, 37.2564, 0.0, 10.8286, 3.9487, 6.0165, 3.2804, 0.0, 6.8118], [10.6131, 2.0614, 0.0, 15.6048, 0.0, 20.9231, 0.0, 7.7714, 2.9359, 3.2925, 13.3551, 5.2051], [2.5745, 9.9074, 0.1706, 0.0941, 7.3253, 0.0, 45.2308, 0.0, 64.8571, 16.2308, 3.092, 3.5888, 2.4286, 10.5365], [7.3077, 0.2128, 13.594, 3.9317, 1.6, 4.7249, 1.3043, 2.4872, 0.0, 0.0, 21.7143, 8.7436, 7.4222, 0.0, 11.3333, 16.0702], [0.0, 19.9429, 45.6154, 14.5708, 0.0, 0.0, 29.3315], [0.0, 25.234, 56.4469], [4.8077, 54.8723, 0.6594, 2.4505, 0.3647, 6.7249, 0.0, 3.5172, 0.0, 248.0286, 6.3205, 3.2476, 27.9439, 7.9048, 3.5674], [8.1923, 0.0, 23.0191, 7.4096, 0.0, 9.4847, 0.0, 34.8974, 0.0, 0.0, 98.0286, 23.7436, 1.3514, 2.4393], [0.0, 17.1489, 8.346, 7.2389, 5.3294, 17.7817, 0.587, 0.0, 0.0, 0.0, 41.9143, 39.5513, 4.4057, 4.0748, 5.2143, 5.7781], [333.3846, 0.0, 0.5749, 2.8635, 0.0, 4.6834, 9.1812, 0.0, 11.1034, 0.0, 18.2571, 31.3333, 7.8561, 15.9813, 12.1667, 9.9354], [47.8846, 53.4894, 8.97, 9.959, 2.8706, 4.0175, 0.0, 19.8718, 4.9655, 0.0, 52.3714, 55.2692, 1.4953, 24.2523, 57.0, 2.8174], [0.0, 43.7872, 8.2234, 2.7782, 0.0, 11.2926, 1.5145, 91.9744, 32.4828, 0.0, 39.1714, 22.5, 3.6958, 0.6916, 1.2619, 15.2022], [10.5745, 10.2234, 1.8055, 3.2235, 6.5961, 3.7899, 138.9231, 15.7241, 0.0, 58.4571, 18.2436, 7.0495, 50.7196, 0.1667], [2.5722, 6.0819, 3.0, 7.3472, 0.0, 156.9744, 0.0, 0.0, 88.4, 59.4744, 4.4033, 62.9533], [48.5532, 7.1253, 6.3686, 0.0, 0.5873, 0.0, 58.3846, 3.0, 0.0, 15.6571, 25.141, 15.8632, 25.5794, 75.8095, 14.4691], [94.5983], [1.383, 27.9482, 12.3584, 3.4, 8.9017, 41.1377, 103.8974, 0.0, 17.8286, 0.0, 9.2217, 15.2056], [0.0, 0.0, 32.9046, 9.5085, 1.7647, 12.5917, 0.0, 9.8462, 32.4352, 0.0, 38.0256, 10.0401, 2.5888, 0.0, 17.8764], [0.0, 48.234, 0.0, 8.9488, 9.1176, 31.5502, 0.0, 55.4615, 0.0, 0.0, 24.0286, 21.5897, 10.5142, 51.6355, 32.0714, 7.2219], [87.8298, 0.8828, 0.7031, 0.0, 19.214, 0.0, 116.9231, 1.4537, 192.5714, 29.2051, 12.7406, 43.2617, 16.1429, 10.3511], [18.8723, 0.0, 0.0, 124.1282, 1.7931, 0.0, 37.4286, 53.3462, 30.0566, 64.4486, 0.0, 38.823], [0.0, 43.2128, 9.5395, 13.8259, 2.3647, 23.9803, 0.0, 104.0513, 0.0, 107.2571, 56.0513, 15.5377, 119.1869, 93.7143, 13.2107], [27.7692, 0.0, 41.0954, 27.6177, 0.0, 24.738, 0.0, 70.4103, 0.0, 196.2571, 104.8974, 9.9245, 2.0654, 3.5238, 17.368], [53.3077, 63.7234, 40.7439, 19.0307, 24.3412, 27.2707, 1.4275, 188.2308, 0.0, 0.0, 209.1714, 53.6282, 23.8726, 18.6449], [0.0, 443.9487, 0.0, 7.5741, 443.2571, 181.3077, 42.8491, 6.6449, 23.1429, 54.7191], [182.5, 156.8723, 8.3869, 17.7099, 2.6588, 14.7838, 0.0, 364.7692, 7.7586, 0.0, 132.8857, 109.0513, 23.4929, 85.7757, 272.1667, 21.9073], [19.5385, 0.0, 17.2752, 2.4778, 20.1294, 13.0611, 408.0256, 9.4483, 0.0, 147.6571, 138.2308, 13.9434, 152.3738, 636.6667, 19.1938], [65.9231, 163.8298, 30.8011, 25.1877, 14.7059, 31.4148, 6.913, 683.8205, 0.0, 0.0, 316.5714, 48.9103, 26.941, 134.8411, 179.5476, 25.6882]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

