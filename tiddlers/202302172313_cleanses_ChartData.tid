created: 20230217231312000
creator: Drevarr
modified: 20230705163519425
modifier: drevarr
tags: ChartData
title: 202302172313_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Minka Bringer", "Ravioli Fetabringer", "Cat Wigglebooty", "Arka\u00f1", "Bambiae", "Primal Clone", "Abigail Ryn", "Mac Aaroni", "Venomina The Siren", "Tribal S", "Tegan Parker", "Zadie Miststep", "\u00c9\u00efbhear", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2899, 0.0, 0.0, 0.0938, 0.3913, 0.3962, 0.0, 0.0, 0.1373, 0.1562, 0.2033, 0.0806, 0.0, 0.225, 0.1429, 0.0987, 0.1887, 0.3178, 0.0, 0.2708, 0.0694, 0.0, 0.098, 0.88, 0.0, 0.0619, 0.0909], [0.2899, 0.4561, 0.0, 0.4062, 0.2283, 0.3962, 0.4386, 0.0, 0.0, 0.1813, 0.1774, 0.0, 0.4375, 0.4286, 0.1931, 0.434, 0.0, 0.2056, 0.0, 0.3958], [0.1304, 0.0526, 0.05, 0.2891, 0.3913, 0.4906, 0.3509, 0.0, 0.0, 0.0938, 0.2527, 0.1048, 0.0, 0.325, 0.4286, 0.1073, 0.3396, 0.0, 0.4206, 0.0, 0.25, 0.1806, 0.0, 0.0784, 0.04, 0.0, 0.299, 0.6], [0.2754, 0.7368, 0.05, 0.7188, 0.3696, 0.1698, 0.0, 0.7843, 0.0625, 0.1154, 0.0, 0.2317, 0.525, 0.0, 0.1073, 0.5, 0.0, 0.2804, 0.0, 0.125, 0.3611, 0.0127, 0.8235, 0.16, 0.0061, 0.2887, 0.0], [0.5942, 0.1579, 0.35, 0.3203, 0.9891, 0.1132, 0.4912, 0.0, 0.6667, 0.0625, 0.3407, 0.121, 0.0, 0.3625, 1.0536, 0.3519, 0.5189, 0.0, 0.4486, 0.0, 0.2292, 0.2083, 0.0, 0.2353], [0.5507, 0.193, 0.375, 0.6328, 0.9348, 1.1321, 0.6316, 0.2353, 0.0312, 0.0824, 0.0968, 0.1098, 0.075, 0.4464, 0.2961, 0.5849, 0.4299, 0.06, 0.2917, 0.0, 0.0506, 0.0588, 1.88, 0.0976, 0.9175, 0.5455], [0.2899, 0.2982, 0.275, 0.5781, 1.087, 1.0566, 0.0, 0.0, 0.4375, 0.5, 0.2339, 0.0366, 0.2375, 0.4643, 0.485, 0.6132, 0.4579, 0.0, 0.375, 0.3611, 0.1772, 0.2353, 0.36, 0.0366, 0.5361, 0.0], [1.2754, 0.4386, 0.35, 1.1719, 1.0652, 1.1509, 0.3684, 0.7255, 0.7812, 0.9945, 0.379, 1.15, 0.5893, 0.5451, 1.1698, 0.0, 0.8785], [1.2464, 0.5088, 0.875, 1.7109, 1.7717, 1.0755, 1.4737, 1.098, 1.3438, 1.3571, 0.6129, 0.1707, 3.4, 0.0488, 1.0619, 0.9273], [0.8406, 0.6667, 0.225, 1.4141, 2.1848, 1.9623, 1.6316, 0.7843, 0.3438, 0.9231, 0.4355, 0.0, 1.9375, 1.9286, 0.5279, 1.3019, 1.7103, 0.01, 0.875, 0.6111, 0.1519, 0.5686, 0.68, 0.0, 0.8763, 0.9091], [1.0145, 0.6667, 1.15, 1.5, 2.3478, 2.8679, 0.193, 0.0, 2.098, 0.7812, 1.2198, 0.6774, 0.0, 1.5875, 1.9286, 0.9785, 2.0189, 0.0, 0.4019, 0.18, 1.0833], [1.2464, 1.0, 0.75, 1.5703, 2.1848, 1.1509, 0.2549, 0.5938, 1.3736, 0.5484, 0.122, 2.0875, 1.4464, 1.0515, 1.9245, 0.0, 0.9065, 0.05, 0.9583, 0.9028, 0.1899, 1.0, 1.32, 0.0305, 0.299, 2.6909], [1.3768, 0.6491, 1.125, 2.2344, 0.8261, 1.4528, 0.5263, 0.0, 1.3333, 0.1875, 1.0, 0.5887, 0.0, 1.65, 1.625, 1.0515, 1.8962, 1.8224, 0.4, 1.3333, 1.1806, 0.1519, 0.9608, 0.84, 0.0732, 1.0722, 1.3273], [2.1884, 1.0526, 1.4, 2.0391, 2.8261, 1.566, 1.0702, 1.2745, 1.0938, 1.1978, 0.7903, 0.0, 1.975, 2.1429, 0.9742, 1.5755, 0.0, 2.0187, 0.3, 1.2917, 0.8889, 0.2405, 1.3922, 1.16, 0.0671, 0.7835, 1.2364], [1.5797, 0.9474, 1.025, 2.0781, 2.7609, 2.8491, 1.7368, 1.2941, 1.0, 1.7418, 1.0565, 1.6, 1.75, 1.1373, 1.6981, 0.125, 2.4579, 0.29, 1.5625, 0.4583, 0.1772, 1.0784, 3.16, 0.128, 0.7629, 3.0182]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

