created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Jerryatric Reflexes", "Jmbrage Rev", "Zayde Sunsabre", "Lost Uber Driver", "Kittendo", "Audra Storm", "Koranthin", "Free H\u00e4nd", "Artakama Nahid", "Newtype Khan", "Tika Fiery", "Glorious Gluvs", "Drevarr Moonwillow", "Whip \u00d1 Sl\u00e0pper", "K\u00e2 \u00d4tik R\u00e6j", "Red Reaper Robin", "Erin Celes", "Perpetual Hope"];
const professions = ["Berserker", "Vindicator", "Spellbreaker", "Herald", "Soulbeast", "Weaver", "Firebrand", "Vindicator", "Tempest", "Spellbreaker", "Firebrand", "Berserker", "Scrapper", "Tempest", "Spellbreaker", "Reaper", "Herald", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1230, 732, 620, 259, 462, 655, 14944, 1012], [356, 277, 219, 983, 297, 9999, 328, 226], [2745, 1263, 5669, 3653, 299, 338, 16472, 1506], [1991, 711, 659, 330, 274, 863, 416], [819, 1322, 6165, 334, 393, 546, 2440], [560, 299, 202, 1988, 342, 1323, 412, 283, 264, 379, 419, 342, 1182], [381, 259, 193, 1713, 253, 3581, 529, 176, 201, 326, 429, 523, 2021], [689, 343, 148, 1748, 324, 1405, 505, 756, 314, 521, 488, 16322, 488], [654, 219, 4333, 259, 4195, 2646, 279, 268, 385, 612, 367], [1151, 241, 7434, 306, 2544, 665, 687, 177, 465, 348], [484, 286, 154, 1668, 297, 1879, 475, 209, 226, 326, 479, 480, 876], [661, 392, 308, 984, 396, 2479, 516, 218, 232, 363, 554, 313, 684], [368, 230, 182, 1737, 263, 4527, 664, 266, 277, 229, 675, 360, 1022], [451, 349, 186, 3130, 303, 1400, 330, 268, 190, 203, 400, 6693], [832, 474, 6476, 209, 424, 16717, 876], [360, 274, 189, 1700, 270, 1135, 538, 210, 260, 208, 717, 271, 1078], [3930, 225, 207, 484, 378, 1403, 456, 281, 160, 236, 225, 197, 930], [277, 348, 167, 5771, 229, 1658, 357, 244, 156, 222, 268, 275, 817]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

