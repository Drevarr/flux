created: 20230217231312000
creator: Drevarr
modified: 20230705163519444
modifier: drevarr
tags: ChartData
title: 202302172313_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Mako Engi", "Abigail Ryn", "Tyrisai", "Sproxz", "Bella Sassy", "Tribal S", "Zadie Miststep", "Blanco Padre Guard", "Ark Darkness", "Jeckyll Mbs", "Drevarr Moonwillow", "Johosh The Great", "Mac Aaroni", "Air One Com", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Seren Nightroad", "Zaylen Harker", "Newtype Khan", "Panther B Me", "Veron Blackburn", "Minka Bringer", "Cat Wigglebooty", "Lord Erin The Wise", "Rina Of Theros", "Xanvias Tseli", "Be\u00eb", "Tegan Parker", "Fruji", "K\u00f4sair", "\u00c9\u00efbhear", "Sofya De Meme", "Sumatra Satyricon", "Venomina The Siren", "Arcanophage Farra", "Arka\u00f1", "Mike The Archmagus", "Primal Clone", "Whose Guardian", "Husky Guard", "Bambiae", "Ace Hammers", "Koralia Danai", "Ryvalia Fazebringer", "Demon Sekhmet", "Aronorf Xideliesi", "Mistwalker Caelon", "Sister Elonith", "Smol Gluvs", "Ravioli Fetabringer"];
const professions = ["Scrapper", "Tempest", "Firebrand", "Tempest", "Firebrand", "Druid", "Tempest", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Berserker", "Berserker", "Scourge", "Firebrand", "Spellbreaker", "Scourge", "Herald", "Scrapper", "Scrapper", "Weaver", "Scourge", "Berserker", "Scourge", "Tempest", "Scrapper", "Berserker", "Scrapper", "Weaver", "Soulbeast", "Tempest", "Spellbreaker", "Chronomancer", "Weaver", "Chronomancer", "Dragonhunter", "Dragonhunter", "Chronomancer", "Vindicator", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Berserker", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 2, 2, 6, 1, 3, 0, 2, 0, 1, 3, 0, 3, 0, 0], [1, 1, 0, 3, 2, 1, 0, 1, 2, 8, 0, 2, 0, 5, 1, 0, 3], [1, 0, 0, 5, 3, 0, 2, 1, 2, 5, 0, 0, 4, 1, 2, 5, 3], [7, 7, 7, 4, 0, 4, 2, 5], [2, 0, 0, 5, 4, 2, 2, 0, 0, 0, 1, 3, 0, 0, 1, 1, 1, 1, 5, 0, 2, 3, 0, 0, 2, 0, 0, 6], [3, 1, 0, 7, 5, 2, 2, 0, 1, 1, 7, 0, 0, 3, 2, 0, 3, 2, 2, 1, 1], [1, 0, 0, 1, 2, 0, 2, 0, 1, 2, 6, 1, 0, 1, 3, 4, 3, 8, 0, 0, 1, 0, 1, 1, 1, 3, 2], [1, 0, 0, 6, 6, 2, 1, 0, 0, 0, 3, 1, 3, 0, 4, 1, 5, 0, 2, 3, 0, 1, 3, 0, 1, 2], [5, 0, 2, 3, 1, 3, 2, 4, 9, 0, 0, 5, 5, 5, 5, 1], [2, 1, 0, 3, 4, 1, 5, 0, 2, 2, 9, 2, 1, 5, 0, 0, 0, 4, 1, 3, 0, 0, 1, 1, 1, 4], [1, 0, 0, 1, 7, 3, 3, 2, 2, 4, 4, 1, 2, 2, 2, 0, 6, 0, 4, 3, 0, 0, 0, 0, 3, 3], [1, 0, 0, 4, 6, 4, 0, 0, 1, 0, 3, 2, 0, 2, 3, 2, 2, 6, 0, 4, 2, 1, 0, 4, 0, 2, 4], [5, 1, 1, 6, 7, 2, 2, 2, 2, 10, 4, 0, 3, 1, 6, 5], [3, 2, 0, 1, 3, 0, 0, 0, 1, 4, 4, 0, 0, 2, 3, 6, 3, 0, 4, 0, 3, 2, 2, 1, 1, 6, 1, 5], [2, 0, 1, 3, 3, 1, 2, 0, 1, 4, 10, 2, 0, 4, 3, 9, 10, 0, 3], [2, 2, 6, 5, 2, 1, 3, 0, 9, 4, 3, 1, 4, 3, 0, 4, 1, 3, 1, 0, 1, 1, 0, 2], [8, 3, 3, 14, 8, 2, 0, 3, 3, 10, 3, 2], [4, 0, 2, 8, 6, 3, 0, 0, 2, 0, 0, 3, 0, 5, 2, 4, 2, 0, 7, 0, 3, 5, 0, 1, 2, 0, 2], [3, 13, 7, 1, 12, 7, 2, 6, 2, 4, 3, 4], [3, 1, 1, 4, 4, 1, 2, 0, 1, 1, 4, 0, 0, 4, 3, 7, 3, 0, 10, 4, 2, 4, 1, 1, 0, 0, 1, 3], [4, 3, 0, 9, 1, 2, 3, 0, 4, 1, 7, 4, 9, 9, 0, 7, 1, 2], [2, 3, 2, 11, 3, 1, 2, 2, 2, 8, 2, 0, 9, 0, 9, 5, 0, 2, 3, 0], [3, 0, 1, 6, 7, 1, 2, 1, 4, 1, 2, 0, 6, 0, 7, 7, 0, 3, 3, 3, 2, 0, 0, 2, 0, 4, 2], [5, 0, 0, 6, 5, 1, 0, 2, 4, 0, 10, 1, 2, 6, 3, 4, 4, 1, 1, 2, 2, 1, 2, 2, 2, 2], [1, 1, 0, 6, 7, 4, 2, 0, 2, 2, 5, 3, 2, 5, 3, 2, 2, 0, 8, 3, 2, 2, 1, 0, 2, 1, 1, 3], [2, 1, 2, 5, 6, 3, 4, 3, 1, 6, 4, 5, 2, 7, 3, 0, 0, 1, 3, 3, 1, 1, 0, 0, 1, 7], [6, 0, 0, 6, 9, 5, 1, 0, 3, 2, 6, 5, 0, 7, 5, 6, 1, 0, 2, 0, 1, 4, 0, 0, 2, 0, 4, 0], [1, 1, 2, 8, 4, 0, 1, 3, 9, 1, 1, 4, 0, 10, 7, 0, 2, 2, 0, 6, 1, 3, 1, 4, 3, 2], [4, 2, 0, 7, 2, 4, 4, 0, 2, 3, 5, 2, 0, 5, 2, 1, 7, 0, 10, 1, 3, 1, 0, 0, 2, 0, 4, 6], [5, 1, 1, 5, 6, 1, 4, 0, 2, 2, 9, 3, 0, 5, 4, 3, 4, 0, 7, 0, 4, 2, 0, 1, 1, 0, 5, 3], [4, 1, 2, 2, 7, 1, 3, 1, 2, 11, 2, 0, 8, 2, 3, 5, 1, 9, 2, 3, 2, 0, 1, 0, 3, 2, 4], [2, 1, 2, 8, 4, 2, 4, 0, 2, 2, 3, 1, 7, 3, 7, 4, 0, 7, 0, 4, 2, 2, 1, 1, 2, 3, 7], [2, 0, 1, 6, 4, 0, 3, 1, 4, 11, 4, 0, 6, 2, 4, 5, 3, 7, 2, 5, 0, 2, 3, 1, 2, 4], [2, 2, 0, 6, 7, 2, 3, 1, 2, 5, 4, 3, 6, 4, 3, 6, 8, 2, 2, 3, 3, 1, 1, 1, 3, 5], [2, 2, 1, 7, 3, 4, 1, 2, 3, 5, 4, 6, 4, 6, 6, 2, 7, 1, 1, 8, 1, 4, 2, 2, 3, 3], [4, 1, 2, 9, 10, 1, 4, 0, 2, 3, 17, 6, 0, 7, 2, 7, 6, 0, 6, 0, 2, 4, 1, 3], [0, 1, 1, 11, 2, 2, 1, 1, 2, 3, 10, 3, 2, 5, 2, 10, 8, 11, 2, 3, 6, 2, 3, 3, 1, 6], [3, 0, 1, 9, 12, 5, 1, 1, 4, 10, 6, 1, 6, 6, 4, 3, 16, 0, 3, 4, 0, 0, 2, 0, 6, 4], [3, 2, 0, 8, 8, 4, 2, 3, 2, 11, 4, 8, 1, 7, 7, 11, 2, 4, 4, 2, 2, 2, 1, 5, 4], [3, 2, 1, 10, 6, 1, 5, 2, 1, 13, 4, 0, 7, 7, 10, 9, 0, 2, 1, 3, 5, 1, 3, 2, 7, 3, 5], [4, 3, 1, 13, 4, 4, 3, 0, 1, 10, 3, 0, 7, 2, 16, 12, 11, 1, 2, 6, 1, 2, 2, 1, 3, 2], [2, 3, 2, 12, 9, 2, 2, 3, 3, 8, 3, 8, 2, 14, 13, 4, 3, 5, 3, 0, 5, 3, 4, 7, 1], [5, 2, 1, 10, 11, 4, 2, 4, 1, 11, 5, 7, 2, 11, 5, 14, 2, 4, 6, 0, 4, 3, 0, 3, 8], [5, 2, 0, 8, 10, 4, 4, 0, 2, 3, 9, 4, 0, 7, 4, 11, 9, 11, 2, 2, 6, 0, 2, 2, 8, 4, 9], [7, 2, 1, 11, 12, 3, 5, 0, 3, 4, 16, 2, 9, 5, 9, 8, 6, 3, 1, 6, 1, 3, 1, 1, 5, 7], [9, 1, 3, 7, 10, 4, 4, 0, 3, 2, 2, 4, 0, 11, 6, 12, 7, 12, 2, 4, 6, 0, 4, 2, 6, 5, 5], [4, 2, 2, 9, 7, 3, 5, 0, 2, 1, 13, 3, 0, 7, 4, 16, 10, 0, 5, 1, 6, 6, 2, 4, 2, 8, 6, 4], [6, 1, 0, 9, 6, 3, 0, 1, 4, 3, 14, 4, 10, 4, 13, 9, 0, 18, 3, 5, 6, 1, 3, 2, 0, 6, 5], [6, 5, 1, 13, 9, 5, 4, 2, 4, 4, 5, 5, 0, 7, 2, 15, 10, 2, 2, 6, 3, 9, 5, 5, 2, 6, 6, 6], [10, 4, 3, 13, 8, 5, 5, 0, 5, 5, 17, 6, 0, 10, 3, 13, 11, 2, 15, 7, 3, 8, 3, 7, 2, 5, 7, 6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

