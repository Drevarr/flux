created: 20230925092820000
creator: Drevarr
tags: ChartData
title: 202309250928_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Hawaiian Supreme", "Govinda Ektar", "Morton Saltbringer", "Grae Leon", "Illusive Heart", "Dinosaur Kale", "Kathra Tull", "Forgemaster Grast", "Morv\u00e4rth", "Necrotic Windrunner", "Flick Embermage", "Drac Tepes", "Mar\u00eda Callas", "Jobless Jennifer", "Elonith Requiem", "Necrophagya", "Cyclotechnist Farra", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Vindicator", "Chronomancer", "Tempest", "Chronomancer", "Harbinger", "Herald", "Scrapper", "Reaper", "Reaper", "Weaver", "Scourge", "Dragonhunter", "Berserker", "Reaper", "Reaper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1527.7193, 1256.8842, 733.7273, 409.0949, 520.3673, 931.58, 542.3514, 419.4286, 422.2121, 468.6392, 448.2153, 102.4231, 340.9], [353.2529, 262.1711, 171.9773, 622.0435, 418.0926, 123.7027, 339.7778, 0.0, 272.8247, 574.7206, 571.0732, 15.6239, 0.0, 395.9494, 412.5061, 500.6842, 405.4848, 752.1579, 0.0, 250.1456, 613.1597, 1600.7885, 208.9833], [0.0, 1146.1379, 1611.9868, 494.6818, 2356.2783, 3102.537, 688.5946, 490.4074, 67.5926, 88.7403, 1429.3382, 800.8537], [0.0, 159.5172, 175.1842, 168.0833, 382.5826, 490.5741, 140.2162, 153.7963, 40.5741, 248.0, 394.8971, 500.0, 1392.7436, 0.0, 763.7342, 226.3636, 0.0, 129.8049, 162.5, 169.5741, 35.45, 66.5463, 51.7576, 146.8182, 36.0571, 178.9817, 169.0877, 693.2105, 315.4242, 120.4818, 401.7755, 538.9, 880.1081, 385.4737, 380.7576, 271.8101, 215.2639], [0.0, 191.7241, 140.1579, 143.8561, 633.913, 897.5, 117.2432, 171.5, 33.5556, 283.7922, 876.8971, 425.8659, 742.7094, 0.0, 1124.1392, 242.3506, 0.0, 439.2439, 221.4259, 240.3916, 21.0833, 77.674, 101.7172, 0.0, 71.3714, 369.8354, 629.9474, 663.4211, 467.4848, 363.5182, 550.4898, 567.39, 767.2973, 698.9398, 126.0909, 407.8608, 386.5486, 191.3077, 72.2917], [10.5862, 165.3684, 117.8636, 1241.6522, 779.0185, 177.8649, 634.037, 0.0, 883.039, 1310.2647, 613.939, 264.5316, 1355.1169, 1061.7561, 101.0926, 780.6427, 6.1167, 413.7665, 274.1919, 0.0, 184.7561], [1622.6348, 2497.4259, 511.5676, 860.2222, 262.9444, 571.7013, 1454.2353, 1000.061, 979.7949, 376.8333, 1079.5823, 628.7013, 0.0, 289.122, 2.6646, 517.4167, 684.793, 113.4545, 103.6818, 199.4, 272.9268, 2013.8947, 298.3263], [350.8636, 963.6087, 4091.5741, 438.2703, 1155.7407, 0.0, 1732.0325, 4170.3824, 2648.4024, 1985.2393], [1866.4545, 2516.1478, 3733.9074, 7.7027, 1078.6111, 0.0, 1341.0974, 2826.0441, 3157.2805, 1348.6239, 0.0, 3146.0886, 869.1299], [0.0, 1455.9873, 1270.2078, 1619.561, 425.6481, 751.2995, 464.8943, 435.7475, 8.7455, 348.4857, 744.3415, 359.5758, 1378.1387, 197.5102, 1787.88, 528.7027, 2239.9774, 985.4848, 444.4873, 847.6042, 277.25, 340.375], [154.625, 1448.6413, 460.9828, 3007.977, 631.5833, 1878.2348, 2662.8148, 416.6486, 428.3519, 446.537, 1146.2078, 1531.7206, 539.878, 800.0342, 0.0, 1627.0253, 1626.3636, 341.5641, 914.439, 139.9074, 628.1217, 0.0, 913.1189, 474.1919, 44.6364, 186.0857, 1390.5305, 325.0862, 2054.4386, 1514.2316], [483.8547, 896.0455, 1476.0886, 1729.4286, 0.0, 1670.1707, 503.0926, 1054.2777, 734.5, 578.5463, 1056.303, 22.8909, 91.1714, 1034.628, 1955.2807, 2104.1158, 1327.1212, 2107.0438, 1222.2041, 2143.92, 1319.5263, 357.2727, 1070.5506, 157.3472, 3997.6154, 360.8417], [1792.8442, 0.0, 52.3415, 35.963, 1646.3323, 1272.25, 924.1278, 1318.7374, 378.3143, 1744.1463, 569.6897, 1814.9298, 2484.0842, 2923.3333, 1079.9489, 1041.6122, 1378.79, 58.8108, 2038.9774, 65.8788, 1312.2722, 1499.4167, 37.9038], [3473.4167, 3555.3436, 2438.6061, 119.5714, 3308.5732, 326.931, 4348.5789, 4757.0211, 5630.7576, 1729.0438, 1995.102, 4663.75], [191.3, 1044.0088, 1520.7071, 102.8909, 406.5714, 2576.4329, 160.3103, 3270.0702, 3597.2, 3164.8182, 2658.2774, 1473.1224, 2721.9, 2532.6486, 3079.9774, 1060.697, 1347.6139, 3426.6597, 771.0, 810.35], [1895.1552, 2142.6207, 1087.9211, 866.9924, 4163.5565, 5361.5, 571.2162, 1024.6852, 610.0556, 1779.0909, 4705.9853, 3226.2073, 0.0, 2515.4304, 1826.7273, 510.8205, 999.9024, 369.8889, 1731.8565, 806.6167, 561.3921, 209.2626, 284.8, 124.4571, 1458.4817, 201.431, 1624.0702, 4413.8421, 1246.0606, 1587.5109, 2920.449, 2375.06, 2459.5946, 3466.4436, 5259.9091, 2004.3291, 2346.3889, 991.0385, 769.7167], [662.9167, 3615.0326, 438.1034, 2386.7701, 113.7105, 2352.1364, 1624.1913, 6763.7407, 196.2162, 2160.3333, 708.3333, 2640.6299, 4829.7647, 3198.2073, 3198.3846, 0.0, 5276.3924, 4745.961, 920.8293, 2366.9797, 874.7167, 1248.8767, 1358.4141, 0.0, 174.6286, 1306.3171, 55.3966, 4366.4386, 6144.0526, 900.1212, 4167.4964, 2130.27, 2197.2973], [1942.625, 492.3152, 2475.7414, 3433.908, 1371.5132, 1883.447, 4424.0783, 6271.0185, 472.3514, 2224.6667, 545.3333, 3560.6234, 4444.2794, 2159.9268, 4073.7521, 1919.0455, 5327.9747, 3101.8701, 250.1795, 3557.122, 1949.3889, 2280.064, 1817.0, 2069.6916, 1762.2828, 1206.2818, 635.2286, 3564.689, 1092.5, 498.4386, 5217.2737, 4335.2121, 3532.2482, 1998.0408, 3734.41, 3598.1351, 5295.6842, 5459.9697, 2525.6392, 3365.0486]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

