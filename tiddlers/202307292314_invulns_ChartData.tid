created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Daphne Agla\u00e9", "N\u00eec\u00f4le", "Venomina The Sly", "Kisumaiasu", "Gabe Malhorn", "Be\u00eb", "Govinda Ektar", "Johosh The Great", "Mort\u00e4rion", "Ax Axun", "Ex Warcraft", "Loganlek", "Sr Conrad", "Zaedy Zae", "Civil Rules", "Jimbo The Pleb", "Phad\u00e8", "Irish Necroman", "Kisumaiasu", "Hyde En Sikh", "Newtype Khan", "Oo Dads Mad", "Mintolla Root", "Xanvias Einzbern", "K\u00e2 \u00d4tik R\u00e6j", "Master Marcovius", "Rahani Sunray", "Gestern Yesteryear", "M A N O W A R", "Mmathuss", "Vera Khin", "Alarics Bane", "Keypek The Drunk", "Drevarr Moonwillow", "Marceluuk", "Kosa\u00efr", "Smol Gluvs", "Grasszanine", "Koralia Danai", "Bella Sassy", "Sygaldry Verdandi", "Blancoo Padre", "Mistwalker Cael", "Revitiel", "Permanent Dawn", "Minnie Darley", "Tegan Parker", "Vini Boy", "Bruno Dionizi", "Tootsie Pop Rocks", "Cesare Pirane"];
const professions = ["Scourge", "Berserker", "Druid", "Scourge", "Firebrand", "Scourge", "Vindicator", "Dragonhunter", "Scrapper", "Vindicator", "Tempest", "Spellbreaker", "Bladesworn", "Druid", "Berserker", "Berserker", "Vindicator", "Scourge", "Reaper", "Chronomancer", "Spellbreaker", "Berserker", "Harbinger", "Berserker", "Berserker", "Harbinger", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Dragonhunter", "Reaper", "Scrapper", "Scrapper", "Reaper", "Weaver", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Vindicator", "Weaver", "Dragonhunter", "Tempest", "Tempest", "Holosmith", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 4, 5, 7], [0, 0, 0, 0, 2, 14], [11, 0, 5, 0], [0, 0, 0, 0, 18], [0, 19, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 18, 0, 0], [0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 24], [0, 0, 0, 0, 16, 9], [0, 0, 0, 0, 14, 8, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0], [0, 26], [0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 12, 15, 0, 0], [0, 0, 0, 0, 4, 17, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 8, 11], [0, 0, 0, 9, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [10, 21], [0, 0, 0, 22, 10], [25, 0, 0, 2, 0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 23, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 25, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 26, 8, 0], [6, 29, 0], [0, 0, 0, 0, 6, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 9, 7, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 13, 6, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0], [5, 28, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0], [0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [10, 0, 0, 0, 0, 0, 25, 0, 10], [0, 0, 0, 0, 14, 23, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0], [2, 23, 0, 3, 0, 13, 5, 0, 0], [0, 0, 0, 0, 10, 35, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 14, 18, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 32, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [36, 13], [25, 24, 0], [0, 0, 0, 0, 41, 15], [29, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 11, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 21, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 23, 36, 0, 6, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 42, 14, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 22, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 42, 26, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 29, 4, 0, 0, 0, 0, 0, 0, 42], [0, 0, 0, 0, 39, 25, 0, 12, 0, 0, 0, 0, 3, 0, 0, 0], [26, 14, 53, 0, 0, 0, 0, 0, 0, 0, 0], [0, 42, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [14, 18, 0, 11, 41, 0, 27, 5, 0, 0], [0, 0, 0, 44, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [88, 74, 0, 5, 0, 0, 31, 0, 12, 3, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

