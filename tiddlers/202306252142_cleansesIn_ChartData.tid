created: 20230625214256000
creator: Drevarr
modified: 20230705163535944
modifier: drevarr
tags: ChartData
title: 202306252142_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Liyo Morgaine", "Arriasa", "Hayuf", "Blaze All Might", "Melpomene Vandrish", "Wall Knot", "Ateriuz", "Xanvias Tsolice", "No Reserv\u00e9", "Surethang", "Vesnan", "Fluffy No Care Bear", "Koralia Danai", "Gamora Titus", "Drevarr Moonwillow", "Charr Surethang", "Elonith Requiem", "Govinda Ektar", "Drev Of The Dead", "Hayuf", "Scythe User", "Latedoctor", "Booboo Hurts", "Jerryatric Reflexes", "Elonith Requiem", "Shrimp Tempsura", "Drac Tepes", "Yngvar The Burdened", "Wall Knot", "Yedrax", "Drumina", "Ani Deasun", "Aronorf Xideliesi", "Tacitus Kilgore I", "Gestern Yesteryear"];
const professions = ["Herald", "Druid", "Dragonhunter", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Weaver", "Vindicator", "Guardian", "Scourge", "Berserker", "Firebrand", "Dragonhunter", "Scrapper", "Spellbreaker", "Scourge", "Vindicator", "Reaper", "Firebrand", "Reaper", "Reaper", "Firebrand", "Berserker", "Reaper", "Tempest", "Scourge", "Scourge", "Dragonhunter", "Scrapper", "Druid", "Vindicator", "Firebrand", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.3091, 0.1071, 0.1042], [0.0, 0.0455, 0.3551, 0.0137, 0.1939, 0.381], [0.0, 0.0412, 0.0, 0.0566, 0.0, 0.0217, 0.4915, 0.0, 0.3333, 0.1667, 0.0573], [0.2844, 0.0309, 0.0, 0.0755, 0.0, 0.1159, 0.1186, 0.0, 0.097, 0.2619, 0.1094], [0.0092, 0.1134, 0.2264, 0.0227, 0.1522, 0.1017, 0.0068, 0.2485, 0.0714, 0.0312, 0.198], [0.0, 0.2788, 0.2976, 0.1458, 0.3465], [0.0, 0.2061, 0.3333, 0.1771, 0.3861], [0.0, 0.303, 0.4167, 0.1198, 0.3564], [0.3394, 0.1031, 0.0, 0.0189, 0.0227, 0.0725, 0.1695, 0.0, 0.3273, 0.3095], [0.3813, 0.0659, 0.1892, 0.1271, 0.0946], [0.0448, 0.0, 0.1667, 0.2034, 0.0, 0.2788, 0.4524, 0.1511, 0.0769, 0.0, 0.1081, 0.0, 0.0], [0.0149, 0.3208, 0.0455, 0.1014, 0.1864, 0.0068, 0.3152, 0.381, 0.151, 0.2673], [0.1835, 0.134, 0.0377, 0.0227, 0.1522, 0.3898, 0.0, 0.1636, 0.3333, 0.1823, 0.2475], [0.2477, 0.1031, 0.0, 0.0377, 0.0, 0.1594, 0.4746, 0.0, 0.1394, 0.3452, 0.1771, 0.3564], [0.3486, 0.134, 0.0, 0.0377, 0.0455, 0.1232, 0.2881, 0.0, 0.2848, 0.2619, 0.1406, 0.2673], [0.0092, 0.1546, 0.1509, 0.0227, 0.1884, 0.339, 0.0, 0.2606, 0.1786, 0.1094, 0.2574, 0.2484], [0.422, 0.1546, 0.2642, 0.0455, 0.1522, 0.6271, 0.0137, 0.3212, 0.3214], [0.3069, 0.3248, 0.3201, 0.0, 0.0, 0.2099, 0.322, 0.0], [0.2611, 0.4281, 0.0549, 0.3514, 0.3094], [0.2277, 0.4777, 0.4173, 0.1429, 0.1081, 0.0994, 0.1216], [0.4312, 0.0515, 0.0299, 0.2264, 0.0, 0.0725, 0.4237, 0.0, 0.4667, 0.6071, 0.1615], [0.3248, 0.482, 0.0, 0.3784, 0.2155, 0.1757, 0.3898, 0.0606], [0.0, 0.0189, 0.0, 0.0942, 0.2373, 0.0068, 0.1515, 0.25, 0.1875, 0.1188, 0.4395, 0.3094, 0.0, 0.1622, 0.0221, 0.1081, 0.0, 0.0455], [0.1333, 0.3333, 0.1562, 0.297, 0.3503, 0.1619, 0.0549, 0.4324, 0.2376, 0.0676, 0.2203, 0.2273], [0.1302, 0.396, 0.4331, 0.4245, 0.011, 0.2162, 0.4033], [0.4713, 0.5899, 0.011, 0.2432, 0.2928, 0.1081, 0.4576, 0.1667], [0.242, 0.7266, 0.0769, 0.8378, 0.2099, 0.1757, 0.0678, 0.2273], [0.0, 0.2061, 0.369, 0.099, 0.3465, 0.2484, 0.2302, 0.0989, 0.4865, 0.3481, 0.2297, 0.3559, 0.1212], [0.367, 0.0928, 0.0566, 0.0, 0.1232, 0.4576, 0.1401, 0.5504, 0.044, 0.5405, 0.2818, 0.2838, 0.0, 0.2424], [0.2182, 0.4881, 0.1979, 0.3069, 0.4841, 0.2158, 0.022, 0.4324, 0.4199, 0.1351, 0.339, 0.2424], [0.4587, 0.1443, 0.2453, 0.0227, 0.1667, 0.4237, 0.0068, 0.2848, 0.4881, 0.1354, 0.3069, 0.1465, 0.2518, 0.011, 0.1892, 0.2928, 0.0676, 0.2881, 0.1212], [0.3119, 0.1649, 0.0, 0.1667, 0.5932, 0.0068, 0.2848, 0.4643, 0.1615, 0.2772, 0.3885, 0.3597, 0.0879, 0.2162, 0.1823], [0.0068, 0.3455, 0.7143, 0.1667, 0.4257, 0.3567, 0.4245, 0.022, 0.1892, 0.3425, 0.2838, 0.322, 0.0303], [0.3303, 0.1443, 0.0, 0.1321, 0.0227, 0.1594, 0.3559, 0.0, 0.3455, 0.5238, 0.1771, 0.396, 0.586, 0.3669, 0.0659, 0.3784, 0.2983], [0.2018, 0.1753, 0.3208, 0.0455, 0.087, 0.4915, 0.0274, 0.2848, 0.3929, 0.099, 0.4257, 0.4904, 0.3165, 0.022, 0.5135, 0.3425, 0.1486, 0.6271, 0.2273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

