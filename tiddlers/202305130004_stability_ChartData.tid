created: 20230513000456000
creator: Drevarr
modified: 20230705163529860
modifier: drevarr
tags: ChartData
title: 202305130004_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Kmpek", "Smol Gluvs", "Newtype Khan", "Jeckyll Mbs", "Husky Guard", "Domitia Gravestorm", "Xanvias Einzbern", "Khailerian", "Sub Train", "Bubblesparklepuff", "Blancooo Padreee", "Mistwalker Caelon", "Aronorf Xideliesi", "Air One Com", "Ryvalia Fazebringer", "Lucas Ryn", "Ark Darkness", "Tika Fiery", "Solus Sanctus", "Bella Sassy", "Johosh The Great", "Koralia Danai"];
const professions = ["Vindicator", "Scourge", "Spellbreaker", "Berserker", "Dragonhunter", "Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Spellbreaker", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 2.9547, 16.6071, 0.0, 2.8621, 0.0, 0.1637, 1.728, 0.0, 0.0, 0.0, 0.361, 0.0, 0.0, 4.1975, 3.5482, 0.0, 1.6783, 0.0, 0.0, 0.0, 0.0, 0.0], [1.3478, 2.2579, 6.2377, 6.2838, 1.637, 0.7806, 0.0, 0.625, 2.2464, 0.0, 1.7196, 3.3088, 0.0, 0.0, 1.3225, 2.3386, 0.0, 1.4769, 0.0, 1.1482, 0.0, 1.9757, 0.0, 4.2864, 0.0, 1.2831, 0.0], [2.2118, 0.0, 5.4169, 7.1814, 0.0, 2.9488, 2.17, 0.0, 3.0528, 0.0, 3.7901, 0.0, 0.92, 5.4835, 0.0, 1.007, 0.0, 1.5898, 0.0, 4.0454, 2.679, 0.0, 0.0, 0.0], [1.7971, 1.0483, 5.2528, 17.0559, 1.0408, 0.0, 0.2678, 2.1888, 0.0, 0.2133, 0.9024, 0.2723, 3.4675, 0.0, 2.8866, 0.0, 1.1923, 0.0, 2.4931, 0.0, 2.1432, 0.4959, 0.0, 0.0], [1.728, 2.4192, 2.6264, 15.2606, 0.1213, 2.255, 0.0, 0.0, 1.152, 0.0, 4.5722, 0.0, 0.0, 2.415, 2.6611, 0.0, 2.8195, 0.0, 2.6496, 0.0, 2.305, 0.0, 2.3575, 0.0, 0.0, 1.537], [1.4861, 2.0966, 6.566, 16.1582, 1.5158, 2.5152, 0.0, 1.5326, 2.7648, 0.0, 1.3597, 2.7674, 1.1233, 0.0, 2.99, 1.9354, 0.972, 3.0208, 0.0, 1.3248, 0.999, 2.305, 0.0, 3.0005, 0.0, 0.0, 1.6058], [2.5574, 3.4675, 8.2075, 18.4024, 1.8189, 1.2142, 0.0, 0.9077, 3.2256, 0.0, 3.3088, 1.3276, 0.0, 2.9325, 2.9837, 1.2744, 3.2894, 0.0, 1.0598, 1.2488, 2.5872, 0.0, 3.0005, 0.0, 0.0, 0.0], [0.1728, 2.8224, 11.6546, 15.2606, 0.0, 6.6782, 0.0, 3.2256, 0.0, 2.7193, 4.0909, 0.0, 0.0635, 5.75, 2.1773, 0.0, 0.0, 0.0, 4.704, 0.0, 6.2689, 0.0, 0.0], [9.8842, 6.935, 13.9527, 42.6398, 3.1528, 0.0, 0.0, 0.0, 3.5712], [2.7994, 0.887, 0.6566, 40.8444, 0.0, 2.0815, 0.0, 3.0355, 0.0, 0.6661, 2.3194, 0.0, 5.2339, 0.0, 1.9996, 3.2775, 4.1933, 0.0, 1.2755, 0.0, 1.1482, 5.927, 0.0, 3.9113, 0.0, 0.8093, 2.7528], [1.5206, 3.5482, 11.6546, 18.8513, 1.0913, 3.6427, 0.0, 2.5891, 4.4352, 2.315, 2.0395, 3.5494, 2.7296, 5.2325, 7.9027, 0.0, 3.7593, 3.9744, 0.0, 1.5523, 3.322, 0.4698, 2.2504, 0.0], [4.32, 8.4672, 10.8339, 43.0886, 0.8488, 2.5152, 0.0, 0.0, 1.44, 3.1192, 4.9331, 0.0, 0.6665, 4.025, 9.5155, 0.2592, 6.0417, 0.0, 0.0, 1.6151, 8.5142, 0.0, 5.0365, 0.2349, 0.0, 1.1011], [2.4192, 3.4675, 15.266, 42.191, 1.0307, 4.4232, 2.0558, 0.0, 11.0592, 3.4791, 7.9411, 0.0, 7.015, 8.6285, 0.324, 8.8612, 0.0, 0.4858, 4.0959, 6.7267, 0.0, 9.3229, 2.61, 0.5132], [4.5965, 7.9834, 20.6829, 56.5538, 1.9402, 5.6375, 0.0, 0.0149, 5.7024, 0.2452, 8.1216, 2.8679, 0.0, 8.395, 8.7091, 0.0, 9.2639, 4.1069, 1.8315, 5.2214, 1.6177, 7.7155, 0.0, 0.0], [3.456, 4.2739, 12.8037, 62.3888, 2.2433, 3.6427, 3.4136, 0.0, 7.8912, 1.5506, 1.3063, 11.671, 0.7489, 0.0, 10.695, 10.7251, 3.78, 16.0441, 0.0, 1.5014, 1.7149, 6.3504, 0.6433, 13.7165, 0.0, 1.8753, 2.5005], [8.0179, 11.5315, 11.4905, 58.798, 1.3339, 7.9792, 2.7283, 2.7974, 5.6448, 3.0126, 0.1615, 11.4304, 6.6971, 9.4875, 13.8701, 0.0, 10.8079, 0.0, 3.6653, 0.0, 10.2077, 0.227, 9.5908, 0.261, 0.4935], [5.6678, 3.6288, 25.4432, 76.7516, 2.7283, 6.0711, 0.2284, 2.7677, 13.3056, 0.0, 2.7326, 13.4157, 2.6892, 0.0, 15.41, 12.096, 0.0, 11.9491], [8.9856, 14.2733, 32.83, 91.1145, 1.5764, 8.4995, 0.0, 1.8302, 10.1376, 2.042, 4.1723, 0.1435, 10.6483, 1.1744, 2.6027, 10.35, 18.3053, 3.0672, 8.4584, 0.0, 2.7821, 6.3436, 9.2198, 1.3244, 9.055, 0.0, 0.0, 0.0], [6.9466, 9.5155, 24.6225, 78.9958, 4.8504, 7.8057, 0.0, 4.4938, 14.688, 7.4802, 2.6127, 0.9688, 16.4838, 1.1574, 1.3966, 15.5825, 15.3216, 2.2464, 14.1644, 0.0, 6.7123, 10.2077, 1.6933, 22.1821, 0.0522, 0.0, 5.0697], [10.057, 15.1603, 33.1583, 99.1936, 4.7291, 9.974, 3.0202, 3.6605, 12.0384, 2.6972, 2.4127, 2.3681, 12.2125, 0.7574, 5.9989, 14.72, 16.2893, 5.6376, 16.3797, 0.0, 7.6838, 4.2125, 11.2426, 0.8514, 10.6624, 0.7308, 3.2176, 2.3858], [12.8563, 13.3862, 36.9338, 100.989, 5.6992, 7.4588, 5.6724, 2.351, 14.8032, 0.0, 2.1195, 15.5814, 3.3785, 3.904, 14.4325, 13.3862, 3.8016, 9.8681, 0.0, 7.3747, 2.9637, 12.0422, 1.8636, 16.7705, 0.0, 3.4742, 3.3492], [11.7504, 17.9021, 43.0073, 110.4146, 5.1536, 10.5811, 2.1065, 2.4701, 11.1168, 3.6124, 16.0627, 2.953, 0.2222, 13.6275, 19.5149, 5.1192, 13.0232, 0.0, 6.7123, 0.4329, 11.713, 13.8772, 0.3132, 3.9875]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

