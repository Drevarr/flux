created: 20230625212343000
creator: Drevarr
modified: 20230705163535800
modifier: drevarr
tags: ChartData
title: 202306252123_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Tegan Parker", "Miphest\u00f6", "Seiker Novus Terra", "Venomina The Siren"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.9797, 99.9198, 20.0287, 19.975, 19.6896, 39.7704, 15.4962, 37.3262, 16.021, 0.0, 14.7372, 0.0, 0.0, 20.0448, 19.9181, 40.0987, 19.9234, 0.0, 32.1264, 24.7901, 20.0376, 19.9112, 0.0, 54.2192, 0.0, 56.1011], [19.888, 80.0199, 39.3632, 16.309, 31.2816, 19.8852, 19.916, 17.8517, 39.1005, 20.067, 0.0, 16.6012, 39.3984, 39.9091, 52.1083, 59.7236, 0.0, 40.0882, 19.992, 20.0376, 14.3546, 19.3224, 74.2224, 0.2798, 54.3738], [35.8352, 79.8798, 39.9507, 0.0, 36.5172, 67.8082, 96.9798, 30.2614, 0.0, 55.9159, 59.9962, 36.8813, 37.0963, 79.6005, 0.0, 16.9478, 39.8899, 35.3976, 47.5398], [39.9594, 39.9399, 39.9507, 64.907, 36.6912, 7.3181, 37.5144, 52.5672, 33.6507, 79.9102, 40.1004, 18.7895, 39.3062, 63.9494, 77.3285, 59.7236, 0.0, 58.1069, 55.9776], [38.0348, 159.199, 49.7247, 101.332, 46.9392, 124.459, 84.7039, 102.947, 114.2812, 85.9553, 19.7118, 51.7278, 121.9738, 99.7363, 133.3066, 89.3294, 0.0, 140.2387, 71.8301, 60.1759, 100.0703, 114.1814, 140.8496, 41.3909, 177.7686]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

