created: 20230417215912000
creator: Drevarr
modified: 20230705163525873
modifier: drevarr
tags: ChartData
title: 202304172159_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Chio Slayer", "Tootsie Pop Rocks", "Mistwalker Caelon", "Arriasa", "Daddy Demon", "Xyntharos", "Smol Daddy Tika", "Cat Wigglebooty", "Mac Chiato", "Zadie Miststep", "Grasszanine", "Fribble Bibble", "Arcanophage Farra", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Vindicator", "Druid", "Tempest", "Vindicator", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[39.6234, 76.6476, 49.0354, 212.8517, 12.5798, 0.0, 148.8221], [0.0, 0.0, 0.0, 0.0, 93.6008, 0.0, 14.8215, 0.0, 152.7212, 0.0, 11.4484, 0.0, 0.0, 0.0, 32.9664, 34.5729, 0.0, 53.6883, 27.1759, 0.0, 5.4878, 0.0, 14.976, 0.0, 5.4754, 86.7623, 9.0552, 0.0, 19.9843, 12.4406, 9.5795], [4.9416, 1.6474, 23.9791, 12.0073, 151.898, 0.0, 43.7198, 17.892, 27.2038, 7.9968, 25.7299, 8.9817, 0.0, 25.7607, 21.8645, 0.0, 20.9313, 11.8482, 24.0129, 36.43, 4.01, 7.033, 17.8656, 15.2755, 0.0, 18.7598, 15.5585, 9.1522, 0.0, 22.8226, 23.2314, 10.0205], [0.0, 0.0, 3.9692, 0.0, 113.1106, 0.0, 34.1863, 80.6012, 70.0484, 0.0, 0.0, 55.4954, 0.0, 40.8618, 0.0, 9.9043, 55.0353, 0.0, 0.0, 80.0288, 0.0, 0.0, 0.0, 0.0, 0.0, 25.5816, 0.0, 0.0, 0.0, 75.5438, 0.0, 23.52], [84.3706, 73.6117, 128.9063, 0.0, 0.0, 41.7134, 0.7738, 57.5362, 48.8584, 56.1099, 48.7028, 58.1645, 67.8214, 28.028], [2.9825, 20.9101, 10.0117, 158.6336, 3.018, 50.5719, 30.6553, 28.7679, 18.9091, 26.019, 20.6388, 0.0, 42.2831, 19.7314, 3.8395, 11.3822, 15.7657, 31.9299, 43.9246, 0.0, 6.9442, 23.9691, 6.0403, 13.0005, 24.9533, 18.059, 15.8789, 0.0, 22.667, 20.2439, 19.796], [35.0573, 20.4198, 184.4115, 0.1573, 86.6761, 0.0, 64.309, 55.2946, 0.0, 0.0, 116.329, 36.3957, 78.1658, 100.1937, 0.0], [81.9628, 0.0, 350.2481, 74.4055, 0.0, 74.8524, 0.0, 0.0, 0.0, 54.4232, 36.0691, 0.0, 0.0, 4.9686, 45.1422, 44.837, 0.0, 15.0362, 9.9341, 0.0, 45.5981, 0.0, 9.9607, 0.0, 0.0, 15.0714, 5.0225], [0.0, 0.0, 0.0, 18.1116, 271.5119, 0.0, 42.975, 0.0, 29.941, 0.0, 35.0967, 0.0, 0.0, 41.3948, 49.8859, 0.0, 25.6206, 59.3365, 69.6795, 55.0686, 0.0, 22.3776, 59.4174, 0.9984, 55.3819, 55.6057, 0.0, 29.8046, 56.065, 67.1971, 0.0], [0.0, 0.0, 0.0, 28.291, 375.7967, 0.0, 103.2293, 0.0, 86.0244, 0.0, 52.4427, 23.6582, 90.1328, 23.8037, 22.8497, 34.0158, 78.4877, 52.6574, 0.0, 0.0, 0.0, 6.4397, 0.0, 26.6587, 23.8537, 28.4592, 14.6457, 36.5472, 43.7874, 15.386], [0.0, 16.0816, 76.5718, 287.0734, 78.9488, 96.2203, 23.126, 12.6199, 85.3423, 0.0, 0.0, 49.5671, 33.6936, 0.0, 20.8887, 48.9216, 82.4724, 97.2988, 0.0, 0.0, 48.8274, 45.3274, 56.376, 106.9042, 0.0, 15.976, 0.0, 32.1149, 10.657, 37.0195], [97.7988, 0.0, 671.2314, 57.3496, 0.0, 76.8075, 0.0, 111.8817, 0.0, 57.4434, 189.2174, 0.0, 73.1531, 213.4587, 131.1799], [0.0, 0.0, 364.4159, 0.0, 161.9195, 0.0, 30.5554, 54.6031, 128.5339, 60.1201, 0.0, 129.1588, 42.8563, 0.0, 34.6582, 120.2974, 53.2164, 139.3335, 34.8214, 0.0, 70.7754, 22.3891, 52.8039, 100.7107, 64.7741, 203.7743, 74.7864, 80.7149, 83.8292, 10.633], [0.0, 81.8809, 44.5411, 622.9213, 0.0, 187.5406, 0.0, 166.4069, 129.7814, 74.7613, 90.7343, 0.0, 143.9638, 109.177, 0.0, 67.0144, 183.6471, 68.2114, 158.689, 0.0, 68.0741, 214.711, 62.2253, 3.0518, 148.7978, 90.1639, 0.0, 67.8067, 85.1223, 49.245], [17.9826, 12.9272, 151.2403, 53.6808, 1238.4103, 235.1334, 72.1506, 258.7994, 88.7978, 134.1424, 75.0641, 47.1478, 212.8367, 128.6659, 118.1277, 216.1341, 108.1631, 206.5237, 145.2751, 80.879, 107.6789, 8.6861, 68.0157, 264.2534, 142.0108, 97.6345, 74.5481, 89.7739, 70.7643, 55.0515]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

