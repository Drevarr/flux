created: 20230626090515000
creator: Drevarr
modified: 20230705163539031
modifier: drevarr
tags: ChartData
title: 202306260905_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Gestern Yesteryear", "Necrotic Windrunner", "Vesnan", "Urilstormwalker", "Brace Stonebrow", "Elonith Requiem", "Gamora Titus", "Traidoruns Maximus", "C H A R C O A L", "Charr Surethang", "Yngvar The Burdened"];
const professions = ["Dragonhunter", "Firebrand", "Scourge", "Scourge", "Firebrand", "Firebrand", "Reaper", "Dragonhunter", "Firebrand", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[51.1039, 34.1711, 30.4286, 0.0, 18.75, 9.3006], [0.0, 9.6977, 0.0, 1.9412, 15.3548, 0.0, 8.1538, 0.2745, 61.878, 29.981, 0.0, 9.5, 26.2192, 5.0584, 0.0, 3.7757, 21.047, 16.5584, 7.907, 51.0, 12.6269, 11.3615, 0.0, 13.1548], [161.1299, 0.0, 285.0, 8.1471, 35.5231, 0.0, 115.7976], [6.9146, 72.3037, 75.3154], [29.6611, 118.0779, 7.186, 39.1727, 21.1692, 3.3824, 72.7619], [2.5753, 5.0803, 1.7378, 35.9252, 65.2752, 68.2727, 64.1395, 5.5833, 5.2473, 14.2923, 0.0, 64.0952], [26.7957, 20.1803, 90.3462, 2.6471, 14.6098, 46.5333, 55.5472, 144.5694, 93.4932, 24.6496, 3.9573, 45.0187, 80.8658, 40.8182, 50.3256, 27.4167, 58.6951, 33.5077], [0.7455, 0.0, 264.6667, 80.7731, 112.4624, 0.0, 82.2308, 0.0, 31.2286, 161.283, 174.0278, 35.0, 31.3537, 4.5514, 24.0436, 179.8701, 126.6512], [6.3636, 32.0303, 37.7143, 88.4444, 0.0, 282.3077, 12.8529, 15.6098, 72.2952, 55.6604, 173.6389, 4.8175, 0.0, 64.8832, 120.7483, 11.3117, 101.5581, 201.375, 45.7271, 89.8154, 19.0588, 120.4167], [465.7547, 652.125, 23.7226, 46.8333, 67.0405, 219.0385, 67.4706, 535.4286], [0.0, 156.7576, 41.2521, 0.0, 95.6538, 33.2549, 240.6585, 25.5714, 127.3019, 148.6944, 145.9315, 76.1533, 0.0, 69.1402, 226.1644, 301.2078, 256.0698, 5.5, 19.968, 19.1462, 0.0, 137.4048], [0.0, 29.1731, 12.4902, 633.7073, 103.8667, 451.717, 412.9028, 190.2701, 3.7012, 25.1402, 221.0872, 161.9091, 0.9535, 357.9583, 71.9979, 19.8923, 64.3235, 307.7976]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

