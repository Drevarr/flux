created: 20230206215940000
creator: Drevarr
modified: 20230705163518809
modifier: drevarr
tags: ChartData
title: 202302062159_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Daring Deathblade", "Mirrors Dancer", "Grasszanine", "Arcanophage Farra", "Newtype Khan", "Rina Of Theros", "Smol Gluvs", "Fungus", "Raziel Umbra", "Be\u00eb"];
const professions = ["Spellbreaker", "Scourge", "Chronomancer", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.04, 0.0, 0.1962, 0.1946, 0.0, 0.3812], [0.5902, 0.4261, 0.086, 0.2096, 0.6154, 0.3263, 0.4719, 0.0], [0.1055, 0.0385, 0.3671, 0.5838, 0.098, 0.3], [0.0385, 0.2532, 1.0054, 0.0784, 0.4188, 0.8989, 0.7541], [0.0364, 0.0128, 0.2025, 0.5514, 0.1569, 0.3438, 0.6292, 0.082, 0.3977, 0.2903, 0.4491, 0.1154, 0.0, 0.6517, 0.0128, 0.0103, 0.0], [0.1273, 0.0385, 0.2595, 0.6919, 0.0, 0.3563, 0.8427, 0.2623, 0.1136, 0.3011, 0.2575, 0.2308, 0.0, 0.4944, 0.1538, 0.0515, 0.3103], [0.1127, 0.0321, 0.0823, 0.1676, 0.0784, 0.4813, 0.6854, 0.918, 0.2102, 0.5269, 0.6048, 0.1538, 0.0421, 1.0225, 0.1154, 0.0412, 0.1724], [0.0836, 0.0, 0.2595, 0.8541, 0.0, 0.5437, 1.0112, 0.6721, 0.358, 0.0323, 0.4311, 0.0769, 0.0105, 0.8202, 0.0897, 0.0825, 0.2414], [0.0582, 0.0064, 0.2785, 0.9514, 0.0196, 0.5875, 0.6067, 0.8197, 0.4261, 0.5699, 0.5689, 0.1154, 0.0211, 1.0, 0.0192, 0.0412, 0.1379], [0.1527, 0.0064, 0.3734, 1.0541, 0.5875, 0.6067, 0.7049, 0.5568, 1.0, 0.485, 0.3462, 0.2632, 0.6742, 0.0897, 0.0206, 0.0345], [0.1055, 0.0705, 0.3797, 1.0486, 0.0784, 0.775, 1.0787, 0.5082, 0.6648, 1.0753, 0.5689, 1.0385, 0.0421, 1.0899, 0.2885, 0.0309]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

