created: 20230303232222000
creator: Drevarr
modified: 20230705163521005
modifier: drevarr
tags: ChartData
title: 202303032322_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Erica Nakiri", "Delynai", "Sofya De Nova", "Lil Cutt Throat", "Azar Fletcher", "Stoic Rapidfire", "Hud Da Bu Dah", "Oo Dads Mad", "Bloodline T", "Jupi Jupi Jupi", "Sumatra Satyricon", "Lord Erin The Wise", "Nelliel T", "High Sorcer Baradun", "Air One Com", "Legacy Of Mathus", "Cat Wigglebooty", "Heks Appeal", "Sp\u00edcy Cheese", "Tribal S", "Grasszanine", "Ace Hammers", "Cerys Fireblade", "Arcanophage Farra", "Demon Sekhmet", "Lucky Leipreach\u00e1n", "Fruji", "Zadie Miststep", "Aronorf Xideliesi", "Blanco Padre Guard", "Panther B Me", "Kosa\u00edr", "Xanvias Tseli", "Kahless The Drunk", "Smol Gluvs", "Seren Nightroad", "Koralia Danai", "Newtype Khan", "Rozaalyna", "Seren\u00e1 Joy", "Venomina The Siren", "Viral Marketing", "Morton Saltbringer", "Drevarr Moonwillow", "Ravioli Fetabringer", "Bella Sassy", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Deadeye", "Scrapper", "Weaver", "Catalyst", "Soulbeast", "Druid", "Chronomancer", "Spellbreaker", "Dragonhunter", "Firebrand", "Soulbeast", "Weaver", "Scourge", "Tempest", "Firebrand", "Berserker", "Scrapper", "Scourge", "Berserker", "Druid", "Spellbreaker", "Vindicator", "Berserker", "Spellbreaker", "Berserker", "Scrapper", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Scourge", "Scrapper", "Berserker", "Firebrand", "Scourge", "Scourge", "Firebrand", "Spellbreaker", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 0, 4, 0, 30, 4, 0, 0, 2, 0, 1, 0], [27, 6, 0, 15, 1, 4, 1], [3, 21, 0, 1, 0, 3, 3, 5, 20], [0, 0, 31, 0, 0, 7, 0, 0, 18], [2, 13, 0, 0, 1, 1, 2, 1, 2, 37], [3, 11, 0, 0, 1, 1, 7, 4, 3, 0, 13, 0, 0, 12, 3, 9, 7], [0, 30, 0, 12, 5, 0, 25, 0, 7, 4], [3, 24, 9, 0, 0, 15, 0, 16, 2, 0, 19, 0, 2], [8, 24, 0, 0, 39, 2, 11, 10], [2, 26, 0, 0, 1, 1, 8, 1, 2, 43, 2, 4, 8], [1, 22, 0, 1, 2, 14, 1, 0, 31, 5, 0, 0, 5, 0, 17, 0, 0, 0, 3], [8, 0, 0, 0, 1, 1, 3, 0, 13, 3, 2, 28, 5, 0, 0, 15, 0, 2, 9, 0, 0, 20, 0], [1, 9, 0, 0, 1, 1, 2, 3, 0, 15, 1, 29, 8, 0, 0, 5, 0, 12, 1, 0, 20, 1, 4, 2], [2, 13, 0, 0, 0, 0, 2, 2, 0, 12, 1, 5, 12, 10, 0, 0, 1, 25, 5, 1, 0, 25], [2, 16, 1, 33, 0, 32, 13, 1, 0, 37, 3, 8, 5], [3, 7, 0, 0, 0, 1, 0, 4, 2, 20, 6, 5, 45, 8, 0, 0, 25, 0, 4, 7, 0, 0, 15, 0, 5, 3], [1, 15, 0, 0, 0, 1, 1, 2, 1, 39, 2, 4, 56, 9, 0, 0, 29], [1, 20, 0, 0, 0, 2, 2, 4, 5, 35, 4, 3, 32, 2, 0, 0, 2, 0, 24, 11, 0, 0, 6, 2, 10, 2], [1, 17, 0, 0, 1, 3, 22, 4, 2, 23, 10, 0, 0, 13, 21, 6, 2, 0, 38, 1, 4], [2, 13, 0, 0, 0, 0, 1, 2, 1, 16, 2, 8, 33, 11, 1, 0, 21, 0, 21, 7, 0, 0, 20, 4, 7, 1], [0, 13, 0, 0, 1, 0, 0, 6, 2, 20, 5, 6, 34, 8, 1, 1, 26, 24, 4, 2, 0, 22, 1, 4, 2], [1, 11, 0, 0, 0, 1, 0, 4, 4, 27, 1, 3, 20, 9, 0, 0, 25, 29, 5, 0, 0, 33, 3, 5, 4], [2, 11, 1, 0, 0, 1, 1, 5, 3, 31, 7, 4, 27, 3, 0, 0, 22, 0, 24, 10, 0, 0, 35, 0, 7, 0], [2, 19, 0, 3, 0, 2, 2, 1, 10, 2, 4, 33, 10, 1, 0, 28, 0, 25, 7, 0, 0, 36, 0, 7, 3], [0, 13, 1, 0, 0, 0, 0, 5, 3, 29, 0, 6, 26, 4, 1, 0, 33, 0, 21, 3, 1, 0, 40, 1, 8, 2], [3, 13, 0, 0, 0, 4, 0, 23, 4, 3, 62, 13, 0, 1, 36, 0, 7, 2, 0, 0, 12, 0, 8, 7], [0, 15, 0, 0, 1, 0, 8, 1, 44, 3, 7, 0, 8, 0, 0, 24, 0, 11, 17, 0, 0, 45, 3, 11, 3], [1, 13, 0, 2, 0, 0, 3, 4, 27, 2, 9, 23, 11, 0, 0, 29, 34, 7, 0, 0, 28, 0, 6, 5], [2, 16, 1, 1, 2, 1, 4, 3, 3, 25, 5, 6, 35, 5, 1, 1, 21, 2, 33, 6, 2, 1, 33, 4, 8, 2], [1, 14, 0, 0, 3, 2, 3, 4, 3, 34, 8, 8, 32, 7, 0, 1, 20, 1, 34, 11, 1, 0, 26, 3, 10, 5], [2, 16, 0, 0, 1, 1, 3, 0, 24, 4, 3, 57, 6, 0, 1, 26, 0, 33, 18, 0, 0, 22, 5, 8, 5], [1, 16, 1, 24, 0, 47, 7, 2, 42, 9, 0, 0, 21, 28, 9, 0, 0, 25, 0, 2, 3], [0, 15, 0, 0, 1, 1, 2, 6, 7, 31, 4, 7, 69, 8, 0, 1, 46, 1, 15, 2, 0, 0, 19, 0, 4, 1], [3, 22, 0, 0, 1, 2, 2, 9, 4, 30, 5, 7, 28, 6, 2, 3, 25, 33, 8, 1, 0, 33, 4, 10, 4], [3, 11, 0, 0, 2, 3, 1, 4, 4, 28, 5, 2, 65, 18, 0, 1, 35, 0, 14, 6, 0, 0, 31, 3, 4, 2], [1, 13, 1, 0, 1, 1, 2, 0, 1, 6, 3, 3, 52, 14, 0, 0, 31, 0, 38, 11, 0, 0, 48, 3, 10, 3], [2, 26, 1, 0, 2, 1, 5, 5, 6, 43, 4, 5, 66, 18, 0, 1, 42, 1, 1, 2, 9, 4], [2, 18, 1, 0, 1, 1, 3, 7, 4, 37, 5, 3, 61, 9, 0, 1, 41, 0, 11, 2, 0, 0, 34, 0, 5, 4], [1, 12, 0, 1, 0, 2, 3, 2, 37, 3, 5, 62, 10, 0, 0, 27, 0, 39, 15, 0, 36], [2, 14, 1, 0, 1, 2, 3, 4, 5, 23, 3, 3, 57, 10, 1, 1, 36, 0, 35, 10, 1, 0, 44, 3, 10, 5], [1, 18, 1, 0, 0, 1, 1, 2, 2, 29, 1, 2, 63, 12, 0, 1, 37, 0, 35, 13, 1, 52, 3, 8, 3], [2, 5, 8, 5, 42, 6, 7, 52, 9, 1, 1, 30, 2, 40, 14, 1, 0, 54, 2, 13, 5], [2, 18, 1, 0, 4, 2, 3, 9, 6, 28, 59, 16, 1, 0, 38, 0, 46, 11, 0, 1, 48, 1, 14, 6], [2, 22, 0, 0, 2, 1, 2, 4, 8, 38, 4, 4, 77, 16, 0, 0, 49, 0, 50, 17, 3, 0, 57, 6, 12, 3], [2, 21, 1, 0, 4, 1, 3, 9, 6, 35, 4, 4, 79, 23, 1, 1, 52, 0, 48, 13, 3, 0, 71, 4, 13, 3], [2, 23, 0, 0, 3, 1, 4, 8, 12, 43, 9, 7, 71, 8, 1, 1, 49, 56, 16, 3, 0, 70, 4, 13, 5], [2, 23, 1, 0, 6, 2, 3, 5, 7, 39, 7, 4, 67, 13, 2, 0, 60, 1, 56, 16, 3, 0, 79, 2, 10, 7], [1, 20, 1, 0, 2, 1, 4, 6, 7, 54, 4, 7, 93, 22, 0, 0, 69, 0, 52, 12, 2, 0, 66, 3, 7, 6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

