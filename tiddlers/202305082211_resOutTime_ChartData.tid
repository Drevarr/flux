created: 20230508221143000
creator: Drevarr
modified: 20230705163529339
modifier: drevarr
tags: ChartData
title: 202305082211_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Cerys Fireblade", "No Reserv\u00e9", "Mistwalker Caelon", "Belvyn Brightblade", "Tika Rucola", "Smol Gluvs", "Grasszanine", "Ark Darkness", "Kiloak", "Eibh\u00ebar", "Panther B Me", "Jeckyll Mbs", "Red Date Sayaccho", "Kary\u00edna", "N\u00e9azoule", "Koralia Danai", "Miphest\u00f6", "Primal Clone", "Bella Fae", "Solus Sanctus", "Inedible Plant", "Fribble Bibble", "Tegan Parker", "Ryvalia Fazebringer", "High Sorcer Baradun", "Sygaldry Verdandi", "Mac Aaroni", "Newtype Khan", "Sumatra Satyricon"];
const professions = ["Berserker", "Berserker", "Herald", "Vindicator", "Firebrand", "Chronomancer", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Scourge", "Berserker", "Tempest", "Vindicator", "Reaper", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 229.36, 0.0, 0.0, 0.0, 725.2, 0.0, 0.0, 0.0, 1015.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 114.68, 0.0, 0.0, 1813.0, 0.0, 0.0, 0.0, 1015.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 57.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 529.2, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2539.2, 0.0, 0.0, 0.0, 235.2, 0.0, 318.78, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 4351.2, 0.0, 0.0, 0.0], [0.0, 57.34, 0.0, 0.0, 567.76, 2175.6, 0.0, 0.0, 0.0, 507.84, 0.0, 0.0, 0.0, 58.8, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1450.4, 0.0, 0.0, 0.0, 1523.52, 0.0, 0.0, 0.0, 0.0, 0.0, 850.08, 0.0, 0.0], [0.0, 344.04, 0.0, 0.0, 0.0, 3554.88, 0.0, 38.64, 0.0, 0.0, 0.0, 212.52, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 3626.0, 0.0, 0.0, 0.0, 4062.72], [0.0, 57.34, 0.0, 0.0, 1087.8, 0.0, 0.0, 0.0, 8125.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 401.38, 0.0, 0.0, 0.0, 1087.8, 0.0, 0.0, 0.0, 4570.56, 0.0, 77.28, 0.0, 0.0, 0.0, 106.26, 0.0, 0.0], [0.0, 114.68, 0.0, 0.0, 0.0, 3626.0, 0.0, 0.0, 0.0, 5078.4], [0.0, 917.44, 0.0, 0.0, 709.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 117.6, 0.0, 0.0, 0.0, 0.0], [2539.2, 0.0, 0.0, 263.16, 0.0, 0.0, 1487.64, 0.0, 0.0], [0.0, 57.34, 0.0, 0.0, 851.64, 1813.0, 0.0, 0.0, 0.0, 1015.68, 0.0, 0.0, 131.58, 117.6, 0.0, 743.82, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 362.6, 0.0, 0.0, 10664.64, 0.0, 0.0, 65.79, 352.8, 0.0, 0.0, 0.0, 0.0], [0.0, 172.02, 0.0, 0.0, 0.0, 2175.6, 0.0, 0.0, 0.0, 7617.6, 0.0, 0.0, 0.0, 176.4, 0.0, 212.52, 0.0, 35.2], [0.0, 1032.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2031.36, 0.0, 0.0, 0.0, 588.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 3626.0, 0.0, 0.0, 6601.92, 0.0, 0.0, 263.16, 0.0, 0.0, 637.56, 0.0, 0.0], [0.0, 286.7, 0.0, 0.0, 0.0, 3988.6, 0.0, 0.0, 0.0, 3047.04, 0.0, 154.56, 197.37, 176.4, 0.0, 0.0, 126.0, 0.0], [0.0, 229.36, 0.0, 0.0, 0.0, 1813.0, 0.0, 0.0, 0.0, 12696.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 126.0, 0.0], [0.0, 172.02, 0.0, 0.0, 0.0, 5801.6, 0.0, 0.0, 0.0, 11172.48], [0.0, 0.0, 0.0, 0.0, 0.0, 1450.4, 0.0, 0.0, 0.0, 4570.56, 44.72, 115.92, 131.58, 940.8, 0.0, 531.3, 0.0, 70.4], [0.0, 0.0, 0.0, 4351.2, 0.0, 0.0, 0.0, 7109.76, 0.0, 38.64, 65.79, 117.6, 0.0, 1168.86, 126.0, 35.2], [0.0, 286.7, 0.0, 0.0, 4713.8, 0.0, 0.0, 0.0, 14219.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 172.02, 0.0, 0.0, 6889.4, 0.0, 0.0, 0.0, 11680.32, 0.0, 0.0, 352.8, 0.0, 0.0, 0.0, 0.0], [0.0, 114.68, 0.0, 0.0, 5439.0, 0.0, 0.0, 0.0, 11172.48, 0.0, 38.64, 0.0, 0.0, 1062.6, 126.0, 35.2], [0.0, 114.68, 0.0, 0.0, 0.0, 2900.8, 0.0, 0.0, 0.0, 16758.72, 0.0, 77.28, 0.0, 58.8, 0.0, 425.04, 0.0, 140.8], [0.0, 573.4, 0.0, 0.0, 0.0, 5439.0, 0.0, 0.0, 0.0, 15743.04, 0.0, 0.0, 263.16, 352.8, 0.0, 106.26, 0.0, 0.0], [0.0, 229.36, 0.0, 0.0, 0.0, 9427.6, 0.0, 0.0, 0.0, 13203.84, 0.0, 0.0, 131.58, 705.6, 0.0, 0.0, 0.0, 70.4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

