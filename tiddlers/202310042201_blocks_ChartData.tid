created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Lhea Bloodhand", "Garphon", "Mielikki Embla", "Rosa Bassano", "Amiti\u00e9l", "Jimbo The Pleb", "Bella Bitty", "Oo Dads Mad", "Jimbo The Pleb", "Tegan Parker", "Lord Erin The Wise", "Zanos Engine", "Cedryn X", "Klengah", "Astraeus Windrunner", "Mort\u00e4rion", "Amiti\u00e9l", "K\u00e2fkaa", "Cat Wigglebooty", "Sister Elonith", "Tootsie Pop Rocks", "Glorious Gluvs", "K\u00e2 \u00d4tik R\u00e6j", "Crusader Siolith", "Irin The Undeath", "Etchery Howls", "Xanvias Tseli", "Mistwalker Cael", "Kurn The Drunk", "No Reserv\u00e9", "Venom The Ferocious", "Newtype Khan", "Zaedy Zae", "Rafaellagabriela", "Sub Train", "Adjudicatrix Farra", "Morton Saltbringer", "Atria Ruinheart", "Grasszanine", "Jmbrage Gaurdian", "Latedoctor", "Black Raspberry Pie", "Cutie Piebringer", "Visterik", "Eibh\u00ebar", "Solus Luxes", "Rina Of Theros", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Kosair"];
const professions = ["Reaper", "Herald", "Druid", "Tempest", "Firebrand", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Weaver", "Scrapper", "Berserker", "Druid", "Berserker", "Scrapper", "Willbender", "Weaver", "Scrapper", "Berserker", "Scrapper", "Berserker", "Berserker", "Firebrand", "Reaper", "Druid", "Berserker", "Herald", "Reaper", "Vindicator", "Firebrand", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Reaper", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Chronomancer", "Scrapper", "Willbender"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 6, 0, 4, 0], [6, 1, 8, 2, 2, 0, 0, 0], [7, 5, 9, 0], [7, 2, 15], [9, 7, 8, 0, 2, 0], [8, 2, 13, 0, 4, 0, 4], [11, 6, 11, 0, 3, 0, 5], [11, 5, 17, 0, 4], [16, 0, 6, 6, 10, 1, 0, 3], [0, 3, 15, 2, 10, 7, 6, 1, 0, 0], [3, 7, 11, 1, 0, 6, 6, 0, 4, 7, 2, 0, 0, 1], [5, 3, 9, 0, 0, 1, 7, 8, 0, 5, 9, 2, 0, 0, 0], [3, 6, 17, 3, 0, 7, 0, 3, 4, 5, 0, 0, 2], [3, 3, 10, 0, 3, 0, 5, 6, 0, 7, 4, 9, 1, 0, 2], [5, 5, 12, 0, 3, 0, 4, 12, 0, 3, 7, 3, 0, 0, 0], [6, 2, 16, 0, 2, 0, 4, 3, 3, 3, 10, 7], [6, 16, 3, 7, 13, 13, 0, 0], [4, 7, 13, 0, 3, 1, 5, 6, 3, 3, 8, 3, 0, 3], [9, 8, 6, 0, 4, 5, 1, 10, 12, 9, 0, 1], [10, 0, 1, 9, 15, 2, 9, 10, 7, 1, 0, 1], [7, 4, 13, 1, 0, 7, 17, 0, 4, 7, 4, 0, 3], [7, 3, 11, 0, 5, 0, 6, 12, 1, 7, 3, 8, 0, 4], [7, 10, 6, 0, 1, 0, 7, 6, 1, 9, 7, 9, 2, 0, 2], [5, 3, 14, 0, 3, 0, 2, 13, 1, 7, 10, 9, 0, 0, 1], [7, 6, 11, 0, 2, 0, 5, 16, 1, 7, 7, 5, 0, 3], [10, 6, 11, 0, 0, 7, 13, 1, 12, 6, 4, 0, 0, 1], [9, 2, 10, 0, 2, 0, 3, 14, 0, 9, 12, 4, 3, 0, 3], [6, 4, 14, 0, 4, 0, 5, 11, 1, 11, 9, 4, 0, 0, 2], [6, 7, 10, 6, 0, 8, 13, 1, 5, 7, 4, 0, 0, 4], [11, 6, 10, 3, 0, 6, 12, 0, 8, 7, 6, 0, 2], [8, 3, 12, 1, 6, 16, 1, 9, 8, 6, 1, 2], [10, 2, 22, 0, 4, 1, 7, 9, 1, 5, 6, 6, 0, 0, 1], [5, 6, 16, 0, 3, 0, 7, 12, 3, 6, 7, 6, 2, 0, 2], [12, 5, 11, 0, 2, 0, 8, 10, 1, 7, 9, 9, 1, 0, 3], [8, 7, 8, 0, 3, 0, 7, 13, 0, 7, 11, 10, 3, 0, 3], [8, 7, 20, 2, 0, 3, 14, 0, 12, 6, 5, 5, 0, 1], [10, 7, 16, 1, 3, 27, 1, 9, 5, 6, 1, 0, 1], [12, 5, 10, 0, 3, 0, 8, 17, 0, 8, 9, 8, 1, 6], [9, 8, 10, 5, 2, 4, 18, 1, 7, 10, 9, 1, 4], [11, 8, 16, 5, 0, 3, 15, 2, 10, 9, 8, 0, 3], [10, 7, 11, 6, 0, 10, 15, 1, 10, 11, 9, 0, 0, 1], [8, 5, 21, 5, 0, 5, 17, 1, 6, 11, 10, 1, 0, 2], [12, 8, 14, 0, 5, 0, 8, 17, 1, 10, 5, 9, 2, 0, 1], [10, 8, 15, 0, 2, 0, 5, 18, 1, 8, 13, 10, 2, 1, 2], [13, 6, 16, 4, 0, 6, 19, 2, 9, 8, 9, 2, 0, 2], [13, 4, 15, 0, 5, 1, 4, 20, 2, 12, 9, 8, 1, 2], [8, 7, 25, 0, 2, 0, 8, 17, 2, 13, 7, 6, 0, 0, 2], [8, 9, 18, 0, 5, 1, 6, 20, 2, 11, 11, 14, 1, 0, 4], [18, 9, 14, 0, 3, 2, 6, 22, 1, 8, 14, 13, 0, 0, 3], [15, 7, 20, 6, 1, 28, 3, 9, 14, 10, 1, 3]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

