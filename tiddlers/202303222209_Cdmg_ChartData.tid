created: 20230322220917000
creator: Drevarr
modified: 20230705163522765
modifier: drevarr
tags: ChartData
title: 202303222209_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["My Birthday Girl", "Macette", "Johosh The Great", "Kiloak", "Venomina The Siren", "Morton Saltbringer", "Abigail Ryn", "Legacy Of Mathus", "Eibh\u00ebar", "Solus Sanctus", "Dark Sidiuz", "Seren Nightroad", "Lord Erin The Wise", "Tootsie Poppa", "Smol Daddy Tika", "Kosa\u00edr", "Rozaalyna", "Sp\u00edcy Cheese", "Etch\u00e9ry", "Panther B Me", "Xanvias Einzbern", "Nazhul Naxxremis", "Smol Gluvs", "Rina Of Theros", "Einar Xxl", "Be\u00eb"];
const professions = ["Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Berserker", "Chronomancer", "Firebrand", "Scourge", "Scourge", "Weaver", "Scourge", "Berserker", "Holosmith", "Scourge", "Berserker", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Firebrand", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.1512, 36.6102, 32.78, 1.02, 32.7455, 15.5312, 0.95, 4.9388, 49.9692, 0.0, 26.2841, 17.2833, 13.053, 0.0, 36.6176, 2.8133, 0.5443, 68.4286, 17.2174, 17.8531, 1.7727, 34.2105, 64.766, 2.0702, 28.0476, 0.0], [16.0969, 49.3559, 33.96, 7.92, 35.1273, 30.5729, 22.5333, 1.4184, 48.0462, 11.7386, 17.7667, 17.0517, 3.1711, 39.3431, 1.8533, 0.7468, 23.3492, 29.8986, 0.6643, 32.7197, 2.0789, 33.0638, 17.193, 4.871], [13.6977, 102.7458, 5.16, 0.0, 107.8818, 60.1875, 0.0, 1.2857, 29.4769, 19.8523, 10.2167, 24.3128, 25.0987, 13.3725, 25.4667, 13.0759, 25.0794, 12.7971, 17.9371, 0.0, 14.5526, 2.1702, 0.0, 0.0, 0.9032], [8.7345, 21.8475, 65.16, 0.0, 71.4455, 51.0729, 11.6833, 47.4898, 79.9692, 0.0, 123.6477, 22.5333, 11.3165, 29.5395, 66.8333, 33.96, 0.0, 70.873, 7.087, 28.9231, 0.6515, 1.3158, 0.0, 7.0175, 0.0, 0.0], [16.9922, 85.9661, 0.3, 0.0, 40.4909, 79.8646, 57.3333, 33.4592, 28.4462, 0.0, 23.625, 1.45, 10.835, 71.9342, 86.6373, 0.0, 4.8354, 134.4762, 0.0, 15.0699, 1.0758, 0.0, 12.1915, 9.9825, 0.0, 5.0323], [48.4507, 37.5855, 46.6275, 19.6267, 1.5316, 202.0952, 86.3188, 45.3287, 24.1136, 0.0, 1.9362, 1.3158, 56.7619, 37.7419], [23.4322, 41.7119, 131.62, 3.8, 89.6273, 8.7708, 19.1167, 13.0, 86.2769, 0.0, 14.0568, 87.85, 11.8879, 15.0658, 44.2647, 12.04, 0.0, 143.7536, 20.6014, 52.4167, 33.8158, 4.7447, 25.5088, 105.7143, 8.8065], [35.1143, 78.1356, 122.96, 13.6, 97.3909, 105.1979, 103.1863, 25.5467, 8.7215, 190.381, 34.4203, 112.3147, 4.8939], [21.9806, 97.4068, 38.3, 0.0, 90.7273, 39.3646, 10.0, 23.7143, 118.6154, 0.0, 57.6591, 57.4, 14.0209, 37.5855, 114.2353, 34.0667, 7.443, 100.0476, 17.029, 14.7273, 11.5, 8.6579, 11.6383, 27.0702, 4.0952, 68.4839], [23.9012, 27.7288, 111.68, 23.32, 53.3727, 18.9896, 29.6, 4.7653, 82.2, 0.0, 51.1591, 44.9667, 29.3892, 3.7961, 21.1275, 51.08, 0.0, 25.8571, 110.1739, 82.3566, 0.9848, 125.3421, 20.5319, 37.0702, 0.0, 0.0], [30.8953, 129.5254, 134.92, 11.12, 147.7636, 85.6354, 68.1667, 0.0, 214.2667, 59.8879, 0.0, 327.0725, 152.6853, 35.5985, 27.5526, 110.1277], [251.7627, 210.5, 0.0, 174.7273, 42.4062, 35.1, 65.6122, 218.6154, 3.4615, 73.7614, 277.5333, 36.4286, 82.625, 226.4804, 33.48, 19.1049, 23.5076, 49.0789, 146.0638], [49.9903, 142.7627, 156.96, 0.0, 78.3818, 67.1875, 8.4833, 142.898, 297.9538, 0.0, 67.9886, 130.7167, 38.6047, 1.9803, 0.4412, 65.1467, 2.2658, 61.5238, 237.8551, 52.9021, 26.5152, 20.8158, 50.5957, 104.5614, 186.6129], [47.5504, 91.6949, 110.66, 0.0, 177.0636, 65.9062, 71.8667, 34.9592, 491.1692, 105.4773, 181.1833, 39.053, 48.8158, 40.6471, 122.4533, 0.0, 99.4921, 9.5942, 8.8112, 72.2803, 7.7368, 25.7872], [28.7267, 58.6102, 0.52, 12.12, 49.2909, 0.0, 17.55, 183.449, 195.8769, 0.0, 130.0, 395.9667, 28.085, 88.0197, 88.902, 23.8667, 13.1392, 90.5873, 219.7391, 72.6084, 44.4318, 143.8684, 40.5745, 96.7719, 0.0, 189.3226], [47.5058, 110.678, 23.54, 5.88, 169.9364, 122.8646, 184.4167, 168.9796, 274.6, 0.0, 109.6136, 294.2667, 12.4717, 40.6118, 256.549, 29.88, 5.5949, 89.6667, 135.0725, 4.7424, 3.9737, 0.0851, 4.5614, 0.0], [28.0446, 150.0508, 255.88, 0.0, 157.5545, 140.5521, 8.9, 168.9082, 368.0154, 12.4872, 25.4318, 75.2833, 16.7525, 107.6908, 136.2059, 229.0267, 234.0, 109.5797, 3.2378, 27.8788], [52.376, 280.4915, 298.98, 0.0, 216.4455, 161.6979, 269.05, 131.4184, 21.1846, 3.2614, 405.2667, 29.314, 117.3026, 48.6275, 57.7067, 0.0, 147.127, 5.7552, 60.5152, 0.0, 146.234, 84.0351, 85.3333, 0.0], [52.9961, 197.1017, 95.34, 0.0, 322.2364, 17.8021, 274.35, 86.0408, 194.0462, 0.0, 178.5682, 198.9167, 26.8559, 169.8601, 40.697, 333.3684, 128.5532, 226.5614, 487.2857, 247.9355], [77.905, 161.8305, 264.5, 0.0, 113.2818, 132.4271, 66.7667, 84.2959, 235.0462, 105.5795, 100.5667, 57.3719, 68.5, 136.1863, 63.4533, 38.5316, 395.2381, 218.5072, 173.2657, 111.1061, 49.9737, 82.8936], [31.3643, 339.4576, 126.94, 0.0, 315.3727, 189.1354, 191.6, 194.5918, 314.5538, 0.0, 211.7386, 351.0833, 85.1539, 103.7434, 52.4902, 111.44, 37.3291, 0.0, 160.3043, 25.6713, 56.5682, 22.3421, 166.6383, 19.5614, 0.0, 3.1935], [55.1415, 227.0169, 240.44, 0.0, 99.6182, 166.4375, 113.0, 109.2143, 143.1231, 0.0, 127.8864, 258.5833, 60.9631, 108.4079, 59.5686, 41.6, 62.1519, 309.9841, 454.5362, 208.021, 157.5303, 71.6579, 112.8085], [72.8837, 356.661, 179.06, 6.06, 229.5909, 98.2292, 171.9333, 103.898, 359.4308, 0.0, 159.6136, 551.2, 61.5443, 86.1579, 212.5784, 37.2933, 36.5316, 237.8413, 279.5072, 151.3357, 97.2879, 13.7105, 104.0213], [109.1221, 245.2373, 220.74, 0.0, 250.3545, 276.8958, 123.7833, 141.2143, 277.0615, 0.0, 124.3523, 163.7833, 64.601, 82.1776, 418.7451, 187.04, 36.8734, 247.2857, 209.058, 98.2448, 31.9394, 44.7105, 30.1064], [30.4103, 509.7727, 894.3167, 177.6736, 303.0658, 724.2843, 363.0533, 76.6582, 399.9365, 1464.6812], [71.4438, 550.5424, 418.46, 1.4, 368.6, 212.9271, 271.85, 360.1531, 660.7846, 8.7692, 179.4318, 431.65, 85.0259, 152.5987, 613.5784, 133.0667, 90.481, 540.381, 403.4203, 91.2727, 2.5985, 56.9474, 219.7447]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

