created: 20230212214943000
creator: Drevarr
modified: 20230705163519082
modifier: drevarr
tags: ChartData
title: 202302122149_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Ez Mode Mathus", "Rina Of Theros", "Morv\u00e4rth", "Kosa\u00edr", "Smol Gluvs", "Newtype Khan", "Minka Bringer", "High Sorcer Baradun", "Daring Deathblade", "Venomina The Fierce", "Xanvias Tseli", "Reverve Mk V", "Tootsie Pop Bringer", "Bambiae", "Zaylen Harker", "Tegan Parker", "Whose Guardian", "Zadie Miststep", "Veggie Mac", "Lord Erin The Wise", "Primal Shield", "Hyde En Sikh", "Harry Callahann", "Ace Hammers", "Arka\u00f1", "Be\u00eb", "Blanco Padre Guard", "Joh Oshi", "Ark Darkness", "Bella Sassy", "Sizklea", "Gangsta Mech", "Shade Ilia", "Legionstorm", "Sygaldry Verdandi", "Sumatra Satyricon", "Koralia Danai", "Dark Sidiuz", "Octavia Daye", "Superproxy", "Rashim Maschensy", "Superproxy", "Koisx"];
const professions = ["Scourge", "Scourge", "Scourge", "Scrapper", "Scourge", "Spellbreaker", "Scrapper", "Tempest", "Scourge", "Spellbreaker", "Berserker", "Herald", "Scrapper", "Chronomancer", "Firebrand", "Tempest", "Willbender", "Tempest", "Tempest", "Weaver", "Firebrand", "Chronomancer", "Scrapper", "Vindicator", "Chronomancer", "Scourge", "Firebrand", "Druid", "Firebrand", "Firebrand", "Dragonhunter", "Engineer", "Soulbeast", "Soulbeast", "Firebrand", "Soulbeast", "Firebrand", "Reaper", "Mirage", "Berserker", "Soulbeast", "Spellbreaker", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[864.8032, 1538.0677, 0.0, 2232.64, 429.0968, 259.0625, 305.0248], [427.8039, 817.2033, 993.4015, 0.0, 1560.9, 175.5, 43.4545, 320.2991], [674.283, 741.3601, 1056.6411, 0.0, 2653.5918, 281.9032, 8.7556, 494.377], [670.8114, 965.7407, 289.8, 2740.3385, 557.5, 66.2093, 263.3277], [259.9608, 592.6613, 1078.5407, 65.875, 1622.0811, 577.9677, 647.907, 296.4274], [429.38, 509.3227, 1259.5369, 259.1562, 6481.5833, 120.96, 456.4651, 758.1565], [210.1765, 629.1007, 1471.1636, 4110.9091, 318.25, 63.383, 345.1557], [527.6078, 644.3973, 999.2634, 2325.1333, 289.9062, 160.1176, 449.9917], [431.1176, 664.0287, 770.4541, 269.0, 1423.6869, 463.3214, 392.4894, 655.6935], [62.0784, 613.7159, 934.6522, 591.375, 2678.4167, 482.5769, 300.0, 340.1393], [406.9423, 588.5147, 859.1245, 90.0625, 1529.8795, 298.871, 107.1591, 145.6116], [569.8269, 577.4065, 965.2434, 0.0, 1793.3529, 360.4828, 78.4468, 183.8235], [1156.5917, 721.4784, 801.0645, 1009.6667, 285.2759, 64.913, 285.7686], [526.1765, 635.0316, 827.5, 256.9118, 768.9394, 432.0, 120.5319, 319.8966], [460.7609, 349.8392, 926.2406, 503.3939, 1415.2532, 271.1923, 139.5532, 171.395], [233.38, 466.4453, 972.2481, 499.2812, 1369.0, 355.931, 119.5417, 118.3583], [183.4231, 476.8615, 973.1538, 56.2903, 1187.9059, 172.4, 139.0333, 365.5391], [373.4118, 300.734, 949.4403, 373.8889, 934.2929, 252.2857, 65.7857, 195.6446], [135.8846, 357.4633, 981.6996, 339.8333, 761.2143, 232.4194, 234.0213, 189.5691], [255.5443, 440.5188, 815.4038, 124.0, 1247.2239, 277.8387, 315.6818, 444.8361], [430.42, 443.4373, 723.7038, 81.25, 1155.3895, 320.76, 19.725, 140.7692], [294.2453, 313.5559, 829.5424, 346.3793, 839.2059, 255.0, 105.6383, 235.8862], [244.4706, 543.0879, 804.2292, 235.5185, 703.907, 344.8214, 59.6744, 353.2991], [314.0196, 452.4431, 723.5609, 0.0, 943.6471, 857.9655, 12.6596, 176.5385], [222.3922, 354.3099, 826.5202, 79.6774, 11692.1667, 350.871, 75.25, 198.4786], [134.9608, 368.6968, 798.2831, 0.0, 832.7024, 611.0323], [245.283, 589.4033, 842.1111, 35.875, 2297.4483, 252.8571, 10.325, 134.124], [123.2745, 874.6988, 705.3199, 22.6452, 673.3902, 257.8387, 39.0426, 89.05], [156.96, 368.9806, 696.6103, 227.5, 1558.443], [74.2353, 343.9664, 625.108, 733.7273, 965.3723, 237.5172, 37.234, 153.9658], [539.9792, 564.1288, 618.393, 0.0, 567.15], [8806.4444, 0.0, 770.6232, 19.9231, 595.9326], [2.7812, 901.6503, 1260.0143, 67.3226, 2156.8438], [198.4177, 558.5631, 128.7623, 0.0, 476.9762, 93.8333, 74.7778, 397.4309], [488.3529, 189.6109, 432.5341, 49.6364, 1209.1972, 221.8214, 2.881, 85.2437], [313.0392, 652.5374, 1016.4426, 0.0, 587.37, 154.1034, 101.0652, 328.5948], [99.5686, 270.8333, 539.8852, 47.6875, 496.8454, 157.7407, 76.1064, 36.7157], [90.5932, 737.5612], [0.0, 658.8039], [262.84, 192.6977, 795.7333], [263.129, 885.3535], [116.6071, 1038.3647], [601.0588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

