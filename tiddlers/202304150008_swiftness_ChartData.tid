created: 20230415000841000
creator: Drevarr
modified: 20230705163525673
modifier: drevarr
tags: ChartData
title: 202304150008_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Primal Clone", "High Sorcer Baradun", "Mac Chiato", "Elonith Primal", "Blancooo Padreee", "Zadie Miststep", "Corlyss Velaryonn", "Venomina The Siren", "Smol Daddy Tika", "Newtype Khan", "Black Raspberry Pie", "Stoic Rapidfire", "Air One Com", "Ryvalia Fazebringer", "Tegan Parker", "Drevarr Moonwillow", "Arcanophage Farra", "Mmathuss", "Koralia Danai", "Solus Sanctus", "Johosh The Great", "Lucas Ryn", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Berserker", "Chronomancer", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Chronomancer", "Druid", "Firebrand", "Chronomancer", "Tempest", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.5744, 121.3673, 48.1113, 0.0, 67.5243, 0.0, 7.2257, 35.9214, 41.2308, 70.5208, 0.0, 37.6036, 0.0, 68.4866, 69.1638, 3.036, 137.5832, 122.9981, 131.2719, 14.0352, 0.0, 25.0958], [33.1776, 6.6132, 59.6061, 0.0, 131.1237, 64.5975, 21.7833, 78.7911, 10.1088, 64.452, 0.0, 223.0609, 0.0, 131.0476, 36.9791, 14.6133, 88.9603, 31.1281, 134.4778, 9.0816, 0.0, 0.0], [27.1296, 186.372, 17.1031, 34.812, 149.8671, 15.4575, 125.7056, 35.1348, 0.0, 53.3899, 16.376, 120.6281, 39.9068, 12.5795, 23.5594, 6.5412, 179.1969, 18.3916, 26.4192, 0.0, 67.1378], [53.9568, 0.0, 24.9363, 0.684, 58.473, 5.6025, 206.6757, 172.9209, 114.0048, 28.1161, 0.0, 186.8051, 0.0, 20.9343, 15.4634, 0.0, 133.4302, 113.0491, 30.8052, 44.662, 156.5903], [108.008, 274.4121, 70.0074, 5.8863, 136.9438, 151.5378, 192.826, 319.9121, 66.7188, 15.2914, 60.0877], [29.7648, 58.617, 3.2445, 72.54, 17.2215, 190.6875, 124.4305, 216.5772, 45.9108, 74.4386, 1.771, 116.989, 12.3234, 60.0495, 128.4026, 20.2777, 217.7284, 125.7039, 58.9788, 8.3916], [29.8116, 57.615, 24.058, 287.8901, 0.0, 95.8079, 82.313, 32.0602, 152.41, 486.6079, 258.8318, 93.9636, 105.1747, 15.8466], [34.3008, 92.5848, 1.8076, 19.8, 21.5469, 122.3775, 141.5383, 145.521, 68.1876, 62.9156, 65.941, 181.1443, 38.2812, 124.6088, 71.0019, 123.1926, 287.5563, 129.0785, 32.6112], [4.104, 46.3675, 97.0106, 72.396, 138.8133, 23.0175, 34.2157, 254.7273, 18.018, 59.766, 187.381, 253.9255, 43.0553, 1.5787, 25.8377, 233.5449, 201.1262, 47.4204, 20.606, 101.3536], [70.4439, 106.628, 270.773, 117.8327, 122.1878, 41.7754, 116.1063, 289.0707, 355.8516, 111.7656, 247.0394, 50.9678], [72.9216, 8.4919, 1.9003, 35.136, 142.2576, 85.3875, 93.8276, 40.1166, 0.0, 2.3814, 0.0, 231.1477, 108.3935, 77.3761, 111.1176, 225.0173, 271.2351, 387.5728, 128.6904, 0.0, 5.4978], [13.0464, 23.8225, 10.1507, 29.628, 124.7958, 21.9375, 18.808, 99.636, 15.912, 91.339, 0.0, 66.8509, 0.0, 0.0, 143.217, 13.8442, 104.0051, 1157.4605, 106.1312, 0.0, 0.0, 0.0], [10.6704, 216.2817, 18.8181, 4.284, 167.3289, 100.17, 268.8378, 365.3757, 79.092, 6.9906, 0.0, 226.2956, 193.8707, 6.4085, 98.2045, 159.0602, 265.346, 250.0579, 0.0, 17.7622, 55.6895], [47.1744, 125.0496, 54.8784, 16.236, 310.9482, 86.0625, 224.4211, 197.8299, 57.3768, 153.5632, 34.937, 147.1798, 161.1481, 56.0621, 9.9176, 96.2647, 326.7609, 332.5668, 0.0, 0.0, 177.0292], [0.0, 251.7525, 231.3328, 0.0, 79.9398, 0.0, 0.0, 0.9177, 0.0, 267.1031, 29.026, 272.7947, 0.0, 480.1931, 30.2384, 0.0, 410.2423, 164.39, 112.5429, 244.7388, 25.1748, 131.1064], [57.672, 162.5494, 72.3524, 83.304, 227.4039, 51.705, 67.7939, 399.4617, 91.494, 92.3376, 69.759, 381.9665, 145.1539, 180.5759, 6.9221, 110.2192, 298.8298, 314.1753, 55.6764, 62.7971, 31.4345], [166.32, 146.9934, 83.0129, 61.416, 151.1487, 379.8225, 715.5548, 647.634, 57.3768, 76.8968, 46.184, 549.2285, 0.0, 130.6805, 60.192, 14.2085, 305.8011, 654.0266, 588.1928, 82.4052, 71.888, 140.2262], [204.336, 282.8646, 118.5169, 182.808, 267.9345, 317.25, 202.9566, 351.6102, 129.402, 112.5413, 116.403, 503.1337, 158.2639, 320.7073, 81.9315, 228.5059, 537.9272, 691.2868, 257.4324, 184.0558, 197.4034], [240.192, 308.5659, 54.7857, 283.104, 222.9984, 122.175, 620.7709, 645.2742, 138.762, 120.4538, 169.671, 473.7517, 86.7358, 152.4262, 46.8354, 196.9991, 682.2943, 524.5816, 82.6632, 117.902, 171.7901], [9.8496, 199.4481, 103.7776, 119.808, 345.1509, 444.7575, 466.9064, 470.5179, 233.6256, 206.0312, 114.149, 402.7226, 213.6406, 95.8419, 205.9622, 563.6334, 809.6671, 449.328, 54.8508, 152.5873, 202.2544], [110.5056, 322.168, 80.788, 220.032, 273.3012, 304.425, 798.1189, 448.2309, 179.8992, 224.0071, 55.384, 276.7033, 137.655, 111.1273, 130.1027, 236.7914, 721.6671, 709.8471, 237.2052, 121.3519, 231.425], [228.7872, 373.8712, 85.3767, 53.244, 324.8856, 455.0175, 675.4948, 738.3552, 291.0024, 240.8307, 26.634, 646.4049, 278.9284, 168.9457, 215.1107, 401.0846, 774.3325, 730.7696, 85.2432, 182.6572, 316.0265], [246.3696, 729.4059, 236.4777, 287.1, 510.8778, 569.7675, 629.803, 827.8965, 209.8044, 490.4189, 197.363, 603.4101, 0.0, 135.2952, 192.7757, 426.8616, 566.3589, 778.539, 769.5775, 94.2732, 133.5197, 245.8487], [353.8512, 404.4573, 271.8891, 299.124, 493.0956, 408.4425, 899.1721, 935.6607, 175.5468, 169.4649, 108.79, 872.4309, 295.1323, 367.7026, 224.9474, 372.7394, 1040.3516, 724.1892, 189.0108, 189.1373, 256.5856], [89.9424, 667.1065, 248.436, 408.528, 401.8617, 300.105, 787.5991, 1006.1925, 391.0608, 357.9812, 189.129, 800.1889, 257.428, 150.1951, 385.2482, 905.4111, 1265.9882, 919.0723, 203.304, 183.4497, 531.0875]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

