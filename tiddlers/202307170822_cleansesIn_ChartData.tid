created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Flick Embermage", "Tirluka", "Fluffernaut", "Sakis Ranger", "Magix Shot", "Necrotic Windrunner", "Surethang Smarts", "Mechcem", "Warrior W Warrior", "Wreakit Herm", "Big Boy Belkins", "Luke The Ghastly", "Tridogen", "The C\u00fcre", "Alfir Strom", "Levente Tangnu", "Tridoren", "Violet Stab", "Flick Embermage", "Dizzy Bunnyhopper", "Elonith Primal", "Gamora Titus", "Wren Duskbloom", "Unbound Serenity", "Vesnan", "Reina Armitage", "Elonith Requiem", "Charr Surethang", "Drac Tepes", "Legoh Brave", "Xanvias Tsolice", "Tegan Parker", "Thought Bound", "Latedoctor", "Mierin Farshaw", "Drevarr Moonwillow", "Gestern Yesteryear"];
const professions = ["Firebrand", "Tempest", "Tempest", "Firebrand", "Druid", "Druid", "Reaper", "Holosmith", "Scrapper", "Spellbreaker", "Scrapper", "Holosmith", "Scourge", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Reaper", "Firebrand", "Weaver", "Holosmith", "Tempest", "Firebrand", "Reaper", "Reaper", "Reaper", "Druid", "Reaper", "Berserker", "Scourge", "Tempest", "Weaver", "Tempest", "Firebrand", "Reaper", "Chronomancer", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3333, 0.1379, 0.3689, 0.6], [0.678, 0.0541, 0.7381], [0.0, 0.2059, 0.2353, 0.0, 0.4091, 0.127, 0.2763, 0.1438], [0.1724, 0.459, 0.6857, 0.4091], [0.5, 0.2024, 0.0, 0.0444, 0.0073, 0.1299, 0.2284, 0.4492], [0.6296, 0.1379, 0.2787, 0.4857, 0.3115, 0.2159, 0.1176, 0.2639, 0.0577, 0.5606], [0.5606, 0.1447, 0.0719, 0.1649, 0.0, 0.0526, 0.0, 0.0682, 0.0903, 0.0664, 0.1704], [0.1957, 0.3571, 0.1818, 0.0889, 0.1095, 0.1688, 0.2995, 0.4661, 0.0405, 0.619], [0.392, 0.2864], [0.5464, 0.0357, 0.2368, 0.0, 0.8636, 0.375, 0.1362, 0.1037], [0.134, 0.2143, 0.0789, 0.0, 0.3409, 0.0833, 0.2857, 0.2617], [0.1864, 0.0135, 0.5714, 0.1852, 0.2989, 0.2857, 0.1475, 0.1591, 0.0, 0.1111, 0.0385, 0.0476, 0.2632, 0.0206, 0.1964, 0.0526, 0.0, 0.25, 0.1667], [0.2174, 0.0, 0.2078, 0.2, 0.0, 0.0909, 0.3299, 0.2373, 0.0541, 0.7857, 0.0, 0.2241, 0.2787, 0.5429], [0.0135, 0.4524, 0.7407, 0.2759, 0.1967, 0.2571, 0.4754, 0.3523, 0.1471, 0.1176, 0.0556, 0.1923, 0.6667, 0.0317, 0.0, 0.0702], [0.0, 0.5, 0.2639, 0.2857, 0.2963], [0.0135, 0.5476, 0.5556, 0.1494, 0.0902, 0.0571, 0.0328, 0.1364, 0.0294, 0.2353, 0.125, 0.0385, 0.4242, 0.0794, 0.0208, 0.2149, 0.0, 0.1649, 0.0, 0.5263, 0.3182, 0.2014], [0.7407, 0.477, 0.2787, 0.6, 0.1705, 0.0, 0.0972, 0.0192, 0.1364, 0.0794, 0.2292, 0.307], [0.0833, 0.3922, 0.1753, 0.0714, 0.1579, 0.0, 0.4773, 0.2847, 0.3322, 0.0642], [0.1111, 0.0, 0.2544, 0.3464, 0.4742, 0.1607, 0.1842, 0.0, 0.3182, 0.2569, 0.0963, 0.2049], [0.3333, 0.2586, 0.3115, 0.1143, 0.3279, 0.4091, 0.2353, 0.1765, 0.0972, 0.0, 0.4848, 0.254, 0.3904, 0.3268], [0.1721, 0.4571, 0.1311, 0.2045, 0.0588, 0.3529, 0.0139, 0.0, 0.7424, 0.0476, 0.0044, 0.2484, 0.0412, 0.0, 0.3947, 0.3409, 0.1806, 0.1429, 0.2296], [0.0, 0.8864, 0.3889, 0.3787, 0.3901], [0.6286, 0.1967, 0.2841, 0.3235, 0.0882, 0.1528, 0.1346, 0.9091, 0.3016, 0.3114, 0.4967, 0.7216, 0.1786, 0.3158], [0.3333, 0.408, 0.1393, 0.3714, 0.1639, 0.2273, 0.0, 0.0833, 0.0192, 0.4091, 0.1429, 0.3114, 0.3987, 0.4124, 0.125, 0.2368, 0.4091, 0.3472], [0.1954, 0.4426, 0.2286, 0.4098, 0.3977, 0.0588, 0.1176, 0.125, 0.0192, 0.6212, 0.1111, 0.0, 0.3202, 0.4052, 0.1237, 0.1786, 0.4474, 0.1364, 0.2986], [0.037, 0.3506, 0.2705, 0.6571, 0.3068, 0.3235, 0.0, 0.0694, 0.2115, 0.5303, 0.0, 0.2418, 0.3608, 0.1429, 0.0789, 0.4091, 0.1181, 0.103, 0.2222], [0.5593, 0.0405, 0.5238, 0.6296, 0.1667, 0.4344, 0.7714, 0.2459, 0.2159, 0.0588, 0.2941, 0.0694, 0.0385, 0.7727, 0.0476, 0.3509, 0.4314], [0.0135, 0.5952, 0.5185, 0.3621, 0.3361, 0.7143, 0.0656, 0.3409, 0.1176, 0.4118, 0.1667, 0.0769, 0.8182, 0.254, 0.0, 0.4474, 0.4379, 0.4227, 0.3214, 0.1579], [0.6667, 0.3966, 0.3934, 0.7714, 0.2787, 0.4318, 0.1471, 0.0294, 0.125, 0.0, 0.0476, 0.4605, 0.7974, 0.3093, 0.0714, 0.2368, 0.3182, 0.3056], [0.127, 0.0, 0.557, 0.5948, 0.3402, 0.1964, 0.1842, 0.05, 0.6591, 0.2708, 0.505, 0.2988], [0.4576, 0.0135, 0.7857, 1.1481, 0.3908, 0.4426, 0.9143, 0.541, 0.3182, 0.1471, 0.4412, 0.5278, 0.0577, 0.7424, 0.2698, 0.0, 0.4211, 0.3856, 0.5464, 0.2143], [0.1087, 0.0714, 0.1039, 0.0, 0.0, 0.1558, 0.2284, 0.5424, 0.027, 0.4524, 0.4444, 0.1897, 0.1721, 0.4286, 0.2295, 0.1818, 0.1471, 0.1765, 0.0556, 0.0, 0.4848, 0.0159, 0.0208, 0.2149, 0.3072, 0.4124, 0.1607, 0.1579, 0.0, 0.2273, 0.2639, 0.2924, 0.2346], [0.0405, 0.8333, 1.2963, 0.3621, 0.5574, 0.9429, 0.0328, 0.3068, 0.2353, 0.2059, 0.4861, 0.0769, 1.0909, 0.3492, 0.0208, 0.5044, 0.7124, 0.6907, 0.1786], [0.7778, 0.4138, 0.3934, 0.3714, 0.3115, 0.3295, 0.2353, 0.5294, 0.5278, 0.0385, 0.3939, 0.2857, 0.2708, 0.3246, 0.451, 0.3711, 0.2321, 0.1579, 0.0, 0.4318, 0.1667, 0.3056, 0.2691], [0.0652, 0.4405, 0.0649, 0.0222, 0.0, 0.2468, 0.3503, 0.4322, 0.027, 0.9762, 0.4815, 0.3103, 0.4918, 0.6, 0.2623, 0.4773, 0.5588, 0.3529, 0.3472, 0.0962, 1.4848, 0.127, 0.3509, 0.8758, 0.2165, 0.2321, 0.1316, 0.15, 0.5227, 0.4861], [0.6271, 0.0135, 0.5952, 0.5926, 0.2931, 0.418, 0.5143, 0.1967, 0.3182, 0.5588, 0.3235, 0.1111, 0.0769, 1.3788, 0.1905, 0.0, 0.4868, 0.5163, 0.4536, 0.1429, 0.2368, 0.0, 0.3182, 0.3056, 0.392, 0.3457], [0.4348, 0.4881, 0.2078, 0.2222, 0.0073, 0.1818, 0.3807, 0.4492, 0.0, 0.9286, 0.8519, 0.4655, 0.4098, 0.6857, 0.5738, 0.4545, 0.3529, 0.1176, 0.2222, 0.1923, 1.2121, 0.4762, 0.4167, 0.5746, 0.8235, 0.4845, 0.25, 0.5526, 0.0, 1.2045, 0.3819], [0.413, 0.5119, 0.1688, 0.0444, 0.0365, 0.1299, 0.269, 0.5678, 0.0, 0.881, 0.4074, 0.454, 0.418, 0.8286, 0.1803, 0.5455, 0.2059, 0.3235, 0.3472, 0.0769, 1.0455, 0.3016, 0.0208, 0.4825, 0.6993, 0.4536, 0.2143, 0.2105, 0.0, 0.7045, 0.4028, 0.4917, 0.3877]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

