created: 20230210230955000
creator: Drevarr
modified: 20230705163518942
modifier: drevarr
tags: ChartData
title: 202302102309_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Panther B Me", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Tacoplasm", "Smol Gluvs", "Air One Com", "Aronorf Xideliesi", "Arcanophage Farra", "Oo Dads Mad", "Newtype Khan", "Seren Nightroad", "Rozaalyna", "Fungus", "Be\u00eb", "Kyllarian", "Dark Sidiuz", "Kosa\u00edr"];
const professions = ["Berserker", "Scourge", "Scrapper", "Chronomancer", "Tempest", "Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[444, 7692, 1183, 5479, 0, 0, 0, 0, 0, 0], [1188, 3129, 1123, 2914, 0, 0, 286, 0, 5700, 471], [2260, 1306, 3346, 3177, 97, 251, 237, 782, 1419, 2300], [0, 518, 3302, 203, 0, 0, 0, 0, 4300, 7129], [235, 4796, 8109, 1257, 0, 0, 0, 0, 1733, 0], [1319, 1803, 0, 10006, 0, 0, 0, 0, 269, 2933], [1527, 1580, 3457, 7518, 0, 0, 0, 0, 0, 2521], [489, 3235, 3091, 6389, 0, 0, 0, 501, 1039, 2495], [0, 1428, 6691, 3652, 0, 0, 3620, 0, 3832, 1288], [322, 1577, 6014, 6437, 0, 0, 5846, 631, 0], [5455, 7056, 1458, 4974, 0, 0, 0, 408, 580, 4501], [1475, 450, 4796, 9540, 0, 1188, 0, 456, 2496, 4228], [559, 5965, 6757, 12487, 0, 0], [2349, 1225, 3376, 6969, 0, 0, 0, 0, 3464, 9400], [4838, 3791, 3854, 8899, 0, 0, 0, 0, 2359, 4956], [3984, 3489, 11505, 11934, 0, 0, 0, 554, 3437, 3503], [9473, 4475, 8804, 10398, 4380, 1126], [16318, 12864, 34686, 39338, 2824, 1362, 201, 2848, 5217, 24847]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

