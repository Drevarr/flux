created: 20230222222328000
creator: Drevarr
modified: 20230705163519929
modifier: drevarr
tags: ChartData
title: 202302222223_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Aaroni", "Spreadflamesoflight", "Blanco Padre Guard", "Xyntharos", "Kiloak", "Ryvalia Fazebringer", "Zaylen Harker", "Sofya De Meme", "My Birthday Girl", "Bella Sassy", "Sygaldry Verdandi", "Kosair", "Forever Broke", "Koralia Danai", "Smol Daddy Tika", "Mistwalker Caelon", "Ravioli Fetabringer", "Jeckyll Mbs", "Lord Erin The Wise", "Smol Gluvs", "Panther B Me", "Sp\u00edcy Cheese", "Legacy Of Mathus", "One Whole Keg", "Dark Sidiuz", "Xanvias Tseli", "Rina Of Theros", "\u00c1rk\u00e1ntor", "Elonith Tenebris"];
const professions = ["Tempest", "Dragonhunter", "Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Catalyst", "Scrapper", "Firebrand", "Firebrand", "Dragonhunter", "Scourge", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Berserker", "Weaver", "Scourge", "Scourge", "Berserker", "Berserker", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 11.2385, 14.2037, 8.1343, 0.0, 21.0085, 0.7659, 4.3902, 6.1252, 0.0, 9.9275, 2.5114], [0.0, 14.5069], [0.0, 0.0, 14.2276, 6.1494, 0.0, 2.4516, 0.9399, 2.5199, 0.0, 12.6125, 0.0, 1.8817, 9.4757], [5.458, 5.6549, 11.2245, 2.5198, 0.0232, 17.4242, 27.2916, 0.1853, 8.7803, 10.8262, 17.2579, 4.5706, 23.0666], [11.6871, 30.8221, 5.361, 1.354, 3.946, 2.4582, 0.0, 14.6049, 10.0504, 17.2561, 47.2517], [1.0549, 1.1579, 15.0914, 0.0, 33.28, 0.0, 0.5927, 0.0, 10.6707, 14.4913, 6.4882, 2.848, 1.8677], [7.3384, 9.5325, 17.0291, 0.0, 0.0, 1.2532, 0.0, 0.0, 5.8451, 5.7641, 8.1239, 17.2103], [15.2835, 16.9301, 44.8322, 15.3351, 11.8586, 16.2175, 52.4106, 66.9619, 64.2198, 37.8394], [0.0, 0.9963, 12.7476, 21.523, 6.0224, 1.8469, 4.9028, 11.3398, 31.8256, 17.2711, 32.5292, 12.9376, 25.8629], [0.0, 0.0, 18.3202, 6.3594, 0.0928, 0.4535, 0.2794, 4.064, 6.0816, 9.7243, 2.5542, 1.2514, 40.1925], [0.0, 0.0, 16.5717, 45.6857, 0.9515, 0.0, 3.6919, 8.1528, 5.609, 4.6428, 29.9457, 9.8375, 14.9205], [21.5535], [23.4082], [0.0, 0.0, 25.3756, 0.0, 0.0, 0.0, 0.0, 0.4076, 0.0, 26.385, 4.9909, 0.2521, 6.6161], [2.4767, 19.1189, 23.116, 45.5207, 7.0668, 0.0, 0.0, 13.5633, 4.1787, 35.2346, 3.5132, 12.9436, 82.8541], [0.0, 8.8593, 31.1532, 57.3995, 3.3651, 27.6644, 4.8182, 6.9669, 22.7841, 29.6563, 16.5093, 10.8819, 24.776], [0.0, 149.7738, 37.4218, 2.5798, 14.238, 8.5116, 55.7179, 2.5323, 0.0249, 17.1179, 4.2276, 15.1554, 107.6829], [27.9319, 0.0, 37.2577, 13.4373, 0.0, 0.398, 18.8255, 44.1504, 36.8623, 40.9062, 20.6023, 35.0537], [0.0, 46.6125, 31.3527, 44.0658, 47.1582, 22.9255, 7.2399, 22.5807, 92.6909, 42.9241, 47.184, 17.6283, 82.8858], [3.1647, 0.0, 24.8062, 20.9218, 10.6149, 4.1915, 80.379, 74.782, 129.507, 70.7834, 24.1076, 129.325], [15.4107, 38.6956, 43.1983, 67.1786, 30.2513, 46.4425, 7.8665, 43.358, 118.3355, 54.0251, 29.5445, 22.1689, 175.5215], [0.5504, 28.1667, 49.1762, 7.5293, 25.2153, 6.9933, 0.0, 72.8562, 68.3896, 92.7055, 28.742, 26.0823], [0.0, 43.5157, 45.4975, 14.1137, 51.208, 21.7753, 32.5755, 12.0809, 25.6694, 97.2532, 54.0343, 18.1654, 97.2153], [0.0, 29.3785, 41.9098, 31.872, 3.9305, 0.0, 46.1867, 127.8869, 132.6067, 123.203, 21.7637, 53.7518], [23.0014, 66.9065, 0.0, 143.0472, 47.67, 65.9882, 45.4691, 292.3002], [3.738, 85.2811, 73.6833, 0.8249, 1.2648, 51.142, 3.0315, 0.0, 67.7677, 59.5056, 77.5505, 15.0984, 100.3598], [68.5456, 86.6545, 68.8857, 73.1331, 36.912, 42.4201, 21.8722, 111.0384, 237.9892, 79.4192, 48.0746, 55.4267, 122.519], [0.5962, 33.1215, 77.0368, 49.4953, 9.6544, 33.2512, 28.5109, 41.6656, 212.6556, 157.0811, 89.9741, 33.1918, 218.257], [13.1404, 113.5556, 100.9646, 93.7411, 16.6632, 29.1498, 97.8704, 99.2539, 154.5885, 84.8362, 74.37, 59.9343, 68.6933]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

