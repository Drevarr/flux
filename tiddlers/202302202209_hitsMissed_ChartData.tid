created: 20230220220953000
creator: Drevarr
modified: 20230705163519726
modifier: drevarr
tags: ChartData
title: 202302202209_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Legends Champion", "Rozaalyna", "Nemesis Savir", "Mustache Bloodclaw", "Mistwalker Caelon", "Etchery Howls", "Skye Nightroad", "Koralia Danai", "Belvyn Brightblade", "Lord Erin The Wise", "Aveliad Frostmoon", "Sumatra Satyricon", "Sofya De Meme", "Tootsie Pop Bringer", "Morrigan Moonlight", "Raelyn Sunray", "Veron Blackburn", "Donnica Hackdead", "Rina Of Theros", "Venomina The Siren", "Eibh\u00ebar", "Zaylen Harker", "Husky Guard", "Be\u00eb", "Primal Clone", "Fribble Bibble", "Smol Gluvs", "Xyntharos", "Jupi Jupi Jupi", "Kahless The Drunk", "Arka\u00f1", "Ace Hammers", "Mac Aaroni", "My Birthday Girl", "Dark Sidiuz", "Legacy Of Mathus", "Sygaldry Verdandi", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Newtype Khan", "Zadie Miststep", "Xanvias Tseli", "Bella Sassy", "Demon Sekhmet", "Jeckyll Mbs", "Blanco Padre Guard", "Ryvalia Fazebringer", "Black Raspberry Pie", "Drevarr Moonwillow", "Ravioli Fetabringer"];
const professions = ["Spellbreaker", "Scourge", "Necromancer", "Herald", "Vindicator", "Druid", "Scrapper", "Firebrand", "Firebrand", "Weaver", "Scrapper", "Soulbeast", "Tempest", "Scrapper", "Reaper", "Firebrand", "Herald", "Tempest", "Scourge", "Tempest", "Chronomancer", "Firebrand", "Dragonhunter", "Scourge", "Chronomancer", "Scrapper", "Scourge", "Vindicator", "Dragonhunter", "Firebrand", "Chronomancer", "Vindicator", "Tempest", "Scrapper", "Scourge", "Berserker", "Firebrand", "Berserker", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1], [2, 6, 0, 0, 0, 0, 0, 0, 1], [5, 0, 0, 0, 1, 3, 0, 0, 0, 0], [0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0, 3], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 0, 2], [0, 1, 3, 0, 0, 0, 0, 0, 1, 2, 3, 0], [0, 0, 9, 1, 0, 0, 0, 0], [0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 3, 0, 0, 0], [0, 2, 8, 0, 0, 0, 0, 0, 0, 1], [1, 0, 5, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0], [0, 4, 7, 0, 0, 0, 0], [0, 4, 1, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 7, 0, 0, 0, 0, 0, 0], [0, 6, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 1], [0, 0, 1, 6, 5, 0, 0, 1], [1, 0, 0, 0, 0, 6, 0, 2, 3, 0, 0, 1], [0, 0, 4, 0, 0, 1, 0, 1, 1, 0, 0, 2, 0, 0, 5, 0, 1, 0], [2, 0, 0, 1, 1, 0, 5, 0, 1, 3, 0, 2, 0], [0, 0, 8, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 1, 0, 0, 0], [0, 0, 6, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 6, 0, 1, 0, 0, 1, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 6, 0, 2, 0, 0, 3], [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 1, 3, 0, 3], [1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0], [2, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 1], [0, 0, 7, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 3, 0, 2, 1, 0, 2, 0, 0, 0, 0], [0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 6, 0, 0, 2, 0, 0, 0], [0, 0, 5, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 5, 0, 1, 1, 0, 0, 0], [0, 0, 2, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 5, 0, 1, 3, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 1, 7, 0, 1, 0, 0, 0, 1], [0, 1, 8, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 2, 0], [0, 0, 9, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1], [0, 1, 5, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 4, 0, 1, 3, 0, 0, 0], [0, 1, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0, 2, 0, 6, 0, 0, 0, 0, 0, 1], [0, 0, 9, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0, 0, 3, 0, 0], [0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 2, 0, 0, 6, 0, 0, 0, 1, 1, 2], [1, 6, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 4], [0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0, 0], [0, 1, 7, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 1, 1, 0, 0, 6, 0, 0, 2, 0, 0], [0, 0, 8, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 3, 0, 1, 0, 1, 3, 0, 0, 2, 0, 0, 1], [0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 8, 0, 0, 1, 1, 1, 3], [0, 2, 6, 0, 0, 0, 0, 0, 1, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0], [0, 0, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 2, 0, 0, 4, 0, 0, 6, 0, 0, 3, 0, 0, 2], [0, 0, 7, 0, 0, 1, 0, 0, 1, 1, 0, 2, 0, 0, 0, 2, 0, 0, 5, 1, 1, 1, 0, 2, 3, 0, 0], [0, 0, 11, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 2, 3, 0, 3, 0, 0, 3], [0, 3, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 3, 0, 1, 7, 0, 1, 4, 1, 0, 0], [0, 3, 4, 0, 1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 6, 0, 0, 3, 1, 1, 0], [7, 1, 3, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 6, 0, 3, 0, 0, 0, 5], [0, 1, 8, 1, 2, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 6, 0, 0, 2, 0, 1, 2], [0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 2, 1, 0, 1, 1, 7, 5, 0, 1, 2, 0, 0, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

