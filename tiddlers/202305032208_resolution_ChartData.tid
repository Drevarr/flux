created: 20230503220838000
creator: Drevarr
modified: 20230705163528168
modifier: drevarr
tags: ChartData
title: 202305032208_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Husky Guard", "Soxx", "Sub Train", "Gavann", "Sygaldry Verdandi", "Lucas Ryn", "Zaylen Harker", "Bella Sassy", "Koralia Danai", "Demon Dalham"];
const professions = ["Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1211.7955, 501.8154, 0.0, 23.3318, 0.0, 20.8887, 0.0, 0.0, 306.2443], [818.0453, 336.6643, 0.0, 0.0, 0.0, 63.5922, 0.0, 0.0, 352.7792, 0.0, 0.0, 378.3917, 223.3611], [39.9344, 1934.9184, 1283.4874], [1346.748, 322.8796, 0.0, 0.0, 50.0506, 0.0, 23.8741, 3.7055, 42.1031, 0.0, 0.0, 1289.1437, 767.4076], [1960.9762, 1496.168, 106.8999, 0.0, 56.6793, 392.9751, 0.0, 7.308, 1862.7276], [1547.7883, 697.7169, 87.1725, 0.0, 48.1513, 23.8728, 23.8422, 18.1157, 977.2339, 0.0, 1506.0058, 1459.4915], [2070.9374, 1148.3699, 11.9496, 45.8044, 96.3026, 491.3475, 41.7078, 66.184, 1069.4175, 18.0403, 23.9858, 1805.0074, 1353.9636], [3016.1602, 1328.366, 38.6625, 171.453, 625.7349, 58.1033, 106.6012, 1505.9596, 0.0, 2211.5808, 2127.3374], [2947.8509, 1463.827, 63.2894, 222.2856, 518.3073, 123.7562, 1884.0007, 63.9621, 1792.9786, 2334.2914], [3531.5342, 1363.3579, 23.6244, 118.1625, 555.7629, 59.7013, 2449.0679, 0.0, 0.0, 1964.4749, 1887.9421], [3290.508, 1671.6575, 59.5218, 126.9512, 452.76, 95.5604, 0.0, 2164.54, 0.0, 2275.5053, 2115.0321]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

