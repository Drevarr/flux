created: 20230531221142000
creator: Drevarr
modified: 20230705163532584
modifier: drevarr
tags: ChartData
title: 202305312211_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Jeckyll Mbs", "Kira Dragonblaze", "Sub Train", "Johnny London", "Zayde Sunsabre", "Zefirokai", "Drevarr Moonwillow", "Mistwalker Cael", "Smol Gluvs", "Oo Dads Mad", "Miphest\u00f6", "No Reserv\u00e9", "Belvyn Brightblade", "Crusader Siolith", "My Birthday Girl", "Tegan Parker", "Kary\u00edna", "Rosie Sunray", "Tika Fiery", "Koralia Danai", "Solus Sanctus", "Soxx", "Sygaldry Verdandi", "Bella Sassy", "Mildly Ecstatic", "Cyclotechnist Farra", "Ryvalia Fazebringer", "Cat Wigglebooty", "Sumatra Satyricon", "Eibh\u00ebar", "Primal Clone", "Newtype Khan", "Grasszanine"];
const professions = ["Tempest", "Berserker", "Dragonhunter", "Firebrand", "Druid", "Berserker", "Tempest", "Scrapper", "Vindicator", "Scourge", "Spellbreaker", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Scourge", "Scrapper", "Chronomancer", "Scrapper", "Soulbeast", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1175.0, 0.0, 0.0, 0.0, 269.56, 0.0, 0.0], [331.5, 0.0, 0.0, 778.12, 0.0, 0.0, 0.0, 0.0, 705.0, 482.22, 0.0, 0.0, 0.0, 0.0, 0.0], [2652.0, 0.0, 0.0, 4668.72], [1989.0, 0.0, 0.0, 6224.96, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [482.22, 0.0, 1146.8, 0.0, 0.0, 0.0], [331.5, 0.0, 0.0, 2334.36, 0.0, 0.0, 0.0, 0.0, 1057.5, 241.11, 0.0, 114.68, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1834.88, 404.34, 0.0, 0.0], [0.0, 0.0, 0.0, 3112.48, 446.88, 0.0, 0.0, 0.0, 1762.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 223.44, 0.0, 0.0, 0.0, 1292.5, 642.96, 0.0, 0.0, 134.78, 0.0, 0.0], [0.0, 271.68, 0.0, 10893.68, 446.88, 0.0, 0.0, 0.0, 0.0, 321.48, 0.0, 229.36, 0.0, 0.0, 0.0], [4641.0, 0.0, 0.0, 9337.44], [331.5, 0.0, 0.0, 7003.08, 0.0, 0.0, 0.0, 0.0, 0.0, 803.7, 0.0, 688.08, 0.0, 0.0], [0.0, 0.0, 0.0, 6224.96, 0.0, 0.0, 360.64, 0.0, 587.5, 0.0, 0.0, 0.0, 673.9, 0.0, 0.0], [5304.0, 0.0, 0.0, 10893.68], [0.0, 0.0, 0.0, 7781.2, 0.0, 0.0, 225.4, 0.0, 1057.5, 80.37, 0.0, 573.4, 0.0, 0.0, 0.0], [663.0, 0.0, 0.0, 9337.44, 446.88, 0.0, 0.0, 0.0, 0.0, 241.11, 0.0, 1261.48], [2983.5, 135.84, 0.0, 7781.2, 1340.64, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 114.68, 808.68, 0.0, 0.0], [1989.0, 0.0, 0.0, 10115.56, 446.88, 0.0, 0.0, 0.0, 470.0, 160.74, 0.0, 458.72, 269.56, 0.0, 0.0], [663.0, 0.0, 0.0, 11671.8, 893.76, 0.0, 270.48, 0.0, 352.5, 0.0, 0.0, 344.04, 0.0, 0.0, 0.0], [1326.0, 0.0, 0.0, 20231.12, 223.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 344.04, 0.0, 0.0, 0.0], [2652.0, 0.0, 0.0, 10115.56, 1787.52, 0.0, 270.48, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3646.5, 271.68, 0.0, 10115.56, 446.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 114.68, 1078.24, 0.0, 0.0], [663.0, 0.0, 0.0, 10115.56, 446.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2293.6, 134.78, 0.0, 0.0], [3315.0, 135.84, 0.0, 5446.84, 446.88, 0.0, 0.0, 0.0, 1175.0, 0.0, 0.0, 344.04, 1213.02, 0.0], [1657.5, 135.84, 0.0, 17896.76, 670.32, 0.0, 0.0, 0.0, 705.0, 562.59, 0.0, 0.0, 269.56, 0.0, 0.0], [0.0, 1340.64, 0.0, 270.48, 88.8, 1645.0, 0.0, 0.0, 2752.32, 1752.14, 0.0, 0.0], [3646.5, 0.0, 0.0, 8559.32, 670.32, 0.0, 0.0, 0.0, 3055.0, 80.37, 0.0, 1261.48, 539.12, 0.0, 0.0], [1657.5, 0.0, 0.0, 27234.2, 1117.2, 0.0, 0.0, 177.6, 587.5, 160.74, 0.0, 917.44, 943.46, 0.0, 107.16], [1989.0, 0.0, 0.0, 11671.8, 893.76, 0.0, 0.0, 0.0, 0.0, 803.7, 855.4, 2064.24, 673.9, 0.0, 0.0], [3978.0, 271.68, 0.0, 28012.32, 1117.2, 0.0, 0.0, 0.0, 352.5, 0.0, 0.0, 0.0, 2291.26, 0.0, 0.0], [6298.5, 815.04, 0.0, 15562.4, 1340.64, 0.0, 180.32, 0.0, 705.0, 482.22, 0.0, 114.68, 808.68, 0.0, 267.9], [4972.5, 0.0, 0.0, 28790.44, 3351.6, 0.0, 540.96, 88.8, 235.0, 0.0, 0.0, 229.36, 2021.7, 0.0, 0.0], [8619.0, 0.0, 0.0, 31124.8, 1117.2, 0.0, 0.0, 266.4, 1527.5, 0.0, 0.0, 1605.52, 1078.24, 0.0, 0.0], [2983.5, 543.36, 0.0, 34237.28, 1564.08, 0.0, 0.0, 0.0, 3407.5, 0.0, 0.0, 458.72, 2560.82, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

