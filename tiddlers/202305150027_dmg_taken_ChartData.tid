created: 20230515002743000
creator: Drevarr
modified: 20230705163529949
modifier: drevarr
tags: ChartData
title: 202305150027_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Evan Nightroad", "Xanvias Einzbern", "Tika Mi", "Toni Toni Ch\u00f6pper", "Aira Draugr", "Tegan Parker", "Roxy Willowmoon", "Artakama Nahid", "Morv\u00e4rth", "Koralia Danai", "W V N D E R F O X", "Drogo Discourteous", "Oo Dads Mad", "Gabe Malhorn", "Slautorn", "Belvyn Brightblade", "Sub Train", "Zanos Engine", "Vitis Mortis", "Smol Gluvs", "Artherwise", "Morv\u00e4rth", "Binkety Bonk", "Ark Darkness", "Artherwise", "Outer Ocean", "Bee Rii", "Mybeau", "Grilo Gringo", "Yuuka Chou", "Necrotic Windrunner", "Smol Gluvs", "Sureting", "Black Raspberry Pie", "X Devastation X", "Theodelyinda", "Cuscuszera", "Redoxone", "Ever Moore", "Mybeau", "Red Omega Red", "Thiga Altaforja", "Sumatra Satyricon", "Tinny Runt", "Feoras Bedwyen", "Necrotic Windrunner", "Skaven Seer", "Oz Is Me", "Needragee", "Nazhul Naxxremis"];
const professions = ["Vindicator", "Berserker", "Tempest", "Mechanist", "Herald", "Tempest", "Scrapper", "Tempest", "Reaper", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Mechanist", "Scourge", "Scourge", "Soulbeast", "Scourge", "Scrapper", "Firebrand", "Druid", "Berserker", "Spellbreaker", "Reaper", "Dragonhunter", "Tempest", "Reaper", "Reaper", "Reaper", "Chronomancer", "Reaper", "Vindicator", "Firebrand", "Soulbeast", "Firebrand", "Scourge", "Renegade", "Berserker", "Soulbeast", "Scrapper", "Chronomancer", "Scourge", "Catalyst", "Firebrand", "Tempest", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[386.463, 846.3817, 264.0046, 363.6831, 646.2031, 154.0468, 950.5857, 8839.6667, 3738.5, 168.4048, 382.1412, 937.5637, 418.4211, 186.2885, 20.7234], [684.3241, 716.8387, 189.331, 285.5226, 821.5185, 256.2258, 402.3867, 4526.9444, 501.6379, 34.3214, 582.5, 381.375, 777.3117, 205.5941, 138.4082], [428.1682, 639.1855, 151.4368, 205.5967, 861.4167, 88.5342, 1735.3137, 3414.5882, 57.2976, 789.5862, 537.8611, 392.1948, 433.1442, 156.18], [1052.545, 867.8732, 647.8678, 875.0169, 465.95, 2287.5238, 6549.5, 454.9902, 59.8043], [505.8785, 1088.4013, 485.2368, 455.3457, 634.4659, 192.2838, 1928.6471], [1674.7319, 141.4218, 337.9136, 876.9946, 104.7534, 1909.8235, 1276.2391, 77.7143, 926.4357, 405.6517, 42.36, 503.28, 65.75], [976.9714, 886.1272, 395.5378, 431.9506, 984.2727, 221.6351, 3895.0952], [321.4286, 669.7564, 140.5931, 187.5144, 630.9677, 129.5525, 2338.0833, 6620.9, 443.4815, 57.4405, 334.2276, 392.5123, 582.9605, 135.3163, 19.6458], [403.037, 1221.9692, 919.1273, 326.7143, 381.2553, 676.9585, 719.8158, 112.5481, 55.3636], [393.8721, 654.0486, 117.4382, 214.5164, 635.9894, 39.4842, 566.2639, 2932.1154, 850.1786, 41.4096, 517.3082, 310.5879, 166.7067, 90.8977, 52.7755], [1358.0628, 360.9585, 618.1987, 732.5346, 434.759, 1919.9231], [927.8813, 318.7939, 263.3475, 642.3625, 234.8203, 3688.303], [587.1649, 1212.1945, 367.0691, 536.029], [2722.8438, 121.8552, 256.524, 575.2051, 305.0503, 935.6491, 5076.5625, 199.8103, 31.3095, 310.5103, 449.9626, 438.4156, 70.15, 53.7143], [387.5195, 798.5019, 385.3552, 367.7595, 800.0914, 248.2896, 57.6333, 786.8, 389.6353], [305.7925, 748.7479, 299.9722, 277.1818, 734.9357, 227.7784, 904.3553], [256.9677, 312.9008, 1030.1675, 145.118, 867.0909, 60.2667, 54.1548, 358.8696, 675.5423, 422.2078, 109.0374, 523.3889], [653.8465, 507.2378, 295.0044, 1746.3704, 0.0, 718.8364, 131.3735, 261.3655, 1476.5, 314.7284, 253.7, 69.0426], [1781.6413, 430.5866, 907.3103, 2211.55], [350.6537, 425.2479, 1160.1026, 248.276, 914.875, 8612.7778], [1001.5407, 630.6039, 337.7395, 2719.5676, 5237.3636, 981.162, 582.3553, 157.29, 12.8], [219.806, 247.8971, 1149.4246, 266.2291, 2158.7209, 11632.8571], [967.5926, 222.6506, 1719.5046, 1279.2102, 1556.0638, 319.7723, 68.3061], [1423.1689, 110.5104, 217.5761, 704.2125, 156.1409, 562.2075, 4008.9474, 249.0312], [580.8874, 616.0492, 1041.1701], [1179.1897, 305.6824, 1371.1571, 1208.6143, 1547.9872, 415.2885], [573.2296, 446.9511, 839.2638], [483.9881, 848.4138, 1523.5577, 1461.9091, 134.96, 107.0], [402.7857, 1257.7483, 541.0202, 870.0658, 205.75, 9.5], [930.8043, 70.3571, 839.0278, 786.893, 772.3947, 104.0, 23.2245], [574.3636, 44.6786, 587.5903, 459.2995, 595.7763, 1831.25, 239.6809], [657.6316, 158.2024, 965.1391, 537.4851, 614.5065, 560.2925, 143.98], [204.0238, 412.0, 1140.8743, 997.1026, 110.8911, 160.2391], [2416.7812, 268.3818, 680.341, 663.3766, 257.18, 166.0417], [895.1942, 1387.9718, 768.5412, 332.0192, 108.6809], [2708.1818, 59.8902, 3853.35, 491.7421, 697.6579, 291.75, 32.8649], [947.2586, 24.4048, 723.3056, 309.4657, 540.7333, 199.495, 63.24], [403.8387, 395.036, 410.2037, 525.5765, 961.3714, 0.0], [61.8649, 216.3056, 0.0, 262.7987, 953.1875, 689.2208, 136.4615, 32.0217], [575.4192, 354.4048, 2357.0625, 577.1765], [425.7222, 934.3333, 497.17, 11.5294], [610.275, 1672.2281], [0.0, 579.2767, 422.1558, 705.5125, 178.2174], [1059.3421, 315.5556, 47.8214], [68.3349, 1262.7857, 0.4545], [1555.1818], [555.0238], [388.6311, 7.8529], [267.449, 0.0], [592.3548]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

