created: 20230529221000000
creator: Drevarr
modified: 20230705163532310
modifier: drevarr
tags: ChartData
title: 202305292210_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Primal Clone", "Riann Swordbreak", "Miphest\u00f6", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Crusader Siolith", "Blanco Padre Guard", "Jeckyll Mbs", "Xanvias Einzbern", "Tika Fiery", "Lucas Ryn", "Gabe Malhorn", "Koralia Danai", "Bella Sassy", "Solus Sanctus", "Riann Swordbreak"];
const professions = ["Chronomancer", "Chronomancer", "Berserker", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 164.6198, 6.7671, 1.0764, 26.9536, 14.2819, 20.0822, 27.2064, 32.4162, 54.6718, 7.0382, 15.316, 91.9665, 5.292, 134.32], [7.875, 131.3189, 7.2643, 0.0, 33.8823, 0.0, 21.5776, 33.1968, 39.2283, 89.4208, 5.1841, 29.6578, 89.2161, 6.762, 115.92], [24.9555, 40.6441, 222.4386, 0.0, 333.27], [14.2065, 169.6464, 0.0, 0.0, 35.1767, 10.1059, 17.6787, 36.7536, 27.4833, 77.22, 0.0, 12.5017, 114.3135, 12.4362, 132.71], [0.0, 173.1022, 7.1778, 0.0, 49.5671, 0.0, 32.313, 23.2752, 29.0493, 107.0269, 0.0, 22.9469, 99.0144, 7.7616, 131.1], [7.497, 162.1066, 16.4096, 11.6086, 30.9128, 0.0, 19.281, 27.6432, 44.7093, 97.1428, 6.849, 21.4315, 100.5615, 16.2288, 140.3], [55.1232, 96.8339, 0.0, 26.8976, 294.1209, 14.6706, 258.52], [7.434, 269.5493, 0.0, 0.0, 42.7145, 0.0, 39.0961, 7.7376, 31.4766, 178.3782, 0.0, 15.5866, 49.3353, 9.2316, 277.15], [0.0, 370.7088, 35.8676, 9.936, 19.9487, 0.0, 19.8151, 80.5584, 0.0, 157.0655, 19.8092, 63.3204, 170.0091, 15.876, 124.66], [0.0, 472.1825, 0.0, 0.0, 57.5618, 0.0, 55.4396, 135.9696, 8.8479, 267.3356, 0.0, 33.825, 302.0283, 20.58, 322.23], [22.302, 339.607, 19.1769, 7.4851, 114.5146, 19.9334, 47.7485, 93.3504, 75.3246, 280.7719, 9.46, 63.6451, 412.0443, 17.5518, 234.6], [0.0, 451.1338, 19.3067, 13.7614, 109.7177, 13.7251, 23.5004, 79.872, 82.5282, 298.687, 7.4166, 46.5432, 335.0331, 18.6984, 263.58], [607.5854, 17.9014, 15.169, 77.7389, 7.6282, 78.0854, 145.9536, 36.6444, 397.0652, 0.0, 30.4696, 524.1231, 37.5732, 0.0], [7.3395, 462.1294, 7.0049, 160.8077, 0.0, 67.7239, 195.8112, 94.8213, 348.5711, 10.3682, 15.7489, 391.932, 61.3872, 372.37], [7.6545, 624.2359, 41.8131, 17.2224, 96.6978, 0.0, 48.2826, 163.7376, 99.441, 484.7872, 27.5854, 50.1692, 392.4477, 39.9252, 405.26], [7.308, 664.4484, 26.9169, 21.7267, 110.403, 16.2029, 99.2358, 130.416, 118.7028, 407.1038, 35.2101, 78.0952, 326.7819, 32.193, 485.3], [89.901, 944.6791, 49.553, 0.0, 319.4834, 17.6506, 199.9136, 260.6448, 232.7076, 876.9103]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

