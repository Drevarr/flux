created: 20230213220222000
creator: Drevarr
modified: 20230705163519171
modifier: drevarr
tags: ChartData
title: 202302132202_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Klee Flamepumpkin", "Primal Clone", "Raziel Umbra", "Tegan Parker", "High Sorcer Baradun", "Arka\u00f1", "Black Raspberry Pie", "Mike The Archmagus", "Mac Chiato"];
const professions = ["Scrapper", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.712, 77.4926, 14.505, 15.6462, 118.2315, 26.6805, 0.0, 44.688, 48.688, 14.9178, 46.2648], [34.704, 108.7013, 11.4513, 0.0, 18.4926, 97.9708, 25.872, 60.4072, 42.244, 24.5058, 44.0448], [64.512, 182.4912, 0.0, 0.0, 46.0502, 59.9886, 110.6298, 0.0, 19.2472, 169.692, 35.3064, 34.188], [781.872, 20.0784, 209.8344], [283.6487, 32.3232, 84.6328, 502.274, 64.5498, 130.8912], [135.648, 280.6133, 51.3902, 0.0, 40.865, 210.1717, 105.2397, 0.0, 107.2512, 235.206, 33.135, 141.0144], [166.32, 447.5002, 0.0, 46.0139, 98.0237, 166.2815, 0.0, 72.3632, 303.942, 39.48, 84.6264], [252.9257, 120.736, 1143.094, 85.023, 296.8584], [399.744, 772.5461, 68.0649, 0.0, 102.1444, 205.0933, 158.0618, 0.0, 37.0832, 412.058, 30.5124, 168.1872], [26.1835, 146.6972, 0.0, 70.6889, 261.6434, 462.7315, 25.9116, 155.3496, 1287.726, 120.6396, 234.2544], [353.088, 787.357, 40.4211, 39.9041, 113.8408, 220.1815, 38.0952, 96.432, 1102.282, 68.2158, 194.916], [450.864, 692.6731, 125.4821, 0.0, 42.7687, 128.3354, 511.9152, 186.6704, 1152.044, 63.9294, 235.1424]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

