created: 20230303232222000
creator: Drevarr
modified: 20230705163521038
modifier: drevarr
tags: ChartData
title: 202303032322_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Heks Appeal", "Arcanophage Farra", "Nelliel T", "Sofya De Nova", "Grasszanine", "Nimplet", "Rozaalyna", "Smol Gluvs", "Lucky Leipreach\u00e1n", "Seren Nightroad", "Cerys Fireblade", "Ace Hammers", "Panther B Me", "Lord Erin The Wise", "Legacy Of Mathus", "Fruji", "Sp\u00edcy Cheese", "Demon Sekhmet", "Kosa\u00edr", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Weaver", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scourge", "Berserker", "Vindicator", "Scourge", "Weaver", "Berserker", "Scrapper", "Berserker", "Berserker", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 20756.0, 899.0, 0.0, 874.0, 6131.0, 0.0, 9763.0, 13444.0, 4233.0, 13071.0, 5048.0, 28866.0, 6149.0, 357.0, 3286.0, 21095.0, 0.0, 29756.0, 2511.0, 0.0, 545.0, 50273.0, 1843.0, 5121.0, 13567.0], [0.0, 42342.0, 4598.0, 0.0, 2129.0, 7219.0, 531.0, 17084.0, 4552.0, 18097.0, 8067.0, 6216.0, 62605.0, 29853.0, 0.0, 6092.0, 327.0, 0.0, 35483.0, 5577.0, 5566.0, 121.0, 48056.0, 9292.0, 5544.0, 13322.0], [0.0, 42997.0, 0.0, 23151.0, 11583.0, 1277.0, 3287.0, 19923.0, 3621.0, 18994.0, 6548.0, 29986.0, 17306.0, 13896.0, 1506.0, 33513.0, 0.0, 48850.0, 6837.0, 0.0, 0.0, 54981.0, 0.0, 2099.0, 3943.0], [6961.0, 64033.0, 0.0, 0.0, 10749.0, 5865.0, 3815.0, 12025.0, 3004.0, 10281.0, 1013.0, 58706.0, 40834.0, 3218.0, 2032.0, 0.0, 1160.0, 47919.0, 1885.0, 222.0, 55889.0, 3257.0, 15695.0, 5954.0], [28.0, 66728.0, 6251.0, 31599.0, 21799.0, 2417.0, 115051.0, 45329.0, 79991.0], [0.0, 40188.0, 6177.0, 0.0, 2363.0, 5354.0, 3942.0, 21277.0, 7644.0, 13111.0, 10177.0, 5670.0, 49324.0, 25051.0, 8740.0, 4410.0, 27974.0, 51838.0, 5095.0, 10185.0, 4039.0, 63392.0, 1265.0, 6114.0, 20814.0], [2474.0, 357799.0, 22716.0, 65724.0, 61027.0], [4530.0, 56340.0, 0.0, 23297.0, 6786.0, 5613.0, 25924.0, 5236.0, 22376.0, 13666.0, 7614.0, 90348.0, 32494.0, 5779.0, 1109.0, 77480.0, 305.0, 80683.0, 4929.0, 1608.0, 53014.0], [1635.0, 61087.0, 5987.0, 0.0, 19975.0, 8338.0, 1457.0, 24355.0, 25736.0, 19902.0, 22352.0, 15877.0, 52682.0, 10971.0, 7597.0, 3550.0, 66712.0, 0.0, 57599.0, 5179.0, 14353.0, 1025.0, 76944.0, 0.0, 15913.0, 18789.0], [1573.0, 43381.0, 2583.0, 491.0, 0.0, 27358.0, 3012.0, 30071.0, 27904.0, 10314.0, 75675.0, 29118.0, 4243.0, 10870.0, 73620.0, 3254.0, 90208.0, 6959.0, 8332.0, 969.0, 88627.0, 7845.0, 10430.0, 6293.0], [151.0, 29309.0, 1711.0, 0.0, 20140.0, 13444.0, 3089.0, 21143.0, 4389.0, 8693.0, 12710.0, 7588.0, 72352.0, 64776.0, 1801.0, 0.0, 45272.0, 5199.0, 58496.0, 4945.0, 9093.0, 1989.0, 149603.0, 4849.0, 12832.0, 31021.0], [1765.0, 49235.0, 18216.0, 6219.0, 8672.0, 6020.0, 1886.0, 43487.0, 14414.0, 30208.0, 31338.0, 5703.0, 80502.0, 57214.0, 6311.0, 0.0, 28969.0, 8478.0, 120162.0, 11341.0, 6573.0, 0.0, 133678.0, 621.0, 17272.0, 0.0], [4533.0, 68051.0, 0.0, 0.0, 9065.0, 29124.0, 0.0, 35883.0, 39624.0, 24173.0, 27544.0, 39715.0, 85113.0, 37264.0, 8947.0, 1255.0, 47237.0, 110329.0, 7219.0, 3343.0, 3880.0, 152054.0, 4294.0, 20372.0, 13589.0], [1200.0, 81249.0, 0.0, 0.0, 32169.0, 30604.0, 9428.0, 4767.0, 20034.0, 13750.0, 33320.0, 121266.0, 47450.0, 2210.0, 5362.0, 71834.0, 11310.0, 136710.0, 31646.0, 7198.0, 4318.0, 120686.0, 7752.0, 29714.0, 24180.0], [97320.0, 2841.0, 0.0, 16311.0, 32933.0, 1371.0, 10743.0, 10264.0, 59866.0, 20164.0, 22082.0, 155460.0, 68968.0, 0.0, 21787.0, 105340.0, 5900.0, 68468.0, 16376.0, 5702.0, 0.0, 140355.0, 25346.0], [0.0, 82190.0, 14948.0, 0.0, 36905.0, 20631.0, 13167.0, 79665.0, 33765.0, 68943.0, 46397.0, 18336.0, 184505.0, 80040.0, 4646.0, 9578.0, 123670.0, 0.0, 191584.0, 44684.0, 19548.0, 4581.0, 71993.0, 5701.0, 23859.0, 27837.0], [4609.0, 140646.0, 0.0, 7143.0, 0.0, 5332.0, 108712.0, 15685.0, 88635.0, 30124.0, 114153.0, 22945.0, 118333.0, 6586.0, 7665.0, 136178.0, 27131.0, 98921.0, 13376.0, 16764.0, 0.0, 263423.0, 8261.0, 27033.0, 20096.0], [4593.0, 65824.0, 1877.0, 1693.0, 558.0, 68455.0, 49615.0, 46092.0, 20304.0, 215970.0, 83077.0, 0.0, 9765.0, 120867.0, 247681.0, 31406.0, 36163.0, 9127.0, 256208.0, 7033.0, 12798.0], [0.0, 122425.0, 33276.0, 0.0, 1292.0, 49865.0, 0.0, 75914.0, 44541.0, 40870.0, 0.0, 44274.0, 149025.0, 80775.0, 4178.0, 8097.0, 258685.0, 0.0, 165200.0, 7710.0, 1893.0, 2587.0, 311724.0, 0.0, 3213.0, 30779.0], [1331.0, 105612.0, 10705.0, 0.0, 14251.0, 96789.0, 52246.0, 40216.0, 289371.0, 108069.0, 0.0, 18061.0, 113430.0, 224693.0, 29341.0, 58674.0, 0.0, 390368.0, 5010.0, 44093.0, 54074.0], [5403.0, 132534.0, 7111.0, 0.0, 83649.0, 4044.0, 4281.0, 80383.0, 24436.0, 113387.0, 117156.0, 69017.0, 277025.0, 143439.0, 11302.0, 3044.0, 294617.0, 9617.0, 272201.0, 31975.0, 12241.0, 2776.0, 347519.0, 7817.0, 39237.0, 5900.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

