created: 20230215221053000
creator: Drevarr
modified: 20230705163519357
modifier: drevarr
tags: ChartData
title: 202302152210_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elon\u00edth", "Johosh The Great", "Call Me Ever", "Smol Daddy Tika", "Rina Of Theros", "Be\u00eb", "Sister Elon\u00edth", "\u00c9\u00efbhear", "Jeckyll Mbs", "Sygaldry Verdandi", "Grasszanine", "Blanco Padre Guard", "Sumatra Satyricon", "Erika Simon", "K\u00e2 \u00d4tik R\u00e6j", "Etchery Howls", "Mac Chiato", "Fribble Bibble", "Bambiae", "Lord Erin The Wise", "Skye Nightroad", "Smol Gluvs", "Ark Darkness", "Bella Sassy", "Ravioli Fetabringer", "Husky Guard", "Xanvias Tseli", "Sassy Daddy Demon", "Drevarr Moonwillow", "Dark Sidiuz", "Ace Hammers", "Tribal S", "Nekro Atsume", "Sp\u00edcy Cheese", "My Birthday Girl", "Zadie Miststep", "Raziel Umbra", "Legacy Of Mathus", "Daring Deathblade", "Newtype Khan", "Primal Clone", "Tegan Parker", "Domina Flagbringer", "Abigail Ryn", "Black Raspberry Pie"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Scourge", "Scourge", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Soulbeast", "Soulbeast", "Berserker", "Druid", "Tempest", "Scrapper", "Chronomancer", "Weaver", "Scrapper", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Berserker", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Druid", "Scourge", "Berserker", "Scrapper", "Tempest", "Chronomancer", "Berserker", "Scourge", "Spellbreaker", "Chronomancer", "Tempest", "Spellbreaker", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36, 20], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 22, 0, 20, 0, 22], [22, 12, 0, 0, 0, 0, 28, 17, 0, 0, 10], [3, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 41, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 0], [11, 4, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 19, 12, 16, 3, 0, 0, 0, 1, 21, 0, 0, 0, 1], [5, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 16, 0, 22, 0, 0, 0, 0, 3, 31, 0, 24], [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 27, 0, 18, 0, 0, 0, 22, 0, 0, 24, 0, 16], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 25, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 15, 0, 0, 42, 0, 21, 9], [0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 28, 0, 0, 38], [0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 31, 0, 52, 0, 0, 0, 0, 13, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 16, 0, 7, 38, 0, 0, 0, 19, 20, 0, 0, 0], [0, 10, 0, 0, 0, 10, 0, 0, 12, 0, 14, 60, 0, 0, 20, 0, 19], [0, 0, 0, 0, 0, 21, 0, 0, 1, 39, 0, 55, 0, 0, 0, 32], [0, 0, 0, 5, 0, 36, 21, 0, 4, 0, 14, 0, 0, 45, 0, 26, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0, 20, 0, 0, 65, 10, 16, 0, 0, 24], [0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 23, 0, 34, 0, 0, 17, 0, 69], [31, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 20, 0, 39, 0, 0, 0, 0, 1, 0, 47], [1, 3, 0, 0, 0, 0, 0, 3, 0, 4, 7, 0, 31, 0, 0, 20, 0, 0, 9, 17, 30, 0, 21, 0, 16], [33, 9, 0, 0, 0, 0, 0, 17, 0, 45, 0, 0, 13, 0, 0, 3, 0, 0, 0, 0, 51], [18, 8, 0, 0, 0, 0, 0, 0, 26, 0, 0, 17, 0, 0, 11, 0, 0, 10, 27, 37, 0, 0, 21], [0, 0, 0, 0, 0, 1, 0, 34, 0, 27, 0, 0, 17, 0, 17, 0, 0, 23, 7, 19, 0, 35, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 63, 0, 26, 0, 0, 0, 0, 49, 0, 0, 19], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 24, 22, 0, 0, 0, 56, 35, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 24, 22, 0, 0, 0, 56, 9, 0, 5, 0], [0, 0, 14, 0, 0, 35, 0, 0, 26, 27, 18, 0, 0, 0, 32, 37, 0, 10], [0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 6, 0, 39, 0, 0, 0, 39, 28, 0, 63, 0, 9], [0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 12, 0, 49, 21, 0, 52, 0, 0, 19, 0, 28, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 6, 19, 0, 32, 0, 0, 0, 23, 116, 0, 0, 5], [6, 29, 0, 0, 0, 0, 0, 17, 5, 20, 5, 5, 15, 0, 31, 0, 0, 0, 40, 19, 10, 27, 0, 4], [9, 0, 0, 0, 0, 0, 0, 19, 0, 33, 6, 0, 26, 0, 62, 0, 0, 0, 21, 42, 0, 0, 29], [0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 31, 66, 0, 29, 0, 0, 0, 65, 0, 0, 0, 0, 39], [0, 0, 0, 0, 0, 9, 0, 0, 11, 23, 0, 78, 0, 0, 0, 4, 38, 0, 44, 48], [0, 0, 0, 0, 0, 0, 0, 0, 38, 5, 0, 25, 0, 0, 63, 0, 0, 77, 24, 10, 0, 15, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 6, 42, 28, 0, 0, 65, 1, 27, 0, 42, 11], [0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 22, 0, 25, 57, 0, 0, 0, 17, 22, 0, 42, 0, 64], [0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 39, 0, 9, 34, 0, 0, 0, 25, 12, 65, 57, 0, 26], [17, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 19, 45, 64, 0, 0, 20, 43, 22, 0, 34, 0, 27], [0, 0, 20, 0, 0, 87, 0, 0, 0, 0, 0, 10, 37, 123, 0, 42, 0, 17], [0, 0, 0, 1, 0, 0, 0, 13, 27, 43, 0, 80, 19, 1, 5, 0, 0, 0, 24, 84, 0, 30, 0, 19], [0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 55, 0, 0, 50, 0, 0, 61, 17, 50, 0, 30, 0, 61], [0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 17, 0, 1, 6, 0, 0, 0, 0, 75, 0, 125, 97], [1, 26, 0, 0, 0, 2, 0, 3, 0, 81, 0, 0, 100, 63, 0, 0, 0, 0, 61, 73, 0, 54, 26], [0, 0, 0, 0, 35, 0, 0, 40, 15, 0, 163, 0, 0, 34, 36, 77, 44, 0, 79], [0, 0, 0, 0, 0, 0, 0, 0, 97, 6, 0, 130, 13, 55, 0, 0, 1, 51, 70, 38, 35, 0, 47]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

