created: 20230510220110000
creator: Drevarr
modified: 20230705163529581
modifier: drevarr
tags: ChartData
title: 202305102201_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Ark Darkness", "Raelyn Sunray", "Sub Train", "Lucas Ryn", "Sygaldry Verdandi", "Solus Sanctus", "Tika Fiery", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 157.4575, 207.9055, 0.0, 23.664, 343.587], [165.7005, 91.5772, 0.0, 363.7848, 0.0, 0.0, 0.0, 83.2432, 127.6474, 50.9473, 194.0478, 87.0552], [309.6996, 64.3853, 77.7816, 0.0, 111.9258, 83.469, 204.9739, 403.0544, 50.4869, 0.0, 106.7502], [0.0, 237.6325, 153.4089, 0.0, 371.1907, 144.337, 130.4971, 0.0, 0.0, 117.3746, 178.946, 156.8588, 200.7149, 99.5554], [31.3457, 411.2235, 215.9293, 0.0, 453.5528, 23.7139, 152.1936, 0.0, 227.7148, 66.4562, 97.805, 482.6265, 195.4762, 39.443, 195.7644], [193.42, 631.974, 417.399, 18.0336, 531.8754, 139.0378, 68.5152, 72.4475, 23.204, 60.5023, 253.8827, 92.3453, 14.2355, 174.6821], [24.3173, 0.0, 808.134, 568.7423, 76.8264, 930.8942, 120.6893, 90.3427, 17.6723, 161.9352, 107.9078, 240.3656, 329.7151, 39.9581, 160.1183, 193.5892], [37.4119, 202.6537, 917.6835, 520.8192, 103.8768, 807.912, 52.1971, 88.9387, 40.5916, 97.5845, 194.1551, 134.0375, 715.7332, 182.6875, 25.4898, 508.9874], [40.5382, 50.078, 772.168, 585.956, 137.8224, 1327.4443, 297.9475, 225.5573, 0.0, 197.762, 118.2149, 203.3304, 903.3405, 169.3853, 89.5936, 494.5979], [210.1601, 63.8843, 1129.8095, 627.5445, 160.752, 1433.8194, 327.1594, 93.4877, 204.5887, 119.4498, 232.6069, 933.2579, 181.2494, 77.422, 765.6563]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

