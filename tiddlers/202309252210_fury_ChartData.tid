created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Pressing Fake Percs", "Jimbo The Pleb", "Glorious Gluvs", "Newtype Khan", "Mort\u00e4rion", "Lord Erin The Wise", "Tootsie Pop Rocks", "Mike The Archmagus", "Tribal S", "Zaedy Zae", "Sassy Daddy Demon", "Klengah", "Mistwalker Cael", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Berserker", "Spellbreaker", "Scrapper", "Weaver", "Scrapper", "Weaver", "Druid", "Druid", "Herald", "Druid", "Herald", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 107.8132, 106.5663, 104.5888, 64.3982, 82.6896, 0.0, 17.9193], [3.3222, 39.1109, 145.2188, 51.7923, 40.848, 34.2259, 0.0, 0.0, 23.985, 0.0, 223.5954, 0.0, 0.0, 48.2767, 0.0], [15.3824, 30.028, 115.5722, 149.9011, 119.8944, 0.0, 0.0, 0.0, 0.0, 64.2349, 75.6021, 68.3483, 0.0, 0.0, 0.0], [21.3442, 58.6467, 68.6536, 9.925, 0.0, 4.7926, 36.1502, 65.8141, 93.717, 12.6505, 209.2923, 78.3182, 40.7098, 0.0, 0.0], [15.8792, 116.187, 69.4129, 42.9773, 28.0637, 42.6144, 84.427, 189.3213, 17.0211, 43.056, 123.9254, 395.2326, 65.3453, 0.0], [76.4991, 43.7598, 108.5471, 129.6096, 131.4331, 199.7612, 24.9469, 67.275, 175.8782, 500.0247, 119.4593, 111.134, 12.011, 15.8661], [0.0, 234.9681, 83.0371, 56.1343, 29.6608, 143.8512, 320.6194, 336.2596, 31.2902, 63.9405, 279.047, 140.112], [3.9733, 101.0777, 92.3157, 45.4986, 106.6648, 105.3216, 97.0136, 237.158, 16.0304, 70.8435, 189.3884, 554.9019, 94.4744, 94.8683, 18.769], [109.224, 179.5027, 35.0658, 105.3529, 171.8928, 173.8887, 303.5374, 47.4307, 104.481, 227.3398, 843.8829, 159.5794, 98.0487, 20.4516, 58.7564], [3.4258, 173.8937, 85.3078, 55.9894, 115.7342, 240.4512, 70.5818, 284.0599, 20.9978, 156.8385, 108.8185, 1391.4873, 291.8916, 199.2779, 40.2876, 24.888], [240.5203, 156.3651, 53.2652, 266.3768, 701.3712, 383.3104, 790.4749, 16.3744, 199.953, 655.3675], [15.1632, 178.3082, 167.4054, 110.7905, 177.3374, 302.0544, 183.4255, 750.4291, 52.8384, 86.58, 336.7724, 1636.6833, 247.9277, 116.041, 21.8059, 48.179], [261.5915, 115.8057, 125.2226, 302.0268, 773.352, 222.2987, 827.8717, 46.8666, 429.975, 598.7475, 1700.3175, 281.6213, 648.0848, 101.875, 103.4719], [66.4864, 386.7895, 372.5905, 204.6857, 305.164, 742.3296, 357.992, 1353.4525, 115.4326, 336.726, 832.1055, 3136.1736, 564.7442, 515.9599, 78.017, 39.7793]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

