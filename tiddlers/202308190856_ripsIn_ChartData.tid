created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Nadumi", "Tabitha Polaris", "Nose Llama", "Ttv Rodrigoapss", "E Tabita", "Cura Ativos", "Oats Guardian", "Drac Tepes", "Lillith Bella", "Xanvias Tsolice", "Wren Raveness", "Darks Na", "Scythe Of Soulz", "Jamaass", "Nose Llama", "Aron The White", "Smol Gluvs", "Nadumi", "Empressy", "Grootsmaid", "Brutal Araden", "Unbreakable Nemesis", "Crabbedmermaid", "Kosa\u00efr", "Samara Evermoore", "Aloe Pen", "Govinda Ektar", "Vee U", "Ains Chon", "Liu Mira", "Red Reaper Robin", "Grae Leon", "Drevarr Moonwillow", "Xuerreux", "Gestern Yesteryear", "Alarics Bane"];
const professions = ["Daredevil", "Firebrand", "Weaver", "Berserker", "Soulbeast", "Dragonhunter", "Firebrand", "Scourge", "Dragonhunter", "Weaver", "Chronomancer", "Firebrand", "Reaper", "Reaper", "Tempest", "Holosmith", "Reaper", "Thief", "Spellbreaker", "Firebrand", "Renegade", "Firebrand", "Firebrand", "Tempest", "Deadeye", "Vindicator", "Vindicator", "Tempest", "Reaper", "Berserker", "Reaper", "Tempest", "Scrapper", "Berserker", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0424, 0.0123, 0.0, 0.0444], [0.0185, 0.0, 0.0086, 0.0421, 0.029, 0.0309], [0.0181, 0.0452, 0.0], [0.1296, 0.0227, 0.0345], [0.1852, 0.0, 0.0086, 0.0, 0.0145, 0.0], [0.0, 0.1159, 0.0206, 0.0316, 0.0536, 0.0, 0.0135], [0.0, 0.0242, 0.0494, 0.0, 0.2667], [0.1111, 0.0, 0.2889], [0.0, 0.0848, 0.0494, 0.0, 0.1111], [0.0, 0.0, 0.0, 0.1351, 0.0422, 0.0508, 0.1094, 0.0063, 0.0, 0.0121, 0.0, 0.0, 0.0], [0.0556, 0.0, 0.069, 0.0105, 0.0145, 0.0, 0.0443, 0.0, 0.0, 0.0405, 0.0, 0.0169, 0.0781, 0.019, 0.0, 0.0242, 0.0, 0.0, 0.0], [0.2222, 0.0, 0.0948, 0.0316, 0.0145, 0.0, 0.0759, 0.0, 0.0181, 0.0], [0.1014, 0.0412, 0.0633, 0.0179, 0.0602, 0.0565], [0.0949, 0.0, 0.1152, 0.0494, 0.0, 0.0889], [0.2778, 0.0, 0.1121, 0.0, 0.0725, 0.0103, 0.0179, 0.0, 0.1351], [0.0, 0.0316, 0.0357, 0.0, 0.0676, 0.0723, 0.0226, 0.0938, 0.0759, 0.0088], [0.0, 0.058, 0.0309, 0.0253, 0.0, 0.0, 0.1757, 0.0361, 0.0565, 0.0156, 0.0443, 0.0], [0.0185, 0.0, 0.0345, 0.0, 0.0145, 0.0206, 0.0506, 0.0179, 0.0, 0.027, 0.0542, 0.0565, 0.0312, 0.0633], [0.019, 0.0, 0.0, 0.1081, 0.0241, 0.0395, 0.0469, 0.1139, 0.0, 0.0, 0.0864, 0.0], [0.0759, 0.0, 0.0, 0.1486, 0.0301, 0.0339, 0.1094, 0.0949, 0.0, 0.0667, 0.0247, 0.0], [0.0227, 0.0086, 0.0105, 0.0725, 0.0, 0.0, 0.0, 0.0, 0.0135, 0.0723, 0.0791, 0.1406, 0.1772], [0.2037, 0.0, 0.0345, 0.0, 0.1594, 0.0103, 0.0443, 0.0, 0.0, 0.0676, 0.0482, 0.0734, 0.1094, 0.038, 0.0], [0.0316, 0.0725, 0.0309, 0.0886, 0.0179, 0.0, 0.0676, 0.0422, 0.0395, 0.2812, 0.0633, 0.0], [0.0, 0.0776, 0.0421, 0.029, 0.0206, 0.0823, 0.0179, 0.0, 0.0946, 0.0181, 0.0678, 0.1094, 0.0886], [0.1296, 0.0, 0.0345, 0.0842, 0.029, 0.0, 0.0443, 0.0, 0.0, 0.2162, 0.0482, 0.0282, 0.0469, 0.0633, 0.0, 0.0485], [0.0105, 0.0435, 0.0309, 0.038, 0.0, 0.0, 0.0811, 0.0482, 0.0395, 0.125, 0.0633, 0.0, 0.0606, 0.0741, 0.0, 0.2667], [0.2593, 0.0, 0.0725, 0.0, 0.0316, 0.0, 0.0, 0.0542, 0.0508, 0.0469, 0.0443, 0.097, 0.0741, 0.0, 0.2667], [0.1852, 0.0227, 0.0345, 0.0, 0.0435, 0.0103, 0.1329, 0.0357, 0.0, 0.0541, 0.0843, 0.0508, 0.1719, 0.0823, 0.0], [0.1481, 0.0, 0.0862, 0.0, 0.0145, 0.0103, 0.0, 0.1081, 0.0181, 0.0452, 0.1719, 0.0633, 0.0, 0.0606, 0.1111, 0.0, 0.3111], [0.037, 0.0, 0.069, 0.0211, 0.087, 0.0722, 0.0253, 0.0, 0.0, 0.0811, 0.0301, 0.0395, 0.1719, 0.1203, 0.0, 0.0667, 0.0617, 0.0, 0.1111], [0.2778, 0.0, 0.0948, 0.0316, 0.058, 0.0, 0.0823, 0.0, 0.0, 0.0676, 0.1024, 0.0734, 0.0781, 0.0759, 0.0], [0.0105, 0.0145, 0.0103, 0.0949, 0.0, 0.0, 0.0946, 0.0783, 0.0508, 0.1094, 0.0886, 0.0, 0.0727, 0.1235, 0.0, 0.2222], [0.2593, 0.0, 0.1466, 0.0, 0.029, 0.0206, 0.1013, 0.0357, 0.0, 0.1216, 0.0904, 0.0565, 0.0938, 0.057, 0.0088], [0.1667, 0.0, 0.069, 0.0421, 0.058, 0.0206, 0.0253, 0.0, 0.0, 0.1351, 0.0783, 0.0169, 0.25, 0.0696, 0.0088, 0.0606, 0.1111, 0.0, 0.0667], [0.1667, 0.0, 0.0431, 0.0105, 0.0145, 0.0412, 0.0633, 0.0714, 0.0, 0.0676, 0.006, 0.0847, 0.1406, 0.0823, 0.0, 0.097, 0.1111, 0.0, 0.2222], [0.3519, 0.0, 0.2414, 0.0, 0.1159, 0.0103, 0.1076, 0.0536, 0.0, 0.1081, 0.0663, 0.0339, 0.1875, 0.1709, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

