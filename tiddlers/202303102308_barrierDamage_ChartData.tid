created: 20230310230833000
creator: Drevarr
modified: 20230705163521556
modifier: drevarr
tags: ChartData
title: 202303102308_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Ace Hammers", "Koralia Danai", "Air One Com", "Nano", "K\u00f4sair", "Kiloak", "Raimaru Hanzo", "Venomina The Siren", "Zefirokai", "Cerys Fireblade", "Tootsie Poppa", "Oo Dads Mad", "Blanco Padre Guard", "Sumatra Satyricon", "Legacy Of Mathus", "Akira Moonbright", "Kmpek", "Sp\u00edcy Cheese", "K\u00f4sair", "Morton Saltbringer", "Primal Clone", "Mac Chiato", "Cat Wigglebooty", "Lord Erin The Wise", "Xanvias Tseli", "Black Raspberry Pie", "Sofya De Nova", "Raelyn Sunray", "Ark Darkness", "Zadie Miststep", "Zaylen Harker", "Viral Marketing", "Ryvalia Fazebringer", "Mistwalker Caelon", "Aronorf Xideliesi", "High Sorcer Baradun", "Dark L\u00e1la", "Bella Sassy", "Tegan Parker", "Rootflesh", "R\u00fana Bierdna", "Arcanophage Farra", "Drevarr Moonwillow", "Rozaalyna", "Riann Swordbreak", "Be\u00eb", "Dark Sidiuz", "Nimplet", "\u00c1rkantor", "Smol Gluvs"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Scourge", "Spellbreaker", "Firebrand", "Soulbeast", "Berserker", "Herald", "Vindicator", "Berserker", "Berserker", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Weaver", "Berserker", "Chronomancer", "Weaver", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Tempest", "Scourge", "Firebrand", "Tempest", "Reaper", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Vindicator", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 566, 4951, 0, 1192, 15420, 0, 681, 2548, 0, 1162, 0, 405, 0, 0, 0, 0, 0, 0, 0, 0, 1809, 7279, 0, 0, 0, 1761, 694, 798, 5624], [1137, 0, 5026, 0, 3915, 19110, 0, 1126, 0, 0, 1788, 1162, 2765, 125, 1723, 436, 0, 3469, 844, 0, 1059, 451, 3606, 0, 170, 0, 553, 1198, 0, 1179], [4314, 3947, 6618, 4601, 2194, 32345], [5381, 10207, 3355, 3435, 4842, 27538], [269, 2622, 5051, 271, 4815, 5033, 1154, 25, 2481, 0, 0, 995, 8166, 0, 3488, 4808, 6115, 1897, 3743, 355, 231, 713, 4034, 2010], [2816, 2335, 288, 2653, 1248, 20730, 0, 4945, 3137, 0, 1162, 0, 5089, 0, 0, 677, 0, 0, 0, 3723, 1199, 2647, 1569, 0, 706, 0, 652, 0, 430, 79, 3093], [1769, 446, 4858, 0, 0, 1202, 0, 1948, 0, 5066, 0, 5807, 0, 2403, 4517, 4515, 6135, 3924, 17146], [3240, 2892, 3040, 1742, 4244, 12832, 269, 1619, 793, 0, 2586, 591, 1543, 10, 0, 0, 0, 0, 0, 3461, 275, 550, 764, 1482, 275, 1942, 1155, 3748, 1199, 0, 10151], [0, 6334, 2677, 4284, 1248, 18230, 0, 0, 0, 3237, 73, 1837, 5140, 0, 1082, 1159, 0, 2612, 0, 3413, 0, 2580, 6320, 1243, 127, 2050, 0], [0, 5144, 4411, 727, 0, 21343, 0, 3373, 2544, 0, 0, 269, 2350, 0, 1259, 24, 278, 1970, 0, 1199, 275, 996, 6234, 3087, 1620, 1769, 1220, 2263, 0, 0, 1790], [2420, 6103, 4900, 2465, 11100, 37825], [3569, 7070, 1727, 1192, 10722, 23154, 0, 3202, 10416, 0, 2373, 3255], [6092, 6212, 2449, 6561, 0, 16782, 0, 0, 1792, 0, 0, 2433, 0, 0, 1202, 0, 0, 0, 0, 2414, 1199, 153, 4145, 0, 0, 2491, 1228, 0, 0, 205, 13729], [0, 522, 1219, 1726, 0, 19778, 0, 2209, 7197, 0, 336, 0, 6880, 0, 5333, 0, 0, 736, 0, 5314, 0, 2536, 9636, 2537, 0, 2102, 2388, 321], [2682, 4798, 1159, 3006, 1192, 23103, 0, 4527, 1248, 0, 0, 0, 489, 0, 0, 0, 0, 1631, 0, 4636, 0, 0, 1199, 3693, 2137, 4107, 4230, 0, 3714, 3424, 751], [0, 3343, 3317, 34, 0, 44717, 0, 1898, 0, 0, 0, 1453, 0, 1852, 0, 0, 0, 150, 1198, 3647, 2588, 104, 0, 1537, 1275, 5778, 0], [6778, 8231, 4666, 4721, 2791, 23514, 0, 0, 7684, 269, 0, 1169, 1170, 2122, 0, 0, 0, 1202, 1288, 0, 1363, 2537, 0, 1114, 0, 0, 1563, 190, 1066], [0, 5027, 4094, 2507, 0, 26510, 0, 1206, 4222, 1716, 1365, 1162, 0, 1198, 0, 2584, 0, 0, 0, 0, 0, 2582, 0, 1352, 5158, 2395, 2094, 3369, 2653, 882, 3784], [1650, 4365, 3074, 6548, 269, 61481], [2247, 5876, 2651, 174, 3426, 22598, 0, 0, 634, 0, 1128, 5514, 0, 538, 1914, 0, 0, 0, 7201, 0, 22, 6478, 2460, 5982, 1777, 1942, 0, 846, 2, 4018], [3364, 6638, 2050, 0, 5251, 25517, 0, 5442, 4803, 1147, 0, 2702, 1321, 0, 1357, 1623, 0, 1773, 0, 3852, 0, 1231, 1541, 210, 114, 2489, 0, 139, 1125, 0, 5767], [0, 4271, 3749, 1379, 44124, 0, 269, 53, 295, 5713, 0, 0, 28, 0, 1195, 0, 0, 3289, 0, 4965, 0, 654, 53, 2173, 741, 0, 4656, 3055, 1592], [33344, 0, 2058, 7489, 1472, 2995, 7691, 1151, 636, 3963, 42, 0, 0, 3894, 28, 1891, 3923, 2135, 6056, 5966, 0], [1396, 5464, 261, 2090, 3630, 26776, 0, 5386, 5593, 2170, 2090, 2014, 1354, 0, 4521, 2394, 0, 0, 0, 2489, 0, 4807, 0, 0, 4547, 3935, 3546, 0, 479], [10733, 4848, 6073, 1307, 5969, 20077, 0, 3433, 0, 0, 3440, 0, 2405, 0, 7413, 0, 0, 0, 0, 2397, 0, 1804, 5174, 0, 2133, 1288, 674, 2403, 0, 3204, 1175], [11375, 5111, 1164, 901, 1271, 33521, 0, 4352, 3666, 0, 2410, 0, 0, 0, 3424, 1046, 0, 4672, 278, 823, 0, 78, 4260, 1086, 47, 1288, 1285, 1288, 3365, 0, 0], [3366, 2827, 2316, 3196, 0, 44212, 0, 311, 1690, 1182, 12, 3731, 1857, 0, 1230, 0, 0, 312, 1202, 0, 275, 1567, 2156, 1413, 896, 2714, 819, 1089, 3759, 275, 6633], [2200, 113, 636, 0, 5018, 48411, 0, 3499, 4378, 0, 4992, 20, 0, 0, 0, 0, 0, 0, 1288, 1363, 0, 3314, 0, 1382, 2811, 0, 6119, 506, 3541], [25198, 0, 5217, 0, 989, 3713, 5115, 5745, 229, 8742, 1371, 0, 0, 5789, 0, 8967, 6968, 6895, 1288, 2398, 654, 0, 1215, 0, 1758], [2073, 2822, 1140, 330, 1304, 46292, 0, 886, 6053, 0, 0, 2763, 0, 0, 582, 0, 0, 1059, 0, 7193, 0, 4031, 0, 3194, 446, 5872, 1031, 1198, 3940, 1151, 7679], [3832, 2641, 2798, 413, 4100, 43440, 0, 3784, 2393, 1, 3433, 448, 2238, 0, 4497, 0, 0, 0, 4779, 1353, 4160, 0, 142, 5196, 0, 1198, 3361, 4736, 4805], [736, 4264, 1390, 929, 3503, 62553, 0, 4527, 893, 228, 1162, 2289, 275, 41, 0, 0, 278, 624, 278, 1259, 0, 2610, 4501, 3463, 1247, 0, 275, 219, 0, 114, 6965], [1913, 2467, 7032, 1248, 4574, 44778, 0, 0, 0, 0, 1536, 0, 4730, 983, 557, 2546, 0, 0, 0, 2537, 0, 3797, 8441, 3266, 2076, 1998, 1285, 1223, 3517, 813, 5311], [6101, 6092, 1144, 4538, 0, 60419, 0, 1447, 3097, 0, 2908, 0, 1578, 654, 1665, 0, 0, 0, 0, 0, 0, 4219, 2021, 2394, 2055, 1199, 3687, 1198, 0, 0, 1230], [2752, 3295, 50, 646, 9720, 39683, 0, 2948, 15590, 12, 2614, 2324, 480, 1198, 4992, 752, 0, 8, 0, 4077, 0, 222, 6411, 2732, 662, 0, 828, 0, 1199, 320, 9480], [0, 9617, 3600, 8690, 0, 61287, 0, 8706, 2384, 0, 604, 6701, 0, 0, 1424, 0, 0, 11095, 2603, 0, 0, 1348, 0, 504, 0, 4370], [4825, 7875, 14171, 3938, 3101, 11368, 12849, 758, 6314, 4937, 1465, 2552, 3228, 22831, 4718, 17382, 12717], [6005, 5236, 7409, 254, 3811, 55828, 0, 0, 11007, 0, 0, 1519, 3840, 1352, 178, 0, 0, 0, 4107, 0, 5283, 2239, 10781, 1823, 569, 0, 6514, 5520, 1377, 1738], [4189, 10938, 3065, 3171, 3681, 56115, 0, 4190, 10303, 0, 1451, 1535, 0, 3348, 3040, 0, 306, 0, 0, 2194, 1199, 3053, 1507, 5341, 3453, 2628, 917, 0, 0, 1324, 9698], [47, 5937, 28851, 92, 102474], [4021, 23148, 9491, 4522, 7108, 68832, 9348, 5548, 0, 6587, 5112, 1128, 0, 9143, 1044, 0, 0], [7505, 7972, 4539, 6373, 4397, 78526, 0, 5743, 3437, 1837, 3535, 772, 0, 3473, 0, 0, 0, 3464, 0, 4643, 4858, 3455, 2750, 5900, 654, 5209, 3298, 0, 275], [10479, 8496, 6161, 8478, 3568, 82039, 0, 5796, 1583, 436, 484, 5530, 3029, 1521, 4573, 2895, 13, 109, 278, 9934, 212, 7685, 2211, 4179, 2663, 6599, 2050, 1765, 1708, 2239, 6307], [8973, 15992, 8776, 4719, 2630, 70070, 0, 6195, 3532, 45, 4961, 6412, 180, 0, 1853, 1326, 0, 1535, 0, 15895, 0, 235, 11624, 13680, 8815, 7519, 0, 689, 6207, 2471, 10219], [13587, 9143, 9529, 6308, 4061, 82652, 0, 4716, 10911, 594, 7338, 7567, 3980, 739, 6595, 0, 0, 0, 0, 11182, 0, 13409, 7460, 7852, 5008, 1962, 3914, 7596, 3806, 2860, 10471], [9402, 28606, 6006, 4756, 11094, 69946, 0, 7280, 7949, 0, 5945, 209, 0, 9753, 1523, 1308, 43, 634, 10119, 0, 12189, 12042, 5282, 3858, 5600, 9663, 3101, 2437, 4437, 13096], [4796, 2704, 11250, 3333, 11704, 153119, 0, 8269, 9619, 1998, 6610, 10902, 7632, 2789, 15230], [2523, 1378, 21656, 3375, 1928, 4452, 0, 36561, 2282, 13746, 19459, 36019, 8694, 25543, 11963, 11488, 7854, 2143, 41066], [7890, 12988, 13272, 3016, 6107, 113606, 0, 11443, 2482, 788, 6839, 5436, 4472, 2423, 3597, 490, 0, 1343, 0, 8850, 2398, 2508, 9365, 5250, 3239, 4722, 4450, 2936, 4733, 3083, 13579], [1493, 14856, 15281, 4579, 10158, 117318, 0, 9642, 11755, 5194, 3782, 0, 7525, 2486, 4581, 0, 0, 1076, 0, 4234, 4738, 4045, 10698, 7313, 3832, 4827, 5025, 0, 4813, 2537, 21042]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

