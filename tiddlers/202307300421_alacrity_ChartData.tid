created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Gwyn Ghosthouse", "Whobear", "Drevarr Moonwillow", "Kosa\u00efr", "Elonith Primal", "Tegan Parker", "Whip \u00d1 Sl\u00e0pper"];
const professions = ["Scourge", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.8997, 23.0771, 1.5357, 10.0739, 14.3161, 9.7279, 3.7978, 4.5276, 24.6332, 0.0, 0.0, 0.0, 4.5014, 0.0, 0.0, 0.0, 0.0, 23.834, 23.6775, 20.1614, 43.1892, 0.0, 10.9705, 22.673, 18.1059, 0.0, 2.1882, 12.6558, 6.3456, 19.2558], [123.8472, 52.096, 1.8936, 29.9414, 0.0, 41.0872, 5.2813, 0.0, 83.6546, 0.0, 30.3531, 0.0, 16.4936, 7.7026, 31.6213, 24.396], [44.3643, 5.045, 39.8155, 0.0, 0.0, 19.936, 7.512, 0.0, 12.5154, 14.9226, 7.4377, 29.4466, 12.8008, 23.3013, 36.8736, 46.2387, 15.1486, 49.7154, 24.4044, 21.5303, 10.0482, 7.8478, 27.6509, 2.4795, 25.6721, 2.4898, 19.2918, 13.8326, 24.4711, 2.508], [38.9926, 249.3518, 0.0, 110.112, 214.3316, 61.6062], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 248.1507, 187.942, 84.9893, 236.1994], [15.8051, 134.7993, 0.0, 104.483, 0.0, 15.44, 0.0, 0.0, 70.1352, 0.0, 0.0, 54.2177, 44.7203, 94.2678, 91.6229, 84.0294, 3.3846, 93.6556, 6.1325, 0.0, 0.0, 6.0676], [69.8592, 114.2724, 88.1199, 40.5209, 71.6575, 59.3156, 59.708, 89.188, 0.0, 334.899, 36.1855, 164.6016, 54.7673, 82.416, 22.7968, 167.1985, 149.1405, 58.1332, 53.97, 69.5074, 59.6909, 148.3885, 212.8966, 78.4462, 91.4807, 102.6177, 37.574, 154.9423]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

