created: 20230329220116000
creator: Drevarr
modified: 20230705163523325
modifier: drevarr
tags: ChartData
title: 202303292201_kills_ChartData
type: text/vnd.tiddlywiki


const names = ["Panther B Me", "Rina Of Theros", "Baidu Sugiyama", "Sumatra Satyricon", "Band Aidbringer", "Bubble Teabringer", "Oo Dads Mad", "Lord Mac\u00fcmbeiro", "Nazhul Naxxremis", "Mort\u00e4rion", "Newtype Khan", "K\u00f4sair", "Iced Coffeebringer", "Seren Nightroad", "Verin Lan", "Legacy Of Mathus", "Sister Elon\u00edth", "Smol Gluvs", "\u00c4lplrmagron\u00e4bringer", "Bee Honeybringer", "Blancooo Padreee", "Cinder Flamebringer", "Xanvias Tlesel", "My Birthday Girl", "Plum Crazybringer", "Cael Saladbringer", "Sizzln Sisigbringer"];
const professions = ["Scourge", "Scourge", "Scourge", "Soulbeast", "Scrapper", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Berserker", "Spellbreaker", "Berserker", "Scourge", "Scourge", "Renegade", "Berserker", "Dragonhunter", "Scourge", "Vindicator", "Scourge", "Berserker", "Weaver", "Berserker", "Scrapper", "Scrapper", "Vindicator", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Enemies Killed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 2, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 2, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 2], [1, 1, 0, 1, 0, 0, 0], [2, 0, 1, 0, 1], [0, 0, 1, 0, 3, 0, 0, 0], [1, 0, 2, 0, 0, 0, 0, 0, 0, 1], [2, 0, 1, 0, 1, 0, 0, 0], [2, 0, 0, 0, 3, 0], [2, 0, 3, 0, 0, 0], [0, 0, 2, 2, 1], [0, 0, 1, 0, 4, 1, 0, 0, 0, 0], [2, 2, 3, 0, 0, 0], [3, 0, 0, 0, 3, 0, 0, 1, 0, 1], [1, 0, 1, 0, 3, 1, 0, 2, 0, 0], [1, 0, 1, 0, 6, 1, 0, 0, 0, 0], [1, 0, 3, 0, 4, 0, 0, 1, 0, 1], [2, 0, 3, 0, 7, 0, 0, 0, 0], [0, 0, 4, 0, 3, 1, 0, 0, 3, 2], [0, 7, 1, 6, 0, 0, 0, 0, 0], [1, 0, 3, 0, 6, 2, 0, 0, 1, 2], [3, 1, 6, 1, 4, 0, 0, 0, 0], [4, 0, 9, 2, 6, 1, 1, 1, 0, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

