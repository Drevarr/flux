created: 20230224230708000
creator: Drevarr
modified: 20230705163520085
modifier: drevarr
tags: ChartData
title: 202302242307_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Manuel Radiador", "Luck Engi", "Skye Nightroad", "Kosair", "Kosair", "Drevarr Moonwillow", "Arriasa", "Primal Clone", "Daring Deathblade", "Oo Dads Mad", "Xanvias Tseli", "Smol Daddy Tika", "Burnhard Riemann", "Kahless The Drunk", "Panther B Me", "Project Jupiter", "Blanco Padre Guard", "Black Raspberry Pie", "Venomina The Siren", "R\u00fana Bierdna", "Viral Marketing", "Aronorf Xideliesi", "Irish Necroman", "Rina Of Theros", "Jeckyll Mbs", "Gavann", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Air One Com", "Zaylen Harker", "Dark Sidiuz", "Tegan Parker", "Sofya De Nova", "Arcanophage Farra", "Ryvalia Fazebringer", "Ez Mode Mathus", "Rozaalyna", "Elonith Tenebris", "Husky Guard", "Ace Hammers", "Koralia Danai", "Arka\u00f1", "Mike The Archmagus", "Newtype Khan", "Whose Guardian", "Mistwalker Caelon", "Nazhul Naxxremis", "Sassy Daddy Demon", "Akira Moonbright", "Ravioli Fetabringer", "Smol Gluvs"];
const professions = ["Scrapper", "Scrapper", "Scrapper", "Dragonhunter", "Firebrand", "Scrapper", "Druid", "Chronomancer", "Scourge", "Spellbreaker", "Berserker", "Berserker", "Berserker", "Firebrand", "Scourge", "Druid", "Firebrand", "Chronomancer", "Tempest", "Spellbreaker", "Willbender", "Firebrand", "Scourge", "Scourge", "Berserker", "Firebrand", "Weaver", "Berserker", "Firebrand", "Firebrand", "Scourge", "Tempest", "Catalyst", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Scourge", "Dragonhunter", "Vindicator", "Firebrand", "Chronomancer", "Tempest", "Spellbreaker", "Dragonhunter", "Vindicator", "Scourge", "Vindicator", "Vindicator", "Firebrand", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 3, 8, 6, 3, 2, 3, 4], [3, 0, 0, 0, 3, 6, 3, 9, 1, 0, 1, 4, 1, 3, 2, 1], [5, 6, 6, 4, 0, 1, 7, 7, 2, 1, 0, 1], [7, 5, 0, 3, 2, 7, 4, 6, 3, 1, 1, 1, 3], [15, 2, 0, 1, 6, 8, 6, 3, 2], [4, 4, 2, 0, 0, 3, 4, 6, 2, 0, 1, 0, 0, 3, 0, 0, 0, 0, 5, 0, 2, 0, 1, 2, 3, 0, 0, 3, 1], [2, 0, 8, 0, 1, 0, 5, 6, 0, 4, 0, 2, 5, 6, 5, 4, 3, 2], [2, 2, 2, 1, 0, 4, 2, 0, 6, 0, 1, 1, 0, 2, 0, 0, 0, 4, 4, 1, 6, 2, 2, 0, 7, 4, 1, 0, 0], [0, 10, 1, 2, 6, 5, 2, 4, 2, 3, 2, 10, 4, 4, 2, 1], [11, 7, 3, 5, 1, 8, 5, 13, 4, 1, 1, 1, 0], [1, 2, 0, 4, 2, 5, 0, 4, 2, 1, 1, 2, 0, 6, 0, 0, 0, 2, 0, 1, 8, 1, 0, 1, 3, 6, 4, 3, 1], [2, 0, 4, 3, 0, 5, 3, 3, 2, 1, 1, 0, 0, 8, 0, 0, 0, 0, 3, 1, 5, 0, 2, 4, 6, 2, 2, 3, 0], [1, 2, 2, 1, 1, 3, 4, 3, 0, 1, 1, 0, 5, 0, 1, 0, 6, 4, 3, 6, 2, 3, 1, 1, 4, 4, 4, 0], [1, 3, 4, 3, 0, 4, 3, 8, 3, 2, 2, 0, 0, 7, 0, 1, 0, 2, 2, 1, 5, 1, 2, 2, 2, 3, 1, 2, 0], [4, 2, 2, 2, 2, 0, 4, 10, 3, 0, 1, 1, 0, 3, 0, 1, 0, 2, 7, 3, 3, 0, 0, 0, 6, 1, 6, 2, 1], [3, 5, 3, 5, 0, 1, 3, 8, 5, 0, 2, 1, 5, 0, 0, 0, 4, 4, 1, 5, 2, 1, 2, 4, 3, 1, 1, 0], [2, 2, 1, 3, 2, 3, 3, 8, 3, 1, 0, 0, 0, 0, 0, 0, 7, 3, 3, 6, 0, 0, 2, 8, 6, 4, 1, 3], [1, 2, 2, 3, 1, 2, 4, 5, 3, 0, 2, 2, 7, 0, 0, 1, 3, 4, 3, 7, 2, 1, 1, 5, 4, 3, 3, 1], [1, 2, 1, 4, 0, 4, 3, 10, 2, 2, 1, 3, 6, 0, 0, 0, 5, 7, 1, 8, 1, 0, 3, 2, 4, 4], [3, 1, 9, 2, 0, 1, 8, 0, 1, 0, 7, 6, 2, 8, 4, 1, 4, 9, 3, 4, 2, 1], [1, 5, 3, 6, 1, 4, 3, 8, 1, 2, 1, 1, 8, 0, 1, 5, 1, 0, 5, 3, 1, 1, 11, 2, 4, 4, 2], [3, 3, 6, 4, 1, 2, 2, 4, 2, 2, 0, 3, 2, 7, 0, 0, 3, 4, 1, 5, 1, 1, 1, 8, 3, 5, 7, 5], [3, 8, 11, 0, 1, 0, 4, 8, 2, 8, 3, 3, 4, 9, 6, 6, 6, 3], [6, 4, 2, 5, 0, 7, 4, 7, 4, 1, 4, 0, 0, 11, 0, 0, 0, 4, 4, 2, 8, 2, 2, 3, 5, 6, 1, 0, 1], [6, 8, 3, 5, 1, 0, 1, 10, 6, 1, 0, 1, 0, 8, 1, 0, 0, 3, 7, 1, 10, 2, 2, 4, 4, 5, 5, 3, 0], [0, 5, 3, 5, 2, 6, 3, 12, 3, 3, 5, 2, 7, 1, 0, 7, 5, 3, 3, 1, 2, 4, 7, 5, 6, 1], [10, 6, 6, 5, 1, 6, 6, 2, 4, 1, 1, 0, 8, 0, 1, 0, 6, 5, 0, 8, 3, 1, 4, 7, 3, 4, 2, 2], [7, 3, 0, 5, 2, 9, 5, 9, 0, 1, 1, 1, 0, 13, 1, 0, 0, 7, 3, 4, 4, 5, 2, 5, 6, 4, 5, 1], [6, 2, 2, 3, 3, 6, 8, 4, 1, 4, 2, 2, 10, 1, 1, 0, 5, 6, 0, 6, 1, 1, 4, 7, 6, 4, 4, 4], [8, 5, 5, 4, 0, 6, 5, 11, 4, 3, 0, 10, 1, 1, 1, 6, 4, 2, 11, 3, 1, 1, 6, 5, 2, 2, 0], [7, 8, 3, 6, 2, 8, 5, 8, 1, 2, 1, 0, 9, 0, 0, 0, 6, 0, 9, 3, 0, 3, 6, 6, 7, 5, 2], [6, 7, 5, 3, 1, 7, 4, 11, 2, 3, 1, 0, 11, 0, 4, 2, 5, 2, 7, 3, 2, 4, 7, 7, 9, 2, 1], [6, 6, 6, 5, 1, 5, 6, 12, 5, 1, 0, 2, 0, 9, 0, 1, 0, 5, 7, 2, 10, 3, 1, 0, 8, 6, 6, 5, 3], [7, 3, 2, 6, 4, 9, 5, 13, 3, 1, 3, 0, 0, 9, 2, 4, 0, 7, 5, 1, 9, 4, 2, 2, 10, 6, 5], [5, 3, 5, 5, 2, 6, 4, 10, 7, 2, 0, 1, 0, 11, 0, 0, 1, 5, 8, 4, 12, 7, 0, 3, 7, 5, 4, 5, 1], [6, 5, 4, 5, 3, 4, 4, 14, 3, 2, 3, 9, 1, 0, 0, 8, 4, 2, 3, 2, 2, 3, 10, 13, 6, 7, 1], [9, 10, 7, 7, 4, 8, 6, 12, 2, 1, 3, 2, 14, 4, 1, 5, 7, 1, 6, 4, 2, 4, 10], [6, 9, 8, 6, 2, 7, 6, 13, 3, 3, 3, 1, 0, 9, 0, 0, 0, 5, 7, 3, 5, 2, 2, 1, 11, 6, 4, 7, 3], [4, 5, 5, 6, 3, 5, 8, 10, 2, 2, 3, 2, 0, 12, 0, 2, 3, 7, 7, 3, 10, 2, 1, 1, 8, 6, 8, 5, 3], [6, 4, 5, 3, 4, 7, 4, 10, 1, 1, 1, 1, 6, 1, 5, 3, 9, 12, 6, 7, 3, 2, 0, 11, 7, 8, 7, 3], [6, 8, 9, 4, 0, 4, 5, 12, 2, 2, 2, 10, 0, 0, 0, 5, 9, 4, 14, 3, 4, 3, 10, 7, 6, 7, 3], [6, 7, 1, 5, 4, 8, 5, 13, 5, 2, 2, 3, 13, 0, 2, 0, 9, 9, 4, 11, 2, 3, 1, 11, 7, 5, 7, 3], [11, 8, 5, 7, 4, 10, 8, 10, 5, 2, 2, 1, 1, 11, 2, 3, 2, 4, 5, 5, 11, 5, 1, 3, 11, 9, 6, 4, 1], [11, 12, 7, 5, 3, 6, 4, 14, 5, 2, 5, 3, 0, 14, 2, 3, 3, 6, 4, 5, 7, 4, 1, 1, 13, 4, 6, 4, 3], [5, 3, 6, 6, 3, 5, 9, 16, 5, 3, 5, 2, 0, 13, 0, 1, 0, 8, 8, 3, 13, 3, 4, 4, 10, 6, 7, 5, 4], [13, 5, 5, 5, 3, 7, 7, 10, 5, 1, 3, 1, 2, 10, 2, 6, 3, 10, 11, 7, 12, 6, 1, 0, 12, 9, 10, 9, 3], [12, 11, 11, 7, 5, 9, 8, 13, 0, 2, 2, 0, 17, 1, 1, 0, 10, 3, 6, 8, 4, 5, 5, 12, 10, 14, 4, 5], [15, 7, 9, 8, 5, 8, 8, 13, 3, 3, 3, 2, 11, 0, 3, 2, 8, 4, 4, 12, 3, 3, 4, 14, 11, 13, 8, 4], [20, 2, 6, 3, 17, 18, 9, 26, 8, 1, 7, 22, 19, 20, 12, 5], [11, 6, 9, 8, 5, 10, 5, 13, 7, 2, 2, 3, 0, 17, 0, 2, 0, 8, 12, 6, 11, 5, 2, 5, 16, 11, 11, 6, 4], [15, 7, 13, 5, 4, 8, 9, 10, 4, 1, 4, 3, 1, 17, 0, 3, 2, 9, 10, 6, 6, 6, 4, 2, 16, 12, 11, 9, 5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

