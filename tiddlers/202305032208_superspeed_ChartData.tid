created: 20230503220838000
creator: Drevarr
modified: 20230705163528209
modifier: drevarr
tags: ChartData
title: 202305032208_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Xkaet", "Newtype Khan", "Artakama Nahid", "Binkety Bonk", "Mannse Lee", "Oops All Beans", "Tootsie Pop Rocks", "Blancooo Padreee", "Skye Nightroad", "Venomina The Fierce", "Zadie Miststep", "Smol Daddy Tika", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Scrapper", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper", "Spellbreaker", "Tempest", "Spellbreaker", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.401, 0.352, 0, 0, 0, 0, 0, 0, 0.183, 0, 0, 0], [0.695, 0.571, 0.488, 0.796], [0.225, 0.226, 0, 0, 0, 0, 0, 0, 0.045, 0, 0, 0.494, 0.39], [0.389, 0.271, 0, 0, 0.116, 0, 0, 0.135, 0, 0, 0.273, 0.257], [0, 1.055, 0.766], [0.854, 0.394, 0, 0.324, 0.233, 0.233, 0.174, 0.341], [0.685, 0.656, 1.224, 0.538, 0.193, 0, 0, 0.604, 1.158], [0.486, 0.561, 0.276, 0, 0.443, 0.364, 0, 0.354, 0.348, 0.143, 0.379, 0.543], [0.637, 0.432, 0, 0.126, 0.194, 0, 0, 0.068, 0, 0, 0.727, 0.656], [0.553, 0.719, 0.735, 1.37, 0.162, 0.256, 0.373, 0.384, 0.579, 0.286, 0.697, 0.55], [0.583, 0.645, 1.224, 0.572, 0.048, 0, 0, 0.698, 0, 0.881, 0.849], [0.804, 0.771, 0.736, 0.342, 0.781, 0.814, 0.374, 0.347, 0.697, 0.572, 0.833, 0.824], [0.872, 0.935, 0, 1.135, 0.656, 0.581, 0.467, 0.29, 0.812, 1.537, 0.476, 0.872, 0.821], [0.961, 0.809, 1.227, 0.921, 0.879, 0, 0, 0.892, 0, 0, 0.988, 0.724], [1.553, 1.604, 1.738, 1.023, 1.451, 1.338, 0.7, 1.239, 1.38, 0.35, 0.429, 1.755, 1.446]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

