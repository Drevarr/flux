created: 20230626013408000
creator: Drevarr
modified: 20230705163538721
modifier: drevarr
tags: ChartData
title: 202306260134_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Zhavashian", "Husky Guard", "Azariel Moon", "Blanco Padre Guard", "Sub Train", "Lord Erin The Wise", "Fuuko Kazari", "Sumatra Satyricon", "Sub Train", "Blanco Padre Guard", "Lucky Leipreach\u00e1n", "Belvyn Brightblade", "Rosie Sunray", "Mister Jekyll", "Minka Bringer", "Morv\u00e4rth", "Cedryn X", "Tegan Parker", "Venomina The Siren", "Kary\u00edna", "Crusader Siolith", "Melli Dragonswrath", "No Reserv\u00e9", "Arcanophage Farra", "Artakama Nahid", "Cat Wigglebooty", "Gestern Yesteryear", "Johosh The Mighty", "Miphest\u00f6", "Be\u00eb", "Newtype Khan", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Zayde Sunsabre", "Fribble Bibble", "Xanvias Einzbern", "Elon The Archmagus", "Traidoruns Maximus", "Tika Fiery", "Mememonoko", "Axunar", "Mistwalker Cael", "Koralia Danai", "Aronorf Xideliesi", "Solus Sanctus", "Drevarr Moonwillow", "Bella Sassy", "Ryvalia Fazebringer", "Primal Clone"];
const professions = ["Herald", "Tempest", "Dragonhunter", "Reaper", "Firebrand", "Dragonhunter", "Weaver", "Berserker", "Soulbeast", "Firebrand", "Dragonhunter", "Scrapper", "Firebrand", "Vindicator", "Reaper", "Scrapper", "Reaper", "Berserker", "Tempest", "Tempest", "Vindicator", "Firebrand", "Berserker", "Vindicator", "Spellbreaker", "Tempest", "Scrapper", "Firebrand", "Berserker", "Tempest", "Reaper", "Spellbreaker", "Scrapper", "Firebrand", "Spellbreaker", "Scrapper", "Berserker", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Dragonhunter", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 1, 0, 27, 3, 0, 3, 1, 4, 8, 1], [1, 8, 6, 7, 5, 6, 1, 6, 5, 3, 5], [6, 4, 7, 2, 7, 0, 2, 2, 8, 5, 8, 2, 5], [12, 0, 0, 0, 0, 4, 3, 0, 2, 2, 1, 0, 0, 1, 5, 3, 7, 1, 6, 1, 1, 6, 4], [10, 5, 2, 2, 31, 4, 1, 8, 8], [5, 3, 7, 11, 4, 17, 12, 10, 0, 1, 5], [0, 1, 5, 0, 19, 5, 6, 3, 0, 3, 0, 0, 0, 3, 2, 6, 0, 0, 2, 4, 6, 7, 1, 3, 0, 0, 1, 2, 2, 3], [6, 7, 4, 3, 9, 8, 1, 3, 8, 2, 7, 5, 3, 7, 2, 1, 7, 6, 6, 1, 3], [10, 5, 7, 0, 43, 6, 1, 7, 1, 2, 0, 3, 2, 1, 2, 2, 7, 1, 6, 8, 0], [13, 5, 18, 12, 12, 12, 4, 1, 16, 5, 8, 5, 3], [16, 3, 10, 3, 3, 4, 20, 8, 4, 4, 5, 5, 6, 2, 1, 1, 8, 1, 1, 9, 2], [3, 0, 34, 4, 0, 2, 1, 4, 2, 9, 0, 4, 5, 6, 6, 0, 0, 9, 4, 6, 11, 5, 3], [12, 4, 1, 2, 35, 4, 8, 2, 4, 11, 13, 10, 10, 9, 7, 4, 1], [1, 2, 4, 1, 9, 3, 8, 4, 16, 37, 11, 4, 8, 11, 9, 10, 3], [4, 9, 7, 4, 44, 6, 1, 17, 7, 6, 4, 8, 8, 8, 11, 2], [9, 0, 8, 11, 5, 2, 1, 16, 3, 4, 36, 5, 9, 7, 0, 9, 3, 6, 7, 7], [5, 6, 2, 43, 7, 0, 2, 3, 2, 3, 6, 7, 6, 6, 4, 4, 0, 1, 3, 7, 6, 12, 7, 5, 4], [5, 5, 4, 14, 5, 0, 12, 2, 4, 6, 8, 6, 6, 5, 6, 5, 0, 1, 4, 11, 7, 3, 6, 8, 3, 2, 2, 4, 2, 0, 6, 1], [13, 0, 6, 3, 5, 12, 8, 8, 16, 9, 2, 5, 12, 10, 10, 4, 3, 4, 0, 1, 2, 4, 9, 10, 5], [7, 1, 5, 5, 6, 7, 8, 15, 12, 5, 1, 9, 4, 5, 13, 16, 7, 5, 0, 1, 10, 5, 7, 5, 4], [8, 7, 6, 1, 30, 5, 0, 10, 7, 0, 9, 10, 9, 3, 5, 1, 3, 0, 1, 4, 4, 6, 2, 2, 1, 7, 2, 0, 0, 7, 9, 3, 4], [0, 10, 6, 15, 8, 10, 10, 9, 1, 8, 9, 5, 14, 11, 11, 13, 2, 11, 11, 5, 3, 5], [5, 6, 1, 1, 26, 2, 0, 4, 8, 6, 8, 11, 13, 7, 11, 8, 5, 0, 0, 6, 5, 4, 7, 7, 6, 1, 0, 1, 9, 2, 0, 5, 5], [12, 4, 8, 3, 35, 8, 1, 12, 9, 7, 7, 15, 7, 6, 10, 5, 8, 0, 0, 4, 3, 4, 3, 5, 5, 1], [11, 4, 6, 0, 32, 4, 0, 9, 9, 4, 12, 7, 1, 6, 17, 3, 3, 0, 2, 8, 6, 4, 10, 5, 3, 7, 2, 5, 4, 3, 3, 2], [6, 3, 3, 1, 33, 6, 0, 23, 15, 3, 6, 14, 0, 8, 7, 11, 5, 1, 6, 8, 5, 6, 3, 7, 3, 4, 3, 1, 4, 3, 4], [7, 4, 5, 0, 55, 4, 0, 17, 2, 3, 4, 2, 9, 1, 8, 1, 4, 0, 0, 9, 2, 6, 9, 5, 6, 0, 0, 6, 5, 21, 6, 2], [2, 16, 10, 5, 11, 6, 12, 12, 10, 12, 6, 3, 7, 8, 11, 17, 7, 6, 8, 4, 0, 11, 4, 7, 9, 3], [11, 3, 6, 0, 34, 3, 2, 14, 6, 4, 11, 11, 11, 10, 14, 8, 3, 2, 4, 8, 5, 3, 6, 4, 6, 1, 0, 4, 5, 6, 2, 5], [10, 6, 7, 1, 50, 3, 0, 9, 5, 4, 3, 7, 7, 3, 8, 5, 3, 3, 4, 15, 4, 12, 12, 10, 13, 3, 1, 9, 3], [12, 7, 5, 0, 40, 5, 0, 17, 6, 2, 8, 12, 5, 8, 16, 18, 7, 0, 1, 8, 11, 6, 11, 8, 6, 11], [9, 7, 3, 1, 37, 2, 2, 20, 4, 7, 9, 9, 10, 7, 8, 9, 6, 0, 3, 10, 6, 9, 9, 3, 6, 7, 1, 1, 8, 4, 6, 5, 3], [0, 6, 2, 0, 32, 1, 1, 11, 24, 6, 2, 9, 16, 12, 14, 10, 8, 0, 9, 15, 9, 4, 7, 5, 6, 1, 2, 3, 3, 5, 7, 8], [31, 4, 7, 8, 9, 6, 6, 27, 15, 4, 0, 2, 14, 7, 12, 13, 21, 9, 11, 2, 9, 11, 8, 7, 3], [9, 4, 3, 2, 38, 1, 1, 17, 7, 9, 11, 11, 5, 3, 14, 24, 4, 0, 3, 6, 13, 6, 16, 10, 5, 10, 0, 1, 6, 7, 3, 10, 4], [9, 3, 3, 3, 47, 7, 1, 23, 8, 7, 12, 15, 11, 5, 10, 34, 5, 0, 8, 12, 15, 13, 9, 5], [4, 2, 46, 4, 1, 20, 10, 6, 12, 11, 12, 6, 13, 15, 9, 0, 2, 6, 9, 7, 15, 14, 6, 6, 2, 16, 7, 6, 3, 7], [0, 3, 2, 0, 32, 1, 1, 34, 13, 10, 11, 13, 12, 9, 14, 11, 7, 0, 2, 6, 18, 8, 3, 12, 9, 7, 4, 1, 9, 8, 7, 3, 8], [0, 9, 2, 45, 6, 1, 29, 13, 6, 12, 9, 15, 11, 6, 16, 10, 0, 1, 11, 11, 7, 13, 4, 7, 10, 0, 17, 7], [11, 9, 5, 4, 31, 4, 2, 16, 15, 6, 14, 17, 15, 8, 10, 16, 5, 0, 2, 9, 10, 7, 13, 9, 6, 10, 4, 1, 11, 8, 8, 3, 3], [7, 1, 3, 25, 2, 0, 9, 21, 6, 2, 5, 17, 6, 32, 31, 6, 0, 1, 5, 8, 11, 11, 5, 3, 1, 7, 50, 4, 6, 8], [1, 2, 2, 26, 5, 0, 32, 5, 29, 4, 4, 4, 7, 18, 1, 7, 1, 2, 5, 2, 8, 26, 9, 5, 5, 1, 44, 23, 15, 11, 11], [1, 10, 5, 2, 10, 33, 34, 10, 3, 22, 6, 0, 2, 1, 42, 31, 18, 13, 11, 7, 0, 2, 8, 14, 6, 8, 21], [10, 10, 3, 4, 41, 2, 1, 17, 12, 7, 21, 10, 7, 8, 13, 16, 6, 1, 10, 12, 11, 19, 15, 13, 8, 2, 1, 12, 8, 10, 9, 6], [12, 5, 7, 1, 62, 4, 0, 34, 6, 8, 12, 17, 21, 10, 26, 12, 6, 0, 2, 8, 11, 10, 11, 8, 2, 5, 1, 0, 11, 4, 7, 10, 10], [13, 11, 3, 3, 59, 6, 2, 18, 6, 5, 23, 19, 18, 7, 23, 18, 7, 0, 10, 6, 9, 19, 12, 9, 15, 1, 0, 6, 5, 8, 10, 9], [17, 8, 6, 3, 65, 7, 2, 30, 7, 7, 13, 18, 22, 5, 20, 14, 8, 0, 1, 6, 11, 9, 16, 9, 11, 11, 1, 0, 11, 8, 7, 16, 4], [23, 14, 7, 3, 47, 6, 1, 26, 26, 7, 13, 17, 8, 7, 21, 18, 6, 2, 10, 9, 10, 17, 14, 7, 5, 4, 1, 12, 13, 11, 9, 8], [16, 9, 10, 2, 65, 6, 3, 32, 15, 14, 13, 22, 12, 12, 33, 35, 9, 2, 9, 18, 15, 24, 12, 10, 14, 2, 0, 16, 6, 36, 19, 10], [8, 8, 6, 2, 80, 2, 0, 26, 50, 8, 26, 15, 15, 3, 43, 19, 6, 1, 6, 6, 10, 48, 34, 11, 4, 2, 0, 40, 13, 7, 11, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

