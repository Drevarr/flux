created: 20230206215940000
creator: Drevarr
modified: 20230705163518732
modifier: drevarr
tags: ChartData
title: 202302062159_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Drevarr Moonwillow", "Mirrors Dancer", "Raziel Umbra", "High Sorcer Baradun", "Arkintor", "Zadie Miststep", "Mac Aaroni"];
const professions = ["Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[50.336, 0.0, 84.4858, 83.1242, 2.6928, 42.4672, 2.702, 12.38, 6.1776, 9.2219, 58.8591, 8.1115, 3.7421, 8.1302, 0.0, 0.0], [35.574, 18.8136, 37.5408, 91.6453, 0.0, 37.3888, 29.37, 24.6227, 13.5221, 17.5835, 32.0306, 0.0, 15.8944, 45.8839, 0.0, 2.7063, 0.0], [116.644, 45.2088, 193.847, 130.425, 0.0, 198.72], [85.184, 0.0, 103.5216, 272.9361, 89.792, 10.769, 65.1389, 99.6653, 36.2337, 112.9254, 0.0, 0.0, 124.9426, 22.464, 0.0, 0.0], [423.137, 41.8392, 203.0995, 172.0741, 42.6136, 23.8464, 84.5464, 0.0, 0.0, 36.1649, 43.0776, 42.4642, 0.0, 114.9435, 83.5099, 85.8198, 41.8209], [456.775, 244.9278, 264.1507, 245.286, 36.5099, 216.2368, 91.4778, 0.0], [271.161, 215.514, 172.536, 168.3352, 80.1108, 154.192, 71.8586, 42.7396, 238.7986, 28.2506, 86.6229, 42.7014, 0.0, 81.5507, 164.4365, 86.1806, 84.042], [496.826, 328.536, 303.4358, 357.9731, 134.8868, 252.3744, 49.3808, 92.232, 283.3459, 116.2714, 174.5317, 68.1522, 109.0382, 132.1071, 373.5763, 180.9613, 10.7532]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

