created: 20230422220129000
creator: Drevarr
modified: 20230705163526305
modifier: drevarr
tags: ChartData
title: 202304222201_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Yummy Kiwi", "Miphest\u00f6", "High Sorcer Baradun", "Tika Sumiko", "Arriasa", "Mac Aaroni", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1235, 0.0485, 0.1, 0.0106, 0.2406, 0.0727, 0.0203, 0.0734, 0.0273, 0.008, 0.1667, 0.1599, 0.209, 0.086, 0.0723, 0.4928, 0.4615, 0.3929, 0.058, 0.0081, 0.0479], [0.0663, 0.0, 0.0426, 0.3744, 0.0, 0.0894, 0.1193, 0.0, 0.04, 0.2564, 0.0717, 0.1304], [0.0247, 0.3291, 0.1333, 0.0638, 0.6884, 0.3364, 0.0476, 0.2236, 0.1101, 0.0545, 0.032, 0.1795, 0.2823, 0.0, 0.1219, 0.1928, 0.0, 2.6923, 0.6429, 0.2899, 0.1613, 0.2156], [0.6296, 0.3265, 0.2333, 0.1596, 0.929, 0.4409, 0.3333, 0.3486, 0.2091, 0.104, 0.1026, 0.4388, 0.9254, 0.1828, 0.1084, 1.0145, 1.6538, 0.7321, 0.1522, 0.5081, 0.4072], [0.2963, 0.6199, 0.6333, 0.1064, 1.7879, 0.5227, 0.0, 0.4756, 0.6881, 0.1364, 0.24, 0.1282, 0.8912, 1.8507, 0.5412, 0.3253, 2.2029, 4.3077, 0.8839, 0.8913, 0.5806, 0.7665], [0.5918, 0.3333, 0.1596, 1.8042, 0.4818, 0.0, 0.4553, 0.5963, 0.4909, 0.432, 0.1282, 0.881, 1.9701, 0.6953, 0.6747, 2.4348, 2.0769, 1.5446, 0.4855, 0.5565, 1.1617], [0.0, 0.7219, 0.4, 0.4787, 1.7993, 0.8045, 0.0, 0.8089, 0.7064, 0.6818, 0.608, 0.2692, 1.085, 2.0, 0.8996, 0.6265, 1.5797, 1.3462, 0.7768, 0.9928, 0.9194, 0.8443], [1.4321, 0.7832, 0.5333, 0.3191, 1.9755, 0.9227, 0.0, 0.8252, 0.8624, 0.6182, 0.424, 0.6795, 1.068, 2.194, 0.7527, 0.9518, 1.4493, 1.5385, 1.5625, 1.0797, 1.0968, 0.8383]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

