created: 20230625215204000
creator: Drevarr
modified: 20230705163536692
modifier: drevarr
tags: ChartData
title: 202306252152_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Elon The Mender", "Drumina", "Fribble Bibble", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Druid", "Druid", "Scrapper", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[170.6223, 193.1448, 36.7493, 91.1283, 84.5208, 21.1513, 97.7036, 86.7302, 46.8298, 270.432, 50.5219, 93.4344, 48.4262, 73.4666, 199.2864, 198.6509, 159.6672, 9.5386], [60.1312, 275.1168, 65.9645, 332.2129, 162.5333, 95.0461, 83.002, 50.7178, 123.5109, 475.2, 84.3349, 69.1752, 437.0746, 16.8016, 571.6443, 355.4146, 253.1021, 238.9277], [91.1067, 400.3104, 224.7399, 420.0982, 372.503, 0.0, 130.6224, 52.7602, 286.2575, 729.024, 2.6734, 129.4128, 240.6988, 68.3399, 118.3345, 437.032, 310.9814, 80.051], [320.5942, 390.7056, 474.6483, 782.2116, 555.6533, 287.1888, 28.439, 593.8153, 1033.056, 133.3682, 343.824, 8.942, 366.9948, 95.108, 356.0409, 561.2006, 34.6435], [223.3162, 594.4488, 410.1643, 1017.7831, 503.281, 248.4062, 277.6572, 76.7611, 369.9461, 1133.184, 284.2657, 415.5072, 394.3775, 127.4414, 352.6966, 777.4173, 653.9702, 302.6506], [498.456, 957.2232, 774.2357, 1707.3098, 624.7114, 0.0, 246.5996, 44.6347, 486.7582, 1752.864, 107.9705, 834.5102, 459.9533, 1333.9765, 915.0466, 1666.4525, 433.7726]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

