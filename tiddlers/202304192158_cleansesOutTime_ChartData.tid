created: 20230419215809000
creator: Drevarr
modified: 20230705163525907
modifier: drevarr
tags: ChartData
title: 202304192158_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Sygaldry Verdandi", "Ark Darkness", "Solus Sanctus", "Miphest\u00f6", "Arcanophage Farra", "Johosh The Great", "Anita Strips", "Skye Nightroad", "Newtype Khan", "Eibh\u00ebar", "Tootsie Pop Rocks", "Venomina The Siren", "Abigail Ryn", "Tegan Parker", "Etchery Howls", "Tribal S", "Zadie Miststep", "Mac Chiato", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Scrapper", "Spellbreaker", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[383.32, 0.0, 1708423.2, 28984.32, 93562.56, 146762.84, 762138.16, 86055.76, 0.0, 36693.16, 0.0, 976387.2, 851343.43, 470467.2, 403467.47, 617801.8, 218265.6, 126567.36, 0.0, 5895.68, 38919.36], [0.0, 0.0, 2473336.8, 39569.28, 2820455.04, 147219.03, 599686.5, 160231.96, 0.0, 2635.68, 41256.04, 0.0, 572908.8, 764711.15, 28156.8, 294998.13, 547085.0, 79178.12, 112176.0, 0.0, 23345.84, 43077.12], [0.0, 2941519.68, 45039.36, 374674.56, 247059.47, 1065589.28, 19837.16, 0.0, 0.0, 45866.45, 0.0, 909225.6, 1312555.37, 264499.2, 349454.77, 808607.8, 72584.68], [0.0, 0.0, 2031638.4, 2628.48, 2158728.0, 175111.79, 1119024.76, 235544.96, 0.0, 0.0, 43775.13, 6966.81, 747172.8, 707369.74, 283651.2, 449267.28, 546869.4, 165063.36, 120602.88, 0.0, 25188.24, 39157.92], [0.0, 2598441.12, 40066.56, 1124872.32, 276842.16, 868034.02, 274821.4, 0.0, 0.0, 13736.17, 238372.8, 1098646.15, 256569.6, 689660.79, 881049.4, 188765.64, 62326.08, 0.0, 32689.44, 68500.8], [2700.62, 4565088.0, 2628.48, 2718618.24, 181368.11, 1309266.77, 213832.08, 0.0, 0.0, 32082.75, 0.0, 639688.8, 1052181.48, 150259.2, 223893.74, 427858.2, 138632.76, 6183.36, 193.2, 20240.08, 19459.68], [0.0, 527.34, 4664404.8, 50189.76, 3943842.24, 321679.12, 1039261.58, 175976.64, 0.0, 89831.7, 5217.94, 917620.8, 1183847.28, 304147.2, 343683.55, 721397.6, 195700.12, 196007.04, 1207.5, 17871.28, 34045.92], [0.0, 2157.3, 6605089.92, 36905.28, 3953601.6, 590179.52, 1060128.72, 362639.2, 0.0, 878.56, 245967.75, 17431.36, 774393.6, 2636655.35, 347155.2, 883810.55, 642488.0, 121580.76, 119016.0, 0.0, 0.0, 101524.32], [0.0, 3691622.88, 42624.0, 1781719.68, 0.0, 310764.37, 382476.36, 0.0, 297822.98, 0.0, 3881635.2, 2397271.66, 987033.6, 1520568.49, 2335055.8, 773080.84, 365693.76, 5245.38, 108069.92, 161505.12], [0.0, 3944445.12, 50083.2, 8083720.32, 575646.61, 2534869.96, 500930.92, 19993.92, 0.0, 156658.88, 12213.42, 2202340.8, 1621492.95, 763660.8, 1205075.13, 1584121.0, 272149.92, 225884.16, 0.0, 34689.76, 118393.92], [5001.74, 10315008.0, 157104.96, 5184766.08, 492294.18, 2080668.38, 264703.88, 0.0, 0.0, 310133.25, 0.0, 2742304.8, 2042155.64, 400512.0, 1214397.87, 1790558.0, 308527.52, 266705.28, 0.0, 49850.08, 29172.48], [4074.9, 10083617.28, 87734.4, 8444816.64, 745023.44, 2014459.09, 714990.36, 0.0, 0.0, 195633.48, 0.0, 2262252.0, 1200544.03, 894835.2, 1653010.59, 2398765.6, 570787.28, 380468.16, 0.0, 99937.04, 62230.08], [5417.22, 6822541.44, 148118.4, 11957974.08, 838346.88, 254988.65, 760973.92, 0.0, 210748.02, 12213.42, 3044277.6, 3254339.69, 701904.0, 1710870.77, 2812502.0, 225484.28, 570456.0, 1429.68, 170369.36, 95117.28], [0.0, 1613.98, 10953597.6, 180583.68, 11766817.92, 974291.5, 3545073.56, 899038.28, 26677.44, 1317.84, 290360.77, 0.0, 4212864.0, 2836443.89, 780528.0, 1544837.21, 2894430.0, 536626.44, 248264.64, 2617.86, 10317.44, 57936.0], [6392.0, 14872255.2, 190316.16, 18531963.84, 1076673.57, 3666278.49, 654171.56, 0.0, 2635.68, 465746.47, 17431.36, 5496820.8, 5125425.2, 1215446.4, 2134685.49, 3143232.4, 782061.56, 631031.04, 141391.04, 163140.96], [0.0, 0.0, 16307470.08, 211770.24, 12016105.92, 1405260.71, 5149600.61, 1037841.56, 0.0, 0.0, 483142.45, 0.0, 5653276.8, 3527307.7, 1204492.8, 2397941.91, 3244887.8, 1140324.08, 725641.92, 3438.96, 201242.72, 260950.56], [1070.66, 11077830.72, 206975.04, 17594004.48, 1863470.98, 5473138.79, 1308229.44, 0.0, 4845.0, 363224.26, 22763.98, 5813421.6, 5641307.07, 1638403.2, 2244190.69, 3941060.2, 645418.2, 385830.72, 3303.72, 43849.12, 287669.28], [3243.94, 15827787.36, 347101.44, 22147806.72, 1451726.92, 4594573.69, 1032839.64, 0.0, 1317.84, 458569.44, 47649.54, 4792768.8, 3860670.24, 1030915.2, 2248778.07, 3460380.0, 1004305.96, 386487.36, 1816.08, 193399.36, 181101.12], [1885.64, 18083324.16, 285900.48, 18120797.76, 1267752.01, 4411644.93, 1081437.84, 0.0, 1317.84, 536946.41, 10464.55, 4978735.2, 4580347.87, 1353004.8, 2147633.74, 3256206.8, 1033749.08, 747311.04, 396.06, 172053.84, 108510.72], [0.0, 7031.2, 17418947.04, 269525.76, 23071339.2, 1541335.67, 4018289.59, 1078368.48, 0.0, 4418.64, 542127.18, 8715.68, 5671466.4, 4649329.3, 1222771.2, 2368123.94, 3639004.6, 928197.2, 739048.32, 5457.9, 204585.36, 249636.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

