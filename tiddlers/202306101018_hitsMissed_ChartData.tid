created: 20230610101822000
creator: Drevarr
modified: 20230705163534627
modifier: drevarr
tags: ChartData
title: 202306101018_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Lady The Mirage", "Yngvar The Burdened", "Vesnan", "Hit The Gas", "Synomi\u00f1 Spyce", "Scarlet Merc\u00fcry", "Sakis Ranger", "F\u00e2ble", "Cat Noises", "Grootyoda", "Arriasa", "Gamora Titus", "Elonith Requiem", "Xanvias", "F\u00e2ble", "Tomitigas", "Drevarr Moonwillow", "Slang\u00efn", "Charr Surethang", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Gestern Yesteryear", "Alarics Bane"];
const professions = ["Chronomancer", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Druid", "Herald", "Virtuoso", "Berserker", "Druid", "Firebrand", "Reaper", "Reaper", "Vindicator", "Tempest", "Scrapper", "Herald", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 0, 2, 1], [3, 10], [3, 5, 5, 0, 1], [3, 3, 0, 8], [3, 0, 2, 9], [1, 5, 8], [1, 0, 0, 0, 1, 0, 0, 3, 3, 2, 0, 2, 3, 1], [1, 1, 3, 10, 2], [2, 0, 2, 1, 1, 0, 1, 2, 7, 5, 4, 2, 0, 2], [3, 1, 1, 6, 2, 2, 6, 7, 3, 0], [2, 1, 0, 0, 11, 0, 0, 10, 1, 2, 0, 8], [1, 0, 1, 4, 0, 2, 2, 0, 2, 1, 0, 9, 0, 0, 8, 5], [2, 2, 0, 0, 2, 0, 2, 7, 2, 1, 0, 0, 1, 0, 1, 4, 2, 0, 4, 7, 1, 3], [0, 3, 1, 0, 4, 0, 4, 4, 0, 0, 5, 3, 0, 2, 4, 2, 3, 2, 9], [3, 2, 0, 0, 1, 0, 2, 4, 1, 2, 0, 0, 12, 1, 4, 9, 1, 11, 3], [1, 6, 0, 1, 8, 0, 1, 11, 3, 0, 1, 1, 0, 1, 5, 5, 1, 5, 7, 2], [2, 1, 0, 1, 5, 0, 1, 2, 2, 2, 0, 1, 5, 1, 1, 9, 9, 1, 8, 10, 3, 0], [2, 1, 0, 0, 3, 0, 0, 2, 3, 0, 0, 4, 8, 1, 0, 4, 7, 1, 4, 9, 4, 0, 5, 11], [0, 0, 0, 1, 0, 1, 6, 2, 5, 0, 1, 3, 0, 8, 4, 3, 11, 5, 2, 0, 12, 6], [0, 1, 8, 4, 4, 0, 5, 5, 1, 0, 7, 6, 2, 4, 9, 6, 1, 7, 8], [2, 2, 0, 7, 0, 2, 3, 1, 5, 0, 2, 6, 0, 0, 8, 7, 3, 6, 13, 3, 0, 12, 4], [1, 4, 0, 0, 9, 2, 2, 4, 3, 3, 0, 4, 4, 0, 0, 7, 0, 4, 9, 10, 3, 1, 12, 7], [1, 4, 0, 0, 2, 1, 5, 8, 0, 4, 0, 7, 5, 1, 0, 14, 6, 0, 13, 17, 6, 0, 8, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

