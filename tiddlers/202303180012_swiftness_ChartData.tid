created: 20230318001239000
creator: Drevarr
modified: 20230705163522435
modifier: drevarr
tags: ChartData
title: 202303180012_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Tegan Parker", "Seren Nightroad", "Air One Com", "Newtype Khan", "Eibh\u00ebar", "R\u00fana Bierdna", "Smol Gluvs", "Solus Dominus", "Jupi Jupi Jupi", "Zefirokai", "Arriasa", "Mac Chiato", "Venomina The Siren", "Grasszanine", "Blanco Padre Guard", "Fribble Bibble", "Primal Clone", "Black Raspberry Pie", "Ark Darkness", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Arcanophage Farra", "Zadie Miststep", "Aronorf Xideliesi", "Drevarr Moonwillow", "Whose Guardian", "Bella Sassy", "Koralia Danai", "Zaylen Harker", "Viral Marketing"];
const professions = ["Tempest", "Tempest", "Scourge", "Firebrand", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Vindicator", "Firebrand", "Tempest", "Druid", "Tempest", "Tempest", "Spellbreaker", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[64.5888, 0.0, 129.1651, 113.0106, 0.0, 0.0, 0.0, 0.0, 67.4685, 0.0, 61.7232, 7.5327, 192.891, 0.0, 0.0, 0.0, 35.7651, 0.0, 39.5701, 145.1702, 9.2158, 0.0, 10.0871], [0.0, 47.0976, 216.4502, 97.2994, 40.6917, 38.8786, 0.0, 49.7913, 92.9637, 0.0, 0.0, 15.1876, 291.8832], [19.9056, 9.8784, 22.2499, 136.6929, 2.9848, 0.0, 0.0, 0.0, 10.7865, 0.0, 28.248, 0.0, 191.713, 24.1915, 70.6443, 0.0, 0.0, 16.9684, 0.0, 31.681, 0.0, 129.3962, 351.3329], [183.048, 98.1019, 73.3322, 0.0, 0.0, 106.7458, 0.0, 0.0, 0.0, 0.0, 91.8809, 119.6971, 0.0, 37.4674, 70.7364, 33.7512, 0.0, 0.0, 0.0, 74.5801, 204.7475], [213.1152, 0.0, 99.6912, 156.2205, 9.4432, 21.9039, 5.8886, 22.3045, 54.6939, 3.6192, 0.0, 0.0, 157.8466, 0.0, 0.0, 0.0, 209.7396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 165.9013], [125.0016, 51.0216, 4.3344, 90.3669, 39.4264, 3.4404, 0.0, 43.7184, 43.2729, 0.0, 14.0448, 1.0174, 289.4837, 21.8645, 77.9866, 0.0, 102.9735, 102.5902, 0.0, 46.7894, 0.0, 0.0, 0.0, 94.6474], [50.112, 0.0, 185.2234, 174.7093, 0.0, 47.8963, 158.6411, 0.0, 0.0, 0.0, 0.0, 225.2849, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 201.3612, 142.2931], [8.9088, 89.7456, 32.219, 293.9521, 0.0, 7.5402, 0.0, 0.0, 99.9549, 63.9912, 80.8632, 0.0, 200.8422, 47.9952, 90.8529, 0.0, 0.0, 0.0, 0.0, 51.767, 0.0, 86.5448, 9.1528, 124.4796], [33.2688, 0.0, 325.2245, 229.345, 37.0968, 11.9841, 0.0, 4.1694, 0.0, 0.0, 0.0, 0.0, 233.8251, 0.0, 0.0, 28.5062, 48.3336, 8.3543, 8.2717, 0.0, 39.5101, 110.9397, 314.8475], [118.32, 9.8952, 248.6501, 411.1175, 6.6976, 8.4003, 0.0, 0.0, 0.0, 0.0, 0.0, 236.4755, 0.0, 0.0, 76.0637, 16.6257, 0.0, 0.0, 0.0, 0.0, 24.0688, 16.0425, 289.5224], [187.5888, 778.1693, 456.8203, 56.108], [93.4584, 349.7861, 0.0, 0.0, 3.3257, 0.0, 0.0, 0.0, 48.7968, 5.8344, 0.0, 389.0213, 0.0, 0.0, 0.0, 80.9676, 129.1753, 16.2081, 0.0, 0.0, 41.1875, 391.6815], [346.4688, 6.8712, 41.8992, 57.9595, 30.1322, 63.0115, 68.5326, 0.0, 60.8712, 0.0, 330.1233, 0.5818, 89.7523, 30.5613, 95.2013, 0.0, 15.7526, 63.5544, 88.0578, 260.1194], [255.432, 0.0, 75.6174, 16.7719, 0.0, 0.0, 31.7928, 5.94, 326.0004, 183.7877, 72.1882, 36.5501, 0.0, 52.2048, 0.0, 71.0333, 79.1428, 185.3187, 335.2364], [175.6704, 0.0, 77.8747, 342.771, 42.6816, 76.9503, 0.0, 246.928, 0.0, 0.0, 0.0, 8.5859, 486.203, 0.0, 0.0, 0.0, 35.8533, 58.0713, 0.0, 0.0, 1.5622, 0.0, 0.0, 349.616], [768.6189, 0.0, 148.0477, 194.1811, 67.6494, 180.8974, 124.8955, 7.8178, 0.0, 2.9902, 98.5684, 477.9587], [183.1872, 0.0, 395.2973, 238.2778, 25.3864, 0.0, 35.8671, 130.8718, 0.0, 0.0, 79.2528, 583.6792, 94.633, 9.0922, 0.0, 5.4243, 52.7617, 0.0, 0.0, 0.0, 18.0148, 50.8935, 268.0604], [1072.8144, 0.0, 284.4811, 55.0511, 0.0, 46.6174, 16.3433, 0.0, 76.6476, 21.2784, 25.0272, 10.585, 295.079, 0.0, 0.0, 60.9638, 21.5208, 0.0, 0.0, 0.0, 0.0, 0.0, 465.5108], [117.624, 354.1608, 513.9154, 271.9317, 0.0, 24.4268, 50.6989, 0.0, 6.8103, 0.0, 0.0, 49.623, 306.8586, 32.2392, 34.2757, 112.6138, 35.0154, 35.3478, 17.5122, 50.9472, 282.7964, 38.9748, 124.0504], [573.2256, 85.8312, 527.4965, 544.0711, 88.2752, 146.5897, 13.4462, 71.6496, 65.4804, 487.0865, 0.0, 0.0, 77.5278], [487.2, 0.0, 119.6294, 605.5621, 65.8632, 68.1486, 103.1927, 0.0, 0.0, 0.0, 30.9936, 1.1067, 672.3207, 0.0, 0.0, 0.0, 0.0, 24.9885, 118.7104, 0.0, 0.0, 0.0, 49.1836, 925.4414], [315.8448, 90.8376, 353.8315, 298.9379, 48.0376, 4.9886, 289.582, 142.9349, 43.3998, 0.0, 50.5296, 448.2138, 7.175, 0.0, 0.0, 95.1678, 111.9098, 0.0, 126.431, 0.0, 0.0, 999.2707], [139.4536, 44.9226, 121.836, 252.7536, 71.2215, 986.836, 257.3318, 5.0779, 107.4629, 80.703, 90.7086, 354.3053, 89.4797, 31.8385, 230.6299, 699.232], [244.4352, 62.2272, 487.1866, 411.9484, 12.8336, 47.6209, 130.2112, 90.149, 47.3337, 81.8688, 46.2528, 62.832, 395.2056, 98.0266, 82.344, 316.1794, 104.6052, 91.8225, 53.0582, 94.8672, 20.1922, 0.0, 5.3307, 608.2331], [418.4352, 17.5056, 473.461, 633.8147, 26.364, 125.4599, 0.0, 137.9963, 40.3542, 0.0, 37.9104, 898.489, 0.0, 0.0, 0.0, 158.1867, 0.0, 0.0, 16.8653, 7.0822, 0.0, 19.2611, 904.1941], [482.0496, 15.2376, 560.8714, 886.8421, 32.2296, 60.2357, 44.4324, 57.1578, 113.6178, 72.2592, 23.9976, 17.5108, 1171.1867, 45.2318, 43.4021, 202.1544, 54.1989, 115.0287, 40.8742, 22.5749, 27.2688, 0.0, 70.758, 356.4838], [717.9936, 23.3352, 278.8464, 411.5329, 34.528, 15.4531, 111.1597, 71.4472, 0.5076, 125.6736, 156.2616, 25.1506, 1195.0404, 323.4586, 0.0, 308.8411, 64.9152, 62.3413, 116.0649, 31.1246, 0.0, 93.6903, 1062.369], [0.0, 126.0168, 142.56, 91.8204, 1475.9839, 364.4726, 231.4896, 393.1603, 292.8681, 276.6556, 334.2595, 99.9619, 6.8393, 109.7068, 255.3223, 1344.1651], [152.1456, 13.7256, 776.7245, 708.8089, 56.0144, 116.3142, 154.427, 339.02, 0.0, 187.4496, 44.8536, 71.5428, 1496.3037, 0.0, 127.7018, 97.1611, 268.6131, 107.0087, 218.5299, 30.6562, 118.7019, 150.2162, 683.9939], [584.0832, 0.0, 766.4664, 1044.9322, 60.6084, 215.864, 0.0, 171.2727, 121.1496, 257.2944, 38.8595, 1371.4399, 324.1373, 218.5547, 326.5517, 187.9542, 172.7659, 31.2984, 53.436, 0.0, 29.314, 37.8181, 570.0307], [713.5392, 90.2664, 672.2654, 919.2495, 26.52, 252.7547, 104.7357, 398.0803, 129.9879, 114.192, 227.5944, 69.7578, 1303.7072, 49.4496, 215.9128, 584.7307, 365.1921, 151.2305, 210.2209, 147.4541, 63.5054, 524.4241, 1350.6037]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

