created: 20230610101822000
creator: Drevarr
modified: 20230705163534520
modifier: drevarr
tags: ChartData
title: 202306101018_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00e2ble", "Gamora Titus", "Cat Noises", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Arriasa", "Sakis Ranger", "Drevarr Moonwillow", "Tomitigas"];
const professions = ["Vindicator", "Firebrand", "Virtuoso", "Chronomancer", "Firebrand", "Druid", "Druid", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0088, 0.0, 0.0, 0.0137, 0.1071, 1.5778, 0.5357], [0.3333, 0.0, 0.2917, 0.1404, 0.1667, 0.2931, 0.0638, 0.5161, 0.0, 0.0, 0.0274, 0.2235, 0.1071, 0.1268, 0.2544, 0.4217], [0.05, 0.0208, 0.0548, 0.2588, 0.0179, 0.0141, 0.3333, 0.2771, 0.0, 0.1233, 0.2251, 0.2286, 0.125, 0.3667], [0.0, 0.3333, 0.0208, 0.1754, 0.1481, 0.1034, 0.0, 0.0323, 0.125, 0.0, 0.2329, 0.0471, 0.0, 0.0, 0.1404, 0.2651, 0.2, 0.2055, 0.3979, 0.1524, 0.0, 0.1889, 0.0], [0.3704, 0.3448, 0.1702, 0.0968, 0.3875, 0.1042, 0.3288, 0.1529, 0.375, 0.0845, 0.3246, 0.3855, 0.4, 0.0685, 0.445, 0.3048, 0.0, 0.6333, 0.3571], [2.0, 2.1667, 0.0, 0.3542, 0.4561, 1.4815, 0.0, 1.117, 1.3548, 0.775, 0.875, 0.0], [2.6538, 1.1333, 0.0, 1.1458, 0.5614, 1.0185, 0.9655, 0.8298, 1.4194, 0.9625, 0.75, 1.1507, 0.7719, 1.2651], [0.9231, 0.7333, 0.0, 0.1667, 0.6667, 0.2407, 0.2586, 0.4574, 0.7097, 0.2625, 0.0, 0.3151, 0.2118, 0.4107, 0.0986, 0.5351, 0.988, 1.4941, 1.0274, 1.9162, 0.7143, 0.5], [1.1923, 1.1667, 0.0, 0.5208, 1.1404, 0.7407, 0.931, 0.7234, 1.8875, 0.5833, 1.411, 1.2, 1.1607, 0.2113, 1.5439, 1.3133, 1.4235, 0.4384, 1.9948, 0.7429]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

