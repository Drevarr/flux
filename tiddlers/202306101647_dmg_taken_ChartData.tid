created: 20230610164704000
creator: Drevarr
modified: 20230705163534842
modifier: drevarr
tags: ChartData
title: 202306101647_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Ryvalia Fazebringer", "Sakis Ranger", "Tootsie Pop Rocks", "Bella Sassy", "Seikers Sorrow", "Tika Fiery", "Lindirine", "Smol Gluvs", "Lucky Leipreach\u00e1n", "Mistwalker Cael", "Trolit\u00e1", "Yngvar The Burdened", "Arriasa", "Drevarr Moonwillow", "Xyntharos", "Solus Sanctus", "Blanco Padre Guard", "Gestern Yesteryear", "Tomitigas", "Morton Saltbringer", "Xanvias Einzbern", "Air One Com", "Zarandor Kel", "Aronorf Xideliesi", "Blackout Angel", "Cedryn X", "Tegan Parker", "Zhavashian", "Cat Wigglebooty", "Lord Erin The Wise", "Koralia Danai", "High Sorcer Baradun", "Scintilla The Storm", "Wabbit Twouble", "Sumatra Satyricon", "Olou Lil Scapper", "Axunar", "Sakuras Blossom", "Oo Dads Mad", "Kimmmie", "Miphest\u00f6", "Pamtastic", "Sub Train", "Rakloz Blightspire", "Traidoruns Maximus", "Imalou", "Grasszanine", "Damian The Tinkerer", "Lil Shark Bait"];
const professions = ["Tempest", "Chronomancer", "Druid", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Reaper", "Scrapper", "Vindicator", "Tempest", "Scourge", "Druid", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Dragonhunter", "Firebrand", "Reaper", "Berserker", "Tempest", "Tempest", "Scrapper", "Weaver", "Firebrand", "Tempest", "Tempest", "Scourge", "Soulbeast", "Scrapper", "Dragonhunter", "Scourge", "Spellbreaker", "Willbender", "Tempest", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2985.1333, 4.4444, 381.6531, 204.5763, 22.8906, 213.5984, 25.0909, 103.3333, 0.0, 7.7556, 62.7292, 1249.9167, 133.0513, 0.0, 904.5882, 71.7073, 99.0492, 111.7699, 293.9247], [0.0, 0.0, 5.51, 405.625, 282.2203, 0.2286, 18.2871, 25.5312, 80.7846, 0.0, 0.1364, 0.0, 57.66, 14.8929, 1207.7989, 163.8421, 0.0, 613.5621, 63.7875, 68.2857, 248.4298, 231.1031], [16.2, 0.0, 0.0, 105.4694, 106.1731, 36.5692, 16.2349, 140.3704, 58.3896, 0.0, 59.6333, 7.9385, 0.0, 21.4348, 0.0, 1228.6667, 94.1316, 727.1107, 8.0938, 17.0645, 152.177, 272.8144], [0.0, 0.0, 1.5, 144.3043, 172.6222, 408.3077, 24.504, 99.8889, 84.0, 0.0, 12.0, 13.5652, 2.3429, 101.02, 0.0, 1213.2903, 129.9643, 0.0, 624.7243, 66.3103, 236.5294, 320.1391, 267.0204], [14.9032, 0.0, 0.0, 72.3673, 41.7288, 0.0758, 0.0128, 49.0465, 115.3871, 0.0, 0.8308, 31.7292, 0.0, 0.0, 1511.8333, 136.9524, 0.0, 520.8033, 111.3692, 15.0328, 201.3273, 230.3438], [0.0, 0.0, 0.4898, 74.2245, 80.2373, 65.1687, 27.0, 82.9167, 128.6552, 0.0, 71.2308, 0.0, 78.6087, 29.9111, 0.0, 1189.9945, 339.5946, 0.0, 568.106, 87.0, 70.566, 138.265, 470.2447], [0.0, 0.0, 2.06, 287.7273, 135.8542, 0.0, 30.3963, 86.4074, 40.4026, 0.0, 0.0, 75.7609, 0.0, 0.0, 1366.1389, 52.6897, 0.0, 572.0163, 11.8974, 32.5614, 167.3077, 261.8587], [1894.6491, 0.0, 0.0, 398.8462, 100.8372, 818.6667, 475.3103, 760.1183], [78.6129, 0.0, 0.83, 183.9783, 158.3864, 10.1591, 59.988, 193.5556, 203.2656, 0.0, 0.0, 17.0455, 31.5417, 41.3529, 0.0, 684.4267, 172.1622, 210.5909, 719.2386, 57.6163, 32.9333, 344.4182, 503.5319], [125.7656, 132.8889, 0.0, 434.9, 428.3654, 0.0, 3542.76, 245.1282, 0.0, 871.4118, 77.0635, 108.5472, 327.2222, 255.3646], [3.9, 5.6471, 110.66, 420.4348, 856.3684, 2.6719, 87.5818, 277.7105, 247.8727, 103.4667, 66.1739, 29.4468, 23.3191, 0.0, 585.6489, 35.175, 0.0, 564.513, 39.1692, 91.3115, 173.5263, 334.4946], [1422.7045, 226.5278, 0.0, 449.8383, 60.0, 184.9032, 314.1532, 272.4747], [18.3731, 195.2083, 86.26, 0.0, 1292.0849, 421.6154, 0.0, 778.7273, 40.6984, 220.8269, 167.0431, 209.7475], [14.0, 70.8333, 195.5714, 147.2955, 176.6471, 8.3313, 305.2143, 38.6364, 0.3382, 6.9565, 64.0213, 0.0, 1287.2367, 96.2222, 0.0, 454.8494, 151.907, 49.9375, 165.1455, 151.3407], [27.5938, 0.0, 8.63, 387.4468, 97.5417, 0.6528, 17.4577, 99.4242, 111.254, 0.0, 4.3478, 27.3269, 55.4359, 0.0, 1043.2967, 142.7, 8.1905, 521.8295, 51.2821, 42.3333, 183.2203, 211.8542], [0.0, 0.0, 6.5051, 90.2553, 137.9348, 0.0, 7.2771, 37.8485, 25.8354, 176.9259, 0.0, 3.6809, 4.1957, 0.0, 1073.2139, 257.697, 0.0, 473.5403, 68.9206, 67.2295, 179.5345, 399.5208], [6.3226, 0.0, 10.4343, 357.1111, 51.4889, 1.2656, 11.5854, 5.9091, 118.4677, 0.0, 0.0, 43.1594, 0.0, 0.0, 0.0, 1070.4343, 1.1892, 0.0, 590.8759, 66.0789, 32.3077, 126.0776, 143.0753], [0.0, 4.25, 19.5455, 117.6809, 27.3103, 11.5556, 50.0497, 0.2093, 223.1, 0.0, 45.8667, 45.6087, 29.6087, 0.0, 0.0, 1351.2544, 3.9412, 0.0, 560.5128, 11.5769, 40.1017, 239.9474, 268.2105], [13.0, 7.75, 9.2828, 242.2553, 53.0345, 0.0, 5.2963, 21.375, 103.4286, 0.0, 0.0, 11.2542, 4.2558, 0.0, 3.6212, 921.1685, 298.9355, 0.0, 596.2718, 67.3448, 25.5769, 98.6271, 161.0938], [0.0, 0.0, 13.1562, 115.2045, 188.9333, 42.25, 40.344, 173.4474, 190.5862, 0.0, 4.4, 28.4559, 315.4375, 40.9583, 7.1077, 973.0618, 135.2308, 0.0, 363.0288, 35.125, 141.0781, 120.4609, 402.8737], [44.0833, 0.087, 4.7041, 176.9302, 270.8511, 39.0147, 26.0241, 0.0, 0.0, 0.0, 31.8923, 48.7826, 102.625, 13.4143, 676.9312, 86.4516, 0.0, 606.3955, 10.3846, 88.0417, 88.7273, 311.3814], [70.5161, 9.4324, 0.1122, 400.1042, 141.6207, 20.4154, 8.5273, 123.6296, 236.9841, 0.0, 0.0, 89.2553, 156.7292, 0.0, 746.462, 57.3243, 0.0, 501.2932, 17.8571, 22.566, 75.2982, 346.7684], [30.3077, 0.0, 5.4545, 76.7174, 58.5962, 0.0, 17.4573, 77.4706, 84.0536, 0.0, 60.1029, 720.1389, 0.0, 0.0, 979.1014, 101.8974, 0.0, 548.2366, 18.3243, 154.537, 194.0172, 283.7938], [0.0, 0.0, 953.2925, 205.6774, 0.0, 647.1056, 81.6897, 79.5882, 324.0917, 218.0638], [0.0, 0.0, 3.3333, 239.8864, 105.0678, 890.8077, 15.1914, 35.3939, 206.3735, 6.0, 0.0, 4.375, 0.0, 0.0, 1041.7151, 164.45, 0.0, 274.4665, 17.3243, 27.92, 172.7833, 144.6316], [0.0, 0.0, 28.202, 328.1277, 958.2881, 2463.5143, 14.6667, 109.8421, 55.2576, 8.52, 0.0909, 39.2143, 169.1915, 27.8776, 0.0, 1275.2372], [19.5172, 0.2895, 0.0, 549.6383, 583.8936, 59.5625, 20.4024, 0.0, 0.0, 0.0, 0.0, 30.5455, 0.0, 6.4627, 1037.1826, 97.8611, 0.0, 341.9185, 29.1538, 30.2188, 367.4679, 3248.6364], [0.0, 0.0, 0.0, 78.2553, 97.8043, 7.0312, 5.4024, 0.0, 109.3333, 0.0, 17.6667, 24.4308, 10.0227, 3.3542, 0.0, 830.5581, 132.3333, 0.0, 571.3571, 23.0263, 73.7705, 131.1545, 129.967], [0.0, 0.0, 1.0208, 86.5217, 119.65, 55.8235, 4.4607, 22.3488, 40.7439, 0.0, 0.0, 0.0, 15.8889, 12.6042, 0.0, 1007.6193, 64.4048, 0.0, 412.2862, 106.6395, 45.0526, 185.4054, 229.7527], [38.1379, 0.0, 56.7576, 196.8723, 119.0, 65.1034, 129.5366, 1.6, 66.791, 114.7949, 1041.5697, 98.2051, 0.0, 295.875, 140.2727, 120.5455, 181.4455, 262.0851], [0.0, 3.2424, 69.6061, 249.1957, 402.6667, 4.4375, 27.5409, 11.4324, 11.5926, 42.1739, 234.3333, 45.9362, 0.0, 1431.9282], [83.1429, 0.0, 0.0, 68.5778, 21.2727, 0.0, 16.4762, 0.0, 0.0, 0.0, 0.0, 0.0, 37.913, 0.0, 672.9477, 118.6842, 0.0, 467.0814, 28.7317, 120.3333, 109.5872, 157.433], [85.4595, 285.2609, 576.2684, 392.5946, 113.377, 177.8796, 428.6559], [27.9643, 10.1463, 0.0, 436.1522, 89.4333, 2.0299, 3.3836, 113.4118, 52.65, 6.0526, 18.1304, 34.1515, 0.0, 562.9894, 74.8649, 0.0, 308.2364, 11.1795, 17.5, 42.6638, 119.5567], [418.1304, 0.0909, 157.6406, 0.0, 58.3125, 23.2037, 1328.5706], [0.0, 0.0, 0.9688, 83.25, 95.8, 0.0, 76.4157, 175.6923, 205.8906, 5.25, 46.2388, 143.4884, 57.375, 35.1, 1727.5487], [245.3488, 194.5333, 560.188, 516.0722], [62.0, 288.4096, 81.6667, 172.0588, 370.7692, 326.8041], [112.9726, 41.6364, 268.8793, 585.3061], [160.5526, 0.0, 425.4, 69.7317, 0.0, 1206.5614], [113.3939, 132.3, 974.5513], [4.8571, 0.0, 73.602, 180.125, 147.9615, 222.2469, 53.5, 75.1711], [11.6538, 149.9107, 242.3478, 193.75], [17.1034, 30.6111, 0.0, 313.0435, 183.0889, 0.0, 87.0438, 0.0, 2.5, 0.0], [0.0, 36.0952, 63.8283, 205.075, 68.3115, 89.0615, 56.1338, 89.6667], [0.0, 0.0, 3.0108, 108.8636, 103.6364, 0.0, 82.472, 0.0], [0.0, 0.0, 157.3333, 109.0217, 38.4844, 0.0839, 0.0], [0.0, 0.0, 0.0, 186.2889, 30.193, 7.9538, 14.8896, 0.0], [91.3, 23.2759], [53.1739, 21.7826, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

