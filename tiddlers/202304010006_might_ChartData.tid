created: 20230401000636000
creator: Drevarr
modified: 20230705163523664
modifier: drevarr
tags: ChartData
title: 202304010006_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Brioche Bunbringer", "Raziel Umbra", "Ark Darkness", "Tegan Parker", "Ju\u00e7", "Zadie Miststep", "Koralia Danai", "Mac Chiato", "Air One Com", "High Sorcer Baradun", "Zaylen Harker", "Whose Guardian", "Arkintor", "Johosh The Great", "Drevarr Moonwillow", "Aronorf Xideliesi", "Bella Lunabringer", "Abigail Ryn", "Arcanophage Farra", "Newtype Khan", "Grasszanine"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.1968, 11.8408, 12.1867, 13.0777, 10.9296, 4.131, 6.024, 10.8864, 3.3075, 0.0, 9.2928, 5.5166, 0.5476, 12.6808], [14.7533, 4.604, 0.0, 4.7432, 0.0, 10.1077, 3.5398, 5.4283, 3.3264, 0.0, 7.0915, 0.0, 4.8944, 9.3845, 5.0976, 4.9613, 0.0, 0.0, 0.0, 5.1322, 4.8348, 0.0, 0.0, 1.89, 0.0, 4.9421, 6.4596, 0.2586, 8.5184], [0.0, 6.8267, 2.1403, 0.0, 2.3986, 8.2555, 4.6922, 4.2725, 7.392, 0.0, 12.1325, 1.7464, 0.0, 12.0658, 6.7608, 0.0, 16.2729, 0.0, 9.3509, 0.0, 5.3222, 0.0, 0.0, 5.6862, 3.5438, 0.5062, 0.0, 0.0, 10.6318, 4.8884], [9.9226, 5.6624, 5.2685, 0.9814, 9.1145, 9.4198, 4.363, 3.4056, 10.4016, 4.0392, 5.4682, 0.0, 1.5714, 14.8308, 0.0, 9.7241, 18.3893, 0.0, 4.4669, 0.0, 11.9137, 0.0], [17.1034, 0.0, 0.0, 0.0, 1.3519, 8.573, 0.0, 0.0, 4.5936, 34.452, 1.7088, 0.0, 4.7141, 6.787, 0.0, 0.0, 0.0, 0.6989, 0.0, 0.0, 3.0413, 0.0, 0.0, 3.5964, 8.8763, 0.0, 0.0, 33.4765, 0.0, 4.2108], [7.719, 5.7683, 5.392, 2.1053, 5.9664, 11.6899, 9.0566, 3.696, 2.7048, 19.2717, 7.236, 12.7008, 1.092, 1.423, 1.4731, 0.0, 1.62, 10.2546, 6.0075, 0.0, 6.9907, 27.017, 0.0608, 2.9524], [2.6112, 0.0, 0.0, 1.1449, 2.7474, 6.6679, 3.0047, 0.4747, 2.2176, 12.2126, 0.0, 0.5636, 17.3107, 12.8199, 3.7368, 0.0, 4.2336, 1.6162, 0.0, 2.9117, 7.3656, 0.0, 0.048, 1.944, 5.0963, 6.2304, 61.4365, 1.5818, 0.0], [11.2934, 13.2829, 0.2058, 0.0, 11.0333, 5.0803, 3.6632, 1.0939, 3.7488, 15.4915, 5.8954, 0.0, 7.9856, 7.5411, 4.3632, 1.3892, 12.2741, 7.3181, 5.1797, 0.0, 0.0, 6.6582, 3.0713, 0.0, 5.3434, 25.8382, 0.0, 8.0344], [7.8336, 0.0, 3.869, 0.0, 1.6136, 6.4033, 1.3994, 2.0227, 9.9264, 9.599, 24.0941, 0.693, 0.0, 10.3062, 0.0, 0.0, 2.0507, 0.0, 18.6001, 0.0, 2.7086, 0.0, 7.704, 0.0, 3.9825, 5.6477, 5.5968, 35.0796, 5.5669, 2.904], [15.3408, 4.2336, 9.014, 3.5711, 6.9776, 12.8066, 0.0, 3.4882, 8.3424, 12.4502, 3.5885, 3.5204, 1.7002, 11.3117, 3.8232, 14.6191, 5.591, 4.811, 3.9442, 0.7344, 0.0, 5.9062, 0.5062, 5.7869, 24.7066, 0.4411, 4.0656], [31.9219, 0.0, 6.3386, 19.3001, 3.4452, 15.241, 0.0, 20.0208, 39.9696, 20.4811, 0.6835, 0.0, 5.6672, 36.0297], [7.8336, 14.6588, 1.029, 6.4606, 3.2708, 4.0219, 4.4041, 2.1466, 7.0752, 21.7642, 14.4394, 2.0975, 2.1123, 35.9459, 4.9032, 4.86, 11.1132, 6.7267, 9.4525, 7.128, 7.1604, 3.384, 14.6286, 8.8425, 7.3498, 13.9564, 1.232, 11.3256], [15.5366, 6.8267, 3.5398, 12.0217, 9.0273, 12.1716, 6.7914, 9.4738, 10.6128, 9.8366, 12.4742, 4.352, 11.5405, 27.9021, 15.9192, 0.0, 27.6507, 13.0603, 7.7924, 6.2899, 4.9421, 3.0294, 12.984, 14.6286, 13.9388, 12.0173], [13.7741, 10.3723, 3.4986, 4.4434, 6.6287, 7.7792, 0.7409, 6.2539, 6.336, 43.5283, 9.0566, 0.6006, 32.4061, 51.9498, 8.0352, 18.059, 3.2323, 27.7477, 17.3923, 3.3354, 0.0, 7.4844, 7.5263, 16.1438, 4.2029, 16.644, 1.2016, 6.2436], [17.7562, 22.6498, 14.8176, 7.6873, 7.9806, 18.4691, 4.6511, 8.9784, 22.4928, 9.1714, 17.3443, 5.1097, 8.0371, 29.7454, 8.2296, 3.4182, 26.1954, 12.2304, 2.3038, 14.8738, 3.06, 12.2958, 10.125, 0.0, 1.753, 26.6397, 1.3385, 17.8596], [12.9907, 34.6097, 9.3845, 5.9972, 9.9431, 20.0567, 15.8054, 7.1827, 10.296, 10.9296, 10.5946, 3.4188, 18.6502, 23.2936, 7.8192, 1.0287, 23.8802, 9.2165, 17.9564, 11.785, 11.9952, 3.972, 12.15, 8.7075, 1.5718, 11.2992, 18.3414, 6.6011, 11.4708], [20.4979, 11.8012, 10.0842, 10.0862, 19.1448, 13.7063, 8.5613, 8.7307, 12.7776, 17.3448, 26.4864, 0.0, 11.6435, 34.3539, 5.4648, 33.0088, 15.3317, 9.3848, 5.0717, 9.504, 6.426, 0.72, 14.1912, 10.8675, 12.4608, 14.0036, 1.3689, 15.1976], [20.4326, 11.272, 11.319, 14.3933, 16.0921, 19.7921, 12.6773, 9.8246, 21.4368, 27.1339, 15.6355, 5.581, 3.8125, 27.3993, 3.24, 4.0905, 18.6543, 19.4813, 9.046, 12.9254, 1.7748, 0.0, 9.5256, 10.9688, 0.0, 4.6042, 45.3112, 0.0, 17.666], [17.6909, 64.3507, 41.407, 11.531, 25.2938, 34.2922, 19.4275, 6.9144, 48.4176, 59.4475, 46.223, 5.4978, 27.3056, 112.7813], [78.5318, 68.9548, 49.0216, 31.9487, 46.401, 88.641, 52.6436, 27.6989, 66.6336, 29.2723, 99.2813, 11.5592, 32.2258, 25.3884], [76.5734, 10.8486, 14.2825, 13.5755, 22.7208, 35.3506, 10.6604, 14.3654, 28.8816, 12.0701, 31.0147, 11.9011, 38.3309, 73.2325, 30.2184, 87.0534, 22.9757, 33.5412, 66.5755, 27.7848, 21.672, 38.9772, 12.3525, 21.5784, 26.3578, 45.0282, 21.9784, 46.2704], [62.0813, 39.3196, 22.7615, 28.2414, 34.9316, 53.9784, 23.7905, 20.7845, 49.8432, 27.5141, 31.1002, 20.3762, 94.9341, 24.6888, 6.5691, 44.3867, 16.2926, 45.2298, 51.9394, 12.9132, 10.152, 16.4268, 42.7275, 7.699, 31.2787, 38.5215, 14.2822, 28.2172]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

