created: 20230322220917000
creator: Drevarr
modified: 20230705163522880
modifier: drevarr
tags: ChartData
title: 202303222209_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Nelliel T", "Oo Dads Mad", "Morton Saltbringer", "Dark Sidiuz", "Seren Nightroad", "Tootsie Poppa", "Rozaalyna", "Panther B Me", "Newtype Khan", "Grasszanine", "Smol Gluvs", "Rina Of Theros", "Primal Clone", "Nazhul Naxxremis", "Black Raspberry Pie", "Macette", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Reaper", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0891, 0.3729, 0.46, 0.0, 0.4091, 0.0729, 0.2667, 0.1224, 0.0, 0.0, 0.2955, 0.0833, 0.0998, 0.0588, 0.0, 0.0, 0.3188, 0.1329, 0.0682, 0.0, 0.0, 0.0, 0.0], [0.0814, 1.1356, 0.6, 0.04, 0.4, 0.5938, 0.3167, 0.6429, 0.3077, 0.4205, 0.05], [0.1724, 0.25, 0.598, 0.2267, 0.0, 0.5714, 0.2319, 0.4965, 0.1742, 0.7368, 0.4043, 0.4035, 0.2857, 0.9355], [0.0775, 0.5254, 0.64, 0.0, 0.6727, 0.2604, 0.45, 0.0, 0.2167, 0.0936, 0.0, 1.1159, 0.7622, 0.1818, 0.6579, 0.2766], [0.8136, 0.96, 0.0, 0.6545, 0.2083, 0.35, 0.2449, 0.7231, 0.0, 0.2955, 0.7, 0.1268, 0.2566, 0.8039, 0.4, 0.0769, 0.0682, 0.0789, 0.4681], [0.1298, 0.3898, 0.76, 0.0, 0.6818, 0.4375, 0.5667, 0.1122, 1.2308, 0.5227, 0.6667, 0.0911, 0.1184, 0.1078, 0.6933, 0.0, 0.1587, 0.2319, 0.2098, 0.303, 0.0, 0.2128], [0.1357, 0.3051, 0.94, 0.0, 0.7182, 0.4896, 0.1333, 0.3367, 0.9846, 0.0, 0.1932, 0.3, 0.0874, 0.2566, 0.5098, 0.7067, 0.7143, 0.5797, 0.0909, 0.2727], [0.0969, 0.8136, 0.92, 0.0, 0.2273, 0.3854, 0.6333, 0.5204, 0.8154, 0.4432, 0.6167, 0.0862, 0.0526, 0.3725, 0.3067, 0.0886, 1.2063, 0.3333, 0.5874, 0.3636, 0.0789, 0.3191], [0.1628, 0.7627, 0.76, 0.06, 0.7818, 0.6458, 0.4167, 0.4898, 0.8154, 0.5341, 1.1, 0.1576, 0.3092, 0.4412, 0.0667, 0.038, 0.8095, 1.3043, 0.2727, 0.3561, 0.0789, 0.5319, 0.3158, 0.0, 0.3871], [0.2384, 0.9153, 1.02, 0.0, 1.0364, 0.4167, 0.3667, 0.4592, 0.6615, 0.8409, 0.8833, 0.1392, 0.4145, 0.902, 0.64, 0.0886, 1.1905, 0.942, 0.5804, 0.1818, 0.0, 0.4468, 0.3333, 0.0, 0.1613], [0.157, 1.0339, 0.58, 0.0, 0.7818, 0.4167, 0.7667, 0.5714, 1.1692, 0.0, 0.6932, 1.3333, 0.1933, 0.2829, 0.7843, 0.4667, 0.2785, 1.1905, 0.7681, 0.5944, 0.5682, 0.0263, 0.5532], [0.2016, 0.9831, 1.28, 0.0, 0.9273, 0.7083, 0.3333, 0.7959, 1.1846, 0.0, 0.75, 0.8, 0.1207, 0.3289, 1.2157, 0.7467, 0.0127, 1.5556, 0.7971, 0.4895, 0.3106, 0.1053, 0.2979], [0.1764, 1.1017, 0.8, 0.02, 0.6273, 0.8333, 0.25, 0.6327, 1.4769, 0.7386, 0.7667, 0.1823, 0.2632, 1.1961, 0.1733, 0.0633, 0.9524, 1.1594, 0.4476, 0.3485, 0.3158, 0.6809, 0.6491, 0.0, 1.0323], [0.2287, 0.9153, 1.24, 0.0, 0.3909, 0.5938, 0.7667, 0.4184, 0.6615, 0.0, 0.6591, 0.9833, 0.2069, 0.3355, 0.4118, 0.24, 0.0633, 1.5238, 1.0145, 1.2378, 0.6136, 0.5, 0.5319], [0.3236, 1.1356, 1.18, 0.06, 0.0, 0.7396, 1.1, 0.2347, 0.5846, 0.0513, 0.9659, 1.0167, 0.3128, 0.3947, 0.8725, 0.24, 0.0633, 1.0476, 1.0, 0.4406, 0.1818, 0.6842, 0.2766, 0.0702, 0.0952, 1.4194], [0.157, 1.0508, 1.2, 0.0, 0.9727, 0.5833, 1.0833, 0.4286, 1.5385, 0.375, 1.0, 0.2771, 0.375, 1.4216, 0.48, 0.1392, 0.8095, 0.971, 0.4266, 0.4091, 0.8684, 0.4255, 0.7193, 1.4194], [0.2112, 1.5424, 1.42, 0.0, 1.4, 0.7188, 0.6, 0.7857, 1.7077, 0.0513, 0.8977, 1.2833, 0.2734, 0.4605, 1.9216, 0.7067, 0.3165, 2.3016, 1.7536, 0.5664, 0.0379, 0.1316, 0.5957], [0.3895, 2.0678, 1.6, 0.0, 1.1545, 1.0417, 1.0167, 0.949, 1.5385, 0.0256, 1.2614, 1.3167, 0.3621, 0.4408, 2.2647, 0.92, 0.4684, 1.873, 1.3188, 0.4825, 0.5909, 0.8158, 0.383, 0.4386, 0.381, 0.3226]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

