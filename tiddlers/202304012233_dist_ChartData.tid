created: 20230401223327000
creator: Drevarr
modified: 20230705163524099
modifier: drevarr
tags: ChartData
title: 202304012233_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Macette", "Koralia Danai", "Tribal S", "Skye Nightroad", "Mistwalker Caelon", "Newtype Khan", "Johosh The Great", "Drevarr Moonwillow", "Xanvias Tlesel", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Druid", "Scrapper", "Vindicator", "Spellbreaker", "Firebrand", "Scrapper", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[840, 317, 476, 357, 538, 265, 641, 760, 919, 917, 2606, 4163, 418, 480, 325, 279, 287, 388, 380, 524, 280, 399, 417, 282, 393, 301, 248, 343, 317, 356], [335, 314, 237, 625, 546, 275, 384, 763, 574, 409, 882, 2431, 487, 450, 227, 407, 424, 397, 465, 519, 223, 4415, 392, 388, 386, 233, 220, 515, 275, 380], [406, 479, 631, 12674, 536, 264, 817, 1125, 583, 277, 4332, 465, 398, 286, 479, 311, 350, 342, 421, 287, 294, 546, 410, 533, 329, 231, 431, 348, 484], [431, 346, 361, 428, 567, 274, 580, 716, 440, 220, 4389, 9943, 428, 556, 225, 265, 366, 318, 497, 415, 1556, 6814, 320, 316, 319, 184, 195, 394, 315, 311], [587, 294, 346, 1634, 412, 294, 449, 365, 285, 5364, 3856, 1477, 9101, 378, 405, 379, 316, 470, 935, 220, 299, 376, 290, 292, 242, 196, 318, 285, 455], [807, 367, 314, 2040, 305, 282, 401, 927, 498, 304, 10700, 334, 312, 201, 314, 278, 370, 499, 561, 322, 486], [281, 351, 224, 473, 321, 292, 1030, 817, 320, 691, 2505, 803, 582, 292, 172, 315, 234, 261, 1494, 209, 422, 391, 277, 323, 323, 219, 367, 288, 486], [360, 338, 333, 231, 412, 289, 428, 387, 430, 283, 4618, 4170, 230, 272, 180, 239, 219, 216, 434, 199, 205, 301, 356, 167, 202, 183, 210, 252, 355], [650, 337, 217, 178, 441, 246, 592, 405, 460, 280, 3770, 3193, 220, 344, 167, 238, 238, 259, 337, 397, 1312, 503, 311, 241, 295, 217, 151, 314, 220, 260], [282, 468, 566, 199, 335, 229, 368, 303, 384, 20253, 1446, 488, 204, 389, 155, 240, 244, 227, 215, 310, 153, 483, 306, 237, 238, 128, 202, 262, 194, 280]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

