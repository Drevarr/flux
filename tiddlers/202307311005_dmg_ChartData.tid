created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Laddimus", "Lord Sahan", "Igh Homura", "Sister Elonith", "Sakis Ranger", "Fyshaye", "Squishy Jellyfish", "Lady Fluffs", "Scarlet Merc\u00fcry", "Whip \u00d1 Sl\u00e0pper", "Gestern Yesteryear", "Smythe The Noble", "Sister Elon\u00edth", "Brutal Araden", "Phantasmal Akihito", "Necrotic Windrunner", "Mother Ship", "Govinda Ektar", "Aezlenne", "St\u00e1rless", "Luke The Ghastly", "Scarlet Merc\u00fcry", "Grasszanine", "Elvezio Figone", "Aloepen", "Smol Gluvs", "Tridozaul", "Latedoctor", "Drac Tepes", "Revitiel", "Jimbo The Pleb", "Drevarr Moonwillow", "Vee Usagi", "K\u00e2 \u00d4tik R\u00e6j", "Charr Surethang", "The Bussiest Cat", "Jerryatric Reflexes"];
const professions = ["Tempest", "Firebrand", "Tempest", "Berserker", "Druid", "Druid", "Firebrand", "Druid", "Willbender", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Renegade", "Chronomancer", "Scourge", "Tempest", "Vindicator", "Chronomancer", "Spellbreaker", "Scourge", "Firebrand", "Spellbreaker", "Virtuoso", "Reaper", "Reaper", "Holosmith", "Reaper", "Scourge", "Vindicator", "Berserker", "Scrapper", "Scourge", "Berserker", "Berserker", "Holosmith", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 111.5692, 0.0, 0.0, 13.9118], [5.6724, 6.7736, 13.25, 71.0, 28.0625, 13.3657, 51.7647], [8.7812, 93.3433, 99.4706], [241.2895, 222.7719], [0.0, 43.8596, 14.2963, 171.7031, 20.1202, 69.41, 30.3861], [43.0193, 118.7872, 29.1414, 50.903, 22.9483, 12.9906, 35.5, 128.0923, 40.0625, 18.9851, 96.4118], [40.7308, 46.5303, 0.0, 90.9247, 41.2768, 62.8857, 39.2231, 0.0, 32.5, 30.4062, 194.075, 62.4058, 56.7092, 27.523, 0.0, 67.3657], [11.0143, 115.3575, 0.0, 9.1404, 4.52, 31.5185, 54.4375, 21.2019, 32.505, 86.7525, 116.803, 7.697, 49.2688, 85.3214, 66.6429, 35.9752, 26.2581, 65.3571, 60.15], [845.7143, 141.4686], [26.9077, 48.0152, 0.0, 30.4946, 119.7768, 138.9714, 71.6529, 8.3011, 14.7857, 33.0, 247.5, 80.7778, 222.7589, 0.0, 0.0, 138.8433, 6.6698, 1.675, 149.0615, 14.0938, 174.7015, 478.9118], [47.8857, 14.8406, 0.0, 108.2982, 35.963, 123.9375, 10.9231, 29.41, 11.9802, 53.3846, 42.8333, 27.1818, 283.0215, 25.4643, 49.1, 26.405, 0.0, 106.8214, 0.0, 201.1, 10.058, 51.7305, 19.898, 51.0833, 107.2687, 12.1207, 11.066, 499.05, 81.7538, 67.25, 168.6567, 17.9706], [0.0, 348.7018, 209.96, 603.0, 742.2031, 190.2452, 164.15, 155.4653], [44.5926, 54.875, 8.4423, 7.27, 10.297, 20.3538, 75.4848, 0.0, 188.914, 135.9732, 43.9143, 84.9917, 3.5269, 276.0714, 66.1, 42.9952, 48.9787, 60.2961, 86.7167, 0.0, 95.5299, 94.3396, 265.525, 486.8923, 37.8125, 76.1269, 5.5], [0.0, 333.2807, 164.84, 405.1111, 779.2188, 181.8317, 142.215, 407.7426], [657.0156, 197.5192, 262.91, 862.6535], [124.1724, 54.5943, 495.875, 624.5077, 1325.1875, 732.694, 708.2059], [74.0231, 297.1667, 57.8925, 67.3125, 199.6714, 156.5702, 0.0, 206.7857, 55.0312, 440.975, 90.9082, 423.1277, 102.7039, 6.4, 301.5373, 0.0, 0.0, 6.125, 33.5077], [0.0, 497.9286, 90.5312, 308.925, 278.3382, 472.7163, 258.1382, 620.4104, 37.2241, 40.1038, 220.5, 419.8462, 235.625, 282.7612, 154.5294], [225.6714, 248.3058, 122.8065, 282.0714, 192.9062, 361.3, 151.3768, 139.9645, 141.1283, 0.0, 512.3657, 43.6379, 115.4245, 281.775, 750.3385, 696.625, 719.4851, 224.8529], [294.7077, 427.697, 0.0, 130.6774, 606.1875, 597.9, 128.5868, 38.0108, 125.2857, 125.1875, 348.275, 235.9275, 338.078, 6.7993, 0.0, 0.0, 537.5075, 78.931, 43.2075, 0.0, 273.1846, 244.9688, 130.306, 75.8235], [587.7624, 874.1538, 828.7424, 66.7879, 1707.129, 755.5625], [0.0, 156.6667, 29.08, 280.8148, 179.5469, 100.7067, 108.155, 99.2079, 172.5, 409.7121, 21.7879, 535.6774, 346.3036, 187.5571, 287.5455, 28.0753, 351.8571, 49.625, 104.8, 150.2802, 160.0993, 125.2928, 118.3167, 0.0, 181.5896, 49.7414, 19.5094, 779.475, 483.4308, 125.2188, 219.6119, 975.7941], [14.0625, 105.6779, 212.235, 207.3267, 257.8154, 181.9697, 0.0, 472.5806, 413.8839, 422.3286, 205.124, 0.0, 250.1071, 42.3125, 1013.075, 245.4783, 407.5816, 189.9638, 0.0, 670.5672, 16.8448, 40.3208, 126.975, 263.1231], [813.3285, 908.4752, 576.3882, 85.15, 0.0, 1223.694, 125.0], [74.2812, 773.425, 577.6473, 858.1702, 447.8158, 335.05, 171.75, 1525.6343, 82.6792, 778.575, 332.8923, 1363.1562, 178.9104, 1084.9412], [304.4731, 1163.7946, 613.4, 489.8678, 0.0, 22.1429, 462.2188, 1996.6, 650.5652, 1237.7447, 383.8092, 0.0, 576.7537], [362.6167, 711.1562, 3816.4328, 1095.8793, 422.1792, 0.0, 3045.5385], [1266.2, 422.0145, 660.6842, 1161.8596, 2079.4444, 2028.0781, 704.1298, 462.53, 1040.2376, 141.6379, 75.0755, 671.2, 394.6615, 1758.4688, 758.6642, 1442.7059], [371.9505, 408.6308, 1264.9545, 66.4242, 1062.4409, 401.0982, 500.2143, 807.1405, 12.6559, 1439.3571, 46.2188, 1288.8, 498.4976, 795.5319, 545.3651, 0.0, 1244.7463, 52.069, 27.0849, 766.15, 1127.5692, 1246.1562, 773.9925, 1258.0294], [0.0, 0.0, 87.04, 596.3333, 1693.2031, 286.0096, 60.84, 204.8416, 558.0308, 1790.4545, 0.0, 294.3656, 1869.8125, 1514.3143, 134.2727, 26.0108, 1452.25, 162.0625, 2451.825, 733.43, 953.6738, 590.5559, 0.0, 2440.2015], [55.2415, 0.0, 413.8421, 51.36, 0.0, 1174.8438, 326.3462, 414.605, 530.7822, 596.6154, 658.3182, 0.0, 1085.7419, 1115.6339, 1257.3429, 1386.0826, 163.0323, 3156.0, 427.1562, 1747.95, 965.0773, 1470.1915, 781.8388], [935.5266, 0.0, 1230.4211, 787.4, 1223.1481, 2196.3281, 944.7644, 929.195, 1562.1584, 1338.8615, 2042.0909, 341.4242, 1953.172, 2227.2321, 3157.4714, 1858.3636, 160.3548, 2032.8929, 406.1562, 2644.825], [381.1449, 132.8158, 25.8772, 79.6, 0.0, 953.0156, 446.8654, 175.345, 764.8713, 626.5462, 1563.6515, 509.0909, 1674.828, 1051.5804, 2119.9571, 1042.8017, 240.6989, 2512.6786, 100.0312, 1266.7, 844.256, 970.9078, 443.0428, 269.7167, 0.0, 2701.1194, 127.4655, 64.6981, 147.45, 1808.9077, 1827.4688, 1136.3806, 1561.1765], [673.3429, 175.4348, 0.0, 638.6316, 79.76, 3401.6667, 1599.0156, 408.7163, 203.21, 1161.4455, 908.4, 1060.6212, 0.0, 3165.4516, 1986.5089, 1040.0714, 1173.3802, 0.0, 0.0, 92.3125, 1784.05, 1203.1159, 2044.8865, 641.3651, 433.25, 0.0, 3405.6716], [841.1571, 571.2367, 0.0, 486.5614, 105.0, 2844.1111, 1755.8281, 464.9567, 312.99, 543.6733, 1151.197, 0.0, 3744.6129, 1975.1339, 0.0, 0.0, 444.1875, 2657.6, 940.657, 1355.0284, 963.4474, 80.35, 0.0, 5376.2761, 0.0, 19.6321, 0.0], [2967.7969, 645.7019, 1215.025, 733.4455, 793.7769, 2300.9677, 2187.8661, 2627.0857, 1941.6612, 109.5484, 921.1429, 915.25, 3178.475, 1168.2464, 2114.5106, 1452.5954, 28.1667, 1079.7985, 1046.069, 167.566, 0.0, 3598.3538], [0.0, 729.9692, 2923.2424, 0.0, 1163.4624, 2692.9286, 2665.4143, 3153.1818, 86.957, 3733.5714, 320.6875, 5261.425, 2817.8019, 59.2467, 58.95, 0.0, 3996.6119, 271.8621, 275.1038, 1316.8, 4486.4154, 2834.4062, 1941.5373, 3500.2353]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

