created: 20230301221309000
creator: Drevarr
modified: 20230705163520850
modifier: drevarr
tags: ChartData
title: 202303012213_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Ezaff", "Smol Daddy Tika", "Sakura Shanks", "Mac Aaroni", "Legacy Of Mathus", "Raziel Umbra", "Ace Hammers", "Ark Darkness", "Kahless The Drunk", "Sygaldry Verdandi", "Arduran Illl", "Koralia Danai", "Bi\u00f1kx", "Xyntharos", "Mistwalker Caelon", "Xanvias Tseli", "Etchery Howls", "Grasszanine", "Black Raspberry Pie", "Tribal S", "Sp\u00edcy Cheese", "Gavann", "Mike The Archmagus", "Ravioli Fetabringer", "Jupi Jupi Jupi", "Bella Sassy", "What Charr U Saying", "Ryvalia Fazebringer", "Oo Dads Mad", "Arriasa", "Blanco Padre Guard", "Tegan Parker", "Eibh\u00ebar", "Jeckyll Mbs", "Fribble Bibble", "Demon Sekhmet", "Nazhul Naxxremis", "Newtype Khan", "Smol Gluvs", "Arcanophage Farra", "Panther B Me", "Be\u00eb", "Drevarr Moonwillow", "Skye Nightroad"];
const professions = ["Tempest", "Berserker", "Vindicator", "Tempest", "Berserker", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Scourge", "Vindicator", "Vindicator", "Berserker", "Druid", "Spellbreaker", "Chronomancer", "Druid", "Berserker", "Firebrand", "Weaver", "Firebrand", "Dragonhunter", "Firebrand", "Berserker", "Chronomancer", "Spellbreaker", "Druid", "Firebrand", "Tempest", "Chronomancer", "Spellbreaker", "Scrapper", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2026, 0, 1839, 0, 1839, 2143, 0, 257, 269, 0, 1798, 1713, 269, 304, 0, 0, 831, 0, 0, 0, 0, 1253, 0, 1732, 3338, 0, 0, 2565, 1866, 0, 0, 269, 1110, 4569, 4214], [0, 0, 1294, 0, 2149, 0, 0, 2496, 0, 1247, 2262, 4258, 0, 0, 0, 2465, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7510, 2954, 2600, 0, 0, 0, 0, 0, 2721, 0, 0, 0, 3391, 0], [5902, 0, 0, 0, 1248, 0, 0, 0, 6591, 0, 4169, 0, 0, 9142, 0, 0, 269, 1287, 6765], [2872, 0, 0, 2313, 2464, 305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 2616, 0, 0, 6896, 0, 3383, 1638, 0, 489, 0, 0, 1316, 3058, 0, 0, 3001, 0, 2492, 0, 0, 0, 4329], [0, 1514, 3830, 0, 0, 0, 0, 2223, 0, 8634, 674, 3437, 0, 0, 0, 0, 0, 0, 908, 0, 281, 0, 2616, 136, 0, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 269, 1248, 0, 5257, 2845, 0, 3305], [0, 1074, 0, 0, 3707, 1248, 0, 0, 0, 5376, 762, 0, 0, 0, 2463, 0, 2765, 0, 7017, 3437, 0, 0, 1248, 2140, 1248, 267, 0, 3464, 0, 0, 1248, 0, 0, 0, 451, 0], [0, 0, 230, 0, 2259, 0, 304, 1001, 0, 0, 1294, 12930, 0, 0, 0, 0, 0, 0, 0, 435, 1164, 0, 1248, 0, 499, 0, 269, 2719, 79, 0, 0, 267, 2422, 2786, 0, 0, 4177, 1248, 0, 3430, 0, 2296, 0], [0, 0, 0, 0, 3432, 0, 5832, 4146, 0, 0, 0, 5745, 0, 0, 0, 0, 3337, 0, 0, 0, 8154, 0, 5347, 438, 3199, 3203, 0], [0, 1583, 4684, 0, 0, 0, 304, 5330, 0, 0, 1692, 0, 240, 0, 0, 8056, 0, 0, 0, 0, 0, 0, 0, 0, 2616, 3437, 0, 1522, 3924, 933, 143, 0, 0, 0, 427, 3689, 0, 0, 0, 269, 451, 0, 269, 3642], [2345, 0, 1248, 0, 1169, 0, 0, 781, 236, 0, 7094, 5893, 0, 0, 4715, 2761, 0, 61, 0, 0, 0, 0, 7966, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1992, 0, 0, 4371, 0, 0, 0, 0, 3305], [1835, 0, 5995, 1699, 4367, 9527, 0, 9758, 3666, 4899, 0, 289, 0, 2762], [0, 3280, 5317, 0, 0, 0, 0, 1234, 0, 2387, 2465, 0, 0, 0, 1223, 424, 0, 3900, 0, 0, 0, 0, 0, 0, 3686, 0, 4180, 0, 1248, 1848, 1248, 0, 0, 6095, 1587, 0, 1487, 0, 0, 1248, 0, 269, 2469], [32469, 0, 7471, 6208], [429, 3706, 1063, 466, 0, 0, 1196, 0, 0, 0, 3068, 7126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4850, 0, 0, 3404, 2490, 0, 3385, 4180, 2721, 0, 2465, 1279, 0, 2461, 4180, 0, 0, 0, 2465], [0, 2465, 0, 3308, 0, 0, 269, 1293, 0, 3374, 0, 0, 0, 0, 0, 0, 0, 0, 550, 0, 0, 166, 0, 0, 0, 17792, 0, 0, 3342, 367, 0, 0, 206, 0, 2244, 8113, 0, 1062, 3741, 918, 3345, 0, 0], [2356, 6827, 2484, 0, 3522, 0, 0, 0, 0, 0, 634, 1816, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1232, 0, 0, 6227, 0, 6199, 0, 945, 0, 0, 0, 7996, 0, 0, 0, 1236, 0, 2646, 3391, 0, 0, 5854], [3194, 8226, 3285, 0, 1244, 2734, 507, 4818, 0, 3897, 2713, 3975, 0, 0, 0, 0, 269, 269, 0, 5385, 0, 64, 4387, 0, 8852, 538, 0, 1517, 538], [5244, 0, 3383, 6773, 4633, 2246, 6431, 0, 3408, 4090, 4516, 0, 2695, 3260, 3431, 2528, 3437, 3437, 0], [1444, 464, 0, 0, 0, 0, 1248, 3000, 0, 4848, 1248, 6430, 0, 0, 0, 2537, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14671, 0, 1253, 0, 1248, 1248, 0, 447, 1248, 0, 3661, 0, 3433, 3431, 269, 0, 4061, 405, 3533], [0, 3732, 0, 0, 0, 0, 0, 570, 0, 3169, 2775, 2037, 0, 0, 0, 4208, 0, 0, 0, 2634, 27, 0, 0, 2616, 7806, 0, 5371, 2716, 1238, 0, 6367, 183, 4149, 0, 269, 0, 4897, 0, 1983, 776, 0, 1342, 1272], [4006, 1214, 0, 0, 0, 3337, 0, 0, 2467, 0, 0, 0, 4661, 0, 0, 20232, 0, 2369, 0, 0, 0, 271, 2616, 0, 2465, 4718, 0, 0, 816, 4180, 3284, 255, 269, 3459], [5974, 4116, 0, 2458, 2309, 1054, 1986, 0, 1245, 954, 6887, 0, 269, 269, 0, 0, 0, 0, 0, 6069, 0, 0, 0, 0, 5879, 0, 2899, 269, 811, 0, 1233, 269, 3736, 2465, 371, 0, 4664, 1479, 3652, 269, 248, 269, 0], [269, 1170, 2949, 4, 2745, 1940, 2734, 1935, 127, 275, 1055, 0, 171, 269, 3710, 538, 0, 2052, 269, 1143, 456, 5989, 0, 304, 7520, 1710, 459, 162, 371, 501, 4245, 935, 538, 573, 0, 3654, 4071, 490, 269, 223, 0, 8119], [1047, 6480, 2042, 0, 0, 1248, 1750, 3278, 0, 1248, 2800, 561, 0, 0, 0, 994, 0, 0, 0, 0, 5086, 0, 1248, 0, 0, 8847, 0, 4439, 0, 1125, 0, 999, 1884, 5030, 3580, 3417, 0, 1794, 1042, 0, 0, 0, 234, 4075], [0, 3886, 0, 0, 0, 1248, 0, 4537, 1248, 2670, 6350, 0, 0, 0, 525, 2399, 998, 0, 1218, 0, 2461, 0, 1862, 0, 0, 15680, 0, 0, 0, 0, 3930, 0, 0, 3468, 6135, 0, 0, 2074, 0, 2044, 1241, 2143, 0, 175], [4931, 0, 3097, 0, 5200, 0, 4966, 3917, 0, 0, 3942, 4179, 0, 1286, 0, 2497, 0, 0, 1198, 0, 5079, 0, 4685, 0, 0, 5272, 0, 243, 2576, 0, 0, 997, 0, 3509, 0, 4149, 1248, 0, 0, 0, 1086, 269, 1295, 3660], [0, 608, 5375, 304, 3808, 1091, 2909, 0, 0, 269, 4753, 0, 0, 0, 0, 0, 1248, 0, 2616, 6250, 0, 4813, 3337, 7, 2255, 140, 2566, 5745, 1248, 1248, 0, 5428, 5709, 2877, 9806, 0, 403, 3574], [6171, 3357, 2466, 1561, 4992, 0, 3648, 6713, 0, 3579, 0, 274, 0, 0, 0, 1247, 78, 0, 269, 0, 4017, 0, 5361, 0, 0, 15537, 0, 0, 0, 232, 1177, 0, 0, 2465, 0, 5318, 0, 2915, 269, 1248, 1248, 0, 3437, 825], [794, 13314, 3866, 1422, 4354, 3444, 1815, 7174, 0, 13068, 5414, 14623, 0, 8845, 0, 0, 3454], [12963, 6170, 8607, 5055, 4969, 6212, 269, 0, 278, 0, 9724, 269, 0, 0, 7948, 0, 0, 8442, 0, 0, 0, 305, 0, 0, 622, 0, 3437, 0, 0, 3383, 0, 4334, 0, 0], [0, 3437, 304, 51, 0, 0, 0, 5568, 0, 3309, 8885, 6147, 0, 6778, 0, 0, 0, 0, 0, 0, 0, 0, 2761, 4628, 0, 0, 2605, 0, 1298, 7592, 0, 9303, 418, 6370, 0, 4168, 1517, 0, 7342, 538], [0, 5164, 2427, 2, 1241, 5221, 1248, 7191, 0, 1794, 369, 1409, 0, 0, 0, 179, 0, 0, 0, 5962, 0, 0, 5174, 1248, 3701, 1248, 2232, 4631, 1046, 5879, 4331, 2496, 0, 3477, 2234, 269, 5933, 1242, 0, 8596], [3348, 3704, 2465, 2812, 0, 1146, 3521, 3540, 0, 3126, 1248, 2465, 0, 0, 0, 0, 0, 0, 142, 0, 2476, 0, 10224, 0, 17262, 0, 3706, 978, 1248, 1248, 0, 0, 3971, 0, 9986, 0, 1244, 374, 0, 697, 1280, 0, 4553], [3859, 3986, 7011, 2616, 2177, 0, 0, 3053, 993, 6952, 2616, 19618, 6266, 0, 5400, 1791, 2613, 177, 6793, 1333, 201, 0, 7511, 2937], [1174, 10760, 3056, 253, 379, 1751, 2039, 6263, 0, 1544, 3412, 5562, 0, 0, 0, 1248, 0, 132, 2575, 0, 711, 0, 368, 0, 454, 17745, 0, 2895, 715, 145, 2776, 1512, 753, 5222, 4511, 4621, 160, 4106, 2058, 6187, 0], [4726, 2134, 8083, 5413, 3605, 0, 269, 0, 7873, 450, 0, 0, 3337, 3323, 0, 4508, 0, 21076, 0, 3931, 0, 6674, 5674, 2414, 411, 0, 0, 3223, 269, 2265, 2952, 0, 0, 4400], [5650, 11461, 4722, 2596, 7025, 3474, 1248, 11031, 0, 14359, 6752, 15208, 0, 23, 0, 7259, 0, 0, 0, 0, 0, 0, 29873, 0, 3194, 0], [3326, 14097, 0, 682, 3559, 3922, 4180, 11537, 151, 5088, 2947, 17724, 174, 0, 0, 3755, 852, 0, 269, 0, 4695, 642, 809, 0, 0, 36100, 0, 8664, 0, 3000, 3630, 4474, 5087, 4180, 0, 7259, 0, 6395, 4184, 839, 108, 4299, 8807, 2355], [3449, 15557, 9976, 359, 2465, 6208, 7253, 4520, 1248, 1215, 9377, 10910, 0, 0, 1140, 4934, 0, 1563, 0, 1433, 0, 0, 0, 0, 29759, 0, 2616, 8381, 8361, 4691, 0, 6562, 14542, 8483, 4547, 692, 12389, 4677, 3438, 2313, 0, 7041, 4651], [3135, 13856, 3437, 0, 1248, 3973, 0, 2330, 465, 3423, 5853, 8800, 0, 0, 0, 3437, 0, 0, 9377, 0, 7606, 4474, 9682, 0, 0, 24812, 0, 9802, 15108, 1667, 2000, 1999, 3493, 8002, 15820, 0, 7500, 10087, 6119, 5412, 6300, 11652, 8122], [7195, 19115, 7133, 0, 5494, 3082, 11831, 4689, 0, 4571, 9413, 14821, 0, 0, 0, 4004, 5944, 0, 0, 0, 7808, 0, 5797, 0, 304, 36258, 0, 4942, 4135, 2709, 3471, 3299, 710, 11922, 2734, 12279, 0, 6905, 5228, 5754, 4725, 3474, 4643, 3888], [15144, 18779, 5813, 851, 8286, 7181, 6057, 12688, 0, 9870, 8823, 3478, 634, 0, 0, 4976, 467, 0, 3123, 0, 3497, 1248, 10364, 0, 0, 22306, 0, 18938, 11108, 5809, 6730, 6447, 4320, 9703, 6455, 12442, 0, 7414, 13123, 5997, 7437, 2226, 4260, 16186], [3348, 5515, 10849, 3, 4461, 4816, 6692, 2769, 0, 3581, 1815, 8757, 78, 3, 0, 5033, 23, 51, 3902, 0, 5319, 205, 10614, 28, 2617, 22030, 665, 1508, 2728, 4478, 2666, 9471, 1825, 33848, 10998, 18783, 250, 20457, 14577, 19323, 35143, 5384, 1399, 6943], [5907, 14604, 11430, 1189, 6321, 7090, 15373, 10032, 0, 19838, 15348, 0, 968, 0, 0, 2605, 979, 1366, 5971, 0, 6509, 0, 1643, 0, 0, 35295, 1482, 17703, 16004, 12336, 1296, 13944, 7360, 17574, 6230, 8691, 28, 13923, 22264, 82, 5749, 13638, 0, 12027]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

