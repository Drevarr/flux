created: 20230222220539000
creator: Drevarr
modified: 20230705163519884
modifier: drevarr
tags: ChartData
title: 202302222205_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Pixil Ranger", "Kosair", "Cat Wigglebooty", "Mac Aaroni", "Tootsie Pop Bringer", "Zadie Miststep", "Mike The Archmagus", "Fribble Bibble", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Druid", "Firebrand", "Scrapper", "Tempest", "Scrapper", "Tempest", "Tempest", "Scrapper", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[686.2234, 602.9165, 35.1109], [50.5499, 33.6848, 54.054, 71.208, 119.1619, 204.8138, 44.5824, 43.5072, 278.2156, 96.5491, 407.4322, 74.2863], [84.7556, 119.732, 61.0394, 0.0, 320.0512, 142.4213, 73.9968, 32.1024, 417.3233, 153.2448, 410.1494, 122.5854], [98.0297, 59.9104, 97.4912, 39.4809, 378.1319, 195.4965, 90.7008, 59.712, 310.5497, 288.9619, 445.3142, 61.0981], [17.8072, 0.0, 51.7532, 18.5932, 329.4098, 139.8701, 150.7584, 308.544, 630.8707, 170.8704, 110.1298, 381.0741], [107.9266, 82.5248, 145.6409, 132.0513, 189.6018, 207.1431, 177.4464, 74.4576, 727.1624, 307.7626, 794.0851, 157.4801], [70.0728, 70.3888, 218.2673, 330.1678, 252.8976, 284.5098, 146.8416, 70.4256, 803.9115, 479.9059, 631.0483, 100.0574], [252.3885, 155.2964, 172.8896, 241.0786, 635.0302, 548.8876, 413.8368, 207.5904, 1581.174, 788.5498, 1658.1802, 915.9529], [437.0612, 547.8664, 873.8541, 980.0337, 484.4928, 487.488, 2417.242, 1098.6624, 2366.1115, 725.4807], [429.521, 274.5992, 333.9428, 253.9752, 1067.1707, 655.6481, 531.456, 142.0032, 2794.7695, 1150.56, 3340.656, 572.3246]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

