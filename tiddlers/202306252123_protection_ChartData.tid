created: 20230625212343000
creator: Drevarr
modified: 20230705163535813
modifier: drevarr
tags: ChartData
title: 202306252123_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Tegan Parker", "Eibh\u00ebar", "Tuff Spuffles", "Belvyn Brightblade", "Black Raspberry Pie", "Primal Clone", "Rahani Sunray", "Seiker Novus Terra", "Ryvalia Fazebringer", "Venomina The Siren", "Miphest\u00f6", "Enter Effore", "Aronorf Xideliesi", "Fribble Bibble", "Drevarr Moonwillow", "Crusader Siolith", "Traidoruns Maximus", "Yummy Kiwi", "Bella Sassy", "Tika Fiery", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.2771, 94.1741, 29.2687, 31.255, 25.3344, 22.9639, 14.553, 34.4333, 34.7998, 22.4808, 29.7964, 3.4334, 0.0, 17.5834, 38.6309, 26.4404, 8.4882, 22.0229, 31.8931, 37.1043, 15.898, 10.8763, 36.096, 1.6282, 30.8832], [53.8902, 108.7486, 37.0665, 16.262, 27.8208, 16.4532, 18.9728, 20.4624, 26.8221, 4.7932, 0.0, 7.5837, 31.657, 26.8858, 51.0408, 56.9772, 0.0, 23.8853, 10.0666, 18.2045, 12.8625, 39.2026, 33.7648, 0.9922, 47.0503], [60.9325, 39.0251, 10.1943, 9.2438, 66.6778, 46.6944, 86.0021, 68.2888, 19.082, 83.8546, 70.8893, 43.9942, 50.987, 50.3578, 67.2288, 40.2461, 93.1333], [0.0, 13.7798, 0.0, 0.0, 60.0593, 11.9927, 60.8227, 25.115, 0.0, 35.8058, 5.7951, 15.0543, 81.1008, 86.3846, 168.6682, 154.8253, 52.9197, 84.7858, 50.4739], [91.9249, 189.4693, 81.5037, 122.717, 68.4096, 75.6545, 42.581, 124.0445, 133.3555], [51.3785, 40.8023, 69.2899, 44.0907, 16.0341, 62.8479, 4.0185, 24.2227, 48.5683, 70.9536, 91.5398, 59.3513, 36.5025, 92.5613, 40.7837, 26.6746, 49.5463, 27.4099, 69.3344, 30.7061, 78.0717], [20.7129, 115.3352, 67.35, 44.65, 23.7216, 60.3621, 11.3999, 46.3579, 23.8017, 14.5638, 28.9737, 13.2399, 6.5273, 34.8826, 51.5827, 85.6685, 79.3212, 15.792, 65.5099, 56.9184, 20.9857, 27.1656, 57.1306, 66.4768, 7.0978, 35.5123], [53.8902, 129.9098, 20.0822, 53.909, 10.8192, 11.6081, 39.1314, 58.7059, 13.526, 42.8882, 21.0654, 12.9414, 40.6426, 20.6842, 44.569, 63.5873, 0.0, 62.3904, 47.7926, 58.7221, 82.2686, 13.1074, 70.0864, 14.9587, 95.0678], [62.6886, 77.2171, 34.7699, 74.589, 58.3296, 19.1786, 56.8915, 44.6645, 62.6068, 89.8542, 47.4183, 16.7899, 41.6563, 57.1277, 135.6418, 82.0211, 0.0, 55.127, 69.384], [17.2302, 164.9448, 54.4248, 44.415, 35.112, 47.5932, 32.2322, 74.5114, 55.0559, 37.1229, 45.571, 18.9504, 25.6187, 69.8112, 54.5011, 104.4835, 55.9065, 39.2497, 79.1054, 45.911, 64.8535, 65.1357, 55.2182, 95.4288, 49.5571, 83.0462], [27.9533, 188.208, 64.5193, 91.65, 19.6896, 49.1578, 34.9272, 95.256, 90.1512, 47.1806, 0.0, 31.4291, 105.1546, 66.576, 139.5115, 67.963, 0.0, 139.9128, 20.6035, 52.8436, 67.9654, 99.7594, 74.1472, 24.8294, 109.8531], [102.0981, 343.6233, 79.0468, 0.0, 64.5452, 102.2414, 137.7218, 70.61, 0.0, 19.6951, 132.9869, 114.6202, 147.7848, 162.4129, 15.9729, 62.111, 108.0038, 74.8406, 66.3705], [101.3722, 9.4329, 35.5794, 227.3126, 120.2381, 190.3522, 134.2968, 44.744, 167.1504, 155.3731, 152.7786, 132.741, 76.2936, 181.3824, 20.0213, 253.9057], [61.5888, 206.5664, 65.6943, 103.823, 58.3968, 79.9445, 76.5919, 138.5798, 71.3068, 81.9848, 24.1956, 76.5542, 138.793, 76.6445, 64.3181, 148.5876, 33.1138, 85.2979, 64.9152, 79.5182, 76.9178, 41.9117, 133.4048, 30.528, 121.8057], [121.6195, 355.395, 75.041, 90.428, 87.024, 115.223, 13.0168, 8.185, 89.9214, 15.7035, 49.148, 38.8737, 60.2925, 91.4227, 66.2112, 159.9278, 63.6339, 56.5716, 131.8114, 96.9024, 101.0728, 92.4556, 87.8074, 57.152, 26.6102, 198.5647], [208.0455, 407.2468, 140.041, 101.849, 24.9648, 69.1944, 16.6551, 105.0638, 78.4309, 23.5683, 69.0361, 1.3536, 21.3175, 102.5741, 58.0762, 145.9166, 79.135, 20.9737, 105.179, 85.3306, 160.6798, 70.6409, 66.6523, 123.1024, 9.6926, 121.0457], [67.546, 302.4221, 97.9005, 215.683, 75.5664, 86.8084, 28.6748, 92.857, 88.7723, 0.0, 35.5196, 15.0588, 60.4435, 131.5584, 155.4048, 180.611, 185.0362, 31.1892, 148.5264, 126.7728, 112.9563, 169.0133, 141.3922, 191.9104, 41.2891, 305.516], [129.5015, 366.1858, 75.3081, 205.766, 79.2288, 10.4473, 93.3548, 303.2669, 151.7074, 0.0, 202.4582, 22.2921, 3.9239, 163.8605, 137.3107, 191.2862, 201.0494, 204.3518, 183.6442, 132.2985, 177.0394, 114.5002, 232.0672, 88.9637], [87.7091, 342.7824, 73.599, 147.345, 104.1936, 185.9315, 50.1809, 234.8942, 131.8124, 149.5186, 15.4395, 66.2539, 171.3715, 152.4134, 204.0965, 138.5328, 11.038, 130.7405, 161.7235, 183.2458, 162.9936, 154.0214, 321.5552, 105.4234, 336.261], [318.3004, 564.2036, 102.1733, 99.499, 84.84, 164.8855, 78.9365, 188.2541, 97.6693, 24.1251, 168.584, 28.0872, 69.9891, 144.4147, 99.2256, 105.6178, 172.1419, 35.3675, 159.3749, 122.6333, 137.3553, 115.8654, 144.181, 230.0368, 64.7194, 308.4868], [285.7647, 573.593, 216.2037, 203.181, 124.3872, 184.6697, 70.4743, 250.7702, 89.6587, 201.2063, 22.1229, 124.2072, 173.7216, 131.0362, 354.2165, 187.7827, 25.8923, 222.3706, 103.9584, 171.3623, 157.6942, 118.6834, 245.2272, 58.7664, 161.6015], [161.304, 624.0434, 123.0032, 152.374, 128.856, 172.5065, 107.6653, 366.8414, 186.0148, 0.0, 144.7254, 37.1817, 39.4656, 174.4128, 166.3488, 237.5232, 225.5813, 120.0028, 238.8062, 186.3254, 87.9883, 169.0647, 122.9861, 204.6192, 103.9987, 245.6149], [67.2711, 636.656, 140.5751, 254.364, 167.9328, 148.6341, 128.7671, 241.2446, 205.1547, 11.9538, 171.696, 40.1427, 124.924, 194.7802, 214.6483, 372.8981, 251.37, 253.0536, 247.8067, 219.8444, 243.9244, 117.1694, 407.96, 53.3222, 419.0999]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

