created: 20230429215910000
creator: Drevarr
modified: 20230705163527358
modifier: drevarr
tags: ChartData
title: 202304292159_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Rudjulin", "V\u00e8\u00e9la", "Belvyn Brightblade", "Skye Nightroad", "Pappaa Fooolery", "Husky Guard", "Kenley Ellesmera", "Fallendruid", "Stark Gandalf", "Owl Scowls", "Johosh The Great", "Kary\u00edna", "Marmacyta", "Stark Gandalf", "Miphest\u00f6", "Yuuka Chou", "Kaotic Reaper Z", "Cedryn X", "Kary\u00edna", "Morv\u00e4rth", "Hauzzy", "Jupi Jupi Jupi", "Lord Erin The Wise", "Tika Fiery", "Necrotic Windrunner", "Misterjiffy", "Zenek Tryst", "Outer Ocean", "Madame Charrlotte", "Smol Gluvs", "Ria Zerria", "Xanvias Tsolice", "Be\u00eb"];
const professions = ["Willbender", "Scourge", "Firebrand", "Scrapper", "Scrapper", "Dragonhunter", "Druid", "Tempest", "Tempest", "Scrapper", "Firebrand", "Vindicator", "Firebrand", "Weaver", "Tempest", "Tempest", "Tempest", "Berserker", "Renegade", "Reaper", "Berserker", "Firebrand", "Weaver", "Firebrand", "Scourge", "Renegade", "Weaver", "Berserker", "Scourge", "Scourge", "Scourge", "Weaver", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 26.7917, 18.1071, 7.863, 2.7794, 0.0, 22.4864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 43.2826, 6.0435], [5.04, 4.8326, 67.4359, 4.9138, 174.0, 9.0652, 37.8768], [1.6042, 0.0, 6.254, 5.0476, 0.0, 62.5833, 3.0571, 6.3653, 8.4081, 0.0, 32.2568], [0.0, 16.0317, 0.0, 0.0, 15.7292, 18.8143, 6.0502, 15.8676, 6.4138, 18.0934, 1.3867, 0.0, 0.8597, 1.7308, 12.8448, 0.0, 6.0435, 9.6739], [2.6984, 0.0, 79.9167, 36.7, 18.035], [0.0, 12.1111, 7.9365, 1.3158, 26.3542, 5.2143, 11.411, 14.0, 9.3502, 2.2267, 1.1946, 19.5, 13.8966, 4.2727, 0.0, 8.7681], [0.0, 0.0, 2.4018, 9.9743, 0.0, 22.7121, 0.8267, 0.0, 15.5837, 129.7051, 0.0, 0.0, 0.9783, 3.7464], [0.0, 15.1905, 0.0, 17.125, 5.8929, 16.0654, 9.1838, 28.4483, 20.1712, 0.0, 0.0, 12.1855], [26.875, 18.3448, 16.1907, 0.0, 0.0, 0.9955, 138.1154, 0.0, 4.8478, 13.7754], [0.0, 11.619, 2.6825, 0.7303, 27.9583, 8.4857, 17.3592, 8.7426, 26.6148, 0.0, 0.0, 0.1538, 0.6154, 2.3276, 2.0303, 3.413, 3.8913], [0.0, 10.5873, 0.0, 0.0, 16.0417, 6.8643, 22.7199, 10.3051, 0.0, 13.9611, 0.0, 0.0, 0.0, 23.2308, 0.0, 0.0, 0.0], [0.0, 9.0, 3.3016, 3.6316, 37.625, 10.6214, 15.3318, 5.2574, 11.2759, 13.4436, 0.0, 0.0, 1.9774, 33.4231, 88.0, 1.9394, 0.0, 1.1667], [0.0, 30.0217, 195.442], [0.0, 8.3289, 120.3125, 12.3071, 30.417, 2.6061], [0.7778, 44.6667, 0.0, 0.0, 6.375, 6.6571, 16.0959, 25.8493, 6.0345, 20.4942, 0.0, 0.8869, 23.5256, 0.0, 0.0, 12.6522, 0.0], [25.8254, 0.0, 0.0, 67.9792, 0.0, 26.0213, 30.011], [5.625, 31.2357, 15.0685, 19.6471, 27.5862, 20.214, 0.0, 0.0, 0.0, 28.1154, 6.3103, 0.0, 8.2391, 25.2681], [0.0, 0.0, 2.6984, 0.9079, 139.9583, 7.8, 24.2131, 0.0, 18.2101, 0.0, 0.0, 0.0, 0.0, 92.587, 15.9348], [169.619, 202.1458], [2.8519, 56.381, 11.3333, 2.1842, 47.6458, 36.5357, 13.1659, 63.2759, 20.0467, 5.12, 24.6316, 0.0, 39.3077, 17.1207, 83.1515, 51.3261, 32.3841], [0.0, 42.2381, 0.1746, 0.3355, 51.5625, 30.4786, 50.9848, 15.8824, 23.5837], [0.0, 202.6042, 22.9214, 31.7519, 42.6765, 19.1379, 23.4436, 3.4933, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0507], [0.0, 93.9524, 4.4921, 10.0461, 161.5417, 15.2214, 33.2207, 55.7721, 94.6207, 30.9805], [0.0, 33.4921, 1.5238, 0.0, 16.75, 10.7071, 29.1294, 95.0257, 137.5172, 25.7938, 8.5467, 0.0, 3.141, 24.5, 16.0606, 1.6522, 24.7899], [0.0, 0.0, 70.375, 35.3571, 40.2207, 41.0074, 6.8276, 70.3113, 5.8933, 0.0, 2.4796, 4.6667, 27.0345, 2.1818, 7.1087, 18.7681], [147.7937, 0.0, 65.5833, 47.4214, 53.2207, 82.5625, 39.1362, 18.2, 0.0, 12.1584, 64.2179], [22.4603, 3.3651, 1.8618, 17.6042, 24.8429, 64.2557, 93.2941, 106.6552, 97.5019], [0.0, 243.9048, 0.0, 0.7171, 140.9167, 45.7286, 77.1446, 55.886, 157.8621, 95.8677], [113.6651, 143.8824, 32.069, 47.9805, 42.48, 10.0498, 0.0], [0.0, 112.3333, 1.8889, 3.0329, 171.8125, 111.4286, 45.6377, 58.0147, 12.0, 53.8794, 0.0, 0.0, 0.7466, 90.7692, 135.9138, 284.6364, 72.1087, 99.413], [0.0, 85.4444, 1.3651, 22.3618, 220.2083, 35.6643, 86.79, 48.0515, 33.8966, 116.0233, 0.0, 0.0, 0.8416, 66.3846, 4.5862, 3.7879, 2.5217, 78.0942], [12.1524, 90.3646, 37.5556, 114.1746, 0.6032, 6.9671, 156.0208, 36.8714, 80.7062, 53.8676, 67.3103, 72.4163, 4.7067, 0.0, 0.0, 172.2949, 34.069, 31.1212, 37.6522, 53.6884], [0.0, 186.5397, 1.4444, 0.0987, 198.625, 122.0571, 84.8463, 153.4816, 8.7586, 75.9883, 1.8133, 2.1855, 150.2949, 15.5345, 0.0, 10.9783, 57.9348]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

