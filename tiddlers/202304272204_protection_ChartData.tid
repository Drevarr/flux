created: 20230427220456000
creator: Drevarr
modified: 20230705163527047
modifier: drevarr
tags: ChartData
title: 202304272204_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Elusive In The Mist", "Malfax Jinn", "Vinnakh", "Joint Lee", "Blaize Harlot", "Morv\u00fcs", "Zadie Miststep", "Wanguazen", "Solikai", "Hyde En Sikh", "Primal Clone", "La Morte Vivante", "Mac Aaroni", "Fuzzy Toe Beans", "Choo Sayaccho", "Klenga", "Xkaet", "Drevarr Moonwillow", "Al Darasuum", "Evil Stepmother", "Koralia Danai", "Johosh The Great"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Scourge", "Spellbreaker", "Tempest", "Guardian", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 11.8524, 0.0, 98.7109, 23.6435, 71.7432, 133.6003, 39.0744, 24.8411, 0.0, 52.0128, 5.5053], [7.14, 16.2674, 0.0, 24.0649, 62.0438, 141.7219, 0.0, 82.6821, 82.7954, 101.0016, 19.0726], [29.4187, 130.081, 69.0606, 86.4653, 133.1044, 67.0118, 38.2106], [84.6216, 138.2951, 30.7622, 94.4285, 247.8442], [64.9506, 30.15, 25.8336, 31.8362, 34.1258, 42.3198, 53.4798, 38.0324, 26.8934, 80.7484, 20.4229, 28.7774, 72.6883, 31.7844, 18.6422, 13.8149, 37.8605, 7.0611], [224.4528, 35.2634, 50.2704, 49.1727, 32.4691, 47.8278, 166.4137, 72.9708, 45.0542], [176.4048, 21.8527, 30.9312, 30.9412, 20.1886, 72.4761, 110.2358, 28.9408, 10.1237, 36.923, 0.0, 36.3125, 77.2906, 12.9276, 12.1243, 0.0, 64.1088], [61.6216, 53.6081, 185.0093, 416.6381, 38.8282, 25.6877], [164.9076, 87.4109, 18.648, 37.2065, 0.0, 95.8851, 106.5742, 9.0916, 74.9616, 114.0124, 9.2557, 27.8957, 63.2131], [206.9496, 50.7967, 34.848, 18.1626, 42.5121, 53.0604, 98.2872, 29.0836, 47.6818, 73.0145, 14.3125, 37.595, 86.495, 38.7099, 28.2596, 32.1563, 40.0378, 24.5453], [206.5206, 88.1827, 34.848, 27.9393, 0.0, 35.2971, 149.4544, 37.4136, 54.6756, 52.7234, 17.9697, 53.8675, 107.8819, 15.0174, 10.0732, 55.2598, 37.2557, 17.049], [108.192, 163.9084, 51.3356, 130.9013, 430.1741, 58.5144, 70.7402, 86.143, 32.1754, 12.6752], [223.1658, 90.3535, 18.5184, 35.4302, 62.2054, 9.5013, 240.5146, 100.2456, 28.4004, 110.7691, 9.1956, 20.521, 192.0758, 9.7686, 11.1215, 16.644, 41.3683, 20.9114], [0.0, 0.0, 63.8469, 196.6708, 68.5916, 32.0326, 286.6525, 58.8154, 22.2845, 525.0614, 50.1795, 37.0565, 38.6159], [141.0864, 113.8721, 257.297, 58.8906, 151.5024, 407.569, 46.8018, 110.4859, 82.7482, 145.273, 11.4566], [323.6376, 48.4812, 48.7728, 21.0681, 0.0, 69.4926, 139.8184, 94.01, 55.1006, 223.3678, 28.279, 160.4002, 253.6646, 71.1747, 13.3549, 39.4174, 148.176, 16.8314], [174.9182, 86.2272, 98.3178, 36.9953, 189.7965, 266.5318, 92.3916, 104.9076, 179.6256, 27.6469, 111.4224, 366.6902, 9.2583, 134.7801, 127.5408, 41.2474, 49.3952], [270.1842, 177.475, 30.4848, 61.7447, 128.4587, 18.3141, 325.7932, 144.7992, 67.5814, 168.6485, 8.2324, 143.4864, 375.624, 54.1647, 30.493, 104.5316, 88.9056, 15.9283], [213.8338, 513.513, 47.1065, 331.3013, 651.8938, 93.2634, 132.6378, 231.7422, 269.8618, 25.568], [266.0658, 185.1934, 85.32, 96.6929, 0.0, 68.85, 358.5556, 139.944, 161.747, 403.1597, 71.7434, 101.0818, 451.8317, 97.3701, 23.5649, 60.2577, 230.5498, 19.3011], [351.4368, 177.5714, 94.9104, 143.7726, 0.0, 143.1162, 348.8232, 187.3536, 143.393, 348.4404, 66.807, 308.4557, 505.1635, 134.7192, 91.6158, 51.0634, 322.9632, 39.9949], [579.4074, 128.6561, 68.112, 89.1883, 33.1181, 185.895, 310.5683, 296.0244, 152.8598, 363.4092, 75.6865, 205.3699, 539.6803, 92.6316, 60.1656, 111.9813, 276.2726, 37.0464]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

