created: 20230513000456000
creator: Drevarr
modified: 20230705163529652
modifier: drevarr
tags: ChartData
title: 202305130004_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Artakama Nahid", "Husky Guard", "Xanvias Einzbern", "Demon Dalham", "Tika Fiery", "Cedryn X", "Bella Sassy", "High Sorcer Baradun", "Nazhul Naxxremis", "Blancooo Padreee", "Mike The Archmagus", "Ryvalia Fazebringer", "Miphest\u00f6", "Domitia Gravestorm", "Leetle Dim", "Eibh\u00ebar", "Venomina The Techie", "Kmpek", "Grasszanine", "Tegan Parker", "Ark Darkness", "Zaidy Sagemist", "Drevarr Moonwillow", "Jupiter Four", "Newtype Khan", "Panther B Me", "Rina Of Theros", "Smol Gluvs", "Be\u00eb", "Cyclotechnist Farra"];
const professions = ["Chronomancer", "Tempest", "Dragonhunter", "Berserker", "Dragonhunter", "Firebrand", "Berserker", "Firebrand", "Tempest", "Scourge", "Spellbreaker", "Weaver", "Chronomancer", "Tempest", "Spellbreaker", "Chronomancer", "Chronomancer", "Scrapper", "Vindicator", "Spellbreaker", "Tempest", "Firebrand", "Vindicator", "Scrapper", "Chronomancer", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 980, 1671, 11002, 1101, 3182, 0, 679, 5177, 0, 0, 3902, 0, 0, 5746, 261, 0, 3488, 0, 0, 2279, 0, 5734, 0, 0], [0, 6321, 8137, 10988, 4736, 1444, 0, 0, 2561, 0, 0, 0, 4147, 0, 0, 1887, 1352, 0, 1163, 0, 0, 0, 0, 2844, 0, 0, 0], [2303, 0, 5917, 1728, 0, 1101, 0, 0, 2202, 200, 4809, 0, 0, 483, 5068, 0, 6172, 0, 1999, 0, 4779, 0, 9281, 0, 0, 0], [0, 0, 1539, 1746, 2456, 1101, 269, 304, 9193, 2718, 4289, 0, 0, 4183, 1352, 0, 7503, 0, 1091, 0, 8183, 0, 165, 0, 0, 0], [0, 0, 9182, 1451, 0, 1075, 956, 0, 8305, 0, 0, 3687, 0, 0, 4856, 3211, 0, 6386, 0, 0, 0, 643, 0, 6720, 0, 0, 0], [0, 1184, 1999, 17430, 0, 2493, 0, 0, 6348, 0, 0, 0, 2202, 0, 0, 4115, 1641, 0, 3261, 0, 0, 0, 1091, 0, 4772, 0, 0, 261], [0, 4290, 1701, 2119, 1101, 8308, 0, 1101, 5226, 0, 0, 0, 0, 0, 0, 3387, 0, 0, 0, 0, 0, 10196, 0, 11058, 0, 0, 0], [0, 0, 6627, 7490, 0, 0, 0, 0, 9985, 0, 0, 0, 2202, 0, 0, 3465, 3276, 0, 7431, 0, 0, 0, 3759, 0, 4694, 0, 0, 0], [0, 865, 10834, 19915, 3826, 3262, 0, 0, 12126], [570, 0, 26457, 6721, 8030, 9684, 0], [1333, 3401, 2099, 7640, 0, 4761, 0, 103, 1408, 1511, 0, 6560, 0, 1139, 1738, 0, 2154, 0, 0, 8024, 10959, 0, 0, 0], [2633, 783, 5821, 11338, 0, 158, 7955, 298, 289, 2686, 2566, 0, 11036, 0, 1380, 2557, 261, 4365, 0, 0, 0], [183, 0, 2944, 6786, 261, 2498, 0, 1, 12266, 0, 0, 10676, 1082, 0, 4604, 1013, 0, 5776, 0, 1084, 0, 2790, 0, 2182, 0, 0, 0], [0, 0, 6702, 9278, 0, 0, 269, 89, 4525, 0, 0, 2188, 0, 13717, 3033, 0, 7842, 0, 1188, 0, 2626, 1091, 1655, 0, 0, 0], [0, 1188, 4366, 4273, 2154, 1215, 0, 0, 4605, 0, 1248, 12447, 0, 0, 1336, 3297, 0, 6163, 0, 0, 0, 3279, 0, 9659, 0, 0, 0], [0, 1449, 6883, 16097, 1101, 1475, 0, 0, 5950, 0, 2256, 0, 266, 0, 2562, 1279, 0, 3584, 0, 0, 0, 4578, 0, 8942, 0, 0, 261], [0, 261, 8258, 10431, 1106, 5820, 469, 0, 7039, 0, 1106, 0, 5857, 0, 0, 7439, 878, 0, 0, 0, 0, 2258, 261, 6639, 0, 0, 0], [1149, 545, 6515, 10463, 1353, 1065, 1377, 1043, 8089, 1119, 5814, 3449, 19, 5080, 1652, 0, 5489, 237, 743, 1075, 1383, 72, 3300, 38, 0], [0, 261, 17769, 6665, 3713, 3712, 269, 0, 3042, 0, 0, 0, 6854, 0, 0, 13780, 4929, 1091, 5816, 0, 621, 291, 0, 0], [0, 12635, 3908, 289, 11148, 1669, 0, 11074, 0, 798, 12309, 0, 15511, 0, 0, 1497], [1063, 369, 8916, 7118, 3308, 3816, 0, 0, 7640, 0, 10510, 0, 0, 7398, 4205, 0, 9249, 0, 361, 4104, 0, 7466, 0, 0, 0], [740, 2596, 18943, 14247, 3713, 4328, 0, 389, 10817, 0, 0, 6051, 0, 0, 7319, 6125, 0, 3046], [0, 9705, 4930, 4815, 0, 1012, 12149, 657, 0, 310, 10443, 1086, 0, 11117, 3096, 0, 10871, 0, 851, 7112, 631, 7511, 0, 0, 261], [277, 2164, 4960, 18719, 503, 1320, 306, 14, 12593, 334, 0, 0, 10942, 2950, 0, 9505, 4327, 120, 9007, 0, 1101, 102, 2237, 0, 6523, 224, 0, 312], [0, 5777, 3801, 6432, 3746, 4060, 0, 0, 15538, 0, 17902, 0, 5782, 7251, 0, 16986, 1091, 0, 4548, 0, 6691, 0, 0, 0], [1508, 2450, 11318, 19336, 3564, 2233, 0, 0, 13111, 829, 10758, 0, 9139, 6573, 0, 12724, 0, 0, 0, 7707, 8717, 0, 0, 0], [2174, 0, 11943, 25093, 3439, 8618, 307, 0, 5067, 0, 269, 9630, 0, 0, 11494, 5983, 0, 17011, 0, 0, 0, 4435, 0, 6161, 0, 0, 0], [1609, 0, 13937, 21761, 0, 5937, 0, 0, 18644, 0, 0, 0, 10426, 0, 0, 6081, 4534, 0, 11874, 0, 3048, 0, 8771, 0, 9777, 0, 0, 162], [4068, 2376, 30512, 45946, 9317, 5969, 273, 1702, 23659, 0, 1020, 25299, 0, 0, 11309, 9092, 0, 9427, 0, 1038, 0, 10261, 0, 14669, 0, 0, 2101], [480, 2635, 36524, 49505, 7206, 7378, 543, 0, 24452, 504, 0, 24810, 0, 0, 17192, 7630, 0, 27161, 0, 1717, 337, 16108, 0, 14239, 0, 0], [1344, 4033, 68357, 135098, 9896, 11518, 1891, 857, 18463, 4066, 245, 0, 43560, 1714, 45861, 10466, 0, 10264, 12093, 859, 26413, 1356, 33887, 414]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

