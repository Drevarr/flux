created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Duke Silvver", "Inedible Plant", "Drumina", "Xx Zen Xx", "Klengah", "Mistwalker Cael", "Crusader Siolith", "Newtype Khan", "Tegan Parker", "Miphest\u00f6", "High Sorcer Baradun", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Vindicator", "Druid", "Druid", "Druid", "Vindicator", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.9585, 42.6838, 68.8082, 23.8182, 82.2719, 19.8144, 15.9113, 91.8248, 38.664, 5.9328, 18.8602, 24.0034, 13.5754], [11.8864, 94.4576, 23.8119, 30.8288, 104.834, 34.1248, 39.7376, 99.1343, 34.1102, 0.0, 11.9117, 19.9522, 18.6566], [0.0, 295.6246, 0.0, 7.9094, 146.0839, 0.0, 0.0, 110.0984, 39.6091, 0.0, 0.0, 0.0, 0.0], [26.832, 0.0, 198.9538, 212.1365, 0.0, 81.577, 69.9845, 141.9725], [138.7911, 187.2736, 44.3243, 137.2804, 64.44, 0.0, 0.0, 165.289, 63.6298], [26.7444, 258.4739, 80.4678, 34.8734, 130.1309, 99.6224, 32.7155, 103.2458, 65.7288, 7.2288, 18.1082, 79.0997, 37.6925], [75.6884, 554.0984, 225.3098, 111.0018, 135.6005, 241.0752, 63.6451, 430.5717, 74.149, 45.6912, 25.0566, 122.3462, 0.0], [114.7999, 769.4933, 114.6256, 255.0794, 529.6396, 271.2096, 191.0165, 549.1217, 313.0066, 61.8912, 173.1104, 366.2285, 185.1254], [47.5456, 1441.3673, 212.5007, 209.1508, 826.3654, 143.104, 256.2041, 536.3302, 256.2994, 0.0, 84.1939, 411.8045, 245.039], [183.977, 2160.6677, 904.8522, 106.1483, 1073.1811, 553.4272, 160.9799, 989.287, 445.4093], [157.8881, 2381.9909, 807.4697, 334.9828, 946.6966, 376.0608, 126.3973, 292.1492, 563.9789, 45.72, 132.4422, 392.46, 323.9885], [79.7525, 2228.2504, 1018.4924, 348.7344, 999.3415, 453.8048, 137.9248, 682.0621, 313.8658, 24.4368, 76.2528, 481.08, 311.5507]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

