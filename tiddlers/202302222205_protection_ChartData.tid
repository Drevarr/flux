created: 20230222220539000
creator: Drevarr
modified: 20230705163519879
modifier: drevarr
tags: ChartData
title: 202302222205_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Tootsie Pop Bringer", "Ark Darkness", "Eibh\u00ebar", "Pixil Ranger", "Mac Aaroni", "Primal Clone", "Zadie Miststep", "Mike The Archmagus", "Ryvalia Fazebringer", "Black Raspberry Pie", "Cat Wigglebooty", "Tribal S", "Blanco Padre Guard", "Fribble Bibble", "Zaylen Harker", "Ravioli Fetabringer", "Drevarr Moonwillow", "Koralia Danai", "Kosair", "Bella Sassy", "Kiloak", "Sygaldry Verdandi"];
const professions = ["Scourge", "Scrapper", "Firebrand", "Chronomancer", "Druid", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 13.4784, 31.3728, 36.7756, 84.1133, 211.6282, 37.3594], [0.0, 0.0, 0.0, 0.0, 10.2874, 5.4905, 60.3264, 45.5424, 172.3302, 38.2867, 32.4475, 57.7254], [0.0, 0.0, 0.0, 0.0, 34.0992, 25.152, 168.244, 111.1392, 119.0808, 99.1926], [20.5523, 14.3412, 19.404, 19.6218, 68.9396, 39.3211, 27.456, 53.184, 129.1588, 86.855, 106.6133, 18.2905], [216.1094, 329.7499, 84.1018], [18.6379, 49.4468, 0.0, 18.8306, 61.5098, 70.7115, 7.9104, 18.5856, 208.0399, 93.024, 113.9659, 70.6109], [19.252, 24.9824, 19.4594, 19.5426, 94.0865, 47.7511, 29.1072, 30.4896, 200.4005, 66.8794, 174.3854, 51.6286], [28.3723, 12.6984, 27.914, 74.4519, 149.1667, 52.1879, 36.7104, 31.488, 147.8131, 53.856, 140.819, 50.634], [18.8185, 20.8532, 35.842, 47.8676, 64.5103, 70.8224, 51.9936, 17.1648, 180.8579, 94.0032, 187.6522, 47.0884], [14.0326, 22.5848, 44.546, 29.3535, 97.3727, 57.4011, 40.0128, 22.3872, 186.543, 117.9936, 173.1067, 42.2887], [15.9289, 16.5464, 13.7491, 35.3271, 100.2303, 77.3112, 40.896, 41.664, 201.9994, 78.2381, 207.3125, 78.1347], [18.9088, 33.9364, 56.327, 17.1295, 39.935, 78.4759, 55.9872, 4.992, 224.3846, 108.0058, 199.3205, 109.0513], [66.6956, 43.8376, 60.1247, 84.421, 173.4563, 127.3916, 104.4096, 62.4384, 328.4933, 131.017, 402.1574, 93.2687], [40.5989, 60.1324, 55.0796, 22.9844, 154.239, 138.7609, 78.6816, 0.0, 360.2945, 110.4538, 552.5669, 199.4661], [44.6624, 51.4448, 26.6112, 99.4934, 134.9502, 165.1599, 103.3728, 36.2496, 405.9531, 248.3251, 474.7248, 137.8059], [43.4704, 66.1116, 20.5316, 220.1066, 173.978, 99.0336, 33.3696, 493.7171, 189.8669, 460.3392, 197.6933], [96.4043, 96.6588, 76.3963, 61.9114, 163.669, 151.7386, 113.4336, 157.824, 545.9492, 269.8675, 497.9016, 185.5861], [120.5266, 163.0663, 232.3943, 158.2828, 106.8288, 109.44, 585.9227, 277.7011, 708.251, 121.9368], [115.3312, 91.02, 95.5786, 23.4986, 129.235, 102.601, 184.0128, 153.8688, 639.043, 225.7056, 672.1272, 222.3401], [95.7722, 59.9844, 74.2896, 20.9668, 230.1797, 276.6345, 152.2944, 129.3312, 570.9992, 270.1613, 613.3061, 233.2798], [133.1564, 82.2732, 89.2307, 118.9174, 219.1779, 201.5971, 116.3136, 153.4464, 567.8014, 351.0432, 604.1952, 169.5008], [95.135, 23.0239, 321.9801, 265.7643, 175.5648, 213.4656, 582.9025, 347.3222, 602.5968, 281.3627], [125.6254, 67.8876, 166.0982, 100.6406, 179.5287, 267.7609, 188.6976, 188.6208, 738.355, 362.7936, 741.0182, 169.6305]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

