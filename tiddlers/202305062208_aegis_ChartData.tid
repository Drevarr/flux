created: 20230506220820000
creator: Drevarr
modified: 20230705163528719
modifier: drevarr
tags: ChartData
title: 202305062208_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Ark Darkness", "Audrinafa", "Lil Red Robin", "Sygaldry Verdandi", "Aronorf Xideliesi", "Koralia Danai", "Bella Sassy", "Jupi Jupi Jupi"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[58.0718, 262.3666, 70.9956, 16.416, 37.9177, 152.7859, 90.599, 249.7275, 3.1402, 20.101, 36.9917, 0.2646, 0.0, 32.2655, 21.0018], [115.2107, 328.7758, 149.9862, 53.496, 74.1223, 115.5302, 99.0662, 262.8445, 0.0, 13.757, 67.5695, 0.0, 7.591, 66.3129, 52.006], [105.9869, 436.1549, 225.5904, 550.914, 51.5161, 86.3201, 375.4357, 82.5817, 26.1706, 153.436, 47.9552], [9.576, 262.4546, 226.5446, 407.2723, 1012.027, 19.2655, 80.8672, 217.177, 89.6729, 68.459, 167.755, 91.5169], [106.6981, 456.3117, 34.632, 37.4609, 388.5504, 175.7549, 1089.2155, 159.9234, 40.3801, 380.8055, 18.3897, 16.8386, 263.6605, 44.59], [48.8596, 443.2311, 528.6294, 78.768, 395.1666, 670.7904, 156.0384, 709.8315, 47.0448, 351.421, 21.803, 70.565, 169.4733, 31.5028], [234.5027, 725.7218, 390.6357, 236.664, 228.1916, 556.201, 306.7546, 1411.591, 0.0, 139.7801, 443.751, 200.9108, 47.2025, 273.5884, 123.3624], [193.1062, 709.1195, 604.5819, 305.352, 188.6749, 749.4413, 290.6669, 1306.1505, 75.6757, 149.8662, 409.1459, 111.8464, 0.0, 355.3021, 167.4538], [240.5664, 1071.8546, 854.6655, 256.32, 280.8424, 941.929, 520.249, 2021.5315, 206.7433, 228.1673, 452.5514, 139.1267, 39.6115, 181.9468, 20.7214]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

