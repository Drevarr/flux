created: 20230426221022000
creator: Drevarr
modified: 20230705163526831
modifier: drevarr
tags: ChartData
title: 202304262210_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Freylk Nasferatu", "Necrotic Windrunner", "Blancooo Padreee", "Newtype Khan", "Eibh\u00ebar", "Aira Draugr", "P\u00edogre", "Leana Deeb", "Etch\u00e9ry", "Skylar Shadowmoon", "Sumatra Satyricon", "Tootsie Poppa", "Leana Deeb", "Grasszanine", "Seren Nightroad", "Smol Gluvs", "Al Darasuum", "Long Poke", "Solo Bloodborn", "Permanent Dawn", "Sassy Daddy Demon", "Kmpek", "Rozaalyna", "Panther B Me", "Inedible Plant", "Xyntharos", "Lord Erin The Wise", "Be\u00eb", "Daddys Lil Orchid", "Kary\u00edna", "Khailerian", "Cyclotechnist Farra", "Mistwalker Caelon", "Xanvias Tsoli", "Mike The Archmagus"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Herald", "Scrapper", "Catalyst", "Berserker", "Scrapper", "Soulbeast", "Scourge", "Weaver", "Spellbreaker", "Scourge", "Scourge", "Dragonhunter", "Reaper", "Spellbreaker", "Weaver", "Vindicator", "Vindicator", "Scourge", "Scourge", "Vindicator", "Vindicator", "Weaver", "Scourge", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Vindicator", "Holosmith", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[419.8, 150.8744, 460.7034, 39.8134, 171.1136, 9.45, 247.2577, 107.4641], [13.7833, 264.5246, 404.9767, 172.1437, 184.6423, 386.6444, 174.0909, 217.9706], [121.6923, 170.7167, 191.0932, 7.4627, 57.2576, 0.0, 272.7546, 29.9715, 2.4828, 114.2562, 113.5581, 146.8046, 91.7538, 74.9778, 35.8586, 91.8598], [114.0577, 322.9492, 30.709, 56.7879, 0.0, 90.9141, 50.0665, 0.0, 91.2882, 71.3488, 237.2644, 119.1577, 247.2444, 18.8889, 118.4594], [327.1538, 144.8897, 289.322, 13.5448, 50.9697, 83.425, 70.3374, 57.8249, 6.7094, 97.0837, 174.4419, 42.6897, 101.7615, 78.8889, 37.7778, 107.8386], [505.0308, 265.5346, 627.178, 0.3433, 9.6515, 63.7625, 205.8528, 57.3165], [33.4236, 371.3448, 489.4651, 473.3736, 374.6346, 158.3111, 190.7879, 138.7903], [111.1859, 927.8983, 256.7985, 244.9318, 304.3875, 684.3558], [0.0, 189.4154, 232.5152, 526.9929], [623.4615, 279.4692, 758.0339, 0.0, 135.75, 15.9875, 319.2638, 21.0918], [235.8923, 118.1846, 373.8178, 76.4403, 70.2879, 478.4625, 65.1227, 110.3681, 18.9113, 124.9532, 289.8372, 138.0747, 140.2577, 31.6667, 290.1616, 64.2815], [121.8, 305.109, 561.5297, 42.194, 191.75, 62.0375, 138.8466, 39.789, 19.5911, 46.899, 289.9535, 151.8851, 23.5192, 197.4667, 140.0101, 34.0153], [241.0844, 262.4138, 318.5567, 496.093, 904.6494, 238.0], [233.8513, 444.3136, 19.7388, 5.3561, 20.15, 158.7669, 108.9051, 7.9803, 146.7857, 22.8372, 175.5287, 120.7538, 166.9333, 73.8081, 154.0459], [404.4462, 356.2321, 858.8178, 48.1418, 125.3182, 225.675, 438.9939, 91.9684, 18.1133, 60.7414], [349.3231, 514.1653, 71.5448, 152.5152, 34.825, 424.9571, 51.4884, 11.3399, 138.5, 59.8372, 278.0862, 88.1962, 357.1111, 17.3737, 113.3934], [126.3744, 401.064, 627.3953, 703.5632, 240.4269, 62.4667, 91.798, 451.0989], [812.7038, 770.8305, 8.4627], [400.6769, 237.4115, 600.9619, 71.0373, 48.5833, 250.4625, 269.2638, 118.7816, 0.1724, 163.766, 77.5581, 175.2644, 148.5192, 256.9556, 0.0, 208.258], [29.0591, 729.9384, 43.3256, 353.0575, 0.0, 570.2667, 68.9192, 585.073], [441.4615, 490.7513, 1517.7203, 9.791, 150.6591, 12.0375, 996.2699, 132.4652], [165.6688, 275.2759, 372.3547, 597.2558, 910.6839, 338.3423, 873.4889, 100.4141, 484.9093], [359.1385, 447.9846, 782.2076, 22.7015, 136.3788, 102.2625, 119.3742, 69.9441, 41.3498, 215.0567, 238.7442, 438.5402, 263.9038, 151.6222, 24.7374, 250.4358], [730.8923, 516.8077, 757.0212, 42.0746, 155.6894, 412.0625, 486.6748, 118.2447, 76.1084, 30.3818, 111.093, 293.8506, 309.4846, 171.3778, 112.6869, 257.4711], [981.2154, 341.7872, 1470.2034, 130.9925, 285.3409, 275.625, 1083.4479, 246.5011, 123.2217, 97.9557, 200.5349, 139.5057, 265.0615, 482.7333, 45.7475, 273.6549], [458.4154, 877.4423, 1802.1186, 153.806, 841.2879, 607.8125, 752.4172, 266.5622, 162.0542], [292.6436, 1283.4492, 299.3582, 838.9848, 546.4625, 473.6012, 265.903, 26.202, 89.5, 387.3161, 271.3615, 0.0, 767.1111, 538.0377], [751.2154, 1238.8898, 84.194, 105.0227, 234.05, 825.9264, 244.3302, 67.1576, 422.1626, 546.6047, 560.2069, 235.7423, 509.8222, 201.5657, 426.9647], [894.8769, 697.7718, 1584.1737, 96.0896, 214.3106, 309.9375, 879.1043, 342.7827, 201.5369, 508.335, 718.4651, 401.569, 435.3462, 370.1111, 0.0, 332.6219], [878.2923, 889.6846, 1412.5805, 69.9627, 240.1364, 391.375, 824.0368, 308.7732, 167.8424, 317.8621, 321.2558, 577.4598, 190.2885, 490.6, 94.4444, 405.245], [1489.2462, 1047.1679, 1936.3008, 262.7687, 575.5303, 725.1125, 565.3006, 287.2532, 13.5419, 299.3054, 142.6279, 889.1667, 196.9962, 0.0, 43.5657, 233.1496], [1676.0, 938.859, 1612.0424, 32.1119, 167.7652, 616.2375, 776.8344, 285.7542, 45.6946, 287.8867, 381.6977, 830.7011, 378.7962, 100.2889, 461.596, 413.9258], [1487.5077, 1402.7577, 1761.7119, 370.4328, 840.9545, 881.5875, 1510.2883, 457.9283, 274.3695, 798.0837, 181.5581, 1028.6207, 404.7192, 240.6667, 245.4141, 561.9706], [1471.8936, 2839.7542, 161.3358, 507.447, 429.275, 1349.9816, 339.9283, 88.9803, 768.9754, 306.4884, 1422.8563, 615.4462, 245.0889, 129.596, 856.8551], [1590.3385, 1296.4192, 1497.9576, 492.5896, 1648.1818, 512.9375, 1752.9448, 525.2437, 519.4433, 729.9803, 15.1395, 1375.546, 495.3115, 99.9556, 1117.6768, 716.9376]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

