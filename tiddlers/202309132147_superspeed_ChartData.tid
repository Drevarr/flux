created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Clean And Green", "Glorious Gluvs", "Charr Surethang", "Venomina The Fierce", "Zanos Engine", "Jimbo The Pleb", "Mort\u00e4rion", "Tegan Parker", "Oo Dads Mad", "Tootsie Pop Rocks", "Arcanophage Farra", "Mistwalker Cael", "Lucky Luprac\u00e1n", "Xanvias Einzbern", "Cat Wigglebooty", "Drevarr Moonwillow", "Keypek The Drunk"];
const professions = ["Druid", "Berserker", "Berserker", "Spellbreaker", "Scrapper", "Berserker", "Scrapper", "Tempest", "Berserker", "Scrapper", "Spellbreaker", "Herald", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.094, 0.244, 0.326, 0.498, 0.348, 0.777], [0.194, 0.182, 0, 0.189, 0.828, 0, 0, 0.36, 0, 0, 0.368, 0, 0, 0, 0.921], [0.329, 0.363, 0, 0.371, 0, 0.58, 0], [1.095, 0.572, 0.615, 0.795, 1.229, 1.19, 0.983], [0.416, 0.163, 0, 0.468, 0.498, 0, 0.348, 0, 0.026, 0, 0.193, 0, 0.549, 0.715, 0], [0.073, 0.181, 0.305, 0.381, 0, 1.514, 0, 0, 1.264, 0.573, 0.184, 0.56, 0.768, 0, 0], [0.421, 0.302, 0.485, 0.37, 1.142, 0, 0.707, 0.522], [0, 0.218, 0.488, 0.341, 0, 0.344, 0.859, 0.949, 0.605, 0.662, 0.598, 0.742, 0, 0.587], [0.444, 0.324, 0.406, 0.571, 0.831, 0, 0.579, 1.03], [0.466, 0.163, 0.122, 0.286, 0.741, 0, 0.497, 0.324, 0.134, 0.856, 0.845, 0, 0.184, 0.357, 0.294], [0.358, 0.332, 1.22, 0.57, 0, 0, 0, 0.718, 0.322, 0.571, 1.121, 0.997, 0.615, 0, 0.621], [0.567, 0.681, 0.844, 0.763, 0.83, 0, 0.665, 0.625, 0, 0.572, 0.153, 0.998, 0, 0, 0.98], [0.436, 0.331, 0.852, 0.227, 0.738, 0, 0.522, 0.808, 0.849, 1.082, 1.4, 0.299, 0.738, 0, 0.354], [0.96, 0.361, 1.219, 0.523, 0.828, 0, 0.578, 0.719, 0.98, 0.903, 0.586, 0, 0.768, 1.191, 1.531], [0.203, 1.252, 1.115, 1.061, 0.983, 0, 0.999, 0.89, 1.302, 0.567, 0.773, 0.673, 0.778, 1.429, 0.728], [1.055, 0.839, 1.675, 1.138, 1.493, 0.454, 1.304, 1.623, 1.709, 1.411, 2.286, 2.095, 0.923, 0, 1.467], [2.181, 0.929, 1.061, 1.448, 1.689, 1.021, 1.362, 1.309, 1.394, 1.79, 1.194, 2.195, 1.722, 1.894, 0.98]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

