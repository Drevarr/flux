created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_res_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Aira Draugr", "Konoko K", "Govinda Ektar", "Mort\u00e4rion", "Xanvias Einzbern", "Latedoctor", "Seiker Novus Terra", "Belvyn Brightblade", "Zatoshin", "Mistwalker Cael", "Drevarr Moonwillow", "Matrim The Mad", "Zenady", "Tootsie Pop Rocks", "F\u00e4dscelsior", "Hyde En Sikh", "Crusader Siolith", "Venomina The Fierce", "Pr\u00e6tor Lightbringer", "Rhaevynn", "High Sorcer Baradun", "Bella Sassy", "Rina Of Theros", "Tegan Parker", "Koralia Danai", "Gabe Malhorn", "Serene Azura", "Sygaldry Verdandi"];
const professions = ["Reaper", "Herald", "Tempest", "Vindicator", "Scrapper", "Berserker", "Reaper", "Tempest", "Firebrand", "Vindicator", "Herald", "Scrapper", "Catalyst", "Berserker", "Scrapper", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Reaper", "Tempest", "Firebrand", "Reaper", "Tempest", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resurrect per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 3], [2, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 4, 1, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, 0], [0, 0, 7, 0, 1, 1], [0, 0, 0, 1, 1, 3, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 4, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 2, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 7, 0, 0, 0, 6, 2, 0, 0, 0, 0, 0], [1, 0, 0, 8, 5, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 6, 0, 0, 0, 1, 5, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 8, 0, 0, 0, 6, 1, 0, 1, 0, 0], [2, 0, 1, 0, 8, 0, 2, 2, 0, 0, 2], [0, 0, 0, 0, 1, 7, 0, 0, 0, 9, 0, 2, 0, 0, 0, 0], [0, 0, 0, 1, 0, 3, 0, 0, 0, 10, 3, 3, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 8, 2, 3, 0, 0, 0, 0], [0, 11, 0, 0, 0, 6, 2, 5, 0, 0, 0, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

