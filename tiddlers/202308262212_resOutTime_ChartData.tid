created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Cael", "Mort\u00e4rion", "Aira Draugr", "Zorr Prime", "Vee Usagi", "Drevarr Moonwillow", "Dalveirric", "Venomina The Fierce", "Rahani Sunray", "Xanvias Einzbern", "Melody Phoenixstorm", "Belvyn Brightblade", "Blaize Harlot", "Belladonna Horror", "Yummy Kiwi", "Rina Of Theros", "Oo Dads Mad", "Crusader Siolith", "Roderik Manloy", "High Sorcer Baradun", "Darks Na", "Bearah", "Greg The Knight", "Hyde En Sikh", "Sygaldry Verdandi", "Daphne Agla\u00e9", "Morv\u00e4rth", "Cedryn X", "Gabe Malhorn", "Tegan Parker", "Koralia Danai", "Tootsie Pop Rocks", "Sub Train", "Newtype Khan"];
const professions = ["Herald", "Scrapper", "Herald", "Reaper", "Reaper", "Scrapper", "Soulbeast", "Spellbreaker", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Scourge", "Tempest", "Firebrand", "Reaper", "Berserker", "Firebrand", "Renegade", "Tempest", "Dragonhunter", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Reaper", "Berserker", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[873.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1102.0], [873.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 822.9, 0.0, 0.0], [1047.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [349.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 658.32, 0.0, 661.2], [0.0, 1983.6], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2204.0], [0.0, 0.0, 0.0, 0.0, 2644.8], [873.0, 0.0, 0.0, 0.0, 410.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 592.8, 40.0, 0.0, 0.0], [873.0, 0.0, 0.0, 0.0, 273.6, 120.0, 0.0, 0.0], [1746.0, 0.0, 0.0, 0.0, 91.2, 0.0, 0.0, 0.0, 0.0, 148.92, 0.0, 0.0, 0.0], [0.0, 45.6, 240.0, 0.0, 0.0, 0.0, 49.64, 116.28, 0.0, 37.0, 168.72, 329.16], [2619.0, 0.0, 0.0, 0.0, 91.2, 0.0, 0.0], [1396.8, 0.0, 0.0, 0.0, 136.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 112.48, 0.0, 0.0, 1102.0], [873.0, 0.0, 0.0, 0.0, 273.6, 0.0, 0.0, 0.0, 0.0, 198.56, 0.0, 0.0, 0.0, 112.48, 164.58], [2444.4, 0.0, 0.0, 0.0, 45.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 112.48, 0.0, 0.0, 220.4], [1222.2, 0.0, 0.0, 0.0, 501.6, 0.0, 0.0, 0.0], [2269.8, 0.0, 0.0, 0.0, 273.6, 0.0, 0.0, 0.0], [523.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5289.6], [1746.0, 0.0, 0.0, 0.0, 0.0, 280.0, 0.0, 0.0, 49.64, 0.0, 0.0, 0.0, 337.44, 0.0, 356.82, 1102.0], [0.0, 0.0, 0.0, 0.0, 0.0, 200.0, 0.0, 1642.68], [2269.8, 0.0, 0.0, 0.0, 456.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 56.24, 1974.96, 0.0, 440.8], [2444.4, 0.0, 0.0, 0.0, 319.2, 80.0, 0.0, 0.0, 0.0, 99.28, 0.0, 0.0, 0.0, 56.24, 2139.54, 237.88, 0.0], [4714.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 506.16, 1152.06, 0.0, 220.4], [1746.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 198.56, 0.0, 0.0, 0.0, 224.96, 0.0, 0.0, 5730.4], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7735.26, 0.0, 0.0], [1920.6, 0.0, 0.0, 0.0, 319.2, 0.0, 0.0, 0.0, 0.0, 496.4, 0.0, 0.0, 0.0, 0.0, 658.32, 0.0, 4848.8], [1396.8, 0.0, 0.0, 0.0, 273.6, 40.0, 0.0, 0.0, 248.2, 116.28, 0.0, 0.0, 168.72, 1645.8, 237.88, 5069.2], [2095.2, 0.0, 0.0, 0.0, 319.2, 0.0, 0.0, 0.0, 645.32, 988.38, 0.0, 0.0, 0.0, 822.9, 0.0, 1983.6], [873.0, 0.0, 0.0, 0.0, 866.4, 400.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10799.6], [5063.4, 0.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 658.32, 237.88, 9477.2], [4015.8, 0.0, 0.0, 0.0, 136.8, 200.0, 0.0, 0.0, 0.0, 248.2, 0.0, 0.0, 0.0, 337.44, 1316.64, 0.0, 8375.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

