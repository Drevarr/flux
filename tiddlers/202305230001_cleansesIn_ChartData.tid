created: 20230523000132000
creator: Drevarr
modified: 20230705163531148
modifier: drevarr
tags: ChartData
title: 202305230001_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Cheaky Gadgetz", "Hrakkus", "Oo Dads Mad", "Bamm\u00edt", "Aira Draugr", "Carne Palida", "Scraparone", "Zefirokai", "Phaydyd", "Hauzzy", "Sumatra Satyricon", "Alnerian", "Eruwon", "Kmpek", "Soxxdodendron", "Kaye X Kaye", "Cedryn X", "Xanvias Einzbern", "Binkety Bonk", "Husky Guard", "My Birthday Girl", "Sire Nighthawk", "Koralia Danai", "Tribal S", "Kary\u00edna", "Gavann", "Blanco Padre Guard", "Mistwalker Caelon", "Fribble Bibble", "Sygaldry Verdandi", "Cyclotechnist Farra", "Smol Gluvs", "Primal Clone", "Bella Sassy", "Tootsy Pop Star", "Venomina The Fierce", "Cat Wigglebooty", "Crusader Siolith", "M\u00e4raas", "Black Raspberry Pie", "Hyde En Sikh", "Be\u00eb", "Nocta Asthariel", "Lord Erin The Wise", "Arriasa", "Miphest\u00f6", "Grasszanine", "Drevarr Moonwillow", "Elonith Primal"];
const professions = ["Firebrand", "Mechanist", "Catalyst", "Spellbreaker", "Berserker", "Herald", "Scrapper", "Scrapper", "Tempest", "Dragonhunter", "Berserker", "Soulbeast", "Dragonhunter", "Weaver", "Vindicator", "Willbender", "Vindicator", "Berserker", "Berserker", "Scrapper", "Dragonhunter", "Scrapper", "Vindicator", "Firebrand", "Druid", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Firebrand", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Reaper", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Scourge", "Scourge", "Weaver", "Druid", "Tempest", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0476, 0.1346, 0.0407, 0.2528, 0.0], [0.094, 0.2097, 0.0, 0.0086, 0.0697, 0.0, 0.0061, 0.1069], [0.0086, 0.0195, 0.0606, 0.0305, 0.2534], [0.1524, 0.0, 0.0913, 0.0074, 0.311], [0.0333, 0.0694, 0.0, 0.02, 0.0431, 0.1729, 0.1515, 0.1341], [0.219, 0.0, 0.0192, 0.0074, 0.4094, 0.0968], [0.0167, 0.0183, 0.3759], [0.06, 0.0086, 0.0446, 0.0488, 0.3741], [0.5293], [0.0, 0.0, 0.1576, 0.3448], [0.0753, 0.0303, 0.0061, 0.45], [0.1429, 0.0721, 0.0074, 0.2483, 0.0645, 0.0, 0.0, 0.0683, 0.0, 0.0, 0.2448], [0.0, 0.0968, 0.0, 0.0086, 0.2148, 0.1818, 0.0488, 0.3], [0.08, 0.0172, 0.2134, 0.0, 0.0, 0.3414], [0.0952, 0.0481, 0.0, 0.255, 0.0323, 0.08, 0.0, 0.06, 0.0, 0.0, 0.3328], [0.1524, 0.0, 0.0529, 0.0074, 0.1902, 0.2097, 0.0, 0.0086, 0.1674, 0.0, 0.0, 0.2759], [0.0673, 0.0074, 0.217, 0.129, 0.04, 0.0172, 0.1841, 0.0, 0.0061, 0.2638], [0.1238, 0.0577, 0.0, 0.1499, 0.0259, 0.2204, 0.0, 0.0, 0.3121], [0.0952, 0.0769, 0.0, 0.1298, 0.129, 0.06, 0.0086, 0.2064, 0.0, 0.0122, 0.3276], [0.0484, 0.16, 0.0086, 0.2594, 0.0061, 0.4328], [0.1238, 0.0, 0.0769, 0.0037, 0.3803, 0.0323, 0.06, 0.0, 0.3445, 0.0, 0.0], [0.0465, 0.1106, 0.0, 0.1521, 0.1935, 0.04, 0.0, 0.2566, 0.0, 0.0, 0.3138], [0.1429, 0.0233, 0.101, 0.0022, 0.2258, 0.04, 0.0172, 0.2845, 0.0, 0.3776], [0.1143, 0.0, 0.0913, 0.0, 0.3333, 0.0161, 0.04, 0.0172, 0.2064, 0.0, 0.2672], [0.3166, 0.0, 0.0061, 0.4586], [0.0095, 0.0, 0.1202, 0.0074, 0.1655, 0.0806, 0.04, 0.0, 0.2664, 0.0, 0.0, 0.3534], [0.1628, 0.0913, 0.0, 0.3736, 0.0, 0.0172, 0.325, 0.0, 0.0, 0.15], [0.1524, 0.0481, 0.0296, 0.2595, 0.0645, 0.0, 0.0517, 0.2078, 0.0, 0.0061, 0.3672], [0.1048, 0.1202, 0.0074, 0.3535, 0.1452, 0.0, 0.0259, 0.1827, 0.319], [0.1524, 0.0, 0.0817, 0.037, 0.2506, 0.0, 0.02, 0.0172, 0.258, 0.0, 0.3172], [0.0857, 0.0385, 0.0037, 0.3579, 0.1129, 0.06, 0.0086, 0.2036, 0.0, 0.0, 0.3345], [0.0095, 0.0, 0.1154, 0.0148, 0.2886, 0.1129, 0.08, 0.0345, 0.159, 0.0, 0.0, 0.4397], [0.1905, 0.0, 0.0385, 0.0, 0.2908, 0.0484, 0.06, 0.0, 0.2357, 0.0183, 0.3828], [0.1619, 0.0, 0.0144, 0.0, 0.3602, 0.0484, 0.14, 0.069, 0.2608, 0.0, 0.0061, 0.3], [0.1429, 0.1106, 0.0074, 0.2864, 0.0484, 0.04, 0.0345, 0.2329, 0.0, 0.3914], [0.2, 0.0, 0.1058, 0.0111, 0.2304, 0.0484, 0.0, 0.0172, 0.2622, 0.0, 0.0, 0.4034], [0.2571, 0.0, 0.0721, 0.0222, 0.3356, 0.0086, 0.2497, 0.0061, 0.3724], [0.181, 0.0, 0.0625, 0.0296, 0.3087, 0.0484, 0.14, 0.0259, 0.2887, 0.0, 0.0122, 0.3431], [0.1143, 0.0625, 0.0037, 0.2752, 0.0645, 0.14, 0.0345, 0.3529, 0.0606, 0.0, 0.3121], [0.0952, 0.0, 0.0962, 0.0074, 0.3468, 0.0806, 0.02, 0.0431, 0.272, 0.0606, 0.0, 0.3534], [0.1048, 0.0, 0.0962, 0.0, 0.3311, 0.0, 0.0, 0.0086, 0.304, 0.0, 0.0, 0.3897], [0.1333, 0.1298, 0.0074, 0.3557, 0.2258, 0.06, 0.0, 0.2775, 0.0, 0.0, 0.3776], [0.0952, 0.0769, 0.037, 0.255, 0.0323, 0.1, 0.0172, 0.3194, 0.0, 0.0, 0.4379], [0.1429, 0.0, 0.101, 0.0, 0.3311, 0.0806, 0.0, 0.0259, 0.2999, 0.0, 0.0, 0.4379], [0.1238, 0.0, 0.0769, 0.0037, 0.3445, 0.1129, 0.0, 0.0, 0.3166, 0.0303, 0.0305, 0.4345], [0.1429, 0.1628, 0.0962, 0.0259, 0.4094, 0.1129, 0.02, 0.0259, 0.3515, 0.0, 0.0, 0.3948], [0.0952, 0.0, 0.0817, 0.2931, 0.1774, 0.04, 0.0, 0.41, 0.0, 0.0, 0.45], [0.2476, 0.0, 0.0625, 0.0037, 0.4139, 0.0806, 0.08, 0.0, 0.3738, 0.0, 0.3966], [0.1905, 0.0233, 0.125, 0.0185, 0.3803, 0.2258, 0.02, 0.0259, 0.3054, 0.0366, 0.5], [0.1333, 0.1827, 0.0259, 0.443, 0.0645, 0.08, 0.0, 0.304, 0.0, 0.0305, 0.5483]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

