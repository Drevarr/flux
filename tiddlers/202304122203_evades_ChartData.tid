created: 20230412220340000
creator: Drevarr
modified: 20230705163525370
modifier: drevarr
tags: ChartData
title: 202304122203_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Tribal Z", "Oo Dads Mad", "Minka Bringer", "Belvyn Brightblade", "Smol Gluvs", "Rozaalyna", "Black Raspberry Pie", "Skye Nightroad", "Rozaalyna", "Zadie Miststep", "Sister Elon\u00edth", "Tribal Z", "Smol Gluvs", "Drevarr Moonwillow", "Fribble Bibble", "K\u00f4sair", "Johoshua", "Jeckyll Mbs", "Tegan Parker", "Smol Daddy Tika", "Ark Darkness", "K\u00f4sair", "Sp\u00edcy Cheese", "Xanvias Einzbern", "Arriasa", "Arcanophage Farra", "Sumatra Satyricon", "Sygaldry Verdandi", "Konztantin\u00eb", "Estryl", "Demon Staph", "Koralia Danai", "Gavann", "Newtype Khan", "Solus Sanctus", "Sub Train", "Lucas Ryn", "Blancooo Padreee", "Eibh\u00ebar", "Grasszanine", "Primal Clone", "Lord Erin The Wise", "Ryvalia Fazebringer", "Mac Chiato", "Mistwalker Caelon", "Inedible Plant", "Venomina The Siren", "Allie Mistwalker", "Xyntharos"];
const professions = ["Scourge", "Tempest", "Spellbreaker", "Scrapper", "Firebrand", "Reaper", "Reaper", "Chronomancer", "Scrapper", "Scourge", "Tempest", "Firebrand", "Weaver", "Scourge", "Scrapper", "Scrapper", "Spellbreaker", "Scrapper", "Berserker", "Tempest", "Berserker", "Firebrand", "Berserker", "Berserker", "Berserker", "Druid", "Spellbreaker", "Soulbeast", "Firebrand", "Vindicator", "Berserker", "Druid", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Spellbreaker", "Chronomancer", "Weaver", "Chronomancer", "Tempest", "Vindicator", "Vindicator", "Tempest", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24, 0, 0, 4, 0, 21, 13, 0, 22, 8], [0, 5, 30, 0, 3, 0, 0, 7, 53], [33, 0, 0, 10, 2, 41, 16], [1, 5, 21, 0, 27, 10, 0, 0, 0, 0, 1, 39], [33, 3, 1, 3, 6, 21, 31, 2, 6], [12, 0, 32, 16, 0, 5, 0, 0, 0, 41], [23, 19, 17, 0, 0, 0, 3, 0, 46], [5, 0, 0, 3, 0, 25, 9, 0, 3, 12, 7, 0, 17, 7, 0, 9, 1, 0, 0, 14], [6, 0, 0, 12, 0, 13, 37, 0, 13, 0, 8, 0, 0, 7, 0, 0, 4, 15], [26, 0, 0, 2, 4, 11, 34, 0, 41, 3], [1, 0, 0, 3, 0, 15, 10, 0, 9, 51, 3, 29, 6, 0, 2, 0, 0, 0, 4], [11, 7, 0, 19, 44, 0, 11, 0, 0, 1, 41], [23, 2, 0, 11, 6, 26, 29, 14, 36, 0], [18, 0, 0, 15, 0, 18, 65, 0, 28, 6], [16, 0, 0, 10, 0, 36, 23, 0, 17, 23, 2, 0, 10, 8, 0, 0, 0, 0, 0, 6], [14, 0, 0, 4, 0, 16, 37, 8, 5, 7, 0, 15, 23, 0, 2, 0, 0, 0, 22], [0, 53, 44, 10, 0, 24, 23], [21, 0, 0, 10, 0, 29, 35, 0, 14, 8, 9, 0, 6, 3, 0, 5, 0, 0, 0, 15], [29, 0, 0, 22, 0, 28, 21, 19, 2, 0, 6, 4, 0, 6, 5, 5, 0, 13], [11, 0, 0, 1, 0, 8, 31, 26, 10, 4, 1, 21, 4, 0, 0, 0, 1, 0, 44], [13, 0, 0, 4, 0, 16, 32, 0, 34, 25, 0, 8, 1, 0, 0, 0, 2, 0, 29], [11, 0, 0, 8, 0, 20, 19, 49, 10, 20, 0, 7, 19, 0, 1, 2, 3, 0, 2], [20, 0, 0, 12, 2, 27, 52, 0, 9, 0, 1, 0, 57], [28, 0, 0, 13, 1, 17, 21, 0, 32, 5, 3, 4, 14, 0, 0, 2, 0, 41], [15, 0, 0, 2, 1, 26, 17, 0, 35, 5, 1, 0, 15, 38, 0, 2, 0, 3, 1, 21], [15, 0, 0, 3, 1, 44, 46, 0, 12, 0, 18, 0, 11, 11, 0, 0, 0, 0, 5, 20], [20, 0, 0, 13, 1, 25, 28, 0, 24, 11, 9, 0, 15, 1, 0, 10, 0, 0, 0, 32], [28, 3, 0, 10, 0, 21, 37, 0, 5, 47, 3, 0, 5, 2, 0, 1, 1, 0, 5, 29], [10, 0, 0, 4, 0, 11, 38, 0, 29, 25, 7, 0, 38, 22, 0, 0, 0, 0, 19], [21, 0, 1, 11, 7, 19, 28, 0, 65, 0, 6, 9, 39], [87, 0, 22, 20, 12, 0, 10, 17, 0, 16, 3, 4, 4, 15], [35, 0, 0, 6, 0, 26, 30, 0, 21, 6, 12, 0, 8, 57, 0, 12, 0, 2, 4, 24], [45, 0, 0, 31, 1, 23, 32, 17, 8, 17, 0, 28, 11, 2, 11, 1, 13, 2, 1], [3, 0, 17, 5, 37, 23, 0, 45, 14, 33, 0, 32, 4, 0, 8, 0, 3, 3, 28], [26, 0, 1, 8, 5, 29, 31, 0, 28, 5, 32, 0, 13, 9, 0, 9, 0, 0, 1, 64], [13, 0, 3, 10, 0, 60, 34, 1, 21, 15, 14, 0, 40, 6, 0, 0, 0, 0, 1, 46], [32, 0, 0, 14, 0, 46, 45, 0, 30, 27, 14, 0, 38, 5, 0, 2, 0, 0, 4, 17], [33, 0, 0, 19, 0, 16, 34, 44, 25, 23, 0, 47, 23, 0, 6, 0, 1, 2, 14], [28, 9, 0, 10, 1, 43, 58, 0, 30, 12, 14, 0, 21, 23, 0, 7, 1, 6, 4, 30], [67, 2, 0, 2, 2, 41, 25, 0, 40, 20, 27, 0, 24, 37, 0, 2, 0, 5, 2, 32], [22, 0, 0, 10, 0, 21, 36, 0, 67, 35, 39, 0, 29, 52, 0, 11, 2, 5, 1, 12], [37, 2, 0, 30, 0, 32, 39, 0, 72, 26, 56, 0, 7, 15, 0, 7, 2, 6, 0, 43], [43, 1, 0, 15, 1, 56, 56, 0, 35, 0, 52, 3, 52, 44, 0, 7, 0, 4, 3, 41], [64, 2, 0, 24, 1, 101, 88, 0, 39, 24, 27, 0, 30, 7, 0, 0, 0, 3, 0, 21], [23, 1, 0, 26, 4, 25, 57, 0, 140, 17, 0, 20, 17, 1, 10, 20, 1, 17, 56], [50, 0, 1, 26, 1, 10, 69, 49, 9, 21, 0, 34, 50, 2, 13, 2, 5, 8, 98], [45, 6, 6, 12, 3, 51, 57, 0, 45, 12, 56, 4, 37, 58, 1, 11, 4, 4, 2, 52], [24, 0, 0, 3, 5, 54, 18, 0, 81, 26, 21, 0, 52, 163, 0, 6, 7, 2, 0, 31], [63, 4, 0, 26, 1, 47, 83, 108, 42, 56, 7, 68, 30], [33, 1, 0, 21, 6, 37, 93, 0, 76, 15, 27, 7, 20, 55, 0, 13, 5, 4, 7, 148]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

