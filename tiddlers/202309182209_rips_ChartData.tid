created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Meowstress Of Death", "Zaedy Zae", "Tribal S", "Ryvalia Fazebringer", "Hawaiian Supreme", "Necrotic Windrunner", "N\u00f6sh\u00e0k", "Mister Jekyll", "Dark Sidiuz", "Elonith Requiem", "Be\u00eb", "Rina Of Theros", "Kurn The Drunk", "Raziel Umbra", "Grasszanine", "Black Raspberry Pie", "Arcanophage Farra", "Anita Strips", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Reaper", "Druid", "Druid", "Chronomancer", "Spellbreaker", "Reaper", "Mesmer", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Chronomancer", "Spellbreaker", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0476, 0.2222, 0.1037, 0.0, 0.1579, 0.0213, 0.2195, 0.0, 0.1429, 0.8, 0.0211, 0.3077, 0.0253, 0.0541, 0.0], [0.0, 0.0464, 0.0681, 0.0227, 0.0229, 0.1098, 0.0536, 0.0909, 0.0526, 0.0854, 0.0303, 0.0, 0.0463, 0.0854, 0.0408, 0.0526, 0.1489, 0.0732, 0.0615, 0.1429, 0.2667, 0.0211, 0.1026, 0.038, 0.0135, 0.0244, 0.1429], [0.0366, 0.0609, 0.0809, 0.0, 0.0305, 0.061, 0.1964, 0.1136, 0.0, 0.0976, 0.1667, 0.0648, 0.0854, 0.0816, 0.0702, 0.0426, 0.0244, 0.0615, 0.0714, 0.2, 0.0316, 0.0769, 0.038, 0.027, 0.0244, 0.0571], [0.1463, 0.0232, 0.0, 0.0, 0.0, 0.1098, 0.1071, 0.1364, 0.0526, 0.122, 0.197, 0.0238, 0.1204, 0.0732, 0.0, 0.1404, 0.1702, 0.0732, 0.0308, 0.0536, 0.2, 0.0526, 0.0769, 0.0886, 0.1081, 0.0976, 0.0571], [0.7805, 0.5231, 0.5714, 2.4667, 0.0, 0.0], [0.0, 0.0, 0.0076, 0.0122, 0.0714, 0.0227, 0.2895, 0.3049, 0.3939, 0.0, 0.2407, 0.2378, 0.3265, 0.3509, 0.4043, 0.1951, 0.3846, 0.2857, 0.4, 0.0, 0.7692, 0.0, 0.3378, 0.5854], [0.0, 0.0, 0.0305, 0.2073, 0.7045, 0.0526, 0.3293, 0.1212, 0.0, 0.4537, 0.4268, 0.0204, 0.7018, 0.5957, 0.4878, 0.3385, 0.2679, 0.6667, 0.0316, 0.5641, 0.1139, 0.4595, 0.7805, 0.4857], [0.0244, 0.0348, 0.0128, 0.0, 0.0153, 0.1818, 0.3421, 0.4878, 0.2576, 0.0476, 0.4167, 0.4878, 0.5918, 0.8772, 0.6809, 0.7317, 0.7692, 0.4107, 1.2667, 0.2105, 0.5385, 0.4324, 0.7561], [0.058, 0.017, 0.0, 0.0076, 0.2439, 0.4821, 0.7273, 0.1316, 0.3293, 0.5, 0.0476, 0.3981, 0.4634, 0.6531, 0.9649, 0.7872, 0.561, 0.0615, 0.5893, 1.3, 0.3053, 1.2564, 0.1266, 0.4459, 0.9512], [0.0232, 0.0128, 0.0227, 0.0305, 0.3171, 0.5179, 1.3864, 0.1579, 0.4634, 0.4091, 0.0238, 0.6019, 0.3232, 0.551, 0.6491, 0.7447, 0.6341, 0.0, 0.625, 1.3, 0.2632, 0.7949, 0.2658, 0.3378, 0.7561, 0.9714], [0.0116, 0.0043, 0.0227, 0.0, 0.2805, 1.0, 0.5909, 0.0789, 0.4146, 0.5152, 0.0, 0.4907, 0.1707, 0.6939, 1.0, 0.7021, 1.122, 0.4769, 0.5714, 1.2333, 0.2211, 1.3333, 0.2278, 0.5405, 0.6098], [0.1341, 0.0406, 0.0128, 0.0, 0.0153, 0.4878, 0.5893, 0.7955, 0.1053, 0.5732, 0.2576, 0.0476, 0.4722, 0.4268, 0.5102, 0.6667, 0.5745, 0.6585, 0.4462, 0.3393, 1.2333, 0.3158, 0.9487, 0.3924, 0.4054, 1.3415], [0.0, 0.0261, 0.0128, 0.0227, 0.0076, 0.6951, 0.1607, 0.6591, 0.2895, 0.5244, 0.4848, 0.0952, 0.7222, 0.6098, 0.4286, 0.6667, 0.5745, 0.3171, 0.5231, 0.25, 1.3667, 0.2737, 0.9487, 0.3924, 0.4459, 0.7317, 0.1143], [0.0, 0.0, 0.4146, 1.1429, 1.1591, 0.1842, 1.1098, 0.8788, 0.9167, 0.2439, 1.2449, 0.193, 0.8723, 1.2195, 0.4462, 0.0714, 0.0333, 0.1684, 0.0, 0.4557, 0.2838, 0.9756, 0.4571], [0.1829, 0.0232, 0.0, 0.0455, 0.0534, 0.5854, 0.8214, 0.8864, 0.5263, 0.6098, 0.6212, 0.0714, 0.5741, 0.7256, 0.2653, 1.0351, 0.0213, 0.4634, 0.2308, 0.5536, 0.6, 0.0, 1.2564, 0.1392, 0.7297, 1.8293, 0.1429], [0.0986, 0.017, 0.0909, 0.0305, 0.7317, 0.0, 1.7273, 0.3684, 1.061, 1.1515, 0.5, 0.2685, 0.7866, 1.2653, 0.7544, 0.4681, 0.3902, 0.3692, 0.5357, 0.0, 0.4632, 1.0, 0.443, 0.0811, 1.6341, 0.0286], [0.0, 0.0145, 0.0, 0.0455, 0.0, 0.878, 1.2857, 1.3864, 0.1842, 0.7073, 0.7121, 0.0714, 0.0556, 0.5427, 0.6122, 1.0351, 0.1064, 2.1951, 0.7385, 1.0357, 1.3333, 0.2, 1.4615, 0.4051, 0.5811, 1.439, 0.1429], [0.0732, 0.1014, 0.0766, 0.0909, 0.0229, 1.0976, 1.25, 0.4318, 0.2895, 1.1951, 1.303, 0.1905, 0.1574, 1.2195, 0.7143, 1.5263, 0.9787, 1.7073, 1.3231, 0.1786, 0.0333, 0.2526, 0.7692, 0.5443, 0.2432, 1.3902, 0.5143], [0.1463, 0.0841, 0.0128, 0.0455, 0.0, 0.9268, 0.7143, 0.7955, 0.5263, 0.9268, 1.5, 0.0476, 1.2315, 1.1402, 0.7755, 1.386, 1.0213, 1.0976, 0.5846, 0.8036, 1.1667, 0.4105, 1.5897, 0.4304, 0.2297, 0.6585, 0.4], [0.058, 0.0511, 0.1364, 0.0153, 1.5244, 1.4464, 2.7273, 0.7105, 1.2317, 1.8788, 0.0476, 1.1019, 1.1768, 0.1224, 1.1053, 1.5745, 1.122, 0.7846, 1.3214, 0.2667, 0.0211, 2.6667, 0.3544, 1.3784, 1.439, 1.2286]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

