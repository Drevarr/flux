created: 20230204220933000
creator: Drevarr
modified: 20230705163518655
modifier: drevarr
tags: ChartData
title: 202302042209_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Arons", "Kosa\u00edr", "Aronorf Xideliesi", "Ravioli Fetabringer", "Mistwalker Caelon", "High Sorcer Baradun", "Johosh The Great", "Vinthry Stormgrave", "Nelliel T", "Legacy Of Mathus", "Sofya De Meme", "Lord Erin The Wise", "Dark Sidiuz", "Sp\u00edcy Cheese", "Rozaalyna", "Smol Gluvs", "Etch\u00e9ry", "Xanvias Einzbern", "Fungus", "Be\u00eb", "Rina Of Theros", "Demon Sekhmet", "Daring Deathblade"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Vindicator", "Tempest", "Firebrand", "Tempest", "Scourge", "Berserker", "Weaver", "Weaver", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.0803, 2.732, 2.6393, 0.8373, 18.6916, 4.6736, 30.3839, 7.5167, 0.0, 39.4233, 21.3722], [19.4024, 21.6137, 26.4128, 11.8036, 46.0743, 0.0, 14.4444, 20.3139], [35.5516, 8.2208, 13.4262, 10.9882, 15.3178, 12.6598, 16.0268, 0.6171, 0.0, 23.1517, 20.4648], [24.012, 10.469, 6.8525, 21.9053, 18.6262, 11.7185, 3.1786, 22.342, 0.0, 31.5026, 38.801], [31.771, 24.6253, 33.8607, 10.0592, 11.9969, 28.6235, 5.8304, 50.9517, 0.0, 32.8095, 18.5883], [31.0588, 6.4045, 20.1721, 32.8669, 20.0374, 14.0207, 11.6339, 87.8513, 0.0, 12.0406, 46.4082], [35.1103, 17.129, 3.3525, 23.6272, 18.4237, 7.6839, 71.1161, 29.3532, 0.0, 51.6102, 32.3877], [39.1427, 22.7643, 53.541, 16.3402, 18.919, 14.7219, 0.0, 104.6654, 5.6, 16.9877, 24.422], [9.006, 25.0025, 52.877, 19.0089, 0.0, 37.601, 3.1607, 15.1115, 0.0, 49.8924, 62.0069], [41.9101, 33.8313, 16.9098, 51.6775, 18.6885, 9.8636, 7.4107, 15.8848, 0.0, 29.4638, 44.1784], [31.211, 24.4094, 39.4672, 37.0976, 57.1184, 48.7306, 53.5804, 92.7844, 0.0, 8.6332], [46.7374, 47.603, 46.5574, 52.8166, 15.6947, 11.9585, 12.5625, 78.6208, 0.16, 34.7637, 36.5249], [74.2101, 86.514, 33.4629, 122.9018, 149.461, 14.0, 57.1393, 42.7084], [32.1775, 49.871, 0.0, 60.2781, 84.1589, 42.6943, 68.5893, 86.6171, 0.0, 41.1922, 53.6123], [37.2134, 55.1365, 117.7377, 94.5503, 53.891, 21.8497, 94.6071, 108.8736, 0.0, 38.9665, 81.7804], [45.4388, 37.7122, 108.959, 107.8373, 59.8629, 60.3316, 51.5804, 113.4721, 0.0, 34.5855, 108.4014], [65.4508, 30.4913, 229.2459, 98.7574, 25.7913, 100.9206, 25.6429, 46.3978, 0.0, 36.9277, 88.7153], [96.1859, 21.0868, 129.3115, 80.4201, 26.5202, 45.1347, 70.5089, 64.5428, 0.0, 95.1552, 69.3979], [79.8357, 46.9132, 95.1639, 93.8609, 147.7321, 95.7478, 74.6518, 205.3755, 5.44, 57.2169, 82.6158], [97.6918, 87.129, 43.0902, 220.4793, 84.7165, 143.8446, 103.2321, 215.9071, 0.0, 54.0212], [89.8273, 77.6625, 65.4344, 90.6657, 135.8629, 73.0915, 0.0, 204.7063, 0.0, 105.6155, 148.6672], [136.8993, 47.4888, 100.1148, 102.7929, 55.3333, 92.7807, 0.0, 95.5465, 9.88, 180.3686, 139.4597], [297.9965, 121.9911, 556.2714, 123.6, 118.2328, 357.7684]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

