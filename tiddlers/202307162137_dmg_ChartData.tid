created: 20230716213730000
creator: Drevarr
tags: ChartData
title: 202307162137_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Cestaphine", "Koda Rv", "Vampguard", "Sakis Ranger", "Sagaz Homem Fuma\u00e7a", "Holten Mcgroins", "Tribal S", "Alarics Clone", "Zogratis Lucius", "Koda Kirigaya", "Muireann Mackay", "Tirluka", "Koralia Danai", "Grootsmaid", "Urilstormwalker", "Caelon Cai", "Latedoctor", "Scarlet Merc\u00fcry", "Gun Breaker", "Smol Gluvs", "Ravenaz", "Necrotic Windrunner", "Ez Mode Mathus", "Daphne Agla\u00e9", "Desu Ripa", "Brutal Araden", "Luke The Ghastly", "Lookatyou Lookatme", "Surethang Smarts", "Vesnan", "Cestaphine", "Anti Jimbo", "Sureting", "Roj\u00efn", "Johosh The Mighty", "Johoshua", "Drevarr Moonwillow"];
const professions = ["Tempest", "Reaper", "Firebrand", "Druid", "Tempest", "Thief", "Druid", "Chronomancer", "Virtuoso", "Soulbeast", "Druid", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Harbinger", "Reaper", "Firebrand", "Berserker", "Reaper", "Scrapper", "Reaper", "Scourge", "Reaper", "Reaper", "Renegade", "Scourge", "Catalyst", "Holosmith", "Reaper", "Weaver", "Weaver", "Reaper", "Catalyst", "Berserker", "Holosmith", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[156.1473, 93.4316, 62.89, 109.6515, 14.5287, 28.9091, 42.2264], [0.0, 531.8727], [91.56, 0.0, 66.8767, 8.9024, 196.4762, 310.8254, 112.5106], [1.1953, 188.5694, 49.4419, 114.7545, 42.0093, 70.8707, 143.2069, 152.0463, 71.5667, 116.9688, 58.2192, 0.0, 4.1667, 1.1905, 414.8723], [117.72, 0.0, 15.5479, 44.2683, 242.2262, 622.0317, 525.6383], [145.0267, 503.4375, 0.0, 71.8293, 548.4167, 0.0, 409.234], [154.6727, 16.7132, 74.0, 57.63, 159.9394, 24.3276, 34.697, 17.9811, 57.9008, 40.6667, 29.6, 187.8056, 20.6977, 57.8182, 11.4673, 32.5918, 90.4828, 95.4907, 32.8933, 0.0, 0.0, 26.4451, 5.7024, 111.7143, 120.6809], [16.0545, 61.8062, 74.7053, 6.31, 219.4091, 87.1379, 80.9697, 30.7358, 27.4885, 66.4464, 47.5271, 108.5, 37.1395, 78.3818, 11.243, 43.7347, 28.7931, 72.9259, 39.96, 7.4062, 0.3288, 9.5183, 47.5476, 125.0952, 93.5319], [504.4091, 317.2356, 647.3333, 540.2264, 328.0992, 28.5298], [464.3082], [80.9091, 290.8605, 49.0211, 72.01, 308.1364, 108.0115, 384.7576, 188.6981, 74.9847, 262.256, 53.3482, 259.9028, 59.4186, 30.1727], [0.0, 356.4961, 18.8, 3.62, 142.4545, 96.6149, 78.8485, 235.9245, 1.8397, 296.869, 35.9482, 438.9861, 34.814, 21.2818, 0.0, 4.4352, 83.2867, 20.7671, 2.1463, 93.5119, 70.0476, 55.0], [24.0727, 39.3411, 42.4947, 45.86, 49.4697, 36.6724, 779.4545, 22.7547, 53.3664, 62.6131, 187.0471, 8.9583, 15.4884, 225.9364, 22.0093, 214.5238, 226.8981, 156.4933, 0.0, 9.0685, 7.7927, 96.8095, 14.7302, 67.4894], [164.0635, 279.0139, 226.9535, 187.0455, 7.8692, 178.5918, 17.0, 249.8704, 410.58, 0.0, 0.2192, 89.5976, 106.4048, 587.8413, 171.8298], [59.6279, 128.1158, 231.3, 501.0606, 354.6667, 144.7358, 136.4275, 113.5059, 621.3611, 37.4884, 508.6091, 512.972], [82.5479, 202.3354, 732.9286, 2604.5714, 2320.9362], [70.4384, 284.4024, 1128.4524, 2330.2063, 3271.9362], [89.4909, 238.0853, 158.0632, 166.57, 48.1494, 179.9697, 102.5472, 91.4962, 167.5119, 297.4541, 302.5417, 128.2093, 376.4, 85.1963, 186.2313, 85.0, 117.5185, 284.1533, 483.0312, 25.6027, 2.0488, 96.5595, 324.5556, 103.2128], [2225.369, 3816.3333, 1740.9362], [927.9667, 87.375, 242.4384, 83.1341, 569.8095, 2444.1429, 3144.8511], [0.0, 1797.5833, 3262.2857, 3708.1702], [1591.7778, 659.8605, 565.7455, 0.0, 515.9864, 1401.4828, 1083.8611, 0.0, 1182.6508, 1484.9149], [434.3178, 1239.2993, 277.4483, 1779.4074, 1467.7867, 93.5312, 764.5205, 304.5915], [352.8545, 1302.8992, 228.7368, 987.66, 961.303, 918.1379, 271.5152, 1467.283, 215.9107, 452.8518, 63.729], [99.0727, 1684.2248, 1149.1789, 874.34, 479.6515, 1811.9368, 222.5417, 251.8071], [334.37, 1069.3333, 675.9713, 255.9091, 267.8447, 1240.8056, 542.4884, 757.2364, 521.4766, 1208.1088, 993.4907, 735.9467, 73.5625, 61.7134, 1356.4444, 0.0], [86.4182, 766.0, 1200.5263, 756.38, 890.9091, 1206.8276, 1242.5758, 369.1698, 501.1756, 957.244, 482.4329, 1184.0556, 376.0, 308.9727], [2876.7133, 0.0, 1336.7123, 1456.0915, 4762.1548, 1595.1702], [1213.6909, 1868.3643, 2924.2105, 1030.0, 2690.8939, 2744.023, 2805.7879, 374.8302, 1067.2748, 1689.3929], [307.1818, 698.1938, 794.5789, 643.63, 1375.9242, 715.8046, 1092.0606, 397.7358, 613.4733, 657.9226, 626.0141, 1884.7222, 614.186, 859.4909, 860.3061, 183.2414, 2446.2407, 974.04, 184.75, 186.0274, 74.8476, 728.75, 825.6984, 3330.0426], [508.1985, 1331.1964, 1771.3953, 2761.9722, 139.3256, 1635.2909, 63.4766, 1923.5034, 704.6207, 3576.4537], [82.8155, 1650.5718, 1289.7083, 2090.4884, 1730.6182, 270.2056, 2071.7959, 533.931, 2616.9259, 1344.7, 617.6875, 130.0685, 720.0366, 1408.7976, 2313.7302, 1969.1064], [1918.0, 3536.0556, 338.4884, 1378.5727, 1567.8299, 2360.0, 1686.9815, 2036.6533, 970.863, 112.2317, 2696.619, 4400.9524, 3250.2766], [498.3472, 965.2558, 3937.5091, 602.7196, 3030.898, 1582.0345, 3942.5648, 3219.5133, 160.625, 1331.7397, 902.0671, 3468.1786, 3995.8095, 2802.5532], [1206.7196, 1546.3605, 913.4483, 7633.0833, 4523.3533, 862.4688, 765.1233, 1013.439, 6113.0, 6295.1746, 9315.1915], [3418.8909, 1493.1938, 1882.8737, 2218.27, 3447.4242, 2786.4885, 1711.5758, 2161.1509, 594.7023, 1831.4821, 1906.5082, 4419.5694, 1565.3721, 2235.0455], [2530.4182, 2510.4961, 3000.6316, 2079.8, 3439.8333, 2658.7069, 2807.7879, 1697.5283, 1238.8244, 2424.0476, 2620.7718, 3391.0972, 1367.0465, 2974.1636, 2160.4393, 2145.2857, 2891.1724, 4772.4907, 4130.7467, 1182.4688, 1338.7945, 696.4024, 2721.0595, 3988.8571, 4458.5745]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

