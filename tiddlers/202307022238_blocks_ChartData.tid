created: 20230702223827000
creator: Drevarr
modified: 20230705163540921
modifier: drevarr
tags: ChartData
title: 202307022238_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Snowe Shadowcharm", "Perpetual Hope", "Lil Mes Robin", "Elonith Requiem", "Neohelios", "Nina Nefarious", "Jello Jawn", "Vanillatwist", "Morzig Shadowclaw", "Newtype Khan", "Hyvand", "Tacitus Tacitus", "Tantai Jin", "Kittendoo", "Ima Lou", "Disciple Of Phoenix", "Tootsie Pop Rocks", "Vini Boy", "Es Onlegaym", "Spirita Demon", "Wild Doggy", "Koranthin", "Morv\u00e4rth", "Verna Mae", "St\u00e1rless", "Demon Staph", "Aezlenne", "Tacomelon M", "Grasszanine", "Trap User", "Synomi\u00f1 Spyce", "Tuandha Lan", "S\u00e2ucy K\u00e2t", "Lucky Leipreach\u00e1n", "Valaria Emberstorm", "Smol Gluvs", "Thalia Mavren", "Jmbrage Rev", "Artakama Nahid", "Trap User", "K\u00e2 Otik", "Zayde Sunsabre", "Aronorf Xideliesi", "Amiti\u00e9l", "Pixzil", "Bella Sassy", "Silvyrs", "Tika Fiery", "Sarette Fay", "Thats Not Nice"];
const professions = ["Reaper", "Tempest", "Chronomancer", "Scourge", "Druid", "Reaper", "Virtuoso", "Virtuoso", "Reaper", "Spellbreaker", "Berserker", "Reaper", "Reaper", "Firebrand", "Druid", "Vindicator", "Scrapper", "Tempest", "Daredevil", "Druid", "Guardian", "Firebrand", "Reaper", "Renegade", "Spellbreaker", "Druid", "Chronomancer", "Virtuoso", "Spellbreaker", "Guardian", "Scourge", "Herald", "Chronomancer", "Scrapper", "Tempest", "Reaper", "Firebrand", "Vindicator", "Tempest", "Dragonhunter", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 2, 3, 0, 16, 2, 14, 0, 7, 0, 8], [5, 0, 11, 0, 0, 0, 3, 1, 3, 0, 1, 3, 14, 4, 0, 6, 2], [0, 8, 0, 0, 3, 1, 8, 0, 5, 8, 3, 0, 3, 1, 13, 0], [2, 0, 8, 0, 0, 0, 2, 2, 3, 0, 1, 4, 10, 0, 1, 5, 3, 12, 3], [1, 0, 9, 2, 2, 0, 4, 1, 15, 3, 11, 0, 1, 3, 4, 0, 1, 0], [6, 6, 15, 2, 17, 4, 5, 0, 6, 1, 3, 3, 0], [0, 4, 0, 1, 7, 3, 5, 0, 1, 11, 2, 18, 0, 3, 0, 13], [3, 0, 15, 10, 0, 11, 0, 0, 4, 3, 5, 0, 0, 6, 13], [2, 9, 1, 8, 0, 0, 3, 8, 5, 5, 0, 3, 1, 8, 8, 0, 1, 4, 3, 2], [0, 2, 5, 4, 0, 0, 6, 11, 0, 4, 0, 0, 1, 2, 2, 0, 0, 5, 8, 3, 0, 8, 0, 12], [5, 8, 10, 1, 9, 0, 1, 2, 1, 2, 5, 0, 4, 0, 6, 5, 0, 0, 0, 0, 1, 4, 1, 0, 4, 2, 4], [0, 2, 3, 15, 1, 8, 1, 4, 7, 0, 11, 0, 0, 0, 3, 1, 0, 0, 0, 6, 9, 3, 0, 4, 1, 11], [17, 1, 2, 0, 12, 7, 0, 8, 0, 0, 0, 2, 3, 1, 0, 1, 6, 13, 3, 0, 1, 1, 12, 2], [2, 1, 2, 9, 13, 2, 0, 14, 4, 20, 1, 7, 19], [0, 6, 2, 5, 0, 6, 3, 3, 5, 4, 1, 7, 17, 0, 1, 3, 5, 4, 0, 0, 5, 0, 10, 0, 1, 0, 9], [0, 3, 3, 2, 1, 4, 1, 6, 21, 0, 0, 1, 6, 2, 7, 0, 0, 5, 0, 10, 0, 8, 1, 16], [2, 4, 0, 8, 4, 12, 15, 0, 5, 1, 15, 30, 2], [8, 14, 16, 1, 20, 1, 3, 2, 3, 5, 9, 0, 3, 1, 4, 12, 0], [1, 3, 4, 0, 5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 39, 0, 0, 0, 1, 5, 0, 0, 8, 2, 0, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 3, 10, 8, 0, 0, 0, 2, 3], [0, 0, 7, 19, 0, 4, 0, 25, 6, 0, 9, 0, 0, 0, 1, 2, 2, 0, 0, 9, 9, 3, 0, 0, 1, 10], [1, 22, 14, 1, 5, 0, 1, 1, 7, 10, 3, 2, 22, 2, 0, 2, 0, 11, 7], [1, 4, 1, 13, 25, 2, 0, 1, 3, 4, 11, 1, 1, 4, 4, 21, 1, 6, 0, 19], [4, 11, 0, 9, 3, 2, 0, 5, 2, 4, 6, 0, 8, 1, 11, 8, 1, 0, 5, 5, 9, 0, 0, 11, 12, 0, 5, 17], [4, 3, 12, 2, 23, 1, 3, 6, 5, 6, 0, 5, 0, 1, 0, 1, 3, 2, 4, 0, 11, 0, 14, 0, 2, 1, 2, 3, 0, 6, 0, 0, 1, 2, 2, 0, 3, 5, 0, 0, 0, 13], [3, 10, 4, 3, 7, 0, 3, 0, 8, 13, 0, 1, 4, 4, 8, 2, 3, 3, 15, 0, 4, 2, 1, 5, 1, 2, 0, 0, 3, 3, 1, 0, 1, 3, 7, 5, 0, 6, 0, 10, 1], [7, 11, 15, 2, 21, 2, 8, 1, 6, 3, 8, 6, 0, 5, 3, 9, 25, 3, 0, 1, 2, 2, 9], [3, 7, 7, 1, 4, 1, 0, 1, 1, 1, 6, 0, 3, 0, 11, 27, 0, 0, 0, 2, 5, 9, 0, 0, 7, 0, 12, 0, 2, 12, 3, 0, 6, 0, 0, 2, 0, 1, 0, 0, 5, 5, 1, 1, 1, 3, 4, 2], [9, 8, 14, 1, 12, 2, 1, 1, 4, 2, 2, 5, 0, 5, 0, 10, 23, 0, 0, 0, 3, 7, 6, 0, 0, 9, 1, 17, 0, 2, 0, 14], [2, 4, 10, 10, 2, 0, 11, 3, 11, 0, 6, 1, 23, 10, 0, 17, 0, 0, 0, 2, 6, 7, 0, 1, 5, 10, 2, 2, 2, 13, 5], [15, 16, 23, 1, 33, 5, 17, 6, 12, 8, 9, 1, 25, 1], [1, 2, 6, 2, 6, 4, 0, 6, 2, 10, 11, 0, 2, 5, 6, 4, 0, 0, 12, 2, 20, 0, 4, 0, 14, 3, 0, 2, 0, 0, 0, 4, 3, 2, 0, 1, 7, 12, 4, 0, 13, 2], [2, 2, 6, 0, 12, 2, 6, 0, 1, 2, 6, 5, 0, 7, 0, 8, 23, 0, 0, 1, 1, 5, 7, 0, 0, 10, 0, 1, 3, 1, 5, 10, 0, 13, 0, 0, 0, 4, 4, 2, 0, 2, 3, 5, 0, 1, 3, 1, 10, 2], [2, 8, 13, 11, 1, 9, 2, 17, 0, 7, 4, 6, 5, 5, 1, 11, 9, 0, 0, 1, 2, 5, 5, 1, 0, 9, 3, 15, 0, 3, 0, 35], [8, 7, 16, 1, 16, 2, 5, 2, 2, 0, 4, 0, 4, 1, 10, 20, 0, 2, 0, 0, 13, 0, 21, 0, 3, 0, 35, 1, 0, 0, 2, 2, 1, 0, 2, 13, 0, 0, 0, 0, 3], [5, 0, 13, 6, 5, 7, 0, 4, 0, 9, 21, 0, 0, 0, 8, 6, 3, 2, 0, 10, 0, 19, 0, 3, 1, 23, 8, 0, 15, 0, 0, 4, 3, 8, 0, 1, 4, 10, 0, 0, 4, 1, 12, 2], [0, 2, 8, 0, 13, 0, 13, 28, 3, 5, 13, 10, 2, 14, 1, 24, 1, 3, 1, 13, 9, 1, 14, 0, 0, 0, 2, 3, 5, 0, 1, 5, 12, 3, 2, 1, 3, 14, 8], [8, 5, 12, 19, 2, 11, 5, 10, 7, 2, 4, 8, 1, 8, 1, 16, 24, 2, 1, 3, 8, 10, 1, 1, 12, 8, 22, 1, 11, 25], [9, 12, 10, 0, 16, 3, 6, 0, 13, 4, 5, 6, 0, 4, 1, 8, 19, 0, 0, 7, 3, 8, 0, 6, 1, 19, 0, 5, 0, 21, 9, 0, 6, 1, 0, 0, 2, 6, 5, 0, 1, 3, 16, 2, 0, 1, 0, 12, 8], [6, 4, 9, 14, 1, 10, 3, 5, 0, 8, 2, 5, 5, 0, 8, 0, 9, 23, 2, 0, 1, 2, 5, 8, 0, 1, 10, 1, 21, 1, 5, 24, 9, 0, 10, 0, 0, 4, 3, 2, 0, 2, 7, 16, 2, 2, 4, 2, 13, 4], [4, 1, 37, 1, 0, 16, 0, 42, 1, 5, 1, 48, 7, 1, 34, 1, 0, 2, 11, 4, 1, 2, 6, 20, 2, 2, 23, 1], [6, 11, 20, 1, 21, 2, 13, 11, 4, 6, 7, 1, 3, 1, 11, 17, 3, 0, 0, 5, 8, 8, 1, 8, 3, 12, 1, 3, 0, 16, 9, 0, 12, 1, 1, 4, 2, 5, 0, 2, 7, 13, 1, 1, 3, 1, 13], [16, 13, 23, 2, 31, 6, 11, 15, 6, 7, 6, 0, 9, 0, 10, 22, 0, 1, 1, 4, 5, 3, 0, 1, 10, 10, 19, 1, 5, 1, 3, 5, 1, 5, 0, 0, 0, 2, 4, 6, 0, 1, 12, 6, 1, 5, 1, 11, 4], [13, 13, 17, 2, 17, 4, 5, 1, 5, 4, 6, 7, 6, 1, 8, 15, 4, 0, 0, 9, 9, 5, 0, 9, 4, 21, 0, 6, 1, 26, 13, 0, 12, 2, 1, 1, 3, 5, 5, 0, 9, 13, 3, 1, 6, 1, 16, 8], [14, 17, 22, 1, 25, 4, 8, 0, 13, 8, 9, 3, 0, 7, 2, 9, 28, 1, 5, 5, 5, 1, 0, 11, 6, 12, 0, 8, 25, 8, 0, 15, 0, 0, 0, 1, 3, 7, 0, 1, 7, 9, 3, 1, 2, 1, 12], [5, 11, 18, 29, 3, 5, 1, 6, 5, 5, 8, 1, 8, 2, 18, 18, 1, 1, 4, 2, 9, 1, 0, 12, 0, 28, 1, 11, 1, 22, 13, 11, 1, 5, 5, 3, 2, 4, 16, 5, 2, 15, 7], [9, 20, 22, 1, 24, 2, 8, 1, 5, 3, 5, 10, 1, 7, 1, 13, 26, 1, 1, 7, 7, 10, 1, 18, 3, 26, 1, 5, 22, 11, 1, 8, 0, 0, 1, 3, 4, 6, 0, 1, 4, 16, 4, 3, 4, 0, 20], [15, 13, 18, 18, 2, 17, 1, 5, 1, 10, 5, 6, 10, 6, 0, 15, 30, 0, 2, 7, 5, 12, 2, 0, 11, 2, 18, 0, 10, 2, 31, 3, 14, 1, 0, 3, 5, 6, 0, 0, 10, 12, 3, 0, 2, 2, 15], [14, 24, 19, 30, 1, 37, 5, 13, 1, 18, 7, 8, 12, 0, 11, 1, 13, 36, 3, 9, 13, 12, 3, 1, 16, 3, 1, 1, 6, 2, 24, 15, 1, 19, 0, 1, 1, 3, 3, 7, 1, 1, 5, 20, 3, 0, 2, 4, 8, 5], [8, 16, 25, 34, 1, 24, 1, 23, 1, 36, 9, 8, 9, 0, 11, 0, 10, 34, 1, 1, 9, 10, 11, 2, 0, 22, 1, 23, 1, 7, 2, 36, 12, 0, 18, 0, 0, 0, 6, 5, 5, 0, 1, 8, 16, 2, 2, 2, 2, 26, 7], [18, 20, 35, 2, 45, 4, 11, 1, 22, 11, 10, 13, 0, 8, 2, 18, 35, 5, 1, 11, 10, 10, 0, 0, 17, 1, 35, 1, 10, 4, 31, 14, 12, 3, 0, 0, 5, 5, 6, 0, 12, 21, 2, 0, 4, 6, 14]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

