created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Crystal Shadowmist", "Tribal S", "Gollum Mah Precious", "L\u00e4n\u00e7e", "Mort\u00e4rion", "Grasszanine", "Rina Of Theros", "Bryxzi", "Liyo Morgaine", "Lady Sherena", "Bella Bitty", "Tootsie Pop Rocks", "Nickhia", "Jimbo The Pleb", "Sub Train", "Heres A Quarter", "Kosair", "Gabe Malhorn", "Zaedy Zae", "Daphne Agla\u00e9", "Belvyn Brightblade", "Cat Wigglebooty", "Halfpint The Drunk", "Be\u00eb", "Morton Saltbringer", "Venomina The Sly", "\u00c7onstant\u00edne", "No Reserv\u00e9", "Divine Mimine", "Lord Erin The Wise", "Tegan Parker", "Elonith Requiem", "Mistwalker Cael", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Klenga", "Astraeus Windrunner", "Rozaalyna", "Black Raspberry Pie", "Crusader Siolith", "Adjudicatrix Farra", "Newtype Khan", "Swithblight", "Eibh\u00ebar", "Solus Luxes", "Mike The Archmagus", "Glorious Gluvs", "Revenant Brandorf", "Jmbrage Rev"];
const professions = ["Tempest", "Herald", "Druid", "Harbinger", "Vindicator", "Scrapper", "Spellbreaker", "Reaper", "Herald", "Herald", "Willbender", "Firebrand", "Scrapper", "Scourge", "Berserker", "Firebrand", "Herald", "Firebrand", "Firebrand", "Druid", "Reaper", "Firebrand", "Scrapper", "Berserker", "Reaper", "Chronomancer", "Druid", "Reaper", "Vindicator", "Renegade", "Weaver", "Tempest", "Reaper", "Herald", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Reaper", "Chronomancer", "Firebrand", "Reaper", "Spellbreaker", "Scourge", "Chronomancer", "Firebrand", "Weaver", "Berserker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 1, 0, 0, 6, 2, 2, 1, 1, 3, 1, 3, 2], [1, 0, 1, 3, 0, 18, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 5, 4, 5, 3, 4, 2, 4, 0, 0, 0, 0], [0, 0, 6, 14, 2, 5, 2], [3, 5, 5, 3, 5, 8], [0, 4, 4, 1, 10, 3, 1, 8], [0, 2, 2, 4, 0, 3, 5, 5, 3, 5, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 2, 1, 2, 0, 1, 6, 2, 1, 3, 3, 4, 4, 1, 1, 1, 0, 0, 1], [0, 2, 0, 0, 7, 0, 0, 0, 5, 7, 2, 4, 2, 2, 3, 1], [8, 0, 7, 4, 4, 2, 5, 0, 5], [31, 1, 4], [1, 1, 0, 1, 0, 7, 1, 2, 0, 1, 3, 1, 4, 0, 5, 1, 2, 3, 1, 0, 2, 0, 2], [2, 0, 0, 2, 1, 0, 6, 0, 1, 1, 2, 6, 0, 5, 4, 2, 2, 3, 0, 0, 0, 0, 0, 2], [10, 7, 4, 2, 0, 3, 4, 4, 2, 2, 2], [0, 0, 0, 2, 0, 0, 10, 0, 1, 1, 1, 8, 1, 1, 0, 1, 4, 7, 1, 4], [0, 0, 0, 1, 0, 10, 0, 2, 1, 3, 0, 4, 3, 3, 3, 4, 2, 1, 4, 1, 0, 0, 1], [10, 6, 7, 0, 7, 6, 5, 2], [1, 1, 2, 11, 2, 5, 5, 5, 4, 5, 2, 1, 0, 0, 1, 0], [2, 6, 5, 4, 2, 5, 5, 3, 3, 2, 1, 2, 3, 2], [2, 0, 0, 1, 7, 0, 0, 1, 3, 4, 3, 4, 3, 6, 0, 6, 1, 3, 1, 0, 0, 2], [2, 0, 0, 2, 0, 8, 3, 2, 0, 1, 3, 4, 4, 3, 4, 5, 4, 2], [3, 1, 0, 6, 3, 0, 28, 0, 4, 4], [0, 3, 11, 1, 1, 0, 0, 10, 1, 7, 4, 6, 2, 4, 4, 0, 2, 0], [0, 0, 0, 1, 1, 0, 14, 1, 1, 0, 0, 6, 3, 4, 6, 1, 5, 4, 0, 4, 4, 0, 0, 3], [0, 2, 0, 0, 8, 0, 0, 0, 1, 10, 2, 7, 8, 5, 2, 3, 3, 5, 0, 0, 1, 2], [0, 1, 2, 0, 7, 3, 0, 1, 0, 10, 5, 7, 8, 2, 4, 4, 0, 4, 0, 0, 0, 2], [10, 3, 7, 8, 6, 7, 6, 5, 5, 3, 2, 2, 1], [0, 4, 1, 0, 12, 4, 2, 1, 1, 12, 2, 7, 3, 5, 3, 4, 1, 2, 3, 0, 1, 0], [1, 0, 2, 1, 26, 5, 2, 1, 3, 11, 4, 7, 7], [0, 0, 1, 1, 8, 1, 2, 0, 5, 15, 0, 6, 0, 4, 2, 4, 5, 2, 0, 4, 2, 8], [0, 0, 4, 16, 1, 1, 1, 2, 9, 3, 7, 2, 4, 6, 2, 3, 2, 5, 3, 2, 2], [3, 2, 4, 0, 0, 26, 4, 3, 1, 10, 2, 8, 2, 7, 5, 2, 0, 0, 3], [14, 2, 2, 2, 9, 12, 5, 5, 4, 4, 3, 8, 2, 2, 3, 0, 1, 5], [2, 2, 0, 3, 0, 0, 16, 3, 2, 1, 4, 10, 3, 5, 6, 5, 6, 6, 3, 4, 2, 1, 1, 3], [4, 2, 0, 3, 0, 17, 1, 2, 2, 1, 10, 5, 8, 3, 6, 9, 5, 1, 1, 1, 1, 1, 6], [1, 0, 3, 1, 1, 1, 22, 3, 0, 2, 10, 13, 1, 6, 3, 6, 8, 6, 0, 2, 1, 0, 0, 2], [3, 2, 14, 19, 1, 8, 6, 3, 7, 11, 3, 6, 3, 2, 5], [3, 1, 1, 3, 0, 25, 3, 4, 1, 7, 6, 0, 7, 4, 7, 4, 8, 5, 5, 4, 1, 1, 0], [1, 0, 5, 1, 33, 3, 9, 3, 7, 6, 0, 6, 7, 7, 2, 3, 5, 2], [1, 2, 5, 0, 0, 27, 1, 5, 1, 6, 14, 4, 10, 1, 4, 6, 4, 3, 2, 1, 1, 3, 1], [2, 0, 0, 2, 1, 18, 5, 2, 3, 7, 10, 3, 9, 8, 7, 4, 6, 3, 4, 3, 1, 1, 5], [4, 1, 1, 0, 2, 24, 2, 3, 0, 9, 11, 7, 9, 6, 3, 8, 6, 2, 2, 1, 0, 4], [3, 2, 3, 9, 0, 27, 2, 8, 5, 14, 13, 3, 7, 4, 2, 3, 10, 3, 3, 2, 1, 0, 7], [3, 2, 2, 8, 0, 0, 31, 1, 6, 2, 11, 15, 2, 13, 5, 4, 8, 10, 4, 5, 4, 1, 0, 7], [1, 2, 4, 0, 38, 1, 8, 4, 11, 16, 6, 11, 8, 7, 5, 8, 3, 5, 3, 0, 2, 5], [6, 3, 1, 4, 1, 29, 7, 5, 6, 11, 12, 5, 11, 8, 8, 7, 10, 5, 4, 4, 7, 3, 2], [2, 2, 2, 6, 3, 30, 4, 3, 6, 23, 18, 2, 12, 5, 5, 6, 5, 3, 5, 2, 4, 2, 13], [7, 1, 0, 5, 0, 1, 31, 6, 9, 4, 16, 16, 4, 14, 9, 4, 10, 11, 5, 6, 4, 5, 3, 12], [2, 10, 6, 51, 6, 5, 2, 28, 28, 10, 13, 10, 4, 16, 14, 2, 8, 8, 4, 14], [1, 1, 88, 7, 9, 3, 28, 30, 6, 18, 9, 9, 8, 8, 6, 1, 4, 5, 4]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

