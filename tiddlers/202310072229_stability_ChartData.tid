created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Grayson Kin", "Gadget Windrunner", "Mitsuri Ai", "Nickhia", "Etchery Howls", "K\u00e2 \u00d4tik R\u00e6j", "Aira Draugr", "Jimbo The Pleb", "Kosa\u00efr", "Zaedy Zae", "Newtype Khan", "Xanvias Einzbern", "Zaylen Harker", "Belvyn Brightblade", "Mistwalker Cael", "Darks Na", "Atria Ruinheart", "Ryvalia Fazebringer", "Crusader Siolith", "Gabe Malhorn", "Amiti\u00e9l", "Sygaldry Verdandi"];
const professions = ["Berserker", "Scrapper", "Druid", "Scourge", "Druid", "Berserker", "Herald", "Berserker", "Tempest", "Druid", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Herald", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.2369, 0.7304, 0.9687, 0.0, 0.0, 0.0, 1.063, 0.0, 0.0, 0.0, 1.0789, 0.7881, 2.4928, 0.0, 2.1497, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.9391, 1.1111, 1.2832, 0.0, 1.2475, 1.2355, 0.0, 0.0, 0.0, 1.039, 1.0508, 2.1888, 0.0, 1.9843], [0.6956, 0.7122, 1.2077, 0.0, 0.8147, 0.755, 1.7172, 0.2268, 0.0, 0.5594, 1.3135, 0.7904, 0.0, 4.134, 0.0, 0.0], [0.0, 9.3107, 0.0, 0.3648, 1.0975, 4.134, 0.0, 0.0], [0.0, 0.8029, 0.5913, 0.9687, 1.3586, 0.7893, 0.6521, 1.7989, 0.3564, 0.0, 0.5994, 1.6813, 0.1824, 0.0, 6.1183, 0.2474], [0.5276, 0.0, 0.0, 0.2818, 1.0199, 0.8695, 0.0, 1.887, 1.0439, 1.9562, 0.8177, 0.7938, 0.0, 0.0, 0.5594, 1.0508, 2.128, 0.0, 6.2837, 0.0, 0.0], [0.6212, 2.4192, 0.0, 7.1001, 0.7378, 1.739, 1.339, 1.5096, 0.0, 0.8656, 0.3432, 4.9062, 0.7938], [1.1558, 0.0, 0.0, 1.4973, 1.2521, 0.9687, 2.0002, 0.0, 2.0113, 0.0, 4.9062, 0.0, 0.0, 1.2168, 0.0, 0.7881, 2.0064, 1.3326, 5.953, 0.0], [0.0, 0.0, 2.3104, 1.3671, 1.2173, 0.7692, 2.7928, 0.7383, 2.1965, 4.0885, 0.6642, 0.335, 0.0, 1.039, 1.7338, 0.8512, 0.0, 6.7798], [0.5106, 0.8064, 0.3094, 1.8595, 0.9982, 0.6956, 0.8262, 1.3586, 0.7638, 1.4071, 2.0442, 0.6804, 0.9009, 0.5195, 1.5762, 1.7024, 2.2733, 6.6144, 0.863, 1.8554], [1.0212, 0.0, 0.0, 1.0706, 1.4539, 1.5999, 0.0, 6.3781, 0.0, 2.5205, 1.0982, 4.0067, 0.0, 0.0, 1.039, 1.8914, 1.824, 0.0, 9.9216, 0.0, 0.0], [0.0, 0.0, 0.0, 2.085, 0.9765, 1.426, 1.7094, 3.5098, 1.7058, 2.0249, 3.7614, 1.8792, 0.0, 0.0, 2.038, 1.0508, 2.9184, 2.1165, 7.4412, 0.0, 2.144], [10.5184, 4.625, 32.4106, 3.8646, 2.2264], [0.2893, 0.215, 0.0, 9.016, 3.1248, 2.1216, 7.037, 5.2836, 0.0, 2.2914, 6.8297, 15.9452, 2.4948], [0.417, 0.0, 0.0, 0.958, 2.4955, 2.1564, 2.5926, 3.0569, 2.546, 5.5942, 7.2775, 0.1944, 0.0, 0.0, 2.6374, 6.1997, 7.8432, 0.7839, 13.0634, 0.0, 1.1544], [8.5559, 7.2934, 9.0953, 7.3834, 7.1386, 17.3352, 5.3136, 3.8462, 0.208, 9.1508, 7.4081, 10.8224], [2.0594, 0.0, 0.0, 3.7755, 3.3418, 8.9732, 0.0, 5.7742, 4.7356, 5.3196, 15.6181, 2.7216, 3.6383, 0.1768, 1.1988, 7.7234, 8.6336, 0.0, 21.6622, 1.8554], [1.0808, 2.4461, 1.9838, 4.4516, 4.9693, 6.1561, 3.6467, 7.3216, 0.0, 4.5064, 9.7812, 18.3165, 5.5566, 0.0, 0.3848, 9.3506, 0.0, 13.3152, 1.8814, 18.5203, 2.2887, 7.2152], [2.3403, 1.4246, 4.9024, 5.9024, 9.0776, 6.5527, 11.473, 5.703, 8.3054, 15.291, 6.5286, 0.0, 2.028, 8.0719, 10.2453, 9.9712, 13.0127, 28.4419, 5.5661], [2.7402, 0.2957, 0.0, 4.1136, 6.8572, 8.1037, 7.0085, 9.8879, 8.2236, 10.7422, 22.5685, 5.4756, 0.2888, 2.2984, 9.9101, 12.3469, 16.9632, 4.9386, 25.1347, 0.0, 7.1328], [2.536, 8.2253, 1.1833, 6.9006, 11.86, 2.2792, 16.2659, 0.0, 10.0567, 12.2179, 11.9384, 6.9174, 3.1532, 0.5304, 4.4755, 8.3539, 18.9088, 8.6229, 35.8831, 0.0], [4.1954, 2.9299, 11.2136, 9.765, 10.121, 11.6524, 14.8318, 9.853, 12.4238, 20.9331, 4.293, 3.1994, 0.1768, 4.1159, 11.7164, 14.8352, 9.1716, 36.2138, 4.3336, 4.3292]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

