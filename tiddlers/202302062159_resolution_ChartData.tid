created: 20230206215940000
creator: Drevarr
modified: 20230705163518805
modifier: drevarr
tags: ChartData
title: 202302062159_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Gavann", "Belvyn Brightblade", "Zaylen Harker", "\u00c2 R K", "Tyrisai", "Ravioli Fetabringer", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy", "Johosh The Great"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[240.548, 54.6858, 140.8349, 53.6482, 0.0, 9.4208, 44.2116, 20.4503], [99.22, 52.3692, 0.0, 231.2001, 0.0, 193.2, 38.2985, 27.4226], [0.0, 17.6904, 182.3952, 342.0613, 0.0, 36.1376, 96.5294, 149.7123], [325.127, 131.6952, 50.2819, 322.1497, 47.3248, 135.3761, 0.0], [57.959, 19.8666, 170.8675, 469.3561, 0.0, 288.6592, 128.4448, 39.0339, 28.3483, 34.1347, 174.0057, 0.0, 0.0, 274.2446, 30.2702, 0.0, 0.0], [774.521, 288.3114, 513.816, 15.9988, 63.1686, 369.9872], [650.98, 128.817, 449.0486, 375.1023, 0.0, 249.872, 43.1543, 130.0856, 182.9942, 110.7314, 370.2223], [461.978, 100.8072, 434.2598, 427.881, 0.0, 276.9568, 161.4567, 94.6476, 153.8909, 136.7453, 349.4726, 39.352, 29.3436, 97.4683, 33.4152, 0.0, 31.3287], [685.707, 319.8312, 371.2368, 503.8753, 23.6966, 225.1424, 211.699, 120.4231, 297.7603, 237.9796, 356.545, 63.0344, 85.2891, 273.092, 174.6576, 63.5981, 53.8791], [861.762, 388.4166, 531.4109, 422.0553, 23.6742, 215.5744, 156.875, 110.4862, 252.8011, 148.3071, 364.6111, 62.9751, 62.7997, 263.3732, 390.4243, 204.8368, 182.4912], [1028.984, 394.4538, 324.0643, 513.9615, 23.6966, 401.488, 172.5781, 125.6112, 445.5422, 209.3849, 405.2339, 125.7922, 132.3796, 270.0705, 192.348, 223.2096, 37.9755]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

