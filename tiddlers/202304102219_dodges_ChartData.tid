created: 20230410221909000
creator: Drevarr
modified: 20230705163525166
modifier: drevarr
tags: ChartData
title: 202304102219_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Zaylen Harker", "Black Raspberry Pie", "Sub Train", "Tribal S", "Aisling Sidra", "Venomina The Siren", "Rina Of Theros", "Jeckyll Mbs", "Smol Daddy Tika", "Oo Dads Mad", "Ark Darkness", "High Sorcer Baradun", "Sygaldry Verdandi", "Xanvias Einzbern", "Be\u00eb", "Kmpek", "Drevarr Moonwillow", "Blancooo Padreee", "Tootsie Pop Rocks", "Arriasa", "Belvyn Brightblade", "Inedible Plant", "Fribble Bibble", "Asorlia", "Sumatra Satyricon", "Legacy Of Mathus", "Koralia Danai", "Sp\u00edcy Cheese", "Sofya De Nova", "Elonith Requiem", "Grasszanine", "Nazhul Naxxremis", "Ak\u00e1nt\u00f3r", "Tegan Parker", "Lord Erin The Wise", "Rozaalyna", "Arcanophage Farra", "Ryvalia Fazebringer", "Sassy Daddy Demon", "Smol Gluvs", "Gavann", "Mac Chiato", "Eibh\u00ebar", "Johosh The Great", "Mike The Archmagus", "Newtype Khan", "Solus Sanctus", "Mistwalker Caelon", "Xyntharos"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Reaper", "Tempest", "Scourge", "Berserker", "Berserker", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Scourge", "Vindicator", "Scrapper", "Berserker", "Scrapper", "Druid", "Firebrand", "Vindicator", "Scrapper", "Chronomancer", "Soulbeast", "Berserker", "Firebrand", "Berserker", "Weaver", "Scourge", "Spellbreaker", "Scourge", "Druid", "Tempest", "Weaver", "Scourge", "Spellbreaker", "Chronomancer", "Vindicator", "Scourge", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Weaver", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 2, 0, 8, 10, 2, 1, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 0, 5, 6, 3, 2], [8, 0, 3, 6, 12, 2, 3, 2, 3, 0, 0, 1, 2, 1, 0, 0, 0, 4, 3, 6, 5, 3], [0, 0, 12, 6, 15, 1, 2, 3, 2, 0, 4, 1, 0, 0, 2, 1, 3, 3, 3, 1, 3, 3], [0, 2, 5, 5, 0, 4, 2, 3, 1, 9, 1, 5, 1, 9, 10, 2, 6], [1, 2, 4, 14, 1, 2, 3, 0, 4, 0, 2, 2, 4, 2, 4, 3, 6, 8, 2, 2], [25, 2, 2, 3, 5, 1, 5, 1, 1, 4, 3, 0, 0, 2, 0, 4, 5, 6], [15, 2, 2, 1, 3, 0, 5, 3, 2, 3, 1, 2, 5, 3, 5, 6, 5, 6], [1, 3, 8, 36, 1, 2, 2, 0, 0, 3, 0, 1, 1, 3, 5, 2, 0, 2], [8, 1, 6, 9, 12, 3, 1, 0, 1, 2, 4, 1, 1, 0, 4, 2, 3, 3, 4, 2, 4], [2, 1, 2, 8, 12, 0, 3, 1, 5, 4, 2, 1, 2, 6, 2, 5, 4, 4, 6, 5, 3], [3, 7, 21, 51], [0, 7, 8, 24, 3, 1, 1, 2, 0, 2, 2, 2, 3, 6, 4, 3, 1, 6, 8, 2], [0, 3, 13, 31, 1, 2, 3, 4, 4, 0, 4, 0, 2, 3, 4, 4, 3, 2, 6], [3, 3, 11, 23, 1, 2, 2, 2, 4, 3, 3, 3, 2, 6, 2, 5, 3, 8, 4], [4, 0, 5, 11, 34, 2, 1, 3, 1, 0, 2, 3, 1, 0, 5, 0, 2, 0, 3, 6, 6, 3], [4, 1, 3, 7, 39, 2, 0, 2, 7, 0, 4, 1, 3, 4, 0, 2, 2, 2, 13], [4, 6, 6, 7, 4, 10, 2, 5, 7, 5, 1, 5, 1, 10, 12, 2, 15], [8, 3, 12, 14, 28, 2, 0, 2, 1, 0, 2, 2, 2, 1, 2, 2, 3, 2, 3, 4, 5, 6], [2, 2, 9, 30, 4, 1, 3, 4, 0, 2, 3, 2, 1, 6, 2, 4, 2, 8, 6, 7, 7], [9, 1, 5, 18, 26, 3, 0, 2, 3, 3, 4, 2, 2, 6, 3, 4, 4, 5, 4, 4], [5, 1, 5, 9, 30, 3, 0, 0, 3, 0, 5, 2, 3, 2, 2, 1, 8, 2, 9, 5, 6, 7], [8, 2, 13, 23, 63], [2, 10, 10, 13, 3, 1, 0, 1, 1, 4, 3, 6, 10, 9, 3, 6, 1, 10, 12, 0, 10], [9, 3, 11, 12, 31, 2, 2, 4, 1, 1, 5, 1, 2, 5, 3, 0, 3, 2, 3, 7, 5, 4], [0, 8, 1, 34, 2, 0, 3, 4, 4, 2, 3, 4, 7, 1, 5, 3, 12, 8, 7, 8], [0, 9, 22, 33, 4, 3, 3, 3, 0, 7, 3, 4, 3, 0, 2, 5, 3, 5, 3, 3, 7], [1, 11, 26, 73, 4, 5, 5], [9, 2, 5, 12, 30, 3, 2, 2, 5, 0, 3, 4, 2, 5, 5, 3, 8, 3, 5, 7, 2, 9], [1, 1, 3, 20, 35, 1, 3, 3, 4, 0, 4, 2, 2, 2, 5, 4, 0, 1, 9, 11, 4, 14], [17, 47, 2, 2, 5, 4, 1, 1, 3, 1, 6, 2, 5, 1, 8, 10, 4, 10], [4, 30, 50, 2, 2, 1, 8, 0, 5, 1, 6, 4, 2, 1, 6, 2, 6], [12, 51, 1, 1, 3, 4, 1, 6, 3, 5, 4, 6, 1, 5, 1, 5, 11, 4, 8], [3, 1, 13, 19, 49, 6, 1, 7, 3, 3, 4, 6, 3, 5, 3, 8], [9, 0, 5, 9, 46, 1, 3, 7, 1, 5, 0, 4, 1, 7, 1, 6, 4, 5, 7, 6, 10], [2, 8, 20, 66, 1, 2, 1, 4, 2, 2, 3, 3, 3, 4, 4, 3, 3, 4, 8, 2, 4], [7, 3, 10, 24, 65, 5, 2, 2, 4, 0, 3, 3, 1, 3, 7, 2, 5, 3, 4, 6], [7, 4, 24, 75, 2, 1, 1, 8, 6, 6, 4, 4, 5, 4, 1, 1, 6], [2, 5, 11, 15, 67, 5, 3, 6, 3, 1, 4, 3, 3, 2, 5, 1, 4, 3, 3, 5, 4, 5], [1, 11, 18, 42, 3, 2, 6, 6, 1, 10, 3, 4, 5, 7, 1, 7, 5, 7, 9, 5, 9], [5, 20, 23, 60, 5, 9, 7, 9, 3, 6, 8, 5, 3, 6, 2, 7, 8, 0], [3, 3, 10, 22, 76, 5, 4, 3, 6, 2, 7, 4, 4, 7, 11, 4, 7, 5, 7], [1, 9, 15, 64, 8, 5, 5, 5, 2, 12, 6, 7, 4, 5, 3, 8, 5, 10, 8, 8, 10], [5, 7, 16, 92, 4, 3, 5, 5, 3, 6, 5, 6, 2, 8, 4, 6, 4, 6, 9, 3, 9], [7, 13, 35, 99, 5, 4, 4, 3, 2, 5, 4, 2, 4, 6, 5, 4, 4, 9, 11, 7, 9], [9, 2, 13, 41, 86, 3, 4, 5, 7, 2, 5, 3, 4, 4, 9, 3, 8, 1, 10, 10, 8, 9], [7, 5, 20, 43, 88, 11, 6, 6, 7, 2, 7, 3, 6, 4, 9, 3, 5, 5, 8, 9, 2, 10], [12, 2, 20, 53, 59, 5, 4, 6, 10, 4, 13, 3, 7, 8, 7, 3, 7, 5, 9, 16, 6, 14], [5, 20, 43, 115, 5, 7, 5, 8, 11, 4, 5, 8, 10, 5, 6, 6, 9, 11, 5, 12], [6, 4, 16, 44, 127, 5, 7, 4, 8, 3, 9, 5, 5, 8, 7, 3, 7, 2, 9, 11, 5, 13], [6, 7, 20, 62, 184, 7, 11, 11, 9, 5, 13, 7, 3, 8, 10, 4, 6, 4, 12, 9, 7, 14]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

