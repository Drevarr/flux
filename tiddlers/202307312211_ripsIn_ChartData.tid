created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Koralia Danai", "Primal Clone", "Cat Wigglebooty", "Marshall R", "Glorious Gluvs", "Cedryn X", "Oo Dads Mad", "Rayla Shadowmoon", "Xanvias Einzbern", "Revitiel", "Arriasa", "Klenga", "Tegan Parker", "Solus Sanctus", "Aira Draugr", "Sygaldry Verdandi", "Kisumaiasu", "Etchery Howls", "Bella Sassy", "Mistwalker Cael", "Venomina The Sly", "Audens Silvermarker", "Drevarr Moonwillow", "Rozaalyna", "Ex Warcraft", "Zaedy Zae", "My Birthday Girl", "Bee Nemesis", "Kary\u00edna", "Tootsie Pop Rocks", "Grasszanine", "High Sorcer Baradun", "Be\u00eb", "Tribal S", "Black Raspberry Pie", "Name Is What", "Mort\u00e4rion", "Crusader Siolith", "Blanco Padre Guard", "Sub Train", "Ryvalia Fazebringer", "Newtype Khan", "Keypek The Drunk", "Mike The Archmagus", "Daphne Agla\u00e9", "Legacy Of Mathus", "Mister Jekyll", "Arcanophage Farra", "Eibh\u00ebar"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Herald", "Berserker", "Berserker", "Berserker", "Herald", "Berserker", "Vindicator", "Druid", "Firebrand", "Tempest", "Firebrand", "Herald", "Firebrand", "Scourge", "Druid", "Firebrand", "Vindicator", "Druid", "Firebrand", "Scrapper", "Scourge", "Tempest", "Druid", "Scrapper", "Berserker", "Vindicator", "Scrapper", "Spellbreaker", "Tempest", "Scourge", "Druid", "Chronomancer", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Scrapper", "Weaver", "Scourge", "Berserker", "Scourge", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0317, 0.0113, 0.0434, 0.0, 0.0], [0.0476, 0.0209, 0.0225, 0.0, 0.0083, 0.0, 0.0036, 0.0, 0.0, 0.0, 0.0066, 0.0], [0.0635, 0.0113, 0.0322, 0.0, 0.0, 0.0083, 0.0, 0.0072, 0.0, 0.0, 0.0, 0.0198, 0.025], [0.1111, 0.0182, 0.0257, 0.0, 0.0167, 0.0, 0.0108, 0.0, 0.0, 0.0, 0.0044, 0.0], [0.0476, 0.0278, 0.0241, 0.0, 0.0167], [0.0, 0.0235, 0.0161, 0.0, 0.0, 0.05, 0.0, 0.018, 0.0143, 0.0, 0.0, 0.0, 0.0088, 0.0, 0.0], [0.0952, 0.0217, 0.0273, 0.0, 0.0, 0.0167, 0.0, 0.0072, 0.0286, 0.0], [0.0159, 0.0295, 0.037, 0.0], [0.0317, 0.0452, 0.0064], [0.0, 0.0209, 0.0257, 0.0, 0.0333, 0.0, 0.018, 0.0143, 0.0179, 0.0, 0.0154, 0.025], [0.0159, 0.0243, 0.0129, 0.0, 0.05, 0.0, 0.0252, 0.0286, 0.0179, 0.0, 0.0, 0.011, 0.025, 0.0], [0.0317, 0.0365, 0.0177, 0.025, 0.0, 0.0036, 0.0, 0.0, 0.0, 0.0, 0.0022, 0.0], [0.0317, 0.0348, 0.0129, 0.0, 0.025, 0.0, 0.0072, 0.0, 0.0179, 0.0, 0.0, 0.011, 0.0, 0.0], [0.0317, 0.0217, 0.0289, 0.0, 0.0083, 0.0216, 0.0857, 0.0, 0.0066, 0.025, 0.0], [0.0159, 0.0295, 0.0257, 0.0, 0.0083, 0.0, 0.0216, 0.0, 0.0, 0.0, 0.0132, 0.025, 0.0], [0.1587, 0.0348, 0.0289, 0.0, 0.0], [0.0159, 0.0269, 0.0354, 0.0, 0.0, 0.0167, 0.0, 0.0216, 0.0, 0.0, 0.0, 0.0, 0.0154, 0.0, 0.0], [0.0635, 0.0148, 0.0498, 0.0, 0.0, 0.025, 0.0, 0.036, 0.0, 0.0357, 0.0, 0.0, 0.0044, 0.0, 0.0], [0.0, 0.0382, 0.0305, 0.0, 0.0083, 0.0, 0.0108, 0.0, 0.0, 0.0, 0.0, 0.0066, 0.0], [0.1587, 0.0261, 0.0386, 0.0, 0.0083, 0.0, 0.0144, 0.0, 0.0, 0.0, 0.0, 0.0044, 0.0], [0.0, 0.0235, 0.037, 0.0, 0.0, 0.0167, 0.0, 0.0144, 0.0, 0.0, 0.0, 0.0, 0.0352, 0.0], [0.0476, 0.0261, 0.0514, 0.0, 0.0, 0.0083, 0.0072, 0.0, 0.0, 0.0, 0.0, 0.0088, 0.0], [0.1429, 0.0374, 0.0032, 0.0, 0.0, 0.0667, 0.0, 0.0324, 0.0143], [0.0794, 0.0365, 0.0305, 0.0, 0.0, 0.0, 0.0, 0.0216, 0.0, 0.0, 0.0, 0.0, 0.0022, 0.0, 0.0], [0.0159, 0.0313, 0.037, 0.0, 0.0, 0.0, 0.0072, 0.0143, 0.0, 0.0, 0.0, 0.0286, 0.0, 0.0], [0.0476, 0.0443, 0.037], [0.0317, 0.0426, 0.0322, 0.0, 0.0, 0.0, 0.0108, 0.0, 0.0, 0.0, 0.0, 0.011, 0.0, 0.0], [0.0, 0.033, 0.0402, 0.0, 0.0, 0.0417, 0.0108, 0.0, 0.0, 0.0222, 0.0, 0.0154, 0.0, 0.0], [0.0794, 0.0191, 0.0354, 0.0, 0.0667, 0.0, 0.0468, 0.0286, 0.0, 0.0, 0.0, 0.0154, 0.05, 0.0], [0.1746, 0.0321, 0.0193, 0.0, 0.0, 0.0417, 0.0, 0.0216, 0.0, 0.0357, 0.0, 0.0, 0.022, 0.0, 0.0], [0.0317, 0.04, 0.0338, 0.0, 0.0, 0.0, 0.0108, 0.0, 0.0179, 0.0, 0.0, 0.0198, 0.025], [0.0, 0.0348, 0.0482, 0.0, 0.0, 0.05, 0.0, 0.0144, 0.0143, 0.0179, 0.0, 0.0, 0.0066, 0.0], [0.0317, 0.053, 0.0113, 0.0, 0.0333, 0.0036, 0.0, 0.0, 0.022, 0.0, 0.0], [0.0317, 0.0365, 0.0193, 0.0, 0.0333, 0.0, 0.0108, 0.0143, 0.0, 0.0, 0.0, 0.0463, 0.025, 0.0], [0.0952, 0.0287, 0.0354, 0.0167, 0.0, 0.036, 0.0286, 0.0179, 0.0, 0.022, 0.0], [0.0952, 0.0339, 0.0627, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0222, 0.0, 0.0088, 0.0], [0.1746, 0.0269, 0.0338, 0.0, 0.0083, 0.0, 0.0036, 0.0429, 0.0, 0.0, 0.0, 0.0463, 0.0, 0.0], [0.0952, 0.0478, 0.0434, 0.0, 0.0167, 0.0036, 0.0, 0.0], [0.0, 0.0443, 0.0514, 0.0083, 0.0, 0.0072, 0.0, 0.0, 0.0, 0.0, 0.0154, 0.0, 0.0], [0.1429, 0.046, 0.0338, 0.0, 0.0, 0.0083, 0.0, 0.018, 0.0, 0.0, 0.0, 0.0, 0.0088, 0.0, 0.0], [0.1111, 0.0443, 0.0241, 0.0, 0.025, 0.0, 0.018, 0.0, 0.0, 0.0, 0.0, 0.0286, 0.0, 0.0], [0.127, 0.04, 0.0322, 0.0, 0.0, 0.05, 0.0, 0.0324, 0.0, 0.0, 0.0, 0.0, 0.0176, 0.0], [0.0317, 0.0513, 0.0354, 0.0, 0.0, 0.0, 0.0, 0.018, 0.0, 0.0, 0.0, 0.0, 0.0242, 0.0, 0.0], [0.1429, 0.0417, 0.0305, 0.0164, 0.0, 0.0167, 0.0, 0.0216, 0.0143, 0.0, 0.0444, 0.0, 0.0198, 0.05, 0.0], [0.0635, 0.066, 0.0273, 0.0, 0.0, 0.0333, 0.0, 0.0108, 0.0, 0.0, 0.0, 0.0154, 0.025, 0.0], [0.381, 0.0408, 0.0482, 0.0, 0.0333, 0.0036, 0.0714, 0.0, 0.0044], [0.0635, 0.0374, 0.0788, 0.0, 0.0, 0.0, 0.0, 0.0324, 0.0286, 0.0, 0.0222, 0.0, 0.0198, 0.025, 0.0], [0.0159, 0.0452, 0.0531, 0.0, 0.0, 0.0252, 0.0, 0.0, 0.0551, 0.025, 0.0], [0.127, 0.0547, 0.0498, 0.0, 0.0333, 0.0, 0.0288, 0.0571, 0.0, 0.0, 0.0, 0.0198, 0.025, 0.0], [0.1746, 0.0686, 0.0514, 0.0, 0.0, 0.0333, 0.0, 0.0755, 0.0429, 0.0, 0.0, 0.0, 0.0837, 0.05, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

