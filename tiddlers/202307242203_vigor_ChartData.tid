created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Useless Light Field", "Crabbedmermaidd", "Mistwalker Cael", "Zaedy Zae", "Crusader Siolith", "Klengah", "Avatar Shazbott", "Tootsie Pop Rocks", "Inedible Plant", "Jerryatric Reflexes", "Tegan Parker", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Deadeye", "Vindicator", "Druid", "Firebrand", "Druid", "Tempest", "Scrapper", "Vindicator", "Spellbreaker", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.279, 34.9978, 37.2096, 144.0429, 0.0, 112.671], [236.096, 354.627], [133.7057, 27.5537, 120.3521, 26.2361, 26.128, 33.5328, 4.8416, 20.2244, 37.5751, 55.8905, 81.9891, 226.7955, 28.9267, 9.4493, 54.8433, 4.8706, 33.0673, 65.052], [144.0094, 69.5094, 145.8269, 50.0029, 0.0, 60.984, 0.0, 72.0792, 0.0, 48.9364, 66.0632, 179.3792, 72.9418, 0.0, 0.0, 0.0, 78.7372, 50.427], [131.7661, 0.0, 80.017, 0.0, 95.2366, 8.904, 0.0, 0.0, 0.0, 83.6426, 38.3403, 370.8006, 0.0, 0.0, 119.8393, 80.1731, 115.8512, 171.756], [243.1673, 80.7638, 132.273, 44.9802, 64.1442, 46.0992, 0.0, 61.1842, 0.0, 29.3618, 157.372, 438.7891, 74.281, 0.0, 0.0, 0.0, 0.0, 0.0], [87.2349, 109.4016, 0.0, 27.8334, 107.0162, 140.8562, 543.9078, 103.0738, 55.6675, 94.1853, 59.5589, 110.3015], [337.7189, 103.4018, 195.96, 13.9458, 53.5624, 36.4224, 0.0, 41.503, 41.5513, 63.1022, 108.8863, 328.151, 49.4611, 0.0, 41.699, 0.0, 45.2074, 107.523], [271.8965, 86.7143, 168.8522, 46.1587, 35.926, 66.7632, 13.8856, 219.0703, 378.327, 72.1829, 53.6602, 59.1945, 0.0, 41.0451, 141.921], [104.7385, 371.3442, 43.3808, 0.0, 39.0096, 0.0, 0.0, 0.0, 0.0, 361.5781, 351.4829, 111.8678, 87.9811, 78.3216, 0.0, 117.0074, 146.952], [805.8706, 178.0425, 410.8628, 49.6943, 71.3948, 165.6816, 23.8544, 99.3326, 82.6387, 114.3566, 239.4791, 660.567, 180.8813, 45.288, 122.6495, 0.0, 88.0446, 397.683], [552.1571, 178.5168, 601.1073, 88.1645, 89.5537, 183.5904, 40.9632, 88.9488, 147.9146, 289.5618, 510.2203, 1464.8883, 133.1611, 97.1366, 182.0252, 0.0, 236.6741, 274.599]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

