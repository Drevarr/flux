created: 20230427220456000
creator: Drevarr
modified: 20230705163526927
modifier: drevarr
tags: ChartData
title: 202304272204_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Bell Delinger", "Johosh The Great", "Elusive In The Mist", "Sole Tempesta", "Primal Clone", "Chio Slayer", "Xkaet", "Solikai", "Mac Aaroni", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.35, 0.3261, 0.2172, 0.7429, 0.1796, 0.3229, 0.6111, 0.0, 0.1652], [0.1564, 0.005, 0.35, 0.2353, 0.0, 0.0196, 0.113, 0.1429, 0.0761, 0.1515, 0.0286, 0.1078, 0.2118, 0.2593, 0.1226, 0.0522, 0.059, 0.5588], [0.0, 0.0915, 0.0171, 0.4929, 0.0761, 0.4646, 1.2857, 0.0359, 0.4062, 0.5185, 0.4623, 0.2957, 0.0521, 0.9118], [0.7359, 0.0348, 1.6, 0.9804, 0.2295, 0.1569, 0.3801, 1.2], [0.2051, 0.0, 0.9833, 0.3529, 0.0, 0.085, 0.1712, 0.4929, 0.3152, 0.5303, 0.4857, 0.1617, 0.6632, 0.3704, 0.4434, 0.3826, 0.0729, 0.6176], [1.087, 1.1465, 1.7143, 0.5629, 1.3194, 0.7222], [0.0547, 0.95, 0.3529, 0.0, 0.1569, 0.2671, 0.8071, 0.9239, 0.9394, 1.3429, 0.2275, 0.9271, 0.5, 0.2264, 0.4174, 0.1319, 0.6471], [0.759, 0.0796, 1.8167, 0.6667, 0.1475, 0.1438, 0.4897, 1.1643, 1.0978, 1.5909, 1.9429, 0.5749, 1.434], [1.0487, 0.0896, 1.3333, 0.8824, 0.0984, 0.1046, 0.3801, 1.5643, 1.25, 1.7929, 1.8857, 0.497, 1.7465, 2.1296, 0.4906, 0.3478, 0.5521, 1.6176], [0.7205, 0.0945, 1.05, 1.1569, 0.1148, 0.2418, 0.4966, 1.6643, 1.5978, 1.8131, 2.7429, 0.976, 2.1076, 2.4074, 0.8113, 0.487, 0.5208], [0.8359, 0.1791, 1.4333, 0.8235, 0.1639, 0.3464, 0.6336, 1.0857, 1.5435, 1.6414, 2.6857, 0.7365, 1.9583, 2.6481, 0.783, 0.8783, 0.5069, 1.8824]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

