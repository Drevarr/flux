created: 20230703220627000
creator: Drevarr
modified: 20230705163541229
modifier: drevarr
tags: ChartData
title: 202307032206_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Drevarr Moonwillow", "Big Baby Norn", "Miphest\u00f6", "Drumina", "Tegan Parker", "Artakama Nahid"];
const professions = ["Tempest", "Scrapper", "Mechanist", "Tempest", "Druid", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.1251, 42.7896, 42.1128, 12.221, 25.0549, 59.4, 93.1022, 73.5878, 72.1987, 40.4544, 162.9425], [14.5445, 29.0899, 2.6057, 17.5997, 0.0, 0.0, 303.3705, 0.0, 88.5822, 0.0, 0.0, 19.1645, 20.5436, 17.6859, 10.685, 6.2333, 4.0068, 19.3794, 8.0436, 6.3703, 10.5019, 7.9834, 20.4147, 21.7202, 8.3936, 52.5004], [19.7087, 35.9523, 23.1212, 40.6195, 45.7884, 84.8355, 33.9077, 38.8238, 49.7534, 64.6061, 73.2226, 25.1636, 34.2624, 199.6339], [99.675, 45.1066, 55.2763, 115.2835, 156.5995, 52.9905, 55.3221, 37.0694, 294.3406], [114.2251, 27.5796, 0.0, 0.0, 0.0, 500.226, 3.9616, 41.8807, 35.5799, 0.0, 3.5402, 0.0, 18.7695, 0.0, 0.0, 15.624, 0.0, 0.0, 0.0, 38.4437, 39.6581, 36.2644, 64.101, 24.3277, 162.4278], [125.1566, 31.6883, 39.0852, 82.1923, 0.0, 444.207, 79.6446, 81.11, 0.0, 0.0, 39.4183, 17.0016, 56.173, 43.3237, 11.2282, 20.3616, 42.7227, 34.7076, 24.1771, 51.179, 58.9512, 44.6274, 62.7766, 30.327, 143.5306], [191.209, 44.2946, 130.6562, 135.2938, 1315.263, 129.6026, 204.3417, 147.0404, 58.1584, 70.0543, 48.9049, 18.3632, 32.6133, 38.3285, 3.5532, 76.806, 130.0759, 47.9028, 65.3875, 84.1949, 44.0796, 111.401, 88.3942, 260.4433]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

