created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Gwyn Cassel", "Vini Boy", "Pr\u00e6tor Lightbringer", "Belvyn Brightblade", "Aira Draugr", "Rahani Sunray", "K\u00e2 \u00d4tik R\u00e6j", "Mmathuss", "Govinda Ektar", "Claw Ironstrick", "Faz Zypher", "Gwyn Cassel", "Grand Magus Karen", "Lord Erin The Wise", "Lillith Bella", "Wergrh", "Melody Phoenixstorm", "Nose Llama", "Stratager", "Minnie Darley", "Crusader Siolith", "Irish Mini Rev", "Ax Axun", "Nadumi", "Klengah", "Sub Train", "Joe White Flame", "Tootsie Pop Rocks", "Gabe Malhorn", "Mort\u00e4rion", "Xanvias Tsolice", "Bee Nemesis", "Koralia Danai", "Glorious Gluvs", "High Sorcer Baradun", "Blancooo Padreee", "Hyde En Sikh", "Zaedy Zae", "Darks Na", "Tegan Parker", "Drevarr Moonwillow", "Newtype Khan", "Morv\u00e4rth", "Bonewings", "Rina Of Theros", "Be\u00eb"];
const professions = ["Chronomancer", "Tempest", "Firebrand", "Firebrand", "Herald", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Mechanist", "Untamed", "Virtuoso", "Tempest", "Weaver", "Dragonhunter", "Renegade", "Scrapper", "Weaver", "Daredevil", "Dragonhunter", "Firebrand", "Herald", "Vindicator", "Daredevil", "Druid", "Firebrand", "Harbinger", "Scrapper", "Firebrand", "Scrapper", "Weaver", "Spellbreaker", "Firebrand", "Berserker", "Tempest", "Spellbreaker", "Chronomancer", "Druid", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[565, 0, 2905, 0, 0, 5411, 1447], [1242, 0, 0, 4889, 0, 2942, 1578], [0, 6903, 3968], [0, 0, 1127, 4641, 0, 287, 5000], [0, 0, 2677, 0, 4685, 0, 4727], [6472, 0, 1848, 2076, 2521, 0], [269, 547, 304, 0, 1098, 0, 2472, 0, 0, 7725, 599], [0, 1529, 0, 2644, 770, 0, 478, 5710, 0, 3901, 269], [269, 1250, 347, 0, 740, 917, 10316, 1653], [15499], [6409, 1650, 9019, 800], [875, 0, 5838, 4900, 0, 6301, 1481], [269, 421, 121, 0, 4622, 0, 4682, 7879, 0, 2278], [1669, 269, 269, 0, 2352, 7434, 0, 2691, 2104, 0, 4410, 1900], [4376, 153, 2082, 0, 10464, 0, 0, 4413, 712, 0, 421, 990], [10731, 957, 0, 7773, 1086, 1693, 1469, 0, 831, 0], [13218, 607, 11650], [807, 0, 7131, 0, 863, 0, 5584, 4030, 0, 4077, 2424, 0, 2981], [9603, 0, 0, 0, 14187, 385, 0, 1212, 0, 0, 2932], [2340, 269, 0, 0, 12015, 4098, 0, 2732, 4357, 0, 1808, 1669], [119, 0, 4229, 0, 0, 0, 0, 9724, 0, 7085, 385, 0, 7143, 1177], [994, 0, 4619, 7520, 0, 2990, 8582, 0, 6135, 1585], [219, 0, 750, 0, 0, 169, 8568, 9206, 1834, 6171, 0, 5266, 842], [1001, 0, 304, 316, 5133, 23143, 0, 662, 3689], [408, 0, 776, 0, 959, 0, 0, 24125, 0, 5719, 1463, 0, 4305, 0], [630, 112, 2107, 0, 3455, 0, 6441, 522, 0, 6094, 4470, 0, 12708, 2086], [0, 39530], [239, 58, 4421, 0, 2364, 81, 6240, 3120, 0, 6640, 3229, 0, 14511, 1611], [1900, 0, 7712, 0, 348, 0, 4816, 5499, 0, 5512, 4962, 5414, 6694], [0, 3785, 28, 39497], [781, 0, 964, 0, 1146, 3131, 12726, 0, 4487, 7713, 0, 9489, 5751], [280, 2173, 47, 12822, 9243, 0, 7200, 9288, 10007], [2058, 0, 1508, 0, 1248, 0, 4569, 5774, 0, 12933, 13269, 10013, 2941], [630, 0, 10453, 0, 7740, 0, 4279, 6018, 0, 6931, 5156, 0, 4885, 8578], [967, 19140, 119, 537, 0, 2118, 2795, 0, 10999, 7700, 0, 4458, 6439], [384, 0, 2351, 0, 263, 0, 11931, 10803, 4537, 12974, 0, 11450, 1248], [541, 0, 2152, 0, 1843, 0, 10125, 6256, 0, 8011, 11224, 0, 12754, 6136], [333, 0, 4295, 0, 1380, 269, 6190, 2764, 9123, 11089, 0, 12796, 11180], [1690, 0, 4220, 0, 2055, 0, 5682, 24627, 2847, 3998, 0, 12906, 2090], [2348, 1699, 0, 12514, 10274, 0, 12491, 13219, 6215, 5130], [1616, 411, 6224, 160, 469, 30, 9231, 8265, 0, 19723, 8356, 0, 13476, 16325], [2376, 0, 11010, 0, 1518, 18275, 6927, 0, 16362, 13694, 0, 16670, 8254], [0, 7011, 0, 3074, 0, 7598, 7519, 0, 30712, 20617, 0, 11185, 8951], [10944, 0, 9190, 0, 24446, 26298, 9281, 2796, 0, 18194, 9583], [5179, 0, 3151, 0, 2508, 260, 12905, 10229, 0, 12369, 10500, 0, 28893, 25043], [2550, 0, 16178, 0, 730, 413, 30765, 14213, 41923, 27918, 0, 47859, 13719]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

