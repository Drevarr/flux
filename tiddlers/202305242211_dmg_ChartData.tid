created: 20230524221126000
creator: Drevarr
modified: 20230705163531426
modifier: drevarr
tags: ChartData
title: 202305242211_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Red Omega Red", "Arriasa", "Baelin Fishbringer", "Primo Pobre", "Bura Beignetbringer", "Miphest\u00f6", "Finnegan Seelie", "Bella Lunabringer", "Pieca Pizzabringer", "Sister Elon\u00edth", "Blanco Padre Guard", "Zi Long Of The Wind", "Candy Sweetsbringer", "Ryvalia Fazebringer", "Johosh Of The North", "Mixon Cue Bringer", "Xkaet", "Ravioli Ryebringer", "Spicy Gyrosbringer", "Bubble Teabringer", "Zefirokai", "Inedible Plant", "Queen Josie", "Muuuuugs", "Creator Zim", "Band Aidbringer", "Soxx", "Im Alt Tabbed", "Pie Snarglebringer", "Bork Borkbringer", "Tin Holo", "Morton Saltbringer", "Brie Cheesebringer", "Newtype Khan", "Brioche Bunbringer", "Grasszanine", "Kaulina", "Morv\u00e4rth", "Gordon Ramsybringer", "Mouschi W", "Sire Nighthawk", "Grilo Gringo", "Al Darasum", "Nocta Asthariel", "Pepper Cornbringer", "Ria Zerria", "Smol Gluvs", "Morv\u00e4rth", "Panther B Me", "Demon Maddx", "No Reserv\u00e9", "Legacy Of Mathus", "Cinder Flamebringer", "Plum Crazybringer", "Kary\u00edna", "Tootsie Pop Bringer", "Bee Honeybringer", "Duke Silvver", "Cael Saladbringer", "Sizzln Sisigbringer", "Xanvias Einzbern", "Hauzzy"];
const professions = ["Herald", "Druid", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Daredevil", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Dragonhunter", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Vindicator", "Willbender", "Berserker", "Mechanist", "Scrapper", "Firebrand", "Spellbreaker", "Chronomancer", "Tempest", "Scrapper", "Chronomancer", "Dragonhunter", "Spellbreaker", "Chronomancer", "Spellbreaker", "Weaver", "Scourge", "Herald", "Berserker", "Vindicator", "Dragonhunter", "Berserker", "Scourge", "Scrapper", "Scourge", "Scourge", "Reaper", "Scourge", "Scourge", "Vindicator", "Berserker", "Weaver", "Scrapper", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Vindicator", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [6.943, 51.5652, 16.0294, 28.6083, 2.196], [4.5981, 11.4144, 0.0, 25.6612], [8.8116, 0.0, 33.2833, 6.5187, 1.5315, 0.0, 20.8938], [18.0342, 0.0, 12.2647, 35.1333, 30.469, 1.5109, 5.8148, 0.0, 0.0, 2.2072, 0.0, 5.4689], [80.9231], [0.0, 87.5833, 0.0, 21.9928, 210.679], [24.6809, 0.0, 20.1765, 34.45, 16.3598, 6.6594, 26.5062, 0.0, 11.3879, 2.8874, 0.0, 12.3974], [22.8006, 7.8696, 101.5333, 6.0254, 34.3457, 32.3333, 13.3738, 5.4189, 3.1167, 6.1337], [38.7208, 62.525, 10.0968, 2.5797, 2.1605, 13.3833, 5.9346, 0.0, 0.0, 14.0348], [20.3362, 93.8696, 60.1176, 31.375, 12.6973, 16.3043, 22.0988, 35.2, 5.4112, 6.4414, 12.775, 6.0659], [26.6957, 219.2059, 40.0917, 0.5261, 25.4203, 87.8519, 0.0, 45.1542, 32.7297, 0.0], [165.6638], [32.4644, 27.7826, 25.8235, 36.7167, 24.2705, 9.529, 26.8889, 0.1833, 24.4533, 13.2703, 5.9333, 38.7692], [69.0342, 140.8261, 11.9412, 48.5667, 20.3896, 3.9601, 0.0, 32.0167, 19.8925, 0.1351, 0.0, 34.0201], [75.6182, 110.5652, 27.0294, 75.1167, 10.2481, 4.0, 30.7778, 20.8833, 2.1028, 4.7568, 0.0, 33.9945], [54.5652, 49.9412, 93.9833, 48.2258, 19.9964, 0.0, 31.25, 22.7103, 20.7928, 5.75, 31.6648], [69.0313, 14.2609, 103.1471, 88.95, 31.0248, 15.75, 19.7037, 35.5, 25.028, 9.3423, 0.0, 9.3938], [64.0798, 64.3913, 1.9118, 96.45, 37.0968, 22.1594, 2.5802, 13.05, 38.6636, 2.0, 0.0, 22.6685], [70.5157, 4.7391, 54.8529, 50.05, 20.1191, 5.4746, 23.4198, 3.1667, 39.3505, 32.7387, 10.7417, 33.337], [5.9833, 0.0, 52.9054, 16.775, 121.4487], [78.5185, 49.8696, 24.5882, 71.7083, 25.2159, 27.4022, 4.2222, 27.7333, 17.6776, 13.8784, 0.0, 31.8352], [95.6382, 0.0, 28.6765, 79.8333, 28.7519, 27.2935, 0.0, 0.0, 18.5, 11.9369, 0.0, 37.7253], [195.5183], [56.8411, 38.4324, 6.85, 162.7601], [93.604, 30.7391, 27.5882, 95.6167, 41.9677, 12.6884, 49.0988, 63.75, 37.0, 4.9054, 8.425, 51.1996], [89.7578, 88.6087, 38.5588, 68.35, 31.8933, 33.3587, 5.5062, 70.1, 37.5234, 35.6441, 0.0, 59.456], [219.9707], [148.3533, 140.0435, 18.4412, 92.0167, 44.8139, 11.3442, 103.1235, 0.0, 44.9252, 45.1306, 48.675, 55.1007], [157.2821, 22.2174, 299.6176, 163.3833, 32.9677, 18.1196, 1.2222, 0.0, 98.1822, 16.2117, 33.45, 54.8242], [227.9915, 208.3478, 242.5294, 301.2083, 150.2357, 53.0109, 82.8025], [104.9174, 252.425, 107.1737, 38.2319, 118.2963, 120.25, 68.0234, 10.0721, 146.675, 72.5201], [237.1795, 115.4348, 318.2941, 388.3167, 185.5608], [270.7721, 64.0882, 295.6583, 126.0521, 31.4783, 45.1358, 87.0167, 31.6028, 26.4955, 0.0, 95.0385], [218.735, 94.9565, 85.0, 217.1417, 93.4169, 34.808, 174.284, 30.6, 80.4953, 32.3018, 45.4667, 118.9982], [335.4558, 254.7826, 127.0294, 268.775, 167.1563, 71.192, 230.679, 99.1333], [324.1739, 1485.6765, 933.275, 255.005], [48.8116, 162.0617, 577.2473], [650.0285, 349.9565, 0.0, 544.95, 187.9603], [280.9058, 399.5309, 328.6333, 394.5421, 164.545, 193.5833, 224.8278], [91.6014, 162.7531, 31.3167, 134.1215, 87.7523, 54.0583, 562.9579], [582.6417, 289.7692, 88.163, 124.8889, 248.757, 32.5, 0.0, 263.3187], [37.3623, 285.2593, 69.1833, 272.0234, 118.1712, 168.7583, 520.2308], [356.6952, 116.8261, 380.7059, 479.45, 206.4169, 30.942, 194.2099, 35.0047, 42.5631, 27.5333, 287.4048], [988.2393, 0.0, 0.0, 681.7083, 262.5757], [439.4644, 416.087, 16.7353, 364.6333, 70.3772, 46.0942, 111.2099, 265.8832, 115.1396, 21.9, 386.1062], [424.4672, 60.3478, 129.2059, 516.375, 283.7395, 35.7391, 115.037, 316.5, 161.3692, 65.8063, 0.0, 343.7179], [840.3618, 270.9565, 565.9706, 948.7583, 243.4218, 80.9167, 729.972, 205.7387, 0.0], [597.1083, 848.0, 131.6765, 912.0917, 283.6749, 48.4601, 0.0, 100.9333, 689.8458, 123.0045, 41.2, 355.1007], [749.9402, 516.2174, 366.4412, 998.3, 307.8859, 72.0652, 298.0617, 24.9667, 360.8037, 135.9234, 0.0, 427.152], [761.5926, 728.8696, 147.7941, 829.8083, 425.2655, 117.7283, 247.1975, 313.1333, 224.3832, 106.0225, 0.0, 445.2711], [993.6097, 395.9565, 532.5882, 819.6333, 712.6725, 97.2935, 66.0988, 0.0, 194.2944, 104.3649, 274.0917, 290.8004], [743.2251, 132.5294, 1021.7917, 496.5484, 157.337, 50.3827, 75.55, 527.6963, 292.1216, 67.2417, 464.2179], [710.3875, 496.6957, 431.1765, 1170.7667, 367.6526, 90.7899, 266.642, 89.9333, 355.7336, 229.6351, 66.4083, 677.4908], [680.2963, 437.6087, 634.9706, 881.5833, 490.6179, 198.2826, 220.8889, 193.8333, 283.8084, 223.7748, 283.725, 607.4377], [939.2764, 145.0435, 461.5882, 1461.4, 631.6774, 227.4457, 0.0, 238.8333, 438.6822, 122.2342, 81.7167, 482.3242], [925.453, 1433.375, 587.3201, 147.1739, 360.1728, 116.15, 57.2613, 225.7, 768.6136], [1222.1339, 1656.913, 446.2941, 1557.325, 529.8933, 189.9529, 599.0494, 239.8333, 363.2009, 103.5541, 51.0583, 560.381], [1225.963, 411.0, 0.0, 1566.175, 727.9231, 166.8478, 412.1975, 329.0167, 840.9813, 137.8423, 169.4667, 753.6886], [35.6752, 0.0, 670.3529, 1151.6167, 1064.2084, 188.2572, 481.4938, 756.3037, 701.0135, 751.4583, 1104.5842], [2019.9031, 509.0, 379.2941, 2045.225, 1091.8337, 180.3949, 135.5679, 116.35, 982.8178, 513.8108, 442.2583, 26.1758], [1546.245, 974.8261, 704.7647, 1508.8583, 777.3722, 183.9058, 821.3827, 110.9, 860.8785, 174.1396, 278.7167, 896.2289]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

