created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Tootsie Pop Rocks", "Daphne Agla\u00e9", "Body Ody Ody", "Glorious Gluvs", "Rahani Sunray", "Xanvias Einzbern", "Gavann", "Bella Sassy", "Drevarr Moonwillow", "Arriasa", "Ateriuz", "Koralia Danai", "Fribble Bibble", "Miphest\u00f6", "Hyde En Sikh", "Necrotic Windrunner", "Elonith Requiem", "Lord Erin The Wise", "Elonith Requiem", "Arriasah", "Necrotic Windrunner"];
const professions = ["Chronomancer", "Scrapper", "Reaper", "Berserker", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Druid", "Berserker", "Firebrand", "Scrapper", "Tempest", "Chronomancer", "Reaper", "Scourge", "Weaver", "Reaper", "Vindicator", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2499.8611, 2107.2653, 959.2698, 3593.1818, 2516.3077, 2687.0741, 583.3165, 911.5072, 176.0196, 2638.5484, 1547.3375, 89.2093], [712.1341, 1587.0444, 1193.8714, 1427.9348, 2197.3968, 1591.186, 1022.4231, 2013.8065, 2310.2391, 3154.1538, 1026.0484, 5.5595], [1314.9818, 2592.7879, 1138.4677, 1104.6769, 1020.2254, 3221.9524, 1033.9136, 1387.3333, 656.6327, 3680.8056, 2574.35, 33.1034], [1005.2073, 1731.3878, 4196.7826, 3101.5185, 1229.4545, 3190.1154, 701.3333, 1591.5342, 1042.9796, 2317.7917, 3133.8261, 90.2366], [595.1548, 949.551, 883.6032, 409.2154, 2976.5116, 2289.7797, 849.6512, 1167.3676, 789.8043, 2633.8333, 3097.6226, 74.7586], [520.2738, 586.2292, 1215.8689, 1326.7213, 271.4286, 1377.8068, 3140.1905, 1099.4638, 1330.2885, 1253.1869, 3126.2203, 74.8989], [502.2771, 553.2667, 4010.6111, 832.0159, 428.7324, 2384.25, 759.6667, 1226.5286, 746.7292, 1427.9818, 1208.4, 132.8065], [539.8537, 766.1667, 1624.2154, 1448.4151, 2647.1071, 2556.1887, 568.5, 770.4286, 554.375, 2097.3729, 2482.0, 13.7931], [515.5357, 1407.7083, 573.082, 3219.1667, 599.1268, 1049.9886, 529.2785, 875.2899, 647.9804, 966.0092, 2073.7031, 17.012], [828.2222, 490.587, 775.3906, 662.1406, 465.027, 907.3708, 720.2658, 924.8261, 794.66, 995.4107, 2257.6615, 67.9032], [620.9194, 982.9385, 2506.9808, 1014.7841, 359.0233, 874.7397, 546.1667, 1016.4261, 2159.7143, 31.5663], [911.5732, 180.0408, 960.5833, 2401.5758, 1252.8718, 2334.5652, 2411.2105, 502.2687, 1837.4255, 1069.1284, 1067.7375, 44.3258], [684.2716, 544.0408, 1651.7812, 246.375, 444.5139, 1367.5568, 1018.6974, 307.3043, 380.0213, 1583.2154, 1295.0988, 0.0], [572.1235, 1027.7391, 704.8906, 3110.4815, 277.0986, 2984.2692, 348.6667, 838.0147, 970.9375, 3205.6571, 769.7647, 64.9785], [385.8293, 596.94, 779.8125, 2177.9444, 2277.1333, 599.7727, 569.3704, 774.7206, 727.28, 714.5804, 1322.1833, 32.3182], [423.8902, 590.9362, 1008.8525, 361.1746, 1393.3288, 526.5455, 343.4699, 562.3836, 406.9592, 755.2778, 2676.6667, 57.4731], [470.1385, 786.0857, 966.9157, 709.3418, 1057.3333, 786.3542, 2317.8, 674.9383, 116.4118], [576.475, 4514.95, 515.1519, 4890.6875, 508.4583, 2127.2903, 492.2414, 157.1798], [358.869, 97.96, 375.5303, 82.0, 296.7361, 759.619, 349.4048, 93.7571, 540.3673, 434.0, 184.9186, 69.5862], [689.5224, 337.4462, 748.0986, 2505.4651], [2162.575, 3791.2308], [602.6707, 278.1778, 1351.7273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

