created: 20230626012458000
creator: Drevarr
modified: 20230705163538320
modifier: drevarr
tags: ChartData
title: 202306260124_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Morton Saltbringer", "Eibh\u00ebar", "Bender Ale Devourer", "Johosh The Mighty", "Primal Clone", "Sygaldry Verdandi", "Smol Daddy Tika", "Miphest\u00f6", "Ryvalia Fazebringer", "Xanvias Einzbern", "Arcanophage Farra", "Crusader Siolith", "Blanco Padre Guard", "Smol Daddy Tika", "Regis Hawkesburne", "Zayde Sunsabre", "Newtype Khan", "Raelyn Sunray", "Bella Sassy", "Koralia Danai", "Solus Sanctus"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 17.9928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.9261, 0.0, 17.2862, 10.919, 27.686, 10.0661], [5.7187, 3.3178, 10.1871, 35.7269, 7.765, 27.5782, 5.6851, 5.8128, 5.1955, 0.0, 1.7338, 9.2496, 6.0456, 9.9053, 5.3518, 8.233], [13.633, 6.1171, 12.5685, 52.3751, 11.1671, 27.4493, 3.4675, 11.0376, 13.6858, 8.689, 11.7086, 9.5393, 12.9888, 6.9531, 6.7536], [0.0, 25.1683, 15.9642, 16.6482, 11.1152, 53.9965, 12.983, 0.0, 21.3206, 0.0, 0.0, 20.101, 12.2128, 10.9613, 8.6808, 0.0], [93.5704, 67.2883, 48.2924, 0.0643], [11.948, 20.3731, 13.6269, 51.646, 12.0241, 47.8108, 8.7898, 11.2224, 13.0522, 6.3302, 11.3251, 11.7874, 6.2304, 10.3664, 5.628], [16.4413, 8.8646, 9.0846, 49.5802, 11.4787, 32.733, 13.487, 7.4928, 5.3856, 14.5757, 8.099, 11.514, 29.2512, 22.9663, 3.5376], [42.0394, 0.0, 0.0, 26.4178, 5.3773, 34.8269, 119.8462, 20.2608], [8.9355, 9.6163, 9.6579, 46.5422, 18.205, 56.7028, 9.2736, 6.9384, 14.7312, 5.126, 12.0557, 8.1216, 11.0583, 12.2285, 21.07, 9.2942], [15.5733, 5.7283, 11.9511, 60.6385, 9.2713, 65.5948, 11.5718, 16.716, 5.7974, 2.42, 6.4915, 11.3702, 12.8811, 13.9814, 17.4038, 6.5928], [21.3941, 30.0154, 19.0512, 36.8206, 29.2682, 19.0728, 25.3411, 8.4168, 10.7712, 0.0, 36.5702, 30.2981, 10.9976, 14.8896, 0.0], [0.0, 26.1274, 30.87, 123.2213, 98.4263, 89.5647, 0.0, 0.0], [13.0714, 27.2678, 9.2169, 57.479, 47.7848, 50.517, 6.6326, 5.9472, 10.8979, 28.534, 7.9834, 17.4614, 31.2003, 18.9869, 8.2594, 34.2826], [33.3422, 8.2685, 8.8641, 63.6765, 23.2951, 127.3236, 19.7568, 15.0192, 37.9843, 0.0, 7.7818, 27.8616, 22.9673, 24.647, 37.0832, 10.2269], [0.0, 22.3949, 27.6948, 271.5972, 36.5138, 105.5445, 16.0675, 15.3216], [81.5939, 0.0, 1.9845, 117.9959, 18.0232, 43.0426, 31.3488, 8.316, 23.6333, 19.338, 49.6138, 0.0, 38.4003, 3.0835, 38.221, 26.7893], [0.0, 11.8973, 0.0, 212.2954, 0.0, 191.7586, 36.5501, 0.0, 15.5232, 0.0, 0.0, 0.0, 11.8482, 14.5306, 54.6556, 0.0], [16.2881, 51.3734, 44.8938, 116.5377, 43.2401, 93.173, 66.2659, 12.5832, 47.9952, 0.0, 33.9293, 31.787, 0.0, 7.1386, 0.0, 11.9314], [14.3479, 54.5098, 61.3872, 68.7803, 52.6931, 28.8669, 16.7328, 27.1488, 28.8922, 0.0, 28.0627, 39.7733, 43.2611, 58.777, 32.6164, 39.0101], [3.1147, 45.3859, 61.8723, 121.8846, 40.2535, 39.1765, 39.9974, 35.28, 53.2224, 34.7558, 51.4142, 48.365, 60.1709, 78.9704, 34.8614], [0.0, 45.0749, 78.057, 112.649, 56.251, 93.6885, 25.0992, 15.8088, 36.3686, 23.9702, 38.0362, 59.1802, 51.1526, 64.6006, 51.1344], [50.9579, 51.8659, 77.3514, 132.4568, 88.4798, 125.3905, 62.1936, 25.0152, 61.8394, 8.162, 42.4166, 61.3632, 48.6991, 52.8634, 95.3207, 54.2218]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

