created: 20230527220043000
creator: Drevarr
modified: 20230705163532074
modifier: drevarr
tags: ChartData
title: 202305272200_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Splitting Hairs", "Gravlyn Isshtail", "K U S A T T A", "Foxy Latina", "Mammary Mission", "Anita Strips", "Morv\u00e4rth", "Venomina The Fierce", "Black Raspberry Pie", "Newtype Khan", "Xanvias", "Be\u00eb"];
const professions = ["Reaper", "Spellbreaker", "Reaper", "Scourge", "Scourge", "Chronomancer", "Reaper", "Spellbreaker", "Chronomancer", "Spellbreaker", "Reaper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1511, 0.1878, 0.1118, 0.1429, 0.3333, 0.1214, 0.1154, 0.4194, 0.0, 0.4667, 0.0633, 0.0547], [0.2072, 0.0, 0.0, 0.0, 0.35, 0.0, 0.0, 0.0, 0.3097, 0.3418, 0.0822, 0.0622, 0.3756, 0.0984, 0.2298], [0.1438, 0.24, 0.2676, 0.1311, 0.205, 0.0992, 0.4352, 0.1311, 0.0435, 0.1154, 0.2903, 0.0741, 0.1238, 0.0506, 0.1172], [0.975, 0.0682, 0.2023, 0.8889, 0.7876, 0.5949], [0.1164, 0.2711, 0.3709, 0.3443, 0.2298, 0.1944, 0.4352, 0.2039, 0.0435, 0.2564, 0.2903, 0.0741, 0.5619, 0.038, 0.0078], [0.3063, 0.1707, 0.0656, 0.1053, 1.1, 0.2386, 0.1832, 0.3519, 0.4956, 1.097], [0.0631, 0.0, 0.0656, 0.0526, 0.65, 0.1023, 0.0649, 0.3704, 0.3451, 0.4346, 0.3333, 0.1639, 0.2981, 0.1349, 0.463, 0.3689, 0.0, 0.5385, 0.1935, 0.0741, 0.2857, 0.0759, 0.1328], [0.0, 0.9444, 0.3717, 0.8776, 0.3425, 0.2667, 0.2911, 0.2951, 0.1801, 0.2024, 0.4074, 0.1796, 0.0, 0.5, 0.4194, 0.0, 0.219, 0.0633, 0.2578], [0.3562, 0.4267, 0.6573, 0.3607, 0.8385, 0.3611, 0.9537, 0.2621, 0.0, 0.5256, 0.4194, 0.7619, 0.2532, 0.2344], [0.3243, 0.082, 0.0526, 0.125, 0.125, 0.126, 0.6296, 0.3363, 0.7426, 0.089, 0.2933, 0.507, 0.2623, 0.4534, 0.2341, 0.7315, 0.2379, 0.0, 0.4231, 0.5161, 0.1111, 0.381, 0.2025, 0.1562], [0.0, 0.0, 0.0984, 0.0263, 0.35, 0.1477, 0.2214, 0.537, 0.4779, 0.9367, 0.4726, 0.32, 0.5728, 0.2459, 0.2795, 0.3254, 0.6296, 0.5825, 0.0, 0.3846, 0.2258, 0.1111, 0.4, 0.0253, 0.2734], [0.2162, 0.0244, 0.1803, 0.0263, 1.175, 0.0, 0.187, 1.0556, 1.0088, 1.2489, 0.4452, 0.6222, 0.7981, 0.6721, 0.5217, 0.3849, 1.0926, 0.8932, 0.0, 0.5128, 0.3871, 0.0741, 0.581, 0.0886, 0.5859]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

