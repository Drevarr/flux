created: 20230329220116000
creator: Drevarr
modified: 20230705163523225
modifier: drevarr
tags: ChartData
title: 202303292201_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Spicy Gyrosbringer", "Ark Darkness", "Band Aidbringer", "Kiloak", "Pieca Pizzabringer", "Gavann", "Zaylen Harker", "Bubble Teabringer", "Ravioli Fetabringer", "Johosh The Great", "Bura Beignetbringer", "Bella Lunabringer"];
const professions = ["Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5557, 0.0, 253.1758, 25.2806, 316.5356, 41.5292, 0.0, 0.0, 11.2428, 0.8379], [40.9336, 0.0, 150.2628, 480.2609], [16.6698, 0.0, 348.3584, 56.1792, 255.2902, 56.4399, 0.0, 0.0, 12.0852, 8.7612], [688.859, 50.4757, 0.0, 5.8045, 43.254, 44.4675], [78.7551, 14.0448, 774.36, 70.688, 0.0, 10.5553, 0.0, 26.1219], [178.2346, 0.0, 619.8943, 174.599, 585.7727, 98.6319, 0.0, 27.808, 0.0, 0.0], [65.3033, 0.0, 705.4136, 58.6186, 933.8406, 54.4519, 0.0, 0.0, 0.0, 22.3587], [0.0, 0.0, 1024.7824, 163.511, 1096.3531, 52.2429, 0.0, 0.0, 0.0], [45.8552, 7.812, 969.7021, 57.288, 1450.4849, 214.6043, 11.5018, 25.1748, 31.9137], [38.367, 12.0456, 1160.0672, 108.3667, 1482.0172, 201.7921, 0.0, 123.8055, 64.0548, 27.7977], [88.3764, 15.9768, 1498.2792, 233.735, 1693.0409, 247.5185, 0.0, 100.2125, 14.6124, 14.6412], [161.2208, 60.3456, 1769.8151, 630.8333, 1244.9187, 409.5486, 184.338, 38.1132, 85.8924, 54.8457]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

