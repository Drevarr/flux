created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Skylar Shadowmoon", "Xanvias Einzbern", "Mitsuri Ai", "Darks Na", "Glorious Gluvs", "Lord Erin The Wise", "K\u00e9ld\u00e1", "Darkandshadow", "Rina Of Theros", "Sygaldry Verdandi", "Latedoctor", "One And Onlyy", "Raj Gon", "Ryvalia Fazebringer", "Crusader Siolith", "Jimbo The Pleb", "Morv\u00e4rth", "Tootsie Pop Rocks", "Kurn The Drunk", "Nickhia", "K\u00e2 \u00d4tik R\u00e6j", "Newtype Khan", "Etchery Howls", "Demon Zen", "Amiti\u00e9l", "Gabe Malhorn"];
const professions = ["Scrapper", "Berserker", "Druid", "Firebrand", "Berserker", "Weaver", "Chronomancer", "Mirage", "Reaper", "Firebrand", "Reaper", "Berserker", "Daredevil", "Chronomancer", "Firebrand", "Berserker", "Reaper", "Scrapper", "Reaper", "Scourge", "Berserker", "Spellbreaker", "Druid", "Reaper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 226.44, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 226.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 150.96, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 330.72, 0.0, 0.0], [0.0, 0.0, 226.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1157.52, 0.0], [0.0, 572.39, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 150.96, 0.0, 25.46, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 496.08, 0.0, 0.0], [0.0, 371.07], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 81.77, 0.0, 11.55, 0.0, 0.0, 0.0, 0.0, 0.0, 1322.88, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 245.31, 16.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 992.16, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 245.31, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1157.52, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 377.4, 0.0], [0.0, 0.0, 519.48, 0.0], [0.0, 0.0, 0.0, 56.35, 0.0, 0.0, 85.47, 150.96, 0.0, 25.46, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 826.8, 0.0, 0.0], [0.0, 0.0, 112.7, 0.0, 0.0, 0.0, 301.92, 0.0, 0.0, 81.77, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 661.44, 0.0], [0.0, 0.0, 169.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 46.2, 0.0, 0.0, 0.0, 0.0, 0.0, 2149.68, 0.0], [152.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 496.08, 0.0, 453.53], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 452.88, 0.0, 0.0, 0.0, 0.0, 11.55, 0.0, 0.0, 0.0, 0.0, 1653.6, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1260.96, 0.0, 0.0, 165.36, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 4134.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 893.18, 0.0, 0.0, 1653.6, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 339.66, 0.0, 0.0, 0.0, 408.85, 0.0, 23.1, 0.0, 0.0, 0.0, 0.0, 2480.4, 0.0, 0.0], [0.0, 43.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.65, 0.0, 0.0, 0.0, 0.0, 2149.68, 1030.75], [0.0, 0.0, 281.75, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.55, 0.0, 0.0, 2732.08, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 452.88, 0.0, 0.0, 0.0, 0.0, 0.0, 23.1, 0.0, 0.0, 2521.92, 0.0, 0.0, 1653.6, 0.0], [0.0, 0.0, 0.0, 0.0, 21.7, 0.0, 0.0, 264.18, 101.84, 0.0, 1471.86, 0.0, 23.1, 0.0, 0.0, 2627.0, 0.0, 0.0, 4299.36, 0.0, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

