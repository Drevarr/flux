created: 20230513000456000
creator: Drevarr
modified: 20230705163529867
modifier: drevarr
tags: ChartData
title: 202305130004_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Grasszanine", "Mac Aaroni", "Newtype Khan", "High Sorcer Baradun", "Miphest\u00f6", "Artakama Nahid", "Tegan Parker", "Jeckyll Mbs", "Blancooo Padreee", "Cyclotechnist Farra", "Domitia Gravestorm", "Xanvias Einzbern", "Venomina The Techie", "Drevarr Moonwillow"];
const professions = ["Weaver", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Berserker", "Spellbreaker", "Scrapper", "Spellbreaker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.346, 0.22, 0.074, 0.106, 0.93, 1.477, 0.2, 0, 0.379, 0.633, 0.167, 0, 0, 0, 0.271, 0, 0, 0, 0, 0, 0.452], [1.489, 0.936, 0, 0.634, 0.697, 0.425, 0, 0.805, 0, 0, 0.394, 0, 1.112, 0.577, 1.009, 0.931], [0.382, 0.298, 0.233, 0.113, 0.198, 0.128, 0.905, 0, 0.604, 0, 0, 0, 0.799, 0, 0, 0.419, 0.47, 0, 0.326, 0, 0, 0.715, 0.51, 0.534, 0.445, 0.607, 0.13], [0.439, 0, 0.39, 0.22, 0, 0.372, 1.477, 0, 0.537, 0, 0.582, 0, 0.278, 0.761, 0, 0.316, 0, 0.41, 0, 1.059, 0.578, 0, 0, 0], [0.731, 0.726, 0.645, 0.592, 0.198, 0.668, 0.922, 0.611, 0.449], [0.023, 0.112, 0.401, 0.38, 0.198, 0.249, 0, 0.362, 0.626, 1.022, 0, 0.59, 0, 0.575, 0.593, 0, 0.613, 0, 0.265, 0, 0.766, 0, 0.437, 0.115, 0.152, 0.519], [0.345, 0.451, 0.292, 0.437, 0.099, 0.138, 0, 0.813, 0.592, 0.831, 0, 0, 0.595, 0, 0.757, 0.634, 0.593, 0.581, 0.357, 0.586, 0.719, 0.764, 0.956, 0.615, 0.345, 0.607, 0], [0.694, 0.485, 0.437, 0.509, 0.306, 0.138, 0, 0.815, 0.625, 0, 0.599, 0, 0, 0.628, 0.741, 0, 0.534, 0, 0.271, 0.74, 0, 0.67, 0, 0, 0], [1.031, 0.23, 0.608, 0.717, 0.231, 0, 0.281, 0.695, 0, 0.315, 0.308, 0.729, 0.934, 0, 0.997, 0, 0.453, 0, 0.991, 0, 0.744, 0.385, 0, 0], [0.537, 0.449, 0.769, 0.442, 0.33, 0.451, 0, 1.696, 0.961, 1.848, 1.268, 0.617, 0.789, 1.047, 0.992, 0, 0.794, 1.006, 0, 0.404, 0.743, 0.192, 1.012, 0], [0.519, 0.495, 0.658, 0.787, 0.393, 0.496, 0.965, 0, 0.607, 0.277, 0, 0.496, 1.387, 0, 1.764, 0.917, 0, 0, 0.034, 0, 0.678, 1.062, 1.625, 0], [0.575, 0.481, 0.757, 0.725, 0.459, 0.489, 0, 1.665, 1.042, 0, 1.68, 0.995, 2.341, 0, 1.048, 0.761, 0.931, 0.8, 0, 0.459, 1.2, 0.972, 0, 1.236, 0, 0, 1.038], [1.066, 0.678, 0.933, 0.783, 0.583, 0.282, 0, 1.017, 1.042, 0, 1.081, 2.926, 0, 1.011, 0.711, 0.86, 1.062, 0, 0.453, 1.2, 1.164, 0, 1.017, 0, 0, 0], [1.356, 0.794, 0.966, 0.79, 0.323, 0.596, 2.163, 0.989, 1.307, 0.91, 1.296, 0.526, 0, 1.045, 0.868, 0.279, 0.866, 0.229, 0.404, 0.721, 0.586, 0, 0.979, 0, 0.325], [2.355, 1.166, 1.255, 1.216, 0.445, 0.508, 1.315, 2.034, 0.724, 3.553, 1.823, 1.477, 1.395, 0.702, 1.229, 1.359, 1.916, 1.949, 1.827, 0.459, 1.22, 1.44, 2.123, 0, 2.091, 0.924, 1.29, 0.519]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

