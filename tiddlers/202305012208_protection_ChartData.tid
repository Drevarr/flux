created: 20230501220820000
creator: Drevarr
modified: 20230705163527926
modifier: drevarr
tags: ChartData
title: 202305012208_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Venomina The Siren", "Primal Clone", "Hyde En Sikh", "Eibh\u00ebar", "Black Raspberry Pie", "Xkaet", "Joint Lee", "Mac Aaroni", "Newtype Khan", "Zadie Miststep", "Tika Sumiko", "Lord Erin The Wise", "Tyzzki", "Sub Train", "Elonith Primal", "Miphest\u00f6", "Whose Guardian", "Gabe Malhorn", "Bella Sassy", "Drevarr Moonwillow", "Koralia Danai", "Kiloak", "Johosh The Great", "Sygaldry Verdandi"];
const professions = ["Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[422.1865, 31.0592, 24.563, 3.1284, 21.8295, 91.1987, 278.0642], [93.1358, 97.6424, 0.0, 0.0, 56.0731, 46.0386, 213.9287, 8.8856, 303.4927, 4.4748, 25.0815, 0.0, 0.0, 32.0488], [468.7544, 23.7797, 65.5226, 0.0, 37.3086, 64.3135, 366.3044, 14.036, 332.3005, 20.295, 60.1251, 26.2836, 21.0534, 35.1043], [432.7302, 20.6738, 43.384, 9.5832, 21.631, 87.3328, 361.5696, 23.084, 345.6936, 52.0146, 84.1046, 0.0, 25.3246, 83.517], [439.7593, 41.3476, 83.1314, 5.0985, 22.3146, 104.6413, 456.2664, 11.0432, 328.7627, 20.5524, 30.283, 0.0, 25.5555, 86.0293], [522.7908, 76.4833, 81.0898, 15.4638, 18.7425, 77.3168, 403.3223, 18.096, 293.3847, 21.483, 48.488, 21.1019, 0.0, 122.4916], [203.7289, 294.9474, 12.7809, 33.053, 207.086, 979.251], [799.5624, 149.5695, 57.2286, 0.0, 25.5119, 109.6493, 603.0464], [681.3853, 184.9964, 19.9694, 0.0, 16.7139, 58.339, 312.9299, 27.724, 321.4344, 16.4142, 32.3547, 0.0, 48.8023, 115.5658], [532.4558, 84.6363, 58.1218, 0.0, 20.5726, 60.5355, 504.9061, 23.9424, 466.4842, 29.0664, 70.4839, 0.0], [636.5747, 217.7056, 25.0096, 13.9194, 18.9851, 32.4203, 358.5565, 10.6488, 336.5964, 14.2362, 58.6705, 13.7592, 19.4805, 106.5351], [501.2641, 92.8864, 0.0, 9.405, 27.0995, 75.5596, 310.7777, 9.628, 553.1603, 8.7714, 55.0118, 19.6245, 0.0, 251.0263], [175.5815, 102.8456, 26.9973, 101.9592, 218.5957, 751.9787, 28.4432, 869.288], [1088.1956, 125.2074, 0.0, 17.0874, 20.3081, 36.2862, 289.2557, 69.136, 437.4237, 4.9302, 93.097, 0.0, 0.0, 173.7561], [126.5662, 68.7126, 17.5032, 67.7156, 170.7998, 1089.4436, 41.3888, 581.21, 33.858, 159.7459, 22.3807, 36.3636, 199.1507], [1390.0085, 315.1538, 60.7376, 0.0, 14.6192, 175.1928, 850.119, 6.8904], [1169.9092, 331.3628, 139.7858, 37.3923, 48.6423, 124.1462, 1110.9656, 58.2552], [920.3754, 59.4978, 51.5504, 23.5818, 90.1625, 141.1032, 1145.8313, 96.4656, 881.923, 52.767, 96.403, 0.0, 0.0, 181.3609], [1296.8726, 158.1107, 47.1482, 11.5731, 113.6457, 239.9457, 1254.3022, 47.8384, 1032.0268, 41.7186, 155.911, 0.0, 24.127, 305.0068], [1798.1368, 237.3117, 173.0256, 1.8216, 52.0601, 316.6474, 778.666, 76.8848, 883.4392, 97.7526, 134.3118, 26.7467, 37.417, 199.5581], [1572.3263, 347.3777, 166.6456, 29.3931, 79.1595, 260.1535, 1212.9799, 33.9184, 1048.9577, 78.7248, 179.053, 66.9218, 64.3434, 283.7541], [1932.1294, 177.3286, 189.5498, 29.8188, 79.6667, 194.9613, 1271.5198, 62.8488, 1444.4332, 130.4424, 178.8766, 61.2553, 245.3906], [1733.5567, 57.5566, 94.2964, 63.8154, 110.7792, 322.8855, 1408.8301, 59.044, 1469.1978, 105.831, 224.3231, 9.702, 1.9625, 380.8511], [1828.8892, 23.8768, 35.4728, 0.0, 151.4615, 226.7667, 1595.2106, 112.3808, 1560.9279, 137.5506, 309.6179, 70.7143, 0.0, 452.8251], [2175.5126, 187.1317, 122.0494, 75.2004, 91.0885, 204.5381, 1579.7148, 76.9312, 1423.9645, 111.3552, 318.6102, 49.1715, 46.9696, 308.0623]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

