created: 20230610101822000
creator: Drevarr
modified: 20230705163534643
modifier: drevarr
tags: ChartData
title: 202306101018_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Vesnan", "F\u00e2ble", "Yngvar The Burdened", "Synomi\u00f1 Spyce", "Scarlet Merc\u00fcry", "Lady The Mirage", "Arriasa", "Grootyoda", "Hit The Gas", "Gamora Titus", "Alarics Bane", "F\u00e2ble", "Charr Surethang", "Drevarr Moonwillow", "Tomitigas", "Xanvias", "Elonith Requiem", "Aronorf Xideliesi", "Cat Noises", "Gestern Yesteryear", "Ryvalia Fazebringer", "Slang\u00efn"];
const professions = ["Scourge", "Herald", "Scourge", "Scourge", "Firebrand", "Chronomancer", "Druid", "Berserker", "Spellbreaker", "Firebrand", "Reaper", "Vindicator", "Berserker", "Scrapper", "Tempest", "Reaper", "Reaper", "Firebrand", "Virtuoso", "Firebrand", "Chronomancer", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 17, 14, 0, 15], [0, 0, 1, 21, 31], [44, 13], [21, 0, 8, 31], [0, 26, 35], [46, 8, 6, 10], [19, 9, 0, 5, 24, 0, 8, 0, 0, 0, 0, 28], [0, 5, 0, 9, 20, 0, 15, 32, 13, 0], [17, 22, 0, 83], [0, 0, 25, 8, 0, 0, 0, 0, 34, 0, 0, 22, 26, 0, 12, 2], [16, 0, 0, 0, 8, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 29, 22, 0, 14, 0, 15, 0, 14, 1], [34, 0, 0, 8, 0, 0, 0, 0, 7, 34, 0, 0, 7, 15, 0, 12, 0, 9, 12], [40, 0, 0, 0, 0, 0, 0, 0, 12, 0, 6, 9, 0, 16, 19, 0, 0, 7, 15, 0, 27, 10], [10, 0, 0, 8, 20, 0, 9, 0, 0, 10, 0, 0, 53, 0, 0, 11, 9, 0, 18, 14, 5, 0], [0, 35, 0, 49, 21, 0, 0, 0, 0, 0, 0, 0, 2, 37, 0, 13, 0, 15, 0, 11], [0, 0, 0, 31, 9, 0, 0, 25, 0, 0, 8, 65, 0, 1, 0, 3, 0, 19, 35], [32, 0, 0, 19, 11, 0, 12, 0, 0, 14, 0, 4, 0, 0, 0, 55, 23, 0, 7, 1, 14, 9], [0, 0, 0, 12, 0, 0, 7, 47, 7, 0, 17, 25, 0, 79, 22, 26, 0, 31, 0], [6, 0, 0, 79, 12, 0, 38, 32, 28, 4, 50, 29, 10, 18], [13, 38, 0, 0, 25, 0, 6, 0, 17, 14, 0, 11, 41, 21, 0, 23, 17, 0, 13, 25, 10, 0, 22, 19], [5, 31, 0, 41, 9, 52, 4, 12, 3, 0, 24, 19, 19, 0, 10, 14, 0, 13, 3, 27, 0, 23, 13], [11, 24, 0, 13, 6, 0, 6, 0, 6, 22, 0, 57, 105, 32, 0, 18, 34, 11, 0, 34, 16, 0, 15, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

