created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Venomina The Sly", "Newtype Khan", "Drell The Silent", "Belvyn Brightblade", "Soft And Chewy", "Tribal S", "Zaedy Zae", "Klenga", "Kosair", "Gabe Malhorn", "Sub Train", "Crusader Siolith", "Solus Luxes", "Bella Bitty"];
const professions = ["Spellbreaker", "Druid", "Spellbreaker", "Druid", "Firebrand", "Druid", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 75.7491, 19.5339, 53.7618, 0.0, 49.3387, 26.243, 11.8413, 11.7702, 25.461, 27.7277, 3.5614, 18.5328, 28.9098], [137.0101, 43.5252, 94.4622, 49.1999, 43.7424, 45.8878, 48.5438, 38.9844, 26.784, 29.1897, 14.714, 13.6539, 38.9752], [9.6949, 0.0, 0.0, 40.0003, 0.0, 350.2431, 39.5841, 49.5111, 0.0, 28.9708, 92.2907, 8.6526, 28.6885, 27.3812, 26.5348, 0.0, 36.1974, 0.0, 14.013, 9.8752, 21.4619, 13.0045, 0.0], [0.0, 23.8564, 511.5471, 45.5026, 0.0, 0.0, 110.0274, 67.6494, 62.1414, 53.0621, 24.449, 31.7123, 54.6604, 64.7625, 0.0, 0.0, 0.0, 0.0, 0.0, 37.9157], [84.2933, 0.0, 0.0, 90.9484, 0.0, 0.0, 889.1248, 0.0, 0.0, 27.6782], [30.3696, 0.0, 34.1179, 671.0489, 43.4025, 73.0649, 240.5501], [0.0, 34.0637, 0.0, 29.1832, 0.0, 647.0185, 72.0405, 44.7042, 0.0, 125.7456, 183.0984, 39.9855, 98.194, 31.4776, 71.229, 43.2635, 14.3106, 21.3408, 21.573, 53.6085, 41.7054, 15.2509, 66.5984], [28.6398, 35.5555, 9.9562, 27.3532, 806.5203, 36.2112, 97.6869, 0.0, 211.2711, 193.7078, 53.9258, 77.4357, 30.529, 36.3949, 3.0742, 20.3154, 20.007, 14.634, 28.651, 0.0, 28.4661, 79.237], [237.4609, 30.0564, 509.9169, 431.7928, 108.3323, 191.9565, 88.8272, 102.1799, 159.7074, 92.5419, 82.8126, 44.901, 170.5212, 34.2078, 84.1347], [74.8274, 37.4946, 326.0756, 446.7373, 125.856, 282.2204, 143.719, 197.964, 209.794, 166.003, 31.6134, 105.462, 160.8768, 0.0, 110.8984, 64.101], [23.7314, 641.9282, 311.9306, 377.2657, 171.5314, 231.3514, 303.0692, 286.0436, 137.0304, 171.531, 192.2467, 184.8783, 172.8149, 238.619], [163.5551, 39.9008, 0.0, 212.6161, 0.0, 861.1895, 216.5033, 51.8077, 197.7448, 70.1155, 358.6675, 129.1335, 343.3293, 141.1749, 139.2601, 95.5245, 130.5351, 54.756, 104.895, 82.6956, 0.0, 225.2367, 68.8688], [115.6789, 51.5514, 40.0442, 201.1127, 23.9211, 1656.5957, 120.216, 162.7403, 59.455, 744.6112, 499.4422, 168.4198, 279.6548, 202.0172, 149.9197, 138.713, 141.4785, 121.2588, 148.122, 80.1306, 53.5766, 121.8145, 120.7096], [241.0834, 208.4195, 23.9914, 186.5374, 0.0, 1581.2003, 272.3792, 174.2234, 135.5068, 272.4488, 400.9912, 110.2551, 506.4807, 217.9716, 239.5364, 228.3141, 215.9498, 123.9732, 122.823, 218.8202, 204.2471, 49.0523, 228.1752], [188.3752, 36.7277, 145.7687, 239.6098, 0.0, 2114.3748, 288.3528, 177.3212, 47.8676, 814.2644, 553.7443, 191.5371, 336.0405, 222.5854, 160.6935, 224.94, 290.7577, 74.1312, 97.713, 164.7499, 195.125, 91.5057, 221.0613]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

