created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Snugglies Wugglies", "Adrinz", "Loganlek", "Graumas", "Air One Com", "K\u00f4sair", "Solus Luxes", "Brutal Araden", "Raziel Umbra", "Seiker Novus Terra", "Mort\u00e4rion", "Elon Illusionblade", "Black Raspberry Pie", "J\u00e2sm\u00eene", "High Sorcer Baradun", "Legoh Brave", "Tegan Parker", "Heals For Daddy", "Drevarr Moonwillow", "Sofya De Nova", "Kahlyanne", "Tribal S"];
const professions = ["Virtuoso", "Firebrand", "Berserker", "Thief", "Firebrand", "Spellbreaker", "Firebrand", "Renegade", "Chronomancer", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Tempest", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 33.0091, 0.0, 0.0, 6.9963, 0.0, 2.9974, 7.0049, 2.0, 0.0, 0.0, 16.031], [63.3532], [0.0, 3.9839, 38.1617, 0.0, 0.0, 0.9963, 2.9945, 0.9987, 2.0, 0.0, 0.0, 0.0, 25.994], [2.0, 0.0, 17.0448, 7.989, 24.0259, 10.1122, 0.0, 0.0, 0.0, 41.0143], [0.0, 15.0968, 57.1449, 0.0, 9.9963, 11.989, 20.9974, 0.0, 2.0, 6.0222, 0.0, 24.0179], [0.0, 5.9758, 81.1604, 10.087, 0.0, 11.9963, 0.0, 4.9961, 0.0, 0.0, 0.0, 24.0], [0.0, 0.0, 78.1371, 13.1087, 0.0, 8.9963, 11.989, 6.9948, 5.0, 4.0, 10.3667, 1.9722, 29.0525], [0.0, 0.0, 100.3389, 0.0, 0.0, 0.0, 7.989, 10.0, 4.0, 4.0, 9.0667, 0.0, 33.0048], [0.0, 19.9274, 57.0699, 28.4783, 0.0, 38.0075, 8.0276, 64.0065, 0.0, 0.0, 0.0, 0.0, 57.037], [45.7097, 89.6003, 20.1739, 0.0, 56.25, 47.0829, 92.1294, 14.0146, 3.0, 0.0], [0.0, 7.9919, 151.6986, 20.1957, 0.0, 16.0187, 0.0, 32.066, 0.0, 0.0, 0.0, 0.0, 34.0107], [0.0, 31.0726, 119.4981, 27.3043, 0.0, 48.0075, 23.9779, 33.9909, 0.0, 13.1328, 0.0, 0.0, 66.043], [0.0, 20.9194, 133.8305, 0.0, 30.9925, 19.9779, 45.0323, 0.0, 0.0, 0.0, 0.0, 54.0537], [0.0, 78.4839, 337.5188, 103.8507, 76.6354, 143.5291], [0.0, 41.2742, 318.837, 38.3696, 0.0, 110.3209, 71.2762, 168.3493], [0.0, 80.1129, 329.9884, 59.1522, 0.0, 94.5672, 53.1492, 171.4153, 7.0098, 13.0078, 28.2444, 0.0, 119.2685], [0.0, 66.871, 296.3454, 40.8261, 86.2649, 102.9834, 159.2212, 9.039, 26.0703, 9.0667, 0.0, 180.9332], [0.0, 46.2177, 401.5408, 53.1522, 0.0, 101.3582, 134.4586, 249.3312], [3.0169, 93.9597, 330.1953, 53.2826, 126.0597, 94.8564, 187.8331, 51.5122, 63.6172, 25.1444, 6.25, 207.6372], [3.0169, 69.4597, 358.9263, 71.087, 0.0, 121.2239, 103.1713, 196.6352, 14.1512, 25.2266, 25.8, 4.9444, 245.0274], [11.0847, 89.4919, 383.5045, 59.7174, 129.0261, 117.442, 253.8047, 37.361, 41.7344, 42.6778, 0.9722, 237.4141], [1.0, 128.7258, 422.5796, 75.8913, 0.0, 171.903, 117.2707, 250.3946, 4.0, 41.8516, 41.1222, 0.0, 302.4391]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

