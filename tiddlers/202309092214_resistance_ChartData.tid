created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Bearah", "Traidoruns Maximus", "Glorious Gluvs", "Jimbo The Pleb", "Oo Dads Mad", "Zenady", "Sygaldry Verdandi", "Crusader Siolith", "Pr\u00e6tor Lightbringer", "Gabe Malhorn", "Xanvias Einzbern", "Koralia Danai", "Bella Sassy", "Venomina The Fierce"];
const professions = ["Berserker", "Firebrand", "Firebrand", "Berserker", "Berserker", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 91.8496, 0.0, 0.0, 59.7931], [10.71, 18.1584, 145.8437, 0.0, 2.8215], [111.1291, 20.6251, 0.0, 0.0, 40.4633, 75.46], [0.0, 0.0, 0.0, 44.6594, 28.5219, 51.982, 21.9294, 42.3115, 0.0, 0.0, 0.0, 36.1634, 63.2709], [0.0, 247.4561, 49.8069, 22.6908], [0.0, 19.6483, 261.4029, 9.7485, 47.7873, 12.4631], [0.0, 171.9441, 0.0, 0.0, 165.4325, 0.0, 0.0, 0.0, 45.981, 80.85, 0.0, 0.0, 0.0, 0.0, 43.3059], [0.0, 197.7772, 9.5295, 0.0, 8.9572, 176.9915, 210.4795, 94.3222, 47.9174, 2.9406, 47.7995, 23.1594], [23.94, 11.2365, 210.5967, 24.0237, 26.9973, 312.4672, 0.0, 0.0, 122.9461, 157.388, 49.5821, 9.9403, 0.0, 0.0], [30.4502, 164.7715, 11.9905, 0.0, 267.3627, 0.0, 0.0, 0.0, 70.5985, 183.3948, 122.0184, 36.193, 23.3758, 23.7572, 23.9943], [12.012, 27.129, 178.3198, 0.0, 0.0, 277.1552, 12.2284, 0.0, 9.0062, 119.5506, 172.0757, 116.9827, 102.2069, 12.0926, 30.1456, 23.9943], [55.146, 19.7725, 221.9534, 47.5507, 0.0, 113.0579, 87.365, 0.0, 17.1304, 322.0085, 165.8773, 122.2121, 43.9668, 0.0, 46.0313, 47.6619], [47.922, 27.4704, 225.9382, 12.0047, 0.0, 283.5351, 35.9856, 0.0, 0.0, 216.6059, 175.3097, 136.3507, 67.4158, 0.0, 48.9118, 44.9394], [12.012, 28.5878, 332.5316, 49.2535, 35.9667, 331.3102, 35.6191, 23.9183, 8.9768, 167.2294, 165.0688, 83.3792, 122.0875, 23.8384, 87.2712, 94.9608], [730.6131, 104.7931, 86.8131, 534.8738, 118.7858, 0.0, 489.5208, 252.9257, 105.1682, 102.4618, 0.0, 131.7054, 136.3065]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

