created: 20230225215428000
creator: Drevarr
modified: 20230705163520327
modifier: drevarr
tags: ChartData
title: 202302252154_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Roided Barack", "Morv\u00e4rth", "Xanvias Tseli", "Be\u00eb", "Smol Gluvs", "Vopiscus Zergherdus", "Viral Marketing", "Smol Daddy Tika", "Primal Clone", "Daring Deathblade", "Tegan Parker", "Newtype Khan", "Zadie Miststep", "Sparks Malefacio", "Venomina The Fierce", "Mac Aaroni", "Koralia Danai", "Grasszanine", "Sizklea", "Sygaldry Verdandi", "Drevarr Moonwillow", "Aronorf Xideliesi", "Blanco Padre Guard", "Bella Sassy", "Gabe Malhorn"];
const professions = ["Tempest", "Scourge", "Berserker", "Scourge", "Scourge", "Scrapper", "Firebrand", "Berserker", "Chronomancer", "Scourge", "Tempest", "Spellbreaker", "Tempest", "Scourge", "Spellbreaker", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[71.5251, 108.3637], [54.1944, 6.6752, 41.5617, 40.5506, 22.61, 40.2032, 6.0216, 14.5342, 0.0], [24.9631, 0.0, 0.0, 154.5913, 39.938, 0.0, 6.6144, 0.0, 0.1421, 0.0, 27.2157], [83.3134, 0.0, 45.2837, 60.8, 0.0, 0.0, 19.5138, 0.0, 0.0, 55.9551], [51.0494, 0.0, 114.6163, 75.886, 16.8667, 23.1816, 0.0, 0.0, 3.5465], [57.9478, 138.624, 32.6173, 0.0, 25.1742, 0.0, 0.0, 47.6801], [8.8305, 99.1117, 227.1304], [0.0, 0.0, 0.0, 112.1219, 125.172, 0.0, 0.0, 0.0, 0.0, 133.8194], [26.4233, 0.0, 350.9485, 0.0, 3.5139, 9.2352, 0.0, 0.0, 21.234, 17.2331], [58.9961, 0.0, 48.2051, 146.6603, 117.078, 47.0036, 17.6592, 19.7691], [33.5275, 0.0, 54.8484, 108.1564, 112.556, 64.8211, 0.0312, 139.1499, 11.0229, 15.8814, 31.7604], [0.0, 0.0, 84.3822, 298.6932, 67.07, 0.0, 0.0, 52.3701, 0.0, 0.0, 85.8504], [120.5194, 31.4832, 104.9416, 118.7098, 75.772, 0.8268, 5.148, 58.3285, 0.0, 29.2335, 57.6626], [68.432, 26.3636, 126.257, 129.998, 40.1411, 51.168, 32.7712, 41.6556, 42.1739, 56.428], [94.8527, 154.014, 0.0, 188.4792, 0.0, 0.0, 206.0465, 11.4274], [47.4271, 25.3568, 15.9907, 257.2471, 142.348, 46.4248, 0.0, 23.1101, 0.0, 73.4074, 41.743], [25.8898, 8.848, 90.4428, 33.9628, 88.464, 131.1511, 243.3912, 43.3686, 13.8954, 28.9394, 19.1771], [103.1378, 36.2208, 51.7948, 144.1019, 107.806, 0.0, 0.0, 29.7282, 328.2744], [58.5468, 34.8544, 99.6269, 110.5229, 154.546, 232.0207, 64.6776, 47.6246], [176.0897, 19.2528, 29.2074, 336.6854, 176.13, 127.9473, 145.704, 0.0, 0.0, 7.1454], [149.3014, 10.0912, 51.0023, 354.7861, 31.502, 118.7492, 85.2696, 104.5699, 13.672, 144.4031, 93.3636], [103.5029, 6.6864, 150.9089, 232.7504, 193.61, 148.8447, 272.0016, 29.8771, 0.0, 19.6762], [162.5832, 31.6176, 49.9533, 266.2015, 157.966, 112.0107, 284.1384, 5.6605, 194.1648, 1.4186], [130.0104, 9.2176, 259.6501, 192.6475, 149.226, 140.2873, 423.54, 73.2883, 0.0, 153.3437, 58.0567], [195.4649, 69.2496, 21.958, 464.9892, 236.094, 93.6351, 310.3776, 9.7462, 11.703, 298.8644, 71.6646]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

