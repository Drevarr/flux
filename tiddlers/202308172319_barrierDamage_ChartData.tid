created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Vera Khin", "Thought Bound", "Apyen", "Darks Na", "Caelon Cai", "Alarics Clone", "Tribal S", "Xanvias", "Newtype Khan", "Jimbo One Eye", "Necrotic Windrunner", "Daring Deathblade", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Berserker", "Dragonhunter", "Reaper", "Chronomancer", "Druid", "Reaper", "Spellbreaker", "Scrapper", "Reaper", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 310, 669, 1512, 1295, 1295, 3878, 1737, 1916, 0, 3543], [0, 0, 0, 0, 0, 424, 0, 0, 0, 8214, 3500, 1906, 0, 0, 0, 0, 0, 2654], [344, 0, 497, 0, 0, 0, 225, 0, 0, 0, 0, 0, 0, 2583, 2415, 1605, 403, 0, 3759, 29, 3642, 0, 1365, 0, 0, 457, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3027, 651, 0, 368, 0, 0, 3366, 310, 0, 0, 0, 0, 0, 0, 431, 298, 0, 447, 0, 6736, 0, 0, 0, 2921, 0], [334, 699, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 310, 0, 1234, 0, 3083, 4011, 5546, 0, 0, 1767, 3029], [0, 0, 0, 0, 0, 0, 0, 1733, 0, 0, 0, 3481, 8706, 86, 5923, 0, 0, 1313, 632, 88, 3027], [0, 0, 0, 0, 0, 0, 929, 0, 0, 1328, 0, 937, 0, 0, 0, 0, 0, 310, 2585, 445, 0, 1295, 0, 3204, 0, 1916, 5209, 1295, 2739, 1134, 1269, 2534], [0, 0, 0, 0, 2585, 1628, 1605, 1295, 1242, 8391, 1267, 3590, 3640, 2866, 0, 0, 5646, 0], [4368, 8585, 4471, 6691, 1416, 0, 1699, 5132, 3007], [11092, 22422, 10294, 7183], [2735, 351, 14816, 3426, 0, 0, 867, 6903, 10232, 6240, 24624, 2585, 115, 20337, 4203, 908, 35373, 34279, 7798, 11862], [10970, 10824, 6595, 9016, 25259, 44908, 16308, 15588, 11781, 19731, 14875, 2459, 32972, 4508], [25257, 29806, 3218, 7835, 12885, 1158, 1093, 6194, 157, 16433, 27689, 11625, 4982, 0, 1999, 28285, 7920, 6010, 1212, 6270, 767, 1645, 1347, 96, 7047, 2129, 1860, 11346, 1773, 189, 4698, 2612, 1901, 527, 2156, 6297]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

