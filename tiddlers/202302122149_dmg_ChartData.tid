created: 20230212214943000
creator: Drevarr
modified: 20230705163519079
modifier: drevarr
tags: ChartData
title: 202302122149_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Shade Ilia", "Sizklea", "Daring Deathblade", "Ace Hammers", "Smol Gluvs", "Tootsie Pop Bringer", "Minka Bringer", "Ez Mode Mathus", "Whose Guardian", "Rina Of Theros", "Reverve Mk V", "Morv\u00e4rth", "Be\u00eb", "Lord Erin The Wise", "Harry Callahann", "Kosa\u00edr", "Xanvias Tseli"];
const professions = ["Soulbeast", "Dragonhunter", "Scourge", "Vindicator", "Scourge", "Scrapper", "Scrapper", "Scourge", "Willbender", "Scourge", "Herald", "Scourge", "Scourge", "Weaver", "Scrapper", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1419.9091, 292.6154, 241.19, 1337.6667, 106.25], [809.3117, 351.4423, 723.8566, 792.1515, 1289.52], [693.0779, 374.6795, 384.638, 402.3333, 1324.01, 309.3333, 470.6604, 1028.2439], [1144.4156, 463.9327, 790.5161, 0.0, 1054.74, 47.4, 281.4717, 944.5528], [1055.6883, 540.1731, 1029.1935, 0.0, 745.13, 62.2, 135.8302, 889.4228], [259.6635, 1350.4624, 0.0, 1583.56, 0.0, 980.9057, 1894.8374], [1760.0649, 927.5897, 1133.2437, 709.1212, 98.8667, 321.0377, 1334.4553], [532.2724, 1783.2401, 64.8788, 1371.67, 897.7333, 191.5472, 1710.6179], [1328.6753, 596.5513, 1867.871, 0.0, 1868.53, 356.5, 148.0, 1498.1789], [1891.2597, 830.8141, 1660.0358, 0.0, 831.62, 166.2667, 162.2453, 1971.5041], [1821.8052, 1000.0481, 1499.6416, 0.0, 560.55, 0.0, 996.6226, 2328.6585], [1772.6753, 859.4872, 1782.5771, 830.8182, 835.7, 1025.1667, 575.6792, 1836.2195], [1847.2468, 1069.2628, 2776.6416, 127.1212, 2929.7, 294.3], [1746.974, 862.7885, 2517.3405, 2365.5758, 1136.04, 1364.6, 2704.2642, 2534.9593], [3536.1948, 1518.1506, 2079.5412, 2685.1212, 2487.32, 838.9667, 1742.717, 2072.6585], [1758.6122, 3596.8961, 221.8788, 2755.54, 441.5333, 985.0566, 3005.813], [2772.0, 1782.1667, 5236.491, 661.1818, 3123.31, 403.6333, 397.434, 3849.3171]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

