created: 20230506220820000
creator: Drevarr
modified: 20230705163529027
modifier: drevarr
tags: ChartData
title: 202305062208_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["My Birthday Girl", "Newtype Khan", "Na Ting Wong", "High Sorcer Baradun", "Artakama Nahid", "Johosh The Mighty", "Tootsie Pop Rocks", "Mannse Lee", "Miphest\u00f6", "Blancooo Padreee", "Smol Daddy Tika", "Johoshua", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.78, 0.292, 0.075, 0, 0.01, 0.16, 0.298, 0.04], [0, 0.261, 0.252, 0.278, 0.044, 0.289, 0.331, 0.123, 0.451, 0.558, 0.033, 0, 0, 0.628, 0.766], [0, 0.343, 0.867, 0.425, 0, 0.736, 0.557], [0.514, 0.227, 0.525, 0.664, 0.211, 0.255, 0.768, 0.192, 0.221, 0.077], [0.476, 0.405, 0.3, 0.333, 0, 0.191, 0.363, 0.23, 0, 0.336, 0.241, 0.453, 0, 0.39, 0.381], [0.471, 1.033, 1.017, 0.828, 0.351], [0.963, 0.328, 0.425, 0.063, 0.244, 0.096, 0.149, 0.238, 0, 0.168, 0.417, 0, 0.15, 0.414, 1.402], [1.081, 0.81, 1.01, 0.334, 0.776], [0.411, 0.796, 0.274, 0.166, 0.191, 0.396, 0.328, 0, 0.669, 0.499], [0.343, 0.542, 0.407, 0, 0.35, 0.578, 0.705, 0.466, 1.039, 0.56, 0.901, 0, 0, 0.473], [0.811, 1.02, 0.907, 0, 0.702, 0.662, 0.661, 0.592, 0.029, 1.219, 0.906, 0.756, 0, 0.999, 1.0], [1.188, 1.29, 1.314, 0.876, 1.322, 1.508, 0, 0.937, 1.527, 1.107], [1.199, 1.346, 1.108, 0.834, 1.053, 0.76, 0.827, 0.681, 0.814, 1.122, 0.932, 0, 2.088, 0.906, 1.555], [1.349, 2.025, 1.506, 0.757, 1.169, 1.571, 1.308, 1.18, 1.001, 1.364, 1.324, 0.228, 0.628, 1.81, 2.301]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

