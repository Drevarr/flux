created: 20230626011254000
creator: Drevarr
modified: 20230705163537737
modifier: drevarr
tags: ChartData
title: 202306260112_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Staph", "Be\u00eb", "Morton Saltbringer", "Dargon Spiritwalker", "Warrior Constantine", "Smol Gluvs", "Rina Of Theros", "Oo Dads Mad", "Be\u00eb", "Raziel Umbra", "Ryvalia Fazebringer", "Primal Clone", "Smol Daddy Tika", "Blancooo Padreee", "Grasszanine", "Newtype Khan", "Arcanophage Farra", "Momomeko", "Black Raspberry Pie"];
const professions = ["Druid", "Scourge", "Chronomancer", "Reaper", "Spellbreaker", "Reaper", "Scourge", "Spellbreaker", "Reaper", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0685, 0.0435, 0.0341, 0.075, 0.0464, 0.043, 0.0719, 0.0268, 0.0353, 0.0351, 0.1944, 0.0, 0.0702, 0.0725, 0.0238, 0.05, 0.0536, 0.0263, 0.0541, 0.0492, 0.069, 0.0667, 0.0, 0.0941, 0.2045], [0.4386, 0.0238, 0.5536, 0.0, 0.1622, 1.1475], [0.0, 0.675, 0.5714, 0.0526, 0.3243, 0.1311, 0.5977, 0.5667, 0.6852], [0.0959, 0.0, 0.0, 0.14, 0.1331, 0.2473, 0.0, 0.0261, 0.0357, 0.0647, 0.0351, 0.25, 0.5283, 0.0, 0.1014, 0.0238, 0.025, 0.1607, 0.0263, 0.2162, 0.0984, 0.3908, 0.1, 0.0926, 0.2, 0.1591, 0.1522], [0.2688, 0.0, 0.0588, 0.0446, 0.0588, 0.0351, 0.2222, 1.0189, 0.1053, 0.029, 0.0, 0.0, 0.1071, 0.0, 0.0541, 0.8033, 0.5287, 0.45, 0.7407], [0.2329, 0.0, 0.0, 0.1, 0.1362, 0.1935, 0.0, 0.0784, 0.0982, 0.0618, 0.0351, 0.6667, 0.193, 0.4638, 0.0, 0.05, 0.0714, 0.0263, 0.1622, 0.1475, 0.092, 0.15, 0.6111, 0.3765, 0.5, 0.5652], [0.4658, 0.0, 0.0114, 0.115, 0.1053, 0.3118, 0.0, 0.098, 0.0714, 0.1, 0.0175, 0.1321, 0.1404, 0.5942, 0.119, 0.225, 0.0536, 0.0263, 0.0811, 0.2951, 0.3908, 0.4833, 0.537, 0.6471, 0.0455, 0.0], [0.6438, 0.0, 0.0, 0.005, 0.0093, 0.2903, 0.0719, 0.0536, 0.0294, 0.0, 1.2778, 0.2642, 0.5263, 0.4783, 0.1667, 0.0, 0.0179, 0.0, 0.0, 0.8852, 0.3333, 0.2333, 0.1852, 0.6824, 1.0682, 0.5435], [0.5205, 0.0, 0.0, 0.185, 0.3498, 0.3763, 0.0, 0.2092, 0.0893, 0.0971, 0.0877, 1.3333, 0.283, 0.3913, 0.025, 0.2644, 0.4, 0.0185, 0.5529, 0.4091, 0.087], [0.85, 0.5536, 0.0, 0.1622, 0.7377, 0.7816, 1.6167, 1.2222, 1.1412, 1.4773, 1.0652], [0.3973, 0.0, 0.0455, 0.265, 0.5418, 0.3441, 0.0, 0.4118, 0.2946, 0.1588, 0.2544, 0.8611, 0.0, 0.2982, 0.1304, 0.0, 0.125, 0.0357, 0.0263, 0.0541, 0.0164, 0.069, 0.0667, 0.037, 0.1412, 0.1591, 0.1304], [1.2877, 0.0, 0.0, 0.325, 0.4644, 0.4409, 0.1699, 0.1339, 0.1971, 0.3333, 2.3056], [0.8219, 0.0, 0.0, 0.135, 0.1796, 0.2258, 0.0, 0.1961, 0.1071, 0.0294, 0.1667, 1.1944, 0.3208, 0.2105, 0.6812, 0.0, 0.0, 0.0, 0.0, 0.2162, 1.0656, 0.6207, 0.7, 0.1296, 0.8, 0.3409, 1.0], [0.4795, 0.0, 0.0, 0.13, 0.3622, 0.3441, 0.0, 0.1438, 0.0536, 0.1853, 0.0, 0.3019, 0.3509, 0.942, 0.0, 0.0, 0.0, 0.0, 0.0811, 0.5738, 0.4483, 1.1833, 0.2778, 0.6118, 1.4091, 0.2826], [0.0446, 0.1412, 0.4211, 0.5556, 1.0943, 0.6491, 0.8841, 0.0, 0.0, 0.0357, 0.0, 0.1081, 0.5246, 0.8161, 1.1167, 0.9815, 0.9647, 0.5909, 2.0435], [0.5616, 0.0, 0.0, 0.14, 0.0217, 0.3548, 0.0, 0.2288, 0.0536, 0.1412, 0.1316, 1.3333, 0.434, 0.2632, 0.3333, 0.3571, 0.0, 0.1786, 0.0263, 0.2973, 0.541, 0.7586, 0.6, 1.0185, 1.1765, 0.4318, 1.3043], [0.4384, 0.0, 0.0, 0.2, 0.2972, 0.2796, 0.0, 0.2026, 0.0714, 0.1176, 0.1316, 1.2222, 0.8679, 0.5614, 0.913, 0.0, 0.0, 0.0714, 0.0, 0.1351, 1.2623, 0.9195, 0.9333, 1.3333, 0.8706, 0.7273, 0.3696], [0.8493, 0.0, 0.0, 0.23, 0.5851, 0.4194, 0.0, 0.1503, 0.2321, 0.0647, 0.0, 1.9167, 0.9434, 0.4912, 1.4493, 0.0, 0.25, 0.2143, 0.0, 0.1892, 1.7541, 0.6207, 1.2667, 0.0], [0.9178, 0.0, 0.0227, 0.23, 0.226, 0.914, 0.0, 0.5229, 0.1607, 0.1912, 0.3509, 0.7222, 0.8302, 0.2807, 0.6522, 0.0, 0.675, 0.3571, 0.0263, 0.2162, 1.7049, 0.7126, 2.3167, 1.5185, 1.3529, 1.6818, 0.7391]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

