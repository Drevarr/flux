created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Amiti\u00e9l", "Kira Dragonblaze", "Govinda Ektar", "Belvyn Brightblade", "Tegan Parker", "Jandir Schug", "Vamp X Potato", "Mistwalker Cael", "Sonja Wintersong", "Kat Bon Z", "Cedryn X", "Amiti\u00e9l", "Gadget Windrunner", "Ax Axun", "K\u00e2 \u00d4tik R\u00e6j", "Morv\u00e4rth", "Daphne Agla\u00e9", "Kalisha Lafay", "Koralia Danai", "Atria Ruinheart", "Glorious Gluvs", "Lord Erin The Wise", "Caoimhe Corpsetouch", "Daring Deathblade", "Xanvias Einzbern", "Rina Of Theros", "Venomina The Sly", "Sassy Daddy Demon", "Daray Darkblood", "Gabe Malhorn", "Be\u00eb", "Newtype Khan", "Drevarr Moonwillow", "Bella Bitty", "Sygaldry Verdandi", "Aronorf Xideliesi", "Adjudicatrix Farra", "Zaedy Zae", "Hyde En Sikh"];
const professions = ["Willbender", "Dragonhunter", "Vindicator", "Firebrand", "Tempest", "Soulbeast", "Renegade", "Herald", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Scrapper", "Vindicator", "Berserker", "Reaper", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Weaver", "Reaper", "Reaper", "Berserker", "Reaper", "Druid", "Herald", "Reaper", "Firebrand", "Reaper", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Druid", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0979, 0.2886], [0.4412, 0.2521, 0.0], [0.3, 0.0426, 0.0, 0.1515, 0.1287, 0.0, 0.0, 0.017, 0.0134, 0.2755, 0.0, 0.1176, 0.0, 0.0078, 0.1765], [0.7647, 0.1624, 0.4857, 0.069, 0.266], [0.4796, 0.3158, 0.3412, 0.0, 0.0465, 1.2059], [0.6176, 0.3333, 0.8, 0.2128, 0.2468, 0.1026, 0.015, 0.175], [0.2647, 0.0, 0.1064, 0.2727, 0.094, 0.0827, 0.3, 0.1016, 0.1667, 0.2766, 0.1063, 0.0198, 0.0942], [0.7353, 0.3846, 1.0, 0.1034, 0.3085, 0.3377, 0.2222, 0.0075, 0.325], [0.1496, 0.2933, 0.3939, 0.2772, 0.2464, 0.3333, 0.1212, 0.0511, 0.4362, 0.5612, 0.1053, 0.2039, 0.0, 0.0388, 0.9412], [0.6176, 0.1966, 0.0345, 0.266, 0.2857, 0.3675, 0.0902, 0.1333, 0.2656, 0.4667, 0.0532, 0.2244, 0.44, 0.1136, 0.0891, 0.1304, 0.3095], [0.1176, 0.1111, 0.3138, 0.3377, 0.2051, 0.015, 0.2583, 0.2969, 0.5833, 0.1383, 0.122, 0.0267, 0.2348, 0.0693, 0.1449, 0.0952, 0.1667, 0.1234, 0.094, 0.1122, 0.0877, 0.098], [0.4706, 0.312, 0.9143, 0.2414, 0.1436, 0.3377, 0.1368, 0.0, 0.3, 0.3047, 0.45, 0.4309, 0.1654, 0.3333, 0.2727, 0.0891, 0.1739, 0.1905, 0.2576], [0.7647, 0.2137, 1.0857, 0.0345, 0.266, 0.0909, 0.2991, 0.1053, 0.125, 0.1172, 0.2833, 0.133, 0.0984, 0.1333, 0.2955, 0.1089, 0.1522, 0.2381, 0.1667, 0.0723, 0.1745, 0.1735, 0.193, 0.1294, 0.0, 0.0388, 0.6176], [0.7647, 0.1624, 0.3429, 0.0, 0.2447, 0.5844, 0.3504, 0.0, 0.325, 0.25, 0.35, 0.0638, 0.1457, 0.4133, 0.197, 0.2178, 0.2319, 0.0952, 0.1061, 0.1319, 0.2755, 0.1404, 0.0863], [0.5882, 0.2692, 0.4, 0.1379, 0.4043, 0.4416, 0.1709, 0.0376, 0.3917, 0.2812, 0.5333, 0.1862, 0.2244, 0.36, 0.5758, 0.2475, 0.1087], [0.5294, 0.2179, 0.0286, 0.0345, 0.4574, 0.4805, 0.453, 0.0301, 0.3417, 0.125, 0.25, 0.2128, 0.2913, 0.2267, 0.1439, 0.1782, 0.2174, 0.2857, 0.0758, 0.0979, 0.2349], [0.4706, 0.3333, 0.3429, 0.069, 0.2819, 0.4805, 0.2564, 0.0301, 0.3833, 0.3594, 0.3833, 0.1862, 0.0787, 0.2267, 0.1818, 0.1287, 0.1449, 0.3095, 0.197, 0.0468, 0.3289, 0.0816, 0.1579, 0.0745], [0.3824, 0.2564, 0.8857, 0.1379, 0.1915, 0.1169, 0.1795, 0.0301, 0.175, 0.3594, 0.1667, 0.0957, 0.2283, 0.1467, 0.3561, 0.2079, 0.1812, 0.2143, 0.1061, 0.1234, 0.3557, 0.4082, 0.1404, 0.1647], [0.7647, 0.2094, 0.9714, 0.0, 0.2872, 0.4416, 0.2137, 0.0, 0.2417, 0.375, 0.3333, 0.4096, 0.1969, 0.2533, 0.2273, 0.1287, 0.2391, 0.1429, 0.0909, 0.034, 0.2349, 0.2857, 0.1228, 0.1373, 0.0, 0.0388], [0.5588, 0.3162, 0.8857, 0.069, 0.4096, 0.6104, 0.4872, 0.0301, 0.2344, 0.5, 0.0904, 0.1181, 0.1467, 0.4242, 0.0594, 0.1739, 0.2381, 0.1515, 0.1404, 0.4497, 0.2449, 0.1228, 0.2], [0.7941, 0.1581, 0.4857, 0.1379, 0.3883, 0.5844, 0.3248, 0.0301, 0.2917, 0.2578, 0.3833, 0.1862, 0.1811, 0.3067, 0.447, 0.2673, 0.1232, 0.1429, 0.2121, 0.0553, 0.4286, 0.1754, 0.2275, 0.0, 0.0465, 0.7941], [0.3824, 0.3077, 0.6, 0.1379, 0.2447, 0.2857, 0.2991, 0.0075, 0.3917, 0.2188, 0.15, 0.1489, 0.2165, 0.2933, 0.2273, 0.1287, 0.1812, 0.3095, 0.0909, 0.2128, 0.2148, 0.3061, 0.2456, 0.3294, 0.0, 0.0853, 0.5294], [0.2059, 0.2436, 0.9429, 0.0345, 0.2872, 0.3896, 0.2137, 0.0075, 0.3667, 0.2109, 0.7, 0.4149, 0.2047, 0.3467, 0.3106, 0.3168, 0.2246, 0.119, 0.197, 0.0894, 0.2081, 0.2245, 0.0702, 0.1961, 0.0305], [0.1379, 0.1915, 0.3766, 0.188, 0.0226, 0.225, 0.3203, 0.25, 0.5106, 0.2362, 0.4533, 0.4545, 0.2079, 0.3043, 0.4762, 0.1515, 0.1021, 0.5235, 0.4388, 0.0351, 0.2588, 0.0102, 0.0], [0.5, 0.4402, 1.2571, 0.0345, 0.4521, 0.5974, 0.1368, 0.015, 0.2667, 0.3281, 0.5333, 0.4255, 0.1535, 0.2, 0.2424, 0.2574, 0.2101, 0.7143, 0.2121, 0.0809, 0.2953], [0.5882, 0.4145, 0.7714, 0.1724, 0.0957, 0.5455, 0.2479, 0.0075, 0.4167, 0.2812, 0.5, 0.3457, 0.1732, 0.1467, 0.3409, 0.297, 0.1159, 0.3571, 0.1061, 0.0638, 0.2685, 0.3163, 0.1754, 0.1804, 0.0, 0.0, 0.7647], [0.2647, 0.2521, 0.7143, 0.0, 0.3085, 0.3766, 0.4615, 0.1128, 0.3167, 0.1172, 0.3667, 0.1117, 0.2047, 0.28, 0.4773, 0.099, 0.3188, 0.2381, 0.1061, 0.1234, 0.443, 0.3265, 0.3684, 0.1882, 0.0, 0.0543, 0.5294], [0.5588, 0.3932, 1.0286, 0.1379, 0.5106, 0.3506, 0.2308, 0.0226, 0.3333, 0.4531, 0.2167, 0.2819, 0.185, 0.32, 0.3485, 0.5347, 0.2246, 0.4286, 0.1667, 0.1362, 0.2886], [0.6765, 0.4359, 0.9143, 0.0, 0.2553, 0.2987, 0.2222, 0.0301, 0.275, 0.3203, 0.1833, 0.0957, 0.1929, 0.3067, 0.2348, 0.297, 0.1884, 0.5, 0.3333, 0.1702, 0.2081, 0.5102, 0.1754, 0.1765, 0.0102, 0.1008, 0.8235], [0.312, 0.3429, 0.0, 0.5053, 0.3247, 0.2051, 0.0, 0.2833, 0.2891, 0.3333, 0.484, 0.3071, 0.2667, 0.4773, 0.2673, 0.2246, 0.5238, 0.1818, 0.1277, 0.4631, 0.3265, 0.4386, 0.2588, 0.0, 0.0853, 1.0882], [0.3529, 0.4274, 0.5714, 0.0345, 0.4894, 0.4545, 0.3248, 0.0075, 0.375, 0.3516, 0.3833, 0.0851, 0.3504, 0.3333, 0.2273, 0.2079, 0.2754, 0.5476, 0.1515, 0.1915, 0.4765, 0.6224, 0.2982, 0.251, 0.0, 0.0078, 0.9118], [0.5043, 1.1714, 0.0, 0.5745, 0.3247, 0.2906, 0.0226, 0.3167, 0.3047, 0.4667, 0.3245, 0.3858, 0.6, 0.2955, 0.2673, 0.0942, 0.6429, 0.2576, 0.2298, 0.2483, 0.5408, 0.3333, 0.051, 0.0, 0.0388, 0.8235], [0.2353, 0.3932, 0.6286, 0.1379, 0.4149, 0.4805, 0.3419, 0.0075, 0.425, 0.3438, 0.2833, 0.484, 0.248, 0.28, 0.5758, 0.2376, 0.2464, 0.5476, 0.1515, 0.1574, 0.2886, 0.5, 0.3509, 0.2353, 0.0, 0.031, 1.0294], [0.3529, 0.2949, 0.3714, 0.1724, 0.3936, 0.5065, 0.4615, 0.0451, 0.3417, 0.3438, 0.35, 0.5532, 0.2362, 0.4, 0.5455, 0.4059, 0.2391, 0.5, 0.1212, 0.1532, 0.3154, 0.5612, 0.2456, 0.2, 0.0, 0.0543, 0.9412], [0.5588, 0.359, 1.0857, 0.069, 0.4309, 0.5714, 0.4188, 0.0075, 0.375, 0.4688, 0.2667, 0.3777, 0.3307, 0.24, 0.3939, 0.2871, 0.1304, 0.619, 0.2121, 0.1319, 0.4765, 0.6224, 0.1754, 0.0353, 0.0051, 0.0078, 1.6176], [0.6765, 0.2735, 1.0571, 0.0, 0.6277, 0.3766, 0.2735, 0.0, 0.25, 0.5156, 0.35, 0.7074, 0.2559, 0.0933, 0.447, 0.4158, 0.2899, 0.1905, 0.2121, 0.0723, 0.3758, 0.4286, 0.4035, 0.2588, 0.0152, 0.0698, 1.3529], [0.9412, 0.5385, 0.9143, 0.5106, 0.5455, 0.3932, 0.0, 0.575, 0.4297, 0.5167, 0.6064, 0.2992, 0.32, 0.4091, 0.5545, 0.1884, 0.381, 0.197, 0.1277, 0.3423, 0.398, 0.1754, 0.051, 0.0102, 0.124, 0.6765], [1.1765, 0.4487, 1.2, 0.069, 0.5638, 0.7143, 0.4359, 0.0075, 0.3167, 0.2422, 0.55, 0.5426, 0.378, 0.3467, 0.4545, 0.3762, 0.3986, 0.6429, 0.2879, 0.1319, 0.047, 0.4694, 0.3333, 0.1059, 0.0102, 0.1628, 0.6471], [0.3529, 0.4957, 1.0286, 0.0, 0.5957, 0.6104, 0.547, 0.015, 0.3917, 0.4531, 0.45, 0.4681, 0.2362, 0.3467, 0.3182, 0.3663, 0.3913, 0.6667, 0.3333, 0.1787, 0.4564, 0.6224, 0.2281, 0.2275, 0.0, 0.0465, 1.1471]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

