created: 20230304223548000
creator: Drevarr
modified: 20230705163521263
modifier: drevarr
tags: ChartData
title: 202303042235_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Nova", "Nimplet", "I Make Tools", "Tootsie Pop Bringer", "Your Devoted Buffer", "High Sorcer Baradun", "Xanvias Tseli", "Mac Aaroni", "Venomina The Fierce", "Cerys Fireblade", "Pinky Aldar", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Weaver", "Scrapper", "Scrapper", "Scrapper", "Tempest", "Tempest", "Berserker", "Tempest", "Spellbreaker", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0.392, 0, 0, 0, 0, 0.325, 2.042, 2.202, 0.111, 0.202, 0, 0, 0.284, 0, 0, 0.741], [0.234, 0, 0.523, 0.295, 0.329, 0.162, 0, 0.322, 1.594, 1.666, 1.531], [0, 0, 0.672, 0.64, 0.055, 0.18, 0.882, 0.726, 0.745, 0.774], [0.555, 0.547, 0.733, 0, 0, 0.177, 0.216, 0, 0, 0, 0.583, 0.824, 0, 0, 0.074, 0.038, 0.055, 0, 0.323, 0.415, 1.605, 0.74], [0.481, 0.514, 0.64, 0.403, 2.124, 0.893, 0.845, 2.045, 0, 0.295, 1.198, 0], [0.567, 0.548, 0.066, 1.103, 1.075, 0.393, 0.32, 1.062, 0.984, 0.291, 0, 0.886, 0.708, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.95, 0, 1.908, 0.735, 1.338, 0.243, 0, 0.645, 1.383, 0.703, 1.232], [0.664, 0.274, 0.946, 0, 0, 0.536, 0.429, 0, 0.403, 0, 1.02, 0.712, 0, 1.104, 0.406, 0.716, 0.588, 0, 0.516, 1.246, 0.856, 0.741], [0.364, 0.457, 0.349, 3.375, 1.283, 0.655, 2.139, 0.672, 0, 0.924, 0.95, 0, 2.298, 0.265, 0.669, 0.219, 0.411, 0.518, 1.427, 1.853], [1.016, 0.699, 1.393, 0, 1.421, 0.495, 0.655, 1.066, 0.833, 1.858, 1.047, 0.708, 0, 0.457, 0.554, 0.718, 0.97, 0, 0.699, 1.729, 0.829, 0.309], [2.951, 3.987, 3.525, 1.676, 2.222], [1.454, 0.274, 2.049, 0.552, 0, 1.923, 0.84, 1.336, 0.844, 1.119, 1.532, 1.611, 1.166, 0.963, 1.365, 0.71, 1.382, 1.502, 0.428, 0.741], [1.839, 0.558, 1.806, 0, 0, 0.586, 0.784, 1.441, 0.907, 1.758, 1.982, 3.517, 2.756, 1.399, 1.955, 1.19, 0.355, 1.656, 2.786, 2.483, 1.465]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

