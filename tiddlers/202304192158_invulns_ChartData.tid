created: 20230419215809000
creator: Drevarr
modified: 20230705163525989
modifier: drevarr
tags: ChartData
title: 202304192158_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupi Jupi Jupi", "Fecund Algorithm", "Ferret Business", "Declan To", "Kos\u00e4ir", "Mistwalker Caelon", "Panther B Me", "Solus Sanctus", "Sumatra Satyricon", "Grasszanine", "Sp\u00edcy Cheese", "Rina Of Theros", "Ryvalia Fazebringer", "Be\u00eb", "Johosh The Great", "Sygaldry Verdandi", "Drevarr Moonwillow", "Husky Guard", "Oo Dads Mad", "Gabe Malhorn", "Bella Sassy", "Mac Chiato", "Elonith Requiem", "Skye Nightroad", "Xyntharos", "Daddys Lil Orchid", "Smol Gluvs", "Xanvias Einzbern", "Koralia Danai", "Nazhul Naxxremis", "Tribal S", "Tegan Parker", "High Sorcer Baradun", "Smol Daddy Tika", "Newtype Khan", "Kmpek", "Mike The Archmagus", "Tootsie Pop Rocks", "Bagera Flametalon", "Zadie Miststep", "My Birthday Girl", "Venomina The Siren", "Cedryn X", "Anita Strips", "Lord Erin The Wise", "Corlyss Velaryonn", "Eibh\u00ebar", "Arcanophage Farra", "Abigail Ryn", "Miphest\u00f6"];
const professions = ["Firebrand", "Mechanist", "Soulbeast", "Tempest", "Vindicator", "Vindicator", "Scourge", "Firebrand", "Soulbeast", "Spellbreaker", "Berserker", "Scourge", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Scrapper", "Dragonhunter", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Scourge", "Berserker", "Firebrand", "Scourge", "Druid", "Tempest", "Tempest", "Berserker", "Spellbreaker", "Vindicator", "Weaver", "Scrapper", "Tempest", "Tempest", "Scrapper", "Tempest", "Berserker", "Chronomancer", "Weaver", "Vindicator", "Chronomancer", "Spellbreaker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 10, 0, 20, 0, 0, 0, 0, 0], [19, 13, 39, 18, 0, 0], [11, 0, 0, 9, 0, 4, 25, 17, 10, 8, 8, 0, 0, 0, 0], [19, 0, 27, 7, 0, 0, 29, 12], [0, 0, 14, 0, 0, 0, 19, 0, 0, 0, 0, 0, 7, 17, 8, 0, 2, 35], [0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 4, 30, 0, 10, 0, 10, 0, 26, 11], [0, 0, 22, 0, 0, 0, 17, 18, 0, 0, 0, 0, 15, 4, 0, 22, 13, 0, 0, 0, 0, 0], [0, 0, 19, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 50, 0, 0, 15, 0, 21, 0, 0, 0], [0, 0, 26, 0, 0, 14, 44, 11, 0, 0, 11, 0, 10, 15], [0, 0, 29, 0, 0, 0, 2, 0, 0, 0, 0, 0, 50, 0, 0, 5, 11, 9, 0, 31, 0], [0, 0, 33, 0, 0, 0, 2, 22, 0, 0, 0, 0, 0, 5, 0, 23, 21, 0, 16, 0, 19, 0], [0, 0, 15, 0, 0, 0, 9, 3, 0, 0, 0, 0, 39, 5, 10, 0, 28, 0, 18, 0, 15, 0], [0, 0, 20, 0, 0, 2, 29, 0, 0, 0, 0, 0, 0, 15, 0, 0, 6, 13, 25, 0, 19, 14], [0, 45, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 34, 10, 0, 19, 0, 6, 0, 16, 0], [0, 0, 52, 0, 0, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 24, 0, 21, 0, 17, 28], [0, 0, 25, 0, 0, 0, 18, 5, 0, 0, 0, 0, 0, 12, 7, 0, 19, 0, 23, 0, 22, 29], [0, 0, 6, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 18, 28, 0, 14, 16, 12, 0, 35, 15], [0, 0, 29, 0, 11, 10, 0, 12, 0, 0, 0, 6, 63, 44], [0, 90, 0, 2, 29, 35, 17, 0, 3, 0, 1], [0, 0, 0, 20, 25, 0, 0, 0, 0, 12, 3, 0, 29, 23, 22, 0, 17, 28], [0, 0, 18, 0, 0, 0, 16, 27, 0, 0, 0, 0, 53, 0, 0, 13, 17, 7, 0, 17, 13], [0, 20, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 25, 0, 0, 24, 28, 0, 0, 0, 52], [2, 37, 1, 0, 0, 0, 0, 21, 33, 16, 53, 7, 3, 6, 0, 7, 0], [0, 18, 0, 0, 11, 3, 45, 0, 0, 0, 0, 23, 4, 0, 29, 10, 26, 0, 18, 0], [0, 0, 26, 0, 9, 0, 23, 0, 0, 0, 0, 0, 0, 22, 4, 0, 2, 16, 22, 0, 10, 54], [0, 0, 72, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 23, 0, 1, 0, 26, 0, 35, 13], [0, 0, 39, 0, 0, 0, 11, 10, 0, 0, 0, 0, 0, 26, 26, 0, 23, 0, 14, 0, 24, 19], [0, 0, 39, 0, 0, 0, 68, 0, 0, 0, 0, 0, 2, 0, 0, 14, 36, 0, 0, 18, 17], [0, 43, 0, 0, 0, 39, 0, 0, 0, 0, 0, 24, 0, 0, 22, 0, 6, 0, 15, 47], [0, 0, 3, 5, 31, 0, 0, 0, 22, 56, 0, 1, 23, 16, 42], [0, 13, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 40, 7, 0, 49, 6, 22, 0, 24, 0], [0, 18, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 35, 7, 0, 43, 11, 13, 32, 28], [35, 57, 45, 0, 16, 53], [0, 28, 0, 0, 0, 32, 8, 0, 0, 0, 0, 0, 44, 33, 0, 7, 8, 15, 0, 24, 21], [0, 20, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 12, 2, 6, 57, 15, 3, 0, 81, 11], [0, 0, 65, 0, 0, 0, 8, 0, 0, 0, 0, 0, 2, 45, 35, 0, 18, 0, 8, 0, 44, 16], [0, 0, 30, 0, 23, 16, 31, 0, 0, 0, 0, 0, 0, 51, 3, 19, 30, 17, 5, 0, 0, 24], [0, 28, 0, 0, 0, 35, 0, 0, 0, 0, 0, 18, 25, 12, 0, 36, 0, 5, 0, 43, 47], [27, 0, 0, 0, 0, 30, 25, 13, 16, 34, 41, 0, 38, 32], [0, 25, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 9, 84, 0, 19, 0, 30, 0, 10, 84], [0, 0, 113, 0, 0, 0, 26, 0, 0, 0, 0, 0, 22, 8, 15, 42, 11, 14, 29, 0, 5, 7], [0, 12, 0, 0, 0, 5, 0, 0, 13, 0, 0, 116, 15, 0, 7, 29, 59, 0, 0, 46], [0, 0, 54, 0, 0, 9, 12, 49, 0, 0, 0, 0, 7, 77, 8, 52, 10, 19, 2, 0, 14, 10], [0, 0, 16, 2, 1, 0, 31, 6, 0, 0, 0, 0, 17, 34, 61, 17, 34, 36, 7, 0, 50, 19], [0, 23, 0, 0, 29, 15, 41, 0, 0, 22, 0, 21, 35, 14, 63, 59, 11, 14, 0, 0], [0, 0, 0, 14, 20, 39, 0, 0, 0, 0, 0, 30, 22, 12, 9, 27, 88, 0, 56, 30], [0, 46, 1, 0, 28, 21, 30, 0, 0, 0, 0, 16, 52, 0, 6, 49, 35, 47, 0, 25, 40], [0, 49, 7, 14, 18, 70, 15, 0, 0, 4, 0, 22, 37, 32, 4, 47, 38, 15, 0, 23, 62], [0, 0, 34, 0, 0, 0, 29, 0, 0, 0, 7, 0, 0, 108, 0, 0, 61, 65, 102, 0, 35, 24], [0, 58, 0, 1, 9, 93, 0, 0, 0, 0, 40, 107, 21, 15, 71, 69, 107, 0, 100, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

