created: 20230222222328000
creator: Drevarr
modified: 20230705163519999
modifier: drevarr
tags: ChartData
title: 202302222223_kills_ChartData
type: text/vnd.tiddlywiki


const names = ["Spreadflamesoflight", "Sumatra Satyricon", "Forever Broke", "Smol Gluvs", "Mustache Bloodclaw", "Veron Blackburn", "Arcanophage Farra", "Dark Sidiuz", "Kmpek", "Skye Nightroad", "Panther B Me", "Ace Hammers", "Jeckyll Mbs", "Rina Of Theros", "Sassy Daddy Demon", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Elonith Tenebris", "\u00c1rk\u00e1ntor", "Sofya De Meme", "Xyntharos", "Smol Daddy Tika", "One Whole Keg", "Lord Erin The Wise", "My Birthday Girl", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Dragonhunter", "Soulbeast", "Reaper", "Scourge", "Herald", "Herald", "Spellbreaker", "Scourge", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Berserker", "Scourge", "Vindicator", "Berserker", "Berserker", "Scourge", "Scourge", "Catalyst", "Vindicator", "Berserker", "Berserker", "Weaver", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Enemies Killed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 5], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 2, 1, 0], [0, 0, 4, 0, 1, 0, 0, 0, 0, 1, 0, 0], [6, 0, 0, 0, 0, 0, 0, 0], [6], [0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 6, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 2, 0, 2, 0], [0, 0, 9], [0, 0, 6, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 5, 1, 3, 0, 0, 0, 0, 0, 0, 3, 0], [0, 0, 5, 1, 0, 1, 1, 0, 5, 0, 0, 0], [0, 0, 9, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3], [0, 0, 8, 0, 1, 0, 2, 0, 1, 2, 0, 4, 0], [2, 1, 12, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 10, 0, 1, 0, 0, 2, 0, 4, 0, 2], [0, 1, 14, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1], [0, 0, 12, 1, 2, 0, 1, 0, 1, 2, 1, 2, 0], [2, 2, 2, 1, 1, 0, 5, 3, 4, 2], [0, 0, 15, 0, 0, 0, 2, 1, 0, 5, 0, 4, 0], [0, 0, 18, 2, 1, 0, 0, 0, 0, 3, 0, 3, 0], [0, 0, 12, 1, 0, 1, 1, 0, 5, 1, 7, 0], [0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0], [0, 0, 31, 0, 0, 2, 0, 2, 1, 4, 2, 1, 0], [2, 0, 37, 1, 1, 0, 1, 0, 0, 3, 0, 3, 2], [0, 2, 34, 2, 3, 2, 2, 0, 0, 2, 0, 1, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

