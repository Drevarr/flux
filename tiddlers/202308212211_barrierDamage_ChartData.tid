created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Bella Sassy", "Daphne Agla\u00e9", "Tootsie Pop Rocks", "Darks Na", "Arriasa", "Melody Phoenixstorm", "Mister Jekyll", "Cat Wigglebooty", "Hayuf Salvaje", "Xanvias Tsolice", "Drevarr Moonwillow", "Rozaalyna", "Be\u00eb", "Arcanophage Farra", "Latedoctor", "Rina Of Theros", "Roderik Manloy", "Blancooo Padreee", "Newtype Khan", "Keypek The Drunk", "Mort\u00e4rion", "Lucky Luprac\u00e1n", "Daphne Agla\u00e9"];
const professions = ["Firebrand", "Firebrand", "Scourge", "Scrapper", "Dragonhunter", "Druid", "Scrapper", "Scourge", "Scrapper", "Reaper", "Weaver", "Scrapper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Renegade", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[959, 2138, 0, 184, 2735, 269, 0, 1972, 3799, 2188, 2177, 5369, 261, 521, 1277, 0, 1153, 573, 0, 919, 2341, 0, 269, 632, 0, 807, 0, 1695, 0, 1110, 1138, 2110], [1375, 2987, 0, 0, 9196, 421, 0, 7041, 1649, 1720, 0, 116, 0, 4273, 445, 1999, 0, 1503, 0, 0, 0, 304, 0, 3047, 0, 0, 0, 0, 0, 3, 0, 0, 3552], [5004, 5510, 1399, 5253, 8396, 3043, 5447, 5896], [1136, 2286, 3060, 436, 3851, 0, 90, 2142, 38, 4375, 519, 0, 3766, 551, 4407, 0, 1236, 265, 236, 648, 337, 0, 197, 3, 0, 220, 0, 1804, 95, 0, 4494, 3896], [17, 0, 0, 8079, 2716, 0, 421, 300, 0, 3011, 3011, 0, 0, 0, 6412, 0, 0, 3695, 0, 3149, 3045, 0, 0, 0, 0, 0, 0, 0, 0, 3092, 0, 6236], [2348, 1063, 248, 421, 6122, 0, 132, 12254, 6704, 4533, 1339, 0, 261, 257, 813, 0, 1225, 573, 0, 880, 1249, 212, 269, 0, 535, 0, 859, 0, 261, 859, 4720], [16342, 2798, 331, 19414, 4023, 7789, 6672], [3510, 1904, 12193, 8728, 2967, 0, 6089, 23880], [3219, 319, 1623, 6549, 2855, 511, 1567, 3632, 1660, 1403, 2703, 2422, 409, 1744, 0, 2783, 0, 0, 2257, 7049, 3088, 416, 0, 204, 0, 5597, 519, 3788, 924, 3289], [59420, 0, 5686], [1795, 964, 269, 807, 1573, 2324, 0, 724, 9925, 7361, 2406, 1531, 3161, 678, 5292, 266, 918, 304, 0, 2716, 1965, 269, 269, 55, 0, 540, 0, 7765, 261, 5627, 1934, 3761], [2425, 4689, 137, 621, 4950, 3388, 0, 2070, 3731, 2338, 5001, 3116, 115, 553, 2030, 1380, 449, 3824, 339, 0, 4537, 1668, 127, 1405, 668, 951, 690, 0, 6042, 674, 1622, 737, 5477], [9324, 13699, 1450, 0, 16068, 2294, 5757, 17445], [6027, 17276, 2427, 0, 7297, 36085], [1493, 6115, 423, 0, 2119, 10411, 4751, 2472, 6413, 0, 1706, 255, 6666, 2197, 1277, 0, 2816, 269, 3092, 3436, 1555, 0, 0, 0, 2212, 261, 3401, 0, 7912], [12609, 3612, 22714, 1497, 433, 12032, 19505], [11733, 9657, 10311, 9752, 3757, 4508, 0, 6487, 16356], [15443, 12718, 11723, 13926, 21250], [2479, 7635, 0, 2731, 4563, 1672, 283, 5688, 9184, 9762, 3571, 0, 4826, 0, 5922, 5488, 1283, 0, 5384, 3390, 2093, 4435, 0, 0, 0, 0, 552, 0, 4560, 246, 8801], [4545, 3515, 3230, 2090, 9998, 3210, 0, 6055, 10668, 12800, 8102, 9845, 0, 3264, 261, 4478, 269, 3587, 1746, 0, 3898, 16073, 35, 6363, 2420, 0, 3826, 0, 9009, 0, 3272, 2307, 6078], [4517, 11235, 4836, 0, 36044, 33244, 617, 17690, 14669, 0, 29968, 0, 31470, 8987, 37388, 3454, 22309], [31323, 7326, 1228, 7758, 14121, 1352, 290, 9098, 23869, 22771, 22133, 16026, 11691, 14681, 21597, 309, 11779, 589, 0, 23471, 3776, 1551, 14730, 3356, 891, 20572], [1532, 6587, 3200, 0, 17819, 22617, 13644, 20163, 17541, 0, 12269, 13354, 27041, 1622, 14543, 4677, 2069, 15426, 36569, 7329, 8472, 285, 12849, 0, 31126, 3644, 13059, 12188], [56264, 71399, 101227, 0, 32662, 16176, 48521, 2374, 52074, 13920, 0, 15677, 62637, 4483, 17024, 14270, 2715, 36956, 271, 66072, 2952, 39486, 48270, 1773]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

