created: 20230503220838000
creator: Drevarr
modified: 20230705163528062
modifier: drevarr
tags: ChartData
title: 202305032208_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Zaylen Harker", "Drevarr Moonwillow", "Xkaet", "Arriasa", "Tuandha Lan", "Sub Train", "Hauzzy", "Xanvias Einzbern", "Black Raspberry Pie", "Blancooo Padreee", "Kary\u00edna", "Slautorn", "Lord Erin The Wise", "Kmpek", "Tootsie Pop Rocks", "Belvyn Brightblade", "Demon Dalham", "Tegan Parker", "Kosa\u00efr", "Inedible Plant", "Ryvalia Fazebringer", "Skye Nightroad", "Venomina The Fierce", "Farra The Bloodless", "Elonith Requiem", "Husky Guard", "Mannse Lee", "Primal Clone", "Lucas Ryn", "Zadie Miststep", "Smol Gluvs", "Eibh\u00ebar", "Johosh The Great", "Solus Nex", "Mistwalker Caelon", "Newtype Khan", "Allie Mistwalker", "Mac Adaymia", "\u00c1rkantor"];
const professions = ["Spellbreaker", "Firebrand", "Scrapper", "Tempest", "Druid", "Renegade", "Firebrand", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Vindicator", "Weaver", "Weaver", "Vindicator", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Catalyst", "Vindicator", "Chronomancer", "Scrapper", "Spellbreaker", "Vindicator", "Scourge", "Dragonhunter", "Scrapper", "Chronomancer", "Firebrand", "Tempest", "Scourge", "Chronomancer", "Willbender", "Scourge", "Vindicator", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26, 2, 0, 0, 0, 1, 0, 2, 7, 1, 0, 15, 9], [17, 3, 0, 0, 0, 1, 1, 8, 0, 16, 18], [28, 3, 0, 0, 0, 2, 0, 0, 6, 0, 0, 11, 15], [3, 0, 24, 45], [26, 4, 2, 0, 0, 2, 0, 2, 10, 0, 16, 11], [0, 40, 34], [31, 8, 1, 0, 2, 2, 1, 0, 9, 0, 0, 15, 10], [21, 7, 1, 0, 0, 3, 0, 1, 6, 0, 0, 24, 16], [37, 12, 0, 0, 1, 0, 0, 8, 0, 0, 18, 5], [24, 5, 1, 0, 1, 2, 0, 0, 11, 2, 23, 17], [18, 5, 2, 2, 6, 0, 1, 7, 2, 0, 25, 19], [28, 4, 0, 0, 1, 6, 0, 2, 15, 0, 0, 14, 19], [25, 14, 0, 0, 0, 4, 2, 0, 15, 0, 0, 17, 12], [27, 10, 0, 0, 1, 4, 0, 0, 13, 2, 0, 22, 19], [9, 1, 4, 53, 40], [36, 7, 2, 1, 1, 2, 3, 14, 0, 0, 25, 22], [53, 25, 2, 2, 2, 10, 2, 1, 17], [41, 9, 2, 2, 3, 0, 0, 14, 0, 23, 21], [1, 36, 0, 0, 36, 44], [37, 11, 0, 1, 1, 0, 0, 11, 0, 0, 37, 25], [47, 6, 0, 0, 2, 3, 0, 1, 17, 0, 0, 38, 11], [51, 14, 0, 0, 3, 2, 1, 2, 16, 0, 0, 19, 25], [39, 10, 1, 0, 1, 6, 2, 1, 22, 0, 25, 27], [53, 11, 0, 1, 4, 1, 1, 16, 1, 29, 25], [27, 9, 2, 0, 4, 0, 0, 21, 3, 0, 37, 39], [13, 3, 2, 9, 1, 0, 41, 2, 0, 37, 35], [39, 9, 2, 1, 2, 5, 2, 1, 13, 2, 1, 42, 33], [60, 23, 3, 6, 11, 3, 3, 44], [47, 10, 1, 1, 3, 4, 1, 0, 18, 0, 0, 47, 30], [51, 9, 2, 2, 5, 10, 2, 0, 23, 0, 1, 35, 32], [74, 16, 0, 3, 1, 3, 0, 1, 27, 0, 12, 37], [50, 11, 2, 1, 4, 2, 3, 21, 0, 2, 55, 48], [64, 23, 3, 1, 3, 9, 2, 1, 33, 0, 2, 36, 41], [99, 45, 1, 3, 3, 13, 1, 2, 48, 0, 63, 34], [82, 35, 2, 1, 5, 8, 5, 3, 53, 1, 6, 51, 63], [88, 47, 0, 4, 11, 1, 1, 60, 0, 0, 64, 57], [89, 36, 4, 0, 5, 13, 3, 0, 62, 2, 2, 72, 69], [111, 64, 3, 2, 5, 18, 3, 2, 10, 1, 82, 70], [118, 64, 2, 1, 5, 13, 5, 2, 94, 4, 3, 93, 43], [179, 75, 3, 2, 4, 25, 1, 2, 108, 0, 3, 104, 104]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

