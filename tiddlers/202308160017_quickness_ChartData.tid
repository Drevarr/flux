created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Eloraaaaaaaaa", "Absern", "Absern", "N\u00e8yp\u00e4", "Gamora Titus", "Bella Sassy", "Alarics Clone", "Chocolate Teapot"];
const professions = ["Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 24.0167, 13.7808, 23.635, 0.0, 27.5229, 65.4816, 30.294, 32.4904], [50.5688, 56.8912, 40.8397, 7.9698, 0.0, 21.016, 0.0, 0.0, 107.5419], [50.652, 34.5723, 13.3308, 0.0, 0.0, 0.0, 2.2638, 50.193, 61.9551, 52.9032, 38.8227, 0.0, 15.4862, 0.0, 4.4778, 191.4528, 0.0, 0.0, 0.0], [20.0109, 10.8019, 23.7, 213.4982, 83.2339, 73.3704, 32.0153, 22.168, 24.2141, 32.9268, 54.315, 89.2882, 51.3936, 19.2141], [14.9939, 33.847, 25.9714, 32.634, 20.5122, 36.6988, 5.9319, 29.4882, 17.2684, 25.3968, 11.8128, 13.4277, 16.0816, 10.1382, 14.6656, 18.3163, 14.8905, 16.7035, 34.4672, 21.6862, 28.3432, 6.0007, 13.1752, 16.7111, 46.8646, 0.0, 50.7591, 24.4667, 77.9912, 10.1809, 60.7551, 7.3743, 26.9208, 37.2691, 78.6457, 13.4002, 48.8314, 0.0, 49.8797, 59.032, 28.7712], [10.4288, 219.1699, 27.1376, 103.883, 7.5891, 31.9048, 22.8616, 6.7872, 11.3045, 2.634, 29.7175, 19.2348, 24.2746, 11.4042, 9.8049, 32.7067, 40.3674, 6.4395, 20.7715, 18.1533, 0.0, 0.0, 6.4566, 28.5818, 6.4887, 43.1325, 38.9322, 13.3747, 6.4935, 14.456, 12.9649, 32.4513, 245.1717], [10.1789, 90.0227, 52.175, 60.7838, 36.861, 53.7214, 23.7348, 40.7703, 29.3452, 29.6429, 93.7555, 21.8238, 54.7575, 36.7813, 126.5096, 43.0141, 120.2754, 29.935, 52.7256, 83.1411, 137.9086, 50.7195, 87.7795, 0.0, 88.7768, 35.5094, 63.7362, 11.868], [16.2545, 18.5874, 1.0738, 13.6764, 26.7413, 328.4848, 40.46, 142.9949, 38.7957, 9.5912, 38.5177, 25.228, 42.335, 29.8913, 32.186, 52.0128, 28.1358, 18.3111, 0.0, 46.0853, 12.6255, 29.8637, 18.8244, 0.0, 9.9195, 20.4358, 30.0384, 62.5388, 130.3228, 75.3222, 34.9483, 0.0, 44.7323, 0.0, 8.6809, 406.5342], [37.4738, 63.724, 50.215, 56.5348, 11.172, 16.7613, 13.9975, 0.0, 15.7318, 71.4971, 61.556, 78.6195, 0.0, 29.8669, 0.0, 26.8159, 53.3495, 50.2197, 40.3757, 65.416, 45.3024, 87.9949, 33.6271, 66.7371, 0.0, 50.7009, 143.3229, 0.0, 67.0908, 21.0331, 86.5883, 0.0, 147.294, 41.2505, 29.196, 10.6182, 59.09, 0.0, 18.2491, 45.0912, 60.5302, 102.3622]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

