created: 20230322220917000
creator: Drevarr
modified: 20230705163522908
modifier: drevarr
tags: ChartData
title: 202303222209_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Elonith Primal", "Grasszanine", "Zadie Miststep", "\u00c1rkantor", "Charred Fishbringer", "Newtype Khan", "Drevarr Moonwillow", "Sizzln Sisigbringer"];
const professions = ["Vindicator", "Tempest", "Spellbreaker", "Tempest", "Vindicator", "Scrapper", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[141.9206, 33.9793, 15.87, 10.925, 40.5504, 34.007, 19.6992, 29.9645, 19.6742, 0.0, 24.4147, 24.9018, 265.93, 39.7146, 30.7469, 21.564, 15.8158, 20.8946, 24.8414, 40.1501, 29.0822, 17.7171, 12.017, 7.7429, 8.334], [206.5651, 23.6389, 27.209, 0.0, 41.7648, 45.2045, 30.4416, 18.5808, 33.6966, 0.0, 61.3747, 26.8422, 541.604, 30.555, 0.0, 0.0, 0.0, 21.5032, 0.0, 46.7367, 30.6029, 0.0, 0.0, 0.0, 0.0, 0.0], [127.8029, 16.5554, 0.0, 0.0, 105.072, 21.1507, 36.2592, 0.0, 32.0164, 65.8099, 49.7154, 193.256, 62.8581, 48.6173, 0.972, 103.411, 39.6157, 52.4717, 118.3482, 103.0867, 0.0, 17.1639, 56.6352, 0.0, 7.6638], [288.2995, 36.9918, 55.867, 0.0, 90.8688, 85.4784, 46.9152, 61.6694, 75.9779, 0.0, 81.9878, 63.8568, 585.452, 62.928, 23.8925, 0.0, 0.0, 25.5024, 19.3931, 0.0, 31.4899, 14.4845, 11.5752, 0.0, 18.1154, 0.0], [419.5699, 114.2051, 63.871, 12.926, 142.296, 61.609, 76.0896, 100.1482, 91.4361, 130.8595, 85.4952, 842.856, 96.9091, 139.9277, 54.864, 37.9579, 90.9682, 83.9288, 153.8737, 71.28, 44.6143, 35.0127, 41.6966, 15.9457, 29.242], [802.9786, 75.2864, 81.696, 0.0, 117.1104, 74.9722, 73.152, 71.5949, 76.0695, 100.2778, 77.9688, 1214.346, 47.6155, 62.2771, 32.436, 39.3136, 59.0323, 73.0324, 271.6614, 202.6886, 8.7335, 67.0211, 88.3454, 0.0, 27.7267], [570.1594, 128.4808, 73.048, 0.0, 227.4096, 192.7526, 174.672, 130.9594, 82.0878, 85.1981, 105.0462, 1046.262, 64.8158, 46.7568, 107.496, 81.8598, 62.9156, 102.6734, 231.0208, 137.7446, 102.3557, 108.0201, 123.9682, 0.0, 66.1769], [1028.3674, 113.9609, 65.205, 74.543, 236.1216, 158.976, 103.104, 85.2365, 101.1205, 55.0493, 133.943, 125.8908, 1832.278, 326.5963, 103.0608, 80.82, 61.1081, 89.78, 133.5792, 230.3902, 167.207, 59.6524, 88.7355, 70.6435, 0.0, 21.3305], [996.4166, 201.7045, 221.375, 44.022, 338.8704, 251.0438, 236.6784, 168.8736, 168.4527, 61.8259, 291.3293, 225.7332, 2678.788, 164.312, 155.0563, 190.62, 187.0783, 178.198, 92.0688, 52.8328]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

