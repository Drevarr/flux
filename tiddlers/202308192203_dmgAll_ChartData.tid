created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Vini Boy", "Sylia Raskae", "Jimbo The Pleb", "Melody Phoenixstorm", "Rahani Sunray", "Ez Mode Mathus", "High Sorcer Baradun", "Bee Nemesis", "Blancooo Padreee", "Faz Zypher", "Claw Ironstrick", "Aira Draugr", "Newtype Khan", "Nadumi", "Sub Train", "Mort\u00e4rion", "Lillith Bella", "Stratager", "Bonewings", "Irish Mini Rev", "Minnie Darley", "Gwyn Cassel", "Gwyn Cassel", "Ax Axun", "K\u00e2 \u00d4tik R\u00e6j", "Morv\u00e4rth", "Wergrh", "Glorious Gluvs", "Rina Of Theros", "Be\u00eb", "Lord Erin The Wise", "Nose Llama", "Xanvias Tsolice"];
const professions = ["Catalyst", "Berserker", "Berserker", "Scrapper", "Chronomancer", "Scourge", "Tempest", "Spellbreaker", "Spellbreaker", "Soulbeast", "Mechanist", "Herald", "Spellbreaker", "Daredevil", "Firebrand", "Scrapper", "Dragonhunter", "Daredevil", "Scourge", "Herald", "Dragonhunter", "Chronomancer", "Virtuoso", "Vindicator", "Berserker", "Scourge", "Renegade", "Berserker", "Scourge", "Scourge", "Weaver", "Weaver", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1072.0613, 211.3494], [244.8, 1232.1307], [488.0399, 2.7108, 337.4205, 44.0556, 540.2238], [869.1569, 750.6379, 910.5828], [4.0764, 95.7, 940.0, 723.791, 878.2827, 269.5946], [991.8627, 1065.5345, 1123.4294], [263.0882, 391.3589, 48.5181, 7.7641, 9.1481, 17.7545, 6.3822, 43.9333, 687.8732, 811.4552, 102.4435, 458.7668, 264.1622], [49.6506, 84.6308, 60.5185, 221.7834, 49.8217, 81.2, 677.3521, 664.4254, 928.5548], [297.1373, 118.6897, 443.408, 0.0, 113.1692, 32.037, 192.1877, 93.3758, 139.5704, 462.4403, 0.0, 616.1484, 455.2162], [198.5565, 1711.4099, 850.5946], [1763.2546], [1180.8333, 663.1034, 885.8558, 95.6024, 361.7487, 158.2593, 254.6859], [417.5294, 572.7931, 418.5706, 146.6145, 76.2718, 52.1661, 33.8535, 78.2333, 640.6972, 688.0448, 0.0, 498.5689, 514.0676], [570.316, 357.8313, 536.4308, 618.8333, 597.6534, 260.6752, 102.0, 332.5845, 155.2388], [242.6078, 759.8793, 351.8865, 39.0, 38.8513, 57.0926, 118.9783, 140.1656, 45.6333, 880.7113, 706.5373, 5.3478, 706.6537, 564.4595], [795.0241, 599.6308, 162.3889, 1942.1155], [409.7393, 229.8313, 93.8308, 24.7407, 393.0144, 84.6178, 80.1333, 959.6761, 1147.7239, 54.0174, 484.9541, 1202.5811], [1085.8221, 96.6386, 0.0, 135.0926, 345.148, 14.1975, 147.0141, 1394.194, 1101.1391, 623.1484, 271.8108], [793.0215, 195.9759, 315.1846, 166.8889, 394.3069, 278.9363, 685.4859, 606.6866, 69.2261, 1194.9859, 1422.7703], [297.4513, 44.9444, 489.7076, 216.5478, 267.4333, 474.7324, 2460.1119, 114.887, 1328.3816, 1669.473], [647.4233, 65.4819, 485.5897, 95.9074, 540.0722, 160.9427, 34.9333, 518.0423, 1945.2836, 0.0, 857.1449, 1167.9324], [721.4118, 529.431, 809.2515, 849.0361, 95.1043, 2008.7067, 2064.2432], [620.3333, 335.7963, 1369.1516, 812.5478, 377.9, 2674.5915, 1747.3881], [645.4706, 924.0172, 1107.7607, 0.0, 332.8, 289.537, 581.657, 184.8408, 463.0775, 801.3657, 60.6957, 1492.0318, 288.5946], [1225.049, 525.3448, 744.9908, 98.6867, 204.7436, 87.1852, 1034.7148, 114.9873, 120.0333, 4472.7746, 588.0224], [198.6897, 702.7454, 19.4217, 85.8923, 0.0, 964.491, 300.465, 241.2667, 2154.6408, 2202.1418, 139.4, 1433.6113, 1318.4595], [1981.5951, 389.1897, 54.7963, 379.5018, 244.535, 683.7676, 1264.6343, 20.9478, 2097.9611, 775.7838], [757.7255, 1185.9828, 650.5767, 358.747, 263.8308, 220.6481, 376.0469, 167.8662, 47.3333, 2463.2887, 2877.7836, 57.1304, 1274.3569, 2294.7703], [1387.1667, 1426.0, 1136.8129, 512.5542, 516.2667, 185.0926, 686.4007, 217.9873, 221.5333, 1060.5915, 698.3209, 187.2696, 1796.7314, 2214.973], [1272.8039, 1031.7586, 1382.2055, 299.4096, 547.5641, 157.1111, 931.3538, 463.7898, 3576.0915, 2365.709, 50.8696, 2621.8127, 1020.1622], [1380.5123, 153.6386, 496.9179, 418.9259, 865.1227, 469.4968, 22.6, 5267.6056, 5415.0597, 0.0, 2672.3004, 3831.5676], [2664.0294, 336.569, 3861.5399, 384.3012, 1501.0821, 287.0926, 1222.9783, 798.1401, 231.5, 4921.6408, 3866.0373, 2046.9826, 3269.9293], [2611.1569, 2808.5172, 1899.9294, 571.7831, 1418.9744, 2573.9314, 1346.6688, 431.8333, 7874.2535, 7072.7164, 0.0, 6498.318, 8785.7568]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

