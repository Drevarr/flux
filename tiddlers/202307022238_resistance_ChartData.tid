created: 20230702223827000
creator: Drevarr
modified: 20230705163541142
modifier: drevarr
tags: ChartData
title: 202307022238_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Pixzil", "K\u00e2 Otik", "Aronorf Xideliesi", "Thats Not Nice", "Thalia Mavren", "Grasszanine", "Silvyrs", "St\u00e1rless", "Newtype Khan", "Bella Sassy", "Tika Fiery", "Zayde Sunsabre"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.6302, 0.0, 2.952, 17.7692, 0.0, 16.3468, 6.9508, 32.3474, 42.765, 28.7399, 21.0811, 0.0, 22.2768, 30.2652, 76.2489, 56.7101, 7.412, 7.7784, 8.096, 5.5728, 44.2638, 6.9498, 0.0, 28.5822, 9.0248, 60.588, 0.0, 7.218, 4.3834, 91.7235, 27.3861, 45.4896, 0.0, 7.0526, 12.4353, 22.3776, 14.4499, 25.3071, 97.5124, 7.115, 8.6447, 36.1476, 13.734], [37.3726, 10.6486, 49.7904, 0.0, 55.8974, 6.372, 8.6752, 18.3456, 14.3205, 35.1612, 37.2037, 0.0, 21.0672, 13.6235, 76.4946, 71.9838, 30.1495, 0.0, 7.4928, 29.6718, 21.1248, 40.1058, 5.0965, 28.9377, 49.7218, 90.5256, 6.9449, 12.3169, 20.4522, 109.8157, 27.1656, 0.0, 27.5465, 8.7411, 0.0, 37.3115, 34.551, 28.8422, 0.0, 29.4485, 74.7911, 83.4565, 30.9541, 7.7953, 39.1522, 9.7192, 39.0582], [43.5452, 38.5542, 81.0029, 0.0, 94.0975, 21.114, 44.6706, 0.0, 25.2252, 38.8137, 44.3247, 46.0863, 27.0144, 0.0, 0.0, 86.1613, 0.0, 17.7668, 0.0, 18.0136, 45.8784, 0.0, 0.0, 27.3735, 25.7123, 94.6836, 8.6645, 19.7004, 0.0, 63.4491, 46.5696, 0.0, 72.657, 6.7931, 0.0, 0.0, 21.7741, 17.6435, 4.5377, 0.0, 96.8549, 63.3489, 40.5164, 9.1558, 17.671, 0.0, 99.5234, 28.386], [9.6144, 9.553, 12.792, 0.0, 25.5387, 0.0, 3.2046, 0.0, 17.9267, 11.9628, 8.9552, 12.6851, 0.0, 15.876, 12.7374, 37.8378, 24.8472, 12.869, 0.0, 20.4019, 0.0, 0.0, 18.4298, 0.0, 36.5454, 0.0, 62.6076, 0.0, 19.0714, 0.0, 39.5505, 23.0643, 2.9695, 0.0, 0.0, 0.0, 0.0, 17.6246, 0.0, 0.0, 196.1177, 190.8276, 37.9697, 26.9663, 149.2603, 39.772, 542.6842], [49.6814, 85.22, 26.3648, 99.1478, 7.5219, 82.5871, 81.81, 27.1261, 49.3259, 10.6094, 38.0422, 62.8173, 0.0, 67.2336, 15.2018, 148.5666, 167.8648, 29.0785, 30.744, 54.0408, 60.9768, 55.6038, 6.864, 0.0, 110.0628, 47.9338, 124.2648, 0.0, 64.0347, 101.0641], [0.0, 74.6451, 131.3496, 79.6824, 46.8468, 0.0, 0.0, 260.3581, 84.348, 0.0, 52.0158, 0.0, 125.8043, 20.8152, 0.0, 143.6713, 0.0, 0.0, 0.0, 0.0, 0.0, 171.8724, 0.0, 0.0, 0.0, 284.5331, 0.0, 0.0, 0.0, 159.9886, 68.04], [33.2014, 37.8963, 43.9299, 67.4237, 0.0, 100.8599, 32.508, 31.7873, 0.0, 55.1029, 35.1026, 32.4539, 34.1617, 44.2512, 15.2572, 95.4135, 83.6035, 0.0, 7.5096, 43.597, 40.2408, 46.0026, 5.3797, 5.5315, 28.6533, 40.1009, 94.3272, 6.9983, 42.3477, 0.0, 118.6515, 36.0738, 70.193, 0.0, 0.0, 15.2473, 15.3036, 52.9603, 0.0, 7.4993, 70.2211, 105.4188, 29.3111, 0.0, 15.3382, 7.5865, 90.6977], [111.132, 23.814, 93.7817, 140.9573, 171.7513, 21.9089, 83.2608, 14.7588, 88.452, 189.5695, 0.0, 20.3448, 115.2061, 20.1528, 93.7818, 18.6186, 62.8524, 40.1861, 381.1104, 19.9284, 24.9981, 26.4089, 0.0, 26.5041, 23.9246, 0.0, 0.0, 0.0, 19.6711, 0.0, 0.0, 0.0, 0.0, 0.0, 25.1834, 0.0, 0.0, 0.0, 0.0, 20.2802, 0.0], [0.0, 104.1146, 108.3456, 23.3982, 13.1446, 0.0, 40.5981, 34.7067, 20.7942, 226.058, 20.6937, 16.006, 21.0671, 41.0422, 365.9981, 0.0, 0.0, 286.4371, 66.3748, 79.0447, 0.0, 23.4058, 14.5706, 415.2755], [61.8761, 92.3453, 83.089, 7.6838, 92.299, 45.252, 21.3318, 9.7367, 43.7913, 35.4301, 58.9029, 34.405, 0.0, 35.0784, 37.3815, 167.4036, 177.4382, 6.0265, 8.0304, 5.9101, 40.9536, 17.388, 0.0, 80.7696, 26.138, 172.6164, 8.5179, 52.5125, 125.2152, 51.156, 7.3042, 42.836, 0.0, 0.0, 7.6309, 40.5749, 41.2876, 49.5415, 0.0, 24.0135, 74.4962, 152.174, 29.6397, 25.5136, 19.8871, 31.7623, 75.0181], [31.0086, 69.0215, 39.8896, 114.6163, 7.9194, 159.1313, 46.17, 11.1029, 20.3603, 39.9987, 15.2592, 68.1704, 26.5871, 5.927, 98.28, 1.9106, 226.6992, 147.2562, 11.5416, 21.8592, 69.7896, 33.9822, 6.6495, 3.6975, 124.9227, 41.5483, 13.7808, 6.8383, 26.6204, 15.4287, 125.2152, 62.4897, 3.5123, 97.929, 0.0, 0.0, 0.0, 46.5216, 50.0998, 43.3877, 7.0502, 22.2889, 94.1031, 173.5506, 32.63, 11.8361, 27.9158, 25.0712, 68.0702, 48.366], [227.7521, 118.7443, 343.1798, 56.1568, 242.3659, 157.572, 82.9967, 76.8883, 126.9851, 160.9503, 276.9741, 20.5027, 310.716, 43.4179, 452.0061, 318.7019, 0.0, 15.6374, 24.948, 115.287, 196.2144, 121.0734, 84.8734, 20.0651, 526.6377, 565.8404, 273.0024, 21.1014, 189.621, 87.0061, 48.4704, 47.0106, 83.8042, 83.5871, 33.5225, 21.8595, 55.8518, 43.1494, 122.6739, 186.853, 16.1222, 135.4318, 358.722, 146.3174, 19.6211, 155.209, 1.107, 351.4303, 67.608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

