created: 20230515221048000
creator: Drevarr
modified: 20230705163530356
modifier: drevarr
tags: ChartData
title: 202305152210_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Cyclotechnist Farra", "Grasszanine", "Blancooo Padreee", "Rosetendril", "High Sorcer Baradun", "Mike The Archmagus", "Newtype Khan", "Tootsie Pop Rocks", "Jeckyll Mbs", "Artakama Nahid", "Tika Mi", "Domitia Gravestorm", "Xanvias Einzbern", "Fribble Bibble", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Spellbreaker", "Berserker", "Tempest", "Tempest", "Weaver", "Spellbreaker", "Scrapper", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.746, 0.931, 1.22, 1.708, 0, 0.917, 0, 0], [0.68, 0.794, 0, 0.496, 0, 0.788, 0.598, 0.448, 0.453, 0.812, 0, 0.601, 0.283, 0.305, 0, 0.21], [0, 0, 0.168, 0, 0.241, 0, 0.935, 0, 0.432, 0, 0, 0.342, 0.892, 0.236, 0.366, 0.973, 0.602, 0, 0.639, 0, 0.307], [0.08, 0.393, 0, 0.102, 0.14, 0.303, 0, 0, 0.127, 0, 0, 0, 0.719, 0.02, 0.473, 0.819, 0.521, 0.294, 0.218, 0, 0.409, 0.169, 0.191, 0.609, 0.125], [0.843, 0.561, 0, 0.596, 0.411, 0.826, 0.766, 0.537, 0.588, 0.704, 1.012, 0.826, 0.337, 0.335, 0.143, 0.33], [0, 0.387, 0.949, 0.951, 0.506, 0.205, 0.152, 0.598, 0.542, 0.85, 0, 0, 0, 0.744, 0, 0, 0, 0, 0, 0, 0.206, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0.064, 0.274, 0, 0, 0.247, 0.7, 0, 0, 1.073, 0, 0.71, 0.563, 0.448, 0.378, 0.734, 2.467, 1.017, 0, 0.292, 0, 0.636], [0.264, 0.169, 0, 0, 0.151, 0.278, 0.926, 0, 0.081, 0.734, 1.116, 0, 1.188, 0, 0.944, 0.743, 0.269, 0.584, 0.511, 0, 0.412, 0, 0.191, 0, 0.868], [0.66, 0.337, 0, 0, 0.202, 0.277, 0.421, 0, 0, 0.452, 0.703, 0.935, 0.192, 0.991, 0, 0, 0.513, 0.795, 1.037, 1.191, 0.343, 0.128, 0.653, 1.015, 0.861], [0.529, 0.557, 0.356, 0.601, 0.358, 0.65, 0.511, 0.797, 0.361, 0.422, 0.561, 0, 0.59, 0.738, 0.468, 0.819, 0.469, 0.425, 0.527, 0, 0.566, 0.166, 0.373, 0, 0.107], [0.284, 0.475, 0.556, 0.498, 0.308, 0.658, 0, 0, 0.416, 0.852, 0.558, 0.65, 0.93, 0.368, 0, 0.651, 0.703, 0.743, 1.219, 0.559, 0.338, 0.539, 0.604, 0.501], [1.038, 0.373, 0, 0.927, 0.201, 0.401, 0.611, 0, 0, 0.272, 0.809, 0.051, 0, 1.321, 0, 0.989, 0.865, 0.782, 0.694, 0.932, 3.453, 1.032, 0, 1.024, 0, 0.796], [0.842, 0.52, 0, 0.694, 0.401, 0.597, 0.923, 0, 1.328, 0.389, 0.698, 0.881, 0, 1.369, 0, 0.79, 1.025, 0.968, 1.148, 1.173, 1.922, 1.028, 0, 0.994, 0, 0.752], [0.977, 0.914, 0.486, 0.651, 1.012, 1.367, 1.277, 0, 0.427, 1.134, 1.35, 1.066, 1.85, 1.304, 1.795, 1.697, 1.059], [0.262, 0.389, 0.677, 0, 0.856, 0.684, 1.412, 0.342, 1.354, 0.398, 0.63, 1.121, 1.449, 1.35, 1.271, 1.458, 0.299, 1.266, 1.318, 1.944, 0.897, 0.592, 1.085, 0.607, 1.02], [1.439, 1.104, 1.363, 1.322, 1.051, 1.154, 1.651, 0.645, 0.851, 2.176, 1.526, 0.972, 1.856, 1.327, 2.008, 2.606, 1.207, 1.54, 1.656, 3.149, 1.933, 1.014, 1.344, 0.304, 1.539]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

