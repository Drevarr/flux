created: 20230429215910000
creator: Drevarr
modified: 20230705163527508
modifier: drevarr
tags: ChartData
title: 202304292159_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Rudjulin", "Husky Guard", "Belvyn Brightblade", "Zady Stardust", "Tika Fiery", "Jupi Jupi Jupi", "Johosh The Great", "Gabe Malhorn"];
const professions = ["Dragonhunter", "Willbender", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 34.8864, 7.2765, 52.5244, 20.1411, 36.2201, 35.7475, 40.8296, 347.6844], [14.0263, 0.0, 41.665, 23.9568, 184.4659, 33.2438, 0.0, 234.1912, 0.0, 14.9598, 120.7831, 11.9551, 0.0, 0.0, 27.7288, 39.3962], [0.0, 40.6262, 37.2973, 0.0, 24.9283, 47.334, 536.3354, 118.5811, 108.5953, 0.0, 50.1758, 24.5185, 0.0, 0.0, 34.224, 18.7832], [23.616, 0.0, 0.0, 5.9409, 0.0, 148.6646, 173.8156, 850.861, 350.7168, 0.0, 364.4131], [34.88, 93.4857, 38.2536, 0.0, 42.0845, 107.3548, 799.0303, 336.0941, 41.4462, 368.2296, 0.0, 131.4265, 105.6182, 0.0, 0.0, 73.2688, 184.8717], [54.8478, 192.5255, 0.0, 39.935, 131.3098, 177.5508, 1028.5664, 471.8112, 60.599, 281.6078, 0.0, 40.1027, 30.0245, 0.0, 0.0, 51.5936, 131.6437], [0.0, 45.4406, 63.8848, 1176.6541, 674.016, 45.6118, 453.5793, 113.5597, 0.0, 170.959, 83.655, 133.1071, 24.2147, 111.9456, 149.189], [29.021, 132.484, 24.1693, 0.0, 92.736, 101.8808, 2070.9757, 907.6368, 43.7604, 676.3212, 175.0597, 0.0, 390.8584, 135.2777, 0.0, 88.412, 350.9602], [97.713, 290.2486, 48.3097, 204.8899, 146.2138, 214.13, 1849.8098, 835.8941, 106.6075, 410.5575, 23.862, 266.2741, 122.8968, 40.1128, 99.994, 103.8864, 388.4728]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

