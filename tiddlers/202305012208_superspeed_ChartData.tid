created: 20230501220820000
creator: Drevarr
modified: 20230705163527983
modifier: drevarr
tags: ChartData
title: 202305012208_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Lord Erin The Wise", "Hauzzy", "Flanneryflame", "Xkaet", "Miphest\u00f6", "Blancooo Padreee", "Tyzzki", "Newtype Khan", "Venomina The Siren", "Elonith Primal", "Mac Aaroni", "Tika Sumiko", "Skye Nightroad", "Tootsie Pop Rocks", "Zadie Miststep", "Joint Lee", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Berserker", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Scrapper", "Tempest", "Scrapper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.104, 0.646, 0.569, 0.611, 0.542, 0, 0.528], [0.123, 0, 0, 0.73, 0.41, 0.278, 0.119, 0.513], [0.417, 0, 0, 0.199, 2.147, 0.211, 0.161, 0.544, 0, 0, 0, 0, 0, 0], [0.137, 0, 0.235, 1.191, 0.547, 0.274, 0.501], [0.708, 1.012, 1.148, 1.064, 0.616, 0.736], [0.497, 0.124, 0, 0.364, 0.547, 0.528, 0.526, 1.028], [0.089, 0, 0, 0.84, 1.106, 0.228, 0.325, 0.215, 0.771, 0, 0.741, 1.044, 0, 0.954], [0.417, 0.247, 0.189, 0.239, 0, 0.137, 0.275, 0.378, 0.344, 1.835, 0.544, 1.089, 0.834, 0.175], [0.27, 0, 0, 0, 0.913, 0.422, 0.607, 0.443, 0.388, 0, 0.339, 0], [0.134, 0.124, 0, 0, 0.891, 0.547, 0.517, 1.135, 0.857, 0.61, 0.679, 0, 0, 0.527], [0.789, 0.247, 0.283, 1.195, 0.725, 0.615, 0.58, 0.388], [0.542, 0, 0.189, 1.191, 0, 0.274, 0.53, 0.904, 0.633, 0, 0.543, 0, 0, 0.527], [0.607, 0.37, 0, 0, 0.3, 0.271, 0.446, 0.87, 0.901, 0.611, 0.747, 0.408, 0, 0.878], [1.181, 0.432, 0.519, 0, 1.578, 0.889, 1.04], [0.779, 0, 0, 0, 0.918, 0.682, 0.923, 1.353, 1.061, 0, 0.671, 0, 0.441], [0.802, 0.371, 0.377, 1.195, 1.087, 0.409, 0.734, 0.999, 0.972, 1.219, 1.085, 0.41, 0.834, 1.017], [1.616, 0.742, 0, 0, 1.379, 0.684, 1.414], [1.234, 0.405, 0.315, 0, 0.914, 0.718, 1.114, 1.364, 1.507, 2.183, 1.354, 0.678, 0, 0.876], [1.741, 0.641, 0.78, 0.604, 2.745, 1.435, 1.554, 1.927, 2.321, 2.433, 1.729, 0.816, 0.832, 2.208]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

