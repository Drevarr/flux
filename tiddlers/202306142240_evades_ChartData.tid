created: 20230614224052000
creator: Drevarr
modified: 20230705163535444
modifier: drevarr
tags: ChartData
title: 202306142240_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Requiem", "Johosh The Mighty", "Rina Of Theros", "Morton Saltbringer", "Tika Fiery", "Koralia Danai", "Johosh The Mighty", "Xanvias Einzbern", "Smol Gluvs", "Be\u00eb", "Artakama Nahid", "Permanent Dawn", "Sakis Ranger", "Mistwalker Cael", "Arriasa", "Solus Sanctus", "Zayde Sunsabre", "Venomina The Siren", "Ryvalia Fazebringer", "Shaca Booey", "Crusader Siolith", "Momomeko", "Black Raspberry Pie"];
const professions = ["Scourge", "Berserker", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Scourge", "Tempest", "Weaver", "Druid", "Vindicator", "Druid", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19, 6], [17, 8], [1, 1, 9, 18, 4], [7, 9, 9, 9], [0, 0, 1, 19, 4, 2, 8, 3, 0], [3, 0, 7, 11, 7, 5, 2, 9, 0], [29, 16], [0, 1, 3, 12, 15, 12, 3], [6, 6, 3, 27, 6], [3, 3, 5, 46], [3, 0, 11, 22, 0, 10, 4, 5, 4], [0, 2, 7, 24, 10, 14, 0, 2, 1], [2, 2, 1, 28, 11, 8, 9, 2], [9, 16, 13, 2, 6, 29, 0], [1, 0, 5, 28, 16, 10, 0, 20, 2], [2, 0, 8, 26, 14, 9, 10, 10, 4], [3, 5, 16, 48, 11, 1], [11, 3, 11, 33, 21, 2, 5, 4, 3], [4, 2, 2, 59, 14, 5, 5, 10, 9], [4, 4, 2, 39, 4, 28, 12, 11, 8], [3, 5, 8, 61, 5, 10, 14, 7, 1], [2, 2, 9, 46, 15, 18, 17, 33, 2], [4, 7, 26, 46, 8, 43, 28, 19, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

