created: 20230523000132000
creator: Drevarr
modified: 20230705163531222
modifier: drevarr
tags: ChartData
title: 202305230001_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Hrakkus", "Cyclotechnist Farra", "My Birthday Girl", "Miphest\u00f6", "Need Ragee", "Eruwon", "Tribal S", "Kaye X Kaye", "Scraparone", "Lord Erin The Wise", "Binkety Bonk", "Cat Wigglebooty", "M\u00e4raas", "Fribble Bibble", "Venomina The Fierce", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Catalyst", "Scrapper", "Scrapper", "Tempest", "Druid", "Weaver", "Druid", "Vindicator", "Scrapper", "Weaver", "Scrapper", "Scrapper", "Firebrand", "Scrapper", "Spellbreaker", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.363, 24.6003, 0.0, 0.0, 658.1956], [3.99, 19.7585, 99.9045, 120.4308, 226.8972, 28.2664, 3.9975, 3.9811, 48.5266, 13.6996, 27.9702, 319.8932], [0.0, 87.2934, 100.926, 106.3055, 19.9969, 23.9645, 11.8923, 339.0119, 0.0, 41.328, 311.3556], [44.289, 0.0, 11.4483, 269.1253, 17.7723, 12.6895, 44.2517, 332.2721, 0.4825, 39.9258, 319.6264], [164.3907, 348.4782, 615.9839], [0.0, 51.6525, 712.3969, 33.2897, 19.926, 473.3032], [794.9594, 1.8513, 77.4162, 708.6208], [96.5058, 174.5226, 431.3148, 26.066, 32.6155, 67.679, 550.6417, 25.4021, 20.8854, 443.1548], [123.123, 37.2082, 270.94, 299.259, 1273.4364], [90.2538, 7.912, 123.785, 147.987, 433.8358, 27.9763, 27.9825, 16.9963, 674.654, 8.3477, 27.9702, 621.3772], [82.9616, 57.3385, 86.3597, 1092.5216, 161.6958, 737.1684], [75.8499, 0.0, 160.7237, 290.1906, 502.5353, 31.1197, 88.9905, 59.921, 1069.6063, 0.0, 43.8372, 868.9676], [195.7494, 36.249, 285.8502, 280.4382, 786.9971, 57.3791, 68.142, 175.4245, 858.6505, 57.884, 55.9404, 795.8644], [155.0514, 0.0, 257.3189, 109.7712, 694.5575, 0.0, 94.8945, 151.4867, 1107.0122, 16.0146, 1142.7044], [316.2075, 12.9322, 248.6432, 418.5594, 766.6184, 144.9026, 1359.7547, 0.0, 965.2824], [151.0215, 5.547, 305.3482, 379.4364, 583.63, 59.1685, 52.931, 139.3902, 1327.4036, 34.1312, 33.1362, 1175.254], [165.7446, 0.0, 302.0389, 360.9522, 1156.5455, 151.0525, 158.178, 79.5203, 1904.3305, 49.5198, 1551.442]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

