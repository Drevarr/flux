created: 20230401223327000
creator: Drevarr
modified: 20230705163524057
modifier: drevarr
tags: ChartData
title: 202304012233_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Gabe Malhorn", "Astraea Lumena", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.5456, 68.247, 9.4525, 62.2043, 11.6409, 12.6518, 49.5128, 8.6982, 6.1546, 25.9978, 10.9098, 14.2819, 25.6247, 51.1358, 0.0, 18.5226, 16.2674, 114.3072, 28.2317, 0.0, 128.2272, 0.2166, 5.4405, 25.8754, 0.0, 0.0, 0.0, 4.4985, 0.5202], [66.7498, 395.9142, 82.8874, 239.1929, 2.3256, 57.7045, 7.4521, 35.5509, 14.657, 18.8202, 0.5551, 0.0, 12.0798, 93.0787, 0.0, 0.0, 0.6186, 85.344, 0.0, 48.9687, 0.0, 237.5091, 63.7673, 7.6518, 40.8218, 3.1086, 0.0, 27.1891, 0.5345, 5.8956], [232.7741, 499.7094, 167.2486, 301.5999, 0.6848, 72.722, 26.2548, 39.1419, 114.9751, 87.5913, 21.8005, 8.0028, 76.1904, 142.6961, 18.0274, 27.8865, 10.2216, 126.0672, 57.3371, 30.1036, 369.895, 35.5501, 21.7386, 20.449, 42.7679, 6.3855, 8.2906, 105.2926], [15.4493, 308.1293, 77.653, 210.7248, 42.2096, 134.1294, 135.2255, 17.3166, 8.6701, 56.0017, 9.4934, 10.8038, 147.3991, 134.3239, 229.0064, 25.6687, 106.0968, 244.6752, 0.0, 58.0727, 77.8818, 642.5222, 61.6325, 37.1592, 56.3774, 105.024, 8.217, 4.3901, 106.8515, 49.4479], [115.6109, 509.3427, 176.8536, 371.6051, 31.1243, 150.0727, 65.2392, 85.7052, 44.4908, 102.8227, 19.7142, 33.5194, 14.359, 132.2309, 40.014, 86.1512, 84.0085, 154.2912, 133.296, 121.2671, 838.9062, 120.666, 0.0, 113.9163, 71.7771, 31.1256, 64.2355, 18.2614, 44.0147], [210.3763, 653.9776, 254.9639, 231.0881, 58.5276, 133.5637, 87.0917, 72.8175, 87.0531, 144.511, 24.5183, 21.1459, 59.3243, 152.915, 234.9032, 55.5403, 41.5614, 291.5808, 29.7108, 60.8775, 98.2954, 590.0762, 99.2246, 11.8404, 43.2208, 52.6514, 50.9256, 91.9958, 86.9866, 104.1556], [304.7722, 674.4653, 406.56, 392.5763, 61.9643, 136.5981, 147.239, 82.0743, 46.0504, 44.7346, 6.9095, 21.5768, 114.0577, 182.2586, 190.8878, 52.2, 56.8305, 230.9664, 24.192, 105.5241, 123.5927, 811.1814, 168.2208, 50.4738, 79.1112, 79.6671, 45.1143, 54.1334, 207.2001, 74.9377]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

