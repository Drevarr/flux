created: 20230603215001000
creator: Drevarr
modified: 20230705163533606
modifier: drevarr
tags: ChartData
title: 202306032150_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Tacitus Tacitus", "Oo Dads Mad", "Smoulderling", "Rhaevynn", "Blackout Angel", "Mammary Mission", "Grasszanine", "Jo Hosh", "Newtype Khan", "Yngvar The Burdened", "Black Raspberry Pie", "Smol Gluvs", "Be\u00eb"];
const professions = ["Reaper", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Scourge", "Spellbreaker", "Reaper", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.4149, 0.2119, 0.1351, 0.0], [0.0, 0.09, 0.8596, 0.0, 0.8125], [0.2872, 0.5932, 0.3649, 0.0179], [0.0, 0.1927, 0.7358, 1.0294, 0.1809, 0.2458, 0.6486, 0.0357, 0.1026], [0.2385, 0.5283, 0.0, 0.6277, 0.4661, 0.2568, 0.5, 0.359], [0.1081, 0.3019, 0.0548, 0.422, 1.5094, 0.0, 0.8235, 0.0, 0.5, 0.0, 1.2821], [0.6842, 0.0, 0.7708, 0.1892, 0.3585, 0.0, 0.1743, 0.4528, 0.0, 0.4412, 0.6596, 0.8559, 0.0, 0.6964, 0.0], [0.0776, 0.0284, 0.2281, 0.0, 0.3958, 0.0, 0.3019, 0.0, 0.4312, 0.4717, 0.2941, 0.5638, 0.5847, 0.3649, 0.6071, 1.0256], [0.0129, 0.1232, 0.7193, 0.0, 0.8958, 0.0541, 0.434, 0.0274, 0.2844, 0.0, 0.0, 0.7766, 0.4492, 0.3514, 0.5536, 1.0769], [0.1622, 0.8302, 0.0, 0.5505, 0.9057, 0.2941, 1.1064, 0.6186, 0.8378, 0.125, 0.3333], [0.0137, 0.2661, 0.6792, 0.3226, 1.0957, 0.8729, 0.8378, 0.8036, 1.4872], [0.0431, 0.1517, 0.7719, 0.0, 1.3125, 0.1351, 0.7547, 0.0959, 0.4862, 0.0, 0.7353, 0.8191, 0.7712, 0.9054, 0.0357, 1.5385], [0.1379, 0.237, 1.0351, 0.0227, 1.4167, 0.2162, 0.7925, 0.0548, 0.5413, 0.0, 1.3235, 1.0532, 0.8475, 0.4189, 0.5893, 1.641]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

