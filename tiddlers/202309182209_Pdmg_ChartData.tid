created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Meowstress Of Death", "Scion K\u00e1i", "Insanityburn", "N\u00f6sh\u00e0k", "Aira Draugr", "Kittendoodlez", "Grasszanine", "Arcanophage Farra", "Katiana Lafay", "Raziel Umbra", "Necrotic Windrunner", "Verris The Wanderer", "Ryzen Grimsaw", "Black Raspberry Pie", "Oo Dads Mad", "Primal Clone", "Anita Strips", "Acinonyx Fauxhawk", "No Reserv\u00e9", "Mister Jekyll", "Dark Sidiuz", "Rina Of Theros", "Glorious Gluvs", "Eibh\u00ebar", "Be\u00eb", "Kurn The Drunk", "Lucky Luprac\u00e1n", "Lord Erin The Wise", "Ggclaudx", "Jimbo The Pleb", "Elonith Requiem", "Etch\u00e9ry", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Reaper", "Berserker", "Berserker", "Mesmer", "Herald", "Berserker", "Spellbreaker", "Spellbreaker", "Herald", "Chronomancer", "Reaper", "Untamed", "Vindicator", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Berserker", "Vindicator", "Reaper", "Reaper", "Reaper", "Berserker", "Chronomancer", "Reaper", "Reaper", "Scrapper", "Weaver", "Holosmith", "Berserker", "Reaper", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 213.0741, 514.1341, 129.9184, 386.807, 103.1702, 316.9756, 0.0, 168.8393, 679.5, 434.6211, 257.8974, 7.5823, 335.0946, 65.6829], [2505.4694, 2560.4561], [302.2769, 505.6786, 457.3, 404.5263, 1103.7692, 0.0, 388.8108, 1834.5854, 2236.6571], [0.0, 82.1364, 80.9084, 378.8049, 373.5455, 207.3947, 180.8659, 378.5606, 0.0, 561.8333, 352.5793, 520.8776, 301.0351, 354.4681, 251.0, 0.0, 309.8036, 61.5333, 10.4105, 667.4615, 65.5696, 245.473, 407.3659, 0.0], [662.622, 156.3826, 52.4511, 172.8636, 32.3969, 881.4512, 129.0, 0.7955, 559.5789, 600.5488, 998.1667, 0.0, 746.8796], [807.8571, 1206.1404, 1395.1489, 2916.3659, 702.1538, 59.7679, 0.0, 216.3895, 2233.2564], [159.8171, 160.5594, 22.6213, 104.2273, 52.145, 787.0732, 239.125, 597.4318, 268.7632, 456.8659, 406.4848, 0.0, 409.0, 550.3963, 39.2041, 531.6667, 0.0, 273.1463, 157.1538, 178.75, 272.9, 0.0, 150.2051, 61.443, 287.2973, 278.3171, 132.3714], [99.5854, 59.2551, 0.0, 132.0455, 11.2901, 655.5, 362.4643, 1039.3409, 189.4211, 454.0122, 1017.0303, 0.0, 29.0926, 378.3841, 66.5918, 582.5614, 24.4043, 518.5366, 442.3846, 314.0893, 297.1667, 58.9789, 639.2051, 85.9367, 176.1622, 657.7805, 0.0], [303.2317, 160.6203, 95.3574, 243.8409, 64.313, 899.7317, 919.5536, 788.8864, 161.6316, 986.7561, 1821.9848, 0.0, 342.3148, 354.9024], [0.0, 7.2672, 800.4878, 1194.875, 723.0, 347.1053, 713.3293, 690.3485, 1094.8056, 374.9756, 384.7143, 364.4035, 1084.2979, 1001.561, 210.4308, 129.6071, 167.5333, 14.4211, 0.0, 48.4937, 236.5135, 392.1463, 35.0857], [0.0, 44.0909, 86.5573, 575.6951, 49.7321, 796.7045, 304.1316, 1103.9878, 1520.2879, 0.0, 138.6574, 641.439, 500.6735, 777.193, 124.8511, 381.0, 446.6308, 537.6607, 394.5, 2.6526, 203.8974, 22.8608, 315.6216, 1765.122], [67.6851, 635.0682, 357.9313, 1214.6463, 1025.6786, 1421.8864, 1095.4737, 583.9024, 1298.7121, 0.0, 1311.5833, 487.5789, 326.4043, 768.0244, 234.7692], [781.2955, 415.5526, 1368.7683, 2777.9091, 0.0, 283.6111, 689.4451, 227.2653, 155.8246, 654.617, 1099.4878, 318.2923, 1248.8214, 321.3, 248.2316, 68.7436, 41.9241, 114.5, 675.2683, 0.0], [243.0116, 47.617, 119.0, 29.8779, 620.1585, 0.0, 972.4318, 437.2632, 1043.7195, 1283.8939, 35.6905, 240.6019, 864.2073, 642.551, 985.9474, 474.0426, 315.4146, 321.9846, 413.5179, 0.0, 91.4, 513.5641, 260.2405, 41.8108, 840.4634, 147.0], [100.8293, 104.4406, 133.2894, 89.0682, 0.0, 2265.061, 1195.6964, 1560.1364, 288.6316, 1986.7927, 1883.7273, 0.0, 1206.9815], [587.0976, 99.4986, 146.4809, 192.6364, 65.5344, 1209.878, 719.2857, 315.2955, 510.5526, 448.7927, 1578.0758, 22.6667, 1143.7222, 955.0976, 226.0204, 1050.5088, 520.234, 414.0732, 64.0154, 295.4286, 285.3, 50.9579, 692.6154, 124.9367, 38.9595, 484.0244, 0.0], [340.7195, 135.513, 17.9787, 125.7045, 101.229, 1009.6341, 944.3929, 166.2727, 489.9211, 1069.439, 1401.1364, 85.119, 92.8704, 1189.4634, 171.1837, 2350.3333, 784.5957, 970.9756, 454.2, 341.3571, 0.0, 1.6737, 241.641, 7.3418, 87.8108, 333.2195, 0.0], [171.1014, 55.2043, 11.9545, 3.7252, 1297.2073, 1133.6071, 2332.25, 299.2895, 1073.5488, 1837.2576, 0.0, 12.8333, 1696.0549, 497.0408, 327.9474, 664.1915, 792.7317, 0.0, 143.9464, 219.1667, 78.6, 1461.2308, 243.1139, 0.0, 1001.5854, 0.0], [170.4928, 62.4, 159.6818, 39.1145, 2201.8171, 613.1964, 1341.2045, 568.3947, 2375.9512, 2807.6515, 1366.9167, 410.1585, 667.1429, 177.386, 771.9362, 1419.8049, 471.5385, 867.1786, 1691.2667, 86.8105, 2347.1538], [19.0488, 251.1478, 101.9915, 31.75, 25.6107, 669.2045, 229.9211, 2677.2073, 2171.5303, 34.6905, 1398.5648, 2039.2988, 672.8776, 1991.4211, 512.9149, 1390.9756, 832.1231, 285.3929, 451.6, 110.5263, 564.359, 1168.0676, 1825.1463], [320.5478, 145.1404, 60.6136, 63.9695, 1950.6707, 756.9821, 1036.0, 164.6316, 875.3537, 2602.7424, 1.5238, 1745.0833, 1713.8293, 759.2041, 1624.2632, 1651.8511, 888.439, 413.9077, 482.0, 1305.8667, 463.1789, 1688.2564, 349.3418, 569.1081, 2015.6829], [302.3659, 210.3014, 143.5191, 32.7727, 14.0458, 2174.8415, 858.6964, 1112.2955, 474.1842, 1991.2805, 2226.9848, 165.5238, 2062.8333, 1538.378, 1136.3878, 2068.9649, 874.4255, 454.3171, 761.1846, 860.5, 1061.5333, 380.8, 1275.6154, 289.4304, 651.5405, 1734.7073], [108.0, 153.434, 135.7045, 21.9084, 1127.8537, 862.3929, 1196.25, 413.0526, 798.6463, 2435.5909, 0.0, 1964.1852, 1987.872, 493.551, 625.2105, 1763.0851, 1934.7073, 1228.7077, 1259.8571, 712.9333, 190.0105, 2746.0, 16.5063, 1234.0676, 2709.5854, 1079.9429], [211.0609, 291.6638, 276.4318, 83.2748, 2284.7683, 458.9286, 2764.3409, 1085.8684, 1514.2805, 2274.0758, 109.9048, 1181.1667, 2111.4024, 38.7959, 1205.7193, 1187.1489, 1199.1707, 325.0462, 1670.3571, 361.5, 320.5368, 2054.5641, 183.0633, 764.5, 1371.7805, 967.5429], [317.8783, 240.6979, 161.7273, 140.6336, 1118.3659, 2774.3571, 2634.8409, 410.0263, 2424.9756, 2934.0455, 0.8095, 1974.1204, 869.1159, 1021.8776, 2961.7193, 699.6809, 1615.7317, 484.5231, 1248.6071, 1070.9333, 179.7579, 1538.9487, 131.1899, 792.6216, 1049.3902], [181.2317, 239.5478, 88.6383, 207.6591, 93.1832, 2173.4512, 597.5357, 2044.0455, 535.7632, 2509.6829, 2068.0455, 122.9762, 2139.0093, 2283.4085, 609.4286, 2234.0877, 1188.3617, 1320.6585, 770.4154, 976.6786, 1409.1667, 341.3158, 1748.0513, 271.4051, 644.0405, 1240.4146, 710.4857], [1148.9268, 449.3536, 390.2851, 106.0, 245.2061, 1228.5488, 920.9643, 3217.5909, 726.5263, 1991.7073, 2546.2879, 492.4524, 2025.8611, 2074.6341, 779.0, 2673.7368, 0.0, 1031.2439, 331.9846, 65.6429, 1136.6, 198.2737, 1530.7179, 463.0127, 604.5, 1126.439, 828.6], [58.6809, 423.6364, 98.3435, 1630.4878, 2509.5, 2242.4545, 910.1053, 2442.5488, 2206.1667, 0.0, 2076.7407, 2041.4573, 1330.4082, 1885.7895, 2621.0851, 1581.0732, 731.8, 721.375, 1444.4667, 633.6211, 4695.0769, 970.4177, 781.5, 1869.878, 2115.7143], [3500.5854, 3361.9643, 3131.8409, 503.1842, 1858.2683, 3404.2273, 1129.119, 1636.5648, 2802.7378, 0.0, 2030.7895, 1882.3404, 1343.4146, 2214.0, 523.3036, 3206.9667, 1135.8421, 2223.5385], [408.2638, 383.583, 312.7727, 108.0305, 1820.378, 2832.6607, 3104.3636, 195.3684, 1979.0122, 3939.4697, 0.0, 4694.2593, 1170.4451, 1607.7143, 1194.6667, 542.3404, 1840.8293, 1139.5385, 1611.1607, 1539.5333, 700.1263, 983.4359, 0.0, 1830.9324, 1764.878, 201.5429], [509.3942, 470.5617, 680.8182, 274.3359, 2942.561, 2333.6964, 2249.5455, 601.5526, 2451.6585, 2992.6364, 78.5238, 3034.1019, 1640.872, 1067.898, 2447.9825, 1220.4468, 2015.4878, 304.3846, 1830.3036, 2022.2667, 700.4737, 1991.641, 505.481, 764.3784, 2194.9512, 893.8286], [467.8902, 219.0406, 139.3957, 48.4318, 0.0, 3035.378, 3932.6964, 2530.7273, 887.8947, 2269.3659, 2653.8788, 2709.3056, 3104.0915, 2406.4286, 3187.2456, 3452.0426, 1681.3902, 896.4154, 945.625, 628.0333, 230.3895, 1970.8974, 568.7848, 1453.0811, 2964.6098, 1789.2], [1123.561, 698.342, 148.7447, 475.2273, 147.4885, 4273.6098, 4447.5357, 3287.5, 962.5526, 3239.2317, 5540.1061, 0.0, 3498.713, 1551.3963, 1609.449, 7165.5088, 958.2553, 2206.3171, 2897.6154, 2484.6964, 2001.4, 518.0632, 2338.9744, 932.8101, 618.3378, 1882.8049], [364.3659, 327.6116, 398.166, 204.4773, 17.3435, 3881.4024, 5788.6071, 8178.1364, 661.8947, 3718.8659, 5572.9242, 0.0, 3121.5185, 5951.4817, 3347.1633, 3231.0526, 3341.617, 2304.6585, 3732.0769, 3414.2679, 6732.4667, 1349.4421, 4787.7436, 1989.0886, 1486.8243]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

