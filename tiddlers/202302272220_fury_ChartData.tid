created: 20230227222028000
creator: Drevarr
modified: 20230705163520392
modifier: drevarr
tags: ChartData
title: 202302272220_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Veron Blackburn", "Echo Monchichi", "M A C U M B E I R O", "My Birthday Girl", "Tootsie Pop Bringer", "Mike The Archmagus", "Lord Erin The Wise", "Mistwalker Caelon", "Sofya De Nova", "Etchery Howls", "Tribal S", "Cat Wigglebooty", "Fribble Bibble", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Herald", "Renegade", "Weaver", "Scrapper", "Scrapper", "Weaver", "Weaver", "Vindicator", "Weaver", "Druid", "Druid", "Scrapper", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[481.5571, 494.7662, 56.473, 23.5066, 253.3751], [1489.1184, 79.4726], [120.2707, 492.0031, 33.307, 14.0616, 78.916, 0.0, 46.8233, 1188.2232, 43.9795], [15.9456, 161.6189, 11.8732, 3.9043, 16.3934, 40.9318, 12.3955, 6.0159, 4.0033, 9.5256, 91.8402, 8.4202, 119.4893, 573.3745, 60.0575, 27.9644, 101.9479, 29.47, 93.6466, 942.5016, 38.9626], [28.0498, 184.977, 156.2801, 0.0, 28.7689, 54.6558, 53.3146, 0.0, 52.5829, 0.0, 95.7533, 18.4397, 151.5283, 366.5906, 39.8635, 20.0491, 32.0751, 31.9662, 61.5098, 1008.4824, 35.8925], [92.1946, 45.5364, 57.6181, 11.7734, 34.6352, 91.3675, 55.4573, 7.8458, 9.3472, 12.8625, 111.0502, 14.849, 116.2214, 777.2223, 40.0384, 31.9334, 165.9569, 37.1907, 78.6442, 777.5496], [88.2806, 125.4021, 32.0034, 3.9043, 25.675, 67.7623, 0.0, 11.7806, 21.6923, 16.1994, 153.9761, 0.0, 117.7133, 787.2889, 51.7964, 124.344, 0.0, 88.83, 899.8416], [122.8536, 163.1525, 62.7411, 5.8666, 56.2118, 45.049, 21.2198, 8.0132, 15.5849, 16.9785, 62.3138, 13.5318, 125.5277, 510.8779, 35.2303, 0.0, 127.382, 12.0357, 45.5204, 1162.6272, 50.1446], [3.911, 41.7068, 44.352, 15.7274, 17.4656, 23.2701, 163.5811, 18.8787, 143.2877, 1076.7025, 66.4829, 3.9917, 170.0546, 36.7263, 52.8242, 1378.2024, 68.016], [129.1594, 227.6821, 212.9942, 132.2726, 191.7243, 165.1968, 33.5119, 59.5095, 82.1436, 371.4518, 64.0528, 294.4608, 1236.0897, 119.678, 133.7213, 305.9851, 70.879], [151.4832, 205.2678, 81.4248, 80.2796, 66.8702, 56.5402, 17.928, 15.3429, 17.7429, 133.4618, 31.2189, 208.3603, 1137.1018, 49.3049, 60.9003, 54.9153, 93.2518, 1799.1144, 92.2272], [196.5658, 313.8002, 132.2324, 65.8952, 66.0467, 27.9014, 0.2512, 20.482, 29.2236, 98.3621, 15.6486, 195.431, 1302.7806, 6.6002, 0.0, 258.3671, 0.0, 125.5069, 1621.08], [144.3802, 325.8331, 104.3274, 0.0, 128.2144, 116.9628, 76.7923, 40.9032, 28.712, 7.0266, 165.8341, 35.6406, 316.7674, 2113.5582, 136.8997, 0.0, 374.3744, 58.8047, 77.8546, 1776.3624], [239.9813, 427.9952, 205.6412, 86.9495, 140.5338, 93.6806, 42.5896, 77.0309, 60.8286, 119.4101, 82.1475, 243.312, 1765.423, 197.8315, 0.0, 458.4479, 73.7816, 163.0129, 2338.3368, 117.8112], [283.9766, 629.37, 315.5134, 249.4776, 173.5057, 95.616, 12.1514, 41.7647, 69.4281, 111.1687, 45.7229, 432.7757, 2793.051, 228.9967, 104.26, 523.5165, 159.5795, 317.5771, 3802.428, 230.2061]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

