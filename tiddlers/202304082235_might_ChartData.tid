created: 20230408223537000
creator: Drevarr
modified: 20230705163525032
modifier: drevarr
tags: ChartData
title: 202304082235_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Fribble Bibble", "Mmathuss", "Aronorf Xideliesi", "Koralia Danai", "Sygaldry Verdandi", "Drevarr Moonwillow", "Bella Sassy", "Newtype Khan", "Grasszanine", "Arcanophage Farra"];
const professions = ["Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 17.1772, 41.756, 93.2339, 32.2147], [19.1866, 8.085, 24.8472, 1.4448, 2.691, 32.2543, 54.6234, 0.0, 5.7473, 6.1033, 5.5544, 12.0744, 3.4148, 3.894, 22.1577, 8.9732, 11.4442, 4.4152, 7.3488, 16.3968, 4.1434], [30.4612, 14.8302, 43.4826, 0.0, 3.7053, 37.1599, 51.8922, 0.0, 5.2668, 13.3878, 0.424, 2.1294, 6.7096, 0.0, 10.5327, 3.1932, 2.3587, 2.3192, 2.5273, 0.9777, 8.064, 1.1653, 3.5431, 1.3695, 8.1266, 0.0, 0.0528, 4.8038, 7.2009, 12.0239, 12.8654], [11.9669, 21.1596, 40.5594, 6.0816, 1.8526, 13.981, 47.9005, 1.8556, 1.0336, 1.2508, 2.3868, 2.574, 0.0, 13.2634, 9.5795, 10.4832, 2.4024, 0.4567, 12.5529, 9.184, 5.6324, 2.4179, 1.1628, 19.2718, 2.3568, 4.0759, 3.762, 0.129, 8.6184, 22.8995, 28.151], [29.5711, 3.696, 62.6661, 0.0, 4.1504, 47.5843, 69.96, 2.7241, 1.4414, 0.0, 0.0, 2.6442, 1.4243, 0.0, 11.625, 9.0945, 0.3058, 1.6632, 5.9986, 2.5863, 9.2736, 2.0069, 10.0787, 1.5246, 10.0173, 2.2898, 7.2576, 18.3736, 10.3178], [41.8347, 9.3786, 73.8108, 3.8605, 41.8202, 53.5729, 0.0, 1.6262, 15.1105, 4.9396, 7.8156, 3.3634, 0.44, 5.6955, 12.7727, 6.5083, 4.3982, 7.7648, 7.475, 10.3936, 4.0463, 8.8099, 6.6667, 20.9303, 2.0219, 8.9292, 0.6336, 8.7693, 3.7611, 16.0093, 20.4445], [37.582, 12.2892, 38.0016, 3.696, 8.4766, 54.3295, 66.5985, 2.4675, 4.4537, 9.401, 5.9572, 8.2602, 5.5942, 5.654, 21.9236, 8.9732, 11.5315, 2.4394, 9.8354, 6.718, 15.0976, 5.4382, 7.5411, 10.8786, 18.0445, 3.2947, 0.2945, 2.3232, 4.3363, 4.347, 27.02, 28.5331], [64.8784, 27.6738, 118.2069, 4.9059, 73.7066, 96.0111, 4.0862, 7.7986, 14.8152, 13.2288, 4.212, 0.9266, 6.974, 20.0511, 15.6021, 7.3819, 1.4507, 7.2166, 9.3043, 15.456, 2.0069, 7.3017, 9.7934, 30.251, 1.6443, 6.6675, 0.132, 4.9488, 5.6889, 27.4928, 42.0991], [72.4937, 35.4354, 153.468, 8.9264, 13.7965, 162.498, 314.0846, 11.6269, 4.9342, 24.7084, 34.0472, 35.685, 22.0849, 23.584, 97.681, 25.1817, 42.5443, 8.2144, 10.8097, 21.7941, 25.5808, 17.2208, 10.8927, 14.3154, 13.8319, 1.3824, 11.7744, 22.1166, 10.5273, 40.1247, 69.6769], [121.7459, 55.44, 143.9676, 12.88, 15.7941, 157.715, 226.477, 0.0, 26.371, 39.0807, 18.7408, 26.7228, 18.9961, 18.854, 84.8858, 25.02, 41.0592, 18.7268, 18.0093, 31.0912, 24.2775, 25.7116, 33.0235, 14.9265, 12.9413, 10.3158, 8.8338, 11.7747, 47.5552, 79.8673], [153.3939, 62.37, 136.1115, 7.2576, 15.4422, 189.9694, 333.4128, 7.0669, 0.0, 52.6654, 36.146, 43.0326, 20.7293, 34.452, 82.9353, 39.2882, 58.4875, 18.2213, 21.8022, 43.5567, 67.6928, 31.1399, 38.2322, 45.8143, 35.8568, 14.8718, 8.6856, 14.782, 45.7002, 48.5684, 81.2048]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

