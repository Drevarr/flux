created: 20230712220412000
creator: Drevarr
tags: ChartData
title: 202307122204_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Be\u00eb", "Il Dim Il", "Oo Dads Mad", "Tuandha Lan", "Rozaalyna", "Rina Of Theros", "Johosh The Mighty", "Cat Wigglebooty", "Mistwalker Cael", "Lord Of Bones", "Tegan Parker", "Legacy Of Mathus", "Eibh\u00ebar", "Tootsie Pop Rocks", "Scarlet Merc\u00fcry", "Black Raspberry Pie", "Mike The Archmagus", "Xanvias Einzbern", "Gestern Yesteryear", "Sygaldry Verdandi", "Venomina The Siren", "Ryvalia Fazebringer", "Tika Fiery", "Primal Clone", "Koralia Danai", "Newtype Khan", "Sub Train", "Drevarr Moonwillow", "Arcanophage Farra", "Sister Elon\u00edth", "Solus Sanctus", "Crusader Siolith"];
const professions = ["Firebrand", "Scourge", "Scourge", "Berserker", "Herald", "Scourge", "Scourge", "Berserker", "Scrapper", "Vindicator", "Scourge", "Tempest", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Weaver", "Berserker", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 45.0482, 0.8322, 251.8609, 83.886, 0.0, 64.4729, 85.0136], [111.3723, 19.1275, 26.391, 98.277, 9.6965, 44.9606, 63.5235, 70.2379, 34.7582, 1.885, 143.7318, 50.5133, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [80.9217, 0.0, 46.1173, 15.9328, 13.9548, 31.2875, 5.112, 103.7934, 39.9383, 28.5428, 25.3672, 49.059, 10.7933, 17.7229, 21.2463, 27.8973, 59.9161, 83.0758, 56.2695], [103.6302, 79.3339, 0.0, 210.7728, 36.7565, 22.9194, 30.5898, 1.9273, 184.6627, 0.0, 65.016], [51.9552, 66.402, 23.6173, 130.2685, 11.1267, 108.1188, 147.834, 11.6677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.7393, 216.0477, 0.0, 0.0, 0.0], [107.882, 2.4852, 65.971, 42.8901, 30.0523, 25.9316, 25.0901, 27.5106, 11.9812, 83.8242, 33.7695, 37.9236, 36.7531, 23.7119, 9.8481, 20.2176, 30.8499, 34.888, 39.7818, 51.3832, 78.6485], [141.8966, 60.2597, 17.9094, 81.6535, 9.922, 0.0, 18.9591, 23.1271, 11.8923, 0.0, 49.8456, 30.3502, 73.9024, 1.0465, 42.5534, 24.0266, 18.252, 0.0, 58.6093, 40.7801, 71.3239, 61.341], [67.3343, 7.1543, 109.8977, 94.5428, 198.2904, 44.6981, 282.897, 3.384, 80.3374, 32.8601], [79.2141, 5.6232, 114.8616, 61.6523, 0.0, 8.1208, 105.9745, 23.4749, 0.0, 15.136, 182.8575, 111.1513, 85.8262, 161.966], [83.9576, 26.9064, 46.0958, 35.2776, 46.3613, 14.9547, 39.618, 104.877, 59.6078, 26.598, 61.1993, 96.7316, 8.8783, 0.0, 3.7702, 63.2165, 67.9918, 72.732, 32.0051, 130.0075], [163.346, 56.7965, 16.9062, 138.6333, 37.5683, 11.5668, 55.4532, 29.8011, 37.7696, 9.2655, 86.4558, 39.057, 48.0766, 63.9621, 75.5082, 27.2536, 9.0909, 27.3824, 44.6404, 96.1393, 63.8537, 64.8854, 60.7775], [26.6532, 38.0153, 7.638, 140.5152, 84.5174, 65.7767, 2.7562, 20.5438, 73.2978, 61.5817, 0.0, 77.2317, 74.1929, 67.9835, 0.0, 15.9616, 71.0532, 97.6405, 60.1418, 198.2192, 144.6585], [128.6334, 77.5224, 0.3534, 88.4493, 103.4594, 45.1319, 29.3733, 26.1965, 0.0, 78.7358, 83.9293, 45.8239, 4.6649, 19.1295, 52.233, 110.1209, 68.3046, 53.7715, 132.1461, 186.6795], [102.9956, 11.5351, 8.208, 135.2877, 49.0237, 0.0, 51.0027, 68.3464, 65.3312, 81.7601, 131.5026, 55.977, 67.0098, 19.6742, 0.6399, 39.5428, 59.5471, 84.2938, 52.3611, 117.8442, 64.3051, 70.1362, 95.5535], [107.5647, 43.0502, 0.0, 264.5115, 57.0966, 2.6347, 90.4935, 82.8722, 59.5126, 36.5189, 93.8088, 10.152, 0.0, 87.8223, 29.151, 4.8154, 0.0, 45.6006, 85.6818, 107.5235, 0.0, 69.3236, 153.755], [811.0823, 150.3562, 19.3686, 384.4303, 77.2112], [36.7433, 31.0889, 0.4332, 7.1094, 7.5768, 61.3255, 45.2171, 0.0, 192.5739, 322.695, 151.6266, 67.2218, 0.0, 25.116, 27.0891, 68.0337, 0.0, 31.9782, 39.7643, 188.5883, 18.8852, 88.0766, 69.552], [194.0607, 59.7802, 20.7252, 105.8046, 21.1068, 17.2431, 113.7845, 72.8433, 32.4614, 20.6077, 165.5586, 65.4592, 92.521, 101.6361, 68.0072, 15.8004, 40.7336, 101.7965, 83.3017, 109.8378, 108.5713, 111.7679, 74.221], [121.0182, 77.8154, 8.1738, 101.0999, 76.67, 48.7948, 111.1438, 48.0744, 228.0978, 31.8222, 259.1352, 135.4657, 44.5016, 0.0, 37.4342, 9.614, 46.9638, 48.8755, 83.0115, 49.7273, 31.2246, 133.2088, 134.918], [73.5563, 124.347, 103.4296, 104.8362, 56.871, 161.379, 200.6782, 108.3368, 38.5949, 52.0097, 53.2699, 85.5738, 62.1126, 144.3704, 187.0245, 40.6798, 209.346, 91.6895], [74.4386, 177.822, 22.7544, 55.2024, 131.0155, 23.1122, 73.4333, 63.7423, 146.3317, 23.4513, 110.5272, 98.9115, 94.7518, 187.5747, 65.9453, 63.7366, 32.0463, 163.0053, 10.8095, 130.2708, 182.3325], [130.792, 60.1634, 18.4855, 126.2162, 43.4704, 110.9099, 0.0, 239.553, 66.1995, 0.0, 105.236, 48.3124, 28.123, 70.6036, 78.8723, 293.3847, 118.2195, 62.7251, 110.9552, 252.0455], [0.0, 0.0, 6.5892, 743.6641, 0.0, 2.3562, 52.6642, 0.0, 91.5147, 80.8016, 19.8918, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 196.9331, 0.0, 330.9521, 36.065, 0.0, 479.78], [115.6241, 88.2583, 8.8122, 95.5587, 70.4462, 49.4802, 56.017, 0.0, 63.3917, 59.2992, 122.0598, 114.2453, 47.5046, 88.9944, 152.4739, 16.7869, 55.107, 141.6179, 91.1965, 170.1986, 235.0748, 155.7749, 123.487], [144.6253, 89.8301, 30.6204, 227.1872, 84.6978, 26.2181, 86.5771, 27.9096, 135.4091, 152.2417, 214.4754, 67.4333, 117.117, 61.2412, 71.5621, 32.3699, 25.4475, 50.8019, 140.1327, 124.2243, 16.5779, 101.2037, 157.297], [15.9919, 171.535, 28.842, 154.3158, 101.1142, 64.26, 17.802, 32.3708, 30.1136, 0.0, 253.485, 3.1372, 141.141, 204.9466, 57.0933, 37.9544, 95.5247, 42.2707, 185.0634, 280.4742, 76.8953, 116.2686, 115.437], [349.0935, 69.2374, 26.3682, 133.5103, 17.3184, 14.3514, 39.7578, 165.209, 114.84, 18.4671, 135.6048, 145.3005, 27.9994, 65.1342, 61.6437, 26.6015, 16.3566, 49.2333, 86.7848, 193.5297, 38.9492, 319.7387, 240.534], [24.559, 31.9414, 58.9494, 234.0875, 150.2732, 29.4097, 38.2446, 136.086, 200.5872, 127.3207, 186.9984, 40.2203, 0.0, 183.0538, 38.9984, 79.955, 65.9704, 72.1024, 177.9232, 148.3686, 184.6139, 247.3521], [243.7499, 81.8381, 42.1686, 429.1778, 64.3577, 80.8391, 84.9155, 152.7532, 126.7323, 26.0073, 314.0892, 107.5125, 22.737, 173.426, 270.7844, 22.1206, 35.5037, 99.7325, 105.9412, 124.7247, 39.802, 191.9057, 219.121], [433.051, 140.9256, 51.2202, 121.0689, 166.1033, 94.9977, 193.5671, 138.3344, 157.9178, 239.3694, 317.6496, 111.4253, 0.0, 215.8302, 73.6951, 67.1977, 23.6574, 159.5059, 200.0983, 266.0251, 20.691, 234.1625, 178.227], [19.8778, 85.865, 73.3786, 169.0445, 167.3861, 333.207, 273.2933, 170.1414, 240.7369, 335.5209, 111.723, 114.6717, 203.4003, 319.1589, 319.3178, 138.3413, 350.9937, 255.1045], [402.3364, 137.0628, 34.314, 179.1987, 173.4546, 51.2366, 27.8601, 198.9718, 130.7134, 241.3184, 386.3034, 111.9188, 180.9808, 262.0017, 169.2891, 34.7274, 159.2136, 53.719, 253.4463, 128.853, 134.7548, 393.5005, 253.1725], [39.1548, 93.0802, 93.2634, 309.0498, 254.0483, 79.5325, 118.858, 239.3371, 424.3466, 149.9413, 183.3606, 210.4073, 286.6292, 342.2474, 183.829, 101.9251, 104.1944, 72.873, 557.8025, 478.0071, 142.1033, 348.9933, 492.9015]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

