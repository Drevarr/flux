created: 20230401223327000
creator: Drevarr
modified: 20230705163524135
modifier: drevarr
tags: ChartData
title: 202304012233_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Your Arch Nemesis", "Aronorf Xideliesi", "Sanellek Knut", "Lord Erin The Wise", "Tootsie Pop Rocks", "Skye Nightroad", "Cat Wigglebooty", "Zenek Tryst", "Tribal S", "Venomina The Fierce", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Firebrand", "Druid", "Weaver", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.592, 116.6848, 15.3985, 118.8366, 30.5041, 22.9892, 0.0, 31.4412, 0.0, 51.2862, 22.8532, 0.0, 37.737, 34.3915, 31.253, 32.5822, 26.6999, 62.496, 0.0, 49.9803, 0.0, 176.7456, 31.466, 31.5683, 12.2254, 0.0, 31.3344, 0.0, 31.3854], [0.0, 253.0432, 52.9544, 163.9196, 12.0414, 0.0, 55.4268, 71.9397, 15.8309, 10.4742, 4.0194, 29.4257, 47.6678, 11.9837, 19.8385, 0.0, 24.864, 0.0, 77.1544, 0.0, 176.2835, 38.0871, 0.0, 30.6734, 6.6633, 0.0, 23.2723, 14.52, 23.987], [62.7994, 93.0867, 0.0, 66.4759, 0.0, 23.3005, 0.0, 93.7354, 56.7778, 0.0, 8.3516, 53.8272, 0.0, 107.6392, 0.0, 359.0362, 93.0675, 0.0, 51.9411, 5.1299, 0.0, 5.1245, 104.1791, 8.7856], [38.4682, 125.4624, 14.148, 62.9006, 50.5947, 549.6442, 106.1551, 40.0608, 63.4603, 44.9844, 10.8999, 34.3862, 76.2525, 96.237], [190.4918, 378.0045, 72.6726, 247.0951, 35.5817, 113.6089, 93.6156, 4.7481, 18.4973, 128.1946, 39.103, 19.9762, 79.7394, 119.4264, 63.6854], [68.1542, 60.7846, 75.7218, 284.3772, 0.0, 120.8091, 91.1758, 87.3411, 32.7518, 172.2197, 53.592, 12.3428, 69.2551, 72.9281, 0.0, 7.2968, 18.4327, 74.7264, 0.0, 65.0617, 0.0, 372.2054, 49.9372, 60.0902, 2.7462, 0.0, 14.0515, 72.0657, 41.6449], [66.528, 386.281, 79.9399, 358.84, 7.92, 87.6367, 61.9242, 71.6205, 0.0, 48.532, 7.522, 11.9734, 38.8115, 100.4659, 15.9214, 17.8791, 16.0143, 102.8832, 0.0, 61.0155, 0.0, 309.3626, 104.144, 0.0, 42.6496, 36.4392, 0.0, 28.9027, 50.2411, 42.3963], [52.0418, 261.573, 106.3717, 86.4633, 38.0344, 193.2934, 13.4171, 62.2679, 45.3561, 127.8806, 55.809, 72.4886, 46.6511, 323.1648, 188.2881, 63.2305, 586.1485, 116.8913, 39.8736, 62.5274, 74.9414, 26.4429, 77.1283, 214.8164, 118.4611], [196.0358, 426.1709, 167.147, 366.7422, 26.9511, 128.0607, 77.3854, 89.4558, 14.6905, 90.8879, 22.6426, 27.9482, 67.6271, 114.4606, 134.2364, 43.014, 17.4063, 145.3536, 0.0, 123.0885, 32.5584, 656.1536, 75.277, 12.0393, 39.1653, 47.1172, 15.8598, 46.7405, 80.6619, 100.8321], [301.9632, 591.2934, 158.66, 83.8847, 53.295, 224.6462, 89.9558, 106.0542, 41.9753, 136.7075, 21.2382, 159.1207, 193.5446, 63.0115, 61.6598, 60.0503, 217.1904, 21.1356, 181.1152, 87.701, 1092.5882, 148.6358, 37.4751, 109.48, 49.0967, 22.275, 102.5059, 129.2105, 133.518], [482.5498, 1104.1638, 287.5904, 624.6775, 62.4165, 216.3146, 130.3723, 179.949, 106.7075, 186.9087, 48.0476, 117.9323, 266.1444, 173.029, 86.0827, 104.0721, 478.9344, 29.106, 267.6496, 101.8354, 1345.577, 274.0046, 91.7631, 141.8861, 115.3814, 141.5597, 253.4771, 233.0207], [298.2672, 959.936, 135.6894, 907.1297, 112.4815, 325.5519, 164.4505, 247.4598, 148.1294, 327.6222, 44.3091, 119.057, 260.4474, 373.5871, 98.4344, 72.0505, 123.0953, 448.0224, 335.608, 158.3992, 1658.6362, 299.3754, 108.4941, 182.5365, 100.6747, 61.1127, 143.3059, 282.5172, 204.2652]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

