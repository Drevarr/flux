created: 20230710221759000
creator: Drevarr
tags: ChartData
title: 202307102217_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Solus Sanctus", "Tegan Parker", "Tootsie Pop Rocks", "Tribal Z", "Fribble Bibble", "Artakama Nahid", "Zaedy Zae", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Scrapper", "Tempest", "Scrapper", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[176.9565, 55.0, 11.4375, 28.8931, 161.9625, 0.0, 90.6415, 252.3667, 182.6364, 261.6212, 118.3036, 6.8837, 125.0444, 255.0624, 333.8769, 476.4262, 114.5545, 420.1987, 442.0, 321.275, 537.8689, 549.4944, 501.7838], [417.0206, 72.0, 73.5, 93.4025, 364.6125, 0.0, 219.0943, 171.8611, 114.9545, 538.7576, 523.0893, 90.3023, 111.7333, 329.3903, 1094.0923, 1532.9344, 236.9364, 391.859, 1751.15, 467.475, 758.1475, 676.0337, 1366.1486], [615.7849, 23.125, 98.6667, 1215.7313, 0.0, 471.6981, 1300.7111, 0.0, 1272.8939, 1397.6429, 219.3488, 307.9333, 892.8106, 1461.1231, 1918.2459, 706.9182, 670.7628, 4445.65, 417.025, 1229.0164, 1736.8876, 570.6757], [567.6293, 0.0, 0.0, 5.3774, 725.2563, 806.2264, 1048.1111, 84.1818, 939.8182, 938.9286, 132.0465, 143.6667, 1149.6236, 0.0, 2227.3443, 796.8909, 607.7372, 3295.65, 1559.95, 1200.6885, 1737.8427, 2809.1351], [981.4119, 40.875, 23.1761, 743.3625, 276.0392, 436.2453, 933.6389, 33.6818, 762.3636, 1000.4821, 0.0, 171.8444, 881.3788, 1387.2, 1681.1967, 841.7182, 1029.5833, 3984.35, 1327.3, 1354.4098, 1425.2135, 1.65, 1457.0135], [1018.5057, 166.9091, 225.8438, 6.4906, 1188.6375, 19.2745, 384.9434, 1573.7333, 110.3636, 953.2121, 1448.625, 139.4186, 520.9111, 71.8684, 3076.5538, 2604.7541, 1015.7182, 882.1282, 3357.6, 1553.0, 2334.9508, 1210.2697, 4247.2162], [729.6384, 0.0, 27.4591, 756.2, 403.902, 759.0377, 1617.7333, 104.6818, 1356.4545, 1047.6964, 255.093, 559.0222, 1386.5889, 65.3231, 3465.3279, 1083.9727, 1729.8269, 2947.35, 1663.325, 2416.9344, 2715.9888, 3641.2027], [2784.3021, 654.8182, 424.9062, 60.717, 1982.2375, 25.3725, 1094.6415, 1926.2333, 328.6818, 2179.4394, 704.0357, 10.9767, 570.1333, 990.9838, 2875.3231, 1479.541, 1128.4273, 797.7051, 3481.45, 571.875, 220.7869, 3926.5618, 0.0, 5445.2973], [1994.5789, 317.9091, 90.2201, 2103.725, 312.1176, 923.7736, 2153.8667, 332.9091, 1286.6667, 1394.6429, 301.6279, 648.5778, 1360.7321, 4041.7846, 4776.623, 1681.4636, 1649.1154, 3886.85, 1498.175, 797.2295, 3329.1011, 188.55, 2142.0405], [1673.8535, 606.0606, 512.6562, 117.0503, 1806.2375, 267.1373, 784.3208, 1906.5111, 289.5, 654.2121, 1269.6429, 114.7907, 382.8667, 1657.4942, 3650.1846, 4816.459, 1833.0727, 1393.25, 2690.1, 2187.525, 2784.0164, 2915.6742, 364.65, 4634.2838]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

