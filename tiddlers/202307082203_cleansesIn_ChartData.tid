created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Willgrantor", "Shandalar V Basing", "Seiker Novus Terra", "Permanent Dawn", "Lil Rev Robin", "Slingsshot", "Gavann", "Enter Effore", "Ateriuz", "No Reserv\u00e9", "Necrotic Windrunner", "Charr Surethang", "Govinda Ektar", "Mechanical Dark", "Cedryn X", "Lord Erin The Wise", "Venomina The Siren", "Klenga", "Johosh The Mighty", "High Sorcer Baradun", "Legacy Of Mathus", "Tegan Parker", "Hyde En Sikh", "Glorious Gluvs", "Koralia Danai", "Mistwalker Cael", "Sakis Ranger", "Arriasa", "Chocolate Teapot", "Aronorf Xideliesi", "Kary\u00edna", "Sygaldry Verdandi", "Primal Clone", "Gabe Malhorn", "Black Raspberry Pie", "Tika Fiery", "Xanvias Einzbern", "Crusader Siolith", "Newtype Khan", "Rahani Sunray", "Bella Sassy", "Artakama Nahid", "Latedoctor", "Be\u00eb", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Weaver", "Vindicator", "Untamed", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Reaper", "Berserker", "Vindicator", "Scrapper", "Berserker", "Weaver", "Tempest", "Firebrand", "Berserker", "Weaver", "Berserker", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Druid", "Druid", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Willbender", "Spellbreaker", "Chronomancer", "Firebrand", "Tempest", "Reaper", "Reaper", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0127, 0.0244, 0.12, 0.4667, 0.0, 0.1077, 0.2667, 0.069, 0.1509, 0.2069], [0.2281, 0.1077, 0.3067, 0.1724, 0.1604, 0.3103], [0.4828, 0.3962, 0.431], [0.22, 0.2281, 0.2615, 0.2133, 0.3276, 0.1132, 0.1724], [0.4308, 0.3867, 0.2414, 0.1132, 0.4138], [0.3721, 0.9286, 0.1053, 0.3103, 0.1646, 0.0976, 0.12, 0.2222], [0.3721, 0.8571, 0.0, 0.681], [0.1646, 0.0, 0.22, 0.6444, 0.2462, 0.28, 0.1897, 0.1038, 0.5345], [0.3929, 0.0263, 0.7759, 0.2025, 0.0976, 0.14, 0.3333], [0.2295, 0.6279, 0.5, 0.0789, 0.3448, 0.2152, 0.0976, 0.48], [0.2049, 0.2326, 0.25, 0.0263, 0.2241, 0.1266, 0.0488, 0.14, 0.3556, 0.1228, 0.2, 0.0933, 0.2586, 0.1604, 0.069], [0.377, 0.5581, 0.3571, 0.1316, 0.1897, 0.0886, 0.0976, 0.12, 0.5556, 0.386], [0.4262, 0.3023, 0.5357, 0.3017, 0.22, 0.3333, 0.2759, 0.1509], [0.2462, 0.56, 0.3103, 0.2925, 0.3448, 0.3111], [0.2459, 0.2093, 1.0, 0.0, 0.3534, 0.0759, 0.0, 0.28, 0.3556, 0.1053, 0.1692, 0.48, 0.1207, 0.2547, 0.2414], [0.377, 0.6279, 0.3929, 0.2368, 0.3017, 0.1139, 0.0244, 0.28, 0.2667, 0.2807, 0.1385, 0.3067, 0.2925, 0.3103], [0.6047, 0.1786, 0.0789, 0.7845, 0.0732, 0.12, 0.5111, 0.1053, 0.3846, 0.2667, 0.431, 0.1887, 0.2759], [0.3881, 0.418, 0.7209, 1.0714, 0.0789, 0.6207, 0.2785, 0.0, 0.28, 0.3556, 0.1404, 0.2308], [0.3582, 0.459, 0.3953, 0.9286, 0.1053, 0.7069, 0.2152, 0.0244, 0.34, 0.8222, 0.3509, 0.2154], [0.2705, 0.4419, 0.3214, 0.0789, 0.4483, 0.1519, 0.0, 0.1, 0.5556, 0.614, 0.2462, 0.5867, 0.6724, 0.1038, 0.2241], [0.4508, 0.6744, 0.9286, 0.1316, 0.3621, 0.122, 0.18, 0.4, 0.3684, 0.3538, 0.1867, 0.2241, 0.3585, 0.3793], [1.2857, 0.0263, 0.7931, 0.3291, 0.0732, 0.32, 0.8444, 0.4561, 0.0, 0.5733, 0.1604, 0.5], [0.4627, 0.5164, 0.8837, 0.8214, 0.1579, 0.7845, 0.1392, 0.0244, 0.12, 1.2889], [0.5075, 0.3607, 0.7209, 0.5357, 0.2895, 0.0086, 0.2152, 0.0, 0.28, 0.6889, 0.5614, 0.2308, 0.6, 0.2069, 0.2264, 0.0862], [0.4627, 0.2541, 0.9535, 0.7857, 0.0789, 0.7241, 0.0633, 0.1463, 0.28, 0.5111, 0.1579, 0.1538, 0.3067, 0.069, 0.0849, 0.2759], [0.0746, 0.2623, 0.4651, 0.6071, 0.2895, 0.569, 0.1139, 0.0488, 0.3, 0.3111, 0.2632, 0.2462, 0.4667, 0.569, 0.066, 0.5862], [0.2951, 0.4884, 1.0357, 0.1316, 0.6379, 0.3797, 0.0976, 0.2, 0.3333, 0.2807, 0.3692, 0.3867, 0.2759, 0.0, 0.3793], [0.4672, 0.4419, 0.7857, 0.0789, 0.7155, 0.1519, 0.1463, 0.08, 0.5111, 0.1754, 0.2154, 0.56, 0.2069, 0.1509, 0.2931], [0.6567, 0.3279, 0.6744, 0.4286, 0.1316, 0.4397, 0.1772, 0.3846, 0.6, 0.5172, 0.5, 0.2069], [0.4925, 0.377, 0.4186, 0.0, 0.0526, 0.5776, 0.0244, 0.28, 0.9333, 0.4912, 0.1231, 0.44, 0.5172, 0.2642, 0.2069], [0.3361, 0.8837, 0.5714, 0.2105, 0.7328, 0.1519, 0.0488, 0.14, 0.8444, 0.4035, 0.3846, 0.44, 0.4483, 0.0755], [0.1791, 0.459, 0.5581, 1.2143, 0.6724, 0.0, 0.36, 0.7556, 0.2105, 0.6615, 0.6, 0.2414, 0.0849, 0.0], [0.2388, 0.3852, 0.3256, 1.3929, 0.1579, 0.6034, 0.1899, 0.0488, 0.32, 0.6667, 0.4561, 0.2923, 0.2533, 0.431, 0.3962, 0.4655], [0.3525, 0.8605, 0.7143, 0.0789, 0.8707, 0.2532, 0.0732, 0.16, 0.4667, 0.4211, 0.4769, 0.48, 0.1552, 0.2358, 0.8448], [0.3443, 0.1316, 0.5431, 0.3418, 0.0, 0.28, 0.9333, 0.386, 0.1538, 1.0133, 0.3966, 0.2075, 0.1034, 0.3963], [0.7761, 0.3525, 0.8837, 0.6429, 0.2105, 0.319, 0.0633, 0.0732, 0.2, 0.7111, 0.2807, 0.5846, 0.44, 0.6034, 0.1226, 0.2414, 0.2667], [0.4328, 0.3197, 0.8837, 0.9643, 0.1316, 0.7586, 0.2152, 0.0244, 0.16, 0.8444, 0.5789, 0.2769, 0.7467, 0.4655, 0.1792, 0.5], [0.3934, 0.4186, 0.6429, 0.1579, 0.4655, 0.1519, 0.0976, 0.5, 0.8, 0.4211, 0.4933, 0.5172, 0.3208, 0.2759, 0.4407], [0.4776, 0.3852, 1.0233, 0.9643, 0.2105, 0.9138, 0.1139, 0.0, 0.38, 0.8222, 0.4912, 0.5846, 0.1867, 0.5, 0.283, 0.3793], [0.4016, 0.5116, 0.9286, 0.1579, 0.8793, 0.1772, 0.0976, 0.1, 0.5333, 0.4035, 0.6462, 0.3867, 0.3276, 0.4811, 0.3621, 0.3815], [0.0299, 0.4344, 0.4186, 1.0, 0.2632, 0.8103, 0.1266, 0.0244, 0.08, 0.8889, 0.6491, 0.6462, 0.5333, 0.2414, 0.2264, 0.4483, 0.3741], [0.5224, 0.4262, 1.0233, 0.7857, 0.2895, 0.9741, 0.1266, 0.0, 0.22, 0.8667, 0.2456, 0.5077, 0.6, 0.3448, 0.0943, 0.2931, 0.2667], [0.3689, 0.907, 0.1071, 0.1579, 0.7414, 0.1392, 0.0488, 0.22, 0.9333, 0.4035, 0.2462, 0.5733, 0.1724, 0.3585, 0.2931, 0.5963], [0.6803, 0.7674, 1.1786, 0.2895, 0.75, 0.0633, 0.0244, 0.18, 0.5778, 0.3333, 0.4769, 0.36, 0.3621, 0.2925, 0.7069, 0.4222], [0.5821, 0.3934, 0.5581, 0.7857, 0.1579, 0.7845, 0.2532, 0.1463, 0.36, 1.0222, 0.3684, 0.5385, 0.8, 0.7759, 0.3113, 0.4828, 0.4296], [0.6269, 0.1721, 1.093, 1.3571, 0.2632, 1.0086, 0.1899, 0.0, 0.14, 1.2222, 0.4912, 0.3231, 0.5467, 0.3103, 0.2736, 0.4138, 0.5778]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

