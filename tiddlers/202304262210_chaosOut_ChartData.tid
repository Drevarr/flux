created: 20230426221022000
creator: Drevarr
modified: 20230705163526711
modifier: drevarr
tags: ChartData
title: 202304262210_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Khailerian", "Etch\u00e9ry", "Xyntharos", "\u00c1rkantor", "Sister Elon\u00edth", "Permanent Dawn", "Kmpek", "Mistwalker Caelon", "Koralia Danai", "Johosh The Great", "Kary\u00edna", "Bella Sassy", "Newtype Khan", "Miphest\u00f6", "Mike The Archmagus", "Lord Erin The Wise", "Solo Bloodborn", "Xanvias Tsoli", "Lucas Ryn", "Grasszanine", "Zaylen Harker", "Inedible Plant", "High Sorcer Baradun", "Tegan Parker", "Zadie Miststep"];
const professions = ["Vindicator", "Berserker", "Vindicator", "Vindicator", "Firebrand", "Weaver", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Tempest", "Weaver", "Weaver", "Spellbreaker", "Holosmith", "Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7932], [0.0, 0.0, 0.0, 15.1631], [12.0731, 8.7984, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 12.0978, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.9757], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.7447], [0.0, 23.0892, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [8.8259, 0.0, 12.0217, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7932], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0388, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 17.9564], [15.0312, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0775, 0.0, 15.0748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.9328, 11.9794, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.769], [0.505, 3.2994, 0.0, 0.0, 0.0, 0.0, 11.9707, 12.0775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [6.2322, 11.9794, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 27.8597, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9612], [0.0, 21.6294, 14.9742, 0.0, 0.0, 0.0, 0.0, 12.0775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [12.831, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0775, 0.0, 0.0, 0.0, 14.9084, 0.0, 0.0, 11.9709], [0.0, 23.829, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9399, 0.0, 0.0, 0.0, 17.9564], [12.0978, 11.8684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9399, 0.0, 0.0, 0.0, 22.7447], [0.0, 0.0, 0.0, 0.0, 35.768, 0.0, 0.0, 0.0, 0.0, 11.9756, 0.0, 0.0, 11.9709], [12.0978, 0.0, 0.0, 0.0, 0.0, 12.049, 12.0775, 0.0, 9.541, 0.0, 0.0, 0.0, 0.0, 0.0, 32.3214], [0.0, 15.0306, 11.9794, 0.0, 0.0, 12.0192, 0.0, 24.155, 0.0, 11.2584, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9709], [0.0, 69.654, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 35.9127], [0.0, 51.6906, 17.969, 0.0, 0.0, 0.0, 0.0, 33.91, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9612], [24.074, 16.1304, 15.9725, 0.0, 0.0, 0.0, 0.0, 15.7937, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 51.8739], [0.0, 48.0246, 0.0, 0.0, 0.0, 0.0, 0.0, 15.7937, 0.0, 0.0, 0.0, 0.0, 31.8942, 0.0, 15.8935, 31.9224]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

