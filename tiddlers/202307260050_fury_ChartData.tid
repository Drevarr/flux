created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Explorer Theodora", "Jim Pam Zee", "Xela Demora", "Scarlet Merc\u00fcry", "Rosetendril", "Govinda Ektar", "Stevie Skiivs", "Atros Wintersshroud", "Johosh The Mighty", "Sakis Ranger", "Reyga Bannerclaw", "Name Is What", "Jerryatric Reflexes", "Erin Celes", "Jimbo The Pleb", "Newtype Khan", "Kosa\u00edr", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Harbinger", "Firebrand", "Tempest", "Vindicator", "Weaver", "Druid", "Berserker", "Druid", "Spellbreaker", "Scourge", "Spellbreaker", "Renegade", "Berserker", "Spellbreaker", "Holosmith", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.229, 56.5677, 0.0, 68.7719, 0.0, 55.5212, 0.0, 23.31, 89.1338, 0.0, 0.0, 25.5024, 102.4291, 0.0, 70.992, 10.4286, 27.9418, 0.0, 0.0, 0.0], [178.5888, 163.89, 151.4478, 183.1491, 33.3511, 82.8186], [60.6661, 91.4567, 61.7595, 48.5233, 77.2254, 40.9962, 0.0, 0.0, 0.0, 18.133, 85.2862, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.2566, 0.0, 120.8434, 0.0, 57.5219, 26.0739, 0.0, 0.0, 0.0, 39.846, 45.7002], [151.8828, 0.0, 58.0381, 145.8989, 5.8514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.5369, 0.0, 63.156, 25.9719, 0.0, 162.8407, 0.0, 0.0, 26.4656, 43.3788, 43.5375, 0.0, 7.367, 0.0, 0.0, 68.0678, 0.0, 39.2022, 0.0, 2.9938, 0.0, 23.9803, 49.4073, 37.765, 0.0, 0.0, 0.0, 41.0551, 33.6539], [55.2614, 13.158, 53.7354, 17.3219, 0.0, 0.0, 0.0, 7.8628, 0.0, 67.7304, 0.0, 7.4575, 8.2696, 78.3801, 0.0, 49.0568, 13.1807, 23.4284, 0.0, 0.0, 0.0, 14.8274, 14.5471, 28.0228, 15.7757, 22.4266, 22.5293, 24.7281, 23.5418, 82.6916, 15.561, 30.039, 23.7762, 0.0, 27.4388, 0.0, 7.78, 25.2072, 0.0, 20.1139, 0.0, 27.3789, 0.0, 26.4686, 0.0, 31.1267, 58.4509, 31.2858, 31.8108, 0.0, 16.713, 89.0902, 7.8764], [38.3488, 87.6691, 19.6001, 27.4666, 3.444, 9.4721, 0.0, 0.0, 119.3424, 0.0, 15.8714, 22.9748, 192.452, 129.1853, 3.5112, 11.571, 13.7333, 7.7707, 0.0, 61.2068, 65.4673, 34.3412, 72.0135, 22.5709, 71.2043, 98.413, 21.0722, 61.6275, 13.795, 66.3601], [44.6753, 37.62, 95.5938, 102.7734, 33.3222, 55.4118, 15.953, 29.7402, 39.1116, 19.6513, 88.6512, 9.6188, 12.4711, 8.0849, 177.0264, 0.0, 127.1441, 342.0667, 112.5155, 0.0, 18.2833], [253.8648, 38.6232, 47.5562, 13.5569, 301.9128, 0.0, 254.3789, 557.2343], [241.825, 78.228, 107.0214, 109.8205, 20.6531, 47.857, 44.009, 118.2275, 62.0268, 9.2245, 154.6152, 9.5819, 6.9842, 23.8648, 192.3017, 27.0416, 61.871, 337.0188, 162.2527, 20.6184, 14.0448, 60.9919, 44.5179, 55.0598, 87.9466], [59.9612, 201.9767, 325.8086, 66.7641, 135.5735, 176.239, 306.1462, 28.9947, 159.3602, 16.366, 24.0912, 21.1759, 77.47, 41.2384, 57.3678, 93.2932, 114.0242, 20.2797, 45.3352, 165.7611], [49.3927, 60.822, 59.7702, 66.528, 9.3992, 32.912, 24.745, 33.142, 0.0, 0.0, 105.0456, 0.0, 46.0879, 0.0, 56.904, 10.405, 56.3371, 160.8323, 24.4608, 0.0, 11.4716, 24.6717, 116.9024, 82.4344, 66.7236, 33.06, 16.2916, 64.4339, 143.7727, 31.8482, 69.3462, 19.397, 0.0, 87.7837, 24.6657, 31.4231, 36.883, 26.5536, 32.6577, 45.3873, 8.1928, 89.0532, 45.0996, 66.8606, 36.9576, 63.2642, 134.3628], [110.4948, 36.27, 70.9838, 69.7558, 11.6645, 78.3605, 26.775, 56.5267, 24.024, 50.0786, 225.3264, 9.3601, 49.1887, 47.1823, 204.1362, 27.4655, 69.3554, 431.5972, 0.0, 70.5072, 1.3314, 33.1492, 23.2348, 25.8662, 55.3165, 112.8667, 65.8892, 80.3272, 66.1804, 160.3703, 191.1249, 27.9061, 97.3722, 47.7428, 0.0, 135.9113, 36.1135, 46.2259, 34.601, 39.3768, 23.6368, 81.1628, 39.8037, 74.4894, 62.244, 142.8689, 31.5314, 27.1112, 80.649, 130.7852, 56.0511, 38.6534, 50.9696, 146.7982, 69.8771], [78.6323, 294.4431, 422.674, 68.498, 105.0036, 141.1816, 44.6131, 166.9613, 72.9485, 138.0993, 39.774, 12.4776, 246.2122, 96.1498, 196.6635, 192.4468, 183.3322, 64.8402, 52.8185, 350.4708, 112.9492, 27.7389, 141.8525, 86.1274, 509.9189, 173.9345], [201.811, 126.234, 122.729, 90.281, 3.4196, 66.572, 31.976, 91.4002, 9.0288, 0.0, 282.5136, 13.1947, 38.8525, 6.7579, 207.4635, 1.4858, 149.2344, 300.842, 102.4456, 0.0, 12.0876, 28.0364, 19.9364, 90.8917, 137.3425, 83.4364, 92.397, 75.8878, 80.2532, 231.1042, 65.7267, 108.764, 86.2036, 6.3226, 222.7838, 35.6613, 18.5895, 19.257, 12.8207, 117.436, 6.3426, 63.2925, 37.8742, 90.6919, 18.2987, 20.3861, 148.2611, 112.8036, 51.913, 12.6336, 12.6086, 224.6765, 86.2828], [18.347, 11.3665, 38.2536, 61.2435, 343.0128, 35.0843, 83.2112, 57.1619, 243.9501, 23.8209, 449.2649, 191.8048, 2.2608, 15.33, 54.5015, 23.9012, 68.2987, 77.0699, 94.5279, 33.8196, 140.1488, 88.7858, 143.4964, 161.6331, 66.5863, 108.3216, 51.646, 114.615, 51.6979, 70.1444, 17.78, 48.3984, 25.993, 75.7415, 42.8221, 100.3023, 142.4696, 147.811, 53.1109, 63.18, 142.3103, 141.8872, 28.7605, 29.0774, 70.4141, 196.3721, 207.4831], [307.8691, 173.502, 223.2234, 235.2381, 72.3679, 148.463, 54.544, 206.1037, 88.3938, 36.0318, 447.8376, 25.2252, 20.7596, 142.4275, 320.8475, 178.2979, 121.4864, 124.2315, 122.9238, 85.1521, 271.147, 106.2594, 176.031, 62.7844, 38.113, 122.4788, 43.9826, 139.7517, 60.053, 91.4112, 90.7222, 97.4198, 188.2332, 7.2618, 114.3806, 28.2663, 90.6282, 233.608], [170.0525, 186.444, 250.0376, 247.016, 76.5458, 101.8926, 45.003, 131.1828, 42.5832, 23.7575, 425.7576, 53.4072, 77.734, 16.0603, 386.3048, 48.8522, 253.381, 462.0249, 96.7302, 41.0472, 19.5846, 27.7508, 109.6362, 175.3391, 198.8749, 143.4494, 137.028, 78.0374, 172.0732, 190.8707, 172.2706, 55.3112, 55.7842, 58.842, 44.8416, 47.6551, 227.2244, 50.1211, 142.1145, 76.8404, 166.4863], [280.4911, 141.264, 230.0928, 258.2272, 44.7644, 179.4901, 33.663, 175.182, 75.273, 446.4576, 24.0517, 81.9458, 89.5698, 564.5411, 63.684, 200.8087, 728.0222, 300.8502, 18.9768, 15.099, 19.8792, 57.5365, 48.6893, 283.7268, 176.9081, 67.1293, 152.5463, 47.9284, 242.0523, 546.2346, 154.2466, 145.2399, 205.4416, 144.9038, 166.2525, 42.1356, 40.0982, 21.658, 15.66, 0.0, 179.8991, 2.7048, 106.7229, 137.2826, 180.077, 45.9464, 59.9648, 286.578, 156.338, 58.8735, 87.0778, 74.0749, 521.6254, 227.3638]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

