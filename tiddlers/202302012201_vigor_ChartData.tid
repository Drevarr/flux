created: 20230201220146000
creator: Drevarr
modified: 20230705163518565
modifier: drevarr
tags: ChartData
title: 202302012201_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Gravlyn Isshtail", "Arriasa", "\u00c9\u00efbhear", "Newtype Khan", "Mac Aaroni", "Drevarr In A Teacup"];
const professions = ["Vindicator", "Spellbreaker", "Druid", "Scrapper", "Spellbreaker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.2189, 173.4174, 87.696, 49.801, 39.2902, 0.0, 2.1149, 103.1318, 24.4181, 11.517, 12.2097, 33.7028, 34.9978, 29.1501, 10.5213, 20.2666, 7.7244, 57.9531, 19.3424, 15.4753, 3.2462, 16.3098, 82.251], [0.0, 429.1444, 172.1904, 124.3546, 101.2066, 28.6141, 0.0], [79.3957, 143.6998, 154.9992, 79.5379, 80.1601, 0.0, 0.0, 78.937, 85.4968, 82.4178, 0.0, 72.1917, 0.0, 0.0, 0.0, 79.6536, 2.036, 0.0, 0.0, 0.0, 0.0], [0.0, 357.9788, 113.1696, 133.3517, 68.3374, 39.2307, 13.3132, 159.2035, 0.0, 10.7016, 18.0959, 30.4095, 88.5273, 109.4562, 34.3882, 34.2835, 21.0465, 88.3338, 5.4384, 18.4506, 4.163, 35.7856, 147.4024], [51.3099, 457.6889, 192.3744, 166.4256, 133.1075, 41.489, 171.505, 0.0, 116.4946, 73.3745, 131.475, 134.4619, 94.0653, 37.0401, 26.6054, 0.0, 118.255, 0.0, 61.341, 38.5577, 80.9414, 234.704], [107.4815, 1348.8235, 517.3368, 311.0131, 232.2247, 173.2404, 38.6127, 545.5546, 124.9474, 215.4334, 135.3844, 140.8416, 27.5243, 30.7377, 0.0, 0.0, 30.6093, 32.1167, 68.8771, 7.303, 0.0, 5.4046, 78.7878], [212.9942, 1423.7038, 546.012, 295.7222, 311.9262, 180.1667, 40.7163, 577.5955, 197.532, 139.2227, 162.1058, 196.2715, 400.8945, 255.339, 158.0348, 182.5181, 44.9604, 391.6302, 142.4424, 113.447, 76.7932, 131.8535, 587.6617]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

