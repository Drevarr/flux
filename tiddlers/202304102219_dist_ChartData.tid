created: 20230410221909000
creator: Drevarr
modified: 20230705163525156
modifier: drevarr
tags: ChartData
title: 202304102219_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Tribal S", "Jeckyll Mbs", "Asorlia", "Grasszanine", "Sygaldry Verdandi", "Newtype Khan", "Zadie Miststep", "Eibh\u00ebar", "Xanvias Einzbern", "Johosh The Great", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Weaver", "Druid", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[246, 331, 353, 276, 467, 703, 308, 669, 872, 336, 416, 801, 528, 462, 390, 1980, 335, 1236, 3611, 14178, 480], [303, 305, 292, 244, 270, 271, 337, 754, 501, 305, 326, 350, 284, 238, 2011, 370, 3131, 3450, 17660, 1063], [396, 235, 15500, 12665, 525, 203, 174, 362, 1436, 673, 351, 515, 224, 6119, 269, 1731, 237, 623, 11269, 2650], [502, 319, 426, 384, 499, 668, 257, 576, 731, 347, 320, 405, 490, 2499, 822, 222, 3143, 796, 1325, 436], [365, 374, 292, 270, 468, 264, 701, 1122, 235, 743, 358, 300, 209, 1674, 221, 4142, 3463, 1790, 285], [408, 365, 7378, 241, 691, 356, 201, 802, 449, 434, 283, 349, 257, 1721, 243, 817, 709, 1222, 234], [250, 281, 310, 7368, 301, 212, 216, 292, 797, 646, 360, 271, 287, 442, 345, 1786, 331, 5177, 3444, 378, 452], [443, 226, 292, 255, 366, 219, 193, 383, 602, 279, 303, 267, 377, 237, 1677, 272, 1522, 5331, 1188, 274], [1334, 363, 354, 241, 313, 209, 152, 309, 1408, 459, 322, 289, 260, 13371, 224, 4251, 249, 3067, 3266, 1195, 232], [295, 250, 226, 423, 239, 182, 254, 251, 491, 403, 220, 257, 260, 277, 206, 1035, 229, 2344, 3429, 5422, 274], [242, 248, 354, 368, 251, 179, 158, 342, 460, 348, 298, 316, 232, 277, 197, 1702, 198, 3009, 1613, 1266, 360], [875, 241, 285, 201, 265, 167, 154, 184, 473, 442, 241, 268, 220, 341, 160, 1646, 215, 3055, 3323, 1270, 237], [201, 194, 230, 173, 263, 147, 141, 310, 378, 237, 236, 260, 252, 205, 199, 901, 225, 2680, 2105, 1135, 258]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

