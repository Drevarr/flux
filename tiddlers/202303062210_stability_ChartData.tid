created: 20230306221045000
creator: Drevarr
modified: 20230705163521397
modifier: drevarr
tags: ChartData
title: 202303062210_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Raziel Umbra", "Smol Gluvs", "Estryl", "Cerys Fireblade", "Veron Blackburn", "Husky Guard", "Smol Daddy Tika", "Xanvias Tseli", "Arcanophage Farra", "Mistwalker Caelon", "Raelyn Sunray", "Ace Hammers", "Ark Darkness", "Xyntharos", "Blanco Padre Guard", "Kahless The Drunk", "Ryvalia Fazebringer", "Viral Marketing", "Zaylen Harker", "Sygaldry Verdandi", "Ravioli Fetabringer", "Bella Sassy", "Koralia Danai"];
const professions = ["Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Berserker", "Herald", "Dragonhunter", "Berserker", "Berserker", "Spellbreaker", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.7909, 0.0, 0.0, 1.8346, 0.0, 0.0, 1.6173, 0.0, 1.1544, 0.5929, 0.0, 2.1168, 2.219, 2.7273, 2.5509, 0.1455, 0.9403, 0.0, 1.6057, 0.2486, 4.2336, 0.0, 0.0, 2.7254, 0.0, 1.8076, 0.0, 0.4118, 0.5184, 2.5334, 4.0796, 1.1689, 1.9099, 0.6156, 0.7525], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.3456, 0.0, 0.0, 11.1422, 1.5566, 11.7786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.7135, 1.5915, 0.0, 2.0066, 0.0, 0.0, 2.0981, 0.0, 0.4469, 1.6008, 0.0, 2.352, 0.4315, 2.3716, 3.625, 0.0, 1.6332, 0.0, 1.1628, 0.4973, 4.7981, 0.0, 0.0, 3.0461, 1.0378, 1.0496, 0.0, 0.7114, 1.1059, 5.4566, 3.3511, 1.5585, 0.7162, 1.5048, 0.5268], [1.9771, 1.2074, 0.0, 2.2359, 0.8305, 3.2017, 3.2894, 0.0, 1.3857, 0.0, 3.4329, 0.7459, 5.3626, 0.0, 4.5691, 0.0, 3.1487, 0.0, 1.6099, 1.1405, 3.6053, 2.6955, 0.2226, 2.6261, 2.394, 1.505], [3.8225, 3.4026, 0.0, 1.6052, 0.0, 0.0, 1.0053, 1.029, 1.862, 2.4309, 0.9957, 1.0192, 0.678, 1.5415, 2.1482, 0.7276, 0.5444, 0.8859, 1.9536, 5.2214, 0.0, 2.5651, 0.361, 0.2332, 0.0, 1.872, 0.6912, 1.9488, 2.9868, 3.4509, 1.8303, 2.5308, 1.5803], [0.0, 6.4229, 2.735, 28.9296, 0.0, 11.3827, 1.8048], [3.1634, 1.2622, 0.0, 2.6945, 0.0, 0.0, 2.4478, 1.6979, 2.7558, 2.3716, 0.0, 2.744, 1.4177, 2.6088, 2.6852, 1.1642, 2.227, 0.0, 2.4916, 1.3498, 3.3869, 0.0, 3.3667, 0.8122, 3.0321, 0.0, 1.1232, 1.5206, 2.2411, 2.2584, 1.0019, 1.9099, 1.4364, 0.8277], [3.9543, 3.8965, 0.1479, 2.0066, 0.0, 0.2574, 1.7047, 1.029, 0.0372, 2.5495, 0.9957, 2.6656, 0.6164, 0.2372, 3.4236, 1.0672, 1.4352, 2.8239, 0.959, 5.5037, 0.529, 1.129, 2.9659, 1.1054, 2.8572, 0.0, 0.8986, 1.0714, 3.6053, 1.8213, 2.1151, 1.7508, 2.3256, 1.204], [4.4815, 3.3477, 0.0, 2.9812, 0.0, 0.2445, 1.2676, 1.7493, 1.862, 1.1265, 0.0, 2.352, 1.7567, 3.9724, 2.6852, 2.4255, 1.5342, 0.0, 1.052, 1.776, 4.9392, 0.0, 1.386, 3.7675, 0.7896, 3.3237, 1.8346, 0.9331, 4.9694, 3.6425, 2.0594, 3.8198, 3.2148, 3.1605], [5.1406, 6.2014, 0.0, 2.3505, 0.0, 0.6119, 2.1609, 2.942, 2.4902, 0.0, 3.9984, 0.9246, 4.7432, 4.5648, 1.4068, 2.0786, 1.2181, 1.0301, 5.7859, 0.0, 4.4088, 2.1432, 4.4316, 0.0, 2.9952, 1.417, 7.5029, 6.9207, 2.5604, 1.9099, 4.2408, 1.806], [7.9086, 0.933, 0.0, 1.7199, 0.0, 0.0, 0.6994, 0.0, 3.9847, 5.8104, 0.0, 3.92, 2.5889, 3.9724, 5.4375, 1.3098, 1.3362, 0.0, 3.8205, 0.6038, 7.4794, 1.2768, 0.0, 5.1302, 0.4061, 5.3062, 0.5765, 4.0435, 2.8685, 5.2618, 3.8611, 2.449, 4.5361, 5.1984, 2.8595], [11.2058, 12.889, 10.2356, 0.9403, 0.0313, 5.7585, 2.9482, 20.7446, 0.3648, 0.2621, 14.7494, 2.5718, 9.5045, 0.0, 8.2368, 3.2832, 13.1544], [14.8945, 7.8478, 3.5871, 4.1278, 2.8028, 1.5058, 3.5405, 2.6239, 0.3352, 3.6167, 10.3302, 8.3104, 1.2328, 2.5495, 0.0671, 1.3583, 2.623, 0.0, 6.7551, 1.1011, 4.9392, 0.0, 0.0, 0.0, 1.7371, 1.0496, 0.0, 2.808, 7.0502, 12.7646, 5.5366, 3.5066, 5.4114, 4.5828, 3.9882], [12.7856, 2.3598, 0.0, 4.8157, 0.0, 6.2936, 5.1582, 0.0, 5.6448, 5.7942, 10.9687, 9.8681, 3.3472, 5.6419, 7.2535, 4.6531, 17.3578, 0.0, 13.3066, 0.6994, 9.8544, 0.0, 7.4131], [4.2179, 1.372, 0.0, 3.0958, 0.0, 1.9434, 5.7697, 7.6661, 2.4951, 4.1503, 5.2273, 4.704, 1.7876, 4.6839, 2.6181, 5.2391, 1.1878, 5.1494, 0.2131, 13.6886, 1.2586, 4.489, 0.0, 3.9068, 0.0, 6.4397, 3.3869, 16.4674, 4.881, 6.5679, 9.6292, 1.7784, 5.5685], [10.9402, 8.0674, 0.0, 5.9623, 0.0, 0.0, 6.1631, 0.0, 5.6232, 10.4943, 0.0, 10.5056, 7.5201, 12.0952, 14.2316, 8.5863, 5.1964, 3.7062, 2.4363, 3.9427, 17.3578, 16.3526, 1.6469, 9.0381, 1.6065, 7.6752, 5.5987, 1.0718, 10.3447, 3.0613, 6.2072, 7.6608, 10.9112], [11.8629, 10.8662, 0.0, 8.5422, 0.2372, 0.5405, 5.5512, 4.9392, 4.8412, 9.9607, 0.7468, 6.5072, 4.3456, 10.7908, 11.0764, 5.0935, 5.2954, 7.475, 3.7651, 15.8054, 0.2006, 0.509, 11.9438, 2.7523, 7.9885, 0.5103, 6.215, 3.0758, 15.7853, 11.4375, 4.2858, 6.2072, 10.8756, 6.321], [11.3357, 3.2379, 0.074, 6.3636, 0.0, 0.0, 9.4414, 1.9037, 1.7875, 8.7749, 0.0, 9.8, 8.9378, 7.7077, 11.9491, 5.3361, 3.6623, 4.9833, 1.6339, 18.6278, 0.0, 0.0, 8.7374, 1.8274, 13.2947, 1.89, 8.7984, 3.767, 19.1957, 12.5302, 6.5679, 7.8784, 10.4652, 9.2557], [9.6221, 11.7992, 0.0, 11.1794, 0.0, 0.0644, 8.1738, 2.6239, 7.7832, 11.9766, 0.0, 9.8, 7.7975, 13.5181, 9.5325, 3.5412, 4.85, 0.1148, 7.1981, 4.7242, 22.1558, 0.1186, 14.1883, 2.1206, 12.1868, 0.1795, 5.2416, 3.8362, 13.4467, 17.7025, 2.2264, 8.6742, 6.4296, 6.622], [9.6221, 6.6954, 8.4275, 0.0, 3.1531, 6.5565, 10.4444, 6.5915, 7.8263, 6.0985, 12.3088, 5.6401, 11.0872, 10.8079, 5.8697, 8.3143, 1.1171, 8.8038, 3.1613, 19.6157, 0.2006, 0.3427, 12.8256, 2.9328, 11.3704, 2.6366, 5.6909, 3.6288, 15.9802, 12.9673, 9.8518, 5.0931, 13.2696, 7.7507], [13.4446, 12.348, 0.906, 10.7207, 0.1725, 1.7374, 7.3433, 3.6015, 6.1818, 7.4705, 0.809, 10.0352, 8.8453, 12.3323, 13.0904, 5.045, 7.1761, 0.0, 6.6998, 6.0029, 24.8371, 0.2736, 0.2873, 18.3566, 3.0456, 9.5045, 0.0662, 9.1728, 2.5229, 12.4723, 17.0469, 6.5679, 7.7988, 10.6704, 6.7725], [17.5307, 8.3966, 0.0, 7.5102, 0.0, 1.0939, 10.0533, 4.579, 5.2136, 9.1899, 0.5601, 14.9744, 9.1535, 13.1624, 14.5672, 8.3922, 7.7204, 11.9599, 4.5821, 15.8054, 0.9211, 0.1613, 11.7835, 3.4066, 13.353, 3.6193, 6.6643, 4.873, 15.5904, 13.2587, 4.6754, 9.3904, 8.4132, 6.5467], [21.8805, 9.3296, 0.0, 11.0647, 0.0, 1.5959, 9.0043, 4.8878, 7.4852, 9.0121, 0.4978, 12.0736, 7.6125, 13.8739, 16.3126, 10.1386, 1.3857, 10.1881, 3.0547, 23.0026, 0.4378, 19.7194, 2.7974, 11.1372, 0.3213, 10.1088, 3.6288, 15.5904, 12.8944, 7.0688, 15.1202, 11.2176, 15.652], [29.5254, 12.9517, 10.95, 1.4014, 9.9659, 8.9523, 4.3943, 14.4075, 7.4054, 14.5824, 6.842, 14.4075, 19.1992, 11.8849, 11.3827, 7.5857, 7.2106, 19.8979, 0.1915, 20.521, 4.512, 16.3268, 8.2368, 4.3546, 19.6829, 24.4776, 7.5141, 16.7118, 9.9864, 10.1588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

