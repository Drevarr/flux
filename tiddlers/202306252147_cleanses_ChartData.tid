created: 20230625214748000
creator: Drevarr
modified: 20230705163536228
modifier: drevarr
tags: ChartData
title: 202306252147_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Ephrem Rowf", "Primal Clone", "Seiker Novus Terra", "Sakis Ranger", "Tegan Parker", "Drevarr Moonwillow", "Arriasa", "Elonith Primal", "Tribal S"];
const professions = ["Chronomancer", "Scrapper", "Chronomancer", "Tempest", "Druid", "Tempest", "Scrapper", "Druid", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1566, 0.1485, 0.1807, 0.0, 0.1763, 0.0888, 0.1717, 0.1521, 0.0876, 0.0078, 0.0182, 0.1118, 0.0, 0.0], [0.0, 0.0784, 0.0182, 0.6807, 0.0, 0.0], [0.0917, 0.1867, 0.2916, 0.2396, 0.0, 0.0353, 0.0, 0.2917, 0.0, 0.0678], [0.6126, 0.6436, 0.3494, 0.5556, 0.535, 0.5592, 0.7756, 0.6637, 0.5991], [0.3516, 0.8911, 0.5, 0.2222, 0.4924, 0.5089, 0.8238, 0.6977, 0.9493, 0.0, 0.0863, 0.0364, 0.7576, 0.0588, 0.0], [0.6511, 0.6139, 0.4819, 0.1333, 0.7477, 0.6006, 0.7259, 0.8927, 0.682, 0.0, 0.0902, 0.0182, 0.8462, 0.0, 0.0], [0.8352, 0.6337, 1.0181, 0.6889, 0.8906, 0.8846, 1.0572, 1.1968, 0.9954, 0.2239, 0.3294, 0.2, 1.1524, 0.2647, 0.8305], [1.2115, 0.6238, 0.8976, 0.2667, 0.766, 1.0296, 1.0452, 1.1968, 0.9862, 0.0299, 0.1137, 0.1455, 1.2758, 0.3529, 0.0847], [1.0962, 1.1386, 0.8614, 0.3111, 1.0547, 0.8905, 1.0497, 1.3757, 1.0415, 0.0299, 0.1804, 0.0909, 1.2192, 0.0588], [1.2555, 0.8218, 0.9819, 0.2889, 0.924, 0.9793, 1.2018, 1.449, 0.9954, 0.0, 0.2471, 0.0909, 1.4354, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

