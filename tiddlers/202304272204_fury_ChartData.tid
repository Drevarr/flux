created: 20230427220456000
creator: Drevarr
modified: 20230705163526995
modifier: drevarr
tags: ChartData
title: 202304272204_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Skye Nightroad", "Mac Aaroni", "Zadie Miststep", "Abserns Sorcerer", "Malfax Jinn", "Xkaet", "Puny Tinker", "Rylov", "Bell Delinger", "Binkety Bonk", "Rhyce", "Xanvias Tlesia", "Mistwalker Caelon", "Clem Storage Xviii", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Tempest", "Tempest", "Weaver", "Firebrand", "Tempest", "Scrapper", "Catalyst", "Scrapper", "Scrapper", "Herald", "Daredevil", "Herald", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[150.2358, 38.1578, 15.984, 37.7849, 28.1649, 99.4653, 161.1139], [64.6074, 0.0, 0.0, 6.2103, 0.0, 31.212, 7.9015, 47.2668, 31.5689, 52.6403, 30.6268, 47.4547, 123.9898, 16.9371, 21.6049, 30.4589, 70.7616, 8.432], [90.2616, 0.0, 25.92, 41.2411, 0.0, 31.5333, 64.6576, 47.9808, 23.4158, 52.8898, 21.4463, 26.533, 107.7466, 17.9334, 31.359, 0.0, 22.9824], [39.8395, 295.7616, 49.4262, 45.3977, 71.6208, 147.3293, 29.0822], [88.774, 45.5952, 0.0, 23.7188, 38.076, 427.4669, 0.0, 15.2237, 123.0615, 74.7533, 0.0], [23.2034, 36.3456, 87.5084, 9.8552, 36.5823, 3.758, 44.1252, 31.8007, 143.6173, 39.6417, 32.4648, 233.9021, 37.0818, 12.7168, 52.6194, 14.999, 3.9712], [22.4885, 230.8522, 53.4125, 89.2181, 245.8138, 74.601, 40.9308, 65.9629, 43.1827, 6.0928], [109.9084, 119.359, 235.6754, 28.4294, 70.4606, 257.3194, 28.3581, 51.9612, 88.9721, 16.3296, 18.2784], [0.0, 174.9776, 147.4502, 363.4092, 55.6097, 147.9754, 444.2515, 85.5603, 0.0, 59.1732], [39.2196, 382.7023, 57.8221, 95.8714, 548.7494, 50.0094, 183.7786, 139.3754, 163.0541, 64.0614], [53.7581, 186.4794, 564.4323, 655.7298, 217.532, 60.9353, 0.0, 0.0, 28.3095], [331.8744, 191.9952, 15.5232, 112.914, 136.6912, 185.5278, 416.3716, 130.186, 17.7358, 241.9124, 48.6717, 89.3784, 357.4858, 34.5303, 25.9806, 21.7833, 10.2816, 11.4893], [249.8496, 625.8175, 165.672, 50.0126, 172.9008, 424.6209, 741.5866], [0.0, 256.4688, 131.1828, 540.9558, 88.0274, 292.584, 727.4246, 157.0266, 144.4886, 169.9286, 110.5574, 71.6013], [759.6732, 257.4569, 107.8992, 133.7342, 145.1288, 212.7006, 590.3977, 324.2512, 234.6994, 427.5256, 68.1314, 251.4619, 770.3338, 163.1745, 97.4045, 257.3918, 399.8938, 35.5558]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

