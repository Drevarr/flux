created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Crabbedmermaid", "Oo Dads Mad", "Cat Wigglebooty", "Bee Nemesis", "Darks Na", "Belvyn Brightblade", "Ganbaatar Bloodwine", "Tootsie Pop Rocks", "Rozaalyna", "Hayuf", "Nose Llama", "Xanvias Tsolice", "Mistwalker Cael", "Keypek The Drunk", "Sister Elon\u00edth", "Tribal S", "Arriasa", "Rahani Sunray", "Zaedy Zae", "Gavann", "Raziel Umbra", "Elon Illusionblade", "Tegan Parker", "Koralia Danai", "Eibh\u00ebar", "Lucky Luprac\u00e1n", "Jimbo The Pleb", "Crusader Siolith", "Rafaellagabriela", "Drevarr Moonwillow", "Solus Luxes", "Bella Sassy", "Sub Train", "Arcanophage Farra", "Blancooo Padreee", "Newtype Khan"];
const professions = ["Scourge", "Firebrand", "Berserker", "Scrapper", "Berserker", "Dragonhunter", "Firebrand", "Berserker", "Scrapper", "Reaper", "Firebrand", "Tempest", "Weaver", "Vindicator", "Scrapper", "Firebrand", "Druid", "Druid", "Chronomancer", "Druid", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.2163, 7.2082, 1.4839, 3.8122, 11.9221, 5.1621, 6.0277, 3.3359], [22.36, 2.0649, 6.5934, 5.13, 12.2618], [9.335, 2.4128, 0.8748, 0.8086, 8.2354, 0.7164, 5.3352, 3.6515, 6.7183, 10.7568], [1.6886, 0.9048, 0.4795, 0.9242, 5.6498, 0.0, 0.4104, 0.0, 4.1719, 0.8964, 3.1005, 2.875, 6.1236, 1.5514, 0.0, 3.1216, 2.4235, 0.0, 1.575, 2.89, 1.0373, 1.225, 0.2574, 1.7061, 0.0, 1.6187, 1.2634, 0.0, 2.6057, 1.7483], [0.0, 0.0, 0.0, 0.0, 2.6334, 0.0, 0.0, 2.6419, 0.4959, 11.1611, 1.6434, 4.2453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5594, 7.6619, 1.7542, 1.7457, 0.0, 4.8204, 1.582, 0.0, 0.6317, 2.3462, 3.1208, 4.3231, 0.0], [0.2413, 0.2981, 0.7798, 2.0588, 2.7391, 0.405, 2.6676, 0.0, 3.8468, 1.4193, 2.0988, 1.0996, 3.2234, 6.3423, 6.2763, 0.9606, 3.3907, 3.4109, 1.7807, 2.2641, 0.4705, 0.0, 0.8855, 1.6896, 1.0998, 1.7371, 0.0, 1.5002, 0.0, 0.8648, 1.4805, 2.5988], [1.4337, 7.6606, 0.7063, 0.0, 13.5022, 4.0454, 3.7422, 1.0516, 5.2293, 5.6347, 17.3304], [0.0, 4.9846, 5.3784, 2.1465, 0.0, 0.0, 10.2789, 1.8335, 0.0, 4.5209, 0.0, 2.8345, 3.0516, 2.8228, 2.3423, 2.6818, 3.6749, 6.0606, 6.4832, 0.0, 2.6452, 2.5718, 0.8648, 5.0929, 3.969], [7.2004, 0.2714, 0.0, 0.0, 2.2982, 0.0, 0.2565, 1.127, 0.0, 0.8217, 2.3373, 0.0, 1.7134, 8.3106, 4.2312, 3.7552, 5.1667, 0.0, 1.6716, 5.365, 2.9572, 0.0, 1.9734, 6.695, 5.148, 3.4432, 0.0, 1.7371, 1.8499, 0.7708, 2.428, 3.6855], [2.0047, 6.3495, 7.2981, 1.9159, 4.1818, 9.4041, 4.1627, 7.5348, 3.2014, 1.7443, 5.7587, 6.5194, 3.7214, 1.8469, 4.4141, 3.9312, 3.04, 2.4103, 3.2768, 0.6317, 1.5228, 3.494], [9.6612, 2.7946, 5.7049, 12.7758, 0.0, 13.6339, 7.8636, 0.0, 2.6818, 9.0394, 0.0, 4.1257, 0.0, 6.8695, 8.0765, 0.9776, 1.214, 7.4182], [0.0, 13.1054, 13.1789, 28.665, 19.8528, 3.6445, 21.5561, 5.6851, 0.1316], [3.9506, 5.5494, 0.2916, 3.6966, 5.3626, 0.6742, 2.8188, 1.5903, 2.9753, 4.0093, 7.6941, 4.6269, 2.904, 11.3724, 5.9942, 1.3973, 5.7049, 1.7952, 2.7255, 3.5438, 6.5866, 2.8493, 0.8855, 3.9283, 1.755, 2.8228, 1.6843, 3.5137, 0.2707, 1.6544, 2.8426, 4.0635], [2.0709, 5.3986, 1.8922, 5.5161, 5.3147, 0.2528, 2.9808, 2.5137, 1.2622, 6.8809, 6.4989, 5.7717, 1.4494, 3.9204, 12.794, 8.6034, 1.3099, 4.79, 1.3464, 3.1252, 4.0853, 6.5194, 2.7784, 0.4807, 2.5978, 1.9656, 3.071, 0.9148, 6.3563, 0.2256, 2.0492, 3.3163, 5.9535], [11.2073, 21.4204, 4.3982, 10.5749, 10.8776, 12.5683, 4.1675, 9.9176, 7.3709, 4.8204, 9.4611, 2.2216, 9.3173, 2.5493, 5.4332, 2.2208, 16.821], [0.0, 11.4637, 9.0059, 10.3569, 19.5403, 20.7679, 5.9522, 8.8803, 7.561, 7.371, 7.817, 12.0019, 6.2266, 3.2524, 5.7147, 12.474], [5.7935, 2.3388, 8.5928, 6.2661, 17.9878, 3.8097, 16.4088, 3.1363, 7.3265, 7.6162, 0.0, 8.3421, 2.244, 1.5626, 8.1213, 13.442, 4.0256, 5.2371, 1.4784, 0.0, 5.3975, 1.3213, 6.7116, 3.9029, 2.4252, 3.6124, 9.6862], [6.4994, 7.2384, 1.5746, 6.729, 4.4528, 6.9742, 6.5664, 4.2826, 5.3096, 4.4073, 12.5928, 0.0, 3.5719, 6.4516, 26.3745, 0.0, 8.7188, 4.129, 0.218, 3.7407, 11.0224, 3.1119, 5.0054, 0.0, 8.1272, 0.0, 1.9345, 1.2859, 1.41, 3.0202, 11.0092], [2.9746, 10.5815, 4.0033, 2.9808, 4.4374, 2.0286, 5.5805, 8.964, 2.1465, 2.2491, 5.7499, 10.6069, 12.482, 4.9196, 5.1667, 3.7101, 2.4348, 9.7948, 13.8453, 6.2997, 5.0688, 1.7316, 10.9501, 0.9293, 9.4357, 4.9406, 3.572, 7.4617, 7.56], [1.7045, 13.9038, 1.5746, 1.0974, 4.3571, 9.018, 2.0007, 4.3728, 8.8855, 5.6772, 9.0153, 0.0, 0.9874, 13.0126, 12.341, 10.1885, 12.5401, 0.9574, 1.7807, 5.365, 4.5031, 0.0, 10.3477, 2.0064, 4.9374, 5.4285, 0.2759, 7.0274, 4.2864, 1.9364, 7.5506, 7.4182], [13.6937, 0.0, 4.3349, 1.5778, 12.2989, 13.6701, 6.4395, 1.1829, 1.1616, 21.9794, 22.0728, 4.9196, 13.9932, 5.2958, 4.8696, 7.8752, 18.6844, 3.1119, 10.7639, 6.909, 1.9627, 3.0268, 9.0014, 15.4035], [8.8578, 3.1605, 4.6008, 7.5667, 8.9258, 11.1611, 10.458, 12.2589, 2.4157, 8.5378, 14.6529, 13.0462, 2.7946, 9.257, 6.2234, 4.6152, 11.1237, 14.6518, 2.9812, 4.6552, 4.5619, 4.7736, 7.1036, 2.5555, 4.6192, 1.5566, 5.6964, 6.0404, 9.1192], [6.6424, 10.39, 7.8591, 1.4256, 5.4634, 4.7334, 7.1518, 7.9929, 13.1652, 1.616, 8.3635, 16.6212, 15.7965, 3.6387, 12.8092, 4.129, 9.5938, 13.0433, 9.275, 2.6567, 1.3662, 10.1125, 2.3087, 9.0409, 0.5189, 2.6696, 8.3796, 12.2378], [0.7328, 0.0, 2.2421, 3.7255, 16.5665, 0.0, 0.0, 4.9588, 7.2059, 29.2824, 3.2436, 0.0, 0.0, 22.3074, 18.2647, 1.6011, 5.4896, 2.6928, 15.3355, 21.4107, 7.9308, 0.0811, 11.132, 2.4499, 5.2884, 0.0, 0.0, 10.7386, 0.0, 0.0, 1.3028, 15.7815], [1.2744, 13.0894, 2.5726, 4.101, 6.1765, 2.2966, 4.3902, 1.6672, 5.9956, 9.3731, 21.9618, 4.8177, 5.9822, 34.2265, 11.5653, 3.6387, 10.7102, 12.4467, 5.9234, 10.287, 9.611, 0.0, 7.6406, 1.753, 3.2526, 3.164, 0.0, 7.6591, 1.8725, 3.8352, 2.5761, 6.9457], [4.4445, 6.3034, 2.6762, 5.8626, 10.773, 1.6224, 8.285, 4.2826, 8.2895, 11.205, 14.5962, 3.1154, 8.712, 15.8558, 14.8092, 4.8323, 12.4324, 3.381, 7.377, 9.844, 12.9715, 1.7948, 5.6925, 6.8851, 2.4102, 8.3444, 2.8314, 5.922, 0.564, 4.0796, 5.4482, 11.1037], [3.0035, 10.8688, 4.3826, 2.9808, 6.3612, 7.4382, 15.2788, 7.47, 15.5502, 1.8992, 6.4178, 21.3233, 22.5664, 2.7654, 12.5939, 3.7101, 9.7755, 10.7792, 21.8433, 6.8816, 7.1808, 1.7784, 7.1966, 1.1326, 10.0674, 2.1206, 2.7636, 8.0835], [13.5447, 13.9331, 2.7391, 3.4506, 5.7969, 1.668, 14.1952, 13.6701, 8.8245, 2.6656, 8.741, 22.8541, 15.7965, 7.6559, 9.1494, 1.7653, 11.9195, 13.5355, 9.9471, 1.5311, 10.5248, 12.9043, 2.4804, 13.5247, 1.6988, 5.2508, 12.1373, 1.9928, 9.2383, 10.017], [3.8391, 14.2054, 3.4409, 4.563, 14.6513, 1.8331, 1.3446, 14.7744, 10.143, 10.0775, 24.9498, 13.4991, 0.0, 12.1968, 26.0253, 20.3098, 1.1935, 22.6044, 19.5677, 4.5062, 16.4887, 12.5011, 2.7784, 4.1745, 6.6528, 3.276, 4.4359, 16.3447, 4.6474, 3.7224, 4.0862, 4.914], [4.3862, 10.4586, 22.4305, 22.4847, 11.7819, 0.0, 5.6628, 23.2916, 31.0288, 0.0, 36.0056, 12.4467, 14.0636, 22.8381, 19.4237, 4.5529, 11.7392, 6.3571, 6.6924, 8.4374, 0.0, 20.2138, 3.948, 2.538, 1.7766, 17.6715], [9.7173, 15.7435, 0.2333, 8.0575, 19.2478, 7.4166, 1.3608, 8.7467, 6.3112, 16.254, 20.3931, 10.3509, 1.566, 11.0062, 46.4738, 33.638, 9.9556, 16.5227, 15.1994, 8.2492, 24.2162, 12.0306, 4.9078, 9.867, 8.089, 3.627, 8.4374, 0.9583, 9.791, 3.7224, 0.8836, 6.603, 12.6158], [7.4552, 17.4626, 3.5705, 18.0789, 19.3435, 4.0876, 5.1354, 3.6679, 11.1348, 15.7664, 16.2846, 20.2248, 1.5161, 16.6109, 50.6291, 30.1826, 2.125, 15.8231, 14.4514, 5.4147, 12.9941, 9.611, 9.5113, 10.8031, 3.7805, 9.828, 4.2187, 5.1256, 10.1858, 6.5424, 1.1844, 8.35, 17.577], [3.2179, 21.6247, 3.0586, 2.5703, 21.0193, 8.6387, 4.7952, 1.8981, 7.7538, 15.1704, 23.3064, 21.9897, 2.8822, 12.1968, 43.0839, 38.786, 1.2517, 15.8769, 19.6275, 13.4821, 15.652, 14.3157, 5.4249, 9.7911, 4.7731, 15.7248, 4.684, 2.4539, 15.1603, 8.46, 1.786, 4.3527, 20.6482], [8.2836, 23.5851, 7.7306, 7.22, 15.7525, 5.415, 4.9572, 16.9803, 12.4872, 26.1148, 16.434, 13.6422, 0.0, 14.491, 37.179, 12.6936, 7.8306, 19.1599, 6.6123, 15.0084, 17.2762, 14.9206, 11.0308, 4.2662, 7.3476, 19.3255, 0.0, 12.752, 13.0622, 5.6964, 9.2087, 19.4198], [33.5008, 43.475, 15.0861, 14.823, 27.2916, 20.286, 42.3146, 26.892, 41.3559, 4.4482, 26.3974, 78.6226, 63.2564, 34.8754, 21.6621, 22.5671, 40.3604, 32.7985, 7.3008, 14.0162, 18.1421, 13.0338, 16.8128, 3.6736, 18.1213, 14.1902, 8.4976, 21.1415, 35.4375], [22.5887, 29.4362, 6.979, 22.1798, 47.6885, 16.4135, 24.9062, 15.2821, 39.4972, 44.82, 34.2963, 7.3137, 21.1702, 80.7003, 56.275, 29.1704, 33.8395, 19.9143, 26.3327, 29.7068, 12.8474, 14.168, 19.6627, 20.8026, 17.6504, 10.7448, 11.5282, 6.971, 8.0464, 14.9827, 43.5645], [14.0981, 25.3646, 10.705, 21.0535, 58.8445, 17.7199, 12.2634, 19.9301, 26.1464, 45.1861, 57.0708, 40.1157, 7.6969, 24.6259, 80.8096, 60.9998, 23.4336, 50.3755, 28.2146, 15.5172, 40.5573, 42.2079, 10.0792, 22.6688, 18.1632, 6.9498, 26.2429, 5.2998, 22.8589, 11.4154, 3.2524, 18.4174, 42.8558]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

