created: 20230513000456000
creator: Drevarr
modified: 20230705163529660
modifier: drevarr
tags: ChartData
title: 202305130004_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Husky Guard", "Drevarr Moonwillow", "Venomina The Techie", "Sumatra Satyricon", "Aronorf Xideliesi", "Jeckyll Mbs", "Ark Darkness", "Nazhul Naxxremis", "Solus Sanctus", "Miphest\u00f6", "Lord Erin The Wise", "Cedryn X", "Tika Fiery", "Demon Dalham", "Mike The Archmagus", "Spreadflamesoflight", "Cerys Fireblade", "Hauzzy", "Panther B Me", "Rina Of Theros", "Smol Gluvs", "Xanvias Einzbern", "Be\u00eb"];
const professions = ["Chronomancer", "Dragonhunter", "Scrapper", "Scrapper", "Soulbeast", "Firebrand", "Berserker", "Firebrand", "Scourge", "Firebrand", "Tempest", "Weaver", "Berserker", "Firebrand", "Dragonhunter", "Weaver", "Willbender", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.75, 7.2679, 20.7493, 8.7041, 4.938, 7.1751, 4.2593, 39.9032, 31.4083, 3.2857, 9.9032, 0.0, 33.0703, 1.6957, 15.1449, 17.024, 18.1667, 0.2222, 8.708, 0.0, 25.6848, 15.7041, 2.9091, 41.8947, 0.0, 6.119, 22.5645], [1.5833, 28.4643, 5.9045, 12.3985, 0.0, 10.3955, 0.0, 2.0, 31.3417, 29.5484, 37.9141, 0.0, 7.8261, 20.552, 20.1786, 0.0, 45.7153, 17.2778, 5.5543, 0.0, 12.2959, 0.0, 23.2456, 6.1207, 0.0, 0.7581], [46.0556, 3.8988, 15.3015, 10.75, 8.8682, 20.1921, 39.1111, 16.2581, 19.25, 21.8095, 5.8387, 0.0, 24.8594, 0.0, 33.5942, 6.792, 20.7738, 9.8889, 29.1168, 0.0, 6.6522, 0.2444, 13.2551, 0.0, 9.7456, 28.0862, 1.1429, 14.5645], [13.4444, 45.875, 8.0806, 10.012, 8.7907, 10.2429, 60.5185, 7.3226, 47.0, 17.9677, 26.9062, 0.0, 8.8841, 22.936, 14.6548, 0.0, 24.5182, 45.0278, 7.6957, 17.9333, 48.7449, 22.4545, 2.5088, 56.5345, 2.5161], [37.6389, 15.4583, 47.5224, 17.8799, 0.0, 18.6045, 18.5185, 4.3871, 0.0167, 96.4762, 0.0, 0.0, 7.1328, 67.4348, 7.952, 15.9345, 0.0444, 0.0, 0.0, 58.1957, 4.0444, 26.2245, 0.0, 17.2632, 5.0, 0.0], [8.2639, 3.9821, 12.1493, 13.9236, 0.0, 25.2316, 108.0, 12.1613, 46.8167, 168.9032, 61.1953, 64.1449, 9.504, 26.1726, 6.6667, 28.4015, 0.0, 7.163, 35.4222, 19.0204, 0.0, 29.1667, 46.2931, 0.0], [29.5417, 0.0, 43.4209, 31.6834, 0.1356, 0.1111, 13.3548, 0.6833, 2.6429, 2.0323, 12.0625, 0.0, 6.4048, 0.1111, 34.4307, 18.5278, 44.75, 0.0, 49.8163, 0.0, 52.2018, 1.2586, 0.0, 1.0161], [19.1944, 14.6726, 18.006, 29.3384, 11.0543, 14.9492, 154.963, 185.6129, 67.0667, 0.0, 163.8065, 10.6172, 0.0, 26.2174, 5.568, 9.6607, 0.0, 24.8029], [24.9444, 26.1726, 115.2, 8.7806, 94.0698, 52.548, 3.6667], [10.0, 3.5655, 29.0119, 12.6081, 4.7674, 17.5028, 0.0, 29.7419, 43.5583, 178.9048, 82.871, 39.8261, 15.4062, 12.5652, 108.1884, 12.928, 19.2083, 0.0, 0.7226, 0.0, 54.5109, 36.4694, 0.0, 16.0614, 169.0862, 47.881, 130.8548], [28.0417, 1.0714, 20.609, 7.1386, 1.7752, 25.1808, 0.0, 52.871, 56.525, 394.8333, 23.0968, 74.0859, 17.913, 65.664, 28.8929, 28.0222, 24.5912, 16.1944, 13.5217, 8.7333, 26.2041, 0.0, 12.9474, 0.0, 2.7381, 175.1129], [11.6667, 7.0536, 30.4239, 25.452, 16.6512, 31.3842, 0.0, 110.6129, 109.1583, 16.9048, 15.7742, 0.0, 81.5938, 0.0, 26.942, 67.872, 58.6667, 0.0, 5.1387, 0.0, 53.4457, 19.3571], [5.8056, 2.5, 39.6746, 29.5, 0.031, 34.4011, 26.2222, 32.2258, 12.5083, 167.2857, 23.8387, 0.0, 14.6094, 0.0, 17.3478, 77.28, 32.4881, 0.0, 3.9708, 63.5, 3.8, 88.7653, 5.0909, 146.5175, 0.0, 0.2143, 6.5], [4.0694, 0.7202, 25.9642, 45.4181, 5.0853, 37.0904, 19.5185, 6.0645, 84.1583, 21.0238, 0.0, 28.7826, 24.3594, 0.0, 14.4928, 43.496, 40.6488, 0.0, 52.4745, 0.0, 0.0, 0.0, 88.7653, 0.0, 4.1053, 0.0, 57.9286, 119.5484], [13.3611, 44.494, 103.8418, 55.167, 19.8062, 45.339, 67.0741, 31.4516, 114.1917, 101.5484, 8.087, 27.125, 29.3913, 20.0435, 71.648, 53.3393, 0.0, 53.4964, 0.0, 11.3152, 10.4889, 45.5918, 15.1364, 67.0877, 0.0, 19.4762, 60.4355], [16.4167, 14.4048, 58.0657, 70.3373, 17.3226, 0.0, 87.5625, 117.2174, 53.8696, 117.104, 41.8452, 0.0, 92.8686, 1.25, 53.163, 128.2959, 36.5, 73.3333, 6.7931, 0.0, 108.7258], [73.7222, 75.2202, 189.2299, 65.2937, 0.0, 81.4463, 180.2963, 174.0968, 108.8083, 0.0], [21.4583, 11.6607, 89.3075, 61.0491, 20.5116, 51.791, 36.6296, 46.129, 67.6333, 269.0645, 54.029, 147.752, 36.631, 0.0, 160.9927, 0.0, 15.8913, 15.8444, 80.0816, 0.0, 119.2544, 0.0, 38.0714, 77.371], [79.8194, 56.8869, 69.3015, 124.2238, 120.7752, 33.8418, 36.8889, 62.4839, 0.475, 1.3095, 0.8696, 255.5859, 0.0, 14.1449, 232.496], [24.0556, 0.0, 96.3761, 100.5469, 44.938, 49.0395, 53.4444, 52.0, 183.25, 0.0, 16.2258, 151.5469, 51.2609, 22.8696, 115.016, 53.869, 31.8, 100.4015, 0.0, 83.6957, 0.8, 46.7245, 66.9091, 83.8509, 0.0, 22.9524, 129.2581], [75.5833, 40.8869, 84.9045, 86.1441, 0.0, 120.5028, 109.1111, 155.0, 346.2417, 45.7619, 86.5161, 0.0, 206.25, 0.1739, 89.913, 148.744, 104.0417, 22.1778, 99.5255, 0.0, 27.2717, 36.9333, 64.2041, 45.5, 202.8947, 0.0, 17.5, 72.0645], [62.0972, 12.0893, 97.5045, 67.5579, 39.4651, 98.6949, 29.963, 89.3226, 711.5083, 67.9286, 48.3871, 176.0781, 0.0, 12.5652, 190.68, 225.2202, 4.7778, 19.5547, 0.0, 28.0, 22.2, 41.5204, 54.3636, 109.2193, 6.3103, 6.5, 86.8065], [58.4306, 23.0655, 60.4806, 108.8177, 142.6589, 94.4068, 47.3333, 107.4839, 317.5167, 95.6129, 157.75, 0.0, 40.6087, 166.32, 98.8214, 7.5333, 340.2701, 0.0, 75.1739, 4.2, 160.4592, 12.9091, 106.0702, 0.0, 5.5238, 0.0], [96.9167, 20.2976, 213.9284, 140.4345, 48.8217, 77.3503, 26.2593, 28.0968, 563.375, 163.3548, 0.087, 198.3281, 0.0, 14.0725, 273.24, 94.4226, 0.0, 254.4453, 0.0, 9.5326, 3.2, 170.9184, 3.5, 185.7368, 0.2759, 1.6905]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

