created: 20230625214748000
creator: Drevarr
modified: 20230705163536467
modifier: drevarr
tags: ChartData
title: 202306252147_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tsolice", "Oo Dads Mad", "Newtype Khan", "Tacitus Kilgore I", "Ateriuz", "Seiker Novus Terra", "Ephrem Rowf", "Mort\u00e4rion", "Sakis Ranger", "Grasszanine", "Tegan Parker", "K\u00f4sair", "Blancooo Padreee", "Riann Swordbreak", "Elonith Primal", "Drevarr Moonwillow"];
const professions = ["Weaver", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Scrapper", "Druid", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Berserker", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.244, 0.248, 0.15, 0, 0.152, 0, 0.066, 0.085, 0, 0, 0.098, 0, 0.13, 0, 0], [0.484, 0.409, 0.239, 0, 0.253, 0.258, 0.229], [0.343, 0.785, 0.512, 0, 0.158, 0.116, 0.123, 0.235, 0, 0, 0, 0, 0.174, 0, 0], [0.545, 0.579, 0.675, 0, 0, 0.392, 0, 0.903], [0.475, 0.393, 0.06, 0, 0.223, 0, 0.222, 0.219, 0, 0, 0, 0, 0.405, 0, 0], [0.14, 0.526, 0.45, 0, 0.456, 0.346, 0.281, 0.265, 0.43], [0, 0.538, 0.431, 1.522, 0.406, 0.405], [0.656, 0.217, 0.789, 0, 0.718, 0.287, 0.6, 0.376], [0.371, 0.484, 0.417, 0.521, 0.363, 0.363, 0.39, 0.416, 0.345, 0, 0.098, 0, 0.438, 0, 0], [0.687, 1.25, 0.761, 1.081, 0.402, 0.323, 0.288, 0.292, 0.433, 0.339, 0.163, 0, 0.383, 0, 0.771], [0.539, 0.453, 0.452, 0, 0.459, 0.543, 0.478, 0.517, 0.459, 0, 0.196, 0.37, 0.34, 0.344, 0], [0.538, 0.836, 0.298, 0, 0.565, 0.356, 0.428, 0.426, 0.24, 0, 0, 0.638, 0, 0.386], [0.64, 0.981, 0.574, 0, 0.558, 0.487, 0.528, 0.365, 0.192, 0, 0.163, 0, 0.477, 1.565, 0], [0.83, 1.519, 0.229, 0.705, 0.863, 0.708, 0.68, 0.743, 0.577], [0.678, 0.915, 1.122, 0.518, 0.984, 0.64, 0.552, 0.654, 0.9, 1.057, 0.685, 0.616, 0.662, 0.703], [1.153, 1.522, 0.958, 0.785, 1.086, 1.03, 0.825, 1.032, 1.03, 1.018, 0.517, 0.74, 0.761, 1.223, 1.619]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

