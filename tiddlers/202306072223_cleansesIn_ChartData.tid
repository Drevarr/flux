created: 20230607222341000
creator: Drevarr
modified: 20230705163534244
modifier: drevarr
tags: ChartData
title: 202306072223_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mister Jekyll", "Melody Phoenixstorm", "Ria Zerria", "Husky Guard", "Kira Dragonblaze", "Kaehln Lao", "Belvyn Brightblade", "Demon Sekhmet", "Slingsshot", "Lord Erin The Wise", "Sumatra Satyricon", "Blanco Padre Guard", "Oo Dads Mad", "Chrozz", "Gabe Malhorn", "Kary\u00edna", "Skye Nightroad", "Uneeta Healah", "Smol Gluvs", "Duke Silvver", "Permanent Dawn", "Sister Elonith", "Etcherii", "No Reserv\u00e9", "Tootsie Pop Rocks", "Shaca Booey", "Mistwalker Cael", "Rafaellagabriela", "Inedible Plant", "Crusader Siolith", "Arriasa", "Rozaalyna", "Zayde Sunsabre", "Cyclotechnist Farra", "Sygaldry Verdandi", "Johosh The Great", "Solus Sanctus", "Koralia Danai", "Xanvias Einzbern", "Be\u00eb", "Grasszanine", "Venomina The Siren", "Drevarr Moonwillow", "Newtype Khan", "Primal Clone", "Sub Train", "Eibh\u00ebar", "Ryvalia Fazebringer", "Artakama Nahid", "Tegan Parker"];
const professions = ["Reaper", "Scrapper", "Scourge", "Dragonhunter", "Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Untamed", "Weaver", "Soulbeast", "Firebrand", "Spellbreaker", "Willbender", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Reaper", "Vindicator", "Weaver", "Berserker", "Firebrand", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Druid", "Reaper", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Reaper", "Spellbreaker", "Tempest", "Scrapper", "Spellbreaker", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0293, 0.13, 0.1215], [0.0195, 0.05, 0.1479], [0.0293, 0.16, 0.0711, 0.0405, 0.7467], [0.0579, 0.0473, 0.4891, 0.4795, 0.0, 0.6481, 0.0741, 0.2747, 0.0, 0.6923, 0.1, 0.313], [0.0, 0.09, 0.1939], [0.0203, 0.8079, 0.7397, 0.0, 0.7222, 0.4444, 0.4615, 0.0, 0.641, 0.3125, 0.6412], [0.0244, 0.1, 0.222], [0.0195, 0.09, 0.24], [0.0098, 0.0, 0.2532], [0.0049, 0.08, 0.2264, 0.4672, 0.3836, 0.1, 0.2037, 0.1852, 0.1978, 0.0], [0.039, 0.04, 0.2843, 0.0405, 0.1834, 0.137], [0.0146, 0.05, 0.2545, 0.0878, 0.6114], [0.0049, 0.05, 0.394], [0.039, 0.02, 0.2782, 0.0676, 0.3581, 0.5342, 0.1, 0.3889, 0.2222, 0.3187, 0.0, 0.6667, 0.2125, 0.4885], [0.2514, 0.0135, 0.3493, 0.4658, 0.0, 0.3704, 0.5926, 0.5934, 0.0, 1.0, 0.4625, 0.7481], [0.0, 0.07, 0.2584, 0.0, 0.4061, 1.274, 0.0, 0.6481, 0.1481, 0.2527, 0.0, 0.4103, 0.2375, 0.6641], [0.0098, 0.09, 0.3344, 0.8734], [0.0195, 0.07, 0.3098, 0.0405, 0.3362, 0.5342, 0.05, 0.4815, 1.0, 0.2418, 0.027, 0.4359, 0.3375, 0.542], [0.0244, 0.08, 0.29, 0.0473, 0.5415, 0.9863, 0.0, 0.3889, 0.4444, 0.2198, 0.0, 0.9744, 0.175, 0.6718], [0.0146, 0.08, 0.3291, 0.0676, 0.1266, 0.4658, 0.05, 0.8704, 0.5556, 0.7253, 0.027, 0.6923, 0.1625, 0.6794], [0.0195, 0.06, 0.4111, 0.0743, 0.1485, 0.2192, 0.05, 0.3333, 0.1111, 0.2308, 0.0, 0.0, 0.1, 0.3435], [0.0049, 0.05, 0.3405, 0.0608, 0.345, 0.5479, 0.463, 0.4444, 0.6374, 0.6154, 0.3, 0.6183], [0.0098, 0.04, 0.3462, 0.0405, 0.6332, 0.5342, 0.0, 0.4815, 0.4074, 0.6154, 0.027, 0.4872, 0.45], [0.0488, 0.08, 0.3278, 0.0338, 0.3537, 0.1644, 0.05, 0.7778, 0.7407, 0.8242, 0.0, 0.6154, 0.2875, 1.0153], [0.0732, 0.04, 0.2795, 0.0676, 0.9083, 0.9041, 0.05, 0.4444, 0.1852, 0.4945, 0.0, 1.0256, 0.2875, 0.855], [0.0146, 0.06, 0.3444, 0.0811, 0.5066, 0.5068, 0.0, 0.6111, 0.037, 0.4615, 0.027, 0.7949, 0.3375, 0.8779], [0.0, 0.05, 0.3181, 0.0676, 0.786, 0.7808, 0.463, 0.8889, 0.5385, 0.0, 0.4359, 0.5375, 0.6031], [0.3581, 0.0743, 0.5284, 0.8356, 0.0, 0.2407, 0.4815, 0.6154, 0.0, 0.5641, 0.1625, 0.7328], [0.0049, 0.06, 0.373, 0.0541, 0.6245, 0.6849, 0.0, 0.3704, 0.3704, 0.5055, 0.027, 0.4103, 0.0375, 0.5954], [0.0195, 0.05, 0.3238, 0.0405, 0.9039, 1.0274, 0.0, 0.3889, 0.2963, 0.8242, 0.0, 0.9487, 0.4375, 0.4656], [0.0293, 0.09, 0.3256, 0.1149, 0.917, 0.7534, 0.05, 0.6667, 0.4074, 0.6923, 0.0, 1.0513, 0.5125, 0.4122], [0.0195, 0.01, 0.3058, 0.1284, 1.0611, 1.411, 0.05, 0.7037, 0.7037, 0.9341, 0.0, 1.3846, 0.3625], [0.0634, 0.05, 0.3664, 0.0608, 0.1921, 0.9041, 0.0, 1.0741, 0.5185, 0.9121, 1.4872, 0.7625, 0.5344], [0.0244, 0.07, 0.4072, 0.1014, 0.3537, 0.8767, 0.6111, 0.3704, 0.6044, 0.9231, 0.4375, 0.6565], [0.0244, 0.1, 0.3541, 0.0743, 0.7249, 1.2329, 0.0, 0.1852, 0.3333, 0.6923, 0.0, 0.8718, 0.5, 0.916], [0.0195, 0.1, 0.398, 0.1014, 0.7031, 0.8219, 0.0, 0.5741, 0.4074, 0.6154, 0.0, 0.7436, 0.2625, 0.8626], [0.0049, 0.01, 0.4563, 0.0405, 0.559, 0.6986, 0.0, 0.2778, 0.2963, 0.5714, 0.0, 0.8462, 0.35, 0.5267], [0.0195, 0.05, 0.4199, 0.0473, 0.8996, 0.589, 0.05, 0.463, 0.4815, 0.3077, 0.0, 0.8205, 0.2625, 0.7023], [0.0, 0.02, 0.4291, 0.0743, 0.8472, 1.2466, 0.0, 0.463, 0.3704, 0.4725, 0.0, 0.8205, 0.425, 0.3053], [0.0, 0.16, 0.3809, 0.0811, 1.0961, 1.2877, 0.05, 0.5, 0.5556, 0.7363, 0.0, 0.9231, 0.25, 0.5954], [0.0293, 0.11, 0.4476, 0.0676, 0.7948, 1.0411, 0.0, 0.7222, 0.3704, 0.7143, 0.0, 1.0, 0.25, 0.3588], [0.0, 0.455, 0.1351, 0.8122, 1.0685, 0.1, 0.5185, 0.2963, 0.6044, 0.0, 0.5897, 0.4125, 0.9313], [0.0146, 0.09, 0.4204, 0.0946, 1.0349, 1.1233, 0.0, 0.3889, 0.6296, 0.6374, 0.0, 1.3077, 0.25, 0.9389], [0.0488, 0.03, 0.4616, 0.0608, 0.9389, 0.6438, 0.05, 0.4074, 0.7037, 0.978, 0.0, 0.7692, 0.3, 0.9847], [0.039, 0.1, 0.4335, 0.0541, 1.1485, 1.0411, 0.05, 0.2963, 0.5926, 0.6374, 0.0, 1.7436, 0.4, 0.8473], [0.4901, 0.0743, 0.7205, 0.7534, 0.05, 0.7593, 0.5556, 0.4505, 0.0, 0.8718, 0.675, 0.9847], [0.039, 0.03, 0.4735, 0.0946, 0.8515, 1.6164, 0.05, 0.7407, 0.2222, 0.8132, 0.0, 1.2821, 0.6625, 0.8779], [0.0537, 0.11, 0.4348, 0.0743, 0.9083, 1.6849, 0.0, 0.9074, 0.8148, 1.2857, 0.0, 1.5128, 0.4, 1.0153], [0.039, 0.04, 0.4963, 0.0541, 0.9825, 0.9315, 0.05, 0.6481, 0.4444, 0.7473, 0.027, 1.2821, 1.0, 1.0305], [0.0293, 0.05, 0.5731, 0.1149, 1.048, 0.6027, 0.0, 0.6667, 0.8889, 0.6703, 0.0, 1.5897, 0.6625, 1.0534]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

