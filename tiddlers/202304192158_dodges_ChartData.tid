created: 20230419215809000
creator: Drevarr
modified: 20230705163525934
modifier: drevarr
tags: ChartData
title: 202304192158_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Be Leaf Me Too", "Zadie Miststep", "Fecund Algorithm", "Al Darasuun", "Husky Guard", "Oo Dads Mad", "Bella Sassy", "Miphest\u00f6", "Sygaldry Verdandi", "Sumatra Satyricon", "Abigail Ryn", "My Birthday Girl", "Kos\u00e4ir", "Be\u00eb", "Tootsie Pop Rocks", "Jupi Jupi Jupi", "Ark Darkness", "Panther B Me", "Tribal S", "Koralia Danai", "Smol Daddy Tika", "Elonith Requiem", "Belvyn Brightblade", "Xanvias Einzbern", "Corlyss Velaryonn", "Rina Of Theros", "Venomina The Siren", "Grasszanine", "Drevarr Moonwillow", "Lord Erin The Wise", "Skye Nightroad", "Gabe Malhorn", "Sp\u00edcy Cheese", "Nazhul Naxxremis", "Tegan Parker", "Daddys Lil Orchid", "Arcanophage Farra", "Newtype Khan", "Ryvalia Fazebringer", "Etchery Howls", "Johosh The Great", "Kmpek", "Mac Chiato", "Anita Strips", "Smol Gluvs", "Eibh\u00ebar", "Mike The Archmagus", "Mistwalker Caelon", "Solus Sanctus", "Xyntharos"];
const professions = ["Catalyst", "Tempest", "Mechanist", "Scourge", "Dragonhunter", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Soulbeast", "Tempest", "Scrapper", "Vindicator", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Druid", "Firebrand", "Berserker", "Scourge", "Firebrand", "Berserker", "Vindicator", "Scourge", "Tempest", "Spellbreaker", "Scrapper", "Weaver", "Scrapper", "Firebrand", "Berserker", "Scourge", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Chronomancer", "Druid", "Firebrand", "Vindicator", "Tempest", "Chronomancer", "Scourge", "Chronomancer", "Weaver", "Vindicator", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 8, 9, 3, 5], [2, 5, 3, 1, 0, 4, 3, 0, 0, 0, 2, 2, 3, 2, 1, 5, 5, 1, 0, 5, 3], [9, 12, 11, 9, 2, 4], [5, 11, 2, 11, 9, 2, 7, 1], [0, 1, 12, 5, 12, 2, 2, 1, 0, 0, 4, 3, 6, 3], [2, 14, 3, 14, 6, 4, 1, 0, 0, 2, 8], [0, 1, 5, 1, 6, 1, 7, 1, 0, 2, 0, 3, 8, 4, 1, 6, 1, 4, 0, 3, 1], [0, 6, 4, 5, 1, 4, 1, 0, 0, 2, 0, 8, 4, 6, 4, 5, 4, 1, 2, 0], [2, 0, 10, 4, 8, 1, 2, 3, 0, 0, 2, 0, 2, 4, 3, 1, 3, 7, 3, 1, 1, 1], [0, 2, 11, 5, 9, 8, 7, 4, 0, 0, 7, 0, 5, 4], [0, 0, 3, 2, 7, 3, 8, 4, 1, 0, 2, 0, 1, 8, 7, 7, 4, 4, 2, 1, 2, 0], [0, 0, 7, 0, 4, 1, 4, 3, 0, 0, 1, 1, 1, 8, 2, 4, 7, 7, 7, 1, 4, 4], [0, 1, 7, 0, 5, 2, 9, 4, 0, 0, 3, 1, 7, 18, 5, 1, 5, 0], [0, 7, 2, 4, 1, 8, 2, 0, 0, 0, 0, 2, 11, 2, 6, 6, 5, 4, 0, 2, 6], [0, 4, 1, 4, 2, 6, 4, 0, 0, 3, 2, 3, 6, 8, 4, 4, 7, 3, 1, 3, 4], [0, 1, 5, 1, 6, 1, 9, 1, 0, 0, 1, 2, 10, 7, 1, 4, 7, 3, 1, 6, 4], [0, 8, 5, 4, 3, 11, 0, 0, 0, 5, 0, 6, 15, 4, 7, 5, 1], [0, 0, 7, 2, 4, 5, 6, 0, 2, 0, 3, 1, 6, 12, 4, 2, 4, 7, 3, 2, 2, 5], [0, 3, 2, 7, 1, 6, 4, 0, 0, 0, 0, 7, 16, 9, 6, 4, 2, 6, 0, 0, 4], [0, 9, 1, 8, 2, 7, 2, 0, 0, 1, 3, 8, 6, 3, 8, 7, 5, 1, 7, 3], [0, 9, 5, 12, 5, 4, 1, 0, 1, 2, 0, 5, 5, 4, 4, 5, 3, 8, 2, 4, 2], [8, 8, 6, 0, 1, 5, 4, 3, 10, 8, 4, 1, 8, 5, 1, 4, 5], [0, 22, 8, 29, 8, 16], [0, 0, 11, 0, 8, 3, 9, 3, 0, 2, 1, 0, 8, 7, 7, 3, 5, 5, 1, 5, 6], [2, 3, 18, 1, 2, 5, 0, 0, 8, 2, 4, 3, 2, 5, 9, 5, 8, 2, 5, 2], [0, 0, 8, 1, 10, 2, 12, 4, 0, 2, 1, 2, 6, 5, 4, 8, 3, 6, 7, 1, 2, 3], [0, 8, 1, 10, 5, 2, 4, 0, 3, 0, 4, 9, 7, 7, 9, 3, 7, 2, 5, 5], [0, 0, 5, 0, 4, 2, 3, 11, 0, 3, 2, 6, 13, 11, 9, 6, 5, 5, 1, 2, 6], [0, 0, 14, 4, 12, 5, 10, 4, 0, 1, 3, 1, 4, 9, 4, 3, 8, 8, 3, 0, 3, 3], [0, 8, 3, 14, 4, 7, 2, 0, 2, 3, 0, 10, 10, 7, 6, 11, 3, 7, 0, 4], [2, 15, 4, 6, 2, 2, 5, 0, 6, 1, 9, 10, 8, 9, 6, 11, 3, 2, 3, 3], [4, 21, 6, 10, 4, 0, 5, 1, 9, 12, 5, 5, 3, 7, 5, 3, 4, 3], [0, 0, 17, 1, 7, 4, 3, 2, 0, 0, 4, 1, 7, 16, 12, 7, 6, 9, 5, 1, 3, 5], [6, 18, 8, 7, 9, 0, 8, 2, 10, 10, 0, 12, 12, 2, 7], [2, 16, 6, 24, 4, 11, 5, 0, 0, 3, 3, 4, 8, 7, 12, 7, 4, 3, 2, 3], [0, 1, 10, 1, 14, 6, 12, 9, 0, 0, 7, 3, 12, 9, 11, 6, 9, 8, 2, 1, 4], [2, 17, 7, 18, 5, 7, 7, 1, 1, 2, 2, 5, 18, 8, 5, 2, 8, 5, 2, 5, 3], [3, 23, 6, 15, 5, 4, 6, 1, 0, 8, 3, 8, 7, 7, 6, 11, 5, 7, 2, 4, 0], [0, 0, 13, 4, 9, 5, 11, 6, 1, 0, 7, 0, 8, 17, 10, 17, 10, 9, 5, 2, 4, 2], [1, 1, 9, 2, 24, 5, 14, 6, 1, 1, 7, 3, 11, 10, 8, 8, 7, 9, 8, 2, 5, 5], [0, 0, 18, 3, 14, 5, 10, 6, 0, 2, 1, 10, 18, 12, 11, 10, 9, 8, 1, 5, 6], [0, 2, 24, 7, 11, 9, 10, 10, 1, 1, 8, 0, 14, 4, 6, 18, 8, 10, 2, 1, 4, 2], [2, 19, 8, 23, 5, 17, 5, 0, 1, 9, 3, 12, 15, 10, 8, 12, 6, 8, 2, 4, 2], [3, 1, 9, 5, 15, 6, 9, 11, 1, 1, 7, 4, 14, 19, 10, 21, 12, 9, 10, 0, 5, 4], [1, 4, 19, 8, 16, 11, 14, 6, 2, 1, 9, 3, 13, 20, 9, 15, 16, 11, 8, 1, 4, 5], [3, 30, 7, 32, 7, 10, 7, 2, 1, 9, 6, 12, 17, 11, 13, 10, 5, 12, 2, 4, 6], [4, 3, 23, 6, 39, 2, 12, 7, 9, 1, 11, 4, 19, 16, 12, 7, 3, 7, 10, 1, 6, 5], [1, 2, 27, 6, 22, 10, 22, 11, 1, 1, 10, 3, 16, 25, 8, 19, 14, 10, 9, 1, 7, 3], [0, 1, 28, 8, 33, 9, 17, 13, 1, 4, 13, 8, 15, 16, 14, 16, 20, 12, 10, 2, 7, 8], [1, 4, 34, 7, 29, 16, 23, 14, 3, 2, 14, 4, 17, 29, 9, 18, 18, 6, 8, 1, 6, 6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

