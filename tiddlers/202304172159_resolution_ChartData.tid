created: 20230417215912000
creator: Drevarr
modified: 20230705163525834
modifier: drevarr
tags: ChartData
title: 202304172159_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Mettrik Milliohm", "Ark Darkness", "Sub Train", "Sygaldry Verdandi", "Gavann", "Solus Sanctus", "Bella Sassy", "Koralia Danai", "Johosh The Great"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.5236, 0.0, 116.4992, 0.0, 337.0093, 0.0, 274.4588, 64.7491, 112.502, 79.0101, 156.9813, 0.0], [0.0, 91.6984, 384.3903, 0.0, 155.4398, 37.7654, 102.0004, 64.1826, 171.5519, 44.0294, 40.883, 152.1954, 163.2806, 164.0829, 202.9482, 226.8122, 121.2814, 0.0, 0.0, 124.3723, 69.6384, 40.1193, 115.1621], [302.1703, 0.0, 326.1479, 23.0789, 255.7271, 66.64, 245.5615, 58.4002, 223.0817, 204.925, 21.5323, 145.0273, 153.5489, 178.8387, 147.4797, 0.0, 0.0, 125.1403, 74.6803, 0.0, 215.2445, 97.7168, 123.4094, 40.1427, 206.1418, 137.7831, 131.467], [64.0807, 152.3219, 625.0117, 0.0, 240.7938, 0.0, 174.5066, 31.0709, 321.4792, 56.7949, 197.4987, 110.0011, 0.0, 212.34, 43.3797, 134.5354, 178.3051, 0.0, 0.0, 154.0406, 45.1776, 0.0, 196.3051, 195.1954, 98.0549, 0.0, 125.3102, 210.1527, 84.2555], [29.7371, 154.1456, 0.0, 377.1902, 0.0, 285.4818, 0.0, 80.3267, 88.1731, 161.6647, 52.0939, 36.6538, 191.8136, 250.981, 0.0, 161.5677, 191.1, 158.4435, 305.9732, 0.0, 0.0, 172.553, 164.3866, 0.0, 224.8488, 209.722, 228.9349, 177.5077, 109.7971, 207.2543, 113.4595], [1613.7425, 37.7287, 349.4602, 0.0, 136.857, 0.0, 51.6911, 0.0, 54.2837, 183.9965, 204.0038, 0.0, 197.8458, 122.1129, 184.1342, 208.7395, 0.0, 0.0, 134.639, 106.8038, 8.3349, 242.0827, 182.1374, 75.5786, 113.3344, 194.7499, 161.6833, 144.158], [17.9095, 0.0, 674.483, 40.3872, 327.1162, 0.0, 359.2357, 144.3173, 336.8593, 94.2505, 11.3335, 353.6618, 280.6992, 0.0, 251.3891, 164.6327, 284.1182, 362.9969, 0.0, 24.1714, 133.5881, 110.0237, 0.0, 243.9677, 162.5702, 108.533, 48.4095, 229.4309, 157.1797, 139.4295], [29.7809, 4.5131, 270.7267, 95.5722, 1032.628, 304.9956, 157.7057, 410.4593, 130.1146, 360.9124, 141.6051, 33.4858, 232.853, 224.4624, 174.442, 410.2917, 221.8313, 184.0401, 0.0, 48.2006, 194.5819, 69.3638, 0.0, 180.7766, 284.0613, 216.0959, 47.6397, 157.6584, 215.5035, 74.921], [36.6766, 241.7144, 80.1774, 1191.0293, 0.0, 429.973, 121.5138, 304.828, 134.7794, 275.3967, 101.5888, 40.7246, 469.2001, 239.6366, 39.2981, 234.4224, 263.9091, 289.3612, 363.1924, 72.13, 24.1358, 227.605, 175.7683, 48.0654, 343.7808, 218.0965, 191.1617, 83.2915, 247.6656, 246.5827, 126.0525], [56.5502, 312.9562, 94.6331, 1739.3951, 24.3443, 474.8845, 113.7043, 280.5848, 54.1033, 322.8669, 195.8011, 54.545, 246.1183, 256.1683, 246.5719, 289.2298, 279.5568, 354.1989, 27.0551, 65.8008, 220.0061, 119.1091, 24.0813, 291.8098, 303.311, 165.6455, 49.8209, 242.9222, 345.9292, 95.7705]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

