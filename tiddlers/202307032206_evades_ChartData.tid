created: 20230703220627000
creator: Drevarr
modified: 20230705163541372
modifier: drevarr
tags: ChartData
title: 202307032206_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Tootsie Pop Rocks", "Big Baby Norn", "Smol Daddy Tika", "Smol Daddy Tika", "Necrotic Windrunner", "Smol Dome Dim", "Lord Erin The Wise", "Zadie Miststep", "Grim Grooblin", "Cpt Z Brannigan", "Artakama Nahid", "Oo Dads Mad", "Morv\u00e4rth", "Xanvias Einzbern", "Drumina", "Gamora Titus", "Miphest\u00f6", "Arriasa", "Mike The Archmagus", "Gabe Malhorn", "Be\u00eb", "Glorious Gluvs", "Black Raspberry Pie", "Zaylen Harker", "Rahani Sunray", "Tegan Parker", "Ateriuz", "Morton Saltbringer", "Sister Elon\u00edth", "Solus Sanctus", "Drevarr Moonwillow", "Sub Train", "Koralia Danai", "Kary\u00edna", "Crusader Siolith", "Mmathuss", "Eibh\u00ebar", "Primal Clone", "\u00c1rkantor", "Mike The Archmagus", "Newtype Khan", "Grasszanine", "Govinda Ektar", "Ryvalia Fazebringer", "Arcanophage Farra", "Johosh The Mighty", "\u00c1rkantor", "Inedible Plant", "Mistwalker Cael"];
const professions = ["Scourge", "Scrapper", "Mechanist", "Spellbreaker", "Berserker", "Reaper", "Berserker", "Weaver", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Berserker", "Reaper", "Berserker", "Druid", "Dragonhunter", "Tempest", "Druid", "Tempest", "Firebrand", "Reaper", "Berserker", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Herald", "Weaver", "Spellbreaker", "Spellbreaker", "Vindicator", "Chronomancer", "Spellbreaker", "Berserker", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 24, 13, 13], [0, 0, 0, 1, 1, 1, 0, 0, 0, 5, 4, 0, 0, 3, 3, 0, 0, 3, 3, 0, 6, 15, 10, 2], [9, 0, 12, 4, 3, 0, 1, 0, 1, 1, 0, 22, 2, 6], [14, 0, 0, 0, 0, 3, 1, 0, 0, 0, 11, 16, 0, 4, 5, 8], [0, 13, 5, 12, 11, 14, 2, 5, 0], [0, 0, 0, 0, 1, 28, 0, 0, 3, 0, 1, 4, 0, 6, 6, 2, 3, 3, 4, 3], [0, 2, 8, 5, 2, 29, 13, 3, 4], [3, 0, 0, 0, 26, 0, 0, 0, 0, 20, 2, 3, 9, 2, 4], [11, 15, 9, 0, 2, 1, 0, 4, 1, 21, 5], [8, 5, 5, 0, 0, 30, 1, 0, 0, 2, 13, 0, 0, 8], [6, 7, 2, 8, 1, 4, 7, 40, 1], [0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 8, 6, 1, 0, 25, 0, 7, 14, 3, 2, 4, 4, 0, 1], [0, 0, 1, 0, 0, 13, 1, 23, 0, 10, 4, 0, 6, 4, 8, 1, 2, 0, 3, 0, 4], [1, 34, 7, 7, 7, 23, 4, 0, 1], [0, 2, 0, 0, 2, 0, 0, 0, 0, 7, 12, 3, 1, 6, 1, 15, 4, 6, 14, 3, 7, 2], [5, 0, 0, 0, 0, 11, 1, 0, 0, 0, 6, 0, 4, 3, 0, 0, 0, 6, 9, 17, 0, 12, 1, 9, 9], [3, 0, 11, 10, 63, 13], [5, 21, 16, 5, 8, 19, 12, 7, 17], [7, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 9, 6, 6, 0, 3, 1, 11, 7, 10, 1, 15, 28, 5, 0, 4], [37, 10, 8, 9, 17, 7, 5, 22, 6], [0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 4, 7, 0, 0, 0, 3, 2, 7, 16, 32, 1, 18, 0, 7, 18], [10, 0, 2, 3, 4, 8, 33, 4, 32, 9, 9, 13], [11, 0, 0, 0, 1, 4, 0, 0, 0, 0, 10, 0, 4, 0, 5, 0, 6, 19, 4, 9, 23, 2, 4, 2, 25], [9, 0, 1, 0, 0, 26, 0, 2, 0, 1, 26, 0, 2, 18, 9, 1, 0, 2, 6, 2, 1, 7, 14, 15], [0, 0, 0, 2, 36, 1, 0, 0, 2, 11, 0, 1, 18, 10, 4, 23, 0, 0, 4, 2, 2, 22, 6], [2, 37, 2, 4, 16, 5, 19, 8, 3, 11, 10, 4, 1, 33], [4, 0, 0, 0, 0, 18, 1, 3, 0, 0, 6, 24, 6, 3, 6, 5, 0, 14, 2, 19, 4, 16, 14, 12, 8], [0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 28, 2, 5, 4, 6, 12, 24, 13, 12, 4, 2, 15, 6, 6, 17], [0, 0, 0, 0, 0, 6, 0, 0, 14, 3, 19, 12, 37, 10, 18, 26, 0, 19, 2, 0, 4], [1, 0, 0, 1, 0, 14, 0, 0, 0, 0, 11, 22, 1, 28, 5, 15, 6, 6, 24, 10, 2, 7, 0, 14, 3], [0, 0, 0, 0, 0, 17, 0, 1, 0, 0, 8, 3, 17, 2, 9, 8, 4, 6, 18, 35, 3, 12, 12, 8, 12], [1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 1, 13, 13, 19, 14, 9, 4, 18, 2, 36, 12, 2, 3, 8, 18], [6, 1, 0, 0, 0, 13, 0, 0, 0, 0, 15, 4, 6, 11, 0, 7, 9, 2, 5, 14, 6, 37, 4, 1, 38], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 18, 0, 17, 19, 6, 12, 6, 11, 19, 16, 16, 9, 7, 24], [4, 2, 0, 0, 0, 0, 11, 0, 2, 0, 0, 24, 22, 7, 7, 1, 12, 7, 0, 6, 12, 22, 5, 2, 13, 27], [13, 0, 0, 1, 4, 0, 16, 0, 0, 0, 7, 8, 11, 2, 5, 6, 27, 19, 3, 32, 7, 2, 0, 12, 15], [1, 0, 0, 0, 0, 0, 23, 1, 0, 0, 8, 15, 8, 1, 11, 24, 26, 7, 18, 10, 4, 8, 9, 14, 15], [7, 1, 0, 0, 0, 0, 34, 0, 2, 0, 0, 24, 2, 15, 5, 2, 2, 7, 2, 1, 9, 15, 30, 17, 13, 20], [6, 0, 1, 0, 10, 0, 0, 0, 0, 24, 7, 15, 0, 7, 4, 5, 16, 18, 11, 35, 5, 8, 17, 22], [16, 26, 40, 59, 70], [11, 0, 0, 1, 0, 37, 1, 1, 0, 0, 15, 46, 13, 23, 46, 20], [8, 0, 0, 0, 0, 0, 25, 1, 0, 1, 0, 7, 6, 8, 17, 17, 3, 1, 15, 3, 36, 14, 6, 9, 12, 30], [1, 1, 0, 3, 0, 0, 10, 0, 0, 0, 5, 16, 14, 24, 0, 8, 16, 23, 19, 22, 4, 39, 29, 8, 15], [1, 18, 48, 8, 12, 36, 32, 40, 36, 15, 21], [4, 0, 0, 3, 0, 0, 11, 0, 0, 0, 28, 27, 25, 6, 11, 6, 14, 18, 6, 46, 29, 9, 0, 17, 21], [5, 0, 1, 0, 0, 0, 18, 0, 0, 0, 0, 3, 54, 0, 2, 1, 1, 16, 17, 18, 20, 24, 60, 16, 18, 17], [7, 0, 0, 0, 0, 24, 0, 0, 0, 0, 22, 32, 9, 9, 12, 11, 15, 28, 10, 1, 10, 27, 33, 12, 39], [8, 1, 3, 2, 0, 0, 63, 2, 0, 1, 0, 26, 75, 18, 24, 58, 32, 53, 27, 22, 24], [13, 5, 0, 0, 0, 25, 0, 1, 2, 0, 28, 51, 25, 14, 4, 16, 7, 26, 26, 52, 34, 16, 37, 24, 65], [27, 3, 2, 7, 0, 1, 53, 0, 0, 1, 0, 46, 43, 33, 9, 12, 5, 28, 29, 17, 10, 46, 34, 9, 19, 48]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

