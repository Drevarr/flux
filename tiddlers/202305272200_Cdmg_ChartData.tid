created: 20230527220043000
creator: Drevarr
modified: 20230705163531891
modifier: drevarr
tags: ChartData
title: 202305272200_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Permanent Dawn", "Sygaldry Verdandi", "Foxy Latina", "Splitting Hairs", "Lucas Ryn", "Legacy Of Mathus", "K U S A T T A", "Lord Erin The Wise", "Cedryn X", "Xanvias", "Aronorf Xideliesi", "Grilo Gringo", "Mammary Mission", "Be\u00eb", "Rx Medic"];
const professions = ["Weaver", "Firebrand", "Scourge", "Reaper", "Firebrand", "Berserker", "Reaper", "Weaver", "Berserker", "Reaper", "Firebrand", "Dragonhunter", "Scourge", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.6283, 11.8481, 10.7534, 14.8, 62.9343, 26.6646, 23.7381, 121.6204, 27.2379, 9.7826, 21.6154, 0.0, 0.0, 34.4857, 0.0], [24.1849, 26.2178, 71.1596, 8.6393, 53.118, 24.0873, 81.0185, 36.6602, 0.0, 1.2564, 152.9355, 0.0, 63.9333, 43.9114, 32.5469], [243.7, 4.75, 44.9008, 535.5741, 148.3982, 124.3882], [45.9911, 46.3897, 44.1863, 68.1389, 148.4907, 72.9806, 78.3205, 196.4194, 3.0741, 53.5429, 0.6456, 46.5625], [234.4054, 9.3902, 45.541, 13.2368, 86.5, 11.5114, 4.8397, 67.3333, 18.0531, 15.8101, 48.0137, 11.6978, 19.5258, 19.3115, 9.8447, 6.9444, 38.0741, 47.4757, 0.0, 70.4615, 293.0323, 21.8889, 39.2667, 0.0, 25.7578], [2.0844, 68.2466, 48.8222, 5.784, 85.1801, 74.3056, 109.9352, 43.3058, 11.6957, 34.1795, 46.871, 1.1852, 174.419, 16.7342, 11.9297], [30.9726, 66.1022, 121.338, 60.3934, 62.3478, 49.754, 146.6296, 26.9466, 2.8261, 54.2949, 16.6129, 26.2593, 33.781, 16.1899, 38.5391], [246.0541, 0.0, 7.7213, 0.0, 12.325, 22.4773, 17.7557, 34.5556, 28.3009, 4.8143, 19.6301, 32.1067, 101.6948, 124.7213, 40.5901, 55.6032, 26.8056, 27.6505, 8.8261, 8.3718], [0.0, 5.0526, 89.125, 16.2841, 18.5725, 34.5741, 35.1327, 11.7257, 32.8151, 40.6533, 64.8169, 64.5574, 84.0, 39.1151, 133.5463, 51.4223, 0.0, 48.5897, 19.6, 7.6962, 53.2109], [0.0, 0.0, 0.1639, 0.0, 54.25, 16.875, 40.7748, 18.5741, 46.9204, 96.0549, 44.4795, 28.2444, 55.8451, 96.459, 47.2298, 33.7579, 92.5926, 49.1408, 0.0, 17.7821, 68.9032, 2.0741, 42.6095, 10.0127, 43.3438], [294.9279, 0.0, 3.4754, 0.0, 128.0, 109.8864, 4.6565, 50.5, 2.3982, 42.0127, 22.1849, 66.9244, 42.662, 51.5738, 18.7143, 28.5079, 57.4259, 23.466, 7.2174, 39.5385, 29.1613, 0.0, 23.2286, 13.0633, 26.3359], [159.975, 39.5114, 32.4046, 191.0741, 84.5841, 66.9531, 45.0164, 0.0, 79.2381, 110.0185, 113.0485, 5.2609, 84.1538, 213.0323, 15.5185, 26.3143, 31.6709, 32.3594], [37.3904, 162.1022, 215.4413, 204.623, 152.0124, 143.3175, 388.2222, 163.3641, 5.0435, 115.3333, 123.2581, 5.2222, 599.4286, 93.3797, 2.1016], [579.7117, 0.0976, 20.8033, 2.0, 329.725, 0.0, 61.1069, 392.3519, 120.2389, 293.4557, 165.1507, 165.0711, 338.6901, 152.1148, 159.7516, 96.3294, 401.9167, 251.034, 0.0, 91.2949, 58.0323, 0.5926, 158.8095, 18.3671, 161.5078], [108.4521, 354.8044, 370.7512, 145.1475, 292.1615, 191.5516, 911.2593, 303.1068, 0.6087, 439.7308, 131.0, 83.1481, 535.6476, 75.1772, 164.0547]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

