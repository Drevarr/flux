created: 20230419215809000
creator: Drevarr
modified: 20230705163525892
modifier: drevarr
tags: ChartData
title: 202304192158_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Solus Sanctus", "Eibh\u00ebar", "My Birthday Girl", "Sygaldry Verdandi", "Etchery Howls", "Johosh The Great", "Kos\u00e4ir", "Kos\u00e4ir", "Jupi Jupi Jupi", "Ark Darkness", "Miphest\u00f6", "Abigail Ryn", "Al Darasuun", "Lord Erin The Wise", "Bagera Flametalon", "Mike The Archmagus", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Nazhul Naxxremis", "Elonith Requiem", "Rina Of Theros", "Panther B Me", "Smol Gluvs", "Xanvias Einzbern", "Be\u00eb"];
const professions = ["Berserker", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Druid", "Firebrand", "Vindicator", "Renegade", "Firebrand", "Firebrand", "Tempest", "Tempest", "Scourge", "Weaver", "Tempest", "Weaver", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 5.3235, 23.0138, 17.0, 12.1606, 54.218, 0.4422, 62.8017, 0.0, 0.0, 59.1856, 0.0, 2.283, 19.399, 0.0, 12.7616, 15.2545, 13.8017, 5.8333, 120.619, 18.625, 0.6901], [0.0, 11.3235, 17.8871, 20.2297, 11.4186, 3.4211, 13.2362, 19.7069, 0.0, 14.0, 32.8454, 2.6885, 1.5623, 32.9951, 10.5214, 31.9934, 7.3136, 60.6724, 27.4912, 16.1429, 28.3929, 38.3803], [4.9412, 7.4931, 28.6081, 11.1923, 20.8797, 28.6734, 11.0345, 0.0, 0.0, 26.2165, 0.0, 10.1811, 41.9901, 13.3429, 58.1126, 5.7727, 21.2414, 13.0614, 0.0, 43.9107, 21.5775], [0.0, 7.1765, 10.1322, 19.0541, 4.8869, 5.3233, 31.7186, 104.9138, 0.0, 1.7647, 32.2165, 0.0, 1.4, 72.7685, 7.45, 22.947, 7.8409, 4.6983, 9.8509, 27.4286, 13.3393, 7.6197], [0.0, 12.9118, 19.0523, 45.5946, 3.276, 12.8872, 15.7387, 133.2931, 0.0, 0.0, 16.8351, 0.0, 17.5208, 17.867, 0.0, 36.2119, 3.2273, 6.8879, 46.0965, 41.3333, 0.0, 1.0563], [6.2162, 11.9118, 13.6088, 4.7162, 18.1131, 21.1955, 28.4774, 12.1897, 0.6949, 23.4706, 39.3299, 1.9016, 16.9358, 24.8177, 17.4, 64.404, 2.8318, 10.6379, 26.386, 0.0, 7.8214, 3.3944], [0.0, 0.0, 20.6446, 12.0, 4.0656, 6.4737, 14.8945, 92.6552, 0.0, 24.5052, 0.0, 6.3358, 74.2069, 7.0857, 26.7219, 3.1727, 11.9741, 8.114, 0.0, 10.875, 56.9437], [0.0, 0.0, 91.0826, 31.2568, 5.052, 6.7218, 26.0, 10.7155, 0.0, 0.0, 8.2887, 3.0328, 12.5057, 34.6897, 2.7, 0.0, 0.3036, 2.1831], [160.596, 41.5227, 207.0172], [0.0, 41.2059, 3.1736, 6.2027, 10.0995, 0.8571, 47.2312, 43.1293, 0.0, 30.9588, 0.0, 51.9774, 24.1429, 64.15, 24.4636, 2.1409, 0.1466, 4.0789, 0.0, 4.4643, 0.0], [89.5882, 22.1791, 13.027, 4.0498, 41.7293, 29.6884, 1.4655, 0.0, 0.0, 16.4948, 0.0, 2.683, 51.3941, 24.4929, 59.9735, 4.5364, 65.2414], [1.2353, 12.7521, 55.1892, 6.2285, 0.3684, 43.8894, 60.931, 0.0, 0.0, 37.1237, 0.0, 80.7094, 48.5571, 44.3907, 17.4, 11.5086, 9.5789, 0.0, 0.0, 35.5493], [20.7838, 11.9412, 24.281, 23.5676, 2.4502, 23.2481, 39.2663, 64.9655, 0.0, 4.0294, 32.9794, 0.0, 22.9925, 89.9606, 34.1857, 21.2517, 10.3591, 11.6983, 2.2719, 0.0, 0.0, 11.8169], [51.9286, 271.0795, 0.0, 52.069, 171.386, 35.8571, 188.125, 21.1831], [18.3529, 28.3802, 154.027, 10.1403, 43.203, 57.5075, 51.0172, 0.0, 5.2059, 17.1443, 20.1803, 24.6792, 44.6355, 13.4143, 87.0728, 0.6818, 52.4052, 67.6579, 82.0952, 65.5], [239.319, 0.0, 132.9691, 1.8525, 110.1585, 0.7931, 3.4786, 214.7815, 0.0, 52.431, 34.614, 105.7143, 43.0714, 65.3944], [26.4054, 26.4118, 18.0248, 118.0676, 9.914, 17.1579, 114.7286, 92.1379, 0.0, 0.0588, 104.567, 25.7869, 59.2377, 59.6995, 57.6643, 100.543, 0.0, 82.0345, 48.9035, 0.0, 39.375, 5.6197], [0.0, 0.0, 21.9504, 98.973, 10.7353, 102.203, 0.0, 28.7069, 0.0, 6.3529, 46.8557, 0.0, 28.6415, 137.7192, 55.45, 123.0993, 14.0955, 202.8103, 24.9386, 0.0952, 108.9643, 198.3521], [0.0588, 30.259, 70.2703, 25.8665, 124.0752, 40.9246, 161.9741, 0.0, 1.1176, 74.9588, 0.0, 53.3962, 156.0049, 5.7143, 110.7947, 27.2091, 84.6207, 9.8333, 158.619, 157.5893, 37.1972], [154.7703, 28.0158, 117.3759, 191.0302, 286.5086, 9.6471, 92.299, 0.0, 89.9245, 140.3941, 0.0, 115.5166, 28.6636, 27.4052, 20.3246], [151.9774, 85.7186, 204.6638, 0.0, 15.1176, 87.2887, 1.1639, 4.2906, 95.5369, 126.9643, 302.4437, 39.8636, 145.7155, 95.386, 9.4286, 31.4107, 248.6761], [35.1892, 7.6176, 58.6198, 79.5811, 38.0294, 116.4211, 145.8492, 89.8276, 0.0, 10.5294, 84.567, 13.4918, 80.6377, 85.7734, 29.2429, 237.1391, 44.0318, 132.0, 99.8158, 0.8095, 5.75, 152.1972], [32.1622, 77.1176, 72.1129, 116.4189, 47.9321, 107.3534, 137.8442, 94.6121, 0.0, 6.9118, 75.6804, 6.2951, 69.3509, 255.2808, 97.6286, 22.1457, 71.25, 104.4052, 72.386, 13.9048, 116.3214, 275.7746], [15.6486, 12.1471, 28.5455, 106.7162, 42.7195, 88.3759, 195.0201, 285.5862, 0.0, 2.1176, 111.6495, 3.459, 77.8, 237.3695, 18.3214, 171.894, 57.5773, 103.6121, 80.3684, 29.7619, 105.5536, 104.0563], [17.8378, 21.0, 40.27, 84.8514, 60.7104, 84.9624, 93.4623, 276.6983, 0.0, 107.5876, 0.0, 99.4868, 126.197, 143.8071, 116.8013, 116.3818, 209.8621, 154.193, 75.5238, 270.3214, 172.2254], [34.9412, 78.8623, 128.5135, 38.7557, 237.218, 222.4975, 386.3017, 0.0, 0.0, 70.3402, 28.7705, 135.1736, 220.4039, 106.2857, 338.0861, 53.3091, 234.0431, 60.693, 8.8571, 29.4286, 246.831]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

