created: 20230625215649000
creator: Drevarr
modified: 20230705163536910
modifier: drevarr
tags: ChartData
title: 202306252156_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Akahi Stratos", "Miphest\u00f6", "Pale Pam", "Tribal S", "Lord Erin The Wise", "Mistwalker Cael", "Rozaalyna", "Cerys Fireblade", "Newtype Khan", "Johosh The Mighty", "Xanvias Einzbern", "Zayde Sunsabre", "Etchery Howls", "Demon Staph", "Elon The Mender", "Blancooo Padreee", "Drevarr Moonwillow", "Arcanophage Farra"];
const professions = ["Scrapper", "Tempest", "Druid", "Druid", "Weaver", "Vindicator", "Reaper", "Berserker", "Spellbreaker", "Berserker", "Berserker", "Spellbreaker", "Druid", "Druid", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[826.965], [0.0, 0.2254, 0.0, 0.0, 174.5098, 11.9687, 111.4402, 46.8403, 0.0, 112.3452, 67.6778, 32.7222, 0.0, 23.9674, 13.3564, 0.0, 0.0, 23.2187, 118.0858, 50.5296, 17.2471, 133.875], [904.7938, 133.9546, 150.336, 147.2793, 173.2199, 69.0459, 0.0, 51.4304, 70.1161, 30.2647, 26.9672, 40.2782, 109.9123], [65.664, 44.3136, 118.9612, 213.7331, 155.2761, 30.7754, 85.282, 20.4565, 18.5745, 31.9107, 33.5821, 109.1218, 380.183, 50.728, 576.045], [15.8714, 143.0105, 85.9206, 61.5536, 553.4194, 105.2167, 449.1933, 99.2074, 52.2624, 88.5361, 45.6553, 70.6409, 13.179, 31.1375, 0.0, 22.2714, 45.2687, 23.904, 47.9405, 47.2538, 82.365], [4.452, 125.5005, 135.1002, 40.5602, 570.6288, 152.0774, 320.8197, 92.5862, 57.9456, 56.1305, 72.0408, 31.0758, 3.2032, 36.5035, 33.2573, 9.6715, 34.2676, 9.9886, 42.6686, 24.0538, 7.0312, 273.87], [36.4841, 156.0865, 155.0016, 83.4983, 717.6638, 156.7432, 363.6109, 81.6422, 110.6688, 45.3426, 97.2317, 67.1937, 0.0, 37.8295, 48.0131, 55.6411, 40.1751, 72.1104, 76.8384, 30.2342, 175.185], [48.371, 161.4222, 224.1782, 72.3901, 546.4752, 115.5626, 382.3749, 53.6803, 84.1728, 50.8208, 214.4083, 54.6913, 40.5451, 23.8468, 59.9495, 56.695, 0.0, 19.3819, 98.7235, 34.9949, 9.6782, 336.6], [54.0918, 78.6821, 245.7062, 107.9227, 397.3267, 61.5342, 469.1015, 124.2691, 98.688, 25.6211, 99.569, 66.0618, 70.6922, 35.499, 22.8026, 20.561, 52.6109, 49.6787, 44.7802, 180.4032, 4.8805, 456.195], [46.1672, 129.1829, 196.6224, 71.0992, 367.4366, 149.5754, 510.2909, 107.9078, 101.9136, 162.8711, 184.5428, 129.6026, 44.8571, 101.2536, 20.2507, 0.0, 43.1088, 0.0, 114.2611, 116.8445, 11.2706, 348.84], [65.9786, 148.797, 157.6806, 73.4092, 380.1173, 103.9996, 402.7408, 171.8208, 23.3856, 164.4303, 195.606, 64.8785, 38.6232, 7.2123, 60.2377, 51.2268, 29.1721, 83.0266, 190.6762, 67.4375, 494.19], [15.6043, 96.5677, 124.5754, 130.6147, 671.4701, 239.2396, 566.3543, 46.0742, 92.1216, 108.2577, 206.3057, 56.6979, 60.8727, 59.6203, 41.6872, 56.2495, 116.8906, 87.529, 67.148, 520.965], [33.2112, 13.7945, 1038.6594, 212.6419, 109.3632, 183.7304, 284.1637, 189.1302, 0.0, 74.0919, 49.1039, 27.9952, 37.3086, 133.4242, 41.593, 42.973, 1000.11], [11.2858, 166.6076, 268.8608, 48.4412, 1111.3675, 226.7299, 504.3413, 109.823, 79.104, 116.5171, 94.323, 89.5745, 14.5869, 40.9635, 22.3087, 44.5179, 25.7324, 116.4922, 135.3859, 38.2373, 375.87], [122.1851, 353.731, 398.6029, 105.8505, 1462.1986, 152.4831, 686.2612, 252.5875, 60.288, 117.697, 115.3587, 92.147, 37.5883, 43.6154, 73.306, 32.7213, 64.1434, 122.9462, 166.2883, 18.3225, 597.465], [54.9822, 319.7632, 325.8861, 72.3561, 1446.8006, 325.0493, 921.4984, 145.0627, 144.7296, 52.675, 210.3051, 44.3499, 61.4522, 52.4148, 58.015, 51.5385, 98.3209, 100.4366, 94.0435, 12.6768, 662.745], [143.577, 125.5756, 299.4784, 157.6548, 1669.0138, 306.1834, 777.3355, 194.3107, 119.2704, 179.5164, 235.496, 226.9974, 14.4883, 51.9929, 59.3116, 43.8335, 43.6575, 35.5666, 194.4192, 348.3619, 82.3684, 874.395], [53.1791, 395.8902, 392.6707, 231.4376, 1730.9074, 477.1943, 1055.1351, 335.7619, 206.6304, 201.8927, 252.5842, 182.5961, 0.0, 73.9312, 71.6596, 32.7555, 40.4277, 53.5374, 141.2726, 162.1958, 79.4319, 1087.065]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

