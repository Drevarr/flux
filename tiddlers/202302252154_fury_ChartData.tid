created: 20230225215428000
creator: Drevarr
modified: 20230705163520256
modifier: drevarr
tags: ChartData
title: 202302252154_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Newtype Khan", "Mac Aaroni", "Zadie Miststep", "Prince Valentin X", "Smol Daddy Tika", "Xyntharos", "Tootsie Pop Tart", "Lord Erin The Wise", "Mistwalker Caelon", "Venomina The Fierce", "Sparks Malefacio", "Tribal S", "Cat Wigglebooty", "Vopiscus Zergherdus", "Drevarr Moonwillow"];
const professions = ["Berserker", "Spellbreaker", "Tempest", "Tempest", "Druid", "Berserker", "Vindicator", "Scrapper", "Weaver", "Vindicator", "Spellbreaker", "Scourge", "Druid", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.7592, 0.0, 0.0, 82.0607, 54.036, 0.0, 0.0, 0.0, 0.0, 0.0, 23.1964], [0.0, 0.0, 33.4265, 64.4077, 29.07, 32.2452, 0.0, 16.2792, 0.0, 0.0, 56.4542], [27.0691, 0.0, 31.6317, 30.7008, 31.502, 31.4391, 31.6368, 22.9398, 0.0, 0.0, 32.9951], [31.0846, 0.0, 31.0955, 53.5345, 30.324, 23.1917, 31.1064, 13.5766, 0.0, 0.0, 30.1054], [26.6336, 170.3427, 72.7679], [0.0, 0.0, 7.5291, 79.0546, 97.242, 0.0, 12.8544, 0.0, 0.0, 75.3424], [65.5668, 5.4992, 22.6573, 95.4283, 50.236, 26.933, 20.3736, 26.4723, 8.9828, 32.998, 34.5188], [12.636, 73.4265, 117.5585, 51.034, 41.588, 19.8744, 31.92, 3.9991, 15.9402, 22.9074], [32.0954, 9.4864, 38.2284, 127.92, 66.728, 51.1789, 21.9024, 51.8594], [72.1375, 23.8784, 54.2424, 138.7932, 53.96, 45.8667, 72.4776, 34.729, 0.3958, 39.2737], [136.5546, 110.428, 100.0221, 46.5816, 59.2861, 0.0, 55.0555, 42.8726], [33.7344, 36.9463, 177.489, 102.524, 39.8724, 90.7608, 41.0704, 30.1556, 73.525, 39.7465], [107.0971, 11.4912, 64.9184, 233.2621, 112.632, 97.273, 104.8944, 57.6262, 21.9849, 18.2342, 110.8594], [180.6667, 76.496, 79.1608, 324.2132, 98.23, 85.4498, 41.6832, 36.9421, 6.6584, 46.6443, 93.8364], [583.2512, 177.156, 144.1112, 151.944, 194.9461, 13.7837, 69.4076, 183.9163], [193.2746, 83.5184, 126.2936, 452.453, 139.422, 91.6094, 169.4472, 54.0938, 21.6702, 103.3467, 142.8825]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

