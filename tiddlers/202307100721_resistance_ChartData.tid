created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Enter Effore", "Yngvar The Burdened", "Xanvias Einzbern", "Scarlet Merc\u00fcry", "Govinda Ektar", "Chocolate Teapot", "Gestern Yesteryear", "Charr Surethang", "Notorious H U D", "Locopuff", "Erinthal"];
const professions = ["Firebrand", "Scourge", "Berserker", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.8257, 13.8029, 20.5326, 22.6106, 25.8509], [0.0, 0.0, 12.4297, 26.1349, 9.2021, 0.0, 7.1242, 9.1237, 4.041, 13.7954, 17.7619, 0.0, 3.57, 20.7207, 4.5503], [15.0248, 0.0, 7.8936, 13.8846, 25.872, 8.8816, 55.6277, 16.4689], [60.8753, 16.9747, 6.3622, 66.359], [11.7603, 0.0, 1.1583, 13.7612, 14.9672, 0.0, 8.2934, 7.0319, 18.3668, 4.5782, 0.0, 15.8171, 2.3038, 4.1254, 29.6935, 15.4557, 4.5696], [15.0248, 6.599, 6.2799, 7.005, 14.2243, 6.6227, 28.2649, 14.7252, 9.3608, 20.4977, 40.2405, 14.2072, 15.7548, 1.7639, 19.8563], [41.331, 0.0, 0.0, 0.0, 12.7565, 5.537, 27.6301, 10.1306, 13.5049, 0.0, 0.0, 0.0, 17.0544, 0.0, 29.6888, 20.1278, 16.1439, 0.0, 19.5712, 17.746, 15.7187, 0.0, 0.0, 0.0, 0.0], [7.9868, 0.0, 0.0, 0.0, 10.2232, 23.387, 0.0, 10.2703, 0.0, 0.0, 7.9674, 0.0, 14.0454, 10.6616, 0.0, 0.0, 37.5166, 0.0, 0.0, 47.3758, 0.0, 32.1037, 55.0188, 0.0], [0.0, 12.2281, 6.63, 11.8919, 20.7721, 48.0859, 3.9176, 12.4542, 15.9089, 34.941, 11.0717, 0.0, 20.9152, 5.0004, 5.3011, 26.6031, 19.441, 3.5482, 7.072, 41.9133, 6.8446], [68.726, 34.0471, 3.5763, 44.4766, 66.496, 4.6054, 28.2268, 137.1942, 7.1813], [27.9105, 27.431, 11.6226, 0.0, 43.2749, 0.0, 34.88, 26.9576, 14.7061, 63.8666, 101.4119, 6.7496, 57.5118, 0.0, 25.9151, 133.1908, 27.7795, 0.0, 58.8567, 29.4132, 44.0, 69.6778, 67.0422, 0.0, 26.8464, 110.4675, 35.6181]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

