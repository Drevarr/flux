created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Ria Zerrah", "Hahrruun", "Tybalt Returns", "Scarlet Merc\u00fcry", "Palaven Night", "Wreakit Herm", "Kaiya Tseng", "Sigewulf Bloodhawk", "Nelanthrope", "Enter Effore", "Ephuras", "Xanvias Einzbern", "Zogratis Lucius", "Necrotic Windrunner", "Chocolate Teapot", "Porlen", "Tybalt Returns", "Govinda Ektar", "Danaeryn", "Locopuff", "Latedoctor", "Notorious H U D", "Mirhayna", "Charr Surethang", "Yngvar The Burdened", "Anti Jimbo", "Luke The Knight", "Drevarr Moonwillow", "Erinthal", "Elonith Requiem", "Legoh Brave", "Gestern Yesteryear", "Hit The Gas"];
const professions = ["Vindicator", "Revenant", "Scrapper", "Firebrand", "Reaper", "Scrapper", "Catalyst", "Berserker", "Druid", "Firebrand", "Reaper", "Berserker", "Virtuoso", "Reaper", "Chronomancer", "Ranger", "Mechanist", "Vindicator", "Tempest", "Firebrand", "Reaper", "Firebrand", "Berserker", "Berserker", "Scourge", "Weaver", "Berserker", "Scrapper", "Druid", "Reaper", "Tempest", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 3, 2, 2, 2], [1, 0, 0, 3, 2, 1, 0, 1, 1, 2, 0, 0, 0], [1, 8, 2], [5, 1, 1, 5], [3, 2, 1, 2, 4], [9, 4], [4, 1, 2, 2, 5], [4, 1, 2, 2, 5], [4, 3, 2, 1, 5], [9, 4, 0, 2, 1], [13, 3], [2, 3, 2, 1, 6, 1, 7, 4], [1, 5, 2, 2, 8, 6, 2, 0, 5, 1], [7, 3, 15, 2, 0, 0, 5, 0], [4, 0, 1, 1, 5, 2, 4, 4, 3, 0, 1, 1, 0, 1, 6], [3, 2, 2, 0, 4, 3, 2, 1, 2, 0, 0, 3, 0, 5, 3, 1, 0, 2], [6, 3, 8, 11, 5, 1, 1], [5, 2, 1, 2, 4, 2, 1, 4, 6, 0, 0, 4, 0, 3, 1, 3, 1], [8, 0, 2, 2, 4, 0, 3, 0, 1, 3, 1, 0, 4, 0, 1, 6, 4, 0, 0, 3, 0], [9, 2, 3, 8, 8, 3, 0, 8, 1], [2, 1, 1, 0, 7, 1, 1, 1, 2, 2, 1, 1, 0, 3, 3, 4, 1, 1, 2, 0, 3, 0, 8, 0, 0, 0], [1, 7, 3, 4, 2, 3, 1, 1, 4, 7, 6, 0, 7, 0, 2, 2, 4, 0, 0, 1, 0], [3, 2, 2, 3, 1, 5, 8, 5, 2, 8, 1, 1, 6, 8, 2, 0], [3, 4, 1, 2, 3, 8, 3, 4, 1, 0, 0, 2, 3, 8, 3, 0, 2, 0, 2, 5, 3, 0, 1, 0], [0, 1, 5, 14, 2, 0, 4, 1, 5, 9, 8, 4, 0, 5, 0], [9, 1, 1, 0, 5, 3, 3, 0, 1, 12, 3, 0, 7, 4, 4, 7], [15, 5, 7, 7, 17, 5, 5, 7], [6, 2, 2, 1, 3, 2, 4, 2, 4, 3, 3, 3, 0, 2, 3, 9, 3, 0, 2, 1, 3, 3, 6, 2], [3, 3, 3, 1, 4, 2, 6, 4, 3, 0, 4, 1, 0, 0, 3, 10, 4, 0, 3, 2, 4, 4, 5, 2, 0, 4, 1], [6, 4, 7, 4, 5, 2, 3, 12, 4, 1, 6, 4, 1, 3, 6, 1, 2, 8, 1], [4, 5, 3, 5, 16, 3, 1, 7, 0, 4, 2, 8, 7, 2, 12, 3], [10, 4, 2, 2, 6, 0, 7, 2, 2, 4, 4, 4, 4, 3, 10, 4, 10, 1, 4, 4, 3, 2, 0, 2, 0], [13, 6, 4, 12, 2, 3, 10, 13, 6, 3, 18, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

