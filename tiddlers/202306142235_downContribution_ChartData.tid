created: 20230614223544000
creator: Drevarr
modified: 20230705163535133
modifier: drevarr
tags: ChartData
title: 202306142235_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "River No Hug", "Lord Erin The Wise", "Eibh\u00ebar", "No Reserv\u00e9", "Tootsy Pop Star", "Rozaalyna", "Zayde Sunsabre", "Johosh The Mighty", "Smol Gluvs", "Jacob Pine", "Be\u00eb", "Elonith Requiem", "River No Hug", "Alarics Bane"];
const professions = ["Chronomancer", "Scourge", "Weaver", "Chronomancer", "Vindicator", "Reaper", "Reaper", "Spellbreaker", "Berserker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 21.8909, 14.5439, 0.0, 180.1538, 44.8689, 0.0, 0.0], [0.0, 0.0, 33.3455, 98.4152, 0.0], [0.0, 0.0, 114.6182, 129.4211, 0.0], [0.0, 0.0, 99.4545, 14.1287, 0.0, 215.9231, 117.3115, 0.0, 0.0], [0.0, 0.0, 320.1455, 95.1696, 0.0], [0.0, 0.0, 75.2727, 15.7602, 0.0, 223.9538, 178.2131, 18.8333, 0.0], [0.0, 0.0, 334.8909, 92.4854, 0.0], [476.2, 52.8197, 0.0, 56.7931], [0.0, 0.0, 139.9636, 264.6725, 0.0], [910.6923, 221.2623, 4.3778, 82.8851], [0.0, 0.0, 126.5091, 204.3099, 0.0, 187.6, 492.2459, 0.6, 0.0], [751.0462, 792.0984, 0.0, 0.0], [906.1692, 507.7049, 53.3556, 185.7011], [1779.9846, 262.5574, 107.4889, 0.0], [0.0, 0.0, 47.4909, 180.3333, 0.0, 1169.7077, 406.5246, 75.5444, 42.5517]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

