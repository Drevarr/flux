created: 20230610164704000
creator: Drevarr
modified: 20230705163534961
modifier: drevarr
tags: ChartData
title: 202306101647_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Traidoruns Maximus", "Grasszanine", "Zayde Sunsabre", "Newtype Khan", "Aronorf Xideliesi", "Arcanophage Farra"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.7856, 5.808, 17.4413, 27.5525, 0.0, 27.6191, 0.0], [4.8375, 12.9175, 26.112, 12.7872, 13.0296, 9.7649, 40.264, 13.0548], [0.0, 0.0, 20.208, 20.4826, 49.7467, 12.9265, 41.4286, 12.9602], [0.0, 34.9286, 21.4622, 0.0, 21.0471, 0.0, 0.0, 25.2544, 0.0, 13.728, 26.701, 6.8558, 49.4515, 35.0042, 4.1791, 87.6776, 0.0, 13.1398, 54.7531, 40.5818], [0.0, 0.0, 0.0, 31.2422, 49.1904, 21.0505, 22.7109, 0.0, 40.549, 0.0, 0.4518, 20.7995, 0.0, 0.0, 10.3831, 103.2346, 0.0, 0.0, 170.9418, 0.0, 18.0634, 32.2454, 129.8618], [0.0, 18.7202, 0.768, 20.5056, 46.5845, 11.8059, 46.1705, 4.8814, 40.4358, 0.0, 6.6108, 8.2112, 0.0, 0.0, 134.8186, 16.8231, 0.8147, 174.4725, 13.7028, 24.9626, 54.0534, 43.8481], [0.0, 42.3377, 0.0, 22.3949, 22.7798, 0.0, 30.6139, 28.5692, 0.0, 28.001, 21.8538, 34.2056, 32.3066, 22.6502, 44.8302, 21.6996, 202.7176, 20.8666, 39.0432, 49.5635, 16.2327]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

