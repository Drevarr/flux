created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Latedoctor", "Gestern Yesteryear", "Charr Surethang", "Erinthal", "Drevarr Moonwillow", "Porlen", "Yngvar The Burdened", "Mirhayna", "Danaeryn", "Elonith Requiem", "Anti Jimbo", "Notorious H U D", "Chocolate Teapot", "Hahrruun", "Xanvias Einzbern", "Hit The Gas", "Legoh Brave", "Palaven Night", "Govinda Ektar", "Locopuff", "Necrotic Windrunner", "Sigewulf Bloodhawk", "Nelanthrope", "Zogratis Lucius", "Enter Effore", "Tybalt Returns", "Whip \u00d1 Sl\u00e0pper", "Ria Zerrah", "Luke The Knight", "Kaiya Tseng", "Little Hud", "Scarlet Merc\u00fcry", "Ephuras", "Tybalt Returns", "Dizzy Bunnyhopper", "Dizzy Bunnyhopper", "Wreakit Herm"];
const professions = ["Reaper", "Firebrand", "Berserker", "Druid", "Scrapper", "Ranger", "Scourge", "Berserker", "Tempest", "Reaper", "Weaver", "Firebrand", "Chronomancer", "Revenant", "Berserker", "Berserker", "Tempest", "Reaper", "Vindicator", "Firebrand", "Reaper", "Berserker", "Druid", "Virtuoso", "Firebrand", "Mechanist", "Tempest", "Vindicator", "Berserker", "Catalyst", "Scrapper", "Firebrand", "Reaper", "Scrapper", "Mechanist", "Holosmith", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4390.4706, 2918.4242, 6404.8571, 9663.5833, 2476.2982, 4408.4, 1035.315, 33.1538, 4163.9655, 158.8571, 160.4583, 186.8983, 712.8462, 1184.5, 1747.5, 789.242, 5476.1852, 43.9423, 1646.8019, 69.0556, 498.7045, 1254.7719, 677.7583, 153.1026, 340.3195, 86.8077], [480.9273, 2315.3947, 10355.375, 5080.5, 2152.2963, 3690.0476, 503.3388, 2739.7241, 2619.9714, 25.2553, 122.8281, 432.4737, 441.5, 1971.5806, 558.0919, 3677.3529, 722.5901, 58.6667, 3694.6207, 644.04, 2588.7234, 6561.3636, 48.35, 433.7246, 93.64], [2299.3235, 2805.8286, 4673.7778, 6106.6875, 3791.8, 873.1116, 2351.1111, 5955.4286, 179.5538, 247.0929, 249.9444, 538.1509, 3898.9524, 1086.7231, 943.1591, 53.0189, 729.8843, 63.2105, 11488.0, 530.7886, 2416.6042, 2.3684, 57.1842, 271.5747], [3002.4048, 1232.2195, 575.6522, 11797.5, 2148.8462, 11170.0, 809.7863, 1843.6341, 1088.2571, 74.1618, 198.262, 218.4286, 265.3929, 0.0, 3938.9231, 527.8811, 822.5, 0.0, 1071.625, 67.5775, 933.5588, 573.6038, 776.3364, 5914.3636, 416.0526, 458.4545, 34.2143], [627.1182, 2559.0571, 4100.2941, 5448.15, 2130.0727, 5138.1176, 572.1965, 3481.24, 88.1406, 87.8519, 228.5759, 108.3333, 196.7885, 46.2353, 2126.6905, 405.0914, 618.9545, 33.9412, 833.4956, 46.7368, 1225.697, 260.2384, 842.1681, 64.375], [2015.72, 1561.1053, 7360.0, 13203.2, 3100.1471, 1368.8916, 365.359, 2555.3478, 178.3626, 1028.494, 137.7544, 295.2963, 0.0, 1323.7381, 1560.303, 188.4375, 0.0, 782.7184], [32.3158, 0.0, 2777.6304, 961.4086, 3832.8824, 11.6136, 2137.5909, 46.1316, 824.7667, 772.7877, 1849.6875, 493.125, 107.2778, 78.815, 191.375], [58.2969, 105.3057, 304.3091, 82.3214, 0.0, 2438.5854, 1611.3621, 995.2222, 3.3673, 1057.0522, 33.169, 9348.9091, 864.1544, 1988.8393, 391.7255, 80.925], [747.6398, 36.2333, 898.4565, 109.62, 47.4767, 73.963, 295.5849, 0.0, 2517.1538, 388.9027, 674.6579, 0.0, 913.4964, 41.9737, 2927.125, 581.7437, 759.9189, 142.9091, 220.6842, 878.8106, 370.3846], [370.6, 250.0341, 327.2287, 391.9623, 472.8036, 74.4706, 3724.6207, 443.4324, 854.1333, 3.1273, 1022.2234, 108.5641, 2996.1481, 565.702, 1415.6075, 84.4615, 178.1622, 383.0573, 88.2105], [231.4651, 15.5946, 2280.2889, 411.3448, 479.6064, 459.0182, 695.9821, 9.9231, 710.2708, 739.1685, 1526.8448, 10.7647, 274.0536, 174.3521, 1821.3, 407.9326], [8512.75, 139.2218, 728.7222, 3419.3333, 106.7079, 155.7979, 200.5926, 146.2, 1080.1132, 249.5272, 802.4091, 3.4444, 811.6016, 28.1286, 4709.6429, 350.3503, 391.7248, 245.377, 190.9231, 424.0866, 117.0], [4281.6579, 1129.6429, 12936.6667, 1605.9667, 340.6154, 4101.7273, 157.907, 792.0488, 607.2388, 152.618, 113.5602, 585.7407, 149.7455, 849.2667, 1721.434], [13.0543, 0.0, 321.6964, 1449.9608, 2644.6885, 1017.0101, 74.4861, 5951.1429, 1521.3788, 488.902, 10709.2857, 121.1026, 469.4032], [4130.5217, 2094.3333, 4838.0, 10952.0, 2159.5556, 5131.4286, 736.9737, 806.9756], [928.9618, 382.1778, 6.4151, 685.7845, 49.76, 6136.1818, 526.9441, 499.0175, 238.4154, 306.9, 321.788, 398.0], [110.2778, 336.4107, 12.5217, 1365.4082, 768.5269, 993.7727, 53.1111, 942.1333, 63.7662, 509.9714, 120.2966, 503.6637, 155.3846, 598.973, 147.2654, 67.2059], [4983.3214, 708.4186, 5492.8235, 5530.0, 3837.6667], [143.7946, 0.0, 112.3582, 56.8617, 103.7696, 0.0, 32.9474, 874.8077, 684.0843, 1084.1026, 0.6744, 1260.1687, 38.7237, 1567.0667, 180.7338, 287.4775, 171.6667], [937.5135, 16.6857, 4265.0952, 210.32, 1367.781, 0.3333, 135.2895, 324.1571, 54.9412], [567.2458, 3788.5, 561.2, 3333.1905, 0.0, 173.0, 156.0172, 70.1304], [610.2273, 2391.4211, 7433.7, 9121.6, 1700.451], [3070.0571, 646.7222, 15204.8, 6188.4667, 2069.7308], [0.0, 708.2963, 178.9615, 7448.3, 289.1697, 461.9727, 0.0, 367.35, 411.4725, 102.92], [516.4828, 1170.425, 6038.8462, 6904.0, 1810.8537], [1752.3556, 6.0, 752.9223, 339.2739, 490.8142, 0.0, 285.973], [616.1923, 1138.08, 2692.3571, 57.8804, 133.0469, 217.2545, 247.8929, 2242.8333], [5115.0, 1218.8056, 4725.4615, 13410.8, 6283.6364], [251.2432, 216.4872, 137.4407, 254.1667, 722.3005, 43.4444, 548.7037, 526.5185], [1677.0426, 979.5366, 1854.5, 4476.1333, 1197.5323], [8818.4545, 4170.3158, 2537.3673], [598.4364, 697.3, 9923.625, 2135.8511], [886.0216, 2834.2632], [3404.3478, 243.2101, 30.0667], [300.2222, 1310.1702, 5201.9167], [3613.5385], [367.7604, 111.9487]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

