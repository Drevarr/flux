created: 20230401222944000
creator: Drevarr
modified: 20230705163524041
modifier: drevarr
tags: ChartData
title: 202304012229_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Einar X", "Mistwalker Caelon", "Mmathuss", "Xanvias Tlesel", "Aronorf Xideliesi", "Venomina The Fierce", "Astraea Lumena", "Sygaldry Verdandi", "Gabe Malhorn", "Bella Sassy", "Johosh The Great", "Koralia Danai"];
const professions = ["Vindicator", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.7714, 0.0, 1.5561, 0.1677, 1.1267, 0.0, 0.7387, 0.0, 4.4734, 0.0, 1.2321, 0.0, 12.0288, 0.0, 1.7932, 1.0853, 9.4726, 2.3985, 3.6557, 0.0, 0.0, 3.0355, 3.296, 1.3872], [3.696, 8.8192, 6.5558, 5.572, 0.3618, 1.4915, 0.8221, 0.0, 2.9211, 1.6269, 0.6772, 2.0187, 0.3283, 0.0, 0.0, 0.0, 2.016, 1.5552, 3.4485, 0.0, 15.0176, 1.547, 0.6318, 3.0654, 0.1812, 1.5642, 0.0653, 4.3204, 1.7918], [0.2106, 1.369, 3.2057, 6.6528, 0.0216, 7.2189, 0.4651, 36.2733, 3.4343, 1.287, 2.7227, 0.46, 0.198, 3.1661, 1.3362, 2.8611], [5.3222, 8.8192, 2.6935, 6.1799, 1.2532, 3.8572, 2.2012, 2.0349, 0.0, 2.0448, 0.9953, 1.6006, 2.1164, 2.8728, 1.0109, 1.2732, 1.0686, 4.2336, 0.0, 2.1151, 0.0, 12.0141, 1.0829, 0.8073, 1.2376, 1.171, 1.0593, 0.9955, 1.4253, 1.9652], [1.1669, 1.8753, 0.0, 5.0911, 0.0, 3.2627, 3.2886, 8.5774, 1.6848, 4.0796, 0.1828, 6.384, 0.0, 8.3684, 3.6693, 25.4144, 1.547, 0.0702, 3.4082, 0.0, 0.2079, 1.9258, 5.7902, 1.9652], [2.4394, 6.6483, 4.9295, 7.2943, 1.3824, 3.0858, 3.5802, 2.3541, 1.8615, 2.9628, 0.0, 1.5303, 3.8578, 1.9375, 2.2725, 1.8559, 5.3088, 0.0, 2.391, 2.5323, 16.1728, 1.4851, 0.0, 0.971, 2.091, 2.2195, 4.8103, 2.8033], [8.0573, 15.7389, 7.4705, 18.4384, 3.4884, 5.6059, 5.2244, 6.7431, 3.0018, 9.9735, 2.1628, 1.3543, 3.5165, 6.8537, 0.2527, 3.4362, 3.7259, 12.1632, 4.4141, 4.4445, 23.335, 6.9306, 3.0537, 3.313, 3.4571, 3.2571, 2.3174, 8.6853], [6.7267, 20.4877, 4.8787, 25.0236, 1.2791, 7.1488, 2.7581, 7.2618, 0.0, 11.4757, 1.9523, 5.1095, 4.6235, 11.286, 4.4226, 5.1201, 3.9649, 16.2624, 0.0, 6.0234, 0.801, 51.5219, 2.3514, 0.3393, 6.8544, 1.4079, 2.5542, 2.5786, 1.4253, 3.1501], [13.823, 19.945, 7.6738, 26.5432, 3.7597, 6.1716, 4.3228, 5.8653, 2.7, 6.7185, 2.0097, 2.2469, 3.8421, 11.9016, 0.0, 3.71, 4.7804, 12.8352, 0.0, 6.943, 2.0414, 43.8976, 5.2598, 1.2519, 7.1971, 2.3559, 2.5443, 3.0355, 8.329, 1.5895], [12.7882, 29.0355, 13.4673, 39.0044, 5.1292, 15.9433, 6.3648, 9.8553, 2.6161, 1.5023, 4.651, 8.3106, 5.3724, 10.9987, 2.0218, 1.9166, 1.3076, 18.48, 0.0, 14.2538, 3.1008, 61.2256, 10.0555, 3.6621, 8.7203, 2.565, 2.6136, 3.9494, 11.9367, 9.1902], [14.1926, 26.5933, 12.9083, 32.9258, 3.7985, 14.1947, 7.8764, 8.1795, 4.0583, 9.3475, 2.2777, 5.5404, 7.1958, 14.8154, 1.8112, 5.9962, 6.3551, 20.0256, 13.3342, 7.1577, 59.1462, 6.2499, 2.9952, 8.1491, 2.6904, 0.4653, 5.0102, 9.7097, 9.5948], [17.2973, 43.4176, 16.1099, 36.0664, 3.8631, 14.4004, 5.9935, 5.1072, 5.6347, 13.8961, 3.9046, 6.6485, 2.6048, 17.2368, 3.4117, 5.5308, 5.0475, 19.0176, 0.4536, 11.449, 4.5478, 61.9187, 4.3316, 2.925, 7.2542, 3.485, 0.4653, 6.2179, 15.6781, 8.2076]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

