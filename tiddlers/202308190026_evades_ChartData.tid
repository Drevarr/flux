created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Keypek The Drunk", "J\u00e2sm\u00eene", "Zefirokai", "Flora Lumos", "Mr Poggy", "Jimbo The Pleb", "Wall Knot", "Yummy Kiwi", "Kosa\u00efr", "Asheena Feres", "Rina Of Theros", "Brutal Araden", "Morton Saltbringer", "Air One Com", "Miphest\u00f6", "Tribal S", "Cesare Pirane", "Newtype Khan", "Rahani Sunray", "Rozaalyna", "Sub Train", "Pr\u00e6tor Lightbringer", "Darks Na", "Venomina The Sly", "Vee U", "Black Raspberry Pie", "Seiker Novus Terra", "Cerys Fireblade", "Zaedy Zae", "Drevarr Moonwillow", "Tegan Parker", "Gestern Yesteryear", "Arriasa", "Elon Illusionblade", "Xanvias Einzbern", "Daphne Agla\u00e9", "Koralia Danai", "Kisumaiassu", "Rockdevil", "Solus Luxes", "P\u00edogre", "Lord Erin The Wise", "Gavann", "Legacy Of Mathus", "Liu Mira", "Irish Mini Rev", "Glorious Gluvs", "Mistwalker Cael", "Arcanophage Farra", "Ryvalia Fazebringer"];
const professions = ["Scrapper", "Tempest", "Catalyst", "Reaper", "Holosmith", "Berserker", "Firebrand", "Firebrand", "Weaver", "Virtuoso", "Scourge", "Vindicator", "Chronomancer", "Firebrand", "Tempest", "Druid", "Berserker", "Spellbreaker", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Druid", "Tempest", "Chronomancer", "Tempest", "Berserker", "Druid", "Scrapper", "Tempest", "Firebrand", "Druid", "Chronomancer", "Berserker", "Scourge", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Scrapper", "Weaver", "Firebrand", "Berserker", "Berserker", "Herald", "Berserker", "Vindicator", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 3, 2, 0, 10, 2, 6, 0, 14, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 4, 1, 3, 8, 0, 0, 0, 0, 19, 6, 8], [2, 0, 3, 2, 26, 15, 10, 0, 2, 1, 0, 0, 0, 0, 0, 0, 22, 0, 1, 2, 0, 0, 0, 8], [7, 8, 6, 0, 4, 38, 0, 0, 0, 17, 2, 1, 0, 3, 0, 13], [10, 4, 1, 6, 14, 13, 15, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 16, 0, 0, 6], [6, 9, 0, 0, 18, 0, 6, 6, 65], [11, 2, 7, 6, 10, 8, 30, 0, 31, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 25, 9], [0, 0, 0, 0, 0, 0, 4, 14, 1, 13, 1, 0, 3, 0, 39, 0, 71], [5, 0, 4, 2, 37, 7, 11, 0, 17, 20, 19, 0, 0, 0, 0, 0, 0, 0, 16, 7, 3, 3, 0, 0], [10, 2, 6, 17, 3, 1, 7, 0, 0, 0, 12, 0, 0, 0, 6, 26, 5, 1, 6, 0, 6, 3, 20, 22], [6, 8, 2, 2, 6, 0, 3, 9, 6, 23, 0, 25, 1, 12, 10, 40], [7, 5, 1, 14, 19, 0, 19, 0, 9, 2, 7, 0, 0, 0, 2, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0, 10, 8, 41], [160], [3, 9, 4, 21, 2, 0, 21, 0, 15, 2, 1, 0, 0, 0, 0, 4, 5, 5, 4, 0, 1, 2, 0, 21, 8, 43], [6, 3, 8, 14, 18, 4, 23, 0, 6, 0, 16, 0, 0, 0, 1, 0, 8, 7, 0, 5, 0, 1, 4, 0, 0, 2, 45], [0, 0, 0, 17, 5, 68, 23, 0, 5, 10, 6, 2, 0, 0, 0, 0, 0, 0, 5, 16, 0, 0, 16, 0], [5, 4, 10, 0, 19, 9, 17, 0, 0, 0, 0, 0, 0, 0, 1, 13, 6, 1, 8, 0, 0, 0, 27, 4, 50], [15, 5, 18, 10, 49, 0, 23, 0, 2, 2, 7, 0, 0, 0, 0, 2, 0, 2, 4, 13, 24], [1, 3, 5, 28, 26, 11, 14, 0, 5, 4, 5, 0, 0, 0, 0, 3, 0, 27, 4, 5, 11, 0, 0, 0, 0, 14, 0, 23], [3, 9, 4, 13, 20, 0, 19, 1, 13, 5, 16, 0, 0, 0, 0, 0, 2, 0, 29, 29, 2, 28], [9, 16, 5, 20, 46, 24, 42, 0, 3, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 9, 0, 0, 16, 0, 0], [13, 4, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 5, 4, 18, 0, 0, 22, 0, 49, 6, 65], [6, 3, 2, 21, 12, 28, 18, 0, 18, 2, 4, 0, 0, 0, 0, 0, 0, 17, 6, 3, 21, 0, 0, 9, 0, 43], [12, 2, 4, 26, 34, 27, 0, 0, 2, 1, 22, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 0, 10, 0, 2, 7, 62], [5, 4, 0, 17, 17, 7, 26, 0, 6, 4, 5, 0, 0, 0, 0, 0, 2, 0, 4, 8, 0, 20, 14, 14, 0, 9, 29, 33], [6, 2, 9, 16, 16, 14, 15, 0, 23, 4, 26, 0, 0, 0, 1, 0, 0, 0, 2, 0, 6, 8, 0, 0, 1, 0, 13, 14, 62], [5, 5, 0, 25, 22, 12, 1, 2, 2, 11, 0, 0, 0, 4, 3, 0, 0, 0, 15, 8, 9, 0, 0, 19, 0, 39, 25, 33], [5, 5, 5, 14, 23, 13, 100, 0, 26, 6, 44, 0], [5, 11, 6, 26, 25, 16, 18, 0, 20, 4, 19, 0, 0, 0, 2, 6, 0, 0, 1, 3, 0, 30, 0, 0, 9, 0, 0, 2, 43], [18, 1, 0, 5, 13, 45, 10, 4, 14, 8, 7, 0, 0, 0, 0, 0, 0, 0, 4, 7, 0, 19, 0, 0, 2, 0, 2, 23, 74], [6, 1, 8, 5, 17, 36, 12, 0, 22, 8, 3, 0, 3, 0, 0, 0, 0, 1, 19, 17, 2, 9, 0, 0, 1, 0, 20, 7, 60], [3, 0, 6, 2, 7, 22, 12, 1, 9, 8, 18, 0, 0, 0, 0, 0, 1, 15, 6, 1, 23, 0, 15, 1, 44, 13, 53], [16, 1, 14, 2, 6, 0, 15, 0, 28, 3, 22, 0, 1, 0, 0, 0, 0, 1, 5, 12, 2, 10, 0, 0, 16, 1, 45, 16, 48], [15, 13, 2, 12, 22, 32, 7, 0, 21, 8, 24, 0, 0, 0, 0, 0, 0, 15, 3, 1, 6, 0, 0, 7, 0, 26, 8, 42], [9, 4, 6, 2, 12, 17, 25, 1, 18, 8, 19, 0, 0, 0, 0, 0, 1, 19, 8, 10, 21, 0, 1, 15, 0, 33, 10, 34], [4, 2, 1, 2, 26, 6, 34, 0, 25, 1, 15, 0, 0, 0, 0, 3, 0, 0, 8, 21, 3, 14, 0, 0, 11, 0, 15, 10, 85], [1, 0, 2, 10, 54, 10, 31, 0, 7, 0, 10, 0, 0, 0, 0, 2, 1, 0, 5, 8, 0, 8, 1, 9, 11, 0, 55, 12, 53], [8, 13, 24, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 6, 12, 1, 10, 0, 0, 24, 0, 31, 13, 108], [2, 3, 7, 5, 40, 21, 16, 0, 23, 7, 11, 0, 0, 0, 0, 2, 0, 0, 16, 4, 0, 16, 0, 0, 3, 0, 9, 35, 76], [20, 45, 9, 11, 13, 3, 2, 0, 12, 2, 18, 2, 0, 10, 0, 1, 2, 0, 8, 16, 0, 11, 15, 0, 19, 5, 1, 0, 34, 70], [9, 13, 10, 8, 24, 35, 31, 0, 18, 1, 15, 0, 1, 0, 0, 0, 8, 0, 0, 1, 11, 0, 19, 0, 0, 6, 0, 38, 22, 67], [8, 4, 0, 53, 21, 12, 15, 0, 13, 6, 35, 0, 0, 0, 1, 0, 0, 0, 17, 28, 5, 19, 0, 0, 15, 0, 35, 8, 60], [29, 3, 21, 0, 11, 36, 14, 2, 7, 9, 0, 3, 0, 0, 2, 1, 0, 0, 29, 9, 6, 32, 1, 0, 17, 0, 28, 16, 95], [7, 3, 7, 27, 63, 44, 22, 0, 23, 7, 32, 0, 4, 0, 0, 0, 0, 0, 40, 3, 0, 30, 0, 0, 13, 46], [3, 7, 14, 23, 42, 60, 66, 0, 30, 0, 0, 0, 0, 0, 7, 0, 0, 13, 4, 38, 0, 0, 15, 14, 81], [15, 7, 4, 27, 28, 53, 27, 0, 21, 14, 5, 0, 0, 0, 1, 0, 0, 1, 6, 26, 3, 19, 0, 0, 20, 1, 10, 9, 138], [12, 4, 19, 23, 64, 17, 11, 0, 4, 2, 0, 0, 0, 0, 0, 2, 0, 0, 60, 21, 4, 7, 0, 0, 3, 0, 37, 65, 91], [22, 11, 12, 33, 36, 19, 30, 0, 59, 9, 17, 0, 0, 3, 0, 1, 2, 0, 0, 18, 30, 12, 38, 1, 3, 15, 1, 3, 2, 78], [1, 16, 34, 29, 35, 0, 4, 13, 20, 2, 0, 0, 0, 23, 1, 0, 1, 39, 34, 6, 24, 0, 1, 7, 0, 37, 12, 138], [22, 3, 6, 16, 38, 9, 20, 0, 55, 3, 21, 0, 0, 0, 0, 0, 21, 40, 5, 50, 1, 0, 32, 0, 41, 23, 102], [35, 36, 2, 43, 28, 45, 39, 0, 52, 12, 41, 0, 0, 0, 0, 1, 0, 0, 12, 56, 1, 42, 0, 0, 54, 0, 55, 1, 100]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

