created: 20230412220340000
creator: Drevarr
modified: 20230705163525356
modifier: drevarr
tags: ChartData
title: 202304122203_downed_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Isla Miststorm", "K\u00f4sair", "Rina Of Theros", "Smol Gluvs", "Nazhul Naxxremis", "Tribal Z", "Be\u00eb", "Panther B Me", "Be\u00eb", "Black Raspberry Pie", "Solus Sanctus", "Koralia Danai", "Grasszanine", "Minka Bringer", "Panther B Me", "Drevarr Moonwillow", "Bella Sassy", "Ryvalia Fazebringer", "Primal Clone", "Kira Dragonblaze", "Zadie Miststep", "Venomina The Siren", "Tootsie Pop Rocks", "Gavann", "Eibh\u00ebar", "Johoshua", "Sygaldry Verdandi", "Xanvias Einzbern", "Arcanophage Farra", "Smol Gluvs", "Nazhul Naxxremis", "Tegan Parker", "Rozaalyna", "Demon Staph", "Mistwalker Caelon", "Lucas Ryn", "Fribble Bibble", "Rina Of Theros", "Newtype Khan", "Sub Train", "Smol Daddy Tika", "Sp\u00edcy Cheese", "Inedible Plant", "Ark Darkness", "Skye Nightroad", "Sumatra Satyricon", "Estryl", "Allie Mistwalker", "Jeckyll Mbs", "Blancooo Padreee", "Tribal Z", "Konztantin\u00eb", "Arriasa", "Xyntharos", "Lord Erin The Wise"];
const professions = ["Firebrand", "Willbender", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Tempest", "Scourge", "Scourge", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Reaper", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Dragonhunter", "Tempest", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Spellbreaker", "Scourge", "Scourge", "Tempest", "Scourge", "Druid", "Vindicator", "Firebrand", "Scrapper", "Scourge", "Spellbreaker", "Firebrand", "Berserker", "Berserker", "Vindicator", "Firebrand", "Scrapper", "Soulbeast", "Berserker", "Vindicator", "Berserker", "Berserker", "Weaver", "Vindicator", "Druid", "Vindicator", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Downed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 2], [0, 1, 1, 0, 0, 1, 1], [1, 0, 2, 1, 0], [0, 0, 1, 2, 0, 0, 0, 0, 0, 1], [0, 0, 3, 1, 0, 0, 0, 0], [0, 1, 2, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 2, 1, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0], [1, 0, 2, 2, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 2, 0, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 2, 0, 2], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 2, 0, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 2, 1, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 2, 0, 2, 1], [1, 0, 0, 1, 0, 2, 2, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 3, 2, 0, 2, 1], [0, 0, 0, 0, 0, 1, 2, 0, 1, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 2, 1, 1, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 2, 2, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 2, 0, 2, 1, 0, 1, 2, 0, 0, 0, 0, 0, 1], [2, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 2], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 4], [1, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 2, 1, 0, 2, 0, 1, 1, 0, 1, 0, 0, 0, 2], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [3, 0, 1, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 1], [2, 0, 0, 1, 0, 1, 1, 2, 2, 0, 0, 2, 1], [1, 0, 0, 0, 0, 2, 3, 1, 1, 0, 3, 2, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 4, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0], [1, 0, 0, 3, 0, 1, 2, 3, 2, 2], [2, 0, 0, 0, 0, 1, 1, 1, 3, 0, 0, 2, 4], [1, 0, 0, 0, 0, 2, 1, 0, 3, 1, 2, 0, 1, 3, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 3, 0, 4, 1, 1, 0, 1, 3, 0, 0, 0, 0, 0, 2], [2, 0, 0, 2, 1, 2, 3, 0, 3, 1, 1, 0, 2, 3, 0, 1, 0, 0, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

