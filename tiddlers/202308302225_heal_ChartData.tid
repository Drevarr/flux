created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Darks Na", "Arriasa", "Tegan Parker", "Mike The Archmagus", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Weaver", "Firebrand", "Druid", "Tempest", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[662.8371], [36.0556, 110.8158, 786.9399, 125.3111, 332.5136, 98.6341, 123.8933, 5.0813, 71.0565, 146.7125, 110.587, 3.0833, 120.8455, 319.2551, 91.9037, 252.5577, 44.3704, 78.8831, 25.0204, 5.75, 455.4444, 60.1495, 811.8191, 45.9322, 68.5333, 6.2745, 263.938, 173.9357, 196.9535, 9.2419, 339.3871, 261.82], [815.4211, 1660.9016, 153.2593, 1343.2149, 712.6098, 668.1933, 40.4634, 473.2938], [472.3019, 593.6349, 634.9737, 1232.8634, 447.8519, 1116.4805, 604.3937, 436.7867, 15.374, 276.0508, 607.9438, 0.0, 399.8261, 21.55, 204.5107, 43.5185, 23.2593, 359.2857, 169.5, 545.3651, 1359.6545, 2005.3617, 582.4068, 20.8333, 117.2549, 1947.4419, 713.538, 600.1512, 442.7016, 1269.5484, 1131.9569, 307.1622, 1022.0484, 287.3478], [730.4007, 402.5533, 126.8943, 424.2429, 1130.5875, 698.5543, 75.25, 689.1717, 1803.1633, 380.5481, 816.5192, 0.0, 732.4416, 216.1429, 515.1944, 1256.1349, 2325.0332, 1864.8617, 780.7119, 24.0, 321.1961, 1772.3643, 803.8713, 774.2674, 415.5645, 723.8065, 1996.7691, 593.4054, 1271.9677, 441.9565], [879.1698, 1256.2222, 942.6842, 2195.2295, 600.3556, 1753.1759, 591.1324, 609.1, 146.5854, 591.3559, 970.0812, 0.0, 1304.6522, 17.15, 1227.7682, 2668.5918, 556.1333, 805.1731, 14.2222, 352.0779, 464.1667, 2517.7222, 2901.7508, 1841.3298, 910.7797, 174.5333, 1041.1569, 1868.7209, 1435.3626, 995.3372, 3.129, 824.3226, 2948.4423, 652.2838, 2508.7581, 669.3913], [1165.3962, 1659.0635, 1072.8289, 1951.8306, 560.3704, 1774.222, 828.6899, 764.4267, 162.8049, 435.8023, 877.0625, 161.6087, 490.75, 82.0667, 1197.8283, 2417.6939, 407.237, 1011.25, 37.0, 632.3377, 1422.0556, 2778.9841, 3157.2824, 3852.9894, 1062.8644, 237.2333, 433.6078, 2430.7519, 1207.7251, 1083.4302, 1456.4919, 896.4839, 2894.6693, 1077.2568, 1615.0323, 836.8587]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

