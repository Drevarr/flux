created: 20230501220820000
creator: Drevarr
modified: 20230705163527835
modifier: drevarr
tags: ChartData
title: 202305012208_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Blancooo Padreee", "Tika Sumiko", "Miphest\u00f6", "Sygaldry Verdandi", "Gabe Malhorn", "Joint Lee", "Primal Clone", "Zadie Miststep", "Hyde En Sikh", "Mac Aaroni", "Viral Marketing", "Rosie Sunray", "Grilo Gringo", "Drevarr Moonwillow", "Whose Guardian", "Tyzzki", "Sub Train", "Johosh The Great", "Kiloak", "Flanneryflame", "Xyntharos", "Belvyn Brightblade", "Venomina The Siren", "Koralia Danai", "Aira Draugr", "Elonith Primal", "Bella Sassy", "Gollum Mah Precious", "Morv\u00fcs", "Raevarae", "Skylar Shadowmoon", "Spreadflamesoflight", "Morv\u00fcs", "Lord Erin The Wise", "Xkaet", "Tegan Parker", "Kmpek", "Oo Dads Mad", "Scrivy", "Forever Broke", "Ganbaatar Bloodwine", "Needragee", "Gonzo Cc", "Ganbaatar Bloodwine", "Necrotic Windrunner", "Lord Erin The Wise", "Sr Frodo Seu Anel", "Vinnakh", "To Dream"];
const professions = ["Chronomancer", "Spellbreaker", "Tempest", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Dragonhunter", "Vindicator", "Dragonhunter", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Herald", "Tempest", "Firebrand", "Harbinger", "Spellbreaker", "Reaper", "Scrapper", "Willbender", "Berserker", "Tempest", "Tempest", "Tempest", "Vindicator", "Spellbreaker", "Tempest", "Scourge", "Berserker", "Tempest", "Specter", "Spellbreaker", "Scourge", "Weaver", "Bladesworn", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[329.286, 22.5, 43.5827, 31.2, 346.3478, 216.1466, 857.8087, 2575.6222, 222.1891, 145.902, 175.5333, 14.6774, 0.0, 154.4521], [349.8313, 100.699, 51.7818, 185.4762, 499.8542, 356.1778, 845.6037, 3731.8, 355.8343, 2209.3571, 407.2661, 50.1724, 382.0, 305.8176], [372.6542, 0.2217, 49.6638, 44.4583, 244.7292, 278.0769, 606.5676, 2959.8205, 252.8018, 367.5238, 716.6306, 0.0, 15.3714, 102.7486], [437.076, 10.89, 7.7786, 204.4783, 179.8542, 207.7836, 793.0551, 2862.1064], [511.1818, 0.0, 31.5063, 60.2609, 139.4468, 180.8057, 602.2129, 1598.7455, 182.7139, 85.9615, 377.0741, 0.0, 15.7647, 87.0109], [320.2636, 39.7931, 20.0857, 26.1875, 115.6458, 159.1602, 661.27, 1950.3409, 219.0714, 136.9608, 584.3303, 0.0, 0.0, 68.5083], [352.9682, 133.0, 86.939, 0.0, 207.2292, 300.5141, 906.5964], [332.7049, 4.7951, 63.3714, 0.0, 192.4348, 186.1648, 532.6045, 1818.1176, 236.3754, 163.5476, 846.6449, 41.1714, 0.0811, 146.4167], [257.1013, 117.8629, 40.1838, 100.875, 86.5208, 150.1703, 562.4391, 2175.7436, 254.2462, 152.9545, 439.5556, 590.725, 2.6, 376.5269], [238.0588, 9.8066, 25.1857, 13.8889, 169.8958, 274.4231, 723.2433, 2132.9388, 182.926, 108.3929, 474.2946, 0.0, 19.7714, 143.0989], [400.5276, 56.2108, 21.1102, 45.3571, 303.8298, 181.5434, 518.894, 2084.413, 226.4677, 162.0536, 437.4444, 28.6364, 2.6857, 94.2337], [360.1657, 16.2927, 25.6423, 0.0, 146.2917, 317.9006, 893.6073], [482.1433, 41.3909, 54.9159, 119.6667, 3607.0, 411.978, 703.9689, 2652.75, 346.3754, 369.1509, 380.9554, 0.0, 0.0, 296.2086], [188.8667, 526.0, 349.2791, 936.2347, 2195.881, 435.4352, 151.5758, 433.7315, 0.0, 0.0, 332.7193], [242.1462, 36.8107, 27.7692, 28.4667, 90.7755, 218.3681, 573.4012, 2007.9623, 168.3709, 104.2745, 503.2589, 0.0, 16.0, 144.4941], [200.6554, 0.0, 25.3209, 113.3043, 101.9318, 203.4254, 608.9168, 2808.4872, 192.5449, 132.4464, 528.0, 0.0, 0.0, 53.6455], [263.6397, 46.8571, 0.0, 0.0, 95.3958, 207.2363, 476.1757, 2119.4048, 235.8584, 153.6735, 404.6306, 0.0, 16.3714, 128.2674], [19.2687, 33.3404, 108.5, 177.5208, 236.6961, 703.6884, 3073.3667, 310.7269, 128.5769, 365.4259, 201.6667, 21.4324, 217.8261], [259.5396, 2.922, 28.3544, 0.0, 151.8125, 176.4451, 491.5432, 2234.0, 201.7762, 163.3208, 295.0636, 38.9655, 0.0, 150.3641], [248.8935, 2.8212, 63.8395, 155.3, 166.7174, 161.5604, 503.4056, 2102.6744, 221.3886, 115.7885, 327.6637, 0.0, 0.0, 95.1739], [64.3216, 733.7763, 56.5802, 179.8333, 245.3125, 286.8352, 930.0822], [387.1298, 2.83, 12.7, 96.087, 47.3333, 265.4318, 375.5331, 1909.9697, 258.9748, 101.898, 261.0354, 0.0, 0.0, 117.9836], [556.9675, 48.6939, 68.2766, 61.0833, 153.7045, 262.7953, 565.9564], [80.2281, 33.9548, 18.0, 35.5833, 137.4167, 149.4696, 621.968, 2716.95, 166.7113, 83.7455, 291.367, 0.0, 8.8649, 243.2717], [229.1151, 0.0, 27.0863, 117.087, 100.5333, 213.4505, 702.0937, 2580.7241, 124.8118, 137.6182, 151.5556, 5.4103, 20.1878], [500.7715, 27.4384, 76.1942, 48.75, 172.1915, 235.5665, 767.9111], [223.8501, 0.0, 40.5755, 115.375, 78.5, 215.1319, 609.8071, 1804.0638], [170.2266, 6.6439, 0.0, 0.0, 62.9091, 148.2609, 517.0311, 2510.9524, 195.9549, 149.3704, 187.3621, 9.0, 0.0, 85.4923], [446.2816, 1096.8436], [19.9804, 138.3043, 321.8125, 242.6978, 760.031], [0.0, 40.6071, 40.6087, 202.6875, 255.3678, 676.3424, 2927.3077], [527.5168, 6.9557, 74.5035, 147.5, 274.766, 372.7935, 720.8952], [323.4078, 425.5887, 62.5035, 86.1364, 312.4667, 743.2713, 355.9379], [534.4831, 142.8392], [6.6277, 10.0949, 93.3043, 181.3265, 248.129, 574.751, 2675.6765, 165.1744], [35.6321, 10.0357, 0.0, 229.1224, 110.3246, 585.4519], [193.3554, 3586.3462, 182.2989, 181.9074, 1295.2824, 11.1143, 100.5829], [53.9346, 2118.925, 340.4535, 405.9615, 309.2679, 0.0, 93.5135, 254.1977], [379.1031, 280.2703], [443.9695, 37.0847, 58.0678, 0.0, 205.2067], [197.2295, 3586.5854], [341.1867], [1990.5, 155.7406, 81.093, 228.8496, 0.0, 27.9714, 144.7647], [153.1514, 199.4182, 843.5043, 11.3148, 8.0789], [4157.6429], [543.5045, 0.0, 220.25, 0.0, 0.0, 63.7303], [226.0248], [91.3636], [42.48, 0.0, 8.3214, 231.4091], [2.1569]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

