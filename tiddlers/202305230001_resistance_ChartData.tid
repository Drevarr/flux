created: 20230523000132000
creator: Drevarr
modified: 20230705163531297
modifier: drevarr
tags: ChartData
title: 202305230001_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Black Raspberry Pie", "Hyde En Sikh", "Primal Clone", "M\u00e4raas", "Miphest\u00f6", "Gavann", "Sygaldry Verdandi", "Crusader Siolith", "Xanvias Einzbern", "Blanco Padre Guard", "Koralia Danai", "Bella Sassy", "Venomina The Fierce", "Grasszanine"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 42.7523, 98.2044, 0.0, 0.0, 86.9434, 0.0, 59.7042, 98.1824], [10.7331, 0.0, 40.4269, 23.3604, 85.5066, 8.5597, 0.0, 7.0435, 173.2129, 7.1023, 4.6494, 165.6828], [15.5211, 35.776, 18.9378, 107.356, 7.6892, 8.282, 7.1456, 166.4731, 0.0, 0.0, 181.6908], [22.7829, 0.0, 25.3115, 40.1436, 94.9607, 8.5114, 13.5505, 13.5766, 171.1909, 0.0, 13.653, 160.8804], [23.3814, 0.0, 44.8989, 44.3394, 102.3138, 0.0, 0.0, 0.0, 148.6126, 0.0, 0.0, 202.5012], [23.0223, 0.0, 28.3525, 97.4818, 10.4941, 5.2275, 0.0, 231.5121, 0.0, 0.0, 187.5604], [0.0, 67.885, 31.8654, 135.508, 0.0, 13.6277, 261.1673, 5.4529, 0.0, 101.6508], [23.7804, 30.9462, 38.556, 108.6165, 7.1331, 0.0, 7.7581, 216.3476, 0.0, 0.0, 242.788], [14.6832, 87.1146, 59.535, 189.9214, 7.4233, 2.583, 19.3952, 357.5464, 14.1372, 16.8264, 287.0768], [87.6603, 34.1661, 34.9272, 156.0969, 19.7067, 27.716, 0.0, 523.0085, 0.0, 51.2172, 300.4168], [45.0471, 51.6963, 115.668, 234.6705, 7.1089, 10.824, 15.4651, 403.714, 0.0, 21.033, 332.166], [32.0796, 0.0, 53.2168, 52.6176, 327.9505, 3.5303, 30.955, 7.9112, 456.6214, 11.5128, 306.5532], [72.6978, 88.3667, 125.0802, 354.0016, 1.886, 39.852, 19.7014, 533.1182, 11.9556, 402.868], [96.9171, 0.0, 128.1675, 354.1482, 409.8856, 0.0, 597.1463, 0.0, 591.2288], [55.062, 0.0, 80.6749, 328.4064, 170.1729, 30.1766, 67.0555, 0.0, 728.5724, 58.3758, 744.1052]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

