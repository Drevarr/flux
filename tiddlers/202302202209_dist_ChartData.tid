created: 20230220220953000
creator: Drevarr
modified: 20230705163519693
modifier: drevarr
tags: ChartData
title: 202302202209_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Zadie Miststep", "Demon Sekhmet", "Ravioli Fetabringer", "Kahless The Drunk", "Xyntharos", "Smol Gluvs", "Eibh\u00ebar", "Xanvias Tseli", "Koralia Danai", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Spellbreaker", "Tempest", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Scourge", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1455, 244, 217, 457, 806, 632, 697, 2346, 553, 321, 1127, 3149, 682, 1990, 740, 1463, 944, 1284, 480, 500, 611, 206, 375, 528, 326, 564, 1883, 1085], [980, 274, 232, 775, 689, 527, 441, 3937, 627, 751, 1097, 494, 348, 10947, 3196, 515, 1093, 618, 436, 1798, 426, 742, 479, 493, 354, 315, 2285, 1769], [497, 299, 256, 731, 442, 818, 8772, 3692, 1618, 1545, 1885, 446, 1188, 8987, 2744, 2893, 2060, 629, 894, 1303, 837, 520, 349, 487, 702, 403, 12015], [1936, 303, 246, 301, 569, 640, 980, 1077, 1622, 558, 510, 577, 663, 5811, 637, 785, 1697, 428, 525, 711, 1597, 272, 362, 650, 362, 738, 627, 6996], [1152, 253, 239, 569, 672, 569, 550, 3823, 1514, 221, 442, 929, 491, 10963, 921, 1021, 649, 424, 738, 425, 310, 295, 361, 379, 438, 420, 2400], [1370, 302, 221, 990, 1265, 883, 440, 4176, 928, 284, 573, 513, 366, 6677, 375, 771, 774, 606, 327, 574, 417, 267, 422, 488, 316, 542, 483, 1796], [617, 265, 197, 362, 446, 700, 451, 4226, 529, 220, 876, 458, 412, 7598, 917, 504, 794, 809, 300, 656, 406, 284, 303, 501, 328, 587, 1156, 2088], [2437, 237, 203, 349, 808, 427, 1207, 4334, 997, 243, 631, 575, 433, 6194, 1217, 770, 539, 507, 456, 1784, 750, 588, 436, 283, 702, 483, 342, 2443], [2153, 203, 267, 405, 436, 617, 451, 3708, 508, 283, 1697, 486, 402, 3932, 884, 794, 732, 1025, 432, 475, 908, 397, 309, 301, 246, 480, 1752, 1401], [619, 284, 228, 555, 778, 739, 458, 676, 218, 299, 499, 454, 7098, 2064, 451, 1315, 1032, 176, 489, 331, 281, 341, 657, 242, 442, 625, 858], [314, 223, 214, 473, 518, 303, 794, 3662, 401, 276, 397, 364, 348, 10670, 1974, 460, 1000, 490, 283, 340, 581, 162, 237, 817, 300, 482, 267, 5487], [2284, 181, 157, 207, 341, 329, 435, 3588, 314, 166, 242, 222, 220, 9247, 785, 206, 381, 396, 254, 1253, 310, 174, 439, 254, 226, 445, 200, 839]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

