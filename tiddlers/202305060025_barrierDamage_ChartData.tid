created: 20230506002551000
creator: Drevarr
modified: 20230705163528233
modifier: drevarr
tags: ChartData
title: 202305060025_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Viral Marketing", "Alice Hazerider", "Nero Arien", "Miphest\u00f6", "Maaaathexxs", "Zaylen Harker", "Temperstep", "Lord Erin The Wise", "Hauzzy", "Rojin Rumei", "Kmpek", "Mistwalker Caelon", "Black Raspberry Pie", "Kos\u00e4ir", "Aronorf Xideliesi", "Artakama Nahid", "Primal Clone", "\u00c1rkantor", "Johosh The Great", "Sister Elonith", "Solus Sanctus", "Koralia Danai", "Demon Dalham", "Jupi Jupi Jupi", "Blancooo Padreee", "Ark Darkness", "Xanvias Einzbern", "Hyde En Sikh", "Lucas Ryn", "Khailerian", "Venomina The Siren", "Stoic Rapidfire", "Bella Sassy", "Permanent Dawn", "Tegan Parker", "Air One Com", "Smol Daddy Tika", "Morv\u00e4rth", "Rina Of Theros", "Eibh\u00ebar", "Mrs Stealth Monkey", "Newtype Khan", "Drevarr Moonwillow", "Zaidy Sagemist", "Rozaalyna", "Be\u00eb", "Smol Gluvs", "Mac Adaymia", "Venngi"];
const professions = ["Tempest", "Firebrand", "Weaver", "Chronomancer", "Tempest", "Scourge", "Firebrand", "Tempest", "Weaver", "Berserker", "Spellbreaker", "Vindicator", "Vindicator", "Chronomancer", "Vindicator", "Firebrand", "Tempest", "Chronomancer", "Vindicator", "Willbender", "Berserker", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Vindicator", "Tempest", "Druid", "Firebrand", "Weaver", "Tempest", "Firebrand", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Vindicator", "Spellbreaker", "Scrapper", "Vindicator", "Scourge", "Scourge", "Scourge", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5619, 18687, 0, 1066, 0, 23037, 1845], [987, 23175, 371, 0, 0, 0, 33764], [10481, 60138], [0, 1099, 0, 0, 66, 16749, 6932, 10440, 45950], [4913, 19943, 1826, 0, 0, 40516, 2723, 11744, 0, 0, 0, 3542], [13592, 57194, 0, 0, 374, 0, 9954, 5640], [6057, 31282, 744, 533, 0, 51913], [0, 0, 0, 6243, 88, 14781, 3757, 12282, 56518], [1110, 16473, 1599, 0, 0, 0, 35425, 1440, 9819, 0, 1105, 185, 24723, 3068], [5469, 13297, 0, 0, 0, 0, 52053, 3143, 5448, 264, 0, 0, 19391], [30463, 3492, 16374, 0, 0, 0, 12548, 0, 10520, 26092], [7438, 21038, 925, 0, 0, 0, 15214, 210, 5679, 0, 0, 0, 13609, 5580, 18334, 22764], [4344, 19572, 0, 0, 0, 0, 1183, 4192, 0, 0, 1188, 10925, 2373, 30657, 36592], [1789, 15164, 3052, 190, 0, 0, 41452, 1268, 9059, 665, 0, 0, 8218, 6907, 12260, 19123], [0, 19894, 2208, 2155, 0, 0, 35284, 6491, 3240, 947, 1203, 0, 10815, 1719, 11612, 24241], [1163, 347, 536, 0, 29957, 9858, 9659, 409, 140, 286, 18729, 3261, 15814, 29703], [3636, 27713, 1383, 69, 0, 34605, 3001, 6509, 0, 0, 0, 13476, 580, 14664, 18605], [962, 18499, 0, 0, 0, 0, 32659, 6197, 2783, 1027, 0, 0, 10287, 1123, 15133, 36713], [6545, 50843, 1485, 1107, 0, 67348], [9239, 32126, 504, 0, 0, 0, 32041, 2177, 5471, 0, 916, 0, 10128, 4627, 8774, 23100], [147, 15940, 0, 1129, 0, 0, 18630, 14889, 3194, 0, 0, 0, 14437, 0, 22835, 38658], [725, 23302, 191, 371, 0, 0, 46634, 6333, 9062, 1019, 144, 0, 6509, 3420, 6376, 27189], [986, 26962, 3, 2, 0, 0, 26969, 8673, 8190, 989, 324, 0, 7366, 2292, 17152, 31372], [4062, 29611, 504, 0, 0, 0, 25763, 5755, 7347, 82, 0, 0, 11167, 6859, 14747, 26744], [2246, 25783, 721, 968, 0, 0, 44627, 6032, 3654, 0, 0, 0, 10424, 2148, 14177, 23127], [3779, 21380, 2882, 0, 0, 0, 32515, 4297, 3311, 1557, 0, 1131, 12683, 5611, 26976, 25137], [3432, 30347, 1832, 0, 0, 0, 25850, 8151, 8118, 0, 0, 0, 8296, 5880, 17357, 32340], [4937, 16495, 2043, 0, 0, 1099, 48229, 7807, 4215, 1131, 0, 409, 17893, 3310, 14880, 21957], [1393, 26204, 0, 0, 0, 0, 40775, 2374, 2262, 1019, 0, 1071, 14457, 5220, 22104, 31794], [2222, 37289, 1461, 1073, 0, 0, 19603, 7746, 0, 0, 609, 0, 13817, 2701, 24312, 38545], [7129, 33457, 1102, 0, 0, 0, 46291, 5714, 4378, 0, 0, 0, 8870, 2294, 17676, 23199], [9535, 17821, 944, 0, 0, 40026, 4860, 8514, 1019, 0, 0, 9764, 6900, 20150, 30741], [6977, 35534, 1195, 0, 0, 0, 46060, 10098, 4389, 128, 557, 295, 11089, 4773, 16499, 12783], [5565, 29218, 1579, 0, 0, 0, 40296, 8961, 13000, 1129, 0, 10374, 4598, 22585, 23101], [6338, 17917, 1467, 0, 0, 0, 42005, 8733, 3485, 556, 670, 0, 16789, 4108, 25519, 35696], [4405, 27008, 1465, 1188, 0, 37760, 5941, 6413, 355, 0, 0, 10844, 7344, 21763, 39758], [1129, 33846, 523, 0, 0, 0, 41310, 4168, 12848, 0, 0, 0, 21059, 6458, 11560, 31924], [7794, 24576, 3857, 3387, 0, 0, 35920, 5989, 11793, 1129, 830, 981, 14471, 3830, 16775, 45059], [1808, 0, 82485, 8582, 3239, 0, 295, 25225, 1944, 20013, 49660], [6628, 37856, 3591, 1051, 0, 0, 36439, 9985, 10008, 0, 0, 0, 14433, 10564, 17672, 51077], [87, 20895, 3814, 2287, 0, 51385, 12202, 13272, 0, 0, 0, 20206, 2508, 35675, 37012], [27657, 1667, 2161, 0, 54489, 13281, 13098, 2011, 933, 1015, 17215, 8479, 10741, 60963], [8917, 53592, 2139, 1934, 0, 0, 56995, 10518, 15074, 0, 0, 1373, 30890, 8001, 24028, 5544], [8261, 5322, 43416, 431, 569, 0, 0, 51500, 12961, 10734, 225, 361, 126, 22656, 5713, 35923, 51951], [5042, 50260, 3117, 35, 0, 0, 68602, 13896, 20791, 0, 761, 21191, 4632, 24522, 77016], [1129, 15047, 1304, 284, 0, 81875, 12283, 12575, 2270, 0, 0, 24351, 6758, 45301, 87277], [6698, 61443, 2844, 2553, 0, 0, 82053, 19210, 7219, 0, 23209, 2188, 35723, 56881], [10502, 51797, 2556, 3257, 0, 0, 72556, 7603, 23125, 1129, 1205, 3370, 27867, 6815, 41900, 69672], [9558, 53596, 1539, 1267, 0, 0, 84754, 17175, 22696, 600, 1061, 1970, 44093, 12525, 33841, 63379], [558, 152621, 25428, 26434, 1123, 2725, 6399, 36431, 13573, 106406, 61877]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

