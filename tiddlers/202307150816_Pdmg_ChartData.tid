created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Alfir Strom", "Govinda Ektar", "Lions Main", "Kl\u00ebpta", "Scythe User", "Porlen", "Daring Deathblade", "Bae Ken", "Legoh Brave", "Kahlianne", "Ateriuz", "Necrotic Windrunner", "Fluffy No Care Bear", "Shaca Booey", "Charr Surethang", "Avatar Sarvity", "Audra Storm"];
const professions = ["Druid", "Vindicator", "Berserker", "Renegade", "Scourge", "Ranger", "Reaper", "Scourge", "Tempest", "Scourge", "Berserker", "Reaper", "Berserker", "Berserker", "Berserker", "Catalyst", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[412.1983, 15.4384, 395.4696, 157.4533, 107.45, 78.0, 35.8557, 783.4253, 29.3922, 349.4514, 129.4138, 132.7612, 37.4861, 127.0, 166.1379, 277.3226, 189.1731, 100.9737], [22.3214, 90.62, 55.7529, 12.6042, 55.675, 106.6869, 0.0, 273.6812, 0.0, 86.0615, 70.0449, 0.0, 667.0, 713.6281, 139.363, 298.9913, 224.8267, 85.9, 0.0, 22.9691, 240.9195, 45.3125], [782.569, 187.8254, 144.1231, 91.2584, 82.85, 459.2371, 414.5289, 325.2192, 1196.6957, 236.5467, 37.525], [960.6267, 168.875, 125.0, 314.8454, 784.0575, 234.5764, 86.7759, 230.8358, 137.7778, 315.3709, 298.0345, 526.3333, 240.6635, 137.1579], [20.0833, 112.7953, 523.3939, 844.381, 1066.1463, 651.68, 1287.8, 1.3472, 342.55, 1017.678, 302.8367, 5.1162, 970.0476, 416.9625, 240.8108, 677.8947], [210.1633, 176.2323, 525.2563, 189.5045, 177.5789, 878.1552, 700.6825, 40.4692, 494.3258, 369.3667, 693.6907, 377.2397, 208.9247, 883.7913, 1033.4933, 147.4875, 429.9268, 247.8866], [45.7976, 211.7895, 661.9242, 582.1548, 420.7317, 1087.5412, 126.5139, 410.175, 972.6864, 104.8776, 280.6061, 769.8095, 595.5562, 1176.5586, 746.0351], [4.102, 79.0657, 260.075, 7.1081, 422.386, 598.8621, 490.4762, 53.6231, 174.1573, 200.7833, 754.4639, 504.1901, 441.8562, 1081.2087, 517.8133, 222.825, 19.5122, 235.3093, 852.5747, 56.0784, 648.4167, 314.1207, 409.1791, 308.9444, 367.4106, 457.4023, 771.7957, 457.5865, 585.7368], [170.9097, 115.575, 359.3559, 15.1224, 122.8939, 163.4762, 465.1687, 619.009, 98.3158, 298.8793, 336.0159, 366.9231, 249.6966, 247.1333, 787.4021, 1039.0579, 585.911, 1615.8348, 1039.96, 992.125, 336.6392, 1159.1724], [790.6034, 594.619, 184.8615, 104.8539, 341.3, 767.4124, 605.6033, 548.3973, 902.6957, 746.4533, 1033.0625, 109.9756, 603.299, 929.4253, 0.0, 636.6528, 403.7414, 491.2239, 437.2917, 441.3907, 761.9195, 64.4086, 676.0, 1383.6579], [298.3929, 41.1696, 410.7727, 1217.7143, 1522.7317, 1235.82, 2226.0941, 176.8958, 222.275, 1787.2627, 420.6735, 795.9899, 408.5312, 1871.4775, 2896.4561], [255.7424, 506.131, 345.7317, 309.44, 583.3647, 519.2083, 484.65, 666.822, 100.9796, 353.1364, 498.2381, 511.375, 634.3063, 1059.0, 589.8276, 551.7937, 223.1385, 197.7079, 210.6667, 463.2887, 307.4247, 1107.1565, 538.64, 462.65, 332.2683, 441.2268, 1211.1494, 117.6471, 576.3472, 373.6034, 419.5224, 186.5139, 518.8966, 591.2258, 513.4423, 498.2368], [22.0101, 3051.381, 1419.8812, 1270.3153, 2274.1754, 2050.0345, 1752.2063, 1352.0385, 387.573, 1075.1167, 2722.3814, 1554.0826, 1281.8425, 5082.3913, 4717.32, 1672.575, 116.0488, 1773.7835, 1803.4828, 2117.5882, 1848.5069, 1104.931, 1961.4328, 737.8889, 1073.3179, 2052.2644, 3642.5269, 636.2308, 1498.8947], [717.6786, 440.2749, 1030.3485, 1890.4048, 1395.2235, 398.9861, 1480.0678, 193.2653, 0.0, 0.0, 1029.35, 1810.2793, 4532.7018, 1727.069, 2047.4762, 84.9, 295.4494, 361.35, 2896.4227, 3405.2397, 2601.7055, 4628.1739, 1541.5333, 2935.275, 1256.1707, 1625.701, 2378.3448, 2873.0, 2039.8194, 991.1207, 1453.6567, 70.4861, 686.2781], [248.8452, 287.2749, 1153.8333, 1277.7738, 1426.0488, 2650.78, 2073.5059, 481.9722, 0.0, 1206.7712, 136.3673, 797.5707, 8070.0476, 1853.8812, 1382.009, 3486.7193, 1437.0794, 1187.9692, 100.809, 179.2833, 2680.9588, 3371.7851, 1907.0411, 4126.1217, 2473.8, 1730.55, 686.9588, 1834.0805, 0.0, 912.6597, 0.0, 1030.3433, 55.2083, 1038.649, 3485.1954, 2811.9247, 2490.4423, 1212.6316], [1162.2381, 1039.1951, 2471.44, 2307.9176, 2050.2083, 111.85, 2647.0169, 106.3673, 1283.9091, 5643.7143, 2001.2375, 0.2793, 683.9474, 1619.6207, 1813.0794, 598.2231, 769.4719, 1314.1667, 4252.268, 3652.9421, 2255.2329, 3693.0261, 3339.1733, 1910.0625, 35.6098, 835.4433, 2103.3793, 2.5882, 2520.2569, 114.5, 2710.597, 1113.3611, 1136.9338, 898.8736, 3194.8495, 3265.4808, 1529.8684], [171.076, 2872.7424, 1311.6429, 2109.7317, 182.72, 3010.0588, 1425.7847, 873.15, 2148.178, 1036.1313, 2813.775, 2371.964, 2028.8596, 2753.8276, 2729.4603, 1756.9231, 388.7753, 1172.5333, 4714.4021, 2829.7025, 1698.4041, 4278.8435, 3601.0667, 3326.1125, 451.9756, 844.7526, 1578.3793, 1800.1111, 630.0517, 1708.1194, 1110.3194, 2550.9735, 3030.3218, 2330.8172, 2419.9038, 2323.1053]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

