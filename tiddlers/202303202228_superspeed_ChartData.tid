created: 20230320222849000
creator: Drevarr
modified: 20230705163522741
modifier: drevarr
tags: ChartData
title: 202303202228_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Avanda Corone", "The X E N", "Venomina The Siren", "Jeckyll Mbs", "High Sorcer Baradun", "Tootsie Pop Rocks", "Smol Daddy Tika", "Xanvias Einzbern", "Zadie Miststep", "Cat Wigglebooty", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Berserker", "Chronomancer", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Berserker", "Tempest", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.71, 0.566, 0, 1.13, 0, 1.048, 0.755, 0.442, 0.475, 0.244, 0, 0.59], [0.722, 0.9, 0.783, 0.53, 0.652, 0.867, 0.319, 0.412, 0.675, 0.437, 0.468, 0.31, 0, 0.556, 0.336], [0.588, 0.424, 1.2, 1.056, 1.141, 1.703, 1.0, 0.101, 1.036], [0.473, 0, 0.563, 0.719, 0.203, 0.426, 0.424, 0, 0.503, 0.141, 0.646, 0.702, 0.565, 0.31, 0.513, 0.202, 0.64], [0.744, 0, 0.47, 0.469, 1.511, 0.584, 0.823, 1.549, 0.573, 0.757, 0.676, 1.038], [0.832, 0.839, 0.158, 0.304, 0.463, 0.396, 0.48, 0.322, 0.723, 0.776, 0.194, 0.609, 0.771, 0.231, 0.51, 0.324, 0.697, 0.495, 0.229, 0.27, 1.058, 0.608, 0.386], [1.6, 2.085, 0.914, 1.945, 0.721, 0.154, 0.618, 0.213, 0.403, 0.497, 0, 0.54, 0.338, 0.387, 0.829, 0, 0.607, 0.339, 0.531, 0.712, 0.722], [0.21, 0, 1.389, 1.048, 0, 0.127, 0.257, 0.581, 0.67, 1.061, 1.69, 0, 0.646, 0.709, 0, 0, 0.235, 0, 1.167, 0.678, 0.514, 0.612, 0, 0.338, 0], [0, 1.577, 0, 0, 0, 0, 0, 1.111, 1.003, 0.537, 0, 0, 0.705, 0.926, 0, 0.988, 0, 1.08, 0.585, 0.736, 0.645, 0.862, 0, 0, 0.926], [0.656, 1.202, 0.831, 1.295, 1.215, 0.672, 0.308, 0.847, 0.928, 0.306, 0.537, 0, 0.633, 0.875, 0.193, 0.685, 0.702, 0.799, 0.703, 0.802, 0.516, 0.296, 0.604, 0.405, 0.709], [0.314, 0.501, 1.042, 1.258, 1.189, 0.833, 0.926, 1.391, 0.902, 1.049, 0, 1.169, 1.761, 0.773], [0.968, 1.379, 0.69, 0.629, 0.636, 0.302, 0.573, 1.497, 0.815, 1.447, 0, 0, 0.94, 1.08, 0.964, 1.445, 0.836, 1.053, 1.415, 0.761, 1.009, 0.671], [1.271, 1.005, 3.072, 1.546, 1.554, 0.756, 0.984, 1.655, 0.953, 0.94, 1.086, 0.146, 1.285, 1.625, 1.356, 1.242, 0.979, 2.178, 1.75, 1.463, 1.372, 1.026, 1.66, 0.709, 1.906]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

