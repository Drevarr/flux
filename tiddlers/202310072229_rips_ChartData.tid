created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Efreet White", "Etchery Howls", "Mitsuri Ai", "Ryvalia Fazebringer", "Latedoctor", "Zaedy Zae", "Efreet White", "Nickhia", "Morv\u00e4rth", "K\u00e9ld\u00e1", "Un Bearahble", "Demon Zen", "Kasaka", "Kalisha Lafay", "Kurn The Drunk", "Rina Of Theros", "Morton Saltbringer", "Be\u00eb", "Smurf Komdol Fri", "Newtype Khan"];
const professions = ["Firebrand", "Reaper", "Druid", "Druid", "Chronomancer", "Reaper", "Druid", "Scourge", "Scourge", "Reaper", "Chronomancer", "Reaper", "Reaper", "Reaper", "Chronomancer", "Reaper", "Reaper", "Chronomancer", "Reaper", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2973, 0.0, 0.0062, 0.0323, 0.0, 0.0, 0.0392, 0.0149, 0.0341, 0.0452, 0.0, 0.0, 0.0, 0.018, 0.0, 0.0187, 0.0, 0.0, 0.0, 0.0], [0.3187], [0.0124, 0.0645, 0.0532, 0.0909, 0.0784, 0.1194, 0.1136, 0.0452, 0.1111, 0.0303, 0.0721, 0.0634, 0.0063, 0.0149, 0.0401, 0.0], [0.0319, 0.0519, 0.0588, 0.0, 0.1493, 0.125, 0.0633, 0.1333, 0.0303, 0.045, 0.0352, 0.0625, 0.005, 0.0566, 0.0, 0.0], [0.1081, 0.0, 0.0, 0.0435, 0.0323, 0.0426, 0.1688, 0.1471, 0.0, 0.194, 0.0795, 0.086, 0.0222, 0.0303, 0.075, 0.018, 0.0141, 0.0875, 0.0, 0.0165, 0.0, 0.015], [0.0, 0.0, 0.0, 0.0484, 0.0319, 0.039, 0.1765, 0.194, 0.1818, 0.009, 0.0222, 0.0, 0.025, 0.045, 0.0634, 0.175, 0.0, 0.0354, 0.0149, 0.0602], [0.1351, 0.0, 0.0, 0.0683, 0.0484, 0.1064, 0.0779, 0.0784, 0.1194, 0.1591, 0.0679, 0.1333, 0.0909, 0.0721, 0.007, 0.0688, 0.01, 0.0613, 0.0149, 0.015], [0.0, 0.0, 0.5045, 0.4225, 0.005, 0.1415, 0.0], [0.1212, 0.3604, 0.1408, 0.2437, 0.0149, 0.1321, 0.4478, 0.0], [0.5224, 0.4545, 0.1357, 1.0222, 0.0, 0.1441, 0.1479, 0.25, 0.0, 0.0566, 0.0, 0.0301], [0.0, 0.0, 0.0286, 0.3043, 0.2097, 0.2447, 0.1948, 0.2451, 0.0, 0.5821, 0.2273, 0.1086, 0.1333, 0.0606, 0.025, 0.027, 0.2817, 0.1062, 0.0, 0.0708, 0.0149, 0.015], [1.2703, 0.0, 0.1739, 0.5, 0.2553, 0.2597, 0.3529, 0.0, 0.4179, 0.4432, 0.1991, 0.8444], [1.0541, 0.0, 0.1491, 0.2742, 0.266, 0.3766, 0.1863, 0.0, 0.597, 0.3864, 0.1357, 0.5778, 0.0, 0.0, 0.0, 0.1408, 0.2, 0.0, 0.0236, 0.0, 0.0], [0.0124, 0.4032, 0.1596, 0.3117, 0.8137, 0.0, 0.5075, 0.6136, 0.0181, 0.0303, 0.1982, 0.2465, 0.025, 0.0, 0.1627], [0.6757, 0.0, 0.0571, 0.1366, 0.5323, 0.0638, 0.1429, 0.1667, 0.3881, 0.4091, 0.1403, 0.6, 0.0, 0.025, 0.4775, 0.2887, 0.2313, 0.0, 0.0448, 0.0149, 0.015], [0.0, 0.0, 0.2236, 0.3387, 0.2766, 0.3247, 0.5588, 0.0, 0.6418, 0.2045, 0.2262, 1.0889, 0.0, 0.0, 0.2252, 0.2324, 0.2625, 0.01, 0.1274, 0.0, 0.0602], [0.8378, 0.0119, 0.0286, 0.3106, 0.5, 0.2447, 0.2727, 0.6078, 0.0303, 0.5522, 0.5455, 0.2941, 0.7333, 0.0303, 0.025, 0.3243, 0.1338, 0.1938, 0.01, 0.0708, 0.0149, 0.0075], [0.0, 1.0597, 0.8409, 0.8416, 1.5556, 0.6479, 0.6125, 0.0199, 0.1014, 0.0299, 0.0602], [0.0, 0.2112, 0.1935, 0.2234, 0.1429, 0.6961, 0.0, 0.9104, 0.4773, 0.7104, 1.1333, 0.0, 0.0, 0.6126, 0.5141, 0.3438, 0.0, 0.1132, 0.0149, 0.0], [0.0238, 0.0286, 0.646, 1.3226, 0.9681, 1.2078, 1.3431, 0.0303, 1.6119, 1.0341], [1.4324, 0.0, 0.0857, 0.3106, 0.5645, 0.4574, 0.3117, 1.1275, 0.0909, 0.7761, 0.5227, 0.3484, 0.4444, 0.0, 0.3604, 0.2535, 0.425, 0.0, 0.1203, 0.0448, 0.0376]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

