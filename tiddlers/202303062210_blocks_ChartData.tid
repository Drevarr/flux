created: 20230306221045000
creator: Drevarr
modified: 20230705163521281
modifier: drevarr
tags: ChartData
title: 202303062210_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Morv\u00e4rth", "Klee Flamepumpkin", "Dark Sidiuz", "Oo Dads Mad", "King Squid", "Cerys Fireblade", "Demon Sekhmet", "Ace Hammers", "Legacy Of Mathus", "Sofya De Nova", "Estryl", "Raelyn Sunray", "Smol Daddy Tika", "Tribal S", "Baidu Leohunt", "Blanco Padre Guard", "Xyntharos", "Mike The Archmagus", "Cat Wigglebooty", "Rozaalyna", "Ark Darkness", "Newtype Khan", "Zadie Miststep", "Chronomancer Trixy", "Kahless The Drunk", "My Birthday Girl", "Smol Gluvs", "Mac Aaroni", "Xanvias Tseli", "Tegan Parker", "Koralia Danai", "Fribble Bibble", "Viral Marketing", "Husky Guard", "Arcanophage Farra", "\u00c1rkantor", "Tootsie Pop Bringer", "Zaylen Harker", "Mistwalker Caelon", "Be\u00eb", "Ravioli Fetabringer", "Black Raspberry Pie", "Sygaldry Verdandi", "Bella Sassy", "Drevarr Moonwillow", "Primal Clone", "Eibh\u00ebar", "Raziel Umbra", "Ryvalia Fazebringer"];
const professions = ["Weaver", "Scourge", "Tempest", "Scourge", "Spellbreaker", "Reaper", "Berserker", "Spellbreaker", "Vindicator", "Berserker", "Weaver", "Spellbreaker", "Firebrand", "Berserker", "Druid", "Dragonhunter", "Firebrand", "Vindicator", "Tempest", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Scourge", "Tempest", "Berserker", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Dragonhunter", "Spellbreaker", "Vindicator", "Scrapper", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 6, 0, 3, 0, 2, 2, 0, 2, 0, 4, 0, 4, 0, 3, 4, 0, 5, 3, 0, 0, 0, 9, 1, 3, 0, 3, 1, 14, 0, 0, 1], [15, 3, 0, 7, 1, 0, 9, 1, 4, 5, 0, 4, 6, 14, 10, 3, 2, 0, 8], [11, 13, 9, 2, 0, 6, 1, 22, 8, 1, 13, 0, 13, 0, 8, 3], [3, 8, 6, 0, 4, 3, 6, 3, 4, 3, 1, 5, 4, 19, 0, 0, 11, 1, 6, 0, 2, 0, 15, 4, 1, 0, 5, 9], [18, 1, 0, 16, 0, 11, 0, 8, 4, 0, 12, 14, 12, 8, 2, 13, 0, 5], [12, 10, 0, 9, 0, 6, 5, 10, 7, 0, 8, 10, 12, 14, 3, 2, 0, 3, 12, 0, 1, 0, 2, 8, 0, 2, 7, 0], [19, 3, 0, 6, 0, 0, 1, 1, 7, 5, 0, 6, 3, 5, 10, 4, 2, 8, 2, 18, 1, 12, 3, 1, 0, 6, 4, 4, 6, 5, 2, 4, 1], [11, 5, 11, 5, 1, 5, 4, 0, 6, 1, 2, 6, 2, 2, 0, 5, 3, 29, 7, 2, 8, 0, 6, 2, 10, 8, 3, 12, 4, 5], [10, 2, 0, 5, 0, 0, 7, 3, 8, 2, 0, 17, 14, 6, 6, 0, 5, 1, 10, 5, 11, 0, 0, 2, 2, 3, 0, 5, 4, 10, 4, 5, 14, 3, 4], [9, 2, 0, 5, 0, 0, 8, 1, 3, 4, 0, 14, 8, 8, 8, 3, 11, 0, 8, 2, 12, 0, 8, 2, 7, 0, 7, 2, 7, 10, 3, 4, 5, 9], [0, 1, 6, 0, 1, 6, 2, 5, 5, 0, 10, 7, 4, 12, 2, 10, 0, 7, 1, 27, 0, 0, 8, 0, 5, 0, 4, 5, 11, 13, 5, 1, 7, 5], [14, 4, 0, 8, 3, 10, 11, 3, 12, 0, 9, 9, 18, 0, 12, 3, 15, 0, 6, 6, 17, 6, 0, 2, 6, 4], [17, 19, 10, 9, 1, 6, 6, 40, 1, 0, 19, 4, 18, 1, 15, 7, 20], [16, 3, 0, 11, 0, 0, 7, 0, 6, 5, 0, 16, 12, 0, 8, 1, 5, 6, 1, 29, 0, 0, 12, 1, 15, 0, 6, 0, 18, 12, 1, 11, 5, 5], [16, 2, 0, 4, 0, 0, 1, 0, 7, 2, 1, 10, 10, 12, 13, 3, 5, 0, 10, 8, 30, 0, 0, 14, 2, 15, 0, 6, 4, 13, 7, 2, 9, 4, 5], [20, 3, 0, 13, 0, 0, 13, 4, 4, 4, 2, 3, 4, 8, 10, 1, 21, 5, 17, 2, 14, 9, 6, 15, 4, 20, 5, 11], [9, 3, 2, 11, 0, 1, 9, 2, 9, 4, 1, 21, 4, 11, 8, 7, 6, 1, 7, 9, 20, 11, 2, 9, 1, 8, 6, 2, 7, 5, 6, 10, 9], [12, 1, 0, 12, 0, 0, 2, 0, 10, 4, 1, 16, 6, 13, 12, 3, 3, 16, 0, 23, 0, 8, 1, 16, 0, 9, 3, 17, 0, 2, 7, 17, 10], [10, 4, 9, 0, 1, 11, 4, 8, 2, 1, 14, 2, 14, 17, 2, 8, 0, 11, 15, 17, 1, 11, 2, 10, 0, 10, 6, 7, 9, 3, 14, 3, 7], [15, 7, 0, 10, 0, 14, 0, 5, 8, 0, 14, 8, 8, 12, 3, 4, 0, 9, 1, 28, 0, 11, 1, 19, 7, 5, 16, 12, 8, 15, 7, 8], [23, 6, 0, 13, 0, 0, 12, 5, 9, 4, 0, 17, 7, 11, 14, 4, 5, 3, 0, 32, 0, 16, 3, 12, 1, 5, 7, 23, 15, 2, 13, 0], [23, 8, 0, 8, 1, 10, 6, 1, 23, 12, 19, 20, 10, 11, 14, 12, 34, 1, 16, 2, 22, 1, 11], [18, 7, 0, 12, 0, 3, 11, 6, 0, 15, 6, 12, 17, 3, 8, 16, 0, 44, 17, 1, 12, 9, 3, 15, 12, 0, 11, 3, 7], [14, 4, 0, 14, 0, 3, 2, 10, 7, 1, 19, 22, 10, 14, 5, 9, 10, 6, 9, 15, 0, 18, 0, 15, 5, 26, 17, 0, 14, 6, 7], [23, 5, 0, 16, 0, 0, 15, 2, 8, 7, 0, 20, 13, 12, 5, 8, 19, 4, 23, 10, 4, 10, 0, 8, 4, 30, 12, 6, 9, 7, 10], [21, 5, 0, 11, 1, 0, 11, 1, 10, 3, 2, 13, 8, 15, 14, 3, 10, 15, 7, 29, 1, 0, 13, 3, 16, 0, 11, 7, 22, 11, 4, 14, 10, 9], [23, 3, 9, 0, 0, 19, 2, 8, 8, 0, 2, 10, 13, 6, 8, 13, 0, 18, 5, 53, 0, 14, 4, 18, 0, 13, 3, 22, 12, 6, 0, 13, 9], [15, 5, 0, 7, 0, 0, 17, 2, 5, 7, 2, 18, 10, 11, 19, 3, 12, 0, 13, 8, 22, 0, 0, 24, 2, 15, 1, 15, 10, 26, 17, 6, 8, 9, 9], [15, 3, 0, 11, 0, 8, 5, 16, 8, 0, 19, 7, 8, 11, 7, 13, 0, 8, 4, 29, 0, 1, 23, 4, 12, 0, 12, 4, 20, 19, 7, 11, 28, 11], [23, 7, 0, 17, 0, 1, 5, 2, 7, 10, 1, 24, 11, 15, 16, 7, 6, 0, 11, 5, 33, 0, 0, 18, 1, 17, 9, 5, 20, 20, 4, 13, 10, 10], [0, 7, 0, 15, 0, 2, 14, 1, 3, 6, 1, 14, 11, 18, 8, 6, 9, 22, 17, 42, 17, 4, 22, 0, 15, 5, 22, 8, 4, 17, 13, 12], [24, 6, 11, 0, 7, 2, 5, 12, 1, 24, 7, 14, 15, 5, 14, 7, 8, 33, 1, 19, 3, 14, 10, 8, 24, 18, 5, 18, 9, 12], [22, 5, 1, 19, 0, 0, 15, 5, 8, 5, 0, 21, 14, 12, 22, 8, 6, 21, 4, 30, 0, 1, 17, 4, 17, 0, 12, 4, 23, 10, 8, 9, 10, 10], [18, 5, 0, 15, 0, 0, 14, 2, 9, 9, 1, 13, 17, 17, 11, 4, 14, 1, 13, 14, 38, 1, 15, 1, 16, 3, 9, 7, 22, 16, 1, 16, 15, 7], [31, 6, 0, 23, 0, 0, 18, 3, 12, 6, 2, 24, 18, 20, 14, 5, 15, 1, 20, 2, 24, 1, 21, 2, 11, 1, 5, 3, 10, 19, 5, 9, 10, 9], [19, 9, 0, 5, 0, 12, 5, 8, 6, 0, 23, 14, 17, 22, 11, 11, 5, 8, 34, 1, 20, 3, 21, 0, 16, 4, 27, 14, 6, 15, 15, 6], [16, 3, 1, 15, 0, 0, 10, 3, 16, 6, 1, 27, 13, 13, 18, 3, 14, 17, 7, 42, 0, 19, 13, 1, 16, 6, 23, 14, 4, 16, 6, 14], [23, 8, 0, 15, 1, 0, 35, 2, 27, 5, 0, 26, 17, 18, 18, 8, 9, 24, 17, 3, 11, 7, 25, 20, 7, 14, 6, 12], [14, 9, 11, 0, 1, 15, 5, 9, 9, 2, 23, 12, 13, 24, 4, 17, 0, 22, 3, 36, 0, 0, 23, 4, 20, 1, 11, 5, 21, 12, 5, 19, 13, 5], [31, 2, 1, 23, 0, 0, 23, 1, 11, 12, 0, 21, 11, 15, 14, 8, 21, 0, 8, 15, 36, 0, 0, 17, 1, 16, 1, 15, 3, 13, 19, 5, 12, 8, 16], [16, 5, 0, 16, 0, 1, 14, 2, 8, 10, 1, 23, 15, 17, 16, 5, 18, 0, 27, 8, 39, 0, 1, 18, 3, 15, 1, 9, 7, 26, 14, 8, 17, 11, 13], [27, 6, 1, 15, 0, 0, 16, 4, 13, 8, 2, 31, 13, 14, 21, 7, 19, 30, 13, 22, 0, 0, 15, 3, 21, 1, 11, 6, 24, 18, 7, 21, 13, 13], [28, 8, 0, 21, 0, 1, 16, 3, 16, 10, 0, 17, 23, 19, 40, 6, 13, 0, 46, 1, 36, 1, 0, 16, 2, 16, 1, 11, 17, 4, 11, 4, 13, 14, 9], [21, 10, 0, 21, 0, 0, 17, 4, 16, 6, 2, 23, 19, 18, 21, 6, 14, 0, 15, 10, 40, 1, 0, 21, 4, 20, 0, 18, 9, 27, 20, 4, 22, 15, 11], [30, 10, 0, 17, 0, 0, 16, 3, 15, 10, 2, 20, 15, 17, 19, 9, 4, 21, 5, 45, 0, 20, 5, 26, 1, 13, 9, 25, 28, 7, 27, 15, 9], [34, 11, 0, 18, 0, 3, 23, 2, 16, 12, 2, 27, 14, 23, 28, 15, 10, 0, 12, 9, 42, 0, 31, 1, 20, 0, 17, 9, 32, 24, 9, 24, 16, 11], [30, 8, 0, 14, 0, 1, 32, 3, 31, 7, 1, 26, 10, 22, 18, 8, 40, 46, 2, 31, 0, 0, 28, 2, 18, 0, 18, 8, 29, 11, 15, 13, 11, 19], [30, 20, 0, 14, 0, 0, 25, 2, 14, 9, 1, 30, 20, 24, 14, 7, 13, 0, 17, 13, 58, 0, 0, 27, 2, 26, 0, 14, 9, 34, 31, 10, 31, 23, 9], [25, 1, 0, 14, 1, 0, 30, 2, 53, 8, 0, 26, 32, 34, 42, 3, 51, 20, 3, 57, 0, 0, 34, 1, 17, 1, 4, 4, 28, 28, 7, 11, 1, 15], [42, 14, 0, 28, 0, 1, 38, 4, 4, 16, 2, 23, 29, 28, 38, 10, 10, 21, 3, 42, 1, 0, 28, 8, 36, 0, 20, 17, 33, 36, 11, 30, 19, 14]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

