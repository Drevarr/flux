created: 20230626220846000
creator: Drevarr
modified: 20230705163539614
modifier: drevarr
tags: ChartData
title: 202306262208_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Etchery", "Mike The Archmagus", "Legacy Of Mathus", "Specialist Zeff", "Artakama Nahid", "Lucky Leipreach\u00e1n", "Ateriuz", "Zadie Miststep", "Cyr", "Tootsie Pop Rocks", "Ateriuz", "Tegan Parker", "Cyclotechnist Farra", "Dim Og", "Regis Hawkesburne", "Newtype Khan", "Zadey Starbolt", "Grasszanine", "Blancooo Padreee", "Cat Wigglebooty", "Xanvias Einzbern", "Johosh The Mighty", "My Birthday Girl", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Scrapper", "Tempest", "Berserker", "Scrapper", "Tempest", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Berserker", "Tempest", "Scrapper", "Scrapper", "Berserker", "Spellbreaker", "Scrapper", "Spellbreaker", "Spellbreaker", "Scrapper", "Berserker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.309, 0, 0.736, 0.528, 0.23, 0.593, 0.654, 0, 0, 0], [0.6, 1.143, 1.68, 0.949], [0.771, 0.82], [0.195, 0, 0, 0.138, 0, 0.314, 0.872, 1.056, 0, 0.764, 0.589, 0, 0.74, 0, 0, 0.507, 0.74], [0, 0.989, 0.261, 0.578, 0.13, 0.538, 1.101, 0, 0.864, 1.461], [0.156, 0, 0.239, 0.331, 0.425, 0, 0.523, 0.393, 0.445, 0.34, 0.239, 0.269, 0.344, 0.563, 0.522, 0.521, 0.306, 0.782, 0.314, 0.561], [1.553, 0.997, 1.55, 0.582, 0.155, 1.343, 0.417, 1.173, 0.976, 0.07], [1.011, 0.705, 1.279, 1.161, 0.835, 1.216, 0.945, 1.167], [0.738, 0.13, 0.394, 0.838, 0.645, 0.549, 0.757, 0.563, 0.356, 0.434], [0.356, 0.814, 0.319, 0.773, 0.459, 0.486, 0.261, 1.087, 0.852, 1.301, 0.795, 1.496], [0.595, 1.456, 1.363, 0.664, 0, 1.235, 1.525, 0.399, 1.764, 0.775], [0.71, 0, 0.328, 0.879, 0.895, 0.33, 0.872, 1.056, 0.754, 0.825, 0.375], [0.263, 0.2, 0.525, 0.633, 0.356, 0.569, 0.493, 0.542, 0.804, 0.643, 0.521, 0.747, 0.611, 1.618, 0.648, 0.539], [1.746, 0.672, 1.348, 0.806, 0.391, 1.741, 1.329, 0.489, 0.162, 1.454], [1.911, 1.0, 0.506, 0.561, 1.833, 1.357, 0, 1.621, 1.381], [0.735, 0, 0.41, 0.352, 0.6, 0.333, 0.384, 0.198, 0.593, 0.725, 0.185, 0, 0.764, 0.541, 0.964, 0.07, 0.618, 1.615, 0.65, 0.9], [0.57, 0.817, 0.704, 0, 0.333, 0.754, 0.528, 0.497, 0.142, 0.675, 0.956, 0.835, 0.462, 0, 0.955, 0.711, 0, 0.898, 0.912], [1.497, 1.804, 1.479, 1.121, 0.819, 2.135, 2.054, 0.391, 2.567, 1.979], [0.724, 1.061, 1.123, 0.59, 0.919, 0.247, 0.654, 0.735, 0, 0.559, 0.923, 1.009, 0.884, 0.915, 0.326, 0.658, 0.69, 0, 1.07, 0.997], [0.765, 0, 1.38, 0.704, 0.671, 0.733, 0.818, 1.018, 0.445, 0.567, 0.532, 0.401, 0.955, 0.797, 0.434, 0.74, 1.098, 1.314, 1.045, 0.796], [1.065, 0, 0.81, 1.266, 0.896, 0.923, 0.523, 0.07, 0.362, 0.607, 0.477, 1.088, 0.822, 0.666, 0.196, 0.188, 0.955, 0.524, 1.035], [1.046, 0, 0.489, 0.662, 0.906, 0.722, 0.544, 0.713, 0.593, 0.569, 0.013, 1.2, 1.444, 0.403, 0.758, 1.024, 1.019, 1.301, 0.983, 0.92], [1.106, 0, 0.579, 0.553, 0.795, 0.727, 0, 1.059, 0.581, 0.567, 0.533, 0.448, 0.766, 0.793, 0.68, 0.979, 1.016, 1.629, 1.719, 1.177], [0.611, 2.088, 2.295, 2.136, 1.023, 1.952, 1.649, 1.246, 1.101, 2.398, 1.797, 1.946, 0.802, 1.138, 1.636, 1.264, 1.17, 1.499, 1.667], [1.791, 0.521, 0.752, 1.003, 1.208, 0.734, 0.523, 1.184, 0.671, 1.075, 1.012, 1.576, 1.102, 1.175, 0.464, 1.261, 1.438, 1.414, 1.499, 1.697]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

