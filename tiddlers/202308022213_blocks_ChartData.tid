created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Sahan", "Glorious Gluvs", "Mort\u00e4rion", "Lord Erin The Wise", "Daphne Agla\u00e9", "Minnie Darley", "High Sorcer Baradun", "Oo Dads Mad", "M A N O W A R", "Kisumaiasu", "Keypek The Drunk", "Revitiel", "Imalou", "Venomina The Sly", "Jimbo One Eye", "Squishy Jellyfish", "Rahani Sunray", "Sister Elonith", "Elementsofmathus", "K\u00e2 \u00d4tik R\u00e6j", "Necrotic Windrunner", "Cedryn X", "Mike The Archmagus", "Tootsie Pop Rocks", "Crusader Siolith", "Zaylen Harker", "Black Raspberry Pie", "Inedible Plant", "Sub Train", "Cat Wigglebooty", "Morton Saltbringer", "Gabe Malhorn", "Sygaldry Verdandi", "Kary\u00edna", "Newtype Khan", "Tegan Parker", "Primal Clone", "Mistwalker Cael", "Bella Sassy", "Zaedy Zae", "Arcanophage Farra", "Tribal S", "Koralia Danai", "Solus Sanctus", "Xanvias Einzbern", "Be\u00eb", "Eibh\u00ebar", "\u00c1rk\u00e1ntor", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Firebrand", "Berserker", "Scrapper", "Weaver", "Scourge", "Dragonhunter", "Tempest", "Berserker", "Berserker", "Scourge", "Scrapper", "Vindicator", "Firebrand", "Druid", "Scrapper", "Firebrand", "Chronomancer", "Berserker", "Tempest", "Berserker", "Scourge", "Berserker", "Weaver", "Scrapper", "Firebrand", "Dragonhunter", "Chronomancer", "Vindicator", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Spellbreaker", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Druid", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Scourge", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 3, 0, 3, 43], [1, 7, 13, 8, 0, 6, 1, 1, 0, 2, 19, 7, 1, 5], [0, 3, 9, 5, 0, 2, 1, 1, 0, 0, 26, 3, 0, 5, 9, 11], [12, 0, 8, 0, 3, 0, 0, 20, 0, 0, 8, 13, 18], [0, 7, 18, 12, 1, 5, 2, 3, 0, 0, 25, 5, 0, 6], [4, 2, 10, 21, 52], [3, 1, 12, 21, 57], [0, 10, 17, 13, 2, 17, 3, 2, 1, 0, 37], [0, 5, 13, 10, 0, 8, 4, 0, 0, 6, 5, 1, 2, 20, 37], [0, 8, 11, 6, 1, 10, 0, 2, 1, 2, 23, 3, 1, 10, 17, 17], [0, 5, 15, 10, 0, 9, 2, 3, 0, 1, 22, 3, 0, 3, 12, 27], [2, 1, 0, 10, 3, 12, 0, 1, 1, 25, 6, 1, 10, 20, 25], [2, 10, 2, 2, 3, 23, 3, 2, 11, 15, 53], [0, 5, 12, 10, 0, 0, 0, 1, 0, 1, 22, 5, 0, 10, 13, 54], [0, 8, 13, 7, 1, 10, 0, 1, 0, 1, 22, 8, 1, 6, 11, 45], [2, 4, 9, 8, 2, 8, 2, 2, 1, 2, 18, 6, 3, 7, 17, 46], [0, 5, 18, 11, 2, 15, 4, 2, 0, 2, 10, 4, 2, 11, 16, 50], [0, 10, 15, 8, 2, 19, 0, 3, 0, 0, 26, 3, 1, 7, 13, 47], [1, 4, 8, 10, 3, 9, 3, 2, 1, 27, 5, 1, 5, 18, 57], [0, 9, 18, 8, 2, 15, 0, 1, 1, 3, 31, 7, 1, 5, 15, 49], [0, 6, 15, 13, 0, 6, 2, 1, 0, 31, 6, 1, 9, 17, 58], [1, 10, 13, 9, 2, 15, 0, 3, 1, 1, 37, 6, 1, 10, 23, 35], [1, 4, 11, 7, 1, 12, 0, 3, 1, 1, 5, 8, 0, 14, 23, 83], [0, 12, 16, 15, 2, 16, 1, 2, 0, 0, 31, 4, 2, 8, 18, 49], [1, 12, 16, 13, 1, 15, 0, 2, 2, 1, 24, 7, 1, 13, 16, 56], [6, 8, 22, 14, 1, 19, 2, 7, 2, 42, 3, 0, 13, 24, 19], [2, 8, 20, 13, 2, 18, 2, 0, 0, 3, 38, 5, 1, 12, 15, 44], [1, 6, 17, 11, 4, 14, 1, 4, 1, 24, 7, 1, 8, 19, 69], [8, 11, 13, 2, 12, 2, 3, 0, 1, 35, 7, 2, 11, 28, 57], [0, 6, 12, 9, 2, 19, 2, 1, 0, 1, 14, 12, 4, 13, 25, 79], [0, 7, 24, 15, 1, 20, 1, 1, 0, 1, 1, 7, 2, 8, 29, 85], [1, 11, 13, 16, 2, 19, 3, 3, 0, 1, 37, 3, 1, 8, 22, 65], [1, 9, 15, 14, 2, 16, 4, 3, 2, 1, 32, 5, 3, 11, 20, 74], [2, 10, 19, 12, 2, 18, 2, 2, 0, 1, 39, 4, 1, 15, 19, 70], [3, 5, 22, 14, 3, 18, 4, 2, 1, 43, 6, 0, 10, 20, 76], [1, 13, 21, 15, 4, 15, 2, 0, 0, 2, 40, 6, 0, 12, 32, 71], [1, 10, 21, 10, 3, 16, 1, 0, 2, 36, 4, 0, 17, 26, 90], [0, 9, 28, 13, 2, 22, 1, 1, 3, 1, 29, 4, 3, 9, 29, 84], [1, 11, 23, 17, 3, 19, 1, 3, 2, 8, 6, 1, 18, 36, 90], [3, 9, 18, 13, 1, 22, 1, 0, 0, 3, 37, 7, 2, 14, 26, 84], [1, 13, 24, 16, 2, 18, 0, 3, 1, 1, 42, 5, 2, 12, 32, 79], [2, 13, 23, 14, 1, 15, 1, 2, 1, 37, 6, 3, 13, 37, 90], [0, 6, 27, 16, 3, 14, 0, 3, 1, 1, 44, 3, 3, 11, 39, 90], [3, 10, 23, 14, 2, 16, 2, 4, 0, 5, 47, 8, 2, 12, 32, 84], [0, 12, 26, 16, 2, 18, 0, 3, 2, 0, 33, 9, 4, 17, 40, 85], [0, 9, 19, 15, 5, 26, 2, 4, 0, 0, 49, 5, 1, 15, 26, 94], [0, 9, 19, 15, 4, 23, 2, 3, 1, 0, 40, 9, 1, 19, 30, 97], [2, 10, 31, 16, 4, 23, 2, 2, 1, 1, 33, 4, 5, 22, 34, 96], [0, 17, 30, 19, 6, 19, 2, 4, 2, 6, 44, 9, 3, 13, 35, 100], [0, 15, 35, 17, 4, 17, 0, 4, 1, 4, 46, 14, 2, 18, 40, 102]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

