created: 20230626011754000
creator: Drevarr
modified: 20230705163537913
modifier: drevarr
tags: ChartData
title: 202306260117_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Sakis Ranger", "Tegan Parker", "Oo Dads Mad", "Arriasa", "Be\u00eb", "Be\u00eb", "Air One Com", "Duke Silvver", "Gabe Malhorn", "Etchery Of Ascalon", "Elon The Archmagus", "Zhavashian", "Zayde Sunsabre", "Jacob Pine", "Imalou", "Rina Of Theros", "Raziel Umbra", "Tika Fiery", "Elonith Requiem", "The Fancy Cheese", "Sumatra Satyricon", "Cerys Fireblade", "Arch Wells", "Mr Juebacca", "Elon The Archmagus", "Tribal S", "Drevarr Moonwillow", "Daddy Demon", "Xanvias Einzbern", "Newtype Khan", "Kosair", "Grasszanine", "Primal Clone", "Rozaalyna", "Eibh\u00ebar", "Solus Sanctus", "Blancooo Padreee", "Warrior Constantine", "Morv\u00e4rth", "Ryvalia Fazebringer", "Johosh The Mighty", "Smol Gluvs", "Koralia Danai", "Black Raspberry Pie", "Lord Erin The Wise", "Seiker Novus Terra", "Traidoruns Maximus", "Arcanophage Farra", "Xyntharos", "Mistwalker Cael"];
const professions = ["Druid", "Tempest", "Spellbreaker", "Druid", "Scourge", "Reaper", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Weaver", "Tempest", "Spellbreaker", "Reaper", "Firebrand", "Scourge", "Chronomancer", "Firebrand", "Reaper", "Scrapper", "Soulbeast", "Berserker", "Reaper", "Herald", "Tempest", "Druid", "Scrapper", "Tempest", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Reaper", "Chronomancer", "Firebrand", "Spellbreaker", "Spellbreaker", "Reaper", "Chronomancer", "Berserker", "Reaper", "Firebrand", "Chronomancer", "Weaver", "Tempest", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 1, 0, 11, 8, 14, 0, 2, 20, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 2, 14, 1, 10, 0, 7, 5, 4, 2, 6, 0, 3, 5, 1, 0, 1, 0, 0, 0, 3, 0, 0], [0, 5, 0, 0, 28, 1, 20, 0, 0, 14], [1, 1, 0, 1, 2, 22, 0, 9, 14, 4, 1, 0, 3, 7, 1, 3, 1, 1, 0, 0, 8, 0], [1, 6, 21, 27, 4, 8, 14, 3], [7, 1, 1, 1, 0, 39, 0, 1, 8, 0, 4, 1, 13, 0, 0, 9, 0, 0], [3, 2, 0, 5, 0, 1, 24, 3, 0, 17, 0, 6, 2, 18, 4, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0], [3, 10, 5, 21, 21, 1, 23, 4, 0], [0, 0, 0, 7, 17, 10, 4, 18, 1, 15, 4, 11, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0], [0, 0, 0, 5, 20, 23, 7, 2, 1, 19, 0, 0, 8, 0, 6, 0, 0, 0, 0, 0], [10, 1, 6, 16, 17, 11, 31], [0, 0, 0, 0, 1, 26, 6, 0, 3, 3, 23, 6, 2, 23, 0, 2, 0, 0, 1, 0], [9, 6, 6, 15, 0, 16, 11, 8, 0, 12, 9, 0, 6, 0, 1, 4, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 4, 2, 5, 4, 0, 21, 2, 3, 5, 1, 4, 1, 1, 2, 1, 6, 14, 1, 6, 0, 10, 10], [1, 0, 1, 3, 8, 24, 2, 16, 4, 8, 14, 1, 10, 0, 13, 3, 0, 2], [0, 0, 0, 3, 3, 0, 1, 0, 15, 18, 0, 17, 8, 30, 0, 6, 6, 0, 0, 0, 1, 3, 0, 1, 0, 0], [0, 0, 0, 0, 2, 20, 9, 0, 16, 11, 0, 19, 2, 0, 12, 14, 0, 2, 2, 0, 0, 5, 0, 0], [0, 2, 0, 1, 11, 20, 13, 4, 0, 12, 27, 0, 3, 0, 14, 0, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0], [0, 19, 1, 1, 13, 7, 27, 0, 10, 8, 7, 5, 0, 7, 0, 0, 12], [1, 1, 0, 2, 14, 11, 9, 10, 0, 5, 4, 8, 0, 11, 13, 0, 3, 8, 3, 3, 3, 0, 5, 0, 10, 0, 0], [0, 0, 6, 0, 0, 5, 8, 0, 5, 2, 4, 10, 10, 43, 0, 12, 7, 0, 0, 2, 0, 15, 0, 5, 0, 0], [13, 6, 0, 5, 12, 0, 13, 18, 0, 14, 20, 10, 0, 12, 0, 0, 2, 2, 1, 2, 0, 7, 0, 0], [0, 0, 0, 19, 8, 1, 0, 0, 12, 17, 17, 12, 6, 36, 0, 1, 0, 1, 10, 0, 0], [0, 8, 0, 0, 15, 0, 22, 1, 0, 2, 8, 0, 21, 19, 14, 1, 0, 10, 0, 0, 0, 0, 7, 0, 14], [19, 0, 25, 15, 2, 4, 6, 28, 0, 11, 5, 13, 3, 1, 6, 1, 0, 4, 1, 0], [0, 0, 0, 0, 18, 0, 42, 15, 3, 1, 3, 14, 0, 2, 26, 2, 17, 0, 1, 3, 0, 0, 0, 0], [0, 0, 0, 6, 14, 19, 13, 3, 1, 22, 17, 5, 6, 5, 31, 0, 2, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 12, 22, 15, 11, 5, 0, 16, 6, 1, 9, 1, 32, 0, 11, 6, 0, 2, 0, 0, 0, 0, 3, 0, 0], [0, 1, 0, 4, 2, 3, 32, 0, 0, 39, 1, 19, 2, 6, 34, 0, 7, 2, 0, 1, 0, 0, 2, 0, 2, 0, 0], [0, 2, 0, 1, 8, 5, 16, 13, 19, 3, 38, 0, 10, 2, 11, 9, 3, 1, 1, 7, 0, 0, 9, 0, 0], [11, 7, 0, 38, 37, 0, 16, 5, 22, 3, 3, 4, 4, 0, 0, 7, 0, 1, 0], [0, 13, 0, 6, 0, 12, 0, 28, 6, 9, 16, 20, 1, 6, 16, 27, 3, 0, 2, 0, 0], [1, 1, 0, 10, 14, 48, 10, 12, 0, 33, 14, 0, 1, 4, 0, 1, 10, 6, 0, 3, 0, 0, 0, 0, 2, 0], [1, 1, 0, 7, 17, 23, 22, 9, 0, 15, 18, 0, 3, 13, 26, 0, 2, 9, 0, 1, 2, 2, 0, 0, 0, 0], [4, 6, 6, 8, 24, 0, 31, 7, 25, 0, 2, 0, 13, 14, 6, 11, 3, 0, 0, 0, 10, 6, 1], [0, 1, 0, 11, 22, 3, 15, 11, 0, 19, 12, 3, 11, 1, 40, 0, 10, 3, 1, 2, 3, 6, 0, 0, 3, 0, 0], [5, 3, 0, 3, 13, 0, 14, 9, 0, 45, 0, 1, 10, 8, 31, 0, 11, 4, 0, 13, 0, 0, 4, 0, 3, 0], [2, 1, 1, 29, 12, 10, 11, 0, 41, 23, 8, 10, 9, 35, 0, 8, 3, 3], [3, 0, 5, 4, 56, 9, 12, 31, 34, 8, 23, 6, 4, 0, 3, 0, 0, 0, 7, 5, 0, 0, 7, 0, 0], [6, 19, 0, 37, 9, 45, 0, 0, 33, 7, 66, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 12, 14, 5, 7, 11, 0, 31, 18, 21, 12, 14, 25, 0, 13, 4, 2, 20, 1, 1, 1, 0, 9, 4, 0], [4, 0, 9, 10, 3, 32, 0, 0, 31, 18, 22, 37, 16, 12, 7, 1, 7, 7, 6, 4, 0, 0, 12, 0, 0], [1, 4, 0, 6, 19, 32, 31, 11, 28, 20, 6, 14, 0, 27, 0, 13, 9, 1, 16, 0, 4, 0, 0, 0, 0], [0, 1, 0, 7, 9, 14, 2, 24, 0, 78, 32, 3, 29, 12, 0, 0, 15, 6, 0, 1, 8, 0, 5, 0, 5, 0, 0], [0, 1, 14, 35, 7, 5, 18, 0, 7, 11, 0, 33, 10, 20, 0, 46, 8, 3, 14, 3, 0, 6, 0, 10, 0], [3, 0, 0, 32, 35, 37, 69, 3, 0, 22, 28, 0, 13, 0, 4, 2, 3, 2, 0], [2, 1, 0, 11, 0, 32, 4, 21, 0, 36, 10, 6, 3, 58, 0, 4, 8, 3, 12, 26, 2, 3, 0, 14, 1, 0], [0, 1, 0, 21, 12, 28, 30, 12, 1, 46, 21, 13, 8, 4, 5, 26, 5, 0, 12, 0, 0, 2, 0, 8, 3, 0], [5, 16, 1, 7, 0, 12, 0, 56, 42, 55, 53, 43, 58, 2, 22, 30, 9, 17, 14, 4, 10, 0, 20, 6, 0], [2, 16, 0, 17, 35, 32, 44, 57, 0, 58, 24, 24, 33, 20, 62, 0, 20, 27, 4, 17, 1, 9]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

