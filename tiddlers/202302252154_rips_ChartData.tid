created: 20230225215428000
creator: Drevarr
modified: 20230705163520305
modifier: drevarr
tags: ChartData
title: 202302252154_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Nekroomori", "Nekroomori", "Venomina The Fierce", "Morv\u00e4rth", "Daring Deathblade", "Sparks Malefacio", "Primal Clone", "Grasszanine", "Smol Gluvs", "Newtype Khan", "Be\u00eb"];
const professions = ["Scourge", "Reaper", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0513, 0.22, 0.2453, 0.2625], [0.0, 0.4921, 0.0854, 0.2857, 0.8, 0.0, 0.0], [0.1341, 0.17, 0.1509, 0.1875, 0.1964, 0.1143, 0.0694, 0.3944], [0.3333, 0.0, 0.3175, 0.0915, 0.07, 0.2264, 0.4, 0.7321, 0.0], [0.1667, 0.0286, 0.2857, 0.1951, 0.16, 0.2642, 0.3125, 0.6964], [0.7143, 0.4603, 0.0671, 0.0, 0.434, 0.3125, 0.4107, 0.4, 0.0, 0.4789], [0.2692, 0.1746, 0.311, 0.2, 0.3585, 0.3375, 0.0536, 0.0286, 0.0636, 0.7042], [0.4231, 0.1429, 0.0, 0.3476, 0.21, 0.4717, 0.525, 0.75, 0.0], [0.3077, 0.3016, 0.2805, 0.21, 0.5849, 0.2875, 0.0893, 0.8857, 0.6338], [0.4103, 0.0, 0.0635, 0.378, 0.4, 0.5472, 0.1375, 0.2321, 0.0, 0.0, 0.7746], [0.2692, 0.5238, 0.3841, 0.64, 0.1509, 0.425, 0.2321, 0.8571, 0.0, 1.169]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

