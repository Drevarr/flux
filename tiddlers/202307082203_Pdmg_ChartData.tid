created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Cedryn X", "Drevarr Moonwillow", "No Reserv\u00e9", "High Sorcer Baradun", "Crusader Siolith", "Charr Surethang", "Ateriuz", "Permanent Dawn", "Kary\u00edna", "Legacy Of Mathus", "Latedoctor", "Lord Erin The Wise", "Be\u00eb", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Einzbern"];
const professions = ["Chronomancer", "Berserker", "Scrapper", "Vindicator", "Weaver", "Willbender", "Berserker", "Berserker", "Weaver", "Vindicator", "Berserker", "Reaper", "Weaver", "Reaper", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[396.9851, 335.1311, 596.0698, 278.3571, 337.3684, 420.5862, 785.9873, 187.561, 459.9, 457.3333, 28.7719, 230.7231, 109.9733, 788.6724, 73.2264, 171.4655], [343.377, 378.907, 79.7143, 79.5, 1058.7759, 411.1519, 631.5854, 65.72, 585.8667, 78.2456, 51.6, 263.08, 638.8793, 250.7547, 0.0], [259.0, 74.5082, 109.6744, 209.7857, 0.0, 107.1724, 199.0886, 63.1707, 124.9, 232.4444, 6.8421, 138.2154, 111.8, 260.6034, 28.0189, 86.7931, 1538.3074], [513.7869, 2112.9302, 1913.1071, 681.2105, 948.0862, 1551.6962, 1147.9512, 1642.34], [201.3689, 596.5116, 0.0, 1621.5789, 1255.7069, 517.1772, 56.6829, 191.82, 17.1556, 213.5088, 716.1846, 1677.2933, 1509.9655, 50.0189, 118.4138], [391.7295, 360.093, 733.8214, 237.0789, 763.5948, 741.3924, 389.1707, 1000.68, 303.5778, 300.1579, 729.68, 929.431, 394.3019, 235.0, 611.8704], [1340.5328, 3590.6047, 216.1786, 575.1842, 1112.5345, 0.0, 659.561, 0.0, 2640.7778, 1137.8596], [285.1429, 231.5526, 4134.2155, 1318.4304, 153.4634, 1385.4, 2708.5778], [798.9, 870.4912, 65.8923, 3277.9867, 3870.2586, 2304.9717, 1707.6207], [485.8197, 782.7907, 2669.3214, 697.6053, 1370.7931, 1266.5316, 962.7317, 1064.44, 1474.0889, 679.0175, 557.4308, 1290.2667, 2757.1379, 127.3868], [1100.3115, 2943.5116, 1626.7143, 503.5526, 419.1379, 673.5854, 1616.52, 393.8667, 2033.3333, 952.6923, 444.1333, 1865.8966, 1134.6509, 1051.2069], [306.6475, 1628.9767, 1207.2143, 1029.7632, 1066.5948, 549.6456, 384.6585, 1143.1, 988.8, 652.4561, 126.3846, 1253.72, 689.7241, 1110.8491, 650.431, 1418.3889], [1743.0738, 32.4884, 2625.9643, 1222.2368, 2052.1207, 616.8861, 619.9512, 1511.0, 2277.6889, 1450.1228, 1300.7077, 1954.9733, 1883.8208, 315.1552], [784.4918, 2025.4651, 3579.6429, 1446.9211, 2054.5431, 1296.2658, 329.9512, 1578.54, 460.3111, 691.9123, 912.2154, 1146.4267, 2270.1379, 377.4151, 1068.8966, 1530.6444], [1061.6716, 1567.2459, 932.8605, 2476.1071, 1112.4211, 2380.9138, 1765.7215, 1678.0976, 2108.08, 1559.8444, 859.0877, 1291.7692, 2381.7867, 2440.9138, 588.8679, 1466.4483], [2548.6119, 2480.123, 2737.186, 4091.0, 1218.1842, 3512.819, 1877.3038, 790.0488, 2925.26, 4759.2, 1500.4912, 831.0923], [3142.7164, 2938.7049, 3472.3256, 4633.0357, 1246.5, 4694.7069, 2601.6709, 866.0488, 3667.2, 10730.6, 3326.614, 762.1231, 3892.0933, 3392.8793, 2557.3491, 3597.4138]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

