created: 20230415000841000
creator: Drevarr
modified: 20230705163525630
modifier: drevarr
tags: ChartData
title: 202304150008_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Smol Daddy Tika", "Drogo Deception", "Primal Clone", "Black Raspberry Pie", "Ryvalia Fazebringer", "Air One Com", "Grasszanine", "Blancooo Padreee", "Lucas Ryn", "Mmathuss", "Newtype Khan", "Xanvias Einzbern", "Koralia Danai", "Bella Sassy", "Aronorf Xideliesi", "Johosh The Great", "Solus Sanctus", "Smol Daddy Tika", "Arcanophage Farra"];
const professions = ["Berserker", "Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.9664, 0.0, 3.847, 32.004, 34.1226, 0.0, 0.0, 25.4334, 40.6224, 77.7418, 0.0, 21.2952, 0.0, 14.7881, 4.2723, 0.0, 23.7664, 0.0, 0.0, 36.0168, 0.0, 0.0], [52.92, 19.1633, 29.8031, 39.384, 68.4054, 27.81, 61.7371, 36.3147, 50.778], [23.8977, 23.9166, 12.672, 42.0525, 28.1475, 56.8491, 68.3031, 16.7076, 24.736, 13.225, 67.9291, 0.0, 26.3773, 12.722, 8.2174, 19.5146, 58.3862, 72.2164, 28.38], [24.6672, 28.7073, 22.8042, 20.124, 42.9336, 40.095, 60.0369, 70.4007, 15.0228, 34.8763, 13.271, 65.7726, 0.0, 32.0933, 18.4184, 9.9986, 26.8189, 74.3709, 77.2783, 26.8836, 24.1025, 29.7528], [23.7168, 33.8927, 26.3731, 16.056, 50.463, 42.7275, 63.0122, 70.1385, 26.3016, 15.8249, 14.053, 88.1461, 0.0, 33.247, 16.0923, 14.9371, 41.7547, 79.0822, 87.0647, 33.0756, 20.5128, 14.1649], [26.4384, 14.8797, 27.5319, 16.452, 43.5744, 30.105, 67.9001, 78.0045, 17.1288, 28.6539, 0.0, 82.3506, 0.0, 35.5543, 23.3078, 8.015, 27.146, 84.6348, 90.1018, 32.9208, 35.4778, 43.7237], [44.2368, 9.3937, 50.846, 35.64, 118.2276, 41.58, 73.3194, 90.0657, 59.3424, 55.0799, 17.457, 78.9811, 62.456, 26.4408, 48.6974, 57.8896, 131.0745, 106.8061, 28.2768, 8.0653, 39.9076], [60.4368, 52.8304, 55.4346, 0.0, 126.7182, 0.0, 80.2263, 26.0889, 55.9728, 110.0062, 0.0, 201.6309, 49.4509, 28.6244, 0.0, 30.9617, 70.8375, 189.4838, 18.4728, 55.1048, 31.2404], [118.152, 59.2934, 63.2214, 60.66, 58.9536, 29.43, 0.0, 39.1989, 15.8184, 142.5779, 0.0, 186.266, 39.7495, 45.9984, 0.0, 23.2213, 299.8393, 187.7965, 64.6548, 0.0], [31.1472, 105.0597, 113.3721, 17.496, 105.6519, 48.735, 110.0854, 167.0214, 37.5804, 82.6583, 17.181, 234.1129, 5.589, 73.0489, 43.0078, 13.7632, 76.423, 217.3919, 213.6122, 36.2748, 42.5641, 8.6024], [69.6816, 45.1652, 30.3129, 33.948, 183.2688, 50.895, 83.2016, 138.5727, 66.3156, 159.2479, 6.762, 237.2128, 63.5573, 41.5837, 60.9224, 75.6599, 90.5239, 216.818, 90.4032, 63.4964, 98.1196], [64.8864, 126.778, 65.4462, 47.556, 171.3339, 93.8925, 122.8366, 184.7199, 104.0832, 46.4761, 44.919, 265.6514, 59.4145, 51.0303, 37.2011, 46.3335, 71.0057, 143.758, 76.7292, 36.9697, 88.1588], [91.1952, 34.0429, 96.3617, 57.672, 108.4554, 133.1775, 181.3858, 156.5334, 50.5908, 102.1706, 27.991, 261.2036, 6.3342, 93.5005, 51.0777, 75.0094, 23.1122, 79.0822, 199.7763, 100.0008, 123.4964, 79.233], [96.984, 79.1329, 74.948, 28.98, 161.2413, 53.5275, 106.7913, 195.0768, 53.82, 151.7195, 0.0, 194.218, 87.4699, 63.1826, 91.08, 121.6663, 147.7323, 217.8304, 63.9324, 83.4498, 89.6465], [113.184, 57.9406, 137.1033, 54.72, 153.1512, 69.93, 95.634, 170.43, 66.0348, 98.9442, 7.705, 298.4029, 92.5042, 82.6453, 8.6222, 96.2647, 150.761, 258.4944, 102.3228, 71.7948, 92.4277], [141.0912, 75.3003, 129.4556, 75.96, 192.8808, 72.765, 49.3046, 117.99, 66.5496, 56.77, 24.656, 249.4778, 85.3199, 62.3756, 44.7709, 67.8104, 170.2791, 260.0129, 124.7688, 139.1607, 92.6864], [95.04, 65.6811, 112.167, 42.048, 201.2112, 63.855, 119.33, 218.2815, 75.9096, 161.3988, 37.904, 273.0643, 103.7788, 57.2013, 67.3182, 88.0882, 225.3001, 267.437, 101.2908, 47.1794, 133.4995], [87.3072, 82.5898, 112.1206, 47.952, 164.6856, 108.135, 167.2532, 169.6434, 69.1236, 172.6914, 18.883, 292.3378, 86.1589, 84.2592, 71.5686, 66.2842, 223.1128, 315.5251, 37.7196, 119.7202, 141.1964], [111.1585, 107.548, 570.2542, 265.294, 29.5738, 90.3109, 228.0698, 493.8431, 482.5678, 153.1488, 106.2004, 114.4189], [149.4288, 177.9552, 29.4786, 128.34, 115.6644, 78.9075, 135.3752, 250.1388, 44.3196, 162.7816, 0.0, 377.6536, 205.5124, 47.7073, 75.981, 76.532, 214.868, 220.8676, 168.1644, 81.1188, 183.7559]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

