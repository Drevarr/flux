created: 20230625212343000
creator: Drevarr
modified: 20230705163535616
modifier: drevarr
tags: ChartData
title: 202306252123_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Belvyn Brightblade", "Tuff Spuffles", "Fribble Bibble", "Descal", "Crusader Siolith", "Enter Effore", "Drevarr Moonwillow", "Yummy Kiwi", "Sygaldry Verdandi", "Tika Fiery", "Traidoruns Maximus", "Aronorf Xideliesi", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.9165, 59.8398, 12.9252, 2.726, 19.656, 4.6937, 12.8551, 24.9077, 0.9192, 0.0, 4.6143, 0.5499, 37.2772, 8.663, 0.0, 60.2482, 12.5685, 2.4675, 13.6421, 4.3277, 9.3551, 20.2199, 2.4302, 9.0992, 0.0, 72.3372], [86.6093, 108.3282, 40.8052, 31.255, 14.0112, 16.4028, 11.6424, 37.2557, 54.5963], [0.0, 26.3311, 4.324, 6.4176, 7.8733, 6.5488, 7.8322, 22.8825, 0.0, 25.3967, 0.5499, 13.3941, 29.1686, 49.4669, 73.5922, 98.5929, 54.285, 71.0971, 18.0163], [38.5847, 66.7066, 6.0353, 19.176, 16.2624, 14.7877, 2.4794, 0.1411, 51.0835, 0.0, 33.0157, 5.9643, 0.8301, 8.2022, 15.3946, 26.9549, 34.9591, 0.0, 15.3648, 40.5014, 42.3507, 16.2582, 18.8443, 1.128, 7.9118, 77.7262], [168.4834, 51.4368, 27.6533, 315.8795], [0.0, 61.101, 23.1799, 24.581, 13.104, 23.0648, 10.0793, 18.769, 16.218, 0.0, 6.0809, 8.46, 7.0178, 17.1418, 38.4134, 23.6856, 36.5883, 0.0, 16.5754, 46.2403, 19.2158, 28.1946, 59.9194, 35.0432, 9.6163, 54.7193], [16.7404, 0.2538, 10.5267, 72.6221, 46.8038, 45.2362, 34.8194, 19.9045, 46.7462, 68.8666, 33.7541, 64.0038, 12.2707, 40.3072, 14.4245, 97.2787], [79.8272, 149.6695, 26.972, 34.169, 6.0816, 24.6294, 15.8196, 30.4819, 50.8208, 45.7185, 28.9737, 0.6768, 5.735, 45.6653, 70.8077, 27.9557, 28.5817, 5.2311, 35.9909, 18.2515, 38.6213, 22.1749, 18.5654, 36.5472, 16.6886, 39.3813], [55.4482, 94.8748, 20.9367, 72.662, 16.9344, 31.5438, 23.4465, 82.2024, 42.5477, 43.0671, 4.0185, 21.4306, 63.7747, 71.4643, 95.9434, 50.4602, 0.0, 38.5517, 59.0352, 160.5534, 36.8896, 40.2782, 55.7984, 19.8178, 73.3736], [16.497, 259.1189, 20.9901, 76.798, 26.376, 43.9089, 16.17, 136.1808, 25.7387, 0.0, 25.504, 8.6292, 12.2623, 32.0256, 67.5245, 121.8974, 85.9313, 81.2465, 67.7448, 62.2339, 46.0801, 28.6062, 34.6608, 53.768, 13.6867, 93.9624], [200.7135, 190.3101, 48.8167, 47.188, 37.8, 28.0613, 12.8282, 65.4091, 35.5221, 57.3035, 2.538, 95.9097, 59.1206, 45.8554, 121.8974, 47.0155, 0.0, 32.592, 29.3059, 53.1596, 38.3817, 59.9194, 42.7888, 20.9371, 92.7188], [183.4833, 267.5273, 45.3451, 63.121, 29.3328, 14.3839, 22.8267, 81.7085, 63.2962, 3.2451, 59.7359, 14.2974, 2.3015, 97.4131, 79.4899, 96.744, 53.486, 52.1938, 43.1827, 80.7824, 73.6249, 38.1269, 50.6096, 15.3403], [77.0776, 292.7525, 149.0673, 60.301, 47.2752, 27.5566, 28.9712, 51.156, 28.4964, 25.039, 30.033, 80.1008, 86.6765, 34.4736, 37.897, 85.14, 32.0117, 27.7032, 35.8445, 38.8109, 39.8223, 15.6571, 48.6544, 31.7237, 178.2522], [182.9334, 393.9335, 50.152, 74.777, 20.5296, 34.8243, 63.8176, 56.5186, 75.7716, 0.0, 71.7188, 4.9491, 59.8398, 84.0038, 88.8288, 181.4117, 90.9587, 73.751, 62.375, 60.9344, 88.3397, 62.3496, 90.616, 7.0469, 210.5863], [378.6062, 414.6743, 68.8455, 45.167, 38.7072, 52.8421, 12.7743, 106.5456, 52.2654, 0.0, 58.5197, 3.1302, 34.372, 89.9942, 44.4691, 93.8083, 86.3968, 30.2187, 99.0797, 67.1261, 146.4576, 63.9009, 52.549, 62.4912, 21.7003, 196.492]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

