created: 20230501220820000
creator: Drevarr
modified: 20230705163527808
modifier: drevarr
tags: ChartData
title: 202305012208_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Gabe Malhorn", "Spreadflamesoflight", "Belvyn Brightblade", "Smol Gluvs", "Needragee", "Whose Guardian", "Kiloak", "Sygaldry Verdandi", "Newtype Khan", "Johosh The Great", "Skye Nightroad", "Miphest\u00f6", "Lord Erin The Wise", "Xkaet", "Flanneryflame", "Tegan Parker", "Joint Lee", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar", "Venomina The Siren", "Tyzzki", "Tika Sumiko", "Elonith Primal", "Mac Aaroni", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Willbender", "Firebrand", "Scourge", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15220680.72, 184219.88, 0.0, 0.0, 0.0, 50255.92, 20429543.28, 1345.6, 3529966.3, 0.0, 5113.28, 0.0, 0.0, 52758.3], [34530552.0, 0.0, 9187.2, 0.0, 1058.4, 540690.44, 8357853.48], [27598082.4, 0.0, 0.0, 0.0, 0.0, 100511.84, 18597590.64], [16577740.2, 0.0, 0.0, 0.0, 3197.25, 66949.32, 26954583.24, 6728.0, 3195896.9, 1069.2, 11328.56, 0.0, 0.0, 118757.1], [63800.0, 26887280.0, 7543.8, 296878.8, 4145.4, 548.34, 1049869.8], [18953582.76, 20382.6, 0.0, 217.8, 3219.3, 67300.76, 25946062.32, 19000.8, 6065305.4, 0.0, 113065.2, 0.0, 0.0, 92344.0], [24823337.28, 20382.6, 0.0, 217.8, 2138.85, 170184.82, 31651974.96, 13456.0, 5216738.8, 0.0, 20497.2, 0.0, 0.0, 251230.0], [37971306.24, 0.0, 0.0, 0.0, 6416.55, 167461.16, 25519926.72, 12110.4, 9481809.4, 0.0, 157806.4, 0.0, 0.0, 290340.4], [33622477.56, 20382.6, 0.0, 0.0, 8555.4, 435522.02, 36441050.4, 8073.6, 7906477.6, 0.0, 10226.56, 0.0], [39331001.64, 40862.26, 0.0, 435.6, 9635.85, 167724.74, 36610213.32, 14801.6, 13037045.7, 0.0, 66869.36, 9702.0, 548.34, 304803.1], [46657980.6, 122780.9, 0.0, 0.0, 23791.95, 402486.66, 55804824.24], [63370152.72, 40862.26, 0.0, 0.0, 2138.85, 267973.0, 43732704.0, 34614.4], [267497.36, 36876.4, 1098.9, 35721.0, 628286.86, 55107081.0, 61990.4, 29815062.2], [143260.56, 147952.2, 1098.9, 16096.5, 929119.5, 108083053.56], [22118444.04, 0.0, 0.0, 217.8, 19315.8, 895996.28, 96052255.56], [54073164.12, 65331.2, 49330577.8, 13048.2, 472052.72, 5036.07, 1419381.6], [75157986.96, 123945.62, 0.0, 0.0, 25776.45, 586816.94, 78909121.68], [72040132.92, 185287.54, 0.0, 0.0, 21520.8, 485777.94, 70749701.04, 50135.2, 19571109.6, 0.0, 149607.52, 0.0, 0.0, 634389.7], [91216450.92, 81821.58, 0.0, 0.0, 32722.2, 481912.1, 69362392.92, 14036.0, 12299414.4, 0.0, 104249.2, 0.0, 0.0, 761159.0], [97344525.6, 20382.6, 0.0, 0.0, 18477.9, 453445.46, 74068393.44, 46052.0, 17918957.0, 12454.2, 286740.4, 0.0, 0.0, 211508.5], [22107021.72, 123751.5, 0.0, 0.0, 26812.8, 1091309.06, 117560051.04, 81478.4, 31246102.3, 1069.2, 225601.44, 0.0, 1673.88, 953995.0], [97288731.96, 61341.92, 0.0, 0.0, 13053.6, 722999.94, 96159865.56, 78810.4, 26068532.0, 10890.0, 297451.84, 0.0, 0.0, 435850.1], [121823875.32, 536062.38, 0.0, 217.8, 11973.15, 1492302.1, 99210824.28, 91709.6, 38765443.5, 0.0, 364056.72, 1367.1, 0.0, 834287.3], [156385619.04, 309136.1, 46127.4, 1415.7, 62974.8, 1836010.42, 148649440.92, 108460.0], [136302983.88, 391637.1, 177172.6, 881.1, 16052.4, 2033871.14, 139648940.52, 151403.2, 44520433.3, 20750.4, 322886.0, 11091.15, 0.0, 1245082.3], [151663807.68, 391734.16, 101442.0, 1326.6, 54882.45, 1789971.78, 138373546.8, 138805.6, 49348519.5, 24631.2, 446354.08, 6923.7, 3434.34, 1563465.4], [160044276.0, 883440.12, 286143.0, 1603.8, 61894.35, 2169878.42, 143519457.0, 112960.8, 50616062.7, 53757.0, 485805.68, 18036.9, 10649.34, 1700691.3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

