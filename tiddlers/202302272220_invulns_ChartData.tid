created: 20230227222028000
creator: Drevarr
modified: 20230705163520409
modifier: drevarr
tags: ChartData
title: 202302272220_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Ravioli Fetabringer", "Nelliel T", "Smol Gluvs", "Zaylen Harker", "Iris S K", "Mac Aaroni", "Dark Sidiuz", "Smol Gluvs", "Drevarr Moonwillow", "Veron Blackburn", "Rozaalyna", "Primal Clone", "Ark Darkness", "Sp\u00edcy Cheese", "Gavann", "Tegan Parker", "Xanvias Tseli", "Mistwalker Caelon", "Skye Nightroad", "Sygaldry Verdandi", "Fribble Bibble", "My Birthday Girl", "Zadie Miststep", "Blanco Padre Guard", "Sumatra Satyricon", "Legacy Of Mathus", "Bella Sassy", "Sassy Daddy Demon", "Kahless The Drunk", "Nelliel T", "Smol Daddy Tika", "Viral Marketing", "Venomina The Siren", "Kira Dragonblaze", "Etchery Howls", "Eibh\u00ebar", "Rayla Shadowmoon", "Jeckyll Mbs", "Koralia Danai", "Husky Guard", "Tribal S", "Rina Of Theros", "Black Raspberry Pie", "Arcanophage Farra", "Lord Erin The Wise", "Ryvalia Fazebringer", "Mike The Archmagus", "Cat Wigglebooty", "Tootsie Pop Bringer", "Oo Dads Mad", "High Sorcer Baradun"];
const professions = ["Firebrand", "Reaper", "Reaper", "Firebrand", "Spellbreaker", "Tempest", "Scourge", "Scourge", "Scrapper", "Herald", "Scourge", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Tempest", "Berserker", "Vindicator", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Tempest", "Firebrand", "Soulbeast", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Berserker", "Willbender", "Tempest", "Dragonhunter", "Druid", "Chronomancer", "Herald", "Berserker", "Firebrand", "Dragonhunter", "Druid", "Scourge", "Chronomancer", "Spellbreaker", "Weaver", "Chronomancer", "Weaver", "Scrapper", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 15, 0, 0, 0, 0, 20, 0, 23, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0], [34, 0, 35], [70, 0, 7], [0, 17, 0, 0, 38, 0, 12, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0], [0, 47, 0, 0, 0, 0, 36, 0], [0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0], [0, 24, 9, 0, 0, 0, 37, 0, 1, 0, 20, 0, 0], [0, 0, 19, 40, 0, 7, 0, 0, 0, 0, 0, 26, 0], [0, 0, 0, 0, 11, 19, 7, 20, 27, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 59, 6, 0, 29], [0, 3, 0, 26, 9, 10, 0, 19, 0, 36, 0, 0], [0, 0, 20, 0, 0, 12, 15, 0, 25, 0, 5, 0, 16, 0, 0, 0, 0, 0, 12, 0], [18, 16, 39, 0, 0, 8, 7, 0, 21, 0, 0, 0, 0, 0, 0], [0, 14, 16, 0, 7, 5, 33, 0, 11, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 18, 1, 0, 21, 0, 6, 9, 0, 37, 0, 25, 0, 0, 0], [33, 43, 0, 3, 0, 31, 0, 11, 0, 0, 0, 0, 0, 0, 0], [0, 18, 14, 0, 0, 0, 10, 5, 38, 3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 33, 0], [0, 28, 0, 0, 0, 26, 23, 15, 0, 14, 0, 3, 0, 17, 0, 0, 0, 0, 0, 0, 0], [0, 3, 19, 34, 0, 11, 21, 21, 12, 0, 8], [0, 10, 19, 0, 8, 0, 35, 8, 33, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0], [0, 35, 8, 0, 0, 0, 18, 0, 0, 57, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 21, 30, 0, 33, 43, 0, 0, 0, 1, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 23, 27, 14, 23, 0, 40, 7, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 13, 0, 0, 0, 13, 0, 0, 4, 58, 0, 7, 0, 31, 0, 0, 0, 0, 0, 48], [0, 20, 22, 0, 12, 8, 36, 32, 9, 0, 0, 0, 0, 43, 0, 0, 0], [0, 20, 30, 19, 0, 41, 19, 22, 15, 0, 4, 0, 13, 0], [0, 0, 0, 9, 21, 51, 40, 45, 7, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 13, 22, 0, 0, 9, 27, 35, 19, 59, 0, 5], [0, 19, 10, 28, 19, 25, 33, 16, 6, 0, 8, 0, 25, 0, 0, 0, 0, 0, 0, 0], [5, 0, 40, 0, 39, 14, 18, 40, 23, 0, 11, 0, 0, 0, 0, 0, 0], [0, 54, 12, 0, 0, 35, 0, 25, 10, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 22, 0], [0, 25, 3, 0, 52, 8, 9, 29, 30, 36, 0, 2], [0, 24, 26, 0, 11, 0, 56, 0, 8, 0, 30, 0, 48, 0, 0, 0, 0, 0, 0, 0], [0, 74, 6, 0, 11, 18, 23, 0, 20, 36, 0, 21], [0, 38, 24, 0, 4, 28, 28, 33, 41, 0, 11, 0, 9, 0, 0, 0, 0], [0, 11, 14, 5, 6, 15, 19, 37, 24, 0, 30, 0, 36, 0, 0, 1, 0, 0, 19, 0], [0, 15, 37, 41, 19, 34, 32, 18, 13, 0, 16], [0, 36, 43, 0, 0, 15, 25, 15, 26, 0, 28, 0, 12, 0, 0, 17, 0, 11, 0, 0], [0, 33, 32, 53, 10, 0, 45, 4, 38, 0, 22, 0, 11, 0, 0, 0, 0, 0, 0, 0], [0, 50, 5, 0, 0, 3, 25, 0, 0, 30, 0, 27, 0, 40, 13, 0, 0, 0, 63, 0], [0, 16, 49, 0, 44, 0, 18, 20, 44, 0, 13, 0, 40, 0, 16, 0, 0, 0, 0], [0, 0, 77, 0, 33, 0, 0, 12, 0, 2, 0, 63, 0, 63, 0, 0, 0, 0, 0, 14, 0], [0, 35, 53, 14, 43, 0, 5, 0, 73, 0, 0, 0, 0, 0, 42, 10], [0, 6, 50, 32, 14, 0, 26, 22, 34, 0, 18, 0, 49, 0, 4, 0, 0, 0, 20, 0], [0, 30, 19, 0, 19, 12, 1, 16, 7, 18, 0, 10, 11, 54, 0, 10, 0, 0, 71], [0, 6, 30, 46, 64, 33, 43, 28, 11, 0, 2, 0, 10, 0, 0, 0, 0, 0, 7, 0], [5, 50, 24, 0, 8, 0, 0, 27, 10, 39, 0, 8, 0, 56, 0, 0, 0, 0, 0, 67], [0, 32, 31, 57, 11, 0, 32, 56, 38, 0, 45, 0, 39, 0, 0, 0, 0, 0, 12], [0, 0, 0, 0, 0, 7, 137, 52, 27, 42, 0, 33, 0, 7, 0, 0, 31, 0, 0, 37, 0], [0, 52, 17, 39, 8, 129, 26, 32, 51, 0, 50], [34, 0, 73, 83, 38, 135, 29, 8, 0, 29, 0, 42, 0, 0, 0, 0, 0, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

