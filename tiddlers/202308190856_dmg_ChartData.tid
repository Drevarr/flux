created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Nadumi", "Brutal Araden", "Serial Experiiments", "Holten Mcgroins", "Oats Guardian", "Glorious Gluvs", "Holly Of Aranoch", "Holly Of Aranoch", "Vee U", "Nose Llama", "Scythe Of Soulz", "Lillith Bella", "Firewood Guard", "Darks Na", "Empressy", "E Tabita", "Tabitha Polaris", "Crabbedmermaid", "Nadumi", "Drac Tepes", "Kosa\u00efr", "Grootsmaid", "Grae Leon", "Unbreakable Nemesis", "Drevarr Moonwillow", "Ttv Rodrigoapss", "Wren Raveness", "Gestern Yesteryear", "Govinda Ektar", "Aron The White", "Ains Chon", "Scythe Of Soulz", "Samara Evermoore", "Nose Llama", "Brutal Araden", "Nadumi", "Jamaass", "Aloe Pen", "Smol Gluvs", "Cura Ativos", "Red Reaper Robin", "Alarics Bane", "Liu Mira", "Xuerreux", "Xanvias Tsolice"];
const professions = ["Deadeye", "Vindicator", "Chronomancer", "Thief", "Firebrand", "Berserker", "Virtuoso", "Chronomancer", "Tempest", "Tempest", "Scourge", "Dragonhunter", "Dragonhunter", "Firebrand", "Spellbreaker", "Soulbeast", "Firebrand", "Firebrand", "Daredevil", "Scourge", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Berserker", "Chronomancer", "Firebrand", "Vindicator", "Holosmith", "Reaper", "Reaper", "Deadeye", "Weaver", "Renegade", "Thief", "Reaper", "Vindicator", "Reaper", "Dragonhunter", "Reaper", "Reaper", "Berserker", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.1667], [186.2778], [0.0, 241.1556], [204.8148], [0.0, 15.8485, 97.9753, 121.4412, 45.9778], [77.8889, 435.8864, 0.0], [530.7037, 275.6364, 148.181], [549.2679, 694.0208, 5.4324], [37.8519, 92.8864, 9.2759, 205.5263, 107.7536, 33.6186, 28.9873, 84.8036, 72.875, 8.9189, 26.2229, 10.0169, 22.0938, 59.8861, 1.2895], [61.4815, 208.2045, 48.0259, 166.6316, 95.5362, 52.8144, 350.4286, 71.9375, 8.4865], [825.9579], [39.6491, 257.8121, 123.7531, 234.2647, 515.8222], [1983.1556], [25.0741, 9.9545, 51.3879, 312.2842, 32.6667, 12.8557, 208.2405, 209.7321, 111.4518, 5.4463], [71.1266, 26.5357, 215.1042, 92.9324, 175.241, 165.0113, 108.0781, 129.4114, 8.5263, 0.0, 123.5432, 22.6765], [755.3704, 0.0, 389.7845, 0.0, 463.2899, 111.6646], [109.7037, 866.6364, 17.5431, 161.2632, 870.087, 148.9897], [182.3579, 214.5072, 47.0722, 39.443, 144.875, 175.7917, 186.8784, 130.4398, 126.9322, 13.0938, 179.2405, 23.2281], [624.097, 105.6914, 468.8824, 786.5556], [1444.0, 801.9412, 497.8222], [250.0455, 62.7069, 130.2842, 95.2609, 95.3711, 98.4557, 48.4107, 741.4375, 36.3243, 169.4157, 110.3277, 68.4375, 115.8608], [180.6456, 105.5893, 4.5417, 30.9054, 189.8976, 121.8983, 3.9219, 175.3861, 0.0, 128.3333, 411.0741, 90.6471], [257.3895, 53.5652, 73.9072, 74.0823, 286.7321, 49.0417, 10.2432, 107.8735, 99.1638, 59.4375, 50.1582, 0.0, 262.8909, 175.4074, 227.6176, 156.1556], [77.9444, 311.8182, 47.4138, 211.4947, 220.0435, 261.0103, 161.3797, 319.9107, 169.5417, 89.2568, 32.6807, 78.4689, 85.5781, 131.1392, 22.9649], [167.3704, 158.4545, 68.5517, 275.2105, 177.1594, 173.1753, 131.5886, 218.3393, 73.7083, 115.473, 166.1386, 143.7627, 149.7812, 144.8544, 17.5263], [2591.9815, 658.1136, 449.25], [161.1111, 63.4091, 35.7931, 146.7789, 195.7826, 111.3196, 169.3228, 257.1607, 10.0417, 70.1351, 118.6265, 128.7458, 46.9844, 249.6013, 0.0, 187.9091, 127.1975, 166.8529, 215.3556], [336.6296, 148.8864, 35.0862, 120.0105, 154.3768, 125.433, 201.5443, 40.9286, 132.5417, 54.8378, 98.753, 516.6667, 85.1875, 66.7089, 1.0351, 75.503, 89.7407, 51.1176, 9.5111], [257.6296, 255.0, 586.3913, 412.9588, 229.6456, 69.5417, 15.4054, 270.3795, 187.3898, 168.4531, 471.3038, 370.1576, 394.358, 0.0, 289.9111], [40.3093, 87.2532, 303.9821, 1710.375, 135.4324, 492.8012, 535.774, 58.3906, 793.6709, 0.0], [125.1481, 0.0, 275.2241, 180.1895, 511.9565, 469.7629, 131.1875, 185.9595, 479.2048, 266.0282, 211.8906, 592.3924, 44.5877, 460.0667, 576.5679, 123.7353, 191.2222], [2024.2029, 1530.1237, 660.6329, 1402.875, 979.6446, 24.8362], [160.6852, 924.0, 79.2328, 1168.4211, 690.087, 801.268, 225.5063, 1059.75, 404.3333, 262.3514, 304.5964, 132.1412, 126.2344, 607.8354, 38.6228, 416.8606], [1425.5482, 2575.661, 708.0], [664.3864, 0.0, 1804.0421, 578.3333, 713.0103, 0.0, 904.2321, 788.4583, 162.4865, 944.747, 475.7853, 121.7812, 530.6646], [0.0, 1402.5227, 49.1983, 1556.3579, 976.2029, 855.7938, 284.2342, 1606.2321, 585.2708, 46.2432, 1316.1867, 190.3164, 137.6406, 412.9873], [1992.9177, 235.4298, 2139.3152, 1406.3704, 2204.3529, 758.4222], [1144.4105, 943.029, 787.5567, 408.5443, 504.5893, 740.5833, 347.4459, 885.3916, 1116.9379, 566.625, 1051.6519, 0.0, 12.097, 7.1605, 0.0882, 0.0], [806.7579, 1051.9855, 392.7835, 425.5696, 992.7321, 842.2917, 527.0135, 1280.3012, 974.4633, 1386.3438, 1089.4114, 13.7193], [73.2421, 1617.8551, 785.9897, 6789.7468, 1267.5536, 1723.3125, 763.6216], [1158.4074, 805.2727, 1412.7155, 1915.4526, 2345.942, 2325.4021, 1990.8544, 2223.7679, 1115.7083, 659.8514, 1913.7289, 1994.2542, 525.75, 1695.3165, 37.7456], [1198.0556, 1667.6818, 1371.7155, 368.4526, 3020.3188, 2031.0, 1140.8481, 1286.1786, 1810.4167, 2344.4189, 2379.8675, 2280.5085, 582.6406, 1853.557, 0.0], [1681.4444, 2180.3864, 1917.0259, 2424.7368, 3542.0145, 910.9381, 1191.9304, 1544.1607, 1459.25, 1694.1622, 3177.4036, 142.8814, 2093.6406, 2169.7405, 99.9298, 2292.903, 1953.642, 924.6176, 2559.8222], [1852.537, 317.6818, 1759.4655, 2056.7263, 1975.3623, 1796.1443, 3274.1203, 1611.9286, 1235.4167, 1902.0946, 1385.0723, 1233.5819, 3621.5938, 2675.6076, 12.2456, 1027.9818, 4867.6296, 242.1765, 1908.5778], [422.4051, 2168.7321, 9168.1875, 3041.3243, 2216.259, 5057.6271, 144.4375, 5686.2215, 808.3333, 3984.2485, 5178.1111, 1022.3529, 4414.8889]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

