created: 20230301221309000
creator: Drevarr
modified: 20230705163520938
modifier: drevarr
tags: ChartData
title: 202303012213_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Nova", "Tribal S", "Mistwalker Caelon", "S\u00e4int Cel\u00e9stine", "Ravioli Fetabringer", "Thought Bound", "Flanneryflame", "Lord Erin The Wise", "Jeckyll Mbs", "Celtic The Warrior", "Grasszanine", "Jeckyll Mbs", "Blanco Padre Guard", "Sakura Shanks", "Abigail Ryn", "Oo Dads Mad", "Sp\u00edcy Cheese", "Sygaldry Verdandi", "Kahless The Drunk", "Sumatra Satyricon", "Be\u00eb", "Smol Daddy Tika", "What Charr U Saying", "Mac Aaroni", "Panther B Me", "Xanvias Tseli", "Koralia Danai", "Gavann", "Raziel Umbra", "Ace Hammers", "Xyntharos", "Mike The Archmagus", "Arriasa", "Fribble Bibble", "Legacy Of Mathus", "Ryvalia Fazebringer", "Ezaff", "Whose Guardian", "Smol Gluvs", "Drevarr Moonwillow", "Demon Sekhmet", "Eibh\u00ebar", "Bella Sassy", "Zadie Miststep", "Newtype Khan", "Skye Nightroad", "Tegan Parker", "Jupi Jupi Jupi", "Black Raspberry Pie", "Arcanophage Farra"];
const professions = ["Catalyst", "Druid", "Vindicator", "Firebrand", "Firebrand", "Dragonhunter", "Tempest", "Weaver", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Vindicator", "Tempest", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Soulbeast", "Scourge", "Berserker", "Berserker", "Tempest", "Scourge", "Berserker", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Vindicator", "Weaver", "Druid", "Scrapper", "Berserker", "Chronomancer", "Tempest", "Dragonhunter", "Scourge", "Scrapper", "Spellbreaker", "Chronomancer", "Firebrand", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Dragonhunter", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 6, 0, 20, 0, 0, 0, 15, 0, 0, 11, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 33, 45, 0], [0, 18, 0, 0, 11, 3, 16, 0, 0, 0, 0, 24, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 6, 0, 28, 21, 0, 18, 0, 0, 0, 0, 6, 20, 0, 0, 0], [0, 0, 0, 0, 6, 20, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 10, 3, 14, 10, 0, 36, 0, 0, 0, 5, 14, 24, 0, 28, 23], [0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 98, 22, 4, 5, 69], [0, 0, 0, 0, 13, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 59, 14, 0, 0, 0, 18, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 26], [23, 13, 42, 35, 43, 6, 64], [8, 0, 2, 10, 0, 11, 33, 44, 27, 4, 0, 99], [0, 9, 34, 0, 0, 0, 10, 21, 0, 3, 16, 8, 0, 0, 0, 26, 0, 0, 10, 19, 0, 6, 14, 0, 0, 0, 20, 14, 3, 19, 0, 0, 0, 3, 2, 3], [6, 0, 1, 42, 20, 0, 0, 0, 0, 10, 0, 0, 11, 6, 19, 0, 10, 11, 7, 0, 0, 33, 37, 45], [0, 23, 0, 0, 0, 40, 19, 11, 16, 20, 31, 0, 0, 36, 28, 0, 15, 0, 19], [20, 0, 0, 21, 20, 39, 18, 14, 20, 13, 18, 0, 5, 3, 12, 0, 0, 0, 67], [18, 58, 55, 0, 43, 2, 3, 0, 33, 3, 18, 42, 0, 2], [0, 5, 28, 0, 17, 18, 12, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 16, 0, 17, 10, 6, 5, 0, 0, 34, 0, 7, 12, 0, 4, 0, 23, 40, 10, 0, 15], [0, 0, 14, 8, 14, 11, 14, 18, 9, 22, 21, 0, 33, 27, 27, 42, 2, 21, 14], [0, 44, 38, 0, 24, 0, 43, 18, 0, 53, 0, 37, 0, 0, 0, 21, 0, 0, 9, 0, 0, 0, 11], [25, 27, 0, 0, 41, 42, 72, 9, 0, 3, 34, 9, 0, 35, 0, 0, 25], [0, 8, 0, 0, 0, 9, 0, 0, 1, 0, 33, 0, 35, 0, 0, 1, 0, 1, 7, 21, 60, 11, 5, 33, 4, 0, 0, 9, 12, 13, 0, 32, 30, 9], [4, 31, 5, 0, 19, 4, 0, 0, 0, 0, 0, 9, 0, 0, 13, 0, 0, 11, 0, 0, 0, 12, 0, 0, 62, 25, 2, 10, 8, 47, 0, 3, 0, 0, 0, 7, 17, 5, 22, 0, 26], [19, 15, 19, 0, 46, 23, 16, 0, 0, 0, 0, 11, 0, 0, 0, 8, 0, 0, 8, 0, 0, 0, 28, 0, 0, 0, 0, 22, 0, 6, 10, 19, 16, 7, 0, 0, 0, 12, 14, 36, 7, 10, 0, 0], [0, 25, 17, 0, 0, 1, 80, 13, 0, 19, 19, 1, 0, 0, 0, 41, 0, 0, 13, 0, 0, 0, 0, 0, 38, 0, 20, 21, 23, 10, 23], [0, 19, 0, 0, 4, 14, 14, 0, 0, 0, 0, 22, 0, 0, 0, 22, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 96, 14, 6, 13, 14, 0, 0, 0, 13, 8, 16, 13, 28, 16, 1], [4, 23, 0, 0, 11, 4, 4, 0, 0, 20, 0, 5, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 6, 12, 8, 30, 31, 33, 24, 8, 0, 20, 42, 8, 48], [17, 13, 0, 0, 0, 0, 10, 0, 0, 0, 7, 0, 0, 52, 0, 0, 0, 10, 0, 33, 0, 6, 19, 0, 10, 3, 11, 15, 0, 0, 0, 12, 46, 18, 25, 41, 0, 21], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 32, 0, 16, 12, 40, 10, 0, 26, 22, 41, 19, 0, 0, 30], [10, 27, 26, 0, 13, 15, 25, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 50, 33, 2, 4, 41, 0, 39, 0, 6, 0, 12, 2, 0, 16, 15, 0, 10], [14, 25, 0, 0, 25, 14, 21, 0, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 28, 36, 53, 12, 26, 15, 6, 0, 2, 0, 0, 7, 40, 7, 21, 0, 0], [1, 62, 4, 0, 15, 11, 7, 0, 0, 0, 0, 24, 0, 0, 4, 0, 0, 16, 0, 0, 0, 5, 0, 0, 0, 0, 12, 8, 45, 0, 9, 19, 29, 0, 0, 0, 26, 17, 0, 23, 81, 0, 12], [18, 41, 0, 28, 16, 30, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 28, 7, 36, 24, 71, 27, 14, 9, 0, 0, 9, 3, 40, 13, 6, 21, 2], [0, 0, 0, 0, 0, 16, 0, 0, 0, 20, 0, 0, 37, 0, 0, 0, 13, 0, 31, 22, 56, 8, 34, 10, 16, 33, 0, 0, 0, 35, 23, 23, 48, 0, 21, 16], [4, 64, 25, 0, 17, 12, 10, 0, 0, 0, 0, 14, 0, 0, 15, 0, 0, 37, 0, 0, 0, 9, 0, 0, 4, 0, 21, 66, 18, 6, 15, 13, 40, 12, 0, 0, 16, 6, 33, 4, 8, 0, 0], [27, 17, 1, 0, 56, 13, 29, 13, 0, 0, 0, 8, 0, 0, 0, 32, 0, 0, 7, 0, 0, 0, 16, 0, 0, 0, 13, 14, 46, 33, 33, 50, 0, 9, 0, 0, 0, 12, 24, 18, 10, 0, 9], [31, 2, 28, 0, 8, 5, 0, 0, 3, 0, 17, 0, 0, 0, 13, 0, 0, 37, 0, 0, 0, 35, 0, 0, 45, 13, 10, 7, 4, 78, 15, 0, 39, 5, 0, 26, 13, 22, 0, 23, 11, 6], [46, 51, 34, 8, 38, 19, 0, 0, 0, 0, 22, 0, 0, 0, 7, 0, 0, 30, 0, 0, 0, 0, 0, 0, 31, 0, 33, 14, 72, 26, 21, 10, 0, 43], [0, 25, 9, 0, 0, 44, 16, 0, 0, 0, 0, 60, 0, 0, 0, 6, 0, 0, 94, 0, 9, 0, 0, 0, 0, 0, 0, 35, 18, 31, 13, 11, 28, 0, 23, 40, 0, 0, 23, 6, 32], [22, 56, 9, 0, 35, 55, 18, 0, 0, 0, 0, 13, 0, 0, 0, 25, 0, 0, 10, 0, 0, 0, 19, 11, 0, 32, 8, 2, 15, 21, 51, 18, 20, 0, 0, 9, 8, 16, 24, 3, 23, 29], [31, 15, 0, 0, 0, 21, 28, 0, 0, 0, 0, 78, 0, 0, 0, 32, 0, 0, 26, 0, 0, 0, 0, 0, 0, 24, 0, 29, 45, 36, 0, 61, 27, 34, 12, 0, 0, 7, 0, 14, 0, 26, 0, 8], [10, 36, 10, 0, 35, 51, 22, 70, 0, 0, 0, 8, 0, 40, 0, 0, 1, 0, 15, 36, 62, 0, 0, 7, 29, 33, 32, 0, 3, 0, 0, 39, 4, 0, 11], [6, 3, 0, 0, 40, 23, 23, 0, 0, 8, 4, 12, 0, 0, 0, 35, 0, 0, 3, 0, 0, 0, 14, 0, 0, 5, 0, 35, 3, 27, 21, 87, 8, 29, 15, 6, 0, 37, 23, 13, 21, 58, 2], [10, 16, 0, 0, 9, 26, 13, 37, 0, 6, 0, 40, 0, 0, 0, 27, 0, 6, 0, 0, 0, 22, 0, 0, 0, 0, 146, 11, 3, 0, 10, 10, 13, 14, 8, 0, 24, 4, 26, 10, 19, 0, 71], [5, 7, 11, 0, 43, 33, 4, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 19, 0, 0, 0, 27, 0, 0, 0, 0, 32, 23, 24, 0, 35, 52, 0, 5, 5, 0, 0, 4, 140, 122, 31, 0, 23], [17, 0, 36, 2, 37, 0, 0, 0, 43, 0, 0, 26, 10, 19, 0, 59, 0, 5, 15, 7, 33, 15, 69, 15, 26, 30, 0, 65, 35, 27, 19, 42, 7, 26], [15, 72, 15, 3, 27, 21, 37, 3, 0, 8, 4, 27, 0, 0, 0, 117, 0, 0, 14, 0, 6, 0, 20, 0, 19, 0, 13, 45, 32, 0, 12, 39, 5, 5, 18, 0, 4, 9, 16, 11, 22, 54, 23], [10, 75, 0, 0, 65, 18, 18, 0, 0, 0, 0, 22, 0, 0, 0, 5, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 8, 128, 20, 29, 35, 14, 0, 25, 32, 0, 0, 21, 12, 48, 30, 0, 15], [5, 26, 25, 0, 61, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 31, 24, 57, 28, 45, 20, 0, 19, 0, 0, 68, 22, 94, 30, 32, 0, 19], [5, 40, 1, 0, 53, 0, 15, 17, 0, 34, 1, 18, 0, 0, 0, 33, 0, 0, 5, 0, 0, 0, 58, 0, 0, 0, 0, 5, 2, 15, 40, 15, 8, 0, 40, 39, 0, 63, 0, 32, 33, 29, 111, 26], [27, 35, 27, 0, 56, 30, 5, 33, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 1, 0, 38, 0, 16, 0, 0, 54, 0, 23, 8, 1, 57, 64, 12, 32, 107, 30, 0, 21, 10, 22, 13, 16, 23, 21], [12, 31, 21, 0, 34, 25, 41, 0, 0, 26, 0, 28, 0, 0, 112, 0, 15, 0, 0, 76, 0, 0, 11, 14, 7, 12, 39, 23, 53, 0, 0, 0, 0, 29, 47, 40, 70, 28, 28, 39], [5, 9, 41, 0, 2, 23, 13, 0, 0, 3, 0, 57, 0, 0, 0, 52, 0, 0, 4, 0, 0, 0, 8, 0, 0, 5, 0, 15, 29, 55, 12, 24, 47, 124, 58, 18, 0, 11, 98, 42, 39, 14, 28, 32], [33, 36, 43, 0, 55, 42, 30, 0, 0, 0, 1, 24, 0, 0, 0, 53, 0, 0, 12, 0, 0, 0, 12, 0, 0, 23, 0, 127, 50, 24, 27, 20, 23, 26, 0, 6, 0, 65, 41, 40, 74, 88, 12, 50], [55, 52, 7, 0, 38, 119, 11, 25, 0, 0, 0, 18, 0, 0, 0, 168, 0, 0, 78, 0, 8, 0, 24, 0, 0, 3, 0, 37, 6, 12, 0, 16, 29, 0, 9, 0, 50, 37, 101, 78, 41, 41, 26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

