created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Nose Llama", "Vee U", "Nose Llama", "Oats Guardian", "Liu Mira", "Grae Leon", "Tabitha Polaris", "Darks Na", "Kosa\u00efr", "Xanvias Tsolice", "Grootsmaid", "Unbreakable Nemesis", "Gestern Yesteryear", "Crabbedmermaid", "Drevarr Moonwillow"];
const professions = ["Weaver", "Tempest", "Tempest", "Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Tempest", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[95.533, 99.6953, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 82.3575, 0.0, 0.0, 0.0, 29.8385, 33.276, 0.0, 62.5775, 0.0], [47.4239, 0.0, 15.0568, 117.4428, 58.7714, 61.3428, 47.516, 49.188, 77.2005], [7.1227, 407.385, 146.7355, 7.8989, 64.7258], [6.6793, 0.0, 0.0, 140.7672, 104.4936, 170.363, 157.9605, 0.0, 0.0, 0.0, 0.0, 27.1253, 0.0, 20.205, 0.0, 0.0, 0.0, 0.0, 13.986], [76.8588, 0.0, 0.0, 59.2895, 82.544, 0.0, 9.509, 164.7965, 63.366, 40.0678, 104.5138, 0.0, 0.0, 38.1267, 0.0, 6.858], [172.935, 70.0128, 178.408, 1.9152, 130.7246, 99.685], [50.5424, 97.2928, 165.8568, 105.8148, 49.0838, 64.6486, 139.83, 0.0, 75.4885, 0.0], [52.668, 75.7248, 192.4548, 44.8279, 135.606, 93.2595, 0.0, 0.0, 3.219, 205.9645, 294.9263, 12.0704, 78.6034], [9.2035, 64.778, 47.616, 11.544, 258.13, 154.7423, 47.1776, 165.8558, 95.003, 232.056, 82.5106, 60.0413, 26.8717], [109.573, 136.948, 0.0, 0.0, 308.9675, 405.33, 56.4218, 210.3723, 95.0783, 58.6575, 0.0, 0.0], [80.9449, 135.0624, 202.0488, 94.0272, 96.4786, 9.3586, 297.04, 93.128, 149.82, 214.6, 10.873, 313.29, 0.0, 48.2595, 287.0406], [8.0401, 114.6992, 51.272, 132.3084, 98.9791, 146.245, 236.4075, 47.656, 159.924, 120.7495, 215.2605, 114.696, 31.6922, 40.5191, 81.3846, 221.265, 187.7782, 186.0589, 44.8133], [187.188, 228.5446, 284.3885, 277.685, 151.452, 26.532, 127.6315, 490.032, 32.0812, 15.2646, 543.8644, 72.6818], [93.1241, 60.3416, 217.848, 215.8248, 149.5037, 165.4742, 221.8715, 76.86, 87.084, 31.857, 298.4265, 291.2977, 89.1002, 380.0074, 301.4616]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

