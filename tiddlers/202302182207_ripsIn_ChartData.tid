created: 20230218220736000
creator: Drevarr
modified: 20230705163519640
modifier: drevarr
tags: ChartData
title: 202302182207_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Gretrek", "Bri The Warrior", "El Mas Prron Aki", "Savage Pixie", "Ark Darkness", "Sygaldry Verdandi", "Lord Erin The Wise", "Irish Mini Rev", "Koralia Danai", "Liyo Morgaine", "Belvyn Brightblade", "Leilani Ellesmera", "Minka Bringer", "Koisx", "Aveliad Frostmoon", "Ark Est Destroyer", "Mini Mei Rev", "Be\u00eb", "Ace Hammers", "Sheep Poh", "Sailor Soup", "Kia Forte", "Flanneryflame", "Johosh The Great", "Jessica Jung", "Kalenthian", "Blanco Padre Guard", "Husky Guard", "Dark Sidiuz", "Flower Redrose", "Nelliel T", "Primal Clone", "Zadie Miststep", "Aronorf Xideliesi", "Legacy Of Mathus", "Peanut Strongpaw", "Anita Strips", "Venomina The Fierce", "Drevarr Moonwillow", "Kahless The Drunk", "Morv\u00e4rth", "Xanvias Tseli", "Newtype Khan", "Sp\u00edcy Cheese", "Sumatra Satyricon", "Gabeulon", "Xmus Jaxnflaxn Waxn", "Hyde En Sikh", "Rina Of Theros", "Tegan Parker"];
const professions = ["Dragonhunter", "Herald", "Spellbreaker", "Firebrand", "Virtuoso", "Firebrand", "Firebrand", "Weaver", "Vindicator", "Firebrand", "Herald", "Firebrand", "Soulbeast", "Scrapper", "Dragonhunter", "Scrapper", "Spellbreaker", "Renegade", "Scourge", "Vindicator", "Catalyst", "Reaper", "Scrapper", "Tempest", "Firebrand", "Catalyst", "Mechanist", "Firebrand", "Dragonhunter", "Scourge", "Scrapper", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Berserker", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scrapper", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Berserker", "Soulbeast", "Firebrand", "Engineer", "Chronomancer", "Scourge", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0111, 0.0119, 0.0336, 0.0], [0.0, 0.0, 0.0504, 0.0], [0.0504, 0.0, 0.0, 0.0, 0.0], [0.0274, 0.0, 0.0, 0.0169], [0.0238, 0.042, 0.0], [0.0684], [0.0, 0.0119, 0.0336, 0.0, 0.0068, 0.0, 0.0, 0.0254], [0.0171, 0.0, 0.0357, 0.0168, 0.0104, 0.0, 0.0, 0.0, 0.0294, 0.0085], [0.0, 0.0336, 0.0, 0.0593], [0.0256, 0.0, 0.0238, 0.0168, 0.0, 0.0342, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.1017], [0.0171, 0.0333, 0.0476, 0.0336, 0.0], [0.0238, 0.0, 0.0068, 0.0548, 0.0263, 0.0, 0.0, 0.0508], [0.0, 0.0, 0.0595, 0.0588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0254], [0.0, 0.0685, 0.0, 0.0, 0.0, 0.0847], [0.0342, 0.0556, 0.0, 0.0588, 0.0], [0.0, 0.0, 0.1345, 0.0], [0.0, 0.0, 0.1345, 0.0, 0.0], [0.0342, 0.0222, 0.0714, 0.0168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0254], [0.0171, 0.0111, 0.0238, 0.0336, 0.0, 0.0137, 0.0, 0.0, 0.0441, 0.0254], [0.0595, 0.0252, 0.0, 0.0068, 0.0137, 0.0, 0.0, 0.0, 0.0593], [0.0476, 0.0672, 0.0137, 0.0274, 0.0, 0.0, 0.0, 0.0085], [0.1008, 0.0, 0.0068, 0.0, 0.0, 0.0, 0.0147, 0.0254], [0.0, 0.0672, 0.0, 0.0068, 0.0548, 0.0789, 0.0, 0.0294], [0.0085, 0.0111, 0.0238, 0.0672, 0.0, 0.0068, 0.0, 0.0263, 0.0, 0.0, 0.0424], [0.0, 0.0476, 0.0924, 0.0, 0.0068, 0.0274, 0.0, 0.0152], [0.0222, 0.0, 0.0672, 0.0, 0.0068, 0.0959, 0.0, 0.0, 0.0, 0.0085], [0.0085, 0.0222, 0.0595, 0.042, 0.0, 0.0, 0.0, 0.0, 0.0147, 0.0508], [0.0513, 0.0222, 0.0672, 0.0, 0.0, 0.0137, 0.0, 0.0, 0.0, 0.0254], [0.0171, 0.0222, 0.0476, 0.1008], [0.0, 0.0924, 0.0, 0.0411, 0.0, 0.0, 0.0, 0.0254], [0.0222, 0.0, 0.1429, 0.0, 0.0137, 0.0137, 0.0], [0.0256, 0.0111, 0.0238, 0.0588, 0.0, 0.0068, 0.0959, 0.0, 0.0, 0.0254], [0.0513, 0.0333, 0.0119, 0.0168, 0.0068, 0.0137, 0.0, 0.0, 0.0932], [0.0684, 0.0111, 0.0595, 0.0084, 0.0068, 0.0274, 0.0, 0.0147, 0.0508], [0.0342, 0.0222, 0.0238, 0.0672, 0.0, 0.0068, 0.0, 0.0, 0.0, 0.0294, 0.0678], [0.0333, 0.0714, 0.0336, 0.0, 0.0137, 0.0, 0.0789, 0.0, 0.0, 0.0763], [0.0171, 0.0222, 0.0238, 0.0168, 0.0, 0.0205, 0.0, 0.0, 0.0, 0.1324, 0.0678], [0.084, 0.0, 0.0342, 0.0, 0.0, 0.0, 0.0441, 0.0847], [0.0256, 0.0111, 0.0357, 0.0588, 0.0, 0.0274, 0.0, 0.0789, 0.0, 0.0147, 0.0593], [0.0513, 0.0111, 0.0119, 0.1092, 0.0, 0.0068, 0.0, 0.0, 0.0, 0.0, 0.0593], [0.1111, 0.0476, 0.0252, 0.0, 0.0, 0.0137, 0.0, 0.0, 0.0, 0.0932], [0.0513, 0.1, 0.0, 0.0756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0508], [0.0256, 0.0667, 0.0238, 0.0756, 0.0, 0.0068, 0.0137, 0.0789, 0.0, 0.0588, 0.0254], [0.0598, 0.0222, 0.0119, 0.084, 0.0, 0.0411, 0.0, 0.0, 0.0, 0.0508], [0.0171, 0.1778, 0.0238, 0.0, 0.0, 0.0068, 0.0, 0.0, 0.0, 0.0, 0.1017], [0.0889, 0.0119, 0.0588, 0.0, 0.0, 0.0137, 0.0, 0.0, 0.1471, 0.0508], [0.0889, 0.0595, 0.0672, 0.0, 0.0137, 0.0, 0.0, 0.0, 0.0147, 0.0763], [0.0684, 0.0, 0.0833, 0.0588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1017], [0.0171, 0.0556, 0.0357, 0.0504, 0.0, 0.0274, 0.0137, 0.0, 0.0, 0.1618, 0.0424], [0.0171, 0.0333, 0.0595, 0.1008, 0.0137, 0.0137, 0.0789, 0.0, 0.1017]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

