created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Philip Poundhouse", "Gamora Titus", "Glorious Gluvs", "Mew Mew", "Loganlek", "Heals For Daddy", "Kahlyanne", "Cupi Cupita", "Trooobi", "Tribal S", "Seiker Novus Terra", "Tegan Parker", "Air One Com", "Koralia Danai", "Gestern Yesteryear", "High Sorcer Baradun", "Mistwalker Cael", "Drevarr Moonwillow", "Sub Train", "Solus Luxes", "Firebrand pl1-2628", "Legoh Brave", "K\u00f4sair", "Sofya De Nova"];
const professions = ["Herald", "Firebrand", "Berserker", "Scrapper", "Berserker", "Druid", "Tempest", "Herald", "Herald", "Druid", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Herald", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1522, 1.607, 20.7782, 1.058, 11.9635, 5.3594, 28.199, 0.0, 0.0, 15.855], [10.25, 11.7734, 7.3431, 2.1622, 58.3751], [1.8451, 41.5565, 2.8989, 0.8845, 5.4029, 7.1459, 26.7149, 0.0, 4.7309, 0.0, 0.0, 13.3326], [10.2203, 14.4077, 13.6112, 33.7646, 10.332, 0.0, 0.0, 0.0, 39.6374], [0.0, 2.6189, 38.9592, 12.4421, 0.0, 10.9344, 11.1442, 26.7149, 0.0, 0.0, 9.6309, 0.0, 17.2963], [0.0, 1.7261, 67.1582, 4.3801, 0.0, 15.8227, 20.672, 90.5338], [0.0, 3.3926, 25.2307, 3.047, 13.3786, 13.4411, 73.4659, 11.07, 18.2246, 11.808, 2.808, 34.2323], [3.3488, 26.5459, 123.5563, 14.9222, 14.8022, 64.932], [14.4609, 18.9274, 100.1808, 7.5753, 27.4003, 15.823, 68.6424], [1.1417, 2.6784, 86.4523, 2.0102, 0.0, 19.9392, 21.6928, 50.8325, 0.82, 20.5901, 1.476, 0.0, 60.8975], [0.0, 33.0226, 0.0, 3.1886, 31.0022, 8.7622, 156.5789, 69.208, 5.2147, 0.0], [6.2918, 4.464, 91.6469, 5.6074, 7.5898, 5.8698, 60.1085, 59.04, 0.0, 6.5313, 0.0, 60.1768], [8.6004, 11.8445, 95.3573, 6.9828, 18.6528, 20.9272, 113.5382, 26.896, 4.6771, 3.321, 0.0, 69.5456], [28.391, 77.5474, 2.5815, 27.4003, 23.7345, 100.1808, 37.228, 28.8691, 8.5977, 0.0, 103.7779], [4.1353, 25.177, 133.5744, 5.0149, 37.4342, 51.2972, 71.6107, 27.798, 30.5357, 28.044, 128.281], [0.0, 19.5821, 264.5515, 0.2328, 0.0, 92.1062, 47.8093, 181.4386], [10.833, 23.3914, 115.7645, 7.2367, 5.9077, 44.7667, 38.3666, 149.5291, 34.358, 26.2886, 17.2323, 2.8501, 139.8119], [7.2051, 24.0461, 150.6422, 6.348, 44.7667, 40.2381, 135.8006, 29.028, 38.5997, 23.247, 6.8515, 124.3173], [6.4694, 16.7251, 149.1581, 3.1952, 0.4696, 52.4851, 26.8821, 151.0133, 68.306, 20.0525, 18.2655, 0.4493, 130.4431], [9.5391, 35.2358, 164.7418, 16.7799, 5.0669, 45.5386, 47.4691, 174.3888, 20.664, 33.8688, 16.4205, 4.3524, 117.8312], [12.1522, 33.4502, 141.3662, 3.4491, 64.9632, 47.2139, 155.8368, 64.37, 31.3958, 19.9629, 1.2074, 162.153], [2.8668, 21.0701, 156.5789, 8.1043, 0.0, 44.6381, 39.7277, 127.6378, 2.214, 54.5664, 36.0144, 9.2383, 278.5428], [6.6216, 32.4979, 227.0765, 17.7744, 0.0, 59.8176, 46.9586, 214.4611, 14.6227, 24.5385, 9.8701, 161.4323], [8.093, 46.6637, 123.5563, 15.0871, 0.0, 67.0214, 91.7055, 468.2525, 87.74, 133.7549, 86.1984, 25.272, 466.6403]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

