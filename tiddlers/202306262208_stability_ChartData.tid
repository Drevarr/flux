created: 20230626220846000
creator: Drevarr
modified: 20230705163539603
modifier: drevarr
tags: ChartData
title: 202306262208_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Cael", "My Birthday Girl", "Regis Hawkesburne", "Newtype Khan", "Xanvias Einzbern", "Johosh The Mighty", "Grasszanine", "Blancooo Padreee", "Gavann", "Sub Train", "Ryvalia Fazebringer", "Zaylen Harker", "Crusader Siolith", "Sygaldry Verdandi", "Bella Sassy", "Tika Fiery", "Solus Sanctus", "Koralia Danai"];
const professions = ["Vindicator", "Scrapper", "Berserker", "Spellbreaker", "Berserker", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.2921, 4.4174, 0.4195, 3.8511, 0.598, 1.2751, 1.8792, 0.0, 1.7343, 8.8803], [1.9404, 2.0341, 2.0249, 1.2936, 2.5309, 0.5279, 0.8487, 0.5712, 0.4586, 2.0434, 1.3386, 1.1537, 1.3331, 0.138, 3.0967, 1.6052, 1.3158, 3.0996, 1.2226], [13.8159, 0.0, 0.6376, 0.4563, 0.7762, 1.2052, 0.6655, 0.2452, 1.0752, 2.011, 0.4162, 0.0, 1.0226, 1.7034, 2.76, 0.2429, 1.3311, 1.579, 1.5498, 3.4105], [14.737, 0.6072, 0.8271, 0.0, 1.4462, 0.2984, 0.264, 0.2352, 0.1411, 2.0055, 3.5696, 2.2811, 3.1846, 0.0, 4.6754, 2.3881, 0.0, 1.8081, 4.8262], [19.0352, 0.0, 1.2144, 1.7682, 0.8193, 2.4707, 0.6885, 0.3206, 1.0416, 1.5876, 0.0757, 3.0788, 2.1238, 1.9996, 1.748, 3.5825, 2.3098, 1.2229, 2.1771, 3.6679], [19.9563, 0.0, 1.184, 0.9982, 0.9055, 2.4707, 0.0, 1.1882, 1.1424, 1.2348, 1.0974, 1.1601, 1.4945, 3.1846, 1.748, 3.036, 2.1141, 1.5325, 3.8007, 3.9253], [18.7282, 2.6796, 3.3396, 1.3404, 1.3367, 0.7834, 0.3213, 1.0373, 0.0, 1.6934, 2.0812, 3.5696, 1.4159, 4.4436, 1.15, 2.7931, 2.5056, 0.0, 3.2841, 5.3411], [21.7984, 0.0, 3.461, 1.3975, 1.3798, 4.0977, 1.3081, 1.4899, 1.2768, 0.1058, 1.5893, 1.294, 1.5994, 4.3695, 1.748, 3.4003, 5.3244, 2.1053, 2.6937, 3.861], [25.4827, 2.611, 2.2816, 1.3152, 1.2655, 0.0689, 0.6412, 2.2848, 4.2002, 4.3728, 3.1202, 3.6289, 4.324, 2.7324, 3.2494, 0.3715, 3.0627, 5.6628], [26.4037, 0.0, 3.4003, 2.6809, 2.2422, 5.7247, 5.0949, 5.1865, 2.2512, 2.1874, 5.6382, 6.0683, 5.5324, 9.1834, 4.002, 10.201, 6.6555, 2.2601, 6.4944, 11.39], [42.9828, 4.3659, 4.0682, 3.8217, 1.4661, 7.3517, 0.6885, 2.3575, 1.9824, 2.6813, 6.395, 6.5591, 4.3525, 5.3323, 3.68, 9.108, 4.0324, 0.0, 7.3062, 5.3411], [31.6231, 4.7362, 2.7664, 1.9188, 7.412, 3.3966, 1.3202, 4.4016, 3.4222, 7.341, 4.2835, 2.5696, 11.6274, 5.934, 10.0188, 6.8121, 1.5635, 6.642, 7.6576], [55.2636, 0.0, 3.5218, 3.4794, 2.7812, 10.5455, 1.8131, 1.3579, 4.5696, 6.3504, 3.784, 5.2205, 4.2739, 12.7383, 5.382, 7.2257, 8.339, 2.4149, 7.6383, 11.776], [41.7547, 3.2802, 3.4914, 4.6202, 5.6703, 3.9169, 3.6491, 4.9225, 5.4096, 7.8322, 7.6437, 11.1996, 4.7458, 16.5154, 0.69, 11.9618, 7.1644, 0.8204, 7.1217, 15.8945], [75.5269, 2.5872, 3.9772, 5.2762, 6.6189, 11.3289, 2.0196, 4.3189, 2.6208, 5.8565, 7.3788, 7.4515, 5.6111, 14.812, 6.67, 15.1193, 8.4564, 3.0496, 7.3062, 4.0541], [82.2814, 5.0358, 7.7722, 4.5632, 5.045, 8.6172, 3.7179, 2.4518, 5.9472, 5.7506, 5.4868, 4.5066, 7.0794, 15.7748, 5.152, 8.9258, 6.4206, 4.8762, 5.3505, 10.0386], [55.2636, 1.155, 5.6166, 9.2405, 4.851, 10.6058, 2.0425, 3.8663, 7.392, 8.4672, 6.6598, 12.6721, 6.4239, 18.515, 6.716, 15.2407, 10.2965, 0.5573, 8.5977, 17.6963], [74.9129, 3.1878, 4.8576, 6.6452, 3.6436, 11.8712, 4.4753, 1.8671, 4.536, 6.7738, 8.7789, 9.281, 8.3642, 10.3684, 6.21, 15.5443, 11.3535, 5.7431, 8.8191, 18.9189]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

