created: 20231007004715000
creator: Drevarr
tags: ChartData
title: 202310070047_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Amiti\u00e9l", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Atria Ruinheart", "Gamora Titus", "Samarandal", "Sub Train", "Kisumaiassu", "Crusader Siolith", "Solus Luxes", "Bella Bitty"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.2164, 0.0, 29.16, 0.0, 0.0, 15.7858, 72.9756, 7.869, 31.1711, 0.0, 16.8113, 0.0, 0.0, 0.0, 0.0, 0.6318], [5.4108, 44.4074, 32.4676, 56.916, 9.5946, 27.72, 49.5641], [23.4252, 0.0, 5.8421, 38.268, 16.6935, 42.3245, 37.5691, 0.0, 65.4588, 14.448, 48.048, 0.0, 0.0, 0.0, 8.6611, 15.808, 0.4438, 0.0, 0.0, 33.0642], [13.8024, 4.4906, 15.6909, 16.344, 0.1664, 0.6336, 10.1844, 47.9995, 64.3626, 55.986, 21.0811, 5.004, 5.1719, 0.0, 40.1009, 10.036, 29.2512, 0.0, 186.2757], [66.8736, 66.176, 148.824, 17.8581, 73.8144, 292.2357], [27.8964, 140.94, 164.733, 110.9909, 0.0, 0.0, 37.9415, 41.08, 11.131, 0.0, 0.5856, 157.7394], [20.6388, 40.3777, 40.536, 50.9677, 21.6058, 151.3515, 69.7073, 54.619, 24.4896, 272.727], [24.2676, 39.9848, 38.5165, 137.232, 121.6238, 11.2147, 105.4085, 68.9882, 169.7544, 417.831, 110.8708, 0.0, 0.0, 0.0, 36.3393, 12.532, 148.5487, 1.4592, 85.0824], [66.1932, 32.4551, 103.4776, 86.796, 33.0542, 28.4486, 50.3562, 86.9069, 354.8556, 390.612, 290.5102, 0.0, 15.4058, 16.3701, 39.0, 18.564, 0.0, 12.576, 248.7186], [66.5172, 7.8067, 60.948, 19.0782, 182.7936, 111.9152, 36.6048, 365.0346, 424.668, 323.7835, 10.0871, 0.0, 15.1394, 81.64, 107.5378, 48.7846, 0.8736, 173.5344], [44.4528, 55.2712, 110.0952, 108.216, 69.8241, 35.2282, 313.2269, 120.6187, 459.9342, 510.84, 307.4471, 24.336, 0.0, 23.22, 80.808, 119.9631, 44.3808, 403.4043], [39.9492, 72.9229, 80.892, 23.6814, 54.2678, 222.416, 76.9882, 570.807, 576.114, 223.7836, 197.568, 8.0638, 71.176, 13.9088, 191.308, 94.0771, 72.6607, 24.9504, 408.0375]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

