created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00efr", "Larkawolfe", "Emily Melia", "J\u00e2sm\u00eene", "Kahlyanne", "Venomina The Sly", "Heals For Daddy", "Arriasa", "Sakis Ranger", "Drevarr Moonwillow", "Klengah", "Zaedy Zae"];
const professions = ["Tempest", "Druid", "Druid", "Tempest", "Tempest", "Druid", "Druid", "Druid", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4274, 106.8984, 393.015, 78.6103, 14.6013, 55.0316, 0.0, 0.7567, 49.1785, 44.1654, 56.304, 159.6839, 31.8357, 64.1494, 41.9447, 6.5142, 61.4208, 30.6432, 59.862, 13.818, 57.8755, 76.0911, 59.8511, 18.6739], [558.4118, 1305.519], [1.0878, 257.6146, 458.025, 52.6663, 0.0, 97.8581, 32.5431, 0.0805, 21.3333, 82.0535, 0.0, 213.8641, 108.9919, 5.4341, 0.0, 41.7384, 148.7136, 160.8096, 65.0358, 13.1462, 149.3265, 83.2167, 0.0, 81.0005, 45.2205, 13.4992, 91.0386], [417.8563, 750.57, 133.0062, 78.5703, 81.9697, 6.1341, 22.4918, 191.3835, 69.8832, 176.4427, 25.4421, 31.2794, 65.8038, 73.8936, 52.4832, 77.28, 107.5747, 182.3055, 0.0, 58.6849, 0.0, 81.2967, 43.0267, 68.1338, 62.2863], [2.4475, 384.8342, 399.516, 324.7324, 64.4032, 49.4707, 66.8304, 7.3255, 147.6952, 77.5697, 166.9616, 319.2727, 52.6194, 199.2076, 126.321, 42.6096, 159.0624, 172.704, 119.7645, 47.964, 176.833, 190.1357, 11.7037, 0.0, 259.5909, 12.987, 203.5215, 58.0262, 150.9651], [60.5153, 1429.6867, 2177.835, 124.7906, 264.995, 168.2726, 0.0, 118.6087, 284.0445, 337.7796, 192.464, 776.043, 103.3905, 124.8527, 63.23, 147.7872, 204.4224, 281.7024, 553.6327, 301.2413, 518.8198, 122.326, 125.1695, 15.2352, 445.8285, 33.71, 135.7975, 83.5866], [70.6552, 111.9787, 2971.548, 50.9367, 329.0996, 150.8676, 0.0, 156.3471, 155.8849, 359.8997, 268.8976, 254.7135, 129.0967, 160.6385, 399.9004, 200.4354, 315.7728, 622.272, 0.0, 723.7646, 730.5116, 243.2155, 485.639, 222.854, 32.798, 337.3695, 20.3713, 236.9405, 189.2808], [2904.673, 6849.69, 681.3759, 160.4728, 63.0154, 685.3822, 286.8137, 0.0, 690.7322, 779.2111, 179.883, 577.4496, 732.6816, 438.1932, 617.7931, 1432.466, 31.3624, 143.3358, 29.751, 251.901, 0.0, 211.0503, 507.5433], [291.2843, 2927.3227, 7508.655, 834.0131, 275.851, 265.4085, 60.9736, 75.6861, 463.3001, 537.0845, 805.9095, 1095.7787, 47.0844, 976.5504, 785.904, 307.4345, 859.4755, 551.7988, 3.6949, 164.4758, 159.689, 239.7005, 311.337, 0.0, 243.455, 241.1343], [72.0279, 1750.8053, 6167.085, 333.8993, 182.7336, 622.4642, 320.4383, 282.047, 968.0524, 300.104, 694.7251, 461.2213, 595.0383, 588.9645, 376.0218, 664.2048, 646.7328, 336.2944, 853.7842, 1042.9826, 33.0742, 292.2164, 438.3109, 414.5244, 548.6423, 123.0684, 658.0001, 446.3748], [261.2274, 2302.8667, 6974.391, 1168.0854, 334.3919, 159.9673, 207.6578, 290.3965, 641.6318, 124.9728, 1467.1498, 138.2438, 685.0993, 945.3204, 0.3564, 922.0512, 924.2688, 91.7938, 1164.1637, 1322.5668, 217.0905, 0.0, 139.456, 12.8653, 134.55, 159.0334, 43.654, 300.564], [2041.0186, 7903.443, 899.1326, 278.1579, 805.903, 183.9121, 134.5316, 561.0578, 972.611, 275.6688, 707.1989, 142.393, 1019.1663, 1187.6674, 73.9134, 874.5408, 626.7744, 466.0022, 1147.6507, 944.6906, 53.949, 600.9262, 306.5058, 297.3403, 199.6605, 576.2429, 685.9722, 648.8829]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

