created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Necrotic Windrunner", "Latedoctor", "Newtype Khan", "Chocolate Teapot", "Be\u00eb", "Black Raspberry Pie", "Rahani Sunray", "Primal Clone"];
const professions = ["Firebrand", "Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Reaper", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 10.4672, 5.093, 0.0, 0.0, 2.9914, 2.0, 4.02, 1.0444, 4.193, 0.0, 0.9867, 0.9828, 12.6509, 3.6552], [8.0902, 31.8605, 6.5714, 3.3158, 4.0086, 2.0633, 0.0, 0.0, 18.0889, 6.7193, 18.3846, 0.0, 9.9138, 12.4151, 0.0], [6.377, 10.6744, 36.3214, 0.0, 8.4052, 4.3924, 1.0, 7.36, 10.3778, 19.4211, 10.2923, 0.9867, 0.0, 23.8396, 9.2759, 15.9111], [10.7612, 14.2049, 61.6047, 71.2857, 3.5, 22.7672, 7.2405, 2.0, 11.34, 39.5111, 6.2281, 16.7846, 25.12, 9.2759, 6.1604, 17.1207], [5.9552, 28.8279, 78.9767, 57.8929, 10.3947, 26.2241, 10.6329, 9.6308, 18.08, 16.069, 12.1415, 21.069], [14.2377, 46.4651, 27.75, 8.8421, 23.0086, 10.443, 0.0, 9.32, 12.7111, 17.8947, 27.9538, 20.28, 19.5862, 10.4434, 18.1034, 18.8556], [19.7951, 4.2895, 58.5862, 10.0886, 6.5366, 12.64, 24.0222, 30.8421, 3.0154, 31.04, 13.431, 24.3396, 1.9828, 30.6963], [21.7951, 27.6047, 75.7857, 4.2632, 49.9483, 18.1899, 3.0, 8.82, 28.2444, 35.1053, 6.0462, 31.8133, 18.569, 49.1226, 12.3621, 16.963], [22.6716, 48.6557, 48.4884, 41.9643, 7.8684, 51.2241, 23.1899, 3.122, 23.0, 49.6, 16.3684, 57.4462, 9.96, 19.4483, 33.6132, 51.7931]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

