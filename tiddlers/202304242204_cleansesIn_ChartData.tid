created: 20230424220408000
creator: Drevarr
modified: 20230705163526516
modifier: drevarr
tags: ChartData
title: 202304242204_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Sassy Daddy Demon", "Seren Nightroad", "Rudjulin", "Johosh The Great", "Kmpek", "Kiloak", "Zaylen Harker", "Koralia Danai", "Cedryn X", "Sub Train", "Zefirokai", "Primal Clone", "Xyntharos", "Gavann", "Lord Erin The Wise", "Sygaldry Verdandi", "Etch\u00e9ry", "Tegan Parker", "Bella Sassy", "Sp\u00edcy Cheese", "Inedible Plant", "Fribble Bibble", "Mistwalker Caelon", "Sumatra Satyricon", "Cat Wigglebooty", "Smol Gluvs", "Arriasa", "Tika Rucola", "Mike The Archmagus", "Leana Deeb", "Smol Bee", "Newtype Khan", "Tribal S", "Rina Of Theros", "Mac Aaroni", "Ryvalia Fazebringer", "Xanvias Tsoli", "Eibh\u00ebar", "Arka\u00f1tor", "Daddys Lil Orchid", "Blancooo Padreee", "Grasszanine", "Cyclotechnist Farra", "Black Raspberry Pie", "High Sorcer Baradun", "Zadie Miststep", "Tootsie Pop Rocks", "Drevarr Moonwillow", "Panther B Me", "Solo Bloodborn"];
const professions = ["Vindicator", "Scourge", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Weaver", "Firebrand", "Berserker", "Tempest", "Firebrand", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Soulbeast", "Scrapper", "Scourge", "Druid", "Chronomancer", "Weaver", "Weaver", "Vindicator", "Spellbreaker", "Druid", "Scourge", "Tempest", "Chronomancer", "Holosmith", "Chronomancer", "Scrapper", "Vindicator", "Spellbreaker", "Spellbreaker", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Scrapper", "Scrapper", "Scourge", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1201, 0.0, 0.0455, 0.1546, 0.3214, 0.1724, 0.0172, 0.3438, 0.0986, 0.1333, 0.1667], [0.1491, 0.08, 0.2576, 0.3196, 0.375, 0.069, 0.0517, 0.3281], [0.7321, 0.0, 0.0172, 0.5156, 0.2676, 0.16, 0.1, 0.3373, 0.288], [0.1077, 0.04, 0.1061, 0.1753, 0.3571, 0.0, 0.0172, 0.1719, 0.2394, 0.1733, 0.0889, 0.241, 0.168], [0.2474, 0.4821, 0.0, 0.0172, 0.4531, 0.1831, 0.2933, 0.2444, 0.241, 0.352], [0.1491, 0.06, 0.1061, 0.134, 0.3929, 0.0, 0.2344, 0.0845, 0.2133, 0.0667, 0.241, 0.232], [0.089, 0.0, 0.1515, 0.2474, 0.5179, 0.069, 0.0, 0.3125, 0.1831, 0.2933, 0.0667, 0.3253, 0.112], [0.1449, 0.02, 0.1364, 0.1546, 0.5, 0.0, 0.0172, 0.2812, 0.1549, 0.2, 0.2444, 0.1687, 0.12], [0.268, 0.5536, 0.0345, 0.0172, 0.4531, 0.1268, 0.36, 0.2778, 0.494, 0.384], [0.1429, 0.04, 0.2424, 0.3505, 0.625, 0.0, 0.0, 0.4688, 0.1408, 0.6], [0.6429, 0.0345, 0.0, 0.5625, 0.0282, 0.5333, 0.2444, 0.7952, 0.312], [0.1077, 0.0, 0.2424, 0.134, 0.4464, 0.0, 0.069, 0.7188, 0.0986, 0.4, 0.1, 0.3614, 0.168], [0.1077, 0.02, 0.3788, 0.2165, 0.3393, 0.0345, 0.1034, 0.5625, 0.2254, 0.24, 0.1111, 0.3133, 0.216], [0.1905, 0.02, 0.2879, 0.3929, 0.0, 0.0172, 0.3125, 0.0704, 0.5867, 0.2778, 0.1928, 0.128], [0.2029, 0.06, 0.1061, 0.0412, 0.375, 0.0, 0.069, 0.3594, 0.0563, 0.4133, 0.3111, 0.4699], [0.1056, 0.0, 0.2727, 0.2784, 0.5893, 0.0, 0.0172, 0.625, 0.169, 0.24, 0.0667, 0.3494, 0.24], [0.1553, 0.04, 0.1515, 0.3608, 0.5, 0.0, 0.0345, 0.1408, 0.28, 0.1667, 0.506, 0.208], [0.2174, 0.02, 0.1515, 0.3299, 0.5179, 0.069, 0.0, 0.2656, 0.0704, 0.28, 0.1222, 0.2169, 0.128], [0.1201, 0.08, 0.1364, 0.4021, 0.4821, 0.1379, 0.0, 0.4844, 0.1972, 0.32, 0.1667, 0.2289, 0.2], [0.1408, 0.02, 0.1061, 0.5464, 0.6429, 0.0345, 0.0345, 0.3594, 0.0563, 0.4533, 0.1111, 0.264], [0.1739, 0.22, 0.1364, 0.1753, 0.3929, 0.0, 0.0172, 0.4219, 0.2113, 0.5333, 0.1556, 0.4337, 0.16], [0.207, 0.0, 0.1667, 0.2474, 0.3393, 0.0, 0.0172, 0.2656, 0.1549, 0.48, 0.3111, 0.4096, 0.128], [0.1429, 0.06, 0.197, 0.3093, 0.5179, 0.0345, 0.069, 0.2344, 0.0423, 0.56, 0.2778, 0.3614, 0.288], [0.2381, 0.02, 0.1818, 0.1856, 0.0172, 0.4219, 0.0704, 0.7733, 0.0778, 0.3976, 0.232], [0.1677, 0.02, 0.3485, 0.2371, 0.6964, 0.0, 0.0, 0.4062, 0.2113, 0.3733, 0.1222, 0.6024, 0.08], [0.1863, 0.02, 0.2424, 0.2784, 0.625, 0.0, 0.0, 0.3281, 0.0704, 0.5733, 0.1778, 0.4337, 0.184], [0.2195, 0.04, 0.1818, 0.1546, 0.4821, 0.0, 0.0, 0.5625, 0.0845, 0.4933, 0.2111, 0.2771, 0.288], [0.2153, 0.02, 0.1667, 0.1959, 0.5357, 0.0345, 0.0, 0.4688, 0.0563, 0.4267, 0.2111, 0.4458, 0.272], [0.1925, 0.02, 0.2576, 0.3299, 0.6786, 0.0, 0.0862, 0.375, 0.1127, 0.32, 0.3222, 0.253, 0.28], [0.1553, 0.0, 0.2576, 0.3196, 0.7321, 0.0, 0.0172, 0.5156, 0.169, 0.4667, 0.2667, 0.3976, 0.2], [0.1304, 0.06, 0.3939, 0.2577, 0.5357, 0.0345, 0.0517, 0.5156, 0.3803, 0.68, 0.1556, 0.4458, 0.12], [0.1967, 0.02, 0.2273, 0.1959, 0.5714, 0.0345, 0.0, 0.625, 0.2113, 0.5467, 0.2, 0.2651, 0.312], [0.1925, 0.06, 0.3182, 0.268, 0.7857, 0.0, 0.0517, 0.3125, 0.1408, 0.5067, 0.1444, 0.3735, 0.352], [0.1408, 0.02, 0.3636, 0.3196, 0.8393, 0.0, 0.0345, 0.7344, 0.1972, 0.6, 0.2, 0.4217, 0.2], [0.2422, 0.32, 0.2576, 0.2165, 0.4286, 0.1034, 0.1034, 0.2344, 0.3099, 0.4667, 0.1444, 0.3614, 0.336], [0.1656, 0.08, 0.0606, 0.3299, 0.4821, 0.0345, 0.0, 0.6094, 0.3803, 0.4933, 0.2556, 0.5904, 0.344], [0.1159, 0.1, 0.5152, 0.3402, 0.9286, 0.1034, 0.0172, 0.5156, 0.2394, 0.4133, 0.3333, 0.4217, 0.296], [0.1594, 0.06, 0.1667, 0.4742, 0.375, 0.0345, 0.0172, 0.5781, 0.2817, 0.48, 0.4, 0.506, 0.312], [0.2257, 0.06, 0.3182, 0.2887, 0.3929, 0.069, 0.0345, 0.4844, 0.1972, 0.44, 0.1889, 0.3373, 0.504], [0.205, 0.32, 0.299, 0.7321, 0.0, 0.0172, 0.625, 0.2535, 0.5733, 0.3556, 0.3133, 0.24], [0.2174, 0.0, 0.3939, 0.3196, 0.6429, 0.0345, 0.0, 0.3594, 0.2535, 0.7333, 0.0556, 0.4096, 0.368], [0.2112, 0.04, 0.0758, 0.4124, 0.5714, 0.069, 0.0345, 0.5312, 0.2394, 0.5467, 0.2333, 0.5301, 0.304], [0.2091, 0.0, 0.1667, 0.3402, 0.75, 0.1034, 0.5625, 0.2817, 0.44, 0.3111, 0.4699, 0.304], [0.1698, 0.0, 0.3333, 0.433, 1.1071, 0.0, 0.0172, 0.5781, 0.1268, 0.7733, 0.2556, 0.3855, 0.128], [0.0311, 0.1, 0.4394, 0.5258, 0.9643, 0.0345, 0.0345, 0.7188, 0.4366, 0.5467, 0.4, 0.4337, 0.32], [0.2091, 0.02, 0.1364, 0.2577, 0.7143, 0.0345, 0.0172, 0.4844, 0.1972, 0.4267, 0.2111, 0.7349, 0.432], [0.2257, 0.06, 0.1667, 0.2784, 0.9286, 0.0, 0.0172, 0.6562, 0.3239, 0.36, 0.3889, 0.3012, 0.28], [0.176, 0.02, 0.3939, 0.2784, 0.5714, 0.1034, 0.1034, 0.3906, 0.3803, 0.5067, 0.3333, 0.5783, 0.352], [0.1511, 0.04, 0.3333, 0.3093, 0.75, 0.0345, 0.0345, 0.9062, 0.3803, 0.5067, 0.2333, 0.6867, 0.176], [0.2277, 0.02, 0.4697, 0.4948, 1.0714, 0.0, 0.0172, 0.6094, 0.169, 0.7867, 0.3444, 0.494, 0.512]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

