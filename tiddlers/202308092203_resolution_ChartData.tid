created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Audens Silvermarker", "Aspros Gemeos", "The Defendant", "Arcanophage Farra", "Blancooo Padreee", "Tribal S", "Zaedy Zae", "Kisumaiassu", "Sub Train", "Rafaellagabriela", "Crusader Siolith", "Sygaldry Verdandi", "Koralia Danai", "Gabe Malhorn", "Bella Sassy"];
const professions = ["Firebrand", "Spellbreaker", "Dragonhunter", "Spellbreaker", "Spellbreaker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 24.2484, 62.4294, 0.0, 128.4265, 23.1255, 0.0, 9.357, 8.2253, 13.9042, 30.2869, 12.4531, 22.8197, 7.4342, 4.6829, 0.0, 45.4906, 17.6691], [0.0, 86.1969, 23.7427, 74.8992, 46.2707, 69.2592, 0.0, 80.3246, 52.2922], [67.9507, 0.0, 58.3704, 71.6741, 0.0, 67.5341, 22.862, 35.0145, 15.975, 87.8717, 20.3205, 23.4873], [0.0, 8.3767, 57.6774, 34.4366, 92.0442, 27.7425, 33.0624, 69.3801, 32.0717, 36.4536, 27.4057, 31.945, 0.0, 78.1757, 84.552, 73.8912, 21.3596, 0.0, 0.0, 79.8276, 0.414, 32.3177, 8.3421, 0.0, 0.0, 0.0, 5.2164], [0.0, 0.0, 73.1214, 9.438, 69.0331, 17.6175, 0.0, 47.9063, 0.6912, 9.0835, 42.3262, 65.063, 37.2442, 58.1381, 52.2922, 0.0, 56.0582, 19.5307, 54.3837, 30.0712, 95.3028, 18.492, 0.0, 49.4247, 0.0, 34.8194, 33.7896, 64.1617], [199.0144, 22.5585, 29.376, 43.5512, 50.0083, 50.4374, 45.6876, 72.7334, 41.4672, 91.2437, 117.9826, 149.351, 23.9398, 35.7111, 13.635, 48.5707, 34.017, 19.3978, 44.4015, 0.0, 14.6608, 22.7259, 39.4583], [16.0994, 129.9861, 111.8502, 38.0182, 309.7162, 24.5025, 0.0, 55.8835, 56.8858, 57.8875, 56.595, 84.6, 42.7138, 87.5846, 155.0554, 0.0, 112.9421, 26.4219, 0.0, 41.4562, 86.9524, 30.843, 27.4682, 78.7566, 0.0, 53.5194, 37.8936, 35.1362], [0.0, 0.0, 87.912, 40.051, 165.1198, 121.986, 9.9607, 130.775, 251.7888, 194.2409, 190.4966, 40.297, 232.0877, 458.6621, 39.808, 286.0704, 108.4639, 45.0608, 50.0512, 93.2344, 92.9085, 155.3637, 155.8089, 63.3466, 165.9438, 162.8946, 137.0423], [51.655, 79.8728, 81.1998, 148.1766, 498.1579, 118.098, 0.0, 145.4438, 95.351, 273.7008, 248.9151, 239.0909, 0.0, 310.4957, 489.1008, 572.8013, 56.3712, 115.0898, 0.0, 285.9851, 146.5215, 103.2139, 414.3243, 0.0, 193.2084, 39.9456, 135.142], [78.3682, 52.3912, 293.6736, 63.4282, 584.9158, 225.261, 67.4352, 164.0716, 35.8387, 307.1664, 227.1689, 321.0288, 120.3058, 316.1875, 497.8162, 401.8195, 49.5126, 56.5269, 25.29, 414.6899, 154.7325, 106.0729, 393.2448, 23.755, 171.9278, 63.8856, 175.0475], [132.0436, 123.552, 57.4266, 815.4926, 82.5795, 40.0176, 175.7571, 205.0445, 187.4074, 174.244, 252.9878, 192.3773, 307.3013, 525.133, 19.904, 375.648, 94.1261, 101.0787, 45.1913, 374.3165, 126.9945, 78.7856, 297.8937, 63.3594, 302.9026, 68.6052, 196.3975], [0.0, 64.0011, 202.554, 149.1204, 894.1655, 165.969, 25.5888, 178.1718, 16.5197, 262.8245, 207.0348, 234.7594, 100.6152, 293.0717, 594.0754, 0.0, 429.5597, 40.0738, 45.8645, 0.0, 426.5645, 237.015, 148.379, 392.5272, 0.0, 229.6734, 96.2046, 177.6184], [87.5524, 328.8965, 296.1684, 165.0924, 974.7041, 120.2445, 37.368, 122.1158, 180.023, 251.5099, 280.5397, 337.6781, 128.4974, 268.5619, 612.6768, 36.0896, 489.3331, 101.9319, 111.0713, 39.5438, 402.2025, 149.8335, 110.6328, 366.0657, 112.1403, 296.5446, 63.954, 242.0782], [19.223, 187.4475, 492.426, 162.0432, 724.8478, 232.308, 83.7648, 277.6928, 191.7043, 275.3342, 247.9547, 362.5392, 184.5672, 476.8368, 617.2296, 523.6781, 50.427, 123.9841, 48.69, 519.7222, 237.498, 106.7243, 372.1653, 90.4317, 21.9164, 101.1636, 202.5826], [35.8352, 499.1496, 435.5208, 88.088, 1058.8188, 168.48, 62.9712, 180.1554, 200.8282, 397.0853, 198.7342, 358.4784, 117.7109, 370.7246, 511.7347, 63.7056, 425.0189, 68.0634, 122.0552, 39.5438, 480.4213, 214.4865, 96.1568, 413.6067, 39.5281, 127.5714, 108.2772, 295.3228]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

