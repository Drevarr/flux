created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Mierin Farshaw", "Danaeryn", "Tirluka", "Name Is What", "Drevarr Moonwillow", "Atros Wintersshroud", "Jim Pam Zee", "Sakis Ranger", "Rosetendril"];
const professions = ["Chronomancer", "Tempest", "Tempest", "Scourge", "Scrapper", "Druid", "Druid", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 6.7146, 17.3502, 16.986, 7.1521, 10.172, 10.1696, 0.0, 0.0, 24.395, 0.0, 31.05, 0.0, 0.0, 0.0, 0.0, 5.0939, 54.3704, 0.0, 22.4721, 0.0, 24.1639, 0.0, 16.834, 26.5829, 14.8694, 6.2695, 0.0, 0.0, 69.4145, 68.1712], [70.6706, 73.1105, 71.0371, 68.9498, 142.7861, 76.2372], [38.3065, 43.1572, 103.588, 4.2364, 102.6165, 67.9963, 30.716, 32.1192, 116.4931, 33.9472, 18.4005], [25.0193, 25.326, 33.8334, 28.6563, 0.0, 3.755, 6.321, 21.7552, 0.0, 0.968, 35.5488, 0.0, 5.0329, 0.9576, 42.2716, 2.4865, 23.882, 51.2504, 0.0, 11.064, 0.0, 0.0, 0.0, 0.0, 10.6434, 25.3061, 19.6566, 28.9845, 8.6663, 15.8873, 21.674, 18.4805, 20.284, 14.2562, 5.0261, 16.7737, 0.0, 5.0674, 3.507, 0.0, 1.2492, 15.164, 0.0, 12.2409, 4.823, 21.7404, 0.0, 12.0744, 2.3098, 36.0178, 0.0, 2.4998, 3.4355, 46.8809, 22.829], [16.9884, 20.934, 52.1732, 36.8122, 2.5068, 14.9002, 2.492, 25.0144, 0.0, 32.7336, 4.4444, 22.643, 0.0, 43.2925, 2.4516, 22.4759, 47.4645, 27.9191, 2.592, 2.7468, 0.0, 4.9266, 9.9113, 62.0525, 10.2163, 17.2459, 17.385, 2.5688, 22.9295, 32.4792, 6.1355, 17.6739, 12.9234, 0.0266, 68.6475, 0.0, 5.1087, 4.69, 0.0, 0.0, 20.4282, 5.049, 34.974, 0.0, 28.9872, 0.0, 14.8543, 56.1803, 24.2424, 0.0, 9.3677, 8.9056, 56.7737, 51.5338], [508.0056, 23.1554, 40.601, 16.4707, 231.5106, 5.7771, 133.2904, 341.9265], [289.1678, 264.132, 358.985, 364.6966, 47.0635, 80.6643], [76.7666, 160.3022, 288.626, 96.0336, 180.0347, 154.6048, 290.7563, 109.7738, 76.754, 0.0, 0.0, 0.0, 108.0861, 0.0, 169.65, 53.1076, 199.3464, 0.0, 130.1648, 213.6807], [241.7126, 163.08, 229.0442, 306.8419, 43.9772, 127.2049, 71.547, 22.244, 0.0, 471.132, 11.8826, 67.7263, 15.3695, 420.0313, 22.5142, 152.5684, 695.0705, 205.254, 7.8936, 18.7866, 6.2568, 33.6711, 120.6425, 162.7711, 210.2103, 121.3125, 211.6552, 126.6283, 367.0078, 310.8084, 107.2079, 153.2474, 208.7022, 50.4295, 106.4812, 11.2843, 116.7421, 76.4136, 58.6656, 246.7098, 57.5142, 171.2943, 69.2874, 160.9502, 75.168, 113.4011, 205.8116, 112.0756, 72.199, 52.6714, 61.5085, 381.3674, 170.7755]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

