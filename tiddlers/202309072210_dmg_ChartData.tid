created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Princess Mushy", "Mayauraa", "Zihbb", "Konoko K", "Sonja Wintersong", "Skylieonna", "Clean And Green", "Snoguard", "Beware My Math", "Victoria Raskae", "Raelyn Sunray", "High Sorcer Baradun", "Nickar Foulblade", "Serum Vision", "Reckkyy", "Gluzzen", "Beware My Math", "Seiker Novus Terra", "Hyde En Sikh", "Glorious Gluvs", "Lasting Beauty", "Belvyn Brightblade", "Pafema", "Hawaiian Supreme", "Cat Wigglebooty", "Bella Sassy", "Lord Wags", "Sub Train", "Kittendo", "Snowe Shadowcharm", "Masky De Googlieyes", "Christie Raskae", "Vanhelsing Wizard", "Malfax Jinn", "Zetsu Shinigami", "Traidoruns Maximus", "Tootsie Pop Rocks", "Boo Boo Knee Capper", "Koralia Danai", "Unbound Serenity", "Drevarr Moonwillow", "Melody Phoenixstorm", "Empressy", "Poppy Pittstop", "Cormac Shadowcharm", "Pl\u00eeo", "Aira Draugr", "Toka Lockhart", "Darks Na", "Morv\u00e4rth", "Ean Thane", "Kary\u00edna", "Daphne Agla\u00e9", "Smol Gluvs", "Kittendo", "Black Raspberry Pie", "Xuerreux", "Steamy Steam", "Latedoctor", "Blaize Harlot", "Regis Hawkesburne", "Forever Dreaming", "Lord Erin The Wise", "Xanvias", "Cyclotechnist Farra", "Mistwalker Cael"];
const professions = ["Scrapper", "Dragonhunter", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Druid", "Firebrand", "Mechanist", "Vindicator", "Firebrand", "Tempest", "Willbender", "Tempest", "Scrapper", "Deadeye", "Scrapper", "Tempest", "Chronomancer", "Berserker", "Spellbreaker", "Firebrand", "Druid", "Spellbreaker", "Scrapper", "Firebrand", "Renegade", "Firebrand", "Untamed", "Reaper", "Mirage", "Willbender", "Chronomancer", "Firebrand", "Soulbeast", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Reaper", "Scrapper", "Scrapper", "Spellbreaker", "Mechanist", "Mechanist", "Mechanist", "Herald", "Tempest", "Dragonhunter", "Reaper", "Chronomancer", "Vindicator", "Reaper", "Reaper", "Soulbeast", "Chronomancer", "Berserker", "Berserker", "Reaper", "Scourge", "Berserker", "Scourge", "Weaver", "Reaper", "Scrapper", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [5.1845], [9.8731], [13.0904, 2.2701], [0.0, 0.0, 5.3785, 0.6557, 3.1374, 0.0, 0.5894, 0.0, 3.3064, 1.5308, 7.1039], [10.5663, 10.6604], [19.006, 14.5, 18.7017], [17.5448, 3.9542, 39.1], [99.7846, 27.95], [296.8308, 0.0, 0.0, 0.0, 0.0, 0.0], [6.2553, 13.7414, 1.1371, 0.0, 1.4242, 14.7262, 9.8553, 19.1243, 12.6179, 0.0], [4.335, 3.6554, 0.9924, 31.6905, 2.4669, 20.2123, 3.2643, 13.5894], [47.3617, 9.592, 60.599], [3.372, 0.0, 13.0347, 30.8654, 25.7515], [92.6579, 11.779, 32.467, 0.0], [0.0, 53.5127, 52.4294, 48.8561], [2.913, 0.0, 70.0143], [0.0, 12.7529, 1.7716, 2.6667, 0.0, 19.4583, 73.6316, 3.3398, 49.5212, 2.626, 14.3071, 15.1231], [1.0, 0.0, 0.0, 21.5085, 0.0, 4.4048, 5.9737, 5.5249, 18.9646, 24.4885, 8.5, 46.9077, 22.7923, 0.8105, 53.8613, 12.4308, 1.8635], [19.8351, 68.069, 9.7766, 6.5537, 50.4773, 122.2976], [64.7513, 63.5424, 7.0379, 12.3333, 44.5525, 25.6156, 0.0], [9.7926, 25.6839, 0.0, 22.4633, 5.3106, 38.7083, 44.1184, 18.8923, 61.5, 11.4962, 9.2143], [0.0, 38.3406, 18.2316, 42.6936, 41.7538, 48.4134], [73.2926, 60.4483, 8.9188, 24.9492, 0.0, 72.9345, 35.0132, 42.8039], [14.9521, 22.7586, 12.1929, 20.1469, 2.4091, 35.131, 46.9737, 10.8094, 23.9057, 13.6489, 30.0071, 32.0769, 10.3623, 2.8211, 17.7168, 18.8411], [28.7609, 0.0, 78.9769, 29.5731, 66.1202], [179.9692, 143.7319], [280.1579, 28.6271, 67.7382, 13.3053, 88.5643], [102.8138, 202.5287, 32.8883, 9.2994, 95.7576], [4.2394, 27.9543, 0.0, 0.0, 16.8452, 211.5132, 82.9917, 0.0, 97.2595, 54.4571], [169.5242, 99.7579, 0.0, 0.0], [32.8315, 0.0, 143.8702, 349.6571], [0.0213, 19.7241, 15.4112, 20.0169, 27.4697, 23.6488, 92.5, 9.0884, 106.5283, 23.8931, 29.7143], [1.8511, 30.8161, 13.2183, 32.7288, 13.2576, 91.3214, 37.1796, 31.9151, 6.6794, 37.1286, 35.2769, 15.058, 2.7895, 23.3121, 52.5923, 17.2118], [26.2923, 108.2874, 100.9158, 251.3468, 0.0, 0.0], [7.633, 31.6207, 15.0457, 50.8249, 5.947, 42.0714, 203.5921, 24.5221, 60.9717, 33.4656, 39.3214, 0.0, 28.7295, 18.0105, 0.0], [61.6223, 84.6839, 14.1777, 16.0169, 0.0, 2.4821, 39.2017, 33.6627, 12.2901, 20.8214, 11.7077, 3.3744, 6.5263, 72.4509, 41.3231, 21.2098], [10.0179, 0.0, 300.2431], [50.8298, 4.7471, 1.3198, 12.0734, 0.0, 0.8869, 57.8026, 63.8066, 8.5071, 4.5191, 31.3214, 0.0, 7.2609, 5.7895, 22.7572, 19.7423, 107.8248], [100.7128, 188.9023, 177.4822, 80.6158, 126.0455], [13.3085, 28.5172, 7.9188, 7.4576, 8.1515, 19.4881, 65.3816, 26.4282, 35.4057, 26.4733, 61.2, 111.0308, 31.6739, 2.8632, 73.6127, 84.9346, 66.8269], [32.4415, 111.5977, 141.2944, 75.8418, 0.0, 45.631, 197.9807, 44.3656, 31.7099], [0.0, 19.7597, 94.9882, 27.0763, 190.5286, 27.7319, 7.3684, 114.6301, 69.1077, 121.0081], [23.8782, 111.2599, 63.0606, 171.0833, 61.3536, 21.5684, 60.5573, 37.9857, 0.0, 95.6087, 90.1158, 247.1214, 62.2808], [249.9848, 0.0, 0.0, 3.8571, 0.0, 180.1105, 54.9434, 253.1298, 300.8643], [19.4952, 52.0231, 404.6721], [58.5372, 80.7126, 19.3756, 81.0452, 70.0076, 77.4702, 132.4862, 216.8585, 170.9237, 275.6929], [79.6543, 169.954, 0.0, 48.6384, 97.1136, 4.1012, 130.8816, 67.8039, 94.9693, 52.6565, 78.9071, 52.4615, 32.2609, 18.8211, 73.0751, 60.1038, 191.6171], [232.8343, 151.2453, 107.0305, 176.9214, 51.2154, 180.9444, 21.3263, 330.5723], [0.0, 196.5483, 5.1053, 454.6243, 214.8385, 256.5479], [111.0918, 0.0, 202.6192, 564.7434], [152.766, 235.5747, 119.2183, 145.5141, 194.75, 84.7976, 95.0789, 158.732, 235.6509, 293.1908, 319.7286], [30.0266, 16.2414, 8.1675, 46.0734, 178.6439, 122.881, 149.884, 286.8538, 267.1145, 169.4357, 51.9692, 97.4082, 34.9422, 354.2346, 105.5988], [154.8867, 263.5, 134.2901, 770.4357, 200.7538, 24.558, 31.0632, 48.1329, 207.8654, 234.7291], [302.1131, 254.105, 448.9575, 237.8397, 966.9429], [0.0, 0.0, 123.2792, 364.2994, 240.1742, 230.5595, 122.616, 188.4151, 277.9847, 141.3, 5.2778, 13.7368, 0.0, 263.5769, 216.2872], [458.4474, 172.4088, 594.1958, 220.5802, 1176.0786], [183.4096, 485.1839, 203.6193, 270.2712, 103.0758, 407.3036, 242.0525, 394.5212], [38.4734, 269.1322, 27.5127, 144.5876, 80.7424, 164.9226, 1294.5132, 269.1823, 510.0236, 279.0076, 68.3643], [46.4362, 95.5862, 66.6548, 172.0395, 23.1061, 177.6726, 579.5789, 99.9475, 163.9552, 205.4733, 327.5929, 120.2154, 113.8333, 36.2632, 221.578, 245.3538, 232.4827], [241.9202, 242.2011, 54.9797, 210.2034, 109.1364, 40.1429, 550.9079, 208.6022, 503.0307, 399.084, 549.4857], [227.1989, 108.8986, 163.3053, 314.5429, 0.0, 137.1667, 173.6211, 247.4913, 492.7962, 562.446], [132.9681, 352.546, 87.401, 175.7232, 219.1212, 376.7738, 1718.6053, 265.7376, 349.5708, 276.7328, 654.6929, 103.7077, 8.6329, 0.0, 0.0, 0.0, 0.0], [243.1809, 277.3563, 287.5127, 244.8644, 417.25, 389.2381, 2084.6974, 327.1851, 666.5708, 536.7786, 1001.0357, 54.8615, 453.686, 223.1053, 791.0925, 771.1, 973.1568], [575.6543, 1104.5862, 350.1523, 462.2203, 108.2197, 682.8036, 1930.6316, 302.0801, 721.4198, 750.0458, 934.3286, 0.0, 460.3986, 251.3895, 481.8324, 804.1923, 598.8452], [186.6277, 694.3621, 290.9036, 478.6215, 492.0682, 412.25, 731.4475, 861.2995, 212.0153, 1057.55, 776.0154, 494.4155, 179.1684, 1110.1965, 969.65, 991.8758]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

