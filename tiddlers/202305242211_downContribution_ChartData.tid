created: 20230524221126000
creator: Drevarr
modified: 20230705163531438
modifier: drevarr
tags: ChartData
title: 202305242211_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Newtype Khan", "Brioche Bunbringer", "Grilo Gringo", "Sire Nighthawk", "Grasszanine", "Mouschi W", "Morv\u00e4rth", "Gordon Ramsybringer", "Nocta Asthariel", "Smol Gluvs", "Ria Zerria", "Al Darasum", "Pepper Cornbringer", "Morv\u00e4rth", "Cinder Flamebringer", "No Reserv\u00e9", "Demon Maddx", "Panther B Me", "Legacy Of Mathus", "Plum Crazybringer", "Tootsie Pop Bringer", "Kary\u00edna", "Bee Honeybringer", "Sizzln Sisigbringer", "Duke Silvver", "Xanvias Einzbern", "Cael Saladbringer", "Hauzzy"];
const professions = ["Chronomancer", "Spellbreaker", "Chronomancer", "Dragonhunter", "Vindicator", "Spellbreaker", "Berserker", "Scourge", "Herald", "Scourge", "Scourge", "Scourge", "Berserker", "Scrapper", "Reaper", "Weaver", "Vindicator", "Scourge", "Scourge", "Berserker", "Scrapper", "Scrapper", "Vindicator", "Scourge", "Weaver", "Vindicator", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.7806, 112.7833, 32.2457, 24.8188, 98.037, 107.6333, 39.3551, 3.973, 0.0, 20.0421], [109.1254, 9.0, 64.4333, 41.8437, 9.0616, 4.4691, 0.0, 12.229, 13.5541, 0.0, 26.163], [60.7037, 70.8696, 19.6765, 70.8167, 28.9355, 9.2138, 91.5185, 30.6, 39.2196, 10.6081, 16.6667, 44.8773], [89.5167, 87.4318, 20.7355, 0.0, 107.285, 1.8468, 0.0, 42.5293], [57.4058, 83.5309, 0.0, 28.528, 59.5586, 1.8, 103.2509], [142.0456, 0.0, 90.4118, 100.825, 57.6824, 21.587, 123.5556, 45.6667], [6.9167, 143.3333, 27.5833, 80.9486, 39.3378, 0.0, 122.4707], [26.1812, 47.8765, 182.9066], [235.1282, 68.3478, 0.0, 101.1417, 38.2779], [131.8632, 0.0, 79.3235, 97.25, 44.6203, 7.6739, 91.6049, 11.8505, 6.1757, 4.05, 78.9176], [87.2678, 0.0, 56.5294, 160.525, 51.9305, 15.2101, 21.7654, 51.0167, 32.2523, 7.3514, 0.0, 96.8242], [122.8547, 35.6087, 0.0, 160.4417, 9.8362, 20.1014, 22.1605, 83.8785, 10.0901, 17.1, 91.0165], [13.0906, 50.1481, 0.0, 87.1168, 40.8784, 66.4833, 213.0971], [352.7578, 0.0, 0.0, 173.8333, 107.9454], [233.5043, 0.0, 180.4412, 383.7583, 80.6948, 66.5833, 136.3925, 89.8468, 0.0], [170.4302, 0.0, 160.9917, 116.6774, 60.6268, 0.0, 0.0, 207.9299, 14.7883, 11.0833, 145.6795], [247.2251, 22.2609, 39.7941, 183.45, 76.4665, 72.2681, 66.037, 56.25, 80.528, 15.6667, 0.0, 159.0366], [266.9801, 324.5652, 53.7353, 288.5833, 96.1787, 29.4674, 33.9136, 0.0, 93.1729, 13.8874, 0.0, 140.511], [234.4416, 746.0, 75.9118, 292.475, 86.0248, 8.0435, 0.0, 100.9333, 222.3271, 41.6396, 40.9833, 110.87], [319.8234, 99.5652, 309.0294, 211.4167, 209.2481, 40.5181, 0.0, 0.0, 84.0187, 20.6937, 104.55, 70.5421], [229.8604, 63.0435, 100.5294, 341.8417, 97.6352, 35.0435, 100.2222, 0.0, 151.8598, 99.6892, 0.0, 195.2985], [344.4387, 0.0, 252.5882, 417.4, 150.1042, 52.2029, 0.0, 0.0, 136.0514, 53.6126, 0.0, 154.044], [122.8803, 0.0, 196.4706, 301.2833, 253.5136, 93.9891, 113.5802, 0.0, 48.0467, 84.1126, 72.925, 217.9011], [279.9402, 521.0333, 131.5409, 15.2391, 166.6296, 58.65, 7.1712, 118.9333, 245.467], [4.1111, 0.0, 89.8235, 480.0167, 313.6352, 62.6486, 344.6543, 220.6729, 93.3649, 184.3917, 247.9322], [469.49, 673.3913, 51.4412, 403.15, 211.0596, 74.1993, 116.2469, 176.25, 143.3738, 28.5901, 0.0, 195.5623], [547.5869, 342.3478, 0.0, 914.4167, 349.1414, 39.1341, 0.0, 0.0, 341.3411, 22.0225, 328.025, 0.0], [406.2279, 0.0, 0.0, 276.875, 237.0199, 35.9601, 209.4691, 175.7, 337.0841, 74.4865, 8.8, 349.6429], [456.5869, 280.4783, 121.8235, 733.8333, 355.4243, 56.1775, 546.2963, 46.35, 264.3084, 45.7703, 15.8333, 260.5495]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

