created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Hawaiian Supreme", "Microsakis", "Kisumaiassu", "Mom Tapper", "Newtype Khan", "Dragon Deezz", "Squishy Jellyfish", "Raghnaid", "Jerryatric Reflexes", "Forever Dreaming"];
const professions = ["Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Harbinger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.133, 0.0, 50.6914, 9.9474, 19.9961, 25.0802, 15.4019], [1.9716, 35.7006, 0.0, 86.0974, 0.0, 29.9318, 15.5298], [19.1729, 57.4722, 15.1898, 28.3631, 33.9942, 27.371], [40.4746, 10.386, 27.4378, 65.142, 27.8122, 13.6296, 86.289, 13.6951, 55.1616, 41.1125, 0.0, 44.4222, 0.0, 0.0, 37.6981, 3.4095, 40.196, 28.5643, 28.3805, 10.1805, 0.0, 0.0, 27.3952, 40.2057], [21.8877, 55.7665, 160.8156, 63.6888, 112.2339, 83.2099, 32.2594, 36.1361, 0.0, 58.6426, 21.888, 35.802, 36.4371], [17.5435, 0.0, 25.792, 6.7857, 15.1164, 18.471, 19.9579, 23.6307, 62.7874, 40.5817, 0.0, 17.755, 21.6872, 16.4109, 4.7, 16.8811, 0.0, 27.4274, 50.4974, 0.9675, 20.8656, 58.515, 30.0499, 0.0, 57.036, 5.6333, 66.6536, 19.877, 0.0, 42.0734, 15.7397, 4.1329, 51.232], [59.0585, 24.4904, 71.0341, 0.0, 47.9347, 0.0, 61.776, 79.1935, 8.4915, 65.3789, 115.761, 98.9809, 21.762, 127.351, 26.7624], [41.6724, 112.2026, 208.6745, 130.8986, 110.4071, 133.8509, 66.8941, 52.1833, 35.0822, 83.8297, 18.9584], [54.679, 14.6025, 10.7856, 23.2298, 17.8222, 26.514, 40.572, 0.1652, 116.8648, 36.0002, 0.0, 57.2893, 54.0338, 189.8688, 151.3546, 139.2643, 113.2978], [22.88, 91.6104, 0.0, 67.0925, 246.7147, 155.9239, 44.55, 23.961, 79.263, 224.536, 56.056, 0.0, 78.8707, 43.2406, 200.017, 344.7156, 270.1981, 215.1785, 147.4158, 123.6174, 0.0, 22.9, 155.2277]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

