created: 20230314004438000
creator: Drevarr
modified: 20230705163522084
modifier: drevarr
tags: ChartData
title: 202303140044_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "High Sorcer Baradun", "Venomina The Siren", "Zadie Miststep", "Mac Chiato"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 214.3329, 38.4356, 0.0, 19.9214, 0.0, 0.0, 19.6436, 19.8587, 0.0, 19.7156, 59.0499, 19.9332, 0.0, 0.0, 19.98, 39.6295, 0.0, 39.2698, 0.0, 0.0, 16.0318, 0.0, 19.4376, 20.16], [20.155, 80.2196, 337.3449, 39.7341, 19.9861, 5.098, 59.8363, 36.1767, 19.892, 0.0, 0.0, 59.7442, 20.0518, 20.067, 19.98, 3.9762, 20.0031, 0.0, 0.0, 79.5446, 71.9624, 19.9584, 9.204, 20.16], [3.995, 265.2056, 119.462, 0.0, 59.4086, 37.51, 39.7742, 12.0274, 20.0155, 19.8587, 0.0, 19.8803, 84.8905, 0.0, 20.1292, 19.967, 12.492, 39.9829, 0.0, 38.185, 0.0, 39.884, 79.6769, 57.4992, 45.1776, 19.8576], [40.2299, 118.6515, 343.5998, 99.5949, 15.7872, 39.8752, 14.1693, 199.1045, 0.0, 60.2832, 54.045, 19.9226, 16.3817, 136.0671, 59.6335, 39.9874, 40.1839, 14.796, 33.5768, 20.0031, 77.7802, 0.0, 39.884, 138.621, 57.119, 17.16, 20.16], [40.1233, 76.0648, 514.5657, 136.4723, 0.0, 15.976, 47.7809, 135.5357, 0.0, 35.8724, 39.7508, 52.5407, 111.034, 37.0979, 20.1292, 20.092, 39.672, 56.197, 19.9493, 59.7182, 0.0, 39.7723, 97.999, 37.0181, 67.4544, 40.1688]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

