created: 20230515221048000
creator: Drevarr
modified: 20230705163530224
modifier: drevarr
tags: ChartData
title: 202305152210_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Be\u00eb", "Elonith Requiem", "River No Hug", "Smol Gluvs", "Lagmeloves", "Im Alt Tabbed", "Evan Nightroad", "River No Hug", "Sheep Poh", "Sumatra Satyricon", "Venom The Ferocious", "Demon Sekhmet", "Cat Wigglebooty", "Klenga", "Bella Sassy", "Kyllarian", "Tootsie Pop Rocks", "Gavann", "Sygaldry Verdandi", "Rozaalyna", "Rozaalyna", "Grasszanine", "Newtype Khan", "Demon Sekhmet", "Arriasa", "Farra The Bloodless", "Tribal S", "Primal Clone", "Miphest\u00f6", "Drevarr Moonwillow", "Blancooo Padreee", "Husky Guard", "Solus Sanctus", "Tika Mi", "High Sorcer Baradun", "Xanvias Einzbern", "Koralia Danai", "Sub Train", "Kary\u00edna", "Black Raspberry Pie", "Lord Erin The Wise", "Rosetendril", "Jeckyll Mbs", "Hauzzy", "No Reserv\u00e9", "Domitia Gravestorm", "Eibh\u00ebar", "Mistwalker Caelon", "Ryvalia Fazebringer", "Mike The Archmagus"];
const professions = ["Scrapper", "Reaper", "Reaper", "Reaper", "Scourge", "Dragonhunter", "Berserker", "Vindicator", "Scourge", "Tempest", "Soulbeast", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Reaper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Druid", "Vindicator", "Druid", "Chronomancer", "Tempest", "Scrapper", "Berserker", "Dragonhunter", "Firebrand", "Tempest", "Tempest", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Weaver", "Tempest", "Berserker", "Berserker", "Vindicator", "Spellbreaker", "Chronomancer", "Vindicator", "Chronomancer", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 5, 35, 0, 0, 0, 3, 0, 0, 3, 0, 7, 0, 19], [7, 40, 2, 1, 0, 9, 0, 13], [24, 29, 0, 1, 1, 5, 0, 17], [10, 35, 2, 12, 0, 5, 0, 13], [0, 0, 0, 0, 0, 6, 22, 0, 0, 0, 4, 2, 0, 17, 0, 0, 3, 9, 17], [9, 0, 0, 3, 4, 0, 10, 0, 0, 11, 12, 15, 3, 3, 0, 10, 0, 2], [34, 0, 16, 0, 29, 0, 3], [0, 0, 0, 0, 2, 33, 41, 0, 0, 0, 2, 0, 0, 6, 0], [0, 0, 0, 1, 10, 41, 0, 0, 3, 7, 4, 0, 1, 0, 0, 9, 8], [6, 60, 9, 13, 0, 2, 0, 0], [0, 2, 0, 0, 0, 9, 12, 0, 0, 1, 3, 5, 0, 7, 0, 6, 26, 1, 11, 9], [0, 0, 0, 2, 7, 0, 0, 2, 0, 1, 10, 13, 23, 23, 0, 14, 0, 1, 4], [17, 38, 0, 24, 0, 1, 0, 22], [1, 0, 0, 0, 3, 7, 8, 0, 0, 1, 11, 3, 4, 0, 1, 4, 8, 2, 12, 0, 4, 0, 16, 0, 19], [41, 30, 0, 2, 2, 26, 0, 4], [0, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 5, 0, 0, 11, 27, 2, 13, 0, 9, 0, 1, 0, 33], [25, 0, 0, 0, 0, 2, 0, 12, 0, 7, 7, 6, 12, 11, 0, 2, 0, 6, 0, 20], [0, 0, 0, 0, 1, 5, 38, 0, 0, 0, 0, 0, 13, 0, 0, 8, 0, 2, 8, 0, 0, 0, 10, 0, 26], [1, 0, 0, 1, 9, 0, 7, 10, 0, 2, 0, 1, 19, 15, 7, 36, 1, 7, 0, 0, 0, 4], [2, 2, 0, 0, 1, 1, 30, 0, 0, 0, 0, 0, 0, 0, 0, 1, 19, 4, 7, 13, 0, 10, 0, 9, 0, 25], [0, 0, 0, 8, 2, 35, 0, 0, 1, 10, 3, 14, 0, 16, 16, 19], [6, 33, 0, 15, 0, 53, 0, 20], [0, 2, 0, 15, 1, 11, 31, 7, 11, 28, 0, 17, 0, 2, 0, 3], [1, 0, 1, 0, 1, 14, 38, 0, 0, 2, 7, 1, 0, 6, 0, 3, 7, 5, 3, 15, 1, 6, 0, 9, 0, 11], [14, 25, 0, 1, 2, 8, 0, 30, 0, 6, 40, 9], [0, 0, 0, 0, 0, 2, 13, 0, 0, 0, 3, 0, 4, 0, 1, 17, 0, 6, 22, 0, 32, 0, 7, 0, 29], [0, 5, 0, 0, 4, 9, 81, 0, 0, 3, 0, 3, 2, 12, 0, 10, 8, 1], [0, 0, 0, 3, 0, 10, 0, 6, 4, 0, 0, 0, 23, 18, 10, 12, 36, 0, 18, 0, 1], [0, 0, 4, 3, 24, 0, 0, 2, 4, 2, 0, 5, 0, 1, 11, 10, 14, 34, 1, 9, 0, 4, 0, 15], [9, 2, 38, 0, 25, 0, 7, 0, 67], [1, 7, 0, 0, 1, 3, 15, 0, 0, 2, 1, 0, 20, 0, 3, 12, 8, 4, 14, 0, 13, 0, 5, 0, 41], [0, 0, 18, 0, 0, 0, 0, 0, 7, 0, 3, 4, 6, 14, 33, 0, 46, 0, 23, 0, 3], [1, 0, 0, 1, 9, 23, 0, 2, 0, 2, 0, 8, 0, 3, 13, 17, 11, 29, 0, 23, 0, 17, 0, 2], [2, 0, 3, 2, 6, 17, 0, 0, 1, 5, 2, 0, 3, 0, 4, 6, 10, 8, 24, 0, 6, 0, 3, 68], [0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 38, 0, 1, 15, 8, 16, 0, 10, 0, 31, 0, 49], [1, 2, 0, 5, 0, 10, 45, 37, 6, 47, 0, 14, 0, 11, 0, 0], [0, 0, 0, 0, 1, 2, 16, 0, 0, 1, 0, 9, 0, 8, 0, 6, 19, 41, 11, 16, 0, 18, 0, 14, 0, 21], [0, 0, 0, 0, 0, 2, 20, 0, 0, 0, 1, 11, 0, 8, 0, 1, 24, 9, 12, 33, 4, 10, 0, 3, 49], [0, 2, 1, 2, 15, 33, 0, 0, 0, 10, 0, 0, 8, 0, 10, 21, 5, 8, 4, 1, 5, 0, 16, 5, 49], [1, 1, 0, 0, 5, 12, 44, 0, 0, 2, 4, 0, 0, 5, 0, 15, 23, 4, 15, 18, 8, 10, 0, 9, 0, 22], [13, 0, 0, 2, 11, 1, 0, 0, 10, 2, 0, 19, 0, 4, 5, 16, 28, 38, 6, 9, 0, 42, 0, 0], [1, 0, 0, 0, 20, 20, 0, 0, 1, 4, 1, 0, 10, 0, 1, 11, 15, 13, 64, 2, 31, 0, 18], [0, 0, 0, 0, 8, 18, 0, 0, 0, 0, 0, 0, 13, 0, 0, 10, 5, 15, 32, 1, 49, 1, 46, 0, 36], [0, 1, 0, 0, 4, 9, 28, 0, 0, 3, 12, 4, 0, 7, 0, 0, 22, 30, 24, 0, 106, 0, 7, 0, 15], [1, 0, 0, 0, 5, 25, 0, 0, 2, 3, 2, 0, 15, 0, 4, 18, 8, 19, 72, 1, 18, 0, 17, 0, 71], [1, 0, 0, 0, 2, 8, 29, 0, 0, 0, 2, 0, 0, 2, 0, 14, 2, 11, 5, 65, 25, 7, 0, 18, 0, 94], [1, 0, 0, 0, 0, 2, 16, 0, 0, 0, 3, 0, 0, 23, 0, 3, 19, 51, 49, 75, 0, 18, 0, 1, 0, 37], [0, 0, 0, 0, 5, 10, 28, 0, 0, 3, 9, 2, 0, 10, 0, 10, 20, 41, 42, 44, 8, 19, 0, 33, 0, 79], [0, 4, 0, 1, 2, 37, 57, 0, 4, 0, 3, 3, 0, 12, 0, 8, 28, 22, 34, 46, 2, 37, 4, 19, 3, 76], [2, 0, 0, 0, 0, 3, 8, 0, 5, 10, 8, 0, 20, 0, 12, 33, 44, 18, 97, 0, 62, 0, 13, 0, 96], [0, 2, 0, 1, 1, 15, 50, 0, 3, 26, 2, 0, 10, 0, 6, 41, 48, 49, 80, 6, 18, 1, 47, 0, 92]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

