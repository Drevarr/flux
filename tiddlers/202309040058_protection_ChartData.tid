created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Zatcha Wildbloom", "Nose Llama", "Drevarr Moonwillow", "Flick Embermage", "Kosair", "Gestern Yesteryear"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Tempest", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[64.7722, 0.0, 19.5789, 0.0, 88.7194, 12.5798, 91.1118, 120.9277, 0.0], [43.6627, 25.5653, 296.0846, 41.818, 30.9565, 35.4586, 151.657, 43.4918, 23.5162, 16.5785, 7.0349, 14.9925, 11.4685, 13.305, 114.6031, 28.1808, 5.5078, 26.7357, 45.2715, 33.2058], [0.0, 3.084, 3.933, 26.8747, 14.9117, 23.0051, 22.8334, 11.6055, 11.9687, 49.2652, 30.569, 17.862, 12.0837, 8.7969, 0.0, 3.0107, 20.7852, 77.2609, 29.4082, 12.0416, 9.7286, 23.7864, 0.0, 0.0, 0.0, 9.995, 0.0, 52.4702, 9.9991, 85.2533, 252.0461, 91.6834, 17.1309, 28.9029, 179.0144, 55.44], [4.631, 90.3458, 19.971, 49.4978, 95.2444, 21.896, 100.116, 0.0, 67.8263, 0.0, 5.06, 57.5326, 291.2712, 76.1368, 52.5365, 53.2397, 185.13, 53.424, 0.0, 48.937, 77.4801, 72.266], [134.5054, 89.376, 127.643, 135.0304, 65.304, 46.2962, 369.0116, 195.965, 118.206, 81.2113, 158.5075, 39.6528, 90.6954, 20.6678, 444.6411, 180.7597, 86.0179, 157.6973, 126.2998, 198.5894, 33.7218, 67.0243], [20.7755, 20.7048, 19.7087, 191.4921, 135.371, 85.3687, 88.9843, 124.5105, 164.396, 321.9784, 83.846, 116.814, 95.9646, 169.7823, 8.6614, 130.2039, 220.4635, 896.3995, 169.4053, 192.1159, 194.0544, 373.3268, 168.887, 106.071, 60.8358, 81.8577, 58.0727, 157.3826, 30.2957, 161.1847, 307.8238, 148.1818, 0.0, 81.0189, 188.244, 51.3184]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

