created: 20230419215809000
creator: Drevarr
modified: 20230705163526004
modifier: drevarr
tags: ChartData
title: 202304192158_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Declan To", "Bagera Flametalon", "Tegan Parker", "Venomina The Siren", "Mac Chiato", "Abigail Ryn", "Zadie Miststep", "Miphest\u00f6"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.0288, 75.8397, 0.0, 19.8372, 35.7322, 0.0, 19.9769, 19.8686], [15.9152, 0.0, 31.9877, 29.9315, 22.896, 12.3079, 14.7168, 60.0799, 15.9544, 20.0645, 39.8362, 0.0, 23.8722, 11.9962], [0.0, 79.9762, 39.8179, 78.0749, 60.2171, 59.2861, 17.7341, 0.0, 15.995, 20.1052, 0.0, 73.776, 116.6864, 29.1648, 59.6359, 19.8352, 18.9277, 19.8634, 19.9506, 19.9027], [36.722, 117.0893, 39.889, 135.7824, 73.3814, 3.9979, 51.3265, 0.0, 80.2306, 18.1481, 100.1064, 71.2713, 39.8496, 116.6822, 108.339, 0.0, 16.0877, 0.0, 32.4262, 39.5669], [14.5738, 169.0128, 39.6048, 146.3904, 60.0867, 117.402, 58.3747, 0.0, 0.0, 60.173, 60.121, 90.6936, 136.8179, 56.9856, 86.7903, 154.0462, 39.9585, 63.2563, 0.0, 49.7448, 19.8686], [25.5892, 20.0549, 217.103, 27.1728, 258.623, 58.1316, 59.1886, 88.2725, 0.0, 39.9357, 20.1052, 40.0233, 162.4344, 125.3687, 78.7584, 67.1089, 126.8806, 39.9585, 59.9184, 0.0, 0.0, 19.8346], [40.0299, 193.7549, 56.7965, 270.504, 77.4871, 108.7237, 75.4267, 0.0, 0.0, 54.3743, 39.9947, 137.6304, 77.8546, 31.9872, 84.4966, 110.2794, 59.7388, 50.1782, 20.1025, 34.5582, 39.3624], [20.0389, 323.9122, 74.2368, 237.8314, 72.5994, 146.5575, 70.709, 0.0, 12.0027, 94.1094, 39.9408, 149.6029, 96.0288, 170.399, 61.7694, 79.8034, 132.8602, 19.9962, 19.6874, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

