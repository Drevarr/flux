created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Charr Surethang", "Serene Azura", "Aloe Pen", "Zatcha Wildbloom", "Serosh Loux", "Gamora Titus", "Kosair", "Gestern Yesteryear"];
const professions = ["Berserker", "Berserker", "Dragonhunter", "Vindicator", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.8976, 1.3843, 0.0, 1.3773, 1.1457, 1.1834, 0.0, 0.0, 1.0098, 1.836, 1.368, 0.0, 0.9701, 1.0226, 0.0448], [0.9988, 0.0, 0.0, 1.0937, 0.0, 0.0, 0.0, 0.994, 0.996, 0.7567, 0.0, 0.0, 0.9209, 1.195, 1.5222, 0.0, 0.0, 1.5206, 0.8228, 0.0, 0.0, 0.8037, 0.9874], [0.0, 1.1968, 0.0, 1.4574, 0.0, 1.1286, 1.5536, 0.7249, 1.1594, 0.0, 2.7907, 0.0, 1.7613, 3.0544, 0.0], [1.8227, 1.445, 1.1471, 0.2649, 0.1492, 0.9537, 6.8299, 0.0, 0.0, 0.0, 2.0717, 0.4614], [1.7983, 0.0, 2.7863, 0.0, 4.031, 0.0582, 2.9034, 5.0995, 0.5242], [2.0019, 1.4621, 1.3431, 1.3104, 2.1812, 1.683, 4.0392, 2.2435, 1.1648, 1.5205, 3.7848, 1.671], [5.2116, 4.3718, 4.5628, 5.3222, 1.911, 1.3363, 6.6519, 3.6881, 2.9901, 0.3903, 3.0948, 3.7822, 1.4957, 0.0, 3.6189, 3.3333, 0.9408], [8.4665, 6.4982, 4.8454, 6.7351, 4.3425, 3.9514, 15.562, 4.025, 3.612, 5.5789, 8.378, 3.3022, 5.5812, 4.7695, 20.6934, 9.0991, 4.8015, 7.8797, 4.301, 2.8224, 1.4112, 5.3434], [0.1558, 0.0, 0.4554, 5.4013, 5.9338, 4.6042, 7.3433, 5.202, 9.3845, 9.5728, 4.522, 4.284, 6.8056, 6.7024, 1.4498, 5.5761, 7.5117, 12.5888, 6.5438, 5.4382, 6.5664, 12.155, 8.1312, 1.4112, 6.8506, 4.5914, 3.797, 3.1574, 0.1492, 6.9657, 0.0, 5.7274, 0.0, 4.7266, 6.1486, 4.2157]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

