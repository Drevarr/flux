created: 20230531221142000
creator: Drevarr
modified: 20230705163532575
modifier: drevarr
tags: ChartData
title: 202305312211_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Brace Stonebrow", "Eibh\u00ebar", "Primal Clone", "Black Raspberry Pie", "Ryvalia Fazebringer", "Gavann", "Sygaldry Verdandi", "Miphest\u00f6", "Sub Train", "Zayde Sunsabre", "Crusader Siolith", "Koralia Danai", "Jeckyll Mbs", "Blanco Padre Guard", "Bella Sassy", "Xanvias Einzbern", "Tika Fiery", "Solus Sanctus", "Grasszanine", "Newtype Khan"];
const professions = ["Spellbreaker", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[44.688, 0.0, 0.0, 47.508, 341.3375, 0.0, 0.0, 0.0, 102.1632, 0.0, 0.0], [244.2199, 7.1318, 7.4833, 59.496, 75.905, 69.1182, 76.9202, 113.4185, 120.8977, 5.6038, 16.8241], [144.534, 60.1771, 5.616, 314.3605, 88.2588, 6.1673, 12.6675, 23.7984, 40.42, 27.1651, 22.3062, 47.9362, 51.8903, 6.8147, 3.3755], [151.827, 60.9922, 11.2752, 343.929, 88.7057, 10.7104, 6.221, 25.308, 39.245, 24.9951, 20.398, 63.418, 33.8298, 4.7027, 0.0], [154.8105, 75.7987, 10.584, 339.2603, 96.973, 6.4211, 15.8682, 23.3544, 34.31, 26.9239, 21.3192, 49.8858, 57.2815, 7.0682, 2.3039], [173.706, 79.6022, 12.1392, 307.3574, 94.2917, 18.1975, 15.0116, 24.0648, 65.095, 22.6643, 25.2672, 54.0143, 39.221, 8.6451, 5.358], [188.6235, 89.6544, 6.3504, 343.1509, 88.0354, 0.0, 13.6592, 18.7368, 28.905, 37.6132, 25.5304, 70.4135, 74.9377, 27.8784, 0.0], [179.673, 57.0528, 14.9904, 389.8381, 92.951, 3.7816, 15.5526, 29.2152, 61.6875, 38.7383, 42.0462, 59.7483, 46.4991, 0.0], [201.2205, 57.5962, 16.7184, 405.4005, 89.5994, 6.1927, 10.0979, 44.4888, 54.52, 41.712, 21.3192, 54.2436, 51.6207, 0.0], [228.735, 79.8739, 32.0112, 444.3065, 125.7967, 8.5531, 22.4949, 32.3232, 65.8, 46.052, 34.3476], [210.5025, 99.9782, 0.0, 496.4406, 102.559, 0.0, 16.0034, 37.8288, 86.1275, 0.0, 45.073, 33.0278, 56.0685, 0.0, 0.0], [311.9415, 92.507, 4.1904, 420.1848, 84.9072, 7.7663, 15.5075, 37.5624, 50.1725, 38.1758, 20.6612, 56.6519, 44.3426, 4.055, 0.0], [296.0295, 87.6168, 25.3152, 585.9244, 91.1635, 9.9743, 15.9132, 25.6632, 148.1675, 0.0, 2.1565, 11.1795, 21.3784], [89.8365, 92.2354, 33.1344, 549.3527, 155.9611, 18.0706, 14.065, 49.9056, 73.4375, 0.0, 17.8976, 125.0012, 199.6092, 27.9629, 0.0], [309.9525, 126.0595, 7.9488, 693.3049, 139.65, 7.7663, 38.6786, 30.9024, 122.5525, 90.577, 39.9406, 97.5927, 176.1575, 27.0899, 29.9512], [440.895, 105.276, 41.2128, 786.6793, 161.7706, 10.9134, 43.9981, 44.1336, 127.9575, 50.3116, 46.2574, 100.4597, 64.6944, 6.1107, 41.4709], [527.748, 221.6909, 62.0784, 852.0414, 283.0985, 45.2018, 0.0, 32.0568, 124.4325, 61.8849, 54.8114, 153.4418, 248.13, 31.9053, 25.6112], [587.0865, 152.1408, 40.824, 1158.6207, 279.3, 9.9236, 27.9045, 68.1984, 228.185, 122.082, 37.9666, 143.1206, 151.4927, 14.784, 28.826], [625.209, 156.8952, 89.7696, 1146.1708, 341.8632, 29.4916, 38.1377, 132.1344, 290.225, 153.9086, 103.635, 114.336, 272.3904, 17.2339, 49.3472], [672.6135, 445.2835, 48.5136, 1173.405, 659.148, 0.0, 72.5337, 45.1992, 334.17, 0.0, 197.5974, 261.9291, 378.0579, 0.0, 0.0], [929.1945, 412.0027, 33.264, 1686.186, 440.6237, 65.2774, 34.8018, 161.5272, 232.415, 58.1075, 221.9434, 168.0062, 474.9647, 36.5798, 13.9308]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

