created: 20230318001239000
creator: Drevarr
modified: 20230705163522330
modifier: drevarr
tags: ChartData
title: 202303180012_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Seren Nightroad", "Lucky Leipreach\u00e1n", "Primal Clone", "Newtype Khan", "Morton Saltbringer", "Xanvias Tseli", "Kmpek", "Arcanophage Farra", "F\u00f4xy Lat\u00eena", "King Squid", "Whose Guardian", "Grasszanine", "Solus Dominus", "Zadie Miststep", "Khailerian", "Ark Darkness", "Aronorf Xideliesi", "Eibh\u00ebar", "Jupi Jupi Jupi", "Viral Marketing", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Xyntharos", "Zaylen Harker", "Venomina The Siren", "Sumatra Satyricon", "Arriasa", "Hauzzy", "Abigail Ryn", "Air One Com", "Mac Chiato", "Fribble Bibble", "Koralia Danai", "Tegan Parker", "Sygaldry Verdandi", "Bella Sassy", "Nazhul Naxxremis", "\u00c1rkantor", "Zefirokai", "Blanco Padre Guard", "Cat Wigglebooty", "Cafe De Paris", "Sister Elonith", "Rozaalyna", "Aribel Darkbringer", "So\u00f3h", "Vopiscus Zergherdus", "Mistwalker Caelon", "Evlchirp"];
const professions = ["Chronomancer", "Scourge", "Scrapper", "Chronomancer", "Spellbreaker", "Chronomancer", "Berserker", "Vindicator", "Spellbreaker", "Scourge", "Reaper", "Firebrand", "Spellbreaker", "Vindicator", "Tempest", "Herald", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Vindicator", "Firebrand", "Tempest", "Soulbeast", "Druid", "Spellbreaker", "Tempest", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scourge", "Vindicator", "Tempest", "Firebrand", "Scrapper", "Reaper", "Berserker", "Scourge", "Scourge", "Daredevil", "Scrapper", "Vindicator", "Necromancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[105.8853, 0.2308, 71.5993, 720.6871, 177.0, 4.7083, 6.5625, 71.3258, 79.8125, 81.3889, 78.26, 62.7778, 648.4682, 40.5574, 0.0, 46.4752, 153.1585, 157.4359, 27.28, 56.0364, 335.8571, 167.1389, 225.5295], [112.912, 0.0488, 124.0803, 680.8623, 445.6923, 11.1852, 32.475, 132.4235, 5009.3125, 29.2642, 69.2941, 0.36, 619.0912, 248.7381, 24.8254, 62.4019, 138.5556, 106.1622, 54.6316, 13.2545, 226.8571, 65.4135, 410.9863], [862.6923, 24.15, 205.5152, 515.9245, 252.1429, 52.6364, 22.617, 74.7949, 8041.2, 51.1509, 727.0, 483.4259, 69.5196, 139.9524, 99.6794, 105.1685, 134.24, 27.3784, 120.3929, 398.9118, 274.2982, 391.2364], [78.3251, 2.7368, 137.7258, 725.0636, 97.875, 19.2553, 1.4444, 56.4925, 67.6526, 333.4909, 207.2979, 124.4, 549.4136, 54.4634, 96.541, 0.0, 67.9659, 141.3485, 27.6533, 90.0222, 259.9524, 93.62, 265.3095], [111.6714, 14.925, 86.4467, 567.5543, 195.4, 32.8148, 6.7561, 54.7857, 350.5915, 146.2264, 114.0392, 24.3871, 684.8336, 43.3279, 14.0339, 13.8429, 93.9432, 30.8493, 8.6974, 41.807, 88.5455, 1.6607, 0.0, 187.0526], [127.5911, 8.8636, 116.2767, 447.576, 42.1053, 4.9048, 55.1042, 66.3654, 224.14, 424.3958, 641.3788, 131.2597, 17.5846, 0.0, 97.6395, 75.9577, 29.2597, 134.6034, 38.2105, 53.5354, 213.5479], [65.979, 0.0, 105.9635, 685.5709, 142.7037, 0.0, 139.7907, 3942.2, 211.4107, 154.1373, 427.8491, 109.0133, 17.9153, 102.6071, 347.8372, 104.4595, 42.9351, 162.88, 161.6333, 28.2755, 201.4715], [164.3497, 39.2, 120.72, 689.3843, 258.5455, 10.9792, 467.6, 84.5465, 106.4697, 132.3889, 67.4902, 478.4467, 303.297, 62.1406, 0.0, 264.6517, 957.1579, 27.7273, 178.7692, 364.8571, 0.0, 279.2194], [779.6667, 11140.875, 100.7719, 229.7692, 212.9333, 723.6065, 288.2, 13.9701, 12.013, 56.1724, 123.5373, 77.08, 205.3571, 688.0, 60.3426, 264.4384], [163.4804, 0.25, 142.7057, 592.1031, 67.6296, 90.74, 0.0, 95.0, 122.3382, 197.3571, 169.5192, 0.0, 468.0449, 350.4533, 16.8226, 5.9927, 67.4138, 179.7403, 18.8158, 156.18, 106.0588, 270.697, 263.4579], [2770.1667, 17.8372, 178.6024, 26.9516, 63.0, 190.0408, 0.0, 721.0593, 273.951, 196.28, 13.4933, 169.3929, 0.0, 28.7143, 71.5417, 491.6689], [107.2908, 16.2, 41.0635, 550.0117, 165.0455, 81.6977, 0.0, 45.0909, 1743.7778, 58.1667, 38.15, 3.5556, 686.2548, 17.3333, 0.0, 0.0, 0.0, 54.9367, 1.125, 137.2093, 36.7647, 0.0, 155.4714], [145.1272, 0.0, 101.1561, 565.9864, 355.64, 171.2857, 51.6744, 208.3684, 21.4632, 94.3571, 153.9615, 12.3125, 446.5376, 94.0976, 0.0, 0.0, 128.3793, 133.04, 23.8551, 74.8305, 16.9474, 14.4545, 5.9519, 224.8653], [39.7228, 6.25, 38.7867, 511.2067, 176.0952, 92.475, 2.0244, 28.9545, 1802.3529, 54.6481, 52.0769, 51.2812, 444.781, 1521.9231, 0.0, 8.6061, 18.5595, 94.9577, 7.2078, 91.2453, 68.4118, 12.5102, 138.7318], [63.2842, 0.3902, 97.7608, 431.0691, 182.3043, 59.9286, 4.6591, 0.0, 4.0984, 120.5893, 107.6667, 0.0, 640.972, 60.3167, 0.0, 55.3066, 44.3146, 101.1538, 68.1538, 79.68, 267.6, 125.6667, 7.8585, 148.9174], [100.1923, 0.0, 130.612, 554.185, 192.5385, 44.4821, 24.2903, 9.1667, 230.4787, 32.8929, 169.68, 0.0, 351.9182, 2874.4286, 14.1475, 16.4096, 250.2, 64.2329, 55.037, 161.12, 32.2828, 198.8082], [97.3852, 17.6923, 27.1167, 702.8689, 149.3333, 26.2979, 0.0, 33.2529, 295.6197, 669.2007, 3.2241, 0.0, 17.9762], [79.4362, 10.3421, 35.0861, 480.2723, 196.4286, 78.4151, 0.0, 53.2254, 299.7083, 71.1837, 325.1754, 402.5655, 58.5306, 252.5616, 5.1833, 42.4205, 120.6923, 41.3855, 18.8478, 43.5, 347.4259, 5.1524, 187.0682], [117.8217, 14.3, 56.8361, 503.2299, 260.28, 16.7843, 0.0, 103.5568, 116.25, 257.7321, 77.6863, 0.0, 511.6171, 20.549, 1.0317, 0.0, 24.4, 127.3973, 15.2329, 178.8226, 68.4091, 80.1607, 9.1204, 118.7084], [27.6502, 0.3902, 57.8615, 451.2175, 154.08, 181.95, 28.2759, 130.0127, 6008.75, 221.5, 70.24, 451.0864, 65.9333, 0.0, 0.0, 99.7073, 38.3867, 0.0, 61.3208, 0.0, 8.8627, 13.9667, 101.2041], [44.6726, 8.3333, 63.7733, 491.1293, 163.9583, 21.04, 2.8636, 53.4103, 33.8427, 33.9298, 49.9167, 82.9697, 492.6849, 40.8305, 24.0, 0.0, 47.5455, 44.4667, 12.3377, 121.3617, 271.4, 117.18, 144.1781], [95.1777, 7.125, 58.4636, 466.3469, 228.84, 24.1964, 20.8723, 113.9101, 389.2533, 127.0893, 50.5882, 18.8, 437.5361, 28.2297, 34.0806, 8.0972, 20.0337, 28.5789, 8.7792, 99.38, 0.0, 4.614, 9.4177, 140.2295], [126.0244, 9.175, 19.0331, 541.9482, 186.7407, 79.7708, 50.26, 57.7532, 218.0, 93.8571, 179.3077, 82.6226, 367.4975, 177.6373, 55.0, 0.0, 34.093, 66.7821, 11.1795, 165.8548, 13.4211, 8.4737, 16.3679, 191.0799], [92.4021, 4.8108, 60.3624, 471.5463, 319.4, 20.0571, 0.0, 38.5641, 49.4754, 5.6981, 31.3654, 0.0, 483.187, 7.8642, 0.0, 0.0, 50.8046, 91.1549, 18.3182, 115.25, 56.3182, 0.0, 0.0, 182.3402], [38.8834, 0.05, 19.7867, 1199.7984, 50.7547, 0.0, 2252.6429, 285.2206, 28.0385, 60.28, 0.0, 217.1421, 85.5167, 4.1452, 0.0, 55.2024, 16.6364, 212.32, 0.0, 0.0, 0.0, 7.8767, 92.1487], [179.9858, 86.5216, 79.848, 107.5278, 7339.0, 186.0, 109.2653, 224.2174, 515.5976, 119.9, 10.9365, 0.0, 86.4568, 171.5152, 62.1618, 83.8605, 171.8837, 60.3868, 141.9591], [193.6421, 127.5623, 150.1868, 329.7368, 88.9783, 0.0, 30.3412, 1918.9615, 76.9615, 211.2857, 0.0, 313.1612, 42.3012, 2.4074, 0.0, 144.8475, 91.0267, 47.2083, 15.1695, 247.5833, 391.2763], [9.0732, 82.4291, 125.0607, 242.7083, 120.3958, 18.2791, 38.4096, 0.0, 62.6415, 89.8571, 0.0, 567.5913, 4437.3125, 0.0, 0.0, 137.3765, 80.7763, 13.72, 134.6304, 45.7358, 162.3737, 229.5378], [159.0601, 0.0526, 145.4548, 549.7427, 316.9167, 102.6071, 0.0, 135.7792, 6.2909, 120.8929, 147.2549, 391.3635, 399.1077, 4.5238, 0.0, 162.1124, 93.5306], [44.507, 0.0, 79.4783, 389.6591, 148.6667, 65.1964, 28.8261, 28.7206, 135.0737, 60.5, 9.5208, 0.0, 354.8109, 44.0, 25.3387, 0.0, 97.7778, 58.3117, 3.5974, 117.5417, 167.2609, 55.5185, 143.6164], [153.8256, 62.6107, 816.6158, 25.1667, 0.0, 13.1447, 0.0, 108.6415, 104.8542, 0.0, 403.7088, 25.9706, 2.2581, 0.0, 6.0909, 265.5375, 0.0, 79.7636, 19.9259, 54.8679, 134.6073], [76.2947, 32.7097, 86.7041, 35.1455, 128.66, 217.0526, 46.5747, 58.9434, 32.8723, 116.1731, 408.0675, 38.1765, 54.7273, 152.7126, 109.3067, 16.2208, 277.7, 72.2188, 79.3056, 235.5753], [60.3737, 23.5897, 99.1405, 66.9839, 131.0769, 68.0208, 364.6957, 56.375, 0.0, 2.0, 68.8298, 543.0659, 86.0323, 8.2787, 1.3, 86.1585, 85.3026, 0.0, 50.3455, 11.7, 0.0, 32.0345, 156.8558], [48.0749, 5.1053, 50.8629, 493.5578, 162.2917, 47.2642, 2.625, 28.1842, 338.3239, 22.7719, 51.8367, 9.6923, 331.204, 24.0588, 9.1091, 0.0, 27.6279, 33.1974, 12.7763, 0.0, 21.5897, 78.3981, 112.3404], [0.0, 103.7292, 640.2414, 69.9877, 8.8689, 51.1228, 102.9765, 95.3333, 25.8026, 94.5652, 511.0, 0.0, 122.0092], [44.1937, 0.0, 15.67, 504.9789, 194.25, 145.0545, 4.7727, 62.1186, 106.6, 84.9, 14.8936, 307.4316, 12.9118, 0.0, 0.0, 26.6173, 88.4156, 4.1447, 61.0417, 15.7143, 69.3962, 135.3034], [2507.375, 26.7818, 90.1176, 46.2258, 442.7679, 45.9138, 4.0, 0.0, 15.1954, 156.5493, 0.0, 97.12, 0.0, 0.0, 8.1264, 115.4318], [166.3486, 60.2737, 885.1065, 120.3704, 94.7692, 2.9545, 106.4382, 248.2143, 157.7407, 123.1321, 0.0], [17.7263, 14.878, 35.8837, 344.8939, 54.28, 47.4821, 0.0, 4.4079, 31.4706, 8.3455, 12.1765, 77.1364, 201.2492, 241.6961, 0.0, 0.0, 103.191, 46.1549, 6.4255, 24.95, 111.9341], [0.0, 413.8956, 590.4146, 161.1818], [482.6403, 13.3373, 4.7778, 0.0, 24.7907, 83.9467, 5.36, 107.2609, 0.0, 47.2, 54.814, 176.8539], [86.6549, 87.6367, 481.0952, 178.3, 50.9149, 7.5116], [0.0, 0.0, 8.5789, 28.3103, 18.1351, 575.5835], [15.2698, 2.4074, 110.9651, 515.5522, 10.5974, 172.5263, 0.0, 387.0, 871.4918, 185.067], [187.8638, 33.5641, 334.9369], [244.8571], [164.4022], [97.8282], [90.8979], [35.0309]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

