created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Cat Wigglebooty", "Newtype Khan", "Mort\u00e4rion", "Mielikki Embla", "Glorious Gluvs", "Tribal S", "Lord Erin The Wise", "K\u00e2fkaa", "Tootsie Pop Rocks", "Zanos Engine", "Zaedy Zae", "Klengah", "Mistwalker Cael", "Etchery Howls", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scrapper", "Spellbreaker", "Scrapper", "Druid", "Berserker", "Druid", "Weaver", "Weaver", "Scrapper", "Scrapper", "Druid", "Druid", "Herald", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 77.2379, 89.3071, 0.0, 50.8019, 63.6178, 91.2411, 0.0, 0.0, 0.0], [88.3737, 29.3436, 126.4323, 0.0, 40.883, 48.2357, 0.0, 66.0974, 97.8736, 33.84, 0.0, 10.2212], [85.8177, 39.7386, 203.2868, 0.0, 0.0, 0.0, 35.9197, 87.4373, 31.3748, 63.0444, 135.7259, 58.1202, 0.0, 0.0, 0.0], [89.0127, 59.6673, 275.5093, 23.1004, 37.3102, 11.3584, 57.8408, 25.7771, 26.2605, 39.8722, 56.8964, 77.7474], [169.5906, 117.3744, 518.7672, 0.0], [34.1865, 82.566, 76.1682, 0.0, 0.0, 0.0, 65.9735, 163.2994, 0.0, 167.4265, 74.5844, 125.208, 0.0, 47.645], [0.0, 750.3597, 69.7717, 26.3934], [115.7868, 81.972, 336.0664, 47.212, 21.8074, 45.034, 47.4138, 12.0884, 54.7403, 149.5815, 81.1737, 3.9917, 19.0061, 0.0], [136.6182, 97.2378, 400.0546, 43.5537, 65.5864, 38.4485, 59.0794, 113.3924, 39.1583, 87.1326, 146.5746, 83.3733, 26.8789, 4.554], [224.6724, 63.8253, 332.1208, 36.4426, 132.1605, 76.7237, 210.0008, 24.2285, 107.7404, 115.3847, 96.9516, 31.9505, 0.0], [292.3425, 100.9206, 530.6042, 52.5722, 77.3256, 24.5358, 83.8282, 195.3538, 71.2391, 132.8666, 263.3743, 93.483, 39.0298, 24.3673, 23.6606], [249.4017, 119.8692, 591.676, 20.1609, 63.4938, 31.3277, 72.4937, 198.7818, 106.6607, 90.2162, 316.4383, 137.1789, 45.932, 15.6492, 37.2011], [222.5637, 152.658, 807.3143, 43.6768, 61.248, 69.0408, 61.206, 131.2895, 135.2803, 118.548, 213.2583, 137.052, 33.3887, 39.9924, 68.0266], [378.2241, 172.9134, 879.3653, 201.0088, 339.467, 69.4471, 107.5487, 193.2168, 46.6318, 180.7987, 288.7271, 128.2113, 11.2543, 85.491, 58.4329], [553.0545, 242.2926, 1031.0155, 28.7639, 163.0218, 201.2391, 358.6976, 84.9463, 145.7502, 423.3328, 331.3359, 56.5349, 24.9952, 0.0], [627.8175, 229.0167, 1468.2965, 96.326, 230.1904, 164.6685, 219.2573, 323.2597, 218.3668, 318.1226, 478.991, 422.577, 248.4266, 126.0147, 27.1317]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

