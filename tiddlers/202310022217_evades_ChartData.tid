created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Aira Draugr", "Divine Mimine", "Tootsie Pop Rocks", "L\u00e4n\u00e7e", "Morton Saltbringer", "Lucky Leipreach\u00e1n", "Crystal Shadowmist", "Lady Sherena", "Gollum Mah Precious", "Bella Bitty", "Tegan Parker", "Bryxzi", "Rina Of Theros", "Sub Train", "\u00c7onstant\u00edne", "Tribal S", "Adjudicatrix Farra", "Black Raspberry Pie", "Kosair", "Halfpint The Drunk", "High Sorcer Baradun", "Klenga", "Venomina The Sly", "Newtype Khan", "Cat Wigglebooty", "Daphne Agla\u00e9", "Swithblight", "Solus Luxes", "Rozaalyna", "Astraeus Windrunner", "Elonith Requiem", "Lord Erin The Wise", "Drevarr Moonwillow", "Crusader Siolith", "Heres A Quarter", "Be\u00eb", "Zaedy Zae", "Jimbo The Pleb", "Eibh\u00ebar", "Liyo Morgaine", "Grasszanine", "No Reserv\u00e9", "Xanvias Tseli", "Ryvalia Fazebringer", "Mistwalker Cael", "Glorious Gluvs", "Revenant Brandorf", "Mike The Archmagus", "Jmbrage Rev"];
const professions = ["Firebrand", "Herald", "Renegade", "Scrapper", "Vindicator", "Chronomancer", "Scrapper", "Herald", "Willbender", "Harbinger", "Firebrand", "Tempest", "Herald", "Reaper", "Firebrand", "Reaper", "Druid", "Reaper", "Chronomancer", "Firebrand", "Berserker", "Tempest", "Firebrand", "Druid", "Spellbreaker", "Scrapper", "Reaper", "Scourge", "Firebrand", "Reaper", "Berserker", "Reaper", "Weaver", "Scrapper", "Firebrand", "Herald", "Reaper", "Druid", "Berserker", "Chronomancer", "Herald", "Spellbreaker", "Vindicator", "Berserker", "Chronomancer", "Herald", "Berserker", "Vindicator", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 0, 0, 1, 0, 0, 25, 0, 2, 6], [2, 0, 0, 4, 0, 0, 33, 0, 3, 0], [0, 0, 0, 0, 9, 0, 0, 0, 2, 6, 0, 13, 0, 10, 0, 7, 0, 0, 0, 0, 1, 0], [3, 0, 0, 1, 0, 0, 2, 0, 0, 0, 2, 1, 0, 9, 6, 12, 0, 15, 0, 0, 0, 0, 0, 0], [27, 11, 2, 3, 4, 5], [4, 0, 1, 0, 1, 6, 0, 0, 0, 3, 8, 14, 7, 5, 1, 3, 0, 1, 0, 0, 0, 0], [1, 0, 2, 1, 5, 13, 0, 2, 27, 0, 3, 4, 0, 0, 0, 0], [0, 0, 0, 4, 0, 49, 5, 1], [58, 0, 3], [1, 0, 4, 28, 3, 16, 10], [0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 1, 3, 4, 0, 31, 2, 2, 15, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 14, 0, 0, 0, 6, 0, 17, 1, 9, 18, 0, 0, 0, 0], [0, 0, 0, 0, 19, 0, 0, 0, 3, 24, 1, 4, 9, 4, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 8, 19, 6, 3, 7, 1, 10, 0, 9, 1, 0, 0, 0], [0, 0, 0, 3, 0, 3, 0, 0, 0, 4, 0, 7, 4, 2, 5, 3, 10, 18, 12, 0, 0, 0, 1], [0, 3, 0, 0, 10, 5, 3, 0, 0, 12, 1, 1, 8, 13, 1, 9, 6, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 4, 27, 18, 3, 1, 5, 17, 0, 0, 0, 0], [0, 0, 0, 0, 0, 15, 0, 2, 0, 0, 17, 13, 11, 13, 4, 0, 9, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 10, 2, 5, 0, 0, 15, 4, 8, 0, 4, 10, 10, 11, 3, 2, 0, 0, 0], [0, 0, 1, 7, 2, 7, 9, 25, 7, 13, 3, 10, 0, 0, 2, 0], [1, 0, 0, 2, 0, 0, 12, 3, 1, 0, 2, 12, 5, 5, 12, 1, 18, 2, 0, 12, 0, 0, 0, 0], [2, 0, 0, 1, 26, 2, 2, 0, 1, 20, 3, 13, 18], [2, 1, 3, 21, 0, 4, 2, 14, 1, 22, 4, 12, 0, 0, 2], [4, 11, 6, 21, 14, 14, 3, 14, 1, 0, 0, 2, 0], [1, 2, 0, 3, 0, 9, 0, 0, 0, 2, 2, 6, 11, 20, 17, 0, 3, 12, 4, 0, 0, 0, 0], [0, 1, 4, 0, 2, 0, 0, 3, 9, 10, 2, 19, 2, 16, 25, 0, 0, 0], [0, 0, 0, 1, 0, 19, 2, 0, 0, 0, 3, 23, 10, 3, 11, 6, 9, 8], [1, 0, 0, 3, 0, 0, 18, 0, 0, 0, 1, 9, 0, 12, 6, 7, 21, 7, 0, 5, 0, 0, 0, 6], [1, 0, 0, 1, 0, 14, 0, 0, 0, 1, 2, 10, 2, 17, 22, 6, 13, 8, 1, 1, 0, 0, 1], [0, 0, 1, 0, 25, 0, 2, 0, 1, 10, 0, 25, 19, 12, 1, 7, 1, 0], [0, 0, 0, 0, 0, 19, 2, 1, 0, 1, 0, 0, 7, 13, 12, 30, 3, 7, 12, 2, 0, 0, 0], [24, 0, 0, 0, 2, 7, 16, 7, 9, 8, 7, 18, 3, 1, 2, 0, 0, 5], [0, 0, 2, 9, 1, 2, 0, 0, 23, 7, 13, 0, 4, 12, 2, 23, 6, 3, 1, 2, 0], [1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 10, 0, 8, 15, 19, 9, 5, 0, 16, 0, 0, 0, 0], [0, 0, 0, 2, 0, 12, 3, 3, 1, 3, 6, 7, 6, 28, 16, 7, 1, 8, 5, 1, 1, 2, 0], [16, 10, 19, 0, 43, 25, 5, 1], [0, 1, 0, 0, 5, 0, 0, 0, 2, 6, 7, 6, 36, 22, 2, 0, 5, 26, 0, 0, 0, 3], [0, 0, 0, 0, 6, 0, 0, 0, 6, 14, 8, 15, 19, 30, 7, 11, 0, 6, 0, 0, 0, 0], [2, 2, 0, 7, 0, 0, 25, 5, 0, 2, 6, 20, 0, 17, 0, 2, 12, 11, 7, 16], [1, 0, 1, 0, 24, 0, 4, 4, 0, 13, 12, 16, 9, 16, 5, 13, 10, 1, 0, 0, 1, 5], [22, 4, 30, 27, 20, 9, 5, 7, 14], [0, 1, 2, 18, 2, 19, 17, 31, 21, 24, 0, 1, 3, 0], [0, 0, 3, 0, 70, 8, 2, 0, 0, 13, 36, 11, 18], [3, 1, 0, 4, 0, 0, 10, 6, 1, 0, 0, 7, 15, 16, 64, 26, 6, 1, 10], [6, 0, 0, 3, 0, 30, 4, 4, 0, 0, 10, 25, 24, 13, 37, 5, 14, 10, 3, 1, 0, 0, 4], [0, 2, 0, 0, 1, 0, 51, 1, 3, 3, 4, 14, 24, 17, 18, 16, 10, 25, 6, 18, 0, 0, 0, 3], [13, 1, 0, 3, 0, 0, 47, 11, 1, 0, 1, 14, 7, 22, 25, 15, 4, 26, 6, 18, 3, 1, 7, 8], [0, 5, 0, 77, 2, 1, 0, 3, 15, 16, 6, 9, 30, 18, 24, 0, 26, 3, 1, 4], [0, 1, 0, 4, 0, 54, 1, 1, 0, 5, 29, 6, 9, 20, 20, 48, 21, 16, 17, 4, 0, 1, 1], [0, 0, 120, 0, 6, 0, 2, 32, 51, 26, 50, 50, 32, 11, 16, 6, 11, 0, 8]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

