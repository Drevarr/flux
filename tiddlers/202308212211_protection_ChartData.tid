created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Crabbedmermaid", "Darks Na", "Ganbaatar Bloodwine", "Cat Wigglebooty", "Ryvalia Fazebringer", "Tootsie Pop Rocks", "Hayuf", "Arriasa", "Tribal S", "Zaedy Zae", "Drevarr Moonwillow", "Sister Elon\u00edth", "Gavann", "Sub Train", "Rafaellagabriela", "Crusader Siolith", "Bella Sassy", "Solus Luxes", "Koralia Danai"];
const professions = ["Tempest", "Firebrand", "Dragonhunter", "Berserker", "Scrapper", "Chronomancer", "Scrapper", "Firebrand", "Druid", "Druid", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.094, 0.0, 0.0, 7.7687, 28.5365, 0.0, 0.0, 4.5531, 22.864, 13.6701, 7.6797, 0.0, 9.6122, 53.2535, 19.1109, 0.0, 21.5818, 19.2386, 0.0, 26.4311, 11.5601, 0.0, 0.0, 9.335, 0.0, 4.8081, 0.0, 4.7771, 0.0, 3.008, 19.1577, 26.3655], [183.141, 30.0037, 0.0, 63.9711, 106.1183], [15.2006, 6.791, 0.0, 35.4791, 3.4766, 0.0, 20.1353, 20.2409, 35.1086, 23.2317, 30.1941, 0.0, 30.8695, 22.9635, 20.1687, 0.0, 36.7052, 20.2858, 0.0, 27.1202, 17.273, 0.0, 10.1453, 8.2157, 17.2692, 11.0431, 0.0, 11.2518, 11.641, 11.0168, 14.5385, 63.6457], [0.0, 47.245, 53.7093, 40.7358, 0.0, 6.9406, 72.3897, 47.601, 12.9831, 28.8475, 34.4379, 0.0, 26.5296, 52.7599, 22.7542, 21.1002, 14.784, 3.4398, 20.194, 0.0, 20.8454, 16.4688, 1.9176, 31.1793, 37.3275], [26.8261, 76.4254, 10.543, 9.9636, 74.5013, 0.0, 46.8112, 5.1842, 77.369, 19.7955, 87.8634, 70.2478, 143.7953, 108.3892, 0.0, 36.7052, 34.797, 18.7514, 74.4206, 43.2832, 31.5238, 30.6029, 0.0, 20.3181, 0.0, 34.3081, 14.303, 0.8084, 20.6382, 47.6752], [26.8898, 73.8015, 0.0, 26.5985, 57.3602, 39.1691, 0.0, 40.45, 59.145, 41.9353, 56.9214, 69.1173, 0.0, 49.0195, 69.6559, 132.2955, 22.9096, 38.0507, 52.2104, 18.8605, 50.0075, 67.8149, 39.546, 34.6863, 31.2787, 0.0, 48.8565, 0.0, 28.3072, 32.712, 35.5132, 46.2212, 69.4575], [94.6401, 36.5841, 15.5974, 0.0, 119.4127, 25.9582, 104.0107, 59.0097, 70.3798, 47.2104, 129.8871, 0.0, 58.3704, 72.2803, 59.3778, 0.0, 70.7195, 0.0, 20.8592, 71.2213, 78.4341, 0.0, 53.636, 33.9398, 20.7558, 58.5347, 0.0, 54.9562, 5.2339, 13.4796, 18.7431, 90.1058], [105.0043, 21.5996, 177.6598, 46.8846, 65.521, 103.5589, 169.4364, 14.9261, 40.9607, 89.063, 68.8662, 148.834, 22.5786, 139.8776, 37.2466, 68.4132, 126.109, 130.6935], [40.4144, 38.1826, 11.0743, 54.381, 104.3784, 18.2677, 57.4047, 51.2109, 109.4436, 124.3755, 91.4409, 0.0, 37.8391, 132.8603, 133.0007, 0.0, 52.0439, 88.4734, 64.9759, 109.7606, 86.9025, 38.8608, 28.681, 0.0, 37.286, 0.0, 44.8888, 0.0, 14.5136, 60.7597, 99.792], [184.4816, 69.6996, 101.8049, 75.9147, 114.0489, 54.7551, 153.4986, 51.517, 104.8666, 140.9695, 12.1971, 83.3134, 2.3338, 0.0, 80.8192, 146.1145, 0.0, 73.2182, 66.3379, 0.0, 76.9916, 0.0, 60.4834, 30.6816, 2.8388, 33.4593, 98.7525], [29.2953, 51.8752, 8.3009, 47.3054, 126.882, 41.3604, 29.3692, 58.2884, 119.6836, 106.821, 172.7694, 0.0333, 50.0069, 150.7937, 226.1576, 89.7461, 98.2753, 50.7144, 56.9811, 84.117, 113.5849, 0.0, 54.2432, 50.9626, 0.0, 37.7203, 0.0, 39.5195, 54.3922, 28.012, 41.8093, 166.2255], [56.0736, 103.298, 27.365, 94.5242, 159.201, 50.5048, 0.0, 44.9388, 87.1396, 201.983, 116.3079, 130.9365, 0.0, 57.8767, 280.4828, 222.279, 66.2835, 85.7891, 75.2488, 99.5716, 95.6837, 71.3098, 62.4523, 25.0723, 30.6874, 41.4882, 53.0442, 45.0265, 70.8666, 34.7198, 8.0088, 34.6437, 91.7595], [105.7275, 262.2649, 192.8344, 131.3691, 231.9246, 273.8808, 99.5038, 105.3239, 153.0989, 67.041, 185.7788, 215.5608, 121.6435, 114.1348, 174.551, 292.5247], [264.2018, 62.2619, 118.0926, 16.0034, 238.6087, 143.1252, 127.5498, 12.5283, 43.1244, 381.7409, 238.2166, 0.0, 104.4108, 117.6754, 19.9507, 73.1409, 261.3125, 139.403, 105.7782, 110.0702, 107.5886, 69.466, 81.5755, 150.8692], [39.14, 47.8036, 15.9214, 81.2683, 249.1675, 23.7248, 0.0, 73.7438, 116.3966, 226.3099, 134.0118, 240.5988, 0.0, 165.4118, 152.2152, 260.5009, 0.0, 129.5447, 36.4126, 23.9481, 168.7754, 232.5466, 118.5558, 79.7914, 0.0, 143.9948, 7.5214, 91.5541, 47.3986, 65.236, 68.4879, 136.647], [189.7331, 116.1261, 209.3515, 161.7255, 225.144, 0.0, 117.6991, 243.3038, 332.7839, 66.3126, 189.0697, 73.6032, 64.8306, 213.3195, 249.013, 43.8656, 138.9476, 164.4403, 88.1712, 74.0137, 42.9937, 159.0649, 86.7883, 70.5564, 135.4657, 233.4622], [84.3175, 178.5774, 38.3681, 109.6862, 223.0729, 61.5033, 0.0, 142.6397, 126.0888, 235.087, 212.9697, 151.4475, 0.0, 151.4436, 211.0455, 326.7897, 59.0642, 86.8655, 72.3166, 56.0363, 143.7716, 52.2894, 11.0425, 127.1072, 47.8157, 84.4506, 148.6789, 131.4684, 136.849, 75.9708, 149.0567, 86.6565], [119.5546, 139.0074, 43.8048, 171.4894, 224.5093, 86.7031, 0.0, 122.0683, 48.8216, 265.8071, 199.2249, 132.7491, 39.7341, 139.8857, 498.0892, 234.4085, 81.0713, 148.6508, 158.5461, 135.8389, 137.7176, 246.6607, 7.6354, 94.5461, 70.0762, 50.6844, 107.9806, 41.5562, 105.8064, 67.2514, 15.134, 88.9781, 138.0172], [181.3471, 134.8152, 92.4437, 89.0948, 378.1084, 106.256, 29.9214, 178.8831, 243.0263, 245.4896, 252.6354, 265.2597, 39.934, 172.788, 265.8299, 364.4474, 47.5075, 200.8562, 95.4448, 39.974, 209.1358, 294.9175, 22.0545, 156.2781, 108.071, 1.2636, 193.4097, 3.7607, 183.582, 96.3989, 108.1188, 133.4819, 288.1778], [138.1928, 143.1092, 78.1812, 76.1277, 321.5621, 97.2802, 0.0, 168.8539, 237.1659, 232.9198, 281.4696, 280.6668, 163.7566, 326.6285, 446.6737, 109.4245, 266.8396, 125.6939, 81.1109, 296.3044, 349.9625, 21.8923, 135.2032, 165.0106, 39.663, 145.9181, 10.7012, 133.245, 143.6395, 68.2064, 143.2828, 242.7705]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

