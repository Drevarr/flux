created: 20230625212343000
creator: Drevarr
modified: 20230705163535817
modifier: drevarr
tags: ChartData
title: 202306252123_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00f4sair", "Elzy Lou", "Traidoruns Maximus", "Tuff Spuffles", "Aronorf Xideliesi", "Blancooo Padreee", "Newtype Khan", "Grasszanine", "Zayde Sunsabre"];
const professions = ["Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[52.6088, 116.983, 76.6752, 120.8678], [9.6232, 58.1581, 17.0912, 29.046, 9.6432, 0.0, 19.5657, 22.5792, 19.9278, 0.0, 20.6393, 0.0, 0.0, 26.0352, 28.199, 48.9725, 30.723, 0.0, 7.729, 21.6854, 10.3032, 16.2582, 16.5336], [64.3383, 90.6706, 21.0435, 25.897, 25.7376, 12.8698, 12.8821, 22.8614, 19.4682, 1.6443, 25.6471, 11.0826, 3.0939, 42.5779, 32.2848, 43.7683, 23.8336, 25.8408, 30.8112, 13.0213, 22.5865, 24.3422, 26.4704, 10.7611], [0.0, 0.0, 0.0, 0.0, 102.9588, 26.8961, 72.2534, 63.5589, 0.0, 81.0191, 34.1361, 64.2542, 95.4317, 79.3075, 149.2526, 108.3218, 23.5893, 84.1339, 45.7229], [17.3218, 123.1831, 24.9425, 67.492, 58.6656, 61.8258, 63.063, 70.0661, 41.2673, 59.2709, 24.7878, 42.7858, 40.2278, 54.4282, 48.4387, 87.7467, 16.269, 52.1006, 79.1683, 40.7072, 39.5136, 22.1112, 96.4816, 37.0406, 85.8789], [56.0898, 187.5073, 10.4684, 0.0, 0.0, 0.0, 10.9148, 124.3267, 67.7283, 19.745, 18.4005, 45.8797, 70.871, 17.0726, 123.9658, 63.8666, 23.7867, 77.0102, 98.1254, 30.2776, 63.9524, 32.7883, 116.7856, 16.0526, 95.7587], [20.6212, 65.025, 52.3952, 70.829, 59.2704, 79.4398, 44.8987, 172.872, 73.8018, 0.0, 74.8308, 0.0, 30.5236, 74.327, 80.329, 92.207, 78.2971, 0.0, 61.9714, 68.0198, 62.5779, 59.4248, 21.3941, 185.4432, 3.5362, 67.9846], [61.1306, 176.9968, 92.3993, 127.182, 85.7472, 151.7128, 93.3548, 173.3659, 119.4027, 0.0, 155.528, 11.7171, 45.8797, 94.464, 87.2237, 134.4408, 138.4863, 0.0, 113.1408, 155.4672, 87.6091, 105.5239, 104.5402, 225.0736, 0.0, 143.1545], [242.9641, 401.5011, 55.3328, 152.562, 52.6512, 57.5863, 51.9596, 162.2174, 105.5156, 27.3963, 136.8203, 17.8929, 51.9542, 133.5859, 90.6163, 146.9842, 95.0085, 31.8801, 94.1443, 37.5379, 72.9443, 110.4117, 76.0147, 111.8976, 48.0562, 142.5327]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

