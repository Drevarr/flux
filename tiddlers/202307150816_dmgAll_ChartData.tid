created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Alfir Strom", "Elonith Primal", "Lions Main", "Kl\u00ebpta", "Porlen", "Scythe User", "Daring Deathblade", "Bae Ken", "Ateriuz", "Kahlianne", "Legoh Brave", "Necrotic Windrunner", "Fluffy No Care Bear", "Shaca Booey", "Charr Surethang", "Avatar Sarvity", "Audra Storm"];
const professions = ["Druid", "Tempest", "Berserker", "Renegade", "Ranger", "Scourge", "Reaper", "Scourge", "Berserker", "Scourge", "Tempest", "Reaper", "Berserker", "Berserker", "Berserker", "Catalyst", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[450.9917, 22.4315, 479.4087, 164.3733, 141.2875, 78.0, 35.8557, 885.3563, 31.6471, 513.9653, 175.5862, 146.8134, 88.5694, 158.4702, 239.2184, 283.0215, 232.1731, 163.5526], [167.0702, 13.1667, 7.5357, 3.48, 54.7059, 55.1736, 4.425, 124.6356, 159.6122, 187.3636, 168.2857, 104.1875, 188.6216, 21.1228, 226.3966, 163.3492, 83.7538, 35.3371, 108.55, 201.299, 882.9835, 93.0068, 217.4087, 316.4267, 64.925, 11.9756, 35.8454, 359.3908, 48.1961, 67.4861, 211.6207, 114.0299, 260.6806, 94.5099, 88.3218], [1036.0517, 231.3968, 217.3385, 163.3708, 236.1167, 727.2577, 1561.4959, 429.3288, 1360.0609, 296.68, 49.925], [1160.6133, 251.525, 146.6829, 425.7938, 1147.2874, 621.125, 237.9828, 358.2761, 328.8194, 515.4768, 480.1149, 788.7742, 314.8077, 227.3158], [217.5102, 186.8586, 568.5, 190.1982, 269.0351, 889.1379, 768.5079, 181.7615, 576.0449, 523.5333, 939.6392, 437.124, 216.9384, 1020.087, 1056.0933, 209.925, 429.9268, 278.5773], [22.0714, 129.5789, 679.0606, 1109.3095, 2063.0488, 845.96, 1893.5647, 3.5069, 392.25, 1363.1441, 428.4286, 6.6465, 1841.4762, 570.1125, 264.4595, 876.1053], [57.619, 454.2749, 1044.5758, 872.881, 528.2683, 1440.0, 180.9583, 503.55, 1138.5254, 138.4898, 340.3838, 837.2857, 802.15, 1358.036, 870.614], [5.2857, 164.5202, 363.85, 7.9189, 498.2982, 664.7931, 578.8889, 83.6154, 222.1573, 466.7, 1045.6392, 684.8347, 542.6164, 1322.1652, 663.52, 244.625, 34.9024, 293.0722, 1107.3103, 89.2745, 1033.1319, 434.8103, 592.5373, 463.0139, 620.8742, 831.908, 979.828, 583.25, 887.8947], [308.0952, 362.9474, 677.0152, 1654.8929, 2054.1463, 1550.72, 2939.1882, 206.4653, 362.8, 2164.6695, 428.5306, 1027.9596, 517.5063, 2399.982, 3354.4912], [1034.1034, 762.2063, 485.5769, 189.2809, 726.8, 932.3196, 803.1736, 738.1233, 1144.2783, 927.4667, 1287.0125, 111.4878, 755.0412, 1137.7241, 0.0, 1198.9931, 521.9483, 730.9552, 823.3056, 680.351, 1480.4943, 97.3656, 799.9135, 2125.5526], [271.5347, 222.275, 500.0932, 28.8163, 324.2172, 582.2857, 676.6812, 851.1802, 254.3509, 379.6379, 492.9206, 772.5846, 528.2022, 845.4, 1301.3299, 1491.7934, 897.8493, 2201.5826, 1477.48, 1516.375, 481.0825, 1776.2874], [649.2273, 514.0, 528.1951, 367.54, 666.3529, 822.5972, 490.2, 856.7119, 102.6327, 424.1414, 880.5238, 573.1125, 748.6306, 1135.4211, 635.569, 633.9841, 442.7615, 245.0225, 289.25, 498.7423, 376.7877, 1131.3652, 562.7333, 464.2, 2005.6098, 445.268, 1212.1839, 146.2353, 807.1528, 663.3966, 441.5448, 323.4861, 581.2184, 630.3011, 546.6923, 656.1053], [22.0202, 3887.8571, 1772.2687, 1610.5586, 2501.9474, 2908.7241, 2180.8889, 2040.7923, 488.382, 1631.6333, 3632.6495, 1820.2397, 1657.3904, 5869.0696, 5319.6133, 1969.9625, 118.6098, 2018.1134, 2147.3678, 3112.1961, 2913.2708, 1799.3793, 2744.6791, 938.75, 1583.8874, 3088.8621, 4297.8817, 739.6538, 2084.0263], [720.4524, 1354.6491, 1910.7576, 2479.2857, 1744.4941, 567.6111, 1938.7458, 194.2245, 0.0, 9.8095, 1299.0625, 2201.7027, 5587.9298, 1889.7586, 2482.5079, 181.9846, 328.6742, 573.1, 3760.3711, 3968.719, 3246.8699, 5291.8696, 1769.7467, 3335.5, 1311.3415, 1927.866, 2617.7356, 3748.3725, 2687.1319, 1550.2931, 2304.1194, 80.8194, 967.947], [328.0, 469.7778, 1726.9697, 1493.2024, 1990.439, 3100.78, 2672.5765, 683.2778, 0.0, 1290.2034, 140.3673, 904.3434, 11417.381, 2451.2188, 1471.6306, 4020.2281, 1556.2698, 1503.5231, 163.0674, 182.7333, 3423.8247, 4861.281, 2187.863, 4751.5826, 2725.32, 2016.625, 719.7113, 1933.2759, 0.0, 1201.8472, 0.0, 1268.6642, 149.875, 1285.2185, 4423.3793, 3159.7097, 3077.7212, 1874.6053], [1307.7381, 1171.7073, 2827.98, 3009.7412, 2710.4097, 111.85, 2919.8136, 106.3673, 1390.5909, 7185.8095, 2287.5188, 0.2793, 684.4211, 1889.1552, 2113.1905, 751.1154, 877.1573, 1417.4, 4724.9691, 4097.2314, 3090.9658, 3966.2, 3635.4, 2044.45, 35.6098, 891.3505, 2145.4828, 3.2941, 3391.9097, 139.3966, 3270.6567, 1164.7917, 1410.245, 1202.1954, 3509.5591, 3603.0577, 1858.1579], [579.6842, 3685.7424, 1640.9881, 2677.3171, 478.7, 3653.3294, 1854.1736, 906.525, 2583.2966, 1186.2929, 3220.1188, 3014.4054, 2405.6491, 2999.3276, 3210.8571, 2014.1923, 484.573, 1442.7333, 5664.3918, 5779.7934, 1886.1986, 4663.8, 3817.6933, 3417.9625, 458.122, 941.5773, 1667.9195, 2101.7222, 764.9483, 1985.8731, 1382.0833, 2992.9934, 3715.3218, 2888.9892, 2721.3269, 3103.8158]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

