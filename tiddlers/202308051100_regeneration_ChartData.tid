created: 20230805110022000
creator: Drevarr
tags: ChartData
title: 202308051100_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Sahan", "Crabbedmermaid", "Fyshles", "Brace Stonebrow", "Aronorf Xideliesi", "Tegan Parker", "Legoh Brave", "J\u00e2sm\u00eene", "Sakis Ranger", "Heals For Daddy", "Kahlyanne", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[74.9713, 1.8346, 31.2309, 25.5984, 71.3275, 23.4195, 10.7136, 26.3693, 12.2126, 134.3282, 72.8334, 65.688, 10.6964, 32.82, 79.8494, 26.3463, 0.0, 19.1174, 38.7849, 164.3575, 18.9504, 29.34, 24.6711, 8.769, 14.2241], [38.313, 84.9747, 73.361, 16.1478, 38.9837, 14.625, 93.1997, 28.417, 167.5748, 18.2664, 24.36, 19.36, 44.19, 179.0222, 131.9718, 78.1911, 18.8037, 55.2805], [162.2038, 158.3982, 192.5882, 56.4035, 290.95, 105.7366, 80.5696, 102.3673, 151.3991, 41.3899], [30.9327, 106.7888, 115.2687, 62.9591, 62.1478, 66.7699, 0.0, 15.3204, 151.8653, 12.0998, 187.3987, 118.164, 59.352, 6.4493, 127.38, 245.5805, 186.5864, 89.4863, 0.0, 61.7573, 78.1031, 0.0, 6.3355, 18.0797], [56.665, 29.994, 116.8432, 15.6702, 9.8431, 81.4558, 73.1095, 79.4614, 50.2099, 15.1834, 0.0, 0.0, 72.0922, 8.019, 173.6665, 94.944, 49.056, 8.7241, 76.05, 150.4462, 107.4674, 65.2322, 0.0, 61.3525, 98.2605, 35.9616, 194.0254, 52.725, 26.4677, 48.9737], [108.2928, 37.2099, 259.7891, 138.4838, 89.1184, 138.7465, 262.0817, 97.6672, 36.7488, 37.2, 213.313, 14.945, 440.5678], [72.0509, 16.1426, 207.0994, 144.7264, 48.7393, 13.2354, 92.9016, 278.1148, 46.2502, 218.7878, 137.835, 0.0, 57.8189, 22.4294, 60.816, 17.1094, 75.3, 211.279, 214.4542, 31.0838, 128.9102, 48.6208], [467.7496, 233.4732, 70.5953, 99.7996, 371.253, 520.0965, 147.2294, 135.4291, 42.45, 96.2237, 53.4719], [264.2458, 244.38, 0.0, 826.5802, 0.0, 667.7177, 26.016, 297.176, 298.17, 749.6237], [289.7242, 80.377, 746.4834, 0.0, 27.0598, 137.7875, 338.9899, 1320.4194, 147.0822, 80.4557, 8.835, 394.3901], [290.036, 118.3546, 71.3009, 141.2008, 241.1907, 354.9952, 54.2726, 182.7994, 104.835, 58.495, 453.6605, 35.343, 646.1385, 159.1344, 206.256, 56.1198, 124.74, 362.543, 287.247, 340.8273, 126.4851, 243.5631, 458.3006, 168.4416, 289.2044, 289.9516, 50.3197, 104.071], [981.2462, 19.1864, 72.8003, 710.1923, 1356.2396, 365.9098, 294.7277, 148.845, 724.3085, 72.9907, 1404.0968, 702.018, 425.304, 160.0467, 739.89, 606.8455, 1190.6294, 798.6348, 0.0, 374.0858]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

