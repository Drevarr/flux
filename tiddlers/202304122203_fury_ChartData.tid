created: 20230412220340000
creator: Drevarr
modified: 20230705163525378
modifier: drevarr
tags: ChartData
title: 202304122203_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal Z", "Smol Daddy Tika", "Minka Bringer", "Skye Nightroad", "Lord Erin The Wise", "Newtype Khan", "Arriasa", "Fribble Bibble", "Demon Staph", "Johoshua", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Weaver", "Berserker", "Scrapper", "Scrapper", "Weaver", "Spellbreaker", "Druid", "Scrapper", "Druid", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[302.5995, 27.295, 27.9369, 168.8589, 172.1752, 72.7023, 151.9333, 161.82, 31.878, 14.688], [76.0725, 0.0, 0.0, 93.5361, 133.2055, 63.5785, 128.5956, 0.0, 195.46, 68.6093, 0.0, 36.9101, 103.6982, 0.0, 72.7503, 0.0, 0.0, 0.0, 272.5056], [0.0, 57.387, 126.5779, 0.0, 52.3066, 62.2608, 33.5326, 270.2154, 51.6902, 49.9219, 80.0453, 483.8616], [344.6929, 38.242, 37.1449, 129.3453, 154.3436, 127.8292, 384.8342, 0.0, 164.14, 0.0, 71.4355, 60.9005, 12.0047, 153.32, 31.7923, 44.401, 37.4674, 527.7744], [230.4152, 13.4373, 28.1926, 124.4061, 137.5748, 113.1351, 302.6759, 0.0, 383.67, 47.025, 76.9651, 32.5296, 63.5558, 139.3805, 43.7692, 177.8671, 41.711, 51.6326, 20.1398, 692.3448], [573.0795, 0.0, 0.0, 59.2704, 110.178, 30.4447, 146.218, 0.0, 56.26, 0.0, 33.5539, 0.0, 0.0, 62.0515, 0.0, 449.2702, 93.865, 69.2582, 126.4637, 1479.0816], [566.8247, 35.38, 104.8414, 339.7758, 581.3571, 307.5201, 846.1114, 20.0032, 609.0, 56.826, 84.4723, 35.7144, 84.2918, 115.9934, 42.4974, 452.2396, 0.0, 79.8077, 166.2293, 1350.6264], [642.7281, 0.0, 59.3694, 421.2726, 410.4808, 259.212, 1117.1147, 1183.2, 143.22, 320.0678, 18.7361, 80.9741, 188.8229, 51.3381, 308.2237, 8.0842, 80.7926, 86.5166, 1510.272], [940.7633, 32.0004, 149.5745, 345.9498, 459.1339, 246.8228, 1023.7639, 61.8708, 1269.91, 60.654, 248.5862, 36.8931, 78.1229, 183.5386, 107.7635, 491.0398, 38.7274, 84.4733, 175.4222, 1864.4472], [727.7603, 61.3975, 83.839, 419.6262, 376.589, 331.7222, 1137.1185, 0.0, 1222.35, 100.287, 423.4714, 83.3404, 186.6758, 243.8635, 55.6499, 258.3378, 78.9667, 181.0253, 173.5776, 2437.776], [970.6851, 117.1193, 186.0373, 490.2156, 418.9833, 396.069, 1421.6958, 50.7224, 1766.39, 150.579, 338.6726, 85.7806, 196.2662, 206.5594, 59.2172, 494.1082, 58.081, 130.4294, 178.0834, 2258.8416], [798.4232, 126.6596, 28.8463, 543.9294, 389.4608, 448.987, 1406.2167, 21.6012, 1505.39, 150.249, 444.5568, 61.3782, 294.9178, 269.605, 179.4197, 386.9128, 97.9978, 163.6589, 138.7109, 2647.08]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

