created: 20230625212343000
creator: Drevarr
modified: 20230705163535831
modifier: drevarr
tags: ChartData
title: 202306252123_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Tuff Spuffles", "Black Raspberry Pie", "Miphest\u00f6", "Rahani Sunray", "Primal Clone", "K\u00f4sair", "Ryvalia Fazebringer", "Traidoruns Maximus", "K\u00f4sair", "Crusader Siolith", "Aronorf Xideliesi", "Ateriuz", "Tika Fiery", "Johosh The Mighty", "Sygaldry Verdandi", "Xanvias Einzbern", "Blancooo Padreee", "Koralia Danai", "Yummy Kiwi", "Bella Sassy", "Grasszanine", "Zayde Sunsabre", "Newtype Khan"];
const professions = ["Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 37.2973, 2.0751, 23.9904, 10.046, 0.0, 16.168, 5.6259, 8.9797, 33.2698, 20.3558, 81.6653, 38.5434, 30.9096, 41.3453, 28.9296], [25.0836, 14.2296, 20.9563, 13.3618, 5.3679, 17.9565, 7.0218, 13.1678, 12.6259, 24.8064, 31.6253, 20.9941, 14.3938, 27.3773, 21.2621, 10.9353, 20.4771, 12.4301, 39.7056, 7.632, 32.1269], [27.0368, 77.7777, 11.59, 0.0, 17.9487, 22.3675, 31.5168, 24.3951, 0.0, 18.3745, 23.5008, 42.4627, 34.6277, 38.7296, 7.1064, 27.9826, 23.2848, 14.0326, 34.9346], [17.9634, 51.1511, 13.3525, 20.116, 11.7264, 18.3206, 17.9217, 23.3554, 13.4275, 18.2785, 6.6834, 5.6218, 21.289, 13.3517, 23.5522, 21.7389, 0.0, 26.8186, 23.6611, 20.1008, 26.5482, 8.4062, 32.6368, 9.9216, 36.2722], [6.5071, 39.9399, 17.198, 18.8, 15.5904, 27.1024, 13.7715, 26.8834, 15.2331, 3.48, 17.2054, 7.191, 5.0181, 10.8749, 20.7571, 29.2234, 30.3506, 3.5039, 26.353, 24.8371, 13.9062, 17.5445, 13.8643, 33.088, 13.1016, 34.6141], [84.2276, 149.789, 100.1952, 220.2163], [7.6986, 63.7637, 17.7855, 23.312, 18.7152, 29.8782, 18.1913, 26.6717, 17.6954, 12.6933, 18.5289, 8.9676, 9.9985, 23.2704, 21.9974, 42.3672, 29.7454, 19.1972, 30.0312, 26.7187, 23.0084, 21.3003, 23.2267, 44.2176, 19.2072, 43.2503], [12.9226, 57.037, 23.9811, 56.4, 32.3232, 6.4602, 27.3003, 43.0416, 35.1281, 0.0, 50.4357, 6.5988, 1.8865, 45.6192, 51.4733, 47.0376, 51.0188, 57.1291, 40.1722, 30.7833, 48.4659, 28.5653, 59.032, 28.1366], [68.185, 46.5427, 93.2098, 23.375, 75.117, 6.8103, 27.0524, 49.0291, 99.1459, 91.3311, 0.0, 98.6141, 72.7238, 40.2016, 50.1638, 13.6253, 71.5904, 21.9802, 53.4066], [22.6376, 119.9598, 16.7707, 40.984, 27.2832, 42.6471, 8.7588, 51.5088, 51.5103, 0.0, 8.1198, 30.033, 37.8809, 29.2147, 47.5334, 35.1614, 77.8782, 8.0276, 41.4384, 36.1267, 45.5112, 53.508, 36.1349, 61.5888, 22.4635, 113.9294], [0.0, 16.9569, 54.4782, 65.8, 15.792, 68.185, 59.4517, 57.083, 33.6836, 79.6598, 31.725, 15.3184, 32.6707, 74.0544, 51.4411, 65.6355, 15.5946, 60.0624, 83.8253, 25.6001, 56.0291, 26.8123, 46.7744, 29.2814, 86.2243], [0.0, 134.3943, 28.1471, 76.939, 27.552, 77.2191, 45.4646, 117.9058, 24.6882, 0.0, 61.3098, 0.0, 0.0, 83.9117, 79.0157, 28.4894, 84.3021, 0.0, 46.56, 67.079, 43.5517, 94.0506, 21.6331, 57.3024, 33.4027, 33.6468], [73.7782, 173.0729, 67.0295, 108.476, 69.4512, 89.5338, 23.743, 50.1682, 11.3263, 78.8013, 21.0654, 32.0328, 48.1997, 52.4218, 75.9274, 33.6091, 6.0372, 61.8317, 71.6419, 67.0026, 40.3368, 44.1029, 138.8192, 42.3576, 129.2674], [57.5562, 203.7636, 41.553, 87.843, 23.6544, 102.656, 9.675, 125.9496, 59.9147, 0.0, 64.6006, 0.1692, 9.1684, 72.576, 22.9824, 113.891, 106.3668, 23.4413, 85.2514, 73.5235, 42.1611, 75.6315, 20.1192, 95.0528, 52.4573, 103.5659], [91.1001, 87.4474, 43.3155, 68.573, 92.064, 83.1241, 59.3439, 134.7696, 46.9469, 0.0, 86.3488, 26.1837, 8.7534, 111.191, 30.023, 113.7576, 67.2648, 20.1184, 50.471, 119.2464, 56.2569, 50.6268, 93.1061, 132.4272, 46.5298, 77.3117], [62.6886, 201.1009, 31.3517, 73.179, 58.5312, 90.8965, 26.384, 146.9059, 66.6121, 58.8774, 52.1559, 24.2227, 96.768, 52.3488, 146.9174, 67.451, 0.0, 88.4174, 116.8003, 51.2001, 98.6296, 15.2587, 88.6608, 33.1483, 125.3984], [37.8514, 326.9466, 3.4182, 0.0, 0.0, 0.0, 39.8051, 137.8742, 124.1631, 13.7715, 9.7713, 27.6184, 166.441, 69.8957, 226.381, 49.2499, 26.0239, 131.4389, 88.6234, 30.088, 79.696, 22.5096, 193.7152, 5.2661, 95.3442], [7.8819, 144.7646, 46.0928, 68.996, 87.8304, 65.3082, 39.7512, 151.1395, 45.2397, 3.9672, 91.9289, 14.5935, 41.8803, 59.4432, 90.0326, 99.3461, 111.5338, 83.0165, 80.1091, 63.3364, 79.3359, 55.5768, 241.392, 52.3555, 133.4819], [59.5725, 113.093, 50.8463, 83.801, 64.0416, 106.4412, 95.3761, 121.9277, 78.0369, 98.3675, 33.7554, 52.0297, 96.3072, 64.4966, 111.6226, 76.9937, 3.6848, 93.9115, 111.9552, 48.0396, 71.6184, 99.1219, 201.3856, 22.2346, 150.6162], [19.1548, 172.6525, 62.917, 117.735, 74.2896, 143.7386, 73.331, 131.7355, 48.6212, 6.7686, 125.7315, 11.2518, 55.8027, 95.1552, 100.1011, 100.08, 86.6296, 27.1425, 132.8357, 83.8253, 70.9216, 75.683, 40.7962, 241.8432, 63.7272, 120.9075], [51.6906, 132.4323, 44.0632, 139.355, 67.536, 102.2522, 97.6937, 158.2661, 125.1151, 0.0, 172.0179, 25.2531, 0.0, 223.5802, 170.2157, 207.1656, 90.2139, 0.0, 145.1275, 93.5626, 101.3888, 220.3604, 53.7442, 209.808, 0.0, 202.8482], [119.2366, 651.7911, 188.7509, 173.618, 19.7232, 11.2043, 50.5043, 292.4006, 137.2622, 21.9066, 153.811, 0.0, 46.5966, 243.7171, 136.873, 197.7581, 152.5909, 51.6037, 61.8782, 62.375, 147.785, 200.3977, 171.9096, 175.0656, 29.3578, 176.3177], [21.996, 199.5594, 99.5562, 172.819, 101.0688, 119.1092, 62.0389, 379.4011, 188.1816, 0.0, 76.6909, 0.0, 26.7128, 208.2816, 192.7968, 220.5763, 285.8635, 20.5789, 180.839, 167.2272, 193.4226, 168.1901, 76.9709, 232.368, 38.2618, 277.2582]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

