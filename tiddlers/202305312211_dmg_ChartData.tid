created: 20230531221142000
creator: Drevarr
modified: 20230705163532445
modifier: drevarr
tags: ChartData
title: 202305312211_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Slingsshot", "Proteccdebussy", "Fiorela Marina", "Aarrii Shadeslayer", "Arriasa", "Puppy Sky", "Johnny London", "Koralia Danai", "Tegan Parker", "Crusader Siolith", "Cat Wigglebooty", "Etchery Of Ascalon", "Belvyn Brightblade", "Blanco Padre Guard", "Brace Stonebrow", "Tuandha Lan", "Artakama Nahid", "Bella Sassy", "Sub Train", "Johosh Of The North", "Sygaldry Verdandi", "Legacy Of Mathus", "Ryvalia Fazebringer", "Tribal S", "Drevarr Moonwillow", "Primal Clone", "Miphest\u00f6", "Zefirokai", "Venomina The Siren", "Solus Sanctus", "Oo Dads Mad", "Black Raspberry Pie", "Tika Fiery", "Melody Phoenixstorm", "Mel E Tonin", "Mildly Ecstatic", "Eibh\u00ebar", "Smol Gluvs", "Newtype Khan", "Grasszanine", "Gavann", "Cedryn X", "Kira Dragonblaze", "Sumatra Satyricon", "No Reserv\u00e9", "Irin The Undeath", "Tootsie Pop Rocks", "Sister Elonith", "Rosie Sunray", "Zayde Sunsabre", "Soxx", "Jeckyll Mbs", "Kosair", "Shaca Booey", "Lord Erin The Wise", "Be\u00eb", "Permanent Dawn", "My Birthday Girl", "Kary\u00edna", "Mistwalker Cael", "Cyclotechnist Farra", "Xanvias Einzbern"];
const professions = ["Untamed", "Firebrand", "Reaper", "Reaper", "Druid", "Scourge", "Druid", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Renegade", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Druid", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Dragonhunter", "Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Firebrand", "Berserker", "Dragonhunter", "Soulbeast", "Vindicator", "Scourge", "Scrapper", "Berserker", "Vindicator", "Berserker", "Willbender", "Berserker", "Guardian", "Berserker", "Weaver", "Scourge", "Weaver", "Scrapper", "Vindicator", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [0.0], [2.5263], [28.193], [3.279, 0.9505, 6.5778, 2.3426, 1.1754, 0.0, 0.0, 15.1135, 6.376, 0.0, 0.3357, 0.0, 2.6416, 0.0, 0.0], [48.2982, 45.6], [51.0175, 82.3071, 33.3279, 14.6962, 6.9062, 0.0], [27.9653, 8.2367, 13.4556, 6.5655, 3.5482, 13.1667, 3.3587, 4.0, 5.672, 0.0, 2.7543, 0.0, 0.0], [13.089, 0.6572, 11.8222, 4.3105, 6.1031, 0.0, 27.5543, 5.5459, 23.556, 3.7544, 49.5143, 11.0082, 3.6143, 4.3125, 0.0], [10.4902, 8.6078, 19.5667, 7.6026, 7.7259, 22.6111, 1.9891, 25.1568, 17.228, 0.8596, 9.9786, 14.6352, 12.2526, 0.0, 0.0], [7.1659, 3.788, 33.7889, 6.6278, 11.8355, 23.9074, 10.3696, 16.8216, 24.884, 19.7251, 10.5429, 14.627, 30.5939, 8.8125, 0.0], [13.81, 16.0707, 87.6778, 12.2053, 1.9561, 0.4815, 7.8804, 15.7946, 53.096], [22.4827, 6.8445, 180.6333, 21.3961], [3.917, 10.0813, 45.9556, 15.7443, 22.5943, 29.0556, 50.6739, 33.6649, 23.48, 7.5848, 7.5643, 20.25, 15.5768, 0.0, 0.0], [71.3991, 26.8704, 3.7065, 67.6, 47.6, 13.7193, 38.2571, 36.3648, 20.5631, 2.5781, 0.0], [149.7295, 160.9283, 1.9688, 0.0], [18.8492, 5.4735, 19.1667, 12.2746, 22.9649, 2.2963, 36.4348, 20.1081, 79.732, 24.8538, 2.4929, 27.0697, 5.8123, 0.0, 0.0], [17.7979, 17.6608, 37.8333, 23.0567, 23.886, 7.0926, 16.4348, 23.0216, 17.092, 5.0058, 21.1786, 6.6148, 11.2969, 8.4062, 0.0], [25.6078, 13.1343, 21.7667, 19.9603, 25.7259, 29.0556, 21.7609, 14.6919, 46.716, 32.3918, 5.2214], [18.5747, 4.8693, 32.2111, 22.8533, 3.9298, 5.0926, 31.0, 42.2, 85.38, 12.1287, 14.0857, 27.209, 17.3925, 19.1094, 0.0], [46.5309, 16.0459, 39.4778, 13.1152, 12.4474, 11.037, 62.9783, 22.0216, 56.452, 7.7368, 60.3643, 23.4303, 4.942, 0.0], [32.4912, 27.5, 84.0109, 100.5622, 106.168, 17.5497, 34.9786, 97.0943, 19.843, 34.6406, 56.6316], [50.0558, 2.4028, 35.0444, 27.8325, 26.7982, 26.8519, 6.5543, 14.8108, 23.384, 8.6959, 15.3929, 37.1311, 8.1331, 10.2812, 0.0], [6.5505, 9.8657, 6.8, 11.2286, 31.9408, 21.4815, 53.25, 40.4541, 70.368, 108.1287, 76.6214, 56.7008, 12.7338, 22.4531, 46.9298], [26.5716, 19.6078, 55.4222, 24.2897, 21.3838, 36.7963, 37.3152, 31.9568, 73.308, 15.3684, 38.5, 22.6352, 23.6348, 11.3594, 4.4211], [27.2896, 9.4735, 54.1222, 30.9049, 30.5373, 26.2778, 5.663, 49.2162, 61.188, 1.8889, 16.4714, 56.9918, 11.273, 0.0, 0.0], [29.2881, 18.0601, 129.2889, 21.8243, 31.114, 0.0, 49.5652, 93.6324, 87.94, 18.0117, 27.1571, 24.4262, 23.0205, 7.6719], [103.663, 238.0486, 198.808, 21.7836, 11.5786, 95.75, 77.0102, 8.3125, 0.0], [57.3394, 55.9541, 128.9333, 22.4528, 34.6447, 39.537, 97.7391, 47.2432, 46.76, 27.0175, 67.2571, 25.7131, 49.942, 23.875, 0.0], [32.6742, 66.0989, 131.8333, 60.1914, 23.2303, 5.5556, 16.6087, 13.9568, 35.416, 3.6316, 39.55, 39.7254, 15.1911, 7.6719, 0.0], [123.4374, 100.4382, 94.5333, 47.3999], [66.2775, 13.788, 23.5222, 34.4276, 36.9934, 307.5741, 0.1413, 10.2919, 94.448, 63.2456, 27.65, 37.9262, 42.9317, 27.0625, 151.6404], [47.7406, 18.947, 66.2556, 37.1574, 93.6645, 76.2593, 29.5978, 18.427, 120.624, 63.4269, 37.2429, 40.4672, 12.6382, 12.8438, 37.7982], [204.1825, 92.0742, 368.7222, 70.8602], [0.0, 0.0, 349.9565, 110.4595, 582.12, 121.807, 4.8857, 118.0328, 124.6314, 27.2812, 205.0789], [0.0, 162.1623, 292.4074, 54.9239, 143.6216, 230.976, 219.731, 209.6857, 200.377, 100.8908, 44.5156, 0.0], [51.9683, 37.5406, 112.6667, 86.9717, 125.3991, 61.8148, 48.4565, 119.6324, 126.704, 60.076, 134.8071, 99.3648, 48.4164, 2.3281, 43.0965], [82.8462, 101.5406, 617.4778, 79.8772, 53.1798, 86.6667, 152.8804, 100.0865, 125.86, 164.9006, 152.0429, 126.6189, 49.2389, 12.4531, 0.0], [114.9035, 89.947, 341.4444, 84.7173, 67.7719, 169.5741, 104.7935, 115.8108, 157.664, 40.2865, 55.0643, 181.5123, 107.2833, 6.125, 0.0], [90.6983, 71.5442, 368.1667, 85.3098, 95.2522, 223.1481, 139.5326, 158.9514, 173.992, 41.0643, 116.8714, 193.6762, 56.4403, 15.1406, 0.0], [183.3394, 13.5724, 324.4667, 81.5749, 110.6491, 9.0556, 35.413, 50.1676, 291.692, 2.0409, 255.0571, 63.5656, 96.7201, 43.4688, 10.0088], [202.5279, 231.2654, 163.7717, 272.7081, 561.636, 314.7135, 103.1286, 282.2582, 56.5666, 62.3594, 0.0], [182.6199, 302.6749, 663.2889, 230.937], [162.0392, 151.7986, 174.5, 129.8904, 202.0658, 195.537, 193.2391, 241.4811, 129.028, 289.7076, 112.5, 269.7992, 76.6689, 119.2656, 8.2281], [208.5822, 91.841, 486.7889, 178.0982, 279.2083, 349.0741, 116.9457, 95.2, 272.928, 128.7719, 227.7643, 163.8156, 103.3652, 84.125, 0.0], [380.3861, 123.6714, 796.3889, 230.3608, 233.386, 176.8152, 272.0865], [241.629, 172.2014, 462.2, 233.772, 274.5811, 184.537, 436.0217, 261.2105, 212.1, 368.8975, 272.5734, 177.4688, 0.0], [0.0, 206.3887, 946.7778, 165.0422, 399.432, 106.7037, 450.3478, 439.9838, 1513.584], [242.8235, 184.0389, 806.3333, 199.0535, 237.5175, 473.2778, 65.6739, 259.0324, 615.94, 135.4737, 82.7571, 338.2746, 110.3311, 83.2188, 28.8684], [324.8718, 285.0, 1258.9222, 215.4748, 104.9518, 355.0, 195.2065, 381.8, 142.964, 271.7427, 493.2286, 383.6844, 131.6485, 120.2031, 0.0], [243.7934, 181.0071, 476.5889, 223.5831, 383.7039, 712.7963, 281.1304, 234.1081, 429.36, 396.5029, 211.95, 252.4221, 154.273, 20.0, 0.0], [162.8567, 182.5124, 919.5889, 269.4175, 324.5461, 224.2407, 153.25, 414.9027, 933.708, 348.8129, 251.4714, 350.2951, 141.2765, 43.9531, 0.0], [777.4555, 280.3322, 611.8667, 383.9685, 392.5746, 0.0], [305.6154, 107.5548, 779.8111, 268.0951, 388.261, 809.3148, 300.337, 269.0919, 1007.492, 253.9415, 548.9214, 280.5369, 140.3993, 58.3594, 50.5789], [322.1357, 393.5548, 1209.7556, 264.7865, 367.8202, 334.963, 128.0652, 357.2108, 350.02, 650.2807, 391.7, 589.7623, 17.198], [447.1146, 368.212, 1483.3222, 312.3539, 2.5789, 82.1111, 358.6304, 390.8865, 658.756, 264.2573, 508.8429, 287.9959, 214.6655, 102.4375, 0.0], [557.276, 234.7456, 891.1111, 324.602, 322.5943, 227.0741, 90.1087, 366.627, 646.176, 184.1287, 208.8786, 268.5984, 105.1877, 0.0, 0.0], [569.5822, 546.2933, 631.2778, 330.9081, 555.2566, 70.8704, 239.1848, 517.773, 344.548, 371.7427, 476.75, 193.0246], [365.5053, 311.0707, 880.4222, 364.6568, 447.261, 320.2778, 296.2717, 554.6432, 827.68, 420.1754, 258.5786, 252.627, 312.2696, 225.2188, 2.9737], [515.368, 334.7915, 911.8222, 372.5157, 593.1557, 63.9815, 380.6413, 439.173, 1011.384, 444.5906, 320.2286, 249.7459, 173.8532, 50.5, 64.4298], [561.4796, 469.8516, 1409.5556, 383.9559, 342.1952, 312.0, 252.2065, 484.8811, 798.56, 506.1871, 597.0429, 595.6025, 101.2526, 134.3125, 0.0], [691.4842, 418.9258, 1198.2667, 814.1537, 449.8114, 400.4259, 509.3261, 495.0486, 1709.364, 505.7076, 438.6643, 893.1721, 328.3345, 109.4062, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

