created: 20230313222416000
creator: Drevarr
modified: 20230705163521852
modifier: drevarr
tags: ChartData
title: 202303132224_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Whose Guardian", "Bella Sassy", "Xyntharos", "Tootsie Pop Rock", "Drevarr Moonwillow", "Koralia Danai", "Beta Blue", "High Sorcer Baradun", "Sumatra Satyricon", "Sygaldry Verdandi", "Minka Bringer", "Mistwalker Caelon", "Neuronut C", "Mac Chiato", "Ark Darkness", "Eibh\u00ebar", "Seren Nightroad", "Daring Deathblade", "Johosh The Great", "Lil Lun\u00e4", "Pererek Ninja", "Ravioli Fetabringer", "Smol Daddy Tika", "Lord Erin The Wise", "Sofya De Nova", "Elonith Tenebris", "Cerys Fireblade", "Morton Saltbringer", "Rozaalyna", "Smol Gluvs", "Sp\u00edcy Cheese", "Xanvias Tseli", "Rina Of Theros", "Heartthrobb"];
const professions = ["Firebrand", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Firebrand", "Soulbeast", "Tempest", "Soulbeast", "Firebrand", "Scrapper", "Vindicator", "Scourge", "Tempest", "Firebrand", "Chronomancer", "Scourge", "Reaper", "Firebrand", "Weaver", "Dragonhunter", "Firebrand", "Berserker", "Weaver", "Weaver", "Scourge", "Berserker", "Chronomancer", "Scourge", "Scourge", "Berserker", "Berserker", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.371, 0.9941, 7.9918, 3.4679, 3.9615, 18.3636, 40.8039, 1.7984, 0.0, 30.2174, 0.0, 0.0, 0.0, 10.1602, 2.5929, 39.3671, 121.8431, 0.0, 40.1064, 3.2051, 10.3274, 0.0, 2.1974, 31.2195, 6.5051, 1.1077], [0.0, 0.5647, 6.9271, 2.0491, 0.0, 13.303, 0.0, 3.535, 0.0, 12.913, 3.0441, 0.0, 8.1667, 16.5, 1.3628, 17.9873, 17.1961, 10.1867, 40.1383, 4.641, 49.0885, 0.1892, 4.5132, 13.9512, 36.899, 12.2462, 99.5167], [0.0, 0.5824, 6.3537, 10.3321, 0.0, 36.9242, 0.7059, 5.428, 0.0, 14.087, 4.2647, 17.6557, 0.0, 14.068, 24.5841, 85.9747, 15.9412, 36.44, 9.3617, 5.1026, 10.7611, 4.3243, 33.3158, 10.3862, 18.3131, 24.3846, 4.0833], [3.0484, 0.0, 7.5687, 3.0943, 0.1538, 46.9394, 42.7255, 1.3745, 27.1159, 4.7206, 3.0, 6.4524, 23.4757, 2.1593, 0.0, 67.6863, 15.84, 47.3723, 0.0769, 0.0, 4.0, 13.5395, 35.9797, 10.0808, 32.0], [0.0, 14.5, 0.2529, 8.3784, 2.0906, 0.0, 12.6061, 50.3922, 4.5597, 0.0, 25.5652, 8.6765, 2.0, 1.4762, 22.9806, 7.4248, 61.6456, 73.3333, 12.0133, 45.734, 0.0, 16.5841, 1.1081, 0.1053, 13.4106, 60.596, 19.8154, 27.15], [0.0, 0.0, 0.0, 5.275, 11.5057, 0.0, 4.6061, 7.3137, 3.1193, 0.0, 2.0, 0.0, 0.0, 46.4272, 35.8761, 50.7975, 11.9804, 0.8133, 45.3511, 0.0, 74.7788, 43.3816, 13.9837, 81.4848, 9.0462, 5.25], [8.8308, 0.766, 0.0, 190.9242, 187.3725, 17.3457, 8.9032, 350.3478], [45.8065, 0.6882, 21.564, 1.9811, 52.6061, 0.7647, 0.9547, 0.0, 40.25, 0.0, 2.4078, 5.4956, 22.2532, 53.5098, 8.0667, 4.5532, 0.0, 0.0, 0.0, 4.75, 44.8943, 32.0808, 92.8462, 50.8333], [15.5, 5.6235, 30.2902, 0.0, 0.0, 1.3636, 67.3333, 5.0576, 0.0, 48.5217, 48.8971, 0.0, 3.7381, 2.466, 22.115, 67.7722, 0.9412, 17.8667, 15.5957, 0.0, 1.0177, 6.4054, 0.0, 16.5244, 26.2121, 21.0462, 4.5333], [91.3548, 12.8235, 9.6992, 0.0, 0.0, 27.5455, 33.3333, 1.4774, 19.7536, 0.0, 0.0, 27.8333, 25.0874, 18.8761, 3.7848, 32.1569, 63.0533, 83.7021, 46.4872, 22.7699, 0.0, 19.3421, 12.622, 22.8889, 36.9077, 68.7167], [0.0, 18.953, 12.0038, 0.0, 61.4697, 57.2353, 21.3621, 0.0, 2.5507, 8.5441, 5.8197, 61.0476, 8.0874, 4.4956, 2.7468, 45.3922, 17.4933, 16.2128, 1.3333, 43.0088, 1.9459, 13.4737, 40.1057, 17.9091, 6.2769, 39.9167], [9.9194, 11.4941, 18.6169, 18.2981, 0.0, 15.2424, 1.7059, 18.3333, 0.0, 2.9565, 0.0, 0.0, 0.0, 66.034, 18.1239, 29.8987, 12.1961, 54.84, 59.0532, 0.0, 17.4867, 0.9459, 15.7368, 30.8902, 19.0404, 29.0308, 71.2167], [100.3065, 1.5647, 40.3772, 59.1283, 174.6212, 165.0784, 64.8088], [2.8226, 32.2353, 21.4277, 5.4755, 0.0, 4.3333, 21.0588, 0.0288, 55.4839, 16.1449, 76.1765, 3.9762, 119.0728, 7.8142, 6.1392, 9.0, 45.8267, 49.1064, 19.8718, 44.6726, 0.0, 0.0, 21.439, 0.0, 20.4769, 11.9333], [85.6774, 5.7882, 37.0212, 5.9585, 0.0, 52.5303, 16.1569, 32.5226, 0.0, 10.1014, 55.7647, 0.0, 39.9048, 6.4272, 42.3363, 54.4304, 27.8627, 23.8667, 30.0106, 12.6283, 49.7297, 3.2763, 20.5894], [12.2419, 0.1941, 20.7145, 19.2679, 0.0, 56.2424, 29.6667, 5.2757, 0.0, 47.029, 9.0882, 3.5902, 34.7857, 25.4903, 25.2389, 86.3544, 39.1961, 74.7067, 68.1489, 28.0, 35.8142, 19.5946, 4.3421, 57.5081, 97.5556, 140.9231, 18.4833], [45.3226, 15.4765, 56.2985, 11.7245, 0.0, 92.5, 79.1961, 23.9712, 28.6087, 113.1176, 7.6557, 226.1905, 11.1214, 48.9027, 165.2025], [66.2258, 1.2941, 26.2115, 34.6528, 2.1154, 65.0909, 48.7843, 2.4815, 0.0, 83.8696, 91.2794, 3.4098, 57.0714, 20.2718, 9.0708, 92.0506, 83.2745, 54.16, 16.5106, 23.0256, 21.2301, 0.7027, 26.5921, 73.5041, 23.0909, 96.5846, 80.5667], [51.1129, 3.8765, 24.1469, 20.9623, 0.0, 42.303, 48.6471, 1.6008, 0.0, 203.7391, 39.1324, 0.0, 0.2381, 27.9126, 7.2124, 1.3797, 28.9608, 116.3467, 69.0106, 0.0, 55.0177, 1.2973, 8.5263, 75.0407, 78.1111, 80.0, 74.2333], [4.2305, 0.0, 90.913, 4.3824, 13.9672, 63.5, 34.3058, 57.0265, 25.7089, 245.5882, 135.8, 130.9574, 10.1026, 25.8938, 0.0, 1.2105, 143.8821, 164.2929, 157.6154], [4.8529, 45.2268, 11.8943, 0.0, 36.8182, 94.3725, 11.7325, 81.6452, 38.6232, 52.8676, 0.0328, 76.0, 3.0291, 18.9027, 76.8228, 43.6078, 72.04, 65.0851, 0.0, 18.4867, 15.1081, 27.7237, 62.561, 111.8788, 169.5692], [5.9516, 34.3059, 31.7873, 34.834, 0.0, 49.5455, 42.451, 2.037, 5.3548, 44.7536, 12.0, 6.8033, 3.2143, 83.9029, 174.3628, 67.557, 0.0, 28.1733, 71.9362, 73.5897, 26.1239, 53.973, 23.6053, 41.5854, 52.4949, 18.3231, 47.6333], [4.1774, 13.7588, 26.3655, 14.7811, 0.0, 176.1515, 30.6667, 13.6461, 0.0, 76.0145, 0.0, 4.7541, 77.2619, 124.9126, 18.2566, 137.0633, 69.1176, 181.6267, 165.8404, 0.0, 83.2478, 0.0, 17.2632, 59.5122, 70.2828, 19.1538, 54.45], [39.8226, 0.2294, 54.6733, 17.566, 0.0, 119.6667, 53.4314, 0.6831, 62.2903, 91.7826, 5.3088, 44.6066, 184.1429, 41.8786, 46.3363, 81.519, 129.4314, 36.56, 203.1064, 21.5128, 163.7434, 33.6447, 25.4593, 92.5152, 90.6308], [0.0, 11.9529, 47.8402, 51.3962, 0.0, 115.6364, 125.6863, 2.9342, 0.0, 76.7101, 107.3235, 18.7541, 101.0714, 105.9029, 76.9381, 65.9873, 165.8824, 60.0533, 98.0638, 0.0, 51.3717, 0.0, 72.1579, 105.4309, 174.2929, 167.2154, 190.2], [102.7788, 459.3165, 470.4118, 145.6533, 247.1702, 2.1538, 60.8938, 0.0, 39.0132, 290.5081, 305.7677, 0.0, 300.1], [80.3871, 9.9353, 51.0235, 40.0226, 0.0, 10.0152, 112.549, 13.321, 75.3871, 103.7971, 82.8971, 0.0, 43.0714, 210.335, 76.0619, 62.7848, 106.3529, 152.3067, 203.4043, 0.0, 195.1504, 25.6216, 15.0263, 89.0528, 0.0, 105.3077, 91.7833], [10.2903, 3.1765, 68.4031, 39.6566, 66.8846, 39.4545, 85.2745, 197.087, 18.3382, 0.0, 1.0476, 115.4223, 75.885, 92.6456, 42.7647, 21.6267, 277.383, 0.0, 86.5658, 144.8496, 177.4444, 224.7846, 180.7667], [14.7581, 0.3647, 32.2832, 46.0189, 0.0, 59.803, 277.9412, 32.2469, 0.0, 421.7101, 169.5588, 4.7049, 72.7857, 68.0388, 20.0796, 1.7722, 540.3922, 139.8933, 350.0745, 2.0, 23.2566, 3.2973, 7.4211, 169.3984, 255.303, 570.0769], [74.1935, 4.3706, 69.6733, 107.283, 0.0, 188.6515, 229.4314, 13.5967, 11.1935, 160.7391, 83.8824, 0.0492, 31.5476, 176.9369, 99.8407, 141.6582, 125.7059, 12.4267, 89.0106, 43.7179, 135.2655, 0.0, 87.4737, 146.3374, 262.404, 178.0615], [39.2097, 1.4824, 68.2926, 33.634, 28.8182, 295.4118, 3.3416, 9.5806, 221.2174, 127.3088, 0.0, 357.1667, 131.733, 68.9204, 325.7975, 139.902, 248.8, 7.9681, 21.3846, 139.8761, 2.4054, 41.5, 209.0244, 189.1515, 338.2308, 358.0333], [0.0, 1.9471, 76.2233, 37.5472, 0.0, 109.1061, 84.8824, 7.3827, 0.0, 124.9565, 2.6912, 0.0, 322.9524, 209.1553, 46.4071, 172.3924, 386.5098, 400.9467, 172.1809, 0.0, 332.1239, 60.8378, 119.75, 207.3211, 316.3232], [77.5484, 56.2235, 68.7485, 85.7321, 254.2879, 161.9608, 18.1605, 21.129, 195.9855, 48.9559, 4.1475, 152.619, 245.4126, 83.4779, 194.4557, 539.1569, 11.0133, 164.7234, 16.4615, 133.8319, 17.0541, 99.9605, 124.1016, 178.4646, 278.0615, 418.5167], [15.3443, 66.119, 303.4126, 94.1416, 534.0253, 464.5098, 364.5467, 19.6923, 278.3717, 88.2973, 224.6053, 445.4715, 248.2828, 503.9538]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

