created: 20230318001239000
creator: Drevarr
modified: 20230705163522300
modifier: drevarr
tags: ChartData
title: 202303180012_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Ryvalia Fazebringer", "King Squid", "Venomina The Siren", "Koralia Danai", "Xyntharos", "Drevarr Moonwillow", "Lucky Leipreach\u00e1n", "Jupi Jupi Jupi", "Sumatra Satyricon", "Viral Marketing", "Sygaldry Verdandi", "Kosa\u00edr", "Mac Chiato", "Eibh\u00ebar", "Nazhul Naxxremis", "Smol Daddy Tika", "Seren Nightroad", "Demon Sekhmet", "Abigail Ryn", "Aronorf Xideliesi", "Lord Erin The Wise", "F\u00f4xy Lat\u00eena", "Xanvias Tseli", "Mike The Archmagus", "Morton Saltbringer", "Smol Gluvs", "Rina Of Theros"];
const professions = ["Chronomancer", "Chronomancer", "Reaper", "Tempest", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Firebrand", "Soulbeast", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Chronomancer", "Scourge", "Berserker", "Scourge", "Berserker", "Tempest", "Firebrand", "Weaver", "Scourge", "Berserker", "Weaver", "Chronomancer", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.8379, 0.375, 2.2027, 19.9661, 0.0, 0.0, 0.0, 0.0, 1.266, 0.0308, 19.1091, 0.0, 11.9018, 3.8812, 0.8493, 0.1224, 0.6, 2.9747, 15.4198, 4.2295, 0.0, 0.8692, 6.5365], [3.7207, 0.0, 2.0731, 9.4299, 23.4231, 0.5738, 3.209, 0.0, 0.0, 0.9692, 7.2727, 5.9608, 20.2063, 1.1089, 0.0, 0.0, 0.0, 3.6962, 1.2716, 28.2131, 13.9167, 0.0, 0.3458, 4.7831], [48.9344, 4.3134, 3.7614, 0.0, 2.2154, 3.5455, 0.0, 17.3661, 23.5842, 9.3924, 0.0, 22.8689, 11.8333, 27.3158, 16.8879, 8.9954], [9.1241, 0.0, 0.0, 35.5902, 11.8806, 0.0, 0.0, 17.2727, 22.4692, 1.2673, 1.5753, 0.0, 3.0, 5.7089, 0.0, 43.8361, 0.0, 1.2336, 6.3995], [1.0552, 0.0, 0.0, 4.8665, 0.0, 0.0, 0.0, 0.0, 7.2021, 0.0, 1.3455, 1.2941, 38.6639, 0.0, 0.0, 0.0, 0.0, 4.4557, 0.0, 8.3607, 0.0, 0.0, 1.6507], [0.869, 0.0, 1.6113, 22.2579, 0.0, 0.0, 0.0, 3.9886, 0.0, 0.0, 34.4909, 0.0, 11.218, 0.3465, 0.0, 0.0, 0.0, 16.4557, 0.0, 26.6885, 0.0, 0.0, 2.6168, 13.637], [5.431, 17.25, 1.485, 18.0181, 0.0, 18.6885, 3.2836, 1.3295, 8.1489, 15.0154, 5.0545, 3.1961, 10.9384, 2.8218, 7.1233, 0.0, 0.0, 6.6709, 8.4444, 74.541, 8.375, 2.5965, 1.3084, 7.4817], [6.4345, 52.1, 2.0166, 0.6312, 0.0, 10.0, 0.0, 0.0, 1.6809, 0.9692, 59.3273, 3.975, 25.6238, 2.3836, 16.2313, 0.0, 2.8987, 3.1852, 3.6721, 0.0, 2.2991, 33.0799], [1.931, 0.0, 0.1262, 8.267, 0.0, 0.0, 0.0, 7.2841, 1.8298, 16.3538, 55.4545, 15.7804, 35.2772, 16.9178, 2.3537, 0.0, 5.481, 2.0123, 47.8689, 29.25, 13.807, 8.6729, 6.7671], [9.6207, 6.4219, 11.819, 137.3462, 1.2951, 31.4179, 0.0, 0.0, 19.2, 19.9455, 0.0, 9.4626, 6.8614, 0.0, 0.0, 0.0, 27.679, 0.0, 0.0, 0.0, 17.9954], [9.2793, 14.575, 0.814, 41.8688, 16.5, 10.2787, 0.0, 2.75, 0.0, 6.4462, 1.3818, 2.7843, 21.8253, 2.6337, 12.2192, 0.0, 0.0, 1.8101, 4.7407, 7.541, 0.0, 0.1028, 7.5822], [5.6828, 97.7, 4.99, 14.3665, 0.0, 1.377, 0.0, 0.0, 10.5638, 0.0, 6.0909, 33.995, 0.0, 10.6027, 0.0, 0.0, 51.7595, 0.0, 16.3607, 0.0, 8.6168, 9.3356], [17.4862, 6.075, 0.9767, 11.5452, 0.0, 5.5902, 10.9851, 2.2386, 7.9787, 8.2, 19.5818, 1.7255, 22.0616, 20.3465, 10.4932, 0.0, 0.0, 2.1519, 16.9753, 108.082, 1.2917, 19.614, 0.1682, 17.9498], [1.1276, 5.7, 0.6379, 0.0, 45.2951, 68.5075, 10.3295, 11.8511, 0.0, 61.8, 25.1314, 111.1485, 0.0, 0.0, 0.0, 32.4444, 50.9672, 0.0, 13.3551, 19.3995], [13.4345, 55.3, 2.9336, 29.1199, 22.3462, 17.6721, 2.0, 5.5341, 23.4362, 32.2, 10.8727, 0.0, 9.8536, 20.6238, 25.7808, 0.0, 0.0, 1.9114, 3.1975, 64.9016, 157.625, 25.3333, 1.1402, 23.5594], [39.2724, 3.8904, 53.3371, 0.0, 19.623, 9.3284, 10.2273, 142.5426, 58.0154, 40.0, 18.1569], [17.3138, 0.0, 5.2757, 14.1041, 192.7308, 0.0656, 5.194, 3.0341, 0.0, 11.2154, 10.2182, 0.0, 48.1265, 48.6931, 12.0, 1.0476, 0.0, 17.3544, 0.0, 4.4918, 3.9583, 0.7544, 0.0, 30.3721], [31.5897, 129.675, 1.9801, 59.0136, 30.2692, 0.8852, 8.1493, 12.0795, 45.8404, 1.2154, 63.4727, 2.2157, 14.4908, 92.5842, 19.7397, 0.0, 0.0, 1.5316, 23.6049, 46.5082, 0.0, 14.3925, 15.5183], [33.5172, 0.0, 0.6478, 19.2534, 6.5385, 5.8361, 1.2985, 0.0, 0.0, 3.7846, 5.5091, 65.6656, 41.3366, 0.0, 0.0, 0.0, 62.4051, 5.1235, 23.1311, 8.0833, 0.0, 43.0913], [11.4448, 52.875, 12.588, 67.3914, 0.0, 2.0164, 6.0149, 10.0682, 42.9574, 4.5538, 0.3091, 0.0, 48.8652, 10.6238, 15.9178, 0.0, 0.0, 0.5063, 0.0, 83.8525, 0.0, 10.785, 21.7374], [16.2448, 6.925, 25.6844, 73.4299, 0.0, 0.0, 2.8209, 5.625, 45.9787, 4.0923, 25.5273, 70.3478, 0.0, 7.1918, 0.0, 0.0, 14.038, 21.5679, 26.4262, 48.625, 109.5088, 0.3832, 18.79], [41.4517, 109.225, 11.4817, 89.5679, 11.1475, 43.6119, 1.2955, 88.9681, 2.4, 48.4364, 0.0, 64.3128, 26.0792, 2.0822, 13.9524, 0.0], [24.969, 124.575, 26.0997, 54.9231, 47.5769, 37.8033, 39.1045, 34.3068, 115.766, 17.9231, 30.2, 0.0, 26.0699, 130.0792, 5.7534, 2.7279, 0.0, 25.4051, 3.3951, 116.0492, 0.0, 9.1308, 68.484], [39.631, 27.2, 21.4419, 34.7014, 0.0, 1.0299, 17.1932, 237.0957, 37.7538, 15.2727, 115.812, 62.9802, 0.0, 2.8027, 0.0, 29.4051, 5.2346, 8.2459, 0.0, 18.4019, 44.9612], [79.0276, 67.125, 16.4252, 46.8869, 201.3462, 33.4262, 21.3134, 8.8977, 33.2234, 42.8308, 6.1818, 3.0588, 131.8569, 30.7822, 4.9726, 0.0, 0.0, 49.2785, 10.6173, 39.7705, 30.4167, 2.7103, 37.4932], [42.2655, 39.025, 14.7309, 128.3054, 0.0, 1.9344, 3.2836, 3.7846, 37.3091, 75.1569, 115.3394, 42.4059, 0.0, 0.0, 0.0, 0.3671, 12.679, 85.5738, 0.0, 7.8318, 51.1393], [39.5621, 177.825, 11.2525, 129.3462, 122.5769, 3.9016, 1.6866, 11.7955, 350.8511, 67.8615, 65.9818, 9.902, 42.5158, 59.2673, 34.6438, 0.0408, 8.6, 3.8481, 5.0494, 220.0984, 18.4167, 20.2632, 34.6262, 41.6849], [88.5034, 40.675, 23.093, 91.405, 26.5769, 32.7049, 72.209, 22.2159, 133.8936, 26.8615, 148.0364, 93.8824, 103.5424, 87.3168, 2.8219, 1.7891, 25.4444, 65.1139, 13.5679, 45.2459, 75.25, 45.1404, 28.3271, 56.6187]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

