created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Melmyr", "Adredhel Winter", "Greg The Knight", "Drevarr Moonwillow", "Unbreakable Nemesis", "Belvyn Brightblade", "Sygaldry Verdandi", "Gabe Malhorn", "Crusader Siolith", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[47.5702, 59.9313, 104.8344, 67.4003, 3.2886], [88.3389, 0.0, 220.5352], [8.0358, 0.3648, 5.868, 0.414, 2.3821, 148.584, 93.7728, 31.5522, 75.3135, 24.2814, 101.3232, 1.9569, 13.6633, 24.7279, 17.3135, 20.6976, 88.9106], [21.6099, 0.0, 105.7261, 40.1325, 0.0, 27.8221, 0.0, 0.1656, 9.9389, 120.294, 151.2086, 2.291, 19.8827, 44.9753, 65.2938, 74.0696, 25.4401, 23.5291, 67.0971, 55.4484, 21.3024, 36.0511], [32.4704, 6.0984, 0.0, 44.0082, 48.6269, 123.246, 56.8498, 0.429, 133.342, 1.3198, 21.4933, 264.3173, 16.0121, 26.6112, 249.3439], [76.995, 14.5795, 351.5121, 19.6224, 0.0, 41.3197, 66.9438, 26.2848, 373.674, 57.3382], [57.0053, 91.2272, 116.1303, 259.4944, 40.1853, 100.8504, 177.0157, 62.6341, 136.8192, 224.4211], [134.7926, 32.1665, 442.1604, 121.3085, 0.0, 32.6374, 0.2353, 0.0, 160.173, 419.184, 228.9619, 8.5914, 30.739, 84.249, 108.6657, 174.1388, 26.2593, 16.2864, 131.9325, 22.8583, 91.056, 300.1169], [242.6369, 575.3172, 92.1085, 32.2272, 60.6541, 0.0, 38.9988, 94.1324, 358.176, 217.045, 11.9166, 31.4708, 37.1461, 169.8411, 315.9244, 14.4267, 34.0213, 196.4663, 47.4706, 318.0576, 200.1938], [185.1986, 58.3355, 740.6278, 62.6982, 85.9712, 93.978, 122.3065, 674.286, 237.3624, 17.851, 97.5027, 55.315, 215.1435, 191.026, 61.666, 21.5717, 352.5236, 62.7472, 99.9264, 526.8564], [24.7411, 600.568, 76.7843, 71.3016, 116.6874, 280.8162, 172.0833, 832.464, 311.7946, 28.3516, 84.6135, 74.2072, 178.035, 210.8392, 38.1374, 33.0426, 443.8963, 143.9961, 139.5072, 497.065]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

