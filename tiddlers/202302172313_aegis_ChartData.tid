created: 20230217231312000
creator: Drevarr
modified: 20230705163519409
modifier: drevarr
tags: ChartData
title: 202302172313_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "\u00c9\u00efbhear", "Ark Darkness", "Air One Com", "Aronorf Xideliesi", "Zaylen Harker", "Blanco Padre Guard", "Tyrisai", "Bella Sassy", "Koralia Danai", "Johosh The Great", "Ravioli Fetabringer"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.435, 34.6651, 0.1764, 64.8525, 23.667, 5.4537, 11.327, 25.5326, 8.8166, 26.208, 16.027, 12.5952, 16.9075, 56.2555, 11.9568, 0.0, 10.4774, 0.912, 15.191, 14.904, 5.1547, 57.0629, 3.956, 0.2312, 10.0754, 9.768], [17.7523, 5.0069, 10.1724, 90.1286, 47.7397, 7.2716, 10.6704, 13.2437, 11.8118, 27.169, 12.705, 0.0, 33.2928, 17.2301, 29.6376, 12.455, 0.0, 34.7194, 7.248, 26.5181, 21.4286, 1.1376, 6.426, 6.486, 0.0, 15.2727, 14.674], [42.1286, 43.806, 23.2691, 10.8643, 4.5447, 16.033, 41.7384, 19.3229, 183.6307, 0.0, 0.0, 64.2048, 17.0419, 60.2818, 15.0955, 6.6768], [28.715, 86.8954, 40.8464, 8.4672, 5.5448, 0.0, 0.0, 0.0, 9.9389, 6.697, 84.5645, 5.5949, 0.0, 15.7056, 4.0051, 44.6242, 0.0, 0.0, 34.3085, 31.248, 15.4339, 119.0333, 0.0, 19.7707, 2.668, 0.0, 7.2944, 14.014], [37.4918, 31.0536, 14.9744, 76.2675, 34.1706, 22.2044, 13.9536, 0.0, 13.5619, 35.2819, 30.7507, 16.6681, 0.0, 33.0624, 15.4829, 70.571, 52.5601, 60.7589, 52.896, 53.3894, 52.7933, 0.0, 17.2431, 8.832, 0.0, 9.893, 43.846], [22.0579, 21.3408, 54.0568, 77.4592, 14.4256, 2.0516, 1.4774, 40.6458, 21.8362, 29.5373, 63.4234, 4.0796, 63.9108, 13.7856, 8.4941, 84.7747, 68.5523, 13.3786, 37.8523, 0.0, 21.7709, 8.0482, 0.0, 26.3466, 0.414, 67.3679, 59.4038], [10.201, 7.7155, 28.4592, 73.8214, 13.5691, 5.0901, 10.1779, 0.0, 38.2378, 15.8822, 50.232, 0.1166, 32.7936, 0.0, 291.7906, 75.7264, 37.4928, 83.952, 11.857, 51.4022, 0.0, 40.4624, 9.4185, 0.0, 2.2339, 24.134], [36.0014, 16.6075, 46.1972, 119.7952, 6.3112, 3.6358, 9.877, 70.1597, 37.9392, 180.1363, 14.9197, 0.0, 120.5376, 14.5958, 252.311, 51.3644, 19.26], [51.336, 66.2112, 83.4176, 137.8586, 95.2991, 23.1912, 17.4557, 32.3692, 134.028, 25.6205, 109.8989, 62.9424, 78.4642, 33.6, 26.6381, 428.7946, 160.0218, 10.3066, 99.6898, 253.056, 22.6099, 191.4998, 21.7921, 87.158, 4.324, 158.7848, 52.9756, 63.294], [66.0413, 30.6158, 38.2984, 77.7728, 30.7896, 9.8426, 25.4448, 27.2952, 31.703, 188.6976, 32.6368, 52.7232, 10.8326, 633.6854, 156.2853, 114.1219, 190.608, 37.7789, 95.485, 188.9838, 96.8827, 13.4205, 483.9082, 89.9491, 51.942], [105.8846, 127.7165, 116.0712, 310.6522, 120.589, 57.4456, 9.0835, 6.8866, 111.8246, 99.9782, 404.9136, 34.2104, 0.0, 159.8592, 26.7187, 255.107, 218.7098, 131.2762, 112.512, 44.8003, 117.3442, 78.9566, 155.1022, 31.3145, 124.7154, 30.4085, 73.282], [69.552, 154.8302, 70.4424, 184.4595, 33.9452, 34.5141, 14.4734, 46.0652, 15.9365, 50.7341, 264.0019, 67.6048, 72.7963, 87.744, 28.7078, 627.8698, 199.4295, 64.3738, 103.285, 274.656, 27.3571, 118.7021, 243.3397, 96.0687, 16.4105, 341.8498, 95.3743, 63.734]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

