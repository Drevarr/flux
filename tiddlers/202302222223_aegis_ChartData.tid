created: 20230222222328000
creator: Drevarr
modified: 20230705163519918
modifier: drevarr
tags: ChartData
title: 202302222223_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery", "Fribble Bibble", "Blanco Padre Guard", "Kosair", "Drevarr Moonwillow", "Kiloak", "Kosair", "Zaylen Harker", "Sygaldry Verdandi", "Koralia Danai", "Ravioli Fetabringer", "Bella Sassy"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.26, 5.511, 1050.7998], [13.1132, 9.0463, 985.9356, 5.2085, 31.0, 44.8356, 0.8881, 33.923, 11.54, 84.4856, 67.1969, 48.7827, 44.5092], [4.2307, 22.6381, 1215.7402, 38.3636, 0.0, 5.6491, 42.6831, 4.7018, 0.0, 53.7151, 4.4144, 139.4705, 20.1839], [26.1348, 6.7439, 31.167, 6.9373, 70.7216, 72.6001, 44.1815, 31.3394, 518.1191, 240.1429, 483.6682, 95.1651], [1488.1698, 22.1501, 47.2928, 120.8488, 12.5441, 34.8556, 52.3739, 110.8096, 45.4192, 116.1188, 108.2869], [1712.4145, 91.9607, 42.4168, 107.9773, 122.4433, 41.1117, 31.4166, 195.6509, 120.7581, 265.1858, 34.4391], [2874.4101], [31.4094, 36.2596, 2409.2412, 42.4168, 62.4981, 48.3446, 34.0784, 8.684, 366.2229, 126.1535, 228.8787, 142.0284], [28.3875, 14.4979, 3345.1388, 90.2246, 89.0753, 39.687, 85.5882, 31.9412, 44.4233, 292.9427, 103.9835, 233.3571, 31.1259], [109.0996, 41.9934, 5826.6572, 45.4763, 163.5228, 270.6583, 96.3006, 79.2313, 23.5432, 384.1872, 110.1636, 390.4214, 105.3661], [67.9286, 86.3635, 6286.2663, 203.2433, 152.8591, 235.1188, 237.1159, 70.1774, 62.8718, 296.6779, 176.5757, 304.8517, 164.4792], [98.8251, 47.5341, 6395.6088, 155.7508, 146.5164, 330.0101, 165.6259, 76.7055, 44.6934, 464.7598, 334.3166, 515.4969, 91.5033]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

