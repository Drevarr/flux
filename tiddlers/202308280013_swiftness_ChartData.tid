created: 20230828001355000
creator: Drevarr
tags: ChartData
title: 202308280013_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Flick Embermage", "Pafema", "Necrotic Windrunner", "Xanvias Einzbern", "Jade Quufu", "P Ain", "Heals For Daddy", "Chocolate Teapot", "Bee Nemesis", "Ayrion", "Mom Tapper", "Gestern Yesteryear", "Unbreakable Nemesis", "Koralia Danai", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Druid", "Scourge", "Berserker", "Firebrand", "Chronomancer", "Druid", "Chronomancer", "Spellbreaker", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.2019, 97.0827, 0.0, 0.0], [58.1256, 70.56, 0.0], [79.46, 53.688], [137.692, 0.0], [281.6798, 0.0, 0.0, 0.0, 0.3468, 17.0982], [59.8728, 38.1947, 20.724, 87.7615, 0.0, 0.0, 0.0, 109.8756, 0.0, 7.45, 0.0], [10.1757, 6.384, 11.2422, 0.0, 11.1356, 22.7977, 139.8733, 16.302, 15.3569, 0.0, 0.0, 0.0, 116.4168, 15.78, 8.712], [210.3063, 0.0, 109.6742, 62.147, 0.0, 0.0, 0.0, 0.0], [0.0, 17.3073, 56.4382, 0.0, 20.7906, 0.0, 0.0, 0.0, 0.0, 180.6282, 7.029, 48.0526, 17.0665, 0.0, 0.0, 46.6578, 0.0, 0.0], [112.9386, 58.1769, 64.965, 125.6876, 0.0, 333.477, 0.0, 118.11, 50.934], [24.1458, 16.7328, 64.8348, 60.0838, 197.9334, 49.3324, 67.1949, 4.1021, 76.3476, 0.0, 104.9703, 101.013, 35.6756, 16.385, 56.3914], [133.7543, 247.8218, 195.492, 32.1552, 116.1015, 11.2304, 77.4144, 122.0058, 0.0, 28.73, 6.258], [54.495, 73.1448, 40.1201, 20.4722, 108.5883, 22.5781, 53.1237, 16.2864, 148.7699, 229.8578, 61.4983, 8.58, 101.2889, 103.0515, 2.3322, 71.9946, 0.8364, 7.5, 22.938], [20.349, 102.09, 40.02, 23.241, 129.6476, 220.704, 189.519, 120.776, 89.6825, 27.9864, 0.0, 236.6424], [450.8361, 0.0, 24.5139, 50.8124, 17.5588, 179.8871, 18.0785, 138.6, 111.8502, 41.2235, 142.9579, 0.0, 217.9296], [23.121, 41.0976, 41.8618, 42.6643, 9.9742, 29.9144, 10.0491, 12.9064, 0.0, 333.6373, 424.7925, 137.973, 126.0567, 67.4685, 74.7978, 0.0, 216.4392, 113.16, 43.734]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

