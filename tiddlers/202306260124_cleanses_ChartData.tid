created: 20230626012458000
creator: Drevarr
modified: 20230705163538130
modifier: drevarr
tags: ChartData
title: 202306260124_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Night Of The Wabbit", "Brad Bellick", "Mememonoko", "Solus Sanctus", "Morton Saltbringer", "Newtype Khan", "Eibh\u00ebar", "Primal Clone", "Miphest\u00f6", "Venomina The Siren", "Elon The Archmagus", "Elon The Mender", "Tegan Parker", "Drevarr Moonwillow", "Artakama Nahid", "Tribal S", "Arriasa"];
const professions = ["Vindicator", "Scrapper", "Vindicator", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Scrapper", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5952, 0.6571, 0.2121, 0.0, 0.2381, 0.625, 0.4355, 0.4091, 0.2674, 0.0], [0.5238, 0.7143, 0.0909, 0.0, 0.4762, 0.375, 0.3387, 0.8182, 0.2907, 0.3284], [0.009, 0.6667, 0.3111, 0.2379, 0.8302, 0.1217], [0.0, 0.4074, 0.4, 0.1331, 0.283, 0.0951, 0.2619, 0.5143, 0.2879, 0.0, 0.4048, 0.0833, 0.3548, 0.4091, 0.2442, 0.4627], [0.0, 0.2037, 0.1444, 0.2016, 0.2642, 0.057, 0.6429, 0.2857, 0.1667, 0.0, 0.4286, 1.0625, 0.2258, 0.3409, 0.7326, 0.403], [0.027, 0.3519, 0.1667, 0.1089, 0.3585, 0.0951, 0.8333, 0.3143, 0.4091, 0.0, 0.619, 0.6667, 0.371, 1.0909, 0.1628, 0.2687], [0.045, 0.5741, 0.4333, 0.1653, 0.6604, 0.1939, 0.6429, 0.9714, 0.3333, 1.4762, 0.4167, 0.0, 0.5, 0.4302, 0.0], [0.045, 0.9815, 0.4, 0.0565, 0.5849, 0.1787, 1.6429, 0.8, 0.1515, 0.1429, 0.625, 0.6613, 0.0, 0.686, 0.3731], [0.036, 0.0741, 0.1444, 0.2782, 0.9434, 0.1407, 1.4524, 0.0, 0.2879, 0.0, 0.4762, 0.75, 0.6129, 0.9773, 0.6279, 0.3881], [0.0811, 0.2963, 0.3556, 0.1411, 1.1509, 0.1255, 1.381, 0.8286, 0.0455, 0.0, 0.9524, 1.0208, 1.0806, 0.1818, 0.1628, 1.3881], [0.7424, 0.0909, 1.619, 1.375, 1.4194, 3.4318, 1.0349, 0.9851], [0.2613, 2.6111, 0.9778, 1.1452, 2.2075, 0.3194, 2.6429, 2.0], [0.0, 1.9815, 0.9778, 0.6331, 1.5849, 0.2091, 1.3333, 2.8857, 1.5152, 0.0, 0.2143, 1.1667, 1.3548, 0.3636, 0.8023, 1.0597], [0.3694, 1.9074, 1.3222, 0.8427, 1.434, 0.5665, 1.6905, 1.6286, 1.0909, 0.0, 1.1905, 1.5833, 1.2581, 1.2955, 1.7791, 0.6418], [0.1081, 2.2963, 1.1, 0.6613, 1.6226, 0.4905, 2.1905, 0.1429, 1.4545, 2.0952, 1.9583, 1.2419, 3.0455, 1.0, 1.0149], [0.7333, 0.9637, 2.6792, 0.8213, 2.381, 2.7714, 0.9394, 0.0, 2.2381, 1.6875, 1.9839, 3.7727, 0.6163, 1.5672], [0.1351, 2.6852, 1.5222, 1.004, 2.7925, 0.4411, 2.381, 0.9429, 1.8333, 0.6429, 1.6667, 1.2742, 4.3864, 1.9651, 1.2836]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

