created: 20230408001602000
creator: Drevarr
modified: 20230705163524812
modifier: drevarr
tags: ChartData
title: 202304080016_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Ark Darkness", "Gavann", "Air One Com", "Aronorf Xideliesi", "Mmathuss", "Viral Marketing", "Solus Sanctus", "Bella Sassy", "Sister Elon\u00edth", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.9672, 72.5852, 134.2433, 97.4238, 182.4912, 171.6638, 176.8752, 138.18, 44.2735, 151.9867, 43.128, 88.2432], [110.0868, 21.2753, 155.5985, 132.153, 22.7757, 135.9432, 144.5674, 66.297, 0.0, 81.806, 81.2016, 69.4944, 96.8392, 43.9229, 65.8723, 49.8464, 304.3344, 179.7327, 295.4538, 214.032, 191.7302], [23.8022, 78.3363, 129.8304, 0.0, 82.8859, 0.0, 81.1934, 283.4025, 241.9983, 380.5825, 369.9072, 135.7949, 124.6591, 291.9528, 166.5787, 116.8033], [38.6434, 22.32, 67.8008, 42.0048, 29.5798, 154.9411, 125.8915, 99.8865, 0.0, 135.9618, 0.8784, 42.2784, 84.9542, 226.7174, 43.4712, 325.1949, 190.7307, 120.2613, 65.52, 80.5334, 58.604, 72.9192, 99.4224, 67.9056, 338.5645], [129.019, 42.41, 139.4878, 37.4576, 39.6562, 127.8662, 81.9283, 142.5532, 49.2862, 146.6212, 65.8512, 75.0528, 108.2302, 103.5014, 77.3702, 287.2602, 215.7723, 171.9613, 192.9408, 153.4291, 167.5237, 246.744, 147.9139, 88.8864, 71.8213], [129.6422, 172.5932, 168.389, 121.126, 175.765, 186.301, 140.0688, 107.8612, 27.4243, 75.7251, 55.9728, 128.0736, 144.9655, 172.9373, 106.1717, 17.5232, 416.6381, 349.8633, 442.2113, 167.4816, 215.2051, 222.4022, 325.404, 266.9251, 162.0748, 348.7604], [121.8772, 221.0704, 141.6384, 105.7792, 249.2341, 111.1435, 316.3987, 155.0115, 199.1821, 117.7548, 0.0, 132.3936, 120.0843, 127.2024, 50.4662, 30.34, 270.6862, 352.6551, 351.9125, 373.6512, 206.4442, 262.1273, 469.3104, 265.8163, 40.4576, 103.9084], [121.2539, 68.8484, 126.32, 155.5142, 171.2202, 103.8629, 192.552, 188.8215, 0.0, 250.4258, 23.6592, 179.7696, 135.5502, 18.265, 70.4035, 30.1772, 367.2016, 252.4464, 394.9763, 647.088, 224.4154, 236.5927, 441.2136, 281.783, 99.9596, 674.2802], [111.1256, 86.6883, 197.4411, 151.9333, 262.323, 240.2611, 314.2176, 179.8912, 56.1746, 208.0026, 23.6016, 154.0512, 97.0553, 105.8933, 89.6328, 60.8724, 494.2934, 151.1379, 335.6388, 657.3216, 268.6694, 190.0863, 393.024, 246.7819, 68.8832, 1014.1942], [119.3062, 174.8031, 180.7267, 180.808, 136.3425, 177.6173, 369.4272, 127.008, 66.4264, 191.3337, 52.1136, 120.5856, 147.4969, 295.1386, 185.8925, 38.998, 483.7917, 147.7116, 405.375, 674.1696, 326.6266, 256.6855, 408.3696, 219.8381, 77.0988, 802.6288], [72.1187, 208.2529, 137.224, 146.6472, 167.5584, 310.1856, 305.0842, 207.8212, 60.8639, 222.4894, 43.2864, 165.312, 116.9047, 372.4022, 155.7317, 13.1128, 499.437, 284.5098, 365.7775, 702.2496, 435.6893, 157.4355, 392.5272, 273.9106, 131.5248, 1017.6428]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

