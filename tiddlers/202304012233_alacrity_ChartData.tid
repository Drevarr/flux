created: 20230401223327000
creator: Drevarr
modified: 20230705163524060
modifier: drevarr
tags: ChartData
title: 202304012233_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Svess", "Drevarr Moonwillow", "Tegan Parker", "High Sorcer Baradun", "Macette", "Zadie Miststep"];
const professions = ["Druid", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[52.8864, 80.3412, 79.3615, 40.6205, 198.2323, 33.013, 84.8367, 14.1658, 28.0055, 5.1183, 0.0, 84.4924, 0.0], [15.8189, 217.088, 11.8919, 182.0541, 13.6048, 34.8695, 13.8169, 30.6033, 10.9844, 17.5266, 8.345, 28.4099, 16.5079, 22.9824, 0.0, 0.0, 10.8403, 29.232, 22.3923, 0.0, 297.3485, 11.0765, 4.9608, 18.5259, 2.6904, 0.0, 5.4019, 18.5732, 40.1421], [40.0649, 76.2193, 42.9094, 83.1516, 171.2599, 0.0, 62.6065, 43.8583, 116.8819, 88.5362, 0.0, 44.3874, 88.6368, 0.0, 126.1231, 0.0, 658.9261, 43.9039, 0.0, 19.2875, 0.0, 0.0, 44.1946, 74.3818, 108.7218], [7.1702, 118.4486, 185.2897, 349.5195, 32.0028, 0.0, 116.2287, 28.8779, 77.7847, 25.9783, 34.8392, 127.3882, 43.0466, 0.0, 0.0, 216.5184, 0.0, 115.7776, 0.0, 323.687, 97.5538, 0.0, 0.0, 43.0467, 0.0, 85.9085, 83.1116, 52.4824], [188.9395, 547.4688, 170.0437, 564.1954, 68.799, 77.0936, 39.6739, 104.139, 0.0, 186.0741, 42.0697, 59.8979, 67.4969, 218.1686, 145.7352, 0.0, 0.0, 80.7072, 0.0, 178.7243, 0.0, 791.543, 99.008, 0.0, 107.0048, 53.669, 0.0, 72.0202, 146.3139, 127.2756], [421.5658, 613.4093, 251.2033, 358.0295, 35.4525, 166.3246, 49.4598, 89.1366, 42.3946, 165.7098, 17.9342, 0.0, 43.5327, 155.2543, 231.0703, 0.0, 0.0, 242.592, 0.0, 140.4229, 130.337, 578.7552, 50.2775, 93.1818, 43.8552, 6.4548, 60.5472, 192.9027, 103.1152]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

