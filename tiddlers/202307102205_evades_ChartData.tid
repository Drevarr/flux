created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Jrluvschu", "Luke The Knight", "Tootsie Pop Rocks", "Rangu Elfdrake", "Striptease Hercules", "Rosreipp", "Daphne Agla\u00e9", "Il Kurai Il", "Arriasa", "Zaedy Zae", "Bella Sassy", "Gabe Malhorn", "Fribble Bibble", "Glorious Gluvs", "Drevarr Moonwillow", "Ateriuz", "Kary\u00edna", "Be\u00eb", "Rozaalyna", "Cyclotechnist Farra", "Melli Dragonswrath", "Tegan Parker", "Koralia Danai", "Solus Sanctus", "Tika Fiery", "Black Raspberry Pie", "Mister Jekyll", "Irin The Undeath", "Belvyn Brightblade", "Crusader Siolith", "Philip Poundhouse", "Newtype Khan", "Nidircc", "Artakama Nahid", "Sister Elonith", "Venomina The Siren", "Sub Train", "Primal Clone", "Etcheryy", "Konztantin\u00eb", "Johosh The Mighty", "Lord Erin The Wise", "Xanvias Einzbern", "Mistwalker Cael", "Eibh\u00ebar", "No Reserv\u00e9", "Ryvalia Fazebringer", "Inedible Plant"];
const professions = ["Virtuoso", "Spellbreaker", "Scrapper", "Firebrand", "Berserker", "Weaver", "Reaper", "Scourge", "Druid", "Druid", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Scrapper", "Berserker", "Vindicator", "Scourge", "Scourge", "Scrapper", "Berserker", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Reaper", "Scourge", "Firebrand", "Firebrand", "Herald", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Tempest", "Firebrand", "Chronomancer", "Virtuoso", "Herald", "Berserker", "Weaver", "Berserker", "Vindicator", "Chronomancer", "Vindicator", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 8, 1, 0, 0, 26, 2, 1, 13, 10, 0], [6, 14, 30, 15], [21, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 0, 10, 0, 0, 3, 16, 3, 4, 3, 1, 10], [9, 0, 6, 0, 2, 7, 0, 4, 12, 0, 0, 18, 4, 5, 12, 0, 0, 0, 0], [11, 7, 43, 0, 25], [27, 0, 6, 0, 0, 2, 52], [12, 0, 0, 0, 0, 3, 5, 1, 0, 13, 0, 0, 6, 10, 6, 6, 11, 5, 1, 10, 0], [3, 0, 0, 0, 1, 2, 0, 7, 0, 8, 1, 0, 0, 2, 10, 8, 0, 3, 2, 21, 0, 22], [6, 0, 0, 0, 1, 0, 0, 9, 0, 2, 0, 0, 0, 7, 13, 1, 2, 3, 0, 2, 8, 35, 0, 7], [8, 0, 0, 3, 1, 0, 0, 10, 0, 3, 0, 0, 0, 21, 12, 0, 14, 10, 1, 10, 5, 1, 0, 7], [4, 0, 0, 0, 2, 0, 0, 3, 0, 7, 1, 0, 0, 15, 18, 5, 1, 18, 3, 0, 8, 23, 0, 0], [23, 6, 15, 6, 3, 6, 12, 21, 0, 20], [9, 0, 0, 0, 3, 0, 0, 4, 0, 1, 0, 0, 11, 17, 18, 4, 0, 13, 0, 0, 6, 18, 20], [19, 0, 0, 0, 10, 0, 2, 6, 0, 7, 0, 0, 6, 21, 0, 2, 7, 18, 0, 7, 0, 8, 0, 13], [12, 0, 0, 0, 4, 0, 0, 8, 0, 6, 1, 0, 0, 10, 1, 2, 1, 15, 2, 0, 18, 20, 0, 32], [0, 5, 1, 0, 6, 0, 1, 0, 0, 0, 29, 1, 3, 8, 0, 4, 0, 15, 42, 0, 19], [21, 0, 1, 0, 10, 0, 8, 0, 0, 3, 0, 0, 0, 14, 5, 19, 27, 10, 5, 2, 3, 6, 1, 0], [2, 0, 0, 0, 11, 0, 0, 12, 0, 3, 0, 0, 0, 16, 7, 7, 2, 10, 1, 8, 5, 19, 33], [11, 3, 0, 0, 6, 0, 3, 11, 2, 1, 0, 2, 0, 10, 3, 21, 12, 10, 1, 11, 8, 18, 0, 7], [7, 0, 0, 3, 0, 0, 19, 1, 1, 0, 0, 1, 30, 4, 7, 4, 15, 5, 1, 9, 26, 7], [8, 0, 1, 3, 0, 1, 11, 1, 1, 0, 0, 0, 17, 13, 5, 11, 9, 7, 0, 16, 21, 0, 17], [3, 0, 0, 2, 0, 1, 7, 1, 0, 0, 0, 0, 33, 12, 23, 5, 0, 0, 8, 12, 35, 0], [5, 1, 0, 0, 0, 0, 6, 0, 6, 0, 0, 0, 21, 22, 4, 2, 10, 3, 0, 6, 15, 43], [24, 0, 0, 0, 3, 0, 0, 20, 0, 2, 1, 0, 0, 12, 14, 11, 4, 3, 6, 2, 7, 26, 0, 12], [5, 0, 0, 0, 12, 0, 1, 0, 0, 6, 0, 0, 1, 28, 0, 1, 2, 46, 6, 2, 14, 14, 0, 10], [2, 0, 0, 0, 1, 0, 27, 4, 0, 9, 10, 0, 0, 7, 1, 22, 11, 2, 0, 0, 11, 16, 0, 26], [21, 0, 0, 0, 15, 0, 10, 13, 0, 9, 1, 0, 1, 33, 3, 16, 0, 0, 3, 5, 2, 19, 1], [24, 0, 0, 0, 6, 0, 5, 12, 0, 15, 1, 0, 1, 7, 9, 11, 7, 5, 0, 14, 26, 0, 17], [38, 2, 0, 0, 9, 0, 3, 16, 4, 6, 4, 0, 0, 32, 23, 17, 2, 5], [1, 0, 0, 0, 6, 0, 0, 24, 0, 5, 5, 0, 6, 15, 13, 8, 33, 22, 0, 0, 3, 14, 12], [38, 8, 44, 24, 3, 8, 40, 0, 5], [28, 0, 0, 0, 3, 0, 0, 18, 0, 3, 0, 0, 0, 11, 2, 22, 2, 23, 4, 0, 13, 26, 17], [0, 2, 4, 0, 5, 31, 1, 11, 18, 8, 3, 0, 22, 26, 0, 41], [0, 0, 0, 0, 1, 0, 0, 2, 0, 5, 0, 1, 0, 32, 0, 1, 0, 13, 8, 2, 7, 70, 33], [14, 1, 0, 0, 6, 0, 8, 3, 0, 3, 2, 3, 3, 32, 4, 18, 4, 11, 3, 0, 23, 29, 1, 8], [17, 15, 0, 4, 0, 0, 2, 0, 1, 0, 0, 9, 3, 7, 1, 23, 2, 0, 52, 27, 18], [9, 0, 0, 3, 0, 0, 10, 1, 2, 0, 5, 0, 48, 9, 0, 11, 20, 1, 6, 12, 20, 25], [8, 0, 0, 0, 2, 0, 5, 11, 0, 9, 0, 0, 0, 12, 11, 39, 5, 3, 1, 11, 21, 32, 22], [29, 0, 0, 0, 9, 1, 1, 20, 0, 4, 4, 2, 0, 40, 2, 8, 8, 24, 1, 2, 24, 24, 20], [28, 2, 0, 21, 1, 15, 5, 0, 6, 15, 1, 7, 46, 15, 3, 13, 4, 5, 13, 26, 20], [33, 0, 0, 0, 24, 0, 23, 17, 0, 2, 0, 0, 1, 28, 14, 4, 17, 10, 3, 0, 12, 43, 0, 22], [36, 0, 0, 0, 30, 0, 0, 33, 0, 7, 8, 0, 0, 44, 7, 19, 6, 47, 6, 5, 2, 9], [11, 0, 0, 1, 7, 0, 3, 30, 0, 0, 2, 0, 0, 9, 4, 43, 1, 27, 14, 6, 13, 55, 43], [46, 4, 0, 1, 15, 1, 6, 9, 4, 6, 19, 4, 10, 32, 9, 2, 42, 20, 2, 0, 10, 5, 8, 23], [21, 0, 0, 0, 6, 0, 0, 31, 0, 7, 13, 0, 0, 42, 18, 11, 7, 47, 0, 5, 13, 36, 0, 24], [32, 0, 0, 0, 8, 0, 8, 42, 0, 5, 19, 3, 16, 31, 6, 24, 19, 45, 0, 23, 36, 23], [0, 4, 0, 0, 3, 0, 4, 17, 0, 6, 3, 0, 0, 88, 7, 14, 28, 66, 13, 0, 28, 68, 0, 43], [37, 3, 0, 0, 18, 2, 5, 60, 0, 12, 9, 0, 6, 117, 24, 19, 20, 18, 23, 6, 21, 96, 98]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

