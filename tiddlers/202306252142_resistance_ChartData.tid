created: 20230625214256000
creator: Drevarr
modified: 20230705163536118
modifier: drevarr
tags: ChartData
title: 202306252142_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Wall Knot", "Yngvar The Burdened", "Ani Deasun", "Charr Surethang", "Gestern Yesteryear", "Aronorf Xideliesi", "Koralia Danai", "Tacitus Kilgore I"];
const professions = ["Dragonhunter", "Scourge", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.7345, 15.4676, 5.0541, 5.148, 14.5562, 15.0149, 10.9931, 52.492, 8.4685, 4.6483, 6.7766, 6.1664, 0.0, 9.7891], [4.7012, 22.6875, 18.9, 17.1341, 12.4654, 18.5668, 37.9804, 9.4513, 3.4784, 20.7535, 11.7172, 7.1579, 4.5778], [0.0, 0.0, 0.0, 0.0, 16.2687, 0.0, 0.0, 21.0, 112.1664, 0.0, 56.1809, 0.0, 0.0, 21.0652, 0.0], [0.0, 0.0, 7.9542, 12.181, 53.8531, 24.9948, 0.0, 72.9712, 13.965, 0.0, 28.0639, 72.9108], [38.9457, 0.0, 1.6112, 0.0, 21.0146, 19.5384, 0.0, 18.1913, 19.173, 17.7523, 16.265, 17.7755, 58.1965, 19.4431, 11.3409, 38.7376, 38.9418, 18.6629, 0.0], [8.8651, 102.3, 43.239, 86.9952, 26.8195, 73.7869, 172.7881, 9.2219, 34.5887, 87.7379, 37.5276, 19.6966, 11.183], [126.4673, 43.5103, 29.5867, 0.0, 101.5708, 86.4787, 10.9807, 91.8225, 96.033, 73.2173, 72.5705], [92.9988, 61.4359, 0.0, 7.1656, 36.1706, 130.6584, 10.6719, 32.9084, 48.84, 116.802, 0.0, 125.7208, 115.9225, 254.7036, 48.0098, 38.369, 218.3837]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

