created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Solus Luxes", "High Sorcer Baradun", "Sub Train", "The Broccoli Effect", "Luke The Ghastly", "Wren Raveness", "Sofya De Nova", "Snugglies Wugglies", "Sylia Raskae", "K\u00f4sair", "Graumas", "Legoh Brave", "Raziel Umbra", "Cupi Cupita", "Trooobi", "Philip Poundhouse", "Oo Dads Mad", "Glorious Gluvs", "Mew Mew", "Daphne Agla\u00e9", "Elon Illusionblade", "Brutal Araden", "Permanent Dawn", "Black Raspberry Pie", "Jobless Jennifer", "Rina Of Theros", "Lucky Luprac\u00e1n", "Jimbo The Pleb", "Mister Jekyll", "Loganlek", "K\u00e2 \u00d4tik R\u00e6j", "Mort\u00e4rion", "Th\u00f6rfinn Stormcloak", "Be\u00eb", "No Reserv\u00e9", "Mew Mew", "Regis Hawkesburne", "Lord Erin The Wise", "Xanvias Einzbern", "Mistwalker Cael"];
const professions = ["Tempest", "Firebrand", "Tempest", "Firebrand", "Harbinger", "Scourge", "Chronomancer", "Tempest", "Virtuoso", "Berserker", "Spellbreaker", "Thief", "Tempest", "Chronomancer", "Herald", "Herald", "Herald", "Berserker", "Berserker", "Holosmith", "Reaper", "Chronomancer", "Renegade", "Weaver", "Chronomancer", "Berserker", "Reaper", "Scrapper", "Berserker", "Reaper", "Berserker", "Berserker", "Scrapper", "Berserker", "Reaper", "Vindicator", "Scrapper", "Berserker", "Weaver", "Berserker", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 9.4274, 115.3726, 46.8261, 39.7425, 10.6575, 96.3894, 214.6732, 7.7188, 6.2111, 0.0, 119.5477], [0.0, 38.8952, 232.075, 45.1304, 14.5385, 89.0709, 45.7901, 73.5433, 52.5805, 5.5859, 7.4889, 90.3611, 114.1563], [9.7966, 64.0887, 352.6869, 156.6522, 99.9744, 70.2015, 34.558, 143.6171], [11.0169, 52.129, 216.6636, 81.6739, 13.3077, 106.5522, 55.4309, 78.0336, 160.6537, 53.3906, 21.7778, 123.1667, 141.1862], [440.3756, 121.0391, 189.4222, 451.5967], [624.6492], [66.0508, 252.121, 286.0414, 143.9565, 32.2821, 176.6269, 88.8895, 92.8047, 112.0829, 250.2578, 4.5556, 143.0833, 179.3258], [0.0678, 51.8468, 130.2768, 55.1304, 295.2051, 37.1418, 50.2044, 219.5213, 352.1171, 105.4375, 48.6, 136.0, 277.2327], [11.3051, 50.1613, 274.8551, 113.6957, 53.8462, 234.4813, 94.8785, 50.3312, 270.922, 45.5625, 53.6444, 167.7778, 336.1205], [336.8732, 0.0, 17.5444, 759.5609], [0.0, 197.7016, 458.5459, 453.8043, 0.0, 276.7201, 240.7845, 285.5653, 0.0, 0.0, 110.5278, 95.0012], [126.8261, 154.5641, 205.1903, 71.8177, 355.1384, 574.6293, 162.2031, 111.7778, 131.3056, 407.2124], [0.0, 95.7339, 492.837, 271.1522, 0.0, 225.2612, 92.8564, 84.771, 209.0683, 120.125, 96.4111, 71.1389, 597.5143], [78.2542, 331.7581, 319.2225, 1307.7391, 287.5128, 317.0336, 166.011, 392.8719, 277.9659, 24.8516, 176.2778, 305.3056, 374.6718], [113.8305, 527.9274, 1519.8525, 174.1045, 423.8619, 109.3881], [0.0169, 373.2177, 879.8564, 1293.2391, 764.7425, 722.7624, 527.6882], [255.7119, 242.371, 669.273, 723.9348, 313.6604, 325.6188, 247.0893, 0.0, 61.5278, 724.1587], [233.3729, 942.4274, 1270.5886, 576.5, 431.9851, 663.9724, 435.1734], [468.7419, 871.8215, 131.3913, 0.0, 256.3881, 278.8895, 389.6999, 503.1951, 665.6875, 22.3778, 332.5556, 424.2852], [697.2823, 2141.9263], [0.7966, 532.5645, 688.4347, 737.8043, 340.1642, 362.5138, 456.9974, 557.039, 300.1641, 240.7889, 606.3056, 520.1587], [0.0, 306.4919, 1110.6171, 795.1522, 36.2051, 394.7836, 528.1547, 480.5433, 673.4293, 313.8281, 180.4333, 240.5, 629.5358], [186.7797, 129.629, 815.8745, 391.2826, 29.9744, 327.1306, 181.558, 791.1514, 866.2049, 401.8906, 55.0333, 112.2222, 797.222], [0.0, 25.5887, 385.2652, 1648.1522, 82.6154, 669.5037, 955.4475, 673.6792, 503.2732, 1.8594, 102.1556, 247.3056, 1235.5549], [147.1186, 347.8548, 953.2924, 1156.9783, 524.653, 482.0663, 635.4528, 855.3951, 255.2812, 222.0667, 275.25, 742.1993], [4.5932, 1010.1129, 1506.8965, 2872.4348, 200.5385, 927.153, 924.1271, 752.0647], [51.9661, 842.8065, 1130.8512, 1151.4348, 168.2564, 462.6866, 429.7735, 479.3454, 607.6976, 471.2031, 196.9778, 245.6944, 754.4033], [7.4746, 675.7097, 379.5873, 2172.413, 25.5385, 1028.9963, 874.7182, 743.8499, 952.9317, 745.6719, 517.0333, 32.6667, 860.006], [67.5254, 887.5565, 1424.2743, 1826.2826, 249.2821, 966.0, 642.221, 846.4023, 563.6537, 549.3047, 255.6667, 179.0833], [0.7119, 716.3629, 1423.3273, 1092.9565, 6.0, 711.9627, 702.2652, 731.6041, 228.6195, 689.9375, 287.2444, 348.1389, 497.3305], [190.4068, 500.9355, 1888.2833, 391.9348, 43.6154, 470.0821, 721.989, 604.674, 267.2, 200.0547, 202.5889, 55.9167, 617.7673], [85.2373, 829.5161, 1582.0207, 1354.913, 1016.291, 724.8895, 499.8396, 417.1854, 137.5078, 120.2889, 123.6944, 721.9618], [549.1017, 421.2984, 1702.2471, 1781.3478, 0.0, 429.2687, 0.0, 689.5809, 860.4537, 836.2344, 544.4333, 300.8333, 577.2339], [26.5763, 1338.8306, 2371.9677, 1911.6739, 1025.4776, 1113.1436, 764.9366], [0.0, 735.0806, 1727.4994, 2741.8913, 311.9487, 910.3396, 969.558, 865.9405, 1348.2244, 365.7578, 184.6778, 324.7778, 383.6838], [22.3729, 657.3065, 1485.9987, 1598.3696, 100.8718, 843.041, 777.2431, 714.185, 1190.2829, 550.1797, 53.4556, 363.1389, 963.6432], [680.7391, 1246.291, 1608.7182, 1594.8887, 788.3854, 1315.7109, 446.9667, 670.3611, 1549.7196], [164.9492, 603.7339, 1803.4942, 1952.0217, 40.0513, 800.3097, 551.7956, 649.6261, 1068.1073, 387.7188, 558.8, 167.75, 1064.469], [285.3729, 952.379, 1783.9431, 708.8696, 522.6642, 812.8122, 1043.9897, 854.9073, 821.4062, 272.8556, 361.3611, 1517.3031], [4.8814, 1820.6129, 3801.2613, 3654.7609, 1484.9888, 1730.8066, 1232.445, 1064.161, 557.4062, 421.3222, 1537.5556, 514.6062], [193.2034, 735.7419, 2400.1578, 3482.5435, 596.7692, 1312.0187, 1331.7017, 1507.5653, 1578.6683, 497.0781, 416.0556, 1581.0556, 2018.0728]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

