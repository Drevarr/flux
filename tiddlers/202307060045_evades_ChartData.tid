created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Zaedy Zae", "Mistwalker Cael", "Newtype Khan", "Grasszanine", "River No Hug", "Sygaldry Verdandi", "Solus Sanctus", "Stoic Rapidfire", "Tegan Parker", "Primal Clone", "Legacy Of Mathus", "Tika Fiery", "Xyntharos", "Ryvalia Fazebringer", "Kary\u00edna", "Johosh The Mighty", "Eibh\u00ebar"];
const professions = ["Tempest", "Druid", "Vindicator", "Spellbreaker", "Berserker", "Reaper", "Firebrand", "Firebrand", "Druid", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Chronomancer", "Vindicator", "Berserker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 6, 5, 1, 9], [0, 5, 0, 0, 2, 7, 3, 3, 14, 5, 7, 2], [19, 9, 10, 12], [8, 5, 3, 1, 0, 5, 5, 4, 7, 9, 10], [10, 1, 3, 9, 5, 2, 9, 9, 2, 1, 8], [0, 1, 11, 4, 0, 9, 5, 3, 0, 9, 19], [3, 0, 0, 0, 7, 6, 6, 6, 13, 17, 5, 2], [7, 1, 4, 1, 2, 1, 7, 12, 10, 10, 11, 0], [4, 5, 13, 17, 6, 19, 9, 0], [3, 4, 4, 2, 1, 16, 8, 7, 8, 11, 8, 15], [10, 7, 3, 6, 10, 14, 12, 6, 3, 10, 11], [3, 4, 11, 13, 5, 13, 13, 14, 8, 1, 2, 8], [10, 11, 14, 2, 5, 7, 4, 14, 12, 9, 13, 1], [26, 12, 22, 17, 18, 11, 2], [2, 0, 4, 0, 2, 14, 16, 22, 18, 17, 18], [2, 9, 5, 17, 20, 16, 5, 17, 1, 13, 23, 0], [7, 5, 19, 10, 10, 13, 12, 14, 8, 12, 26], [17, 13, 12, 7, 6, 25, 12, 23, 9, 11, 8, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

