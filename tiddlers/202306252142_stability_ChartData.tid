created: 20230625214256000
creator: Drevarr
modified: 20230705163536166
modifier: drevarr
tags: ChartData
title: 202306252142_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Shrimp Tempsura", "No Reserv\u00e9", "Wall Knot", "Wall Knot", "Hayuf", "Tacitus Kilgore I", "Aronorf Xideliesi", "Blaze All Might", "Booboo Hurts", "Gestern Yesteryear", "Koralia Danai"];
const professions = ["Tempest", "Vindicator", "Firebrand", "Dragonhunter", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.526, 5.2042, 1.4742, 0.6667, 3.2906, 0.8081, 0.5239, 0.0], [1.8966, 0.3259, 0.0, 0.1442, 1.2672, 2.2108, 3.4102, 2.2499, 1.155, 1.596], [0.0, 8.1675, 6.909, 5.0342, 4.9995], [4.9377, 2.037, 0.0, 1.5523, 1.5898, 4.1023, 2.7412, 7.506, 1.3432, 1.1448, 1.5638, 0.2309, 0.0, 1.9562], [5.1995, 8.4215, 16.1129, 0.0, 1.9499, 5.5386, 2.1549], [2.9921, 1.0049, 0.0, 0.424, 2.4869, 3.0802, 0.8024, 1.7797, 3.465, 2.415, 0.0, 2.7775, 4.5499, 6.8555, 3.4234, 1.5977, 5.2454], [0.2351, 11.55, 5.04, 4.2835, 5.2439, 6.1324, 12.7102, 3.4234, 1.3523, 8.5034, 3.2804, 2.032, 1.2038], [6.4746, 0.0, 2.2854, 4.3502, 5.8529, 5.738, 0.2307, 12.156, 10.395, 5.691, 13.3363], [0.0, 2.0776, 2.1701, 3.4528, 3.4604, 2.5857, 10.3537, 4.725, 6.889, 6.6438, 9.5236, 14.3114, 0.5078, 1.5599, 3.1277, 2.4723, 0.177, 0.9108], [5.3465, 4.2098, 3.1291, 2.6374, 4.1731, 5.1955, 0.3022, 6.1463, 7.014, 4.2835, 6.3327, 9.6932, 9.5576, 5.9787, 2.7361, 12.2501, 7.013, 3.4763, 0.8158], [10.464, 9.669, 3.9093, 4.5698, 8.1724, 7.4623, 6.5817, 20.295, 9.891, 11.7907, 10.9989]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

