created: 20230429000309000
creator: Drevarr
modified: 20230705163527271
modifier: drevarr
tags: ChartData
title: 202304290003_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Khailerian", "Venomina The Siren", "Endless Endings", "Cat Wigglebooty", "Tika Rucola", "Rudjulin", "Primal Clone", "Hyde En Sikh", "Badd Sain", "Viral Marketing", "Zadie Miststep", "Air One Com", "Aronorf Xideliesi", "Arriasa", "Miphest\u00f6", "Sister Elon\u00edth", "Drevarr Moonwillow", "Koralia Danai", "Bella Sassy", "Johosh The Great"];
const professions = ["Tempest", "Vindicator", "Tempest", "Spellbreaker", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Willbender", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Druid", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.9496, 18.9912, 12.1509, 89.9325, 19.0457, 0.0, 28.3034, 0.0, 18.4623, 0.0, 0.0, 262.222], [38.2415, 0.0, 72.5088, 0.0, 422.1688, 6.2143, 0.0, 37.8629, 0.0, 0.0, 0.0, 0.0, 0.0, 133.0438], [132.6776, 41.4564, 62.098, 0.0, 156.7395, 115.0225, 4.5814, 45.1106, 7.3032, 0.0, 14.839, 0.0, 0.0, 136.9095], [262.089, 22.2104, 16.6711, 47.9222, 0.0, 0.0, 21.0984, 0.0, 50.4398, 366.5953], [98.1581, 110.3188, 56.2973, 348.4242, 55.8713, 12.5563, 119.8366, 18.6456, 12.5025, 0.0, 0.0, 29.2789, 29.3147], [44.0799, 89.0888, 37.3993, 0.0, 229.7133, 29.2303, 48.1467, 72.1019, 0.0, 23.6447, 3.6153, 0.0, 26.8976, 350.8105], [988.0034], [58.8219, 78.5124, 17.1579, 227.4007, 105.4708, 19.8526, 83.2234, 13.8312, 0.0, 15.0009, 32.2889, 53.1458, 312.1537], [71.5204, 88.4712, 33.6135, 4.5472, 313.479, 57.4825, 0.0, 62.6674, 0.0, 21.4422, 57.3325, 45.2599, 29.2248, 365.6289], [79.1406, 116.576, 32.0695, 126.0846, 16.0344, 163.0513, 40.443, 64.6394, 124.6384, 538.6181], [137.9651, 837.1431, 110.3042, 30.203, 158.0119, 0.0, 0.0, 58.3038, 0.0, 23.5422], [132.2398, 188.4452, 46.3445, 25.1978, 284.1867, 50.8654, 21.5069, 73.414, 42.4728, 97.9474, 0.0, 0.0, 14.1253, 388.823], [161.2858, 151.8524, 41.765, 440.1553, 67.3218, 0.0, 86.4723, 0.0, 0.0, 0.0, 0.0, 19.2126, 729.6471], [261.0495, 56.4332, 123.097, 16.025, 763.3985, 123.0781, 20.8706, 173.1321, 69.8496, 76.7643, 62.5396, 54.6261, 54.7694, 599.5025], [208.6498, 219.5568, 68.1735, 597.1518, 158.0624, 93.7058, 144.6412, 39.576, 112.7172, 17.9957, 63.7151, 113.1108, 746.3984], [200.695, 170.1488, 133.1719, 491.8023, 108.0601, 21.5069, 213.6191, 74.9496, 143.5525, 16.7816, 20.92, 10.2287, 999.2783], [429.3413, 466.288, 128.6839, 26.3424, 1308.1325, 170.0307, 48.6557, 319.4602, 32.8848, 97.9474, 153.5162], [258.7871, 315.2076, 83.2858, 0.0, 761.5998, 162.7231, 115.5945, 147.2654, 25.908, 64.9096, 118.4692, 46.061, 155.3785, 1094.9539], [304.1806, 257.9252, 131.798, 1013.4108, 16.5715, 88.3184, 331.7063, 0.0, 73.331, 0.0, 15.0045, 22.8928, 1774.9914], [278.9296, 249.5876, 155.3672, 0.0, 837.657, 257.6641, 27.3185, 273.9123, 125.9904, 232.1067, 134.873, 117.725, 249.0602, 1300.8013], [293.7445, 351.9548, 155.2145, 0.0, 1370.3144, 158.1199, 45.1349, 244.2343, 17.5032, 8.0327, 68.0975, 0.0, 59.9108, 1751.4752]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

