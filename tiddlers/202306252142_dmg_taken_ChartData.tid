created: 20230625214256000
creator: Drevarr
modified: 20230705163535983
modifier: drevarr
tags: ChartData
title: 202306252142_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Yedrax", "Drumina", "Tacitus Kilgore I", "Yngvar The Burdened", "Aronorf Xideliesi", "Charr Surethang", "Elonith Requiem", "Jerryatric Reflexes", "Drevarr Moonwillow", "Scythe User", "Latedoctor", "Fluffy No Care Bear", "Ani Deasun", "Vesnan", "Booboo Hurts", "Govinda Ektar", "Wall Knot", "Drac Tepes", "Shrimp Tempsura", "Elonith Requiem", "Drev Of The Dead", "Melpomene Vandrish", "Koralia Danai", "Hayuf", "Gamora Titus", "Blaze All Might", "Ateriuz", "No Reserv\u00e9", "Wall Knot", "Hayuf", "Xanvias Tsolice", "Surethang", "Liyo Morgaine", "Vesnan", "Arriasa", "Liyo Morgaine", "Vesnan"];
const professions = ["Firebrand", "Scrapper", "Druid", "Spellbreaker", "Scourge", "Firebrand", "Spellbreaker", "Reaper", "Berserker", "Scrapper", "Reaper", "Reaper", "Berserker", "Vindicator", "Scourge", "Firebrand", "Vindicator", "Dragonhunter", "Scourge", "Tempest", "Scourge", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Dragonhunter", "Weaver", "Guardian", "Herald", "Reaper", "Druid", "Vindicator", "Harbinger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[351.7685, 544.0118, 3443.5, 167.625, 169.6333, 2329.7021, 31.0893, 481.172, 1237.32, 1014.1852, 2739.1905, 1355.3154, 663.673, 13.64, 636.2571, 534.1871, 202.6667, 3935.037, 2825.7692], [493.9933, 1987.8243, 709.2333, 2416.7917, 1969.4622, 511.4873, 13.6216, 926.5833, 1620.8707, 451.28, 5792.0, 1721.6136], [998.5514, 430.2353, 3901.2, 139.0, 998.6604, 1056.8983, 111.9767, 550.5442, 1692.0533, 821.8383, 625.8587, 745.949, 661.5328, 6.7105, 140.25, 670.0476, 198.3393, 4282.8333, 3173.7407], [366.3148, 610.2907, 22.3387, 468.2258, 220.6316, 159.9635, 1218.7458, 19.2958, 567.4855, 1072.9508, 1156.7051, 1129.0106, 1456.3217, 883.0919, 50.9818, 588.9444, 657.777], [116.3214, 402.7365, 820.012, 1051.1758, 2576.4889, 1414.8866, 659.4786, 29.4225, 684.4444, 645.6826, 487.65, 6268.0667, 1578.2791], [34.4286, 296.391, 2158.8909, 1177.7946, 912.3936, 1528.9717, 811.8599, 3.7931, 141.3056, 535.9359, 294.3472, 1157.3784, 215.0], [71.8481, 2782.2581, 841.6071, 133.0833, 458.9167, 2317.1364, 2.0541, 569.4156, 2469.1795, 859.8725, 2265.2157, 2236.2581], [663.1883, 2732.9811, 1312.4487, 939.2375, 13.2267, 150.9412, 1176.6929], [796.7195, 1335.1304, 778.4855, 639.54, 1428.947, 461.4554, 35.1222, 213.75, 399.0809, 165.1385, 564.2667, 1691.2727], [857.1852, 1258.6724, 4.6613, 91.22, 229.2083, 204.741, 2934.0323, 107.0588, 667.0255, 1762.8909, 1016.7215, 2925.1915], [1016.9259, 638.5233, 268.5303, 2394.0625, 355.4318, 395.2336, 1953.3509, 84.6905, 604.3694, 2595.0189, 519.3425], [2331.8469, 950.3674, 0.4189, 271.4054, 535.1593, 270.4521, 4335.2667, 537.3455], [212.1884, 3322.5714, 189.5, 255.2636, 2643.6061, 204.8, 774.4444, 2008.0189, 1409.2256, 1652.8421], [310.951, 434.1646, 86.3333, 90.0803, 757.3729, 15.9818, 224.6667, 1211.3924, 727.5, 315.2708, 1213.4706, 602.3903, 23.411, 770.9697, 266.1592], [107.1613, 165.2917, 501.402, 10586.1111, 21.2109, 984.8477, 2250.1045, 978.7706, 406.6522, 55.1799, 464.1636, 0.0, 117.8302], [0.0, 9.84, 201.2083, 241.3308, 529.5424, 0.0, 258.6815, 1361.1111, 703.5267, 145.4022, 935.0823, 831.8911, 0.0, 82.9167, 113.5525, 180.4483, 125.7632, 160.22], [902.5833, 2250.7647, 913.4131, 12.6813, 42.6944, 544.1212, 4402.8846, 3.9583], [616.4815, 434.3605, 420.4878, 85.8333, 174.3333, 753.9153, 354.9512, 739.4982, 124.9104, 271.8333, 1643.2537, 361.4058, 175.3833, 1368.9818], [1426.2766, 914.4659, 25.8533, 692.7778, 323.5933, 313.2639, 2756.0417, 7426.2857], [1019.6968, 713.5741, 13.3793, 99.1944, 847.8881, 64.6333, 3386.2, 2584.3462], [1211.537, 911.1205, 750.7222, 207.5, 272.8148, 1096.6833, 149.6552, 935.3924, 1614.0714], [1605.7798, 1022.4297, 74.0789, 651.4444, 405.9944], [214.8085, 3014.6471, 2520.6957, 226.4583, 379.4186, 6925.5556, 48.7429, 631.8808, 6657.875, 1067.8525, 1638.3469], [335.1313, 362.8354, 32.125, 109.7083, 171.4786, 1534.4833, 0.0, 254.6346, 2050.8039, 806.7436, 700.5773], [1718.2222, 1096.5414, 684.346, 2655.7619, 35.8378, 115.809, 72.0667], [594.4722, 302.241, 42.2, 55.9787, 169.6667, 248.4361, 1161.5424, 37.3051, 201.2628, 371.3452, 831.2387, 975.1263], [429.3832, 822.4091, 0.0, 65.5588, 116.0417, 550.0545, 4881.2308, 10.0952, 185.9557, 1930.6111, 549.9351], [62.8692, 503.5223, 1662.9265, 890.6779, 1614.6765], [721.578, 433.5875, 0.0, 68.2791, 154.4167, 302.6884, 1826.2, 37.5175, 457.9474, 1651.8036], [44.6909, 323.6203, 678.1667, 665.1905, 1126.0741], [0.0, 494.9651, 0.0, 86.6, 122.7917, 147.9765, 765.0169, 18.5579, 513.2595, 376.8214, 550.0089], [101.4653, 326.1282, 743.8929, 435.7975, 549.6667], [774.7695, 70.8152, 185.2222, 142.3136, 240.8667], [49.7103, 576.5636, 3133.6957, 403.5241], [0.0, 317.1263, 906.7584], [0.0, 210.3333, 736.9365, 75.6136, 212.7192, 304.1111], [1932.6333], [1139.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

