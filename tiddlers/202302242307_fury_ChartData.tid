created: 20230224230708000
creator: Drevarr
modified: 20230705163520105
modifier: drevarr
tags: ChartData
title: 202302242307_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Mike The Archmagus", "Burnhard Riemann", "Xanvias Tseli", "Luck Engi", "Sofya De Nova", "Irish Necroman", "Lord Erin The Wise", "Arriasa", "Mistwalker Caelon", "Arcanophage Farra", "Project Jupiter", "Drevarr Moonwillow"];
const professions = ["Berserker", "Tempest", "Berserker", "Berserker", "Scrapper", "Catalyst", "Scourge", "Weaver", "Druid", "Vindicator", "Spellbreaker", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 38.6272, 0.0, 0.0, 0.0, 0.0, 0.0, 120.9283, 0.0, 0.0, 0.0, 290.3832, 26.4046, 0.0, 79.9053, 48.6384, 0.0, 0.0, 0.0, 54.6048, 95.4074, 0.0, 0.0], [57.7779, 52.5096, 43.7088, 29.3395, 22.8816, 29.3265, 58.434, 66.5293, 0.0, 29.3288, 28.9061, 0.0, 0.0, 43.6526, 0.0, 29.232, 21.8903, 21.0701, 58.389, 12.9989, 52.7475, 29.4078, 29.3, 19.8178, 43.0416, 24.1056, 56.7743, 29.2011, 29.4784], [47.921, 105.2314, 29.9558, 0.0, 41.6304, 111.3755, 24.0208, 34.6053, 0.0, 0.0, 0.0, 0.0, 81.2875, 0.0, 0.0, 0.0, 124.2778, 101.035, 81.8165, 5.8957, 0.0, 0.0, 0.0, 0.0, 138.5424, 43.5149, 42.0121, 0.0], [0.0, 69.3763, 0.0, 0.0, 0.0, 83.0917, 61.1721, 34.5215, 0.0, 0.0, 0.0, 0.0, 0.0, 95.9021, 0.0, 0.0, 0.0, 132.2237, 111.0488, 124.0982, 97.0906, 148.4367, 0.0, 0.0, 67.2672, 103.2048, 71.4802, 89.5147, 0.0], [150.0619, 15.5759, 96.732, 34.5929, 93.9226, 90.2738, 80.8253, 118.5408, 71.7576, 30.5936, 1.3738, 190.2768, 117.3312, 132.4735, 64.8687, 37.631], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 38.6991, 43.9118, 28.2342, 16.16, 234.1195, 15.7986, 85.356, 41.6993, 84.816, 58.0901, 46.1899, 103.8643, 86.7349, 59.9152, 18.4949, 124.4992, 73.872, 119.6962, 57.2634, 28.2578], [86.856, 118.9352, 196.1026, 37.8976, 95.796, 38.2603, 79.9502, 76.8224, 72.0178, 38.1965, 47.0282, 69.186, 80.7466, 107.2512, 89.1216, 140.9715, 61.7371, 66.1422], [103.8114, 109.5806, 135.8592, 76.439, 46.5696, 93.519, 67.1462, 50.7767, 37.6839, 24.0867, 0.0, 23.56, 225.1406, 15.8145, 81.792, 26.078, 89.8157, 75.6268, 34.2672, 80.3443, 50.7954, 28.0711, 15.9509, 156.0944, 39.7008, 56.7141, 44.0049, 40.3255], [32.8779, 20.9093, 235.6478, 34.7793, 99.108, 67.7519, 166.2394, 153.047, 19.9373, 66.4832, 70.5424, 68.6902, 47.9544, 308.504, 118.7568, 164.5974, 125.589, 76.0681], [204.5819, 138.5405, 77.1725, 36.1594, 54.7008, 48.2258, 87.1842, 95.1017, 11.0848, 15.8746, 45.229, 6.0614, 20.248, 151.3037, 28.9403, 53.856, 23.9587, 54.4608, 84.9431, 48.6538, 117.5373, 3.0076, 41.3952, 24.0154, 130.144, 96.6384, 93.5993, 69.261, 44.4709], [363.3399, 259.2595, 111.6384, 172.8048, 154.1232, 162.143, 98.3234, 493.6069, 88.4493, 82.6106, 128.4662, 79.8746, 13.28, 413.6016, 111.72, 70.848, 94.6166, 170.3909, 288.6571, 142.6762, 278.6022, 134.3707, 94.7778, 98.2238, 354.8384, 260.4869, 187.4074], [674.9838, 336.0614, 205.6262, 117.7133, 134.568, 231.0928, 244.1905, 303.9063, 109.701, 97.8318, 137.4038, 45.1066, 352.0867, 48.8596, 232.488, 92.0279, 230.6102, 221.5495, 163.2082, 342.2003, 146.067, 112.2414, 100.9205, 450.7216, 234.7488, 335.1012, 196.3548, 81.2038], [526.1875, 341.3654, 371.3856, 291.2285, 258.8208, 316.0745, 201.314, 583.5974, 165.9056, 100.0444, 110.6146, 108.9747, 42.288, 569.5858, 64.4037, 190.044, 63.3866, 300.9182, 348.0923, 210.0778, 337.8726, 125.0441, 116.0144, 69.5784, 436.296, 278.424, 454.6769, 256.4243, 189.583]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

