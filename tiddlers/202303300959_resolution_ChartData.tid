created: 20230330095927000
creator: Drevarr
modified: 20230705163523516
modifier: drevarr
tags: ChartData
title: 202303300959_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Einar Xxl", "Gavann", "Ark Darkness", "Rafaellagabriela", "Solus Sanctus", "Sygaldry Verdandi", "Zaylen Harker", "Sister Elon\u00edth", "Johosh The Great", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 70.9919, 0.0, 23.7261, 1969.2624], [1583.2608, 72.2155, 60.5849, 15.2482, 188.7328, 59.305, 101.1675], [1851.4992, 176.1137, 183.2939, 199.8878, 147.44, 56.3285, 1.3675, 261.32, 0.0, 254.7072], [0.0, 21.2755, 4621.1152], [2634.4064, 221.1209, 251.8829, 35.6197, 412.2889, 398.0059, 0.0, 11.4787, 298.9788, 36.0426, 357.8688], [17.8675, 532.622, 0.0, 334.0586, 2392.3376, 180.5552, 219.0045, 17.577, 434.0136, 210.263, 0.0, 20.2699, 258.735, 14.5022, 207.0144], [423.7596, 0.0, 279.5889, 6468.2528, 131.0078, 233.2272, 67.4932, 306.4612, 195.156, 0.0, 0.0, 258.1475, 0.0, 198.2016], [0.0, 499.1352, 0.0, 273.908, 9165.9024, 164.4013, 245.3564, 63.8685, 251.271, 267.9394, 263.8462, 17.7659, 402.6816], [116.932, 345.1976, 11261.6512, 190.2278, 281.067, 43.3148, 275.3119, 225.0331, 0.0, 347.2713, 85.5657, 351.072], [0.0, 798.6894, 48.208, 594.377, 12258.2768, 121.3681, 300.7079, 46.4535, 440.6428, 246.5986, 6.048, 153.22, 78.6977, 288.6336], [78.5203, 736.3432, 91.724, 628.7965, 11968.2304, 174.8964, 311.0516, 124.0717, 480.8973, 371.3861, 51.529, 428.2287, 70.4959, 343.584], [0.0, 744.38, 64.032, 515.0674, 13496.9712, 237.6696, 196.1005, 63.099, 360.1338, 441.193, 0.0, 350.15, 70.0702, 428.544]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

