created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Necrotic Windrunner", "Inedible Plant", "Aira Draugr", "Zaedy Zae", "Elementsofmathus", "Kurtis Ruhr", "Arcanophage Farra", "Newtype Khan", "K\u00e2 \u00d4tik R\u00e6j", "Sister Elonith", "Lord Sahan", "Xanvias Einzbern", "Revitiel", "Imalou", "Mistwalker Cael", "Ryvalia Fazebringer", "Squishy Jellyfish", "Sub Train", "Sygaldry Verdandi", "Gabe Malhorn", "Crusader Siolith", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Druid", "Scourge", "Vindicator", "Herald", "Druid", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Berserker", "Berserker", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.8064, 1.9176, 0.6145, 0.0, 1.3818, 0.8193, 0.8085, 0.7018, 2.8339, 0.7448, 0.0, 1.5523, 2.2574, 8.1907], [0.0, 0.0, 0.2256, 0.0, 0.0, 2.3491, 0.0, 0.7718, 0.0, 6.3763, 0.5214, 0.0, 1.1211, 3.0542, 8.532], [0.0, 0.0, 0.0, 0.0, 0.0, 7.1854, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0533, 3.187, 9.5558], [0.0, 5.6448, 11.7312, 3.8916, 0.0, 2.0727, 0.8938, 2.352, 0.0, 0.0], [0.0, 1.68, 3.1584, 2.253, 1.1495, 2.2109, 0.0, 0.6982, 0.0, 0.0, 5.6678, 0.782, 0.8227, 2.3285, 4.5149, 5.8018], [0.0, 1.6128, 2.82, 2.5602, 1.0496, 4.1454, 1.9365, 0.4778, 0.0, 6.1402, 1.0055, 0.3219, 1.811, 1.4607, 9.5558], [35.8963], [2.1996, 1.8144, 0.0, 0.0, 0.0, 0.0, 0.0, 3.4912, 0.0, 0.0, 0.0, 2.3461, 0.0, 4.3982, 7.0379, 15.0163], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.205, 0.0, 6.8486, 1.862, 2.4324, 1.811, 5.71, 17.4053], [0.0, 2.4192, 0.0, 0.0, 1.4994, 8.2908, 1.2662, 1.3965, 1.0647, 0.9701, 10.8634, 1.2289, 0.0, 1.3798, 1.1951, 19.453], [0.0, 2.7552, 2.3688, 2.7651, 1.4994, 3.5927, 0.0, 1.8375, 0.9009, 0.0, 11.808, 1.2289, 0.0, 2.2422, 3.5853, 17.064], [10.6506, 8.5628, 0.9009, 5.2219, 34.4794], [0.5414, 4.9728, 6.204, 3.8916, 1.7993, 6.4945, 1.4151, 1.4332, 0.9009, 1.2178, 13.9334, 1.1544, 1.2162, 8.0203, 6.6395, 26.9611], [0.0677, 0.0, 0.0, 9.9338, 1.5994, 19.7597, 2.6068, 5.292, 0.805, 20.5459, 0.6703, 3.5055, 7.2442, 8.1002, 12.2861], [6.1975, 10.3635, 0.5214, 2.5725, 0.0, 17.2397, 1.7875, 0.2146, 12.6773, 4.5149, 37.1995], [0.0, 0.0, 4.0608, 6.9639, 3.4986, 9.8108, 0.0, 1.8007, 1.8701, 3.4262, 14.4058, 2.7185, 0.0, 6.2955, 9.9593, 43.3426], [0.0, 5.5104, 7.332, 1.8434, 1.7993, 15.338, 2.6813, 0.0, 2.7573, 1.7338, 19.129, 2.7558, 0.3935, 4.1395, 7.3035, 62.4542], [0.0, 10.2816, 12.1824, 4.3012, 9.1463, 13.2653, 1.4151, 4.7775, 0.0, 2.9928, 20.7821, 5.9212, 0.0, 8.3653, 9.5609, 48.803], [2.2848, 13.0848, 6.8615, 8.3966, 12.0217, 0.0, 6.0637, 0.0, 0.0, 32.5901, 6.6287, 0.2504, 13.6259, 8.7641, 65.5258], [0.3046, 7.1904, 16.6944, 9.4217, 7.2971, 14.6471, 2.5323, 1.9845, 0.0, 1.4448, 26.2138, 4.9157, 0.2146, 13.6259, 15.2708, 66.2083], [0.5753, 9.072, 18.8376, 21.1989, 7.547, 21.6943, 4.3943, 6.7988, 2.5116, 3.9422, 49.5936, 7.1128, 1.1089, 15.9544, 16.8643, 75.4229], [1.1167, 15.9936, 17.9352, 17.8193, 7.0972, 24.1815, 3.5006, 7.5705, 0.0, 4.2931, 49.8298, 6.8894, 0.0, 25.7858, 20.3169, 67.9147], [0.2369, 13.8432, 21.3192, 21.0965, 6.7973, 25.2869, 11.3954, 12.0173, 4.6027, 24.7968, 8.4162, 2.9331, 23.0261, 29.3466, 87.0264], [1.1167, 10.1472, 26.2824, 21.5061, 8.4466, 23.2142, 8.1928, 9.5183, 2.4979, 1.1971, 46.0512, 11.5816, 0.2146, 22.3362, 20.0513, 91.463], [8.4938, 18.0096, 29.892, 23.5543, 9.2463, 33.1632, 12.3637, 6.8722, 3.4398, 5.2219, 60.2208, 11.023, 3.6843, 29.4941, 36.65, 93.1694]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

