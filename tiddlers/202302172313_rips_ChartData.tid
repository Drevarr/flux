created: 20230217231312000
creator: Drevarr
modified: 20230705163519512
modifier: drevarr
tags: ChartData
title: 202302172313_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Daring Deathblade", "King Squid", "Seren Nightroad", "Newtype Khan", "Nelliel T", "Eva Akos", "Panther B Me", "Arcanophage Farra", "Smol Gluvs", "Primal Clone", "Arka\u00f1", "Rina Of Theros", "Be\u00eb", "Bambiae"];
const professions = ["Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.03, 0.5625, 0.2222, 0.0253, 0.4314, 1.2, 0.0305, 0.2268, 0.8727], [0.3188, 0.7018, 0.25, 0.4375, 0.7935, 0.0943, 0.2807, 0.0, 0.0, 0.1562, 0.0275], [0.5652, 0.5263, 0.075, 0.4531, 0.7609, 0.0566, 0.0702, 0.5686, 0.0, 0.1209, 0.1371, 0.0375], [0.1429, 0.1202, 0.5566, 0.125, 0.8037, 0.01, 0.2083, 0.2639, 0.56, 0.0549, 0.2371, 1.1455], [0.1014, 0.6842, 0.025, 0.5625, 0.2935, 0.6792, 0.0, 0.1176, 0.0938, 0.1593, 0.0161, 0.0, 0.0, 0.3214, 0.0558, 0.5, 0.9167, 0.0, 0.0, 0.0, 0.1389, 0.0, 0.2157, 0.64, 0.0, 0.2577, 0.0], [0.378, 0.1, 0.8036, 0.1073, 0.4151, 0.0, 0.5234, 0.08, 0.75, 0.3333, 0.0127, 0.9804, 2.36, 0.0366, 0.4124], [0.4348, 0.2281, 0.0, 0.3984, 0.6196, 0.5472, 0.2982, 0.0741, 0.549, 0.0312, 0.3132, 0.2097, 0.0, 0.45, 0.4821, 0.0601, 0.2642, 0.0, 0.6168, 0.0, 0.125, 0.1944, 0.0, 0.2549, 0.0, 0.0122, 0.3711, 0.8364], [0.1449, 0.193, 0.075, 0.6562, 0.5217, 0.5472, 0.2105, 0.3333, 0.2188, 0.1648, 0.2903, 0.5375, 0.7857, 0.2103, 0.2642, 0.0, 0.4112, 0.0, 0.0833, 0.0972, 0.0, 0.3725, 1.6, 0.0, 0.3918, 0.7091], [0.4348, 0.4035, 0.125, 0.7266, 0.913, 1.0, 0.8772, 0.0741, 0.6471, 0.1562, 0.1209, 0.2419, 0.0488, 0.9375, 0.3214, 0.3176, 0.4245, 0.0, 0.215, 0.0, 0.8125, 0.6528, 0.1013, 0.2353, 0.76, 0.0671, 0.4124, 0.8727], [0.3768, 0.7368, 0.7, 0.3906, 0.8152, 1.0377, 0.0175, 0.5098, 0.375, 0.7418, 0.3468, 0.2195, 0.5875, 0.3214, 0.2833, 0.2547, 0.8411, 0.06, 0.1458, 0.6667, 0.1899, 0.1176, 1.04, 0.0366, 0.3093, 0.6182], [1.1739, 0.4912, 0.425, 0.7969, 1.163, 0.2075, 0.7018, 0.037, 0.5882, 0.2188, 0.6648, 0.5726, 0.0244, 0.6875, 0.8214, 0.4034, 0.5189, 0.0, 1.028, 0.03, 0.5, 0.8333, 0.0253, 0.5294], [0.6087, 0.7544, 0.25, 0.875, 0.6087, 1.3208, 0.5965, 0.0, 0.6471, 0.9375, 0.5, 0.2016, 0.061, 0.5375, 1.2679, 0.4249, 0.6321, 0.0, 0.8037, 0.0, 0.5417, 0.6944, 0.0506, 0.6667, 1.64, 0.0427, 0.4124, 0.8545], [0.913, 0.5614, 0.225, 0.9453, 1.0543, 1.434, 0.8772, 0.0, 0.8431, 0.4062, 0.7582, 0.4355, 0.0244, 1.0625, 1.7143, 0.5622, 0.9528, 0.0833, 0.3551, 0.01, 1.7292, 0.9444, 0.0, 0.7451, 1.56, 0.0244, 0.8247, 0.0182], [0.971, 1.2281, 1.175, 0.9922, 1.4348, 1.8113, 0.8947, 1.0196, 1.5625, 0.4176, 0.4758, 0.0122, 0.8, 1.0893, 0.7296, 0.8302, 0.9533, 0.08, 0.2708, 0.5139, 0.0127, 1.0588, 2.2, 0.2256, 0.9175, 1.8364]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

