created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Tegan Parker", "Keypek The Drunk", "Belvyn Brightblade", "Xenryeth", "Jmbrage Gaurdian", "Arriasa", "Zaedy Zae", "Tribal S", "Ryvalia Fazebringer", "Klengah", "Tootsie Pop Rocks", "Amiti\u00e9l", "Venomina The Sly", "Drevarr Moonwillow", "Kisumaiassu", "Zaylen Harker", "Sub Train", "Bella Sassy", "Koralia Danai", "Solus Sanctus"];
const professions = ["Vindicator", "Tempest", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Druid", "Druid", "Druid", "Chronomancer", "Druid", "Scrapper", "Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.0108, 24.1533, 13.4177, 15.822, 21.67, 20.0657, 13.6093, 89.6376], [0.0, 0.0, 19.0554, 63.525, 0.0, 15.7215, 16.8399, 52.4308, 37.9908, 0.0, 14.2407, 9.3509, 13.178, 5.3122, 0.0, 7.6441, 0.0], [0.0, 0.0, 20.748, 24.948, 0.0, 9.8935, 21.8011, 66.5758, 10.428, 0.0, 16.8543, 0.0, 10.0039, 19.4283, 12.705, 1.144, 6.8485, 0.0, 0.0, 16.5384, 23.8272], [0.0, 0.0, 0.0, 0.0, 22.56, 99.0549, 181.4332, 38.7024, 66.8796], [0.0, 17.6505, 35.3262, 55.9482, 14.4803, 11.092, 32.9994, 127.5879, 14.2824, 15.7489, 63.2997, 42.5961, 20.6753, 0.0, 9.768, 20.8841, 26.2006, 8.6085, 4.5288], [131.34, 164.3124, 149.8365, 95.3724, 42.5136], [18.5085, 27.8288, 111.2748, 0.0, 13.3308, 6.5565, 61.4912, 91.8482, 13.6488, 44.686, 74.7189, 37.4567, 37.011, 37.3019, 34.892, 26.0921, 18.8869, 0.0, 49.7937, 0.0], [0.0, 19.0035, 28.5012, 85.7472, 28.8254, 10.716, 36.9684, 108.1621, 52.6416, 62.1421, 45.1827, 0.0, 20.8539, 43.0714, 8.8088, 18.986, 26.5868, 37.9614, 0.0, 36.6844, 46.3896], [0.0, 21.2482, 50.9964, 84.9618, 19.2041, 33.229, 54.4887, 113.5372, 9.372, 73.2389, 95.3064, 0.0, 34.4745, 28.257, 28.8658, 20.086, 27.6545, 41.7388, 0.0, 4.6079, 27.8664], [41.9865, 15.867, 83.1558, 59.6442, 21.6384, 37.553, 40.2287, 97.9777, 41.1576, 41.613, 52.704, 37.2874, 43.8944, 2.9476, 34.21, 30.7012, 11.3858, 35.8272, 44.4312], [35.6083, 81.5798, 122.3586, 51.9288, 0.0, 38.6105, 45.927, 172.6633, 41.1048, 76.6533, 56.547, 33.5016, 32.0728, 40.5882, 22.066, 37.9924, 0.0, 0.0, 31.5765, 47.8992], [21.1693, 13.4377, 103.9584, 116.9322, 21.6094, 40.8665, 67.3879, 162.5732, 43.3224, 65.7699, 76.0365, 57.1261, 22.2714, 18.0242, 12.804, 57.9911, 39.4349, 39.0777, 20.1144], [125.1361, 102.4848, 60.0934, 101.2356, 87.0534, 52.374, 102.3854, 55.44, 68.1988, 109.8122, 5.8688, 82.1203, 75.276], [41.6343, 13.8067, 88.0698, 78.2628, 0.0, 62.463, 54.4604, 224.5283, 43.7448, 39.4363, 43.0965, 0.0, 29.5254, 72.725, 71.419, 27.5, 33.3572, 61.9653, 0.0, 31.0764, 82.2936], [54.3124, 64.9748, 144.4716, 106.9992, 27.9367, 91.932, 60.8391, 213.118, 69.7224, 106.9134, 108.153, 0.0, 34.1361, 42.2982, 50.3118, 73.128, 25.2328, 22.7179, 0.0, 33.5054, 56.3448], [21.678, 122.2005, 212.5578, 165.3498, 26.536, 59.22, 112.833, 330.4272, 46.2792, 95.0484, 78.6717, 80.6661, 50.2292, 78.9404, 65.956, 102.207, 15.7257, 0.0, 67.2608, 72.5016], [36.8996, 58.425, 343.3248, 236.5902, 20.228, 26.8135, 180.1076, 289.2181, 70.488, 139.8197, 219.3804, 0.0, 141.0282, 100.8075, 137.3156, 6.908, 2.9737, 10.2144, 70.7256, 98.0016], [39.2083, 44.8642, 71.253, 182.2128, 0.0, 86.856, 221.13, 331.936, 9.636, 155.654, 257.7555, 0.0, 82.2101, 106.9427, 101.7755, 95.59, 113.3782, 82.8079, 0.0, 113.0538, 103.7136], [153.0766, 122.5695, 293.2566, 177.0384, 7.0325, 64.7895, 113.7685, 416.806, 96.0432, 90.0121, 185.1228, 67.5319, 53.5961, 113.5319, 21.714, 60.2305, 89.8269, 0.0, 117.7331, 80.8248], [126.2334, 57.6255, 270.7614, 204.897, 82.0714, 135.031, 155.2162, 580.6994, 140.712, 180.2803, 235.0269, 14.5898, 101.3931, 118.9389, 168.4852, 74.228, 129.4969, 150.6134, 0.0, 116.5544, 156.7128], [61.2776, 108.1785, 269.8878, 249.3414, 17.359, 175.7095, 170.8088, 505.9195, 143.1144, 191.6332, 263.6298, 17.8486, 103.212, 187.6486, 139.9244, 97.372, 105.8526, 139.4419, 0.0, 102.6593, 160.344]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

