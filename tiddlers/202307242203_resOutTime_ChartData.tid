created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Drevarr Moonwillow", "Mister Jekyll", "Fang Shiyu", "Rahani Sunray", "Necrotic Windrunner", "Sister Elon\u00edth", "Hey Yey Yeah Ah Ah", "Bella Sassy", "Koralia Danai", "Gabe Malhorn", "Jerryatric Reflexes", "Tegan Parker", "Rina Of Theros", "Oo Dads Mad", "Ryvalia Fazebringer", "Rafaellagabriela", "Solus Sanctus", "Be\u00eb", "Zaedy Zae", "Glorious Gluvs", "Venomina The Sly", "Sub Train", "Name Is What", "Inedible Plant", "Jimbo The Pleb", "Ateriuz", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Daphne Agla\u00e9", "Kisumaiasu", "Klengah", "Crusader Siolith"];
const professions = ["Druid", "Scrapper", "Scourge", "Dragonhunter", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Scourge", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Scourge", "Druid", "Berserker", "Druid", "Firebrand", "Scourge", "Vindicator", "Berserker", "Berserker", "Scrapper", "Firebrand", "Scourge", "Reaper", "Druid", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 468.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 63.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 351.0], [0.0, 0.0, 816.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1505.28, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1306.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 215.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 468.0], [0.0, 0.0, 1143.1, 0.0, 0.0, 0.0, 0.0, 63.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 117.0], [172.48, 0.0, 0.0, 134.4, 0.0, 0.0, 0.0, 0.0, 0.0, 501.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [363.66, 172.48, 0.0, 0.0, 32.66, 100.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 353.91, 0.0, 0.0, 195.84, 0.0, 0.0, 0.0, 702.0], [0.0, 0.0, 163.3, 0.0, 391.92], [0.0, 163.3, 0.0, 0.0, 33.6, 0.0, 0.0, 0.0, 0.0, 471.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 819.0], [0.0, 0.0, 1469.7, 0.0, 0.0, 67.2, 0.0, 0.0, 0.0, 0.0, 117.97, 501.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 816.5, 0.0, 293.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 172.48, 1469.7, 0.0, 0.0, 33.6, 0.0, 0.0, 0.0, 0.0], [484.88, 129.36, 0.0, 0.0, 0.0, 0.0, 0.0, 127.8, 0.0, 0.0, 353.91, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 234.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 191.7, 0.0, 0.0, 0.0, 1254.4, 0.0, 0.0, 0.0, 0.0, 0.0, 702.0], [0.0, 0.0, 1306.4, 0.0, 0.0, 67.2, 0.0, 127.8, 0.0, 0.0, 235.94, 501.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4515.84, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1306.4, 0.0, 0.0, 134.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 702.0], [0.0, 431.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1254.4, 0.0, 0.0, 0.0, 0.0, 0.0, 351.0], [0.0, 816.5, 0.0, 0.0, 0.0, 0.0, 479.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [121.22, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3261.44, 0.0, 0.0, 0.0, 0.0, 0.0, 819.0], [0.0, 86.24, 1633.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 117.97, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1053.0], [0.0, 0.0, 1633.0, 0.0, 65.32, 67.2, 0.0, 235.94, 2007.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1469.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 117.97, 3512.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1272.96, 0.0, 0.0, 0.0], [0.0, 0.0, 163.3, 0.0, 0.0, 0.0, 0.0, 543.15, 0.0, 0.0, 353.91, 1003.52, 0.0, 0.0, 0.0, 0.0, 0.0, 585.0], [848.54, 0.0, 1306.4, 0.0, 0.0, 67.2, 0.0, 0.0, 0.0, 0.0, 0.0, 1254.4, 0.0, 685.44, 0.0, 0.0, 0.0, 117.0], [0.0, 0.0, 163.3, 0.0, 0.0, 134.4, 0.0, 0.0, 0.0, 0.0, 0.0, 6773.76, 0.0, 0.0, 0.0, 0.0, 0.0, 585.0], [0.0, 0.0, 1469.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 832.32, 0.0, 0.0, 0.0, 1287.0], [363.66, 0.0, 1306.4, 0.0, 0.0, 33.6, 0.0, 0.0, 0.0, 0.0, 0.0, 6021.12, 0.0, 0.0, 0.0, 0.0, 0.0, 1872.0], [0.0, 0.0, 1469.7, 0.0, 130.64, 168.0, 0.0, 31.95, 0.0, 0.0, 0.0, 6773.76, 0.0, 146.88, 0.0, 0.0, 0.0, 819.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

