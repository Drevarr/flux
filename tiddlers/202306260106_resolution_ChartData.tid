created: 20230626010646000
creator: Drevarr
modified: 20230705163537304
modifier: drevarr
tags: ChartData
title: 202306260106_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Iskalla", "Gestern Yesteryear"];
const professions = ["Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[77.1975, 30.252, 32.8669, 0.0, 172.0103, 69.3734, 236.4992, 57.7377, 10.6587, 59.2722, 0.0, 59.7293, 46.299, 253.6934, 23.4421, 99.4356, 38.136, 60.5474, 39.2782, 41.1742, 7.6015, 43.0895, 22.3037, 37.1304, 49.266, 19.4128, 13.5558, 16.3045, 27.1656, 17.8137, 82.0512], [140.2892, 0.0, 114.4421, 169.3895, 366.0987, 96.912, 552.5632, 58.6404, 59.9216, 153.3344, 0.0, 145.2672, 152.955, 316.895, 42.8594, 13.9054, 114.576, 60.4081, 44.3025, 19.2096, 5.1482, 32.3973, 4.3913, 31.5302, 134.6123, 223.4045, 48.0084, 181.2132, 72.2399, 150.1634, 83.9226, 139.5979, 3.9072, 27.2784, 147.1682, 44.793, 78.8582, 200.2018], [45.8432, 39.7202, 20.1068, 17.765, 189.1044, 24.7993, 166.3927, 75.8144, 254.8403, 97.8278, 366.4192, 100.0418, 72.4698, 93.5298, 19.4519, 162.7642, 86.0244, 365.7654, 47.2025, 232.3884, 184.086, 82.044, 134.3479, 55.2624, 61.9522, 31.0914, 67.9862, 59.6128, 295.5715, 79.6532, 146.0436, 38.5352, 117.2119, 164.5132, 153.1656, 82.4352, 4.9272, 121.6471, 12.1208, 40.8115, 91.476]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

