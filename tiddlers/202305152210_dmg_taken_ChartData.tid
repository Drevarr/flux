created: 20230515221048000
creator: Drevarr
modified: 20230705163530194
modifier: drevarr
tags: ChartData
title: 202305152210_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Sumatra Satyricon", "Farra The Bloodless", "Sygaldry Verdandi", "Rozaalyna", "Grasszanine", "Bella Sassy", "Koralia Danai", "Cat Wigglebooty", "Tika Mi", "Demon Sekhmet", "Evan Nightroad", "Gavann", "High Sorcer Baradun", "Solus Sanctus", "Elonith Requiem", "Be\u00eb", "Rozaalyna", "Necrotic Windrunner", "Venom The Ferocious", "Oo Dads Mad", "Miphest\u00f6", "Klenga", "Demon Sekhmet", "Panther B Me", "Fribble Bibble", "River No Hug", "Cyclotechnist Farra", "Roxy Willowmoon", "Aira Draugr", "Ark Darkness", "Legacy Of Mathus", "Be\u00eb", "Im Alt Tabbed", "Smol Gluvs", "Belvyn Brightblade", "Elonith Requiem", "Sheep Poh", "Grilo Gringo", "Spreadflamesoflight", "Slingsshot", "Bheemaa", "Kyllarian", "Sheeps Sticks", "Etcherii", "Vi Silvette", "Gollum Mah Precious", "Nazhul Naxxremis", "Kyllarian", "Azar Fletcher"];
const professions = ["Tempest", "Soulbeast", "Vindicator", "Firebrand", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Spellbreaker", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Reaper", "Scourge", "Reaper", "Scourge", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Reaper", "Scrapper", "Reaper", "Scrapper", "Scrapper", "Herald", "Firebrand", "Berserker", "Reaper", "Berserker", "Reaper", "Firebrand", "Scourge", "Tempest", "Dragonhunter", "Willbender", "Untamed", "Dragonhunter", "Scourge", "Scrapper", "Willbender", "Druid", "Harbinger", "Scourge", "Harbinger", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[58.0943, 38.5041, 0.0, 4.399, 142.4887, 528.9562, 0.0, 228.625, 0.5273, 61.8136, 64.0, 14.7027, 627.7294, 63.0923, 190.4468, 173.8788, 1731.6346, 197.6687, 882.9853, 0.0, 606.3033, 6.0537, 419.69, 23.9615, 1399.2833], [18.8485, 97.5158, 0.0, 5.0417, 231.8075, 303.424, 781.6989, 0.0, 0.0, 59.8129, 339.9667, 363.7073, 0.0, 1753.7073, 113.6207, 137.283, 572.0534, 285.5714, 377.0982, 1081.2784], [3.2414, 82.4587, 0.0, 13.2432, 92.8714, 413.2494, 832.1934, 0.0, 34.1905, 60.2708, 789.9167, 238.9024, 219.3103, 359.4146, 12.0882, 59.9565, 2027.6977, 1710.625], [189.2121, 32.5174, 46.2909, 0.0, 21.3182, 159.4248, 483.8021, 0.0, 0.0, 10.3754, 272.7857, 111.0952, 8.7105, 208.9882, 39.1029, 78.6304, 371.4885, 716.4157, 329.2303, 913.9854, 35.7368, 230.48, 65.9184, 956.9647, 52.1, 1000.5], [89.8182, 10.9623, 13.7174, 190.3397, 249.5601, 919.7785, 0.0, 7.0471, 388.661, 354.675, 247.025, 703.6585, 31.2353, 192.3393, 330.8931, 1596.5], [219.7966, 649.4286, 72.75, 621.4167, 48.9265, 131.8333, 1036.4394, 2298.4068, 257.5549, 1637.959, 782.7647, 459.0496, 34.5503, 542.4632, 0.0, 2067.3889], [77.641, 25.5176, 20.8462, 6.2609, 4.8235, 115.3538, 436.9384, 0.0, 7.8304, 100.1864, 232.3333, 9.2632, 291.907, 12.5606, 174.8909, 252.9313, 2731.6471, 238.4371, 974.3475, 286.7, 368.541, 25.7584, 372.0597, 315.0, 1024.1818], [30.3968, 34.6182, 0.0, 0.0, 28.1932, 120.7297, 475.8406, 0.0, 0.0, 1.6254, 58.4237, 145.35, 45.0263, 359.439, 9.2203, 63.25, 280.1374, 732.5517, 173.5329, 1030.7405, 391.0, 200.3443, 6.7895, 699.3478, 1246.8288], [119.4359, 69.2644, 21.3019, 0.0, 32.5096, 149.7222, 427.4313, 0.0, 5.375, 37.7045, 145.375, 112.625, 118.5357, 3.8971, 83.3585, 480.2519, 9816.5714, 164.1566, 1058.8661, 165.9412, 94.7603, 21.4148, 774.9899, 10.1154, 766.1034], [26.3191, 0.0, 46.6842, 38.8278, 166.0237, 446.8907, 0.0, 0.0, 6.6006, 97.5333, 123.2927, 33.1026, 462.2805, 17.5882, 2584.1667, 623.4407, 189.9879, 694.2746, 44.6667, 147.686, 33.6, 716.6566, 0.0, 696.8926], [508.3778, 947.5221, 155.2, 21.8135, 298.4167, 1200.4762, 58.2727, 565.3494, 78.0441, 198.0364, 746.3231, 1633.863], [22.7872, 60.2331, 0.0, 0.0, 51.3541, 436.3565, 1006.1513, 0.0, 4.4444, 71.5529, 134.7586, 188.3171, 74.0, 339.2651, 0.2353], [54.1655, 17.0377, 0.0, 90.5192, 332.4694, 3.3254, 329.0508, 330.2927, 13.775, 361.1807, 0.0, 65.5455, 550.6336, 1405.3051, 220.1294, 1273.7982, 48.3333, 700.5119, 5.2794, 16.1985, 9.6957, 970.963], [150.7895, 269.881, 35.4545, 597.2824, 0.0, 666.6379, 703.0076, 1905.6857, 220.9573, 912.6421, 494.3684, 546.0323, 34.7961, 929.4851, 85.9524, 2988.375], [35.677, 2.16, 0.0, 45.3249, 142.5618, 469.8201, 0.0, 2.8148, 15.9056, 222.9322, 42.3095, 0.0, 75.8919, 7.1493, 54.3273, 147.0, 1211.6667, 198.479, 757.6232, 105.5, 160.864, 0.1946, 123.3182, 823.5825], [664.8182, 1543.5224, 112.8, 1111.9398, 91.3946, 1408.8854, 55.36, 938.1037], [178.0377, 123.3557, 0.0, 41.3404, 26.9234, 253.9871, 470.5134, 16.7708, 39.125, 93.0388, 200.1667, 279.1905, 0.0, 280.3293, 0.0, 128.1111, 435.6357, 1897.7237], [291.0485, 1453.9774, 74.4737, 552.1393, 0.0, 959.656, 0.0, 1698.1026], [23.9965, 0.0, 11.7391, 91.6106, 272.3488, 743.9291, 71.0, 26.6131, 0.0, 337.8537, 0.0, 119.5926, 3.5441, 79.6038, 554.0859, 561.5109], [633.2952, 0.0, 0.0, 83.3138, 457.6724, 141.0513, 128.2308, 315.3077, 0.0, 177.3091, 267.5455, 1113.9153, 249.2195, 730.0294, 180.1667, 183.5484, 8.4558, 732.5484, 1395.22], [108.5556, 150.8606, 0.0, 32.6019, 130.302, 950.6937, 18.625, 84.4562], [943.8298, 377.4337, 1164.5238, 253.9, 597.2358, 26.9533, 505.2977, 50.4231, 1186.9375], [368.2364, 1241.9237, 299.45, 292.08, 53.1852, 1322.1349, 13.9565, 1181.0909], [632.2061, 1366.3971, 295.2632, 817.5772, 57.557, 180.2556, 0.0, 838.194], [511.4207, 1021.0, 162.1, 483.5968, 6.4966, 2170.2703, 0.0, 1599.8148], [38.3507, 0.0, 0.0, 9.3333, 155.1458, 593.2649, 0.0, 35.1765, 4.1446, 137.4483, 117.3, 41.5556, 303.9651, 0.0, 105.6909, 262.3053, 680.2447], [172.6882, 1332.1353, 0.0, 424.629, 50.1645, 1111.7091, 58.3158, 1374.4138], [545.6159, 1781.314, 237.0455, 745.104, 58.4932, 829.9787, 132.3171, 1788.7692], [226.7963, 35.8125, 0.0, 32.4831, 274.4795, 945.9943], [60.8293, 12.7133, 42.717, 9.2826, 112.7371, 196.2902, 728.3846, 0.0, 17.5556, 4.3746], [156.1406, 38.3116, 414.0667, 0.0, 123.0628, 250.0544, 548.3638, 101.5, 4.689, 195.75, 128.5714, 0.0, 71.8434, 3.9403], [81.265, 0.0, 0.0, 61.6, 338.2857, 665.2042, 0.0, 6.24, 19.5165], [193.8235, 1135.6231, 335.9, 399.456, 0.0, 717.4466, 50.72, 656.0654], [421.5893, 178.1, 1259.7368, 58.1067, 934.7313, 17.3846, 1656.1087], [988.0196, 268.6667, 816.8699, 17.2263, 864.225, 50.5, 4669.4783], [80.2537, 53.0523, 27.9245, 0.0, 80.5874, 178.7367, 495.0785, 0.0, 4.1782], [0.0, 106.5517, 89.9058, 111.2373, 639.6341, 0.0, 423.8072, 9.803, 182.2407, 375.4621, 1552.3056], [87.741, 718.9767, 163.45, 187.9756, 6.6122, 273.0385, 15.35, 1475.0], [1039.2706, 1851.5273], [130.7059, 325.9839, 80.4694, 409.5113, 656.7143, 184.8774], [26.8362, 3.9744, 0.0, 57.7129, 288.3081], [1178.6, 217.7083, 783.68, 668.7647, 0.0], [62.6514, 0.0, 160.7174, 73.0857, 3174.8824], [1689.0], [0.0, 46.7299, 30.3455, 0.0, 45.9146, 139.875], [133.1739, 7419.3333], [543.7833, 526.9756, 0.0], [289.069, 109.5388, 0.0], [70.4776], [6.1644]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

