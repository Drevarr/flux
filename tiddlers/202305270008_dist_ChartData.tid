created: 20230527000807000
creator: Drevarr
modified: 20230705163531678
modifier: drevarr
tags: ChartData
title: 202305270008_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Koralia Danai", "Demon Sekhmet", "Lucas Ryn", "Newtype Khan", "Panther B Me", "Eibh\u00ebar", "Smol Gluvs", "Xanvias Einzbern", "Johosh Of The North", "Chrozz", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Berserker", "Tempest", "Willbender", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[264, 277, 149, 627, 211, 7925, 280, 12286, 3371, 485, 280, 315, 503, 219, 214, 295, 338, 309, 436, 387, 931, 1725], [260, 247, 225, 375, 223, 256, 228, 293, 526, 394, 347, 344, 517, 348, 233, 306, 213, 280, 505, 895, 263, 447, 446, 232, 907], [222, 233, 443, 255, 210, 245, 651, 2270, 670, 396, 467, 1055, 892, 314, 281, 253, 332, 406, 715, 725, 1105, 805, 618], [229, 222, 188, 246, 181, 203, 250, 343, 277, 260, 285, 267, 441, 250, 285, 225, 283, 243, 290, 473, 289, 730, 448, 226, 1252], [289, 260, 203, 295, 184, 230, 431, 267, 433, 232, 325, 374, 493, 303, 279, 292, 302, 261, 439, 1176, 408, 823, 423, 187, 928], [270, 225, 166, 302, 282, 217, 378, 337, 290, 199, 357, 275, 515, 295, 528, 290, 285, 348, 326, 423, 699, 295, 515, 385, 264, 488], [243, 235, 320, 291, 631, 189, 338, 457, 585, 548, 239, 270, 474, 333, 218, 237, 287, 375, 547, 1136, 281, 474, 1062, 227, 459], [242, 214, 348, 237, 209, 207, 509, 357, 252, 289, 300, 319, 426, 247, 304, 190, 293, 608, 308, 423, 708, 323, 818, 1224], [208, 230, 155, 378, 260, 209, 337, 268, 471, 295, 289, 172, 423, 264, 366, 230, 291, 286, 236, 529, 895, 226, 912, 353, 225, 1733], [224, 251, 188, 332, 154, 209, 279, 388, 291, 294, 353, 342, 263, 219, 254, 243, 266, 335, 549, 265, 351, 335, 205, 2698], [232, 192, 195, 474, 176, 190, 387, 489, 214, 276, 236, 203, 344, 269, 164, 238, 267, 285, 379, 678, 186, 646, 356, 231, 1216], [157, 187, 196, 304, 287, 187, 194, 230, 241, 143, 261, 230, 315, 248, 304, 167, 240, 264, 311, 484, 1004, 190, 518, 270, 158, 1801], [222, 164, 167, 225, 167, 185, 152, 222, 170, 298, 195, 287, 456, 220, 296, 163, 194, 165, 269, 365, 290, 228, 229, 292, 154, 440]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

