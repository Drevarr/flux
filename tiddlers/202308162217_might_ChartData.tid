created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Darks Na", "Aspros Gemeos", "Morton Saltbringer", "Cat Wigglebooty", "Luke The Ghastly", "Name Is What", "Belvyn Brightblade", "Name Is What", "Arriasa", "X Mad X King X", "Mistwalker Cael", "Tribal S", "Philip Poundhouse", "Tootsie Pop Rocks", "K\u00e2 \u00d4tik R\u00e6j", "Zaedy Zae", "Hawaiian Supreme", "Glorious Gluvs", "Klengah", "Xo Zen Xo", "Blancooo Padreee", "Rahani Sunray", "Xanvias Einzbern", "Eibh\u00ebar", "Raziel Umbra", "Tegan Parker", "Kisumaiassu", "Gavann", "Sygaldry Verdandi", "Alizayd Delnbone", "Drevarr Moonwillow", "Solus Sanctus", "Crusader Siolith", "Bella Sassy", "Miphest\u00f6", "Newtype Khan"];
const professions = ["Weaver", "Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Scourge", "Reaper", "Firebrand", "Scourge", "Druid", "Firebrand", "Vindicator", "Druid", "Herald", "Scrapper", "Berserker", "Druid", "Spellbreaker", "Berserker", "Druid", "Tempest", "Berserker", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7636, 2.416, 4.6116, 3.7778, 4.3623, 7.2406, 6.0794, 0.0, 1.5947, 0.0, 0.0, 3.5088, 0.0, 0.0, 0.693, 2.0894, 2.3702, 2.2572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0314, 0.0, 0.0], [7.0143, 16.7475, 7.2796, 7.0314, 3.6555, 3.6982], [9.2241, 2.633, 9.6858, 0.6091, 2.3716, 4.8156, 0.0, 9.3024, 4.0195, 3.0879, 1.89], [3.384, 7.2135, 7.6772, 7.4235, 21.2652, 2.9835, 4.902], [3.6624, 0.7558, 1.616, 3.024, 2.471, 4.8951, 2.7152, 4.3277, 1.6243, 2.1263, 2.1517, 0.0, 4.3248, 1.7443, 0.1481, 1.5435, 4.3245, 2.3254, 7.722, 0.0, 0.0, 0.501, 3.1185, 1.7306, 0.0, 0.2455, 1.4457], [12.648, 3.1853, 4.8222, 5.8275, 0.4859, 5.4111, 4.9896, 0.0468, 4.3301, 5.28, 6.8145, 5.4391], [3.3739, 2.7306, 6.0064, 6.1824, 3.5645, 2.1263, 3.6886, 5.6364, 2.549, 8.7912, 0.8424, 1.6748, 4.7404, 12.705, 1.3186, 2.6995, 3.2736], [5.54, 0.0148, 0.0, 10.206, 4.7758, 6.3603, 10.285, 11.3859, 4.8955, 2.5761, 7.5308, 3.7695, 6.2016], [10.8251, 2.1785, 5.568, 10.584, 14.3616, 3.8678, 10.3212, 10.8045, 7.3964], [5.1923, 1.482, 0.0, 4.347, 3.1363, 1.665, 3.3735, 6.0278, 2.5944, 2.5761, 1.6394, 6.12, 5.8397, 3.7435, 0.0, 2.6724, 5.8136, 6.7716, 2.982, 4.2394, 11.6655, 1.5383, 4.9282, 2.3734, 2.2525], [7.831, 4.5346, 6.4197, 11.6804, 3.9585, 12.8112, 12.6653, 0.0, 5.8275, 5.5393, 4.8298, 27.5616, 0.0, 6.6177], [0.3941, 1.0374, 2.192, 5.67, 0.9504, 3.2301, 7.1584, 4.6883, 3.6998, 3.0259, 5.5328, 5.7936, 8.2666, 2.3899, 3.213, 4.033, 4.5614, 12.2364, 0.7722, 3.7582, 4.7404, 12.474, 4.148, 3.7668, 3.0281, 0.6052], [2.4339, 2.4453, 2.976, 4.0446, 0.5227, 7.5258, 6.2533, 5.5126, 7.3546, 6.0926, 5.0718, 1.4805, 18.5232, 0.0, 0.6768, 2.4255, 5.0534, 4.7403, 4.6332, 0.0, 1.9199, 4.6248, 8.547, 2.4723, 3.8296, 4.5012, 2.1181], [8.6757, 56.1924, 5.5107, 18.3008, 3.7384, 0.0, 3.4612, 8.0672, 2.537, 11.7334], [5.0996, 1.2004, 4.592, 1.7388, 7.128, 2.7306, 4.8545, 7.2643, 1.8274, 4.0072, 7.582, 2.6112, 0.0, 0.0, 2.646, 4.1302, 5.6347, 8.6724, 6.822, 4.2779, 24.3705, 4.148, 5.4305, 1.9642], [4.7983, 2.7713, 4.832, 4.0446, 1.5444, 10.2564, 6.4178, 6.8006, 0.0, 2.249, 4.0984, 2.751, 14.1984, 4.7021, 1.6708, 3.654, 2.2837, 2.8174, 9.8604, 1.2168, 3.1863, 5.2414, 15.015, 4.3677, 7.5336], [1.3908, 0.0, 1.072, 2.3436, 1.5444, 1.9314, 5.6773, 3.8125, 0.0226, 0.3271, 4.3033, 0.0, 22.1136, 7.129, 0.8883, 3.1815, 0.0, 1.8335, 33.9768, 0.0, 0.0, 5.5498, 25.872, 4.3677, 4.5829, 0.4638, 2.3534], [13.1431, 5.2759, 17.8325, 12.7452, 31.3632, 20.7518, 21.7751, 22.5225], [3.8247, 2.2082, 3.072, 4.2714, 2.7324, 9.6903, 11.6015, 3.864, 3.2261, 9.5274, 3.9447, 1.9845, 9.5472, 7.8115, 1.9881, 1.953, 5.7336, 3.354, 12.7116, 3.4047, 4.6978, 1.002, 15.246, 1.5658, 8.0358, 5.265, 3.9672], [4.5201, 0.415, 1.712, 3.78, 5.4648, 6.327, 11.9306, 2.9366, 2.9102, 13.4937, 5.9939, 2.2365, 17.2176, 7.8115, 1.692, 3.024, 1.4577, 4.8298, 19.1268, 3.6738, 5.1471, 4.2009, 9.702, 2.1152, 10.8296, 3.7101, 2.4543], [11.7466, 10.0166, 8.7096, 18.1354, 0.0, 31.416, 39.1334, 4.2723, 7.434, 10.1067, 7.021, 8.5536, 0.0, 6.536], [1.888, 6.3882, 3.1363, 5.1948, 10.5318, 5.1005, 5.3918, 4.9068, 3.125, 2.4885, 13.9536, 13.9546, 3.5109, 3.4335, 4.2273, 10.9117, 16.3944, 1.9656, 4.1259, 2.6978, 27.72, 4.2853, 5.0224, 3.1372], [3.5002, 1.6006, 1.872, 6.804, 3.065, 3.5964, 5.7596, 7.1613, 4.5797, 8.2598, 8.914, 2.541, 16.6464, 5.1571, 2.7284, 4.7565, 8.9406, 9.6148, 8.5536, 2.3634, 6.6177, 3.1988, 11.4345, 6.1808, 7.3766, 6.4381, 6.6231], [1.3213, 0.2964, 2.112, 5.1408, 6.035, 6.5268, 13.3294, 5.8733, 3.0907, 5.929, 9.8874, 0.483, 10.5264, 10.2384, 2.0938, 6.867, 6.0252, 9.0334, 13.4244, 0.8541, 9.1096, 7.1299, 23.562, 4.4501, 6.0583, 3.5191], [2.5962, 1.9414, 3.12, 5.2164, 4.7995, 10.0233, 14.8104, 13.0861, 2.5267, 6.6242, 8.1968, 1.869, 14.9328, 7.584, 3.9973, 4.914, 12.1475, 9.1676, 15.6816, 2.8665, 6.7402, 7.708, 22.869, 0.6043, 3.7354, 3.7646, 4.7404], [4.0565, 4.9795, 3.136, 6.5772, 6.0113, 8.7579, 13.823, 9.3766, 5.3242, 6.5424, 9.0165, 2.4675, 13.872, 8.8733, 3.5955, 6.0795, 6.6568, 5.2322, 14.256, 1.7901, 7.8023, 9.9048, 16.863, 7.5543, 5.148, 3.1372, 6.455], [3.7088, 0.0, 0.0, 5.0652, 2.875, 0.0, 36.8614, 4.3792, 0.0, 1.1449, 0.0, 0.0, 2.856, 32.0803, 2.2208, 3.8115, 2.5753, 7.2446, 20.196, 0.0, 3.7174, 4.7019, 82.467, 0.0, 0.0, 0.0, 2.5551], [4.8214, 0.7114, 1.2, 9.9036, 8.3398, 2.7306, 17.1142, 9.4282, 3.0456, 10.3452, 14.6005, 4.179, 17.7072, 16.5331, 4.9914, 4.536, 9.718, 9.9278, 31.9572, 2.5506, 10.1308, 6.0893, 27.3735, 11.5099, 7.7533, 6.1653, 12.1704], [10.2919, 2.6972, 6.912, 15.498, 5.2985, 3.1968, 4.6077, 11.9011, 10.5355, 9.282, 12.1927, 5.8065, 16.2384, 11.6794, 2.7706, 7.9695, 4.8104, 2.6385, 45.738, 10.907, 13.7202, 38.2305, 6.9224, 7.3453, 2.9735, 8.136], [3.8015, 0.9633, 1.696, 12.1716, 4.657, 6.9264, 31.7601, 10.5616, 5.7528, 9.0776, 14.3444, 2.688, 18.1152, 22.752, 5.5413, 2.1105, 12.2447, 11.985, 33.264, 3.4047, 4.6569, 6.0893, 38.2305, 5.0819, 7.8789, 2.537, 11.5989], [15.0163, 0.0, 3.024, 12.8278, 20.3029, 65.34, 6.318, 23.7747, 18.7304, 65.9505, 22.2232, 12.5246, 10.3391, 21.9202], [5.3546, 1.897, 2.208, 8.7696, 6.8904, 10.6893, 13.1648, 14.2195, 11.2574, 15.62, 15.4202, 2.373, 25.0512, 16.0781, 9.0945, 7.56, 10.9813, 15.9203, 41.58, 1.1349, 7.8432, 18.0367, 38.577, 7.8839, 18.112, 7.8294, 8.7076], [4.5201, 1.2449, 3.024, 9.3744, 7.9834, 12.4542, 31.9246, 14.0134, 0.6542, 10.427, 9.7337, 10.1955, 18.9312, 14.4854, 5.922, 5.3865, 8.3089, 17.2619, 56.7864, 0.4212, 18.5868, 10.6756, 48.048, 4.7798, 8.695, 4.5558, 9.5817], [11.4277, 2.2675, 2.288, 10.1682, 5.3935, 4.1958, 18.6776, 12.2618, 6.2266, 7.4011, 18.3403, 5.439, 18.9312, 9.8592, 9.306, 4.6935, 13.0221, 13.9974, 49.7772, 10.2141, 14.8285, 11.7547, 70.686, 9.5321, 2.9507, 2.1551, 14.1876], [0.0, 2.0303, 3.76, 7.7112, 6.2251, 2.7972, 31.0196, 13.8589, 7.2643, 27.7234, 15.4202, 5.3445, 22.032, 22.9037, 7.043, 7.875, 22.9345, 17.6644, 52.866, 3.8844, 16.5443, 8.3632, 56.0175, 17.1687, 11.4887, 7.311, 14.154], [1.0603, 15.3337, 8.7603, 1.071, 17.2176, 45.5798, 3.807, 9.9225, 0.0, 24.8643, 36.7092, 11.3841, 38.5215, 32.7975, 183.183, 18.6796, 21.0627], [15.8088, 2.9788, 3.52, 22.5288, 15.7291, 20.7126, 64.9189, 18.9078, 12.4531, 33.4889, 26.4347, 72.7872, 56.425, 15.7144, 17.262, 36.977, 22.1364, 98.4852, 8.6112, 38.2764, 30.832, 104.5275, 23.7066, 24.0133, 15.5496, 25.8538]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

