created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Audra Storm", "Mierin Farshaw", "Fluffys Dankest", "Atros Aegisshroud", "Jerryatric Reflexes", "Chocolate Teapot", "Violet Stab", "A\u00fcrora Windrunner", "Sub Train", "Reyga Bannerclaw", "Traidoruns Maximus", "Rosetendril", "Koralia Danai", "Explorer Theodora", "Norn Name Generator", "Drevarr Moonwillow", "Sister Elon\u00edth", "Scarlet Merc\u00fcry"];
const professions = ["Vindicator", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.6202, 34.3974, 10.2831, 12.327, 0.0, 18.8015, 13.7808, 3.8763, 91.4664, 0.0, 13.6979, 13.8121, 120.7294, 62.0525, 17.4072, 13.4862, 13.7689, 2.1479, 10.2811, 10.3226, 20.1619, 20.2014, 20.5934, 13.7085, 29.4638, 32.5822, 3.4099, 24.0637, 0.0, 41.5303], [149.9191, 54.468, 50.6324, 57.7808, 0.0, 20.9141, 0.0, 8.1073, 0.0, 88.044, 0.0, 9.6214, 0.0, 72.0659, 0.0, 38.4426, 113.8586, 48.8981], [11.6592, 16.0948, 26.5914, 42.282, 32.7066, 25.3357, 31.2787, 16.3322, 55.9289, 113.8995, 18.8807, 21.1688, 45.7674, 19.5538, 51.0975, 0.0, 14.7339, 0.0, 0.0, 0.0, 32.3447, 10.3018, 24.8211, 5.1142, 34.9985, 0.0, 20.2036, 79.0439, 44.2988, 20.6756, 25.1194, 4.9139, 93.1572, 54.4612], [41.7135, 41.4574, 46.17, 10.4374, 100.4611, 213.943, 63.1777, 56.0742, 87.2746, 0.0, 176.2088, 2.0683, 20.1455, 23.569, 0.792, 0.0, 50.3896, 4.1238, 35.5743, 0.637, 34.9034], [227.1672, 127.476, 169.0172, 220.1338, 27.1639, 115.8054, 136.5605], [14.3312, 65.4205, 114.7258, 40.918, 57.4456, 63.784, 39.3384, 88.965, 0.0, 23.6156, 13.356, 7.7544, 82.2104, 23.2299, 64.1277, 43.7892, 60.8969, 0.0, 34.8613, 98.6972, 43.8984, 16.9344, 13.6013, 25.5622, 124.8691, 68.6345], [129.7577, 42.408, 84.1876, 87.8662, 11.7852, 60.603, 11.711, 65.7544, 15.0018, 0.0, 162.4536, 16.5211, 11.6596, 5.7388, 169.7669, 2.3117, 89.087, 213.6252, 14.4109, 46.6843, 79.286], [206.8546, 34.3894, 92.8606, 209.844, 130.8216, 63.4085, 63.5107, 86.3386, 338.6635, 107.9746], [92.5517, 109.404, 121.338, 103.1923, 0.0, 0.0, 0.0, 48.2769, 0.0, 264.132, 13.9894, 119.5618, 39.8088, 191.5833, 59.0562, 83.0088, 273.3589], [347.6585, 88.974, 219.2644, 169.7942, 22.0972, 56.2496, 158.4582, 7.7286, 15.8943, 599.5272, 61.0764, 60.8677], [62.1691, 57.726, 66.875, 54.7994, 11.4519, 34.8418, 19.796, 53.349, 0.0, 23.4172, 138.7728, 0.0, 8.1144, 0.0, 119.404, 2.3904, 69.1513, 186.0719, 0.0, 26.3182, 23.9131, 27.3593, 36.1001, 50.2873, 30.4469, 49.59, 16.3862, 76.1368, 109.641, 36.7981, 56.7599, 13.5184, 10.2653, 88.5938, 23.5786, 7.8351, 14.889, 22.104, 17.8473, 55.6276, 14.747, 49.7988, 28.7014, 79.3346, 0.0, 24.6121, 70.8615], [174.0816, 28.3907, 107.0538, 0.0, 96.4723, 50.2458, 7.6245, 443.5872, 24.2642, 58.5299, 34.5352, 411.0325, 24.4895, 154.3828, 370.952], [26.2548, 58.644, 113.634, 72.1706, 0.0, 98.0628, 0.0, 0.0, 0.0, 174.156, 10.3211, 36.7756, 0.0, 215.4036, 13.8354, 72.6894, 184.81, 0.0, 2.8968, 15.2502, 13.1036, 21.9317, 9.4563, 36.9749, 89.1309, 44.0652, 58.0973, 19.5905, 94.4055, 53.1362, 0.0, 0.0, 71.4952, 0.0, 13.1288, 0.0, 25.6535, 0.0, 0.0, 54.4228, 0.0, 68.5908, 0.0, 23.3798, 37.6623, 34.6788, 47.5281, 17.199, 0.0, 0.0, 18.1069, 59.3018, 60.4843], [372.425, 307.944, 311.9906, 174.1555, 40.8473, 86.7979, 0.0, 179.2153, 0.0, 54.8522, 579.6552, 34.2619, 69.9964], [57.8113, 16.0608, 0.0, 0.0, 43.197, 14.5613, 26.3898, 143.4795, 106.0833, 123.5903, 118.9084, 187.9605, 373.9235, 79.0647, 114.9576, 181.8796, 7.8322, 249.8175, 42.5396, 57.5724, 45.8352, 105.2052, 27.0558, 140.418, 59.5322, 154.2024, 21.2663, 52.7062, 168.5407], [63.3006, 179.9658, 552.0822, 13.9604, 153.8225, 127.0206, 0.0, 272.43, 19.6056, 33.1306, 28.119, 17.352, 9.3799, 189.7989, 48.3806, 174.1653, 78.1326, 226.1002, 22.6365, 50.2772, 260.8564, 84.5754, 73.0002, 128.473, 19.8458, 289.0896, 196.1739], [181.1441, 123.984, 104.2608, 132.9821, 32.2885, 93.9787, 37.331, 82.6615, 2.4948, 274.7856, 12.3169, 25.1836, 64.8295, 270.7196, 0.0, 114.3526, 447.8627, 156.1064, 50.232, 0.0, 10.102, 17.8857, 43.1719, 115.2695, 114.7619, 21.0011, 94.392, 23.4978, 82.8727, 208.6039, 45.7197, 63.772, 53.669, 54.3811, 121.2638, 15.4786, 15.7116, 7.672, 69.5376, 0.0, 78.7533, 7.597, 55.2537, 39.4394, 92.165, 59.0304, 16.6936, 92.4723, 101.465, 32.5237, 2.6074, 3.5552, 141.3022, 59.5577], [61.6837, 132.0896, 229.8683, 255.1006, 178.4165, 169.2473, 134.4158, 316.8963, 471.7423, 135.6919, 264.6658, 148.631, 72.2654, 283.2638, 155.1879, 108.843, 50.1048, 100.4265, 225.2864, 62.8219, 221.5107, 183.5288, 160.285, 42.3838, 59.2769, 289.2402, 150.8598, 120.0402, 85.4918, 120.0179, 563.34, 192.9307], [473.1543, 63.3475, 292.5266, 825.7556, 264.3581, 28.5288, 36.309, 15.9746, 33.1534, 90.4961, 185.2243, 195.8064, 95.9536, 175.047, 133.483, 294.5111, 513.6919, 136.6256, 160.5912, 161.2926, 17.0318, 333.5512, 82.0105, 115.131, 16.464, 37.1376, 232.9077, 43.6531, 208.9044, 91.2548, 214.3865, 62.178, 104.5699, 315.7056, 148.0024, 48.6423, 96.983, 78.8058, 364.3298, 187.6867]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

