created: 20230701000406000
creator: Drevarr
modified: 20230705163540187
modifier: drevarr
tags: ChartData
title: 202307010004_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Dingle Mcbingle", "Ak\u00e1nt\u00f3r", "Pale Pam", "Ima Lou", "Gavann", "Drumina", "Oo Dads Mad", "Klengah", "Ryvalia Fazebringer", "Sister Elonith", "Gestern Yesteryear", "Blancooo Padreee", "Gamora Titus", "Melli Dragonswrath", "K\u00f4sair", "Arriasa", "Air One Com", "Aronorf Xideliesi", "Tribal S", "Smol Daddy Tika", "Johosh The Mighty", "Mmathuss", "Bella Sassy", "Koralia Danai", "Xanvias Einzbern", "Arcanophage Farra", "Solus Sanctus", "Zayde Sunsabre", "Newtype Khan"];
const professions = ["Firebrand", "Druid", "Druid", "Druid", "Firebrand", "Druid", "Spellbreaker", "Druid", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Firebrand", "Berserker", "Berserker", "Druid", "Firebrand", "Firebrand", "Druid", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.313, 0.0, 0.0, 20.8706, 27.324, 18.2795, 15.4174, 11.6532, 27.448, 27.213, 8.2513, 22.8392, 41.2214, 85.2914], [19.725, 14.4783, 25.6838, 27.6019, 87.0854, 34.296, 49.3042, 19.535, 19.4775, 26.365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [40.0233, 22.85, 53.8762, 38.4768, 32.9489, 21.384, 20.4586, 33.2338, 22.295, 18.7762, 33.983], [27.6665, 27.7239, 37.8518, 46.2643, 27.933, 20.856, 54.54, 17.0856, 23.03, 0.0, 72.6646, 17.3535], [6.0, 6.0115, 28.607, 28.9835, 11.7259, 56.3833, 15.801, 13.3096, 6.4562, 37.5389, 0.0, 27.401, 8.0652, 30.1101, 22.127, 80.0694], [70.807, 39.606, 37.0355, 0.0, 23.767, 19.223, 38.117, 21.1556, 43.326, 78.3994, 81.3749], [21.7605, 10.8946, 18.0086, 107.689, 98.3278, 0.0, 79.0224, 32.9918, 5.9045, 19.2902, 8.6323, 58.1325, 0.0], [0.0, 27.0645, 27.0317, 26.0352, 21.1876, 0.0, 0.0, 24.8875, 27.0725, 22.4482, 52.5589, 21.4245, 7.9994, 20.4977, 28.7414, 20.398, 20.445, 0.0, 0.0, 27.0734, 98.8416, 27.1975], [8.5437, 11.6687, 19.1693, 27.2333, 21.3173, 5.736, 19.2466, 21.8938, 18.571, 17.1605, 47.9695, 22.6665, 10.0078, 17.5694, 14.0483, 16.92, 27.448, 18.1777, 0.0, 24.6355, 53.4643, 85.7265], [29.7763, 98.9829, 42.347, 55.789, 55.4017, 0.0, 43.5826, 74.6928, 147.7368], [16.6286, 13.9049, 19.319, 29.5834, 37.3594, 16.272, 0.0, 18.9605, 39.935, 14.027, 50.4827, 17.526, 35.6058, 21.1327, 40.9934, 37.271, 18.659, 18.9222, 0.0, 12.9593, 36.6163, 59.8345], [12.0987, 0.0, 16.9978, 46.679, 27.8898, 12.144, 10.5686, 41.0962, 12.4705, 0.0, 18.1388, 16.1115, 5.0039, 27.2714, 95.5284, 40.326, 0.0, 28.5384, 0.0, 28.6559, 73.9066, 92.4715], [17.9338, 37.7856, 31.0463, 6.288, 35.8267, 32.5685, 21.903, 21.7138, 59.9892, 32.775, 11.3013, 32.1048, 32.0117, 38.916, 30.033, 17.7124, 0.0, 18.0062, 52.1165, 98.9989], [0.0, 0.0, 9.697, 28.7539, 17.1663, 44.256, 37.9598, 3.8102, 15.043, 3.3293, 128.9386, 39.4335, 7.1824, 14.6765, 31.459, 42.582, 0.0, 12.346, 12.1498, 9.7516, 134.1101, 61.3576], [32.3645, 32.387, 107.0846, 29.739, 50.6515, 29.5294, 99.9502, 62.228, 49.35, 27.4217, 0.0, 57.825, 85.1386, 129.2425], [7.7696, 19.2662, 30.1392, 14.7456, 69.184, 30.264, 33.6451, 32.5987, 30.184, 21.1262, 70.4792, 29.2215, 38.7035, 67.9846, 37.7231, 20.351, 0.0, 24.6299, 0.0, 58.1672, 111.983, 182.332], [12.9875, 19.2089, 36.3168, 68.9357, 40.2997, 19.152, 38.3477, 29.8166, 6.1985, 35.5205, 91.1312, 44.5395, 34.857, 43.0769, 40.8552, 35.344, 48.41, 38.5889, 0.0, 40.3321, 85.0262, 182.5496], [47.5922, 57.34, 42.0077, 71.7926, 42.0725, 0.0, 9.4536, 46.5091, 44.051, 20.1226, 35.8406, 43.4355, 38.8056, 24.6254, 21.2337, 43.663, 51.042, 41.2566, 62.3587, 125.5738, 149.9126], [35.2928, 28.67, 27.7056, 38.6611, 66.9788, 24.0, 22.8341, 54.3715, 36.6765, 12.7296, 79.5486, 47.9205, 38.7375, 28.9296, 42.974, 71.158, 30.691, 21.0316, 0.0, 51.1102, 44.7034, 240.2083], [0.0, 44.591, 29.5834, 85.7017, 20.4, 47.8498, 19.5048, 25.48, 38.3846, 71.6811, 49.473, 27.0278, 50.027, 84.3359, 57.434, 12.737, 42.9627, 0.0, 86.8231, 121.3056, 270.4519], [20.155, 18.3775, 27.7805, 57.9686, 76.3186, 10.152, 36.1661, 32.8104, 69.972, 52.8523, 39.4465, 10.557, 84.4873, 31.3286, 87.3758, 84.13, 13.442, 76.5574, 0.0, 63.8984, 172.2989, 206.4834], [69.0374, 41.2848, 23.0256, 44.1907, 75.0214, 27.024, 38.3477, 47.6582, 42.238, 34.933, 112.6574, 67.551, 49.6984, 42.5124, 65.3591, 66.74, 37.647, 63.4979, 0.0, 52.0511, 104.9069, 237.3798], [35.9235, 57.7701, 26.208, 75.3408, 77.2699, 19.056, 56.0429, 54.2203, 29.106, 54.3211, 168.9314, 97.1175, 69.4416, 51.4382, 81.6644, 52.17, 102.789, 64.7698, 0.0, 105.2142, 135.3456, 224.5426], [43.2057, 38.0738, 47.4739, 103.0349, 53.4014, 7.32, 39.3173, 98.8243, 75.656, 50.2574, 141.7232, 80.3505, 107.2941, 54.0842, 104.0035, 73.649, 89.441, 51.5863, 0.0, 53.0776, 86.8234, 265.6652], [53.6989, 52.6955, 43.4678, 62.3462, 99.5385, 51.144, 43.3896, 38.2838, 56.448, 50.9429, 186.0868, 56.718, 62.4974, 43.5708, 112.7549, 46.53, 51.747, 10.7329, 0.0, 47.1753, 183.6432, 317.0141], [55.7345, 66.0557, 61.5888, 106.9056, 157.4801, 37.128, 85.2763, 48.1723, 75.9745, 30.8693, 0.0, 123.9585, 110.5279, 0.0, 89.4025, 38.117, 75.576, 62.8155, 194.518, 260.5824, 0.0], [65.855, 25.3443, 56.7216, 64.7424, 57.6389, 83.064, 62.1998, 80.1662, 84.9905, 68.4216, 193.2986, 105.846, 80.9812, 84.8837, 31.0444, 49.585, 97.525, 83.6609, 0.0, 61.7171, 78.5117, 405.3515], [60.9811, 22.0186, 20.6294, 25.9891, 121.9368, 0.0, 142.919, 77.989, 30.184, 38.8253, 465.2717, 101.8785, 68.931, 112.3315, 22.0167, 63.403, 31.02, 24.785, 21.289, 111.3303, 307.6445, 581.8089], [173.9409, 0.0, 21.2285, 134.8762, 39.0457, 25.392, 113.831, 35.9251, 32.2665, 56.353, 380.9152, 156.699, 133.607, 79.8739, 48.0866, 200.549, 175.827, 32.8812, 23.4797, 190.3693, 241.3757, 543.7324]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

