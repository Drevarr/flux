created: 20230301221309000
creator: Drevarr
modified: 20230705163520963
modifier: drevarr
tags: ChartData
title: 202303012213_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Ark Darkness", "Sp\u00edcy Cheese", "Raziel Umbra", "Black Raspberry Pie", "Sister Elon\u00edth", "Eibh\u00ebar", "Ryvalia Fazebringer", "Gavann", "Kiloak", "What Charr U Saying", "Smol Daddy Tika", "Blanco Padre Guard", "Kahless The Drunk", "Newtype Khan", "Sygaldry Verdandi", "Jeckyll Mbs", "Bella Sassy", "Koralia Danai", "Ravioli Fetabringer"];
const professions = ["Berserker", "Firebrand", "Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.0868, 25.6258, 12.857, 45.4186, 11.6635, 0.0, 31.6789, 23.8271, 0.0, 22.0284, 68.7658, 29.3304, 29.3326, 69.6221], [14.112, 0.0, 15.8355, 11.5568, 39.5195, 0.0, 24.1277, 0.0, 54.3312, 0.0, 0.0, 25.609, 0.0, 0.0, 14.1933, 0.0, 13.8283, 0.0, 0.0, 0.0, 86.3057, 0.0, 34.1408, 15.2928, 14.6161, 30.492, 0.0], [44.957, 35.0889, 0.0, 0.0, 0.0, 14.6534, 17.7251, 0.0, 0.0, 0.0, 0.0, 0.0, 14.3021, 0.0, 0.0, 64.3742, 0.0, 44.3981, 20.4187, 0.0, 8.58, 4.8924, 0.0, 13.9896, 6.2114, 51.0048, 21.4914, 16.3053, 36.906, 20.273, 5.292, 0.0, 8.5197, 50.2603], [19.8072, 20.0164, 12.841, 14.7206, 26.4727, 26.1092, 4.7652, 6.426, 4.8246, 14.6534, 5.609, 8.1655, 9.9001, 4.1043, 18.3902, 6.6682, 25.272, 6.5292, 68.161, 12.6035, 13.3387, 4.2888, 13.4904, 8.019, 5.358, 15.921, 17.4784, 13.6224, 13.7088, 6.8161, 20.7458, 20.6571, 14.7269, 8.7894, 17.01, 22.5218], [9.9288, 14.2562, 13.2158, 7.0664, 12.5941, 3.4655, 13.2573, 53.9757, 13.8989, 13.1069, 21.9246, 31.995, 0.0, 8.7912, 5.2047, 17.9366, 5.7923, 16.0632, 12.3634, 7.2794, 30.3653, 7.0656, 26.5075, 8.5536, 6.5793, 72.1055, 0.0, 7.0086, 11.5546, 10.293, 8.7648, 3.8232, 7.019, 3.654, 7.6077, 10.4755, 8.4609, 8.6873, 14.4222, 8.7494, 5.292, 9.2734, 12.6174, 35.2123], [30.4789, 98.0813, 29.7738, 49.5396, 96.5178, 60.5629, 107.352, 37.8101, 52.2975, 101.4235], [11.4156, 29.0426, 16.8038, 8.8862, 9.8644, 5.4391, 13.6667, 36.9533, 20.7936, 17.0822, 16.735, 22.4871, 8.5941, 6.7824, 3.5673, 20.183, 13.6558, 12.0474, 13.6772, 8.925, 22.4294, 13.6234, 20.592, 6.4456, 84.2545, 6.5719, 12.6035, 13.5086, 11.5968, 13.2, 8.1162, 6.885, 17.3826, 13.5302, 13.0733, 0.0, 11.3603, 20.8197, 15.1087, 17.2973, 14.7523, 11.7036, 20.1643], [12.474, 23.4462, 19.1958, 6.7373, 11.8703, 9.4095, 17.0046, 35.4136, 16.9997, 24.0883, 14.9274, 32.2969, 10.2159, 7.506, 8.9767, 20.425, 6.6355, 19.9898, 15.1317, 11.7902, 13.1155, 5.6746, 15.575, 0.0, 7.3317, 83.939, 0.0, 17.5366, 13.2254, 23.4337, 7.524, 9.4932, 15.0024, 19.1574, 6.5966, 13.1155, 7.4256, 11.3157, 22.4838, 23.4313, 22.5893, 13.9392, 16.0371, 25.2305], [21.5611, 39.5577, 6.9696, 13.0077, 25.7729, 13.8556, 72.1958, 0.0, 21.5693, 38.2514, 43.6913, 5.3838, 7.2468, 22.7195, 25.1942, 6.9471, 9.6379, 19.1199, 0.0, 23.8075, 6.911, 6.9638, 0.0, 7.1144, 132.693, 5.4686, 20.0333, 12.3475, 17.9784, 7.3128, 10.125, 31.13, 12.6846, 8.0892, 14.1926, 0.0, 9.7119, 33.0231, 6.9142, 25.583, 19.4955, 13.7082, 41.081], [26.586, 46.1854, 40.4248, 33.3164, 93.9229, 15.4675, 38.0611, 44.6072, 53.2748, 7.8084, 7.6901, 20.8051, 7.112, 8.924, 19.9175, 7.0664, 34.357, 7.8384, 39.4618, 0.0, 0.0, 133.9552, 0.0, 27.1923, 35.2018, 38.4958, 31.5216, 25.6446, 20.7355], [26.0941, 41.9447, 56.1142, 0.0, 39.3206, 52.0125, 45.8797, 0.0, 0.0, 0.0, 24.5376, 0.0, 0.0, 31.6241, 0.0, 9.3614, 0.0, 31.9738, 0.0, 149.5754, 0.0, 32.8173, 21.8914, 18.1843, 8.0256, 12.7656, 12.6449, 68.904, 19.4526, 47.5834, 7.9968, 33.5016, 11.9815, 39.1376, 58.9378, 0.0, 22.906, 51.3638], [7.8624, 21.3254, 23.6808, 19.36, 5.0873, 37.6839, 39.6774, 83.487, 8.5728, 12.7133, 69.9137, 45.2005, 0.0, 0.0, 0.0, 36.5645, 23.829, 6.3807, 21.0436, 33.1443, 57.5942, 27.1584, 78.4742, 10.1869, 3.9292, 174.5047, 0.0, 45.598, 10.0056, 0.0, 0.0, 38.9934, 10.1115, 7.9411, 41.0907, 0.0, 21.34, 36.8928, 31.4002], [7.6356, 41.2959, 29.7505, 26.8136, 8.1272, 19.278, 14.1075, 82.375, 7.6243, 67.2662, 92.0715, 59.6134, 5.016, 25.7472, 7.3137, 20.7483, 7.648, 5.6725, 20.9088, 11.4595, 14.7888, 6.9973, 111.2349, 29.1174, 24.157, 27.3108, 37.4088, 7.1118, 17.6278, 85.2426, 12.4227, 40.4659, 35.2359, 33.4125, 7.0632, 7.0422, 7.1064, 23.5998, 32.6049, 49.1066], [5.4684, 47.0102, 35.9398, 7.1438, 10.4434, 7.0915, 27.8057, 65.7803, 13.5706, 38.2579, 41.8083, 7.0932, 5.6514, 7.0848, 0.0, 38.6035, 7.8636, 14.6354, 20.3633, 0.0, 22.3344, 0.0, 34.5946, 0.0, 6.6462, 118.4928, 0.0, 38.7731, 29.6794, 26.9677, 52.932, 20.169, 9.8855, 33.1992, 21.9082, 38.4595, 17.6715, 23.6561, 56.6164, 36.15, 59.4216, 29.9693, 30.9835, 87.6295], [10.5336, 72.0469, 19.2257, 27.375, 14.3933, 29.812, 0.0, 100.7661, 36.3341, 63.4877, 61.2838, 88.9673, 21.0505, 0.0, 0.0, 36.6682, 19.6681, 0.0, 19.8706, 14.791, 19.7208, 26.2531, 19.8058, 0.0, 0.0, 204.4829, 0.0, 34.6522, 9.827, 41.4808, 39.864, 20.3148, 15.7525, 195.6456, 78.003, 67.3517, 19.6707, 19.6465, 20.0801, 40.0765, 25.4318, 13.3778, 39.6506, 63.7032], [62.5968, 69.0425, 50.0526, 16.185, 21.1556, 19.7599, 24.3418, 93.8374, 15.504, 93.4406, 59.8844, 102.2483, 0.0, 5.3655, 67.392, 17.8901, 3.6588, 5.4662, 0.0, 30.8405, 17.0678, 14.3021, 183.0248, 0.0, 28.7565, 49.1069, 28.4773, 43.4544, 26.8758, 11.1982, 82.215, 8.8115, 59.6429, 34.9503, 50.0297, 77.658, 40.9728, 34.6853, 23.7547, 52.5334, 106.0382], [280.8278, 153.6173, 152.3232, 79.7098, 95.2305, 53.9635, 54.9437, 92.8541, 53.0362, 87.6096, 11.6037, 277.6928, 24.425, 25.2898, 77.4377, 43.4808, 30.6342, 32.0944, 71.5028, 74.5114, 31.8444, 33.368, 78.0648, 46.6919], [18.5472, 102.6801, 72.2982, 7.4149, 10.8984, 45.3951, 58.5399, 129.422, 13.8259, 71.832, 94.6954, 69.876, 3.6282, 7.6356, 0.0, 19.0426, 27.5866, 16.8217, 26.3925, 1.7618, 56.7389, 23.0957, 57.7325, 0.0, 6.9639, 287.6329, 7.947, 54.505, 11.9227, 46.1813, 19.3248, 11.2266, 23.7359, 122.148, 34.8606, 46.633, 26.0967, 52.168, 31.6919, 80.4518, 24.7968, 30.4533, 68.7474, 50.8121], [79.6824, 110.7508, 58.2153, 3.6978, 41.422, 37.5692, 57.2173, 133.0147, 0.0, 94.2672, 59.9427, 42.3331, 7.2565, 18.9, 55.3997, 7.332, 20.6144, 48.5622, 0.0, 44.0986, 15.0806, 66.2314, 18.7053, 7.2314, 127.9596, 0.0, 89.2474, 56.64, 36.9519, 11.2992, 1.8468, 26.4685, 105.9138, 33.1753, 67.8374, 18.3141, 85.8033, 62.4962, 30.004, 44.3318, 10.377, 69.2485, 89.987], [36.414, 166.9509, 66.378, 7.473, 55.7119, 56.3881, 66.3494, 117.9597, 48.8467, 106.4294, 162.0435, 127.9802, 14.7303, 10.5516, 16.2282, 84.5338, 10.5214, 0.0, 27.1667, 13.3778, 70.6147, 44.977, 87.8342, 21.1693, 27.2369, 292.8397, 0.0, 97.008, 44.2642, 47.8281, 16.8168, 85.4874, 65.4748, 160.6716, 58.0689, 125.5373, 71.9712, 94.2678, 89.7505, 112.163, 69.7939, 48.1677, 40.6234, 108.3958]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

