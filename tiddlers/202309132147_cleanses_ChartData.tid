created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Rahani Sunray", "Solus Luxes", "Mort\u00e4rion", "Rafaellagabriela", "Arcanophage Farra", "Revenant Brandorf", "Primal Clone", "Cat Wigglebooty", "Eibh\u00ebar", "Clean And Green", "Tootsie Pop Rocks", "Tegan Parker", "Drevarr Moonwillow", "Etchery Howls", "Zaedy Zae", "Tribal S"];
const professions = ["Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Vindicator", "Chronomancer", "Scrapper", "Chronomancer", "Druid", "Scrapper", "Tempest", "Scrapper", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3178, 0.2886, 0.1848, 0.4895, 0.037, 0.0753, 0.0, 0.0], [0.0454, 0.0302, 0.0397, 0.0703, 0.0833, 0.0, 0.093, 0.1395, 0.1544, 0.1522, 0.2517, 0.0, 0.0538, 0.0, 0.2778], [0.103, 0.0839, 0.0556, 0.1484, 0.35, 0.0, 0.1977, 0.155], [0.0681, 0.047, 0.0, 0.0352, 0.1833, 0.0, 0.0349, 0.2248, 0.1275, 0.1739, 0.2448, 0.0, 0.0, 0.0, 0.2407], [0.082, 0.0872, 0.0079, 0.0977, 0.1167, 0.0, 0.093, 0.3721, 0.094, 0.4783, 0.3077, 0.0185, 0.0753, 0.0, 0.1296], [0.1429, 0.125, 0.0833, 0.0227, 0.1977, 0.3643, 0.1611, 0.75, 0.2937, 0.0, 0.0, 0.0, 0.5556], [0.1728, 0.1007, 0.0317, 0.1367, 0.5667, 0.0, 0.5581, 0.2171, 0.1946, 0.2174, 0.3636, 0.0, 0.0108, 0.0, 0.3519], [0.0663, 0.3188, 0.1429, 0.0898, 0.7167, 0.0, 0.3837, 0.2868, 0.2886, 0.3261, 0.2587, 0.0185, 0.0538, 0.0, 0.4444], [0.1658, 0.1879, 0.0873, 0.1367, 0.5333, 0.0, 0.2442, 0.2868, 0.3758, 0.1957, 0.2937, 0.2593, 0.2258, 0.0, 0.0], [0.0772, 0.4444, 0.332, 0.8, 0.9535, 1.9767], [0.4852, 0.1946, 0.1825, 0.4297, 0.65, 0.0, 0.4884, 0.4031, 0.3826, 1.1304, 1.2308, 0.037, 0.0108, 0.0213, 0.6296], [0.0, 0.3658, 0.5397, 0.6055, 0.2667, 0.4302, 2.4419, 1.2685, 1.9348, 1.4965, 0.3519, 0.2473, 0.0, 0.7222], [1.0297, 0.5872, 0.5159, 0.7891, 1.3833, 0.0682, 1.8023, 2.6047, 1.3691, 0.8913, 2.3077, 0.3889, 0.6667, 0.1702, 2.1667], [0.9162, 0.6678, 0.5556, 0.6797, 1.3667, 1.0465, 2.7209, 1.7114, 1.0, 2.6993, 0.0, 0.2151, 3.6111], [1.4311, 0.7919, 0.4365, 0.9062, 2.0, 0.0455, 2.0349, 2.0155, 1.6779, 0.6304, 1.0909, 1.537, 0.8817, 0.0638, 2.9444], [1.5497, 0.7584, 0.754, 0.8164, 1.5833, 1.5581, 3.6822, 1.1611, 2.6304, 2.049, 0.6111, 0.4731, 0.2979, 3.2963]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

