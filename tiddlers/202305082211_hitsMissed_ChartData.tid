created: 20230508221143000
creator: Drevarr
modified: 20230705163529244
modifier: drevarr
tags: ChartData
title: 202305082211_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Spreadflamesoflight", "Gabe Malhorn", "Astrid X Dragon", "Elektra Gd", "Red Date Sayaccho", "Panther B Me", "Inedible Plant", "Corinna Barimen", "Nazhul Naxxremis", "Ark Darkness", "Gavann", "La Morte Vivante", "Tootsy Pop Tart", "Sumatra Satyricon", "Lord Erin The Wise", "No Reserv\u00e9", "Husky Guard", "Grasszanine", "Koralia Danai", "Fribble Bibble", "Kiloak", "Tika Rucola", "Be\u00eb", "Jeckyll Mbs", "Sygaldry Verdandi", "Kary\u00edna", "Artakama Nahid", "Sister Elon\u00edth", "Tribal S", "Arriasa", "Solus Sanctus", "Cerys Fireblade", "High Sorcer Baradun", "Xanvias Einzbern", "Smol Gluvs", "Mincemeat Pie", "Rozaalyna", "Primal Clone", "Mistwalker Caelon", "Newtype Khan", "Mac Aaroni", "Miphest\u00f6", "Ryvalia Fazebringer", "Osh Kosh Johosh", "Tegan Parker", "Drevarr Moonwillow", "Bella Fae", "Eibh\u00ebar", "N\u00e9azoule", "Zady Stardust"];
const professions = ["Firebrand", "Willbender", "Firebrand", "Dragonhunter", "Tempest", "Tempest", "Scourge", "Vindicator", "Guardian", "Scourge", "Firebrand", "Firebrand", "Dragonhunter", "Scourge", "Soulbeast", "Weaver", "Herald", "Dragonhunter", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Scourge", "Berserker", "Firebrand", "Vindicator", "Tempest", "Firebrand", "Druid", "Druid", "Firebrand", "Berserker", "Tempest", "Berserker", "Scourge", "Berserker", "Scourge", "Chronomancer", "Vindicator", "Spellbreaker", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Reaper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 0, 0, 0, 10, 2, 0, 0], [0, 3, 3, 1, 2, 0, 0, 4], [0, 4, 1, 2, 0, 1, 3, 2], [0, 1, 10, 4, 0], [0, 0, 2, 4, 0, 0, 9, 0, 1, 0], [8, 1, 1, 0, 0, 0, 2, 2, 2], [0, 1, 0, 0, 1, 1, 4, 0, 0, 10], [0, 0, 0, 0, 1, 4, 3, 0, 0, 9], [0, 2, 0, 4, 3, 0, 0, 7, 1], [0, 5, 9, 4, 0], [0, 1, 0, 0, 8, 0, 0, 1, 10], [0, 5, 0, 3, 6, 3, 4], [0, 1, 7, 2, 2, 2, 0, 1, 1, 2, 5], [0, 1, 0, 1, 0, 4, 1, 0, 0, 7, 1, 3, 0, 1, 1, 3, 3], [0, 0, 0, 0, 0, 5, 3, 0, 0, 10, 1, 0, 1, 1, 0, 3, 1, 2], [0, 0, 0, 1, 1, 3, 0, 2, 11, 1, 1, 0, 2, 0, 3, 2, 1], [0, 0, 0, 3, 0, 0, 13, 0, 0, 1, 2, 0, 2, 3, 5], [0, 0, 1, 1, 6, 3, 0, 0, 3, 2, 1, 0, 3, 0, 4, 3, 3], [0, 0, 0, 0, 0, 14, 0, 3, 0, 4, 0, 2, 3, 4], [0, 0, 0, 1, 1, 7, 3, 0, 0, 11, 2, 1, 1, 1, 0, 2, 2, 3], [0, 1, 0, 0, 6, 6, 5, 0, 0, 8, 0, 2, 1, 1, 1, 3, 0, 1], [0, 1, 0, 0, 4, 5, 0, 0, 12, 0, 3, 1, 0, 0, 0, 6, 3], [0, 0, 0, 1, 3, 4, 5, 0, 0, 1, 0, 1, 3, 8, 0, 3, 4, 3], [0, 0, 0, 0, 2, 3, 5, 0, 0, 9, 2, 2, 1, 1, 1, 3, 4, 4], [0, 0, 0, 0, 1, 6, 2, 0, 0, 13, 1, 2, 1, 0, 0, 0, 4, 7], [0, 0, 0, 9, 4, 5, 0, 0, 11, 0, 3, 0, 1, 1, 1, 2], [0, 1, 0, 0, 2, 11, 3, 0, 0, 11, 0, 1, 3, 1, 0, 0, 1, 3], [0, 0, 0, 3, 5, 6, 0, 0, 10, 0, 4, 2, 5, 0, 1, 2, 0], [0, 0, 0, 7, 6, 0, 14, 1, 0, 0, 2, 0, 1, 3, 4], [0, 0, 0, 4, 7, 3, 1, 0, 11, 0, 1, 0, 1, 0, 1, 8, 2], [0, 0, 0, 1, 2, 4, 6, 0, 0, 9, 1, 2, 2, 5, 2, 1, 5], [0, 0, 0, 0, 4, 8, 1, 0, 0, 15, 0, 3, 1, 1, 0, 2, 0, 5], [0, 0, 0, 1, 6, 1, 0, 0, 16, 0, 4, 2, 1, 0, 2, 1, 6], [0, 0, 0, 6, 8, 0, 0, 0, 16, 2, 1, 1, 0, 0, 2, 4], [0, 0, 0, 0, 1, 12, 4, 1, 0, 10, 2, 1, 2, 0, 0, 3, 3, 3], [0, 0, 0, 1, 6, 9, 3, 0, 0, 10, 0, 3, 1, 1, 0, 3, 3, 2], [0, 0, 0, 4, 12, 9, 0, 0, 9, 0, 1, 3, 0, 1, 1, 2], [0, 2, 0, 0, 0, 7, 2, 0, 0, 11, 1, 7, 1, 1, 0, 3, 6, 2], [0, 0, 0, 0, 0, 10, 1, 0, 11, 0, 0, 1, 2, 0, 8, 5, 5], [0, 1, 0, 0, 10, 4, 1, 0, 10, 0, 1, 1, 3, 0, 2, 8, 5], [0, 0, 0, 1, 0, 7, 3, 1, 0, 16, 2, 3, 1, 2, 0, 2, 3, 5], [0, 1, 0, 0, 5, 10, 1, 0, 0, 9, 3, 3, 2, 2, 0, 6, 2, 2], [0, 1, 0, 0, 13, 2, 0, 0, 17, 2, 2, 0, 2, 0, 2, 2, 3], [0, 0, 0, 6, 5, 4, 0, 0, 12, 0, 3, 0, 4, 0, 0, 6, 9], [0, 1, 0, 0, 7, 9, 3, 1, 0, 7, 1, 5, 1, 4, 0, 2, 1, 7], [0, 0, 7, 8, 5, 0, 0, 18, 0, 3, 1, 3, 1, 2, 1, 3], [0, 7, 8, 4, 0, 0, 11, 0, 4, 3, 5, 0, 2, 4, 7], [0, 0, 0, 0, 6, 8, 5, 0, 0, 14, 0, 5, 2, 4, 0, 3, 6, 4], [0, 0, 0, 0, 11, 9, 2, 1, 0, 11, 1, 4, 1, 6, 0, 2, 4, 7], [0, 0, 0, 5, 9, 5, 0, 16, 0, 4, 0, 4, 0, 5, 6, 6], [0, 0, 0, 0, 7, 5, 7, 0, 0, 15, 0, 7, 3, 4, 0, 4, 9, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

