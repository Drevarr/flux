created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Miphest\u00f6", "Glorious Gluvs", "Milvia Rosalyn", "Alizayd Delnbone", "X Mad X King X", "Super Druid", "K\u00e2 \u00d4tik R\u00e6j", "Hawaiian Supreme", "Ryvalia Fazebringer", "Hawaiian Supreme", "Blancooo Padreee", "Zaedy Zae", "Tribal S", "Gavann", "Kisumaiassu", "Sygaldry Verdandi", "Xanvias Einzbern", "Crusader Siolith", "Solus Sanctus", "Bella Sassy", "Aspros Gemeos", "Newtype Khan"];
const professions = ["Druid", "Tempest", "Berserker", "Druid", "Firebrand", "Firebrand", "Druid", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Berserker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24.5708, 4.5053, 0.0, 0.0, 0.0, 18.5481, 24.7663, 24.6266, 0.0, 0.0, 24.7441, 34.5168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.717, 0.0, 0.0, 0.0, 0.0], [9.2947, 17.9098, 5.8402, 0.0, 27.0096, 0.0, 10.3001, 21.5775, 12.0017, 27.2792, 25.542, 0.0, 12.0099, 11.9859, 12.012, 5.9885, 4.7713], [31.2466, 0.0, 30.144, 4.9896, 7.128, 47.5524, 0.0, 0.0, 0.0, 17.2965, 0.0, 0.0, 39.4944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.8465, 43.82, 9.933, 0.0, 0.0, 0.0, 3.2948], [17.3502, 0.0, 17.2827, 43.2793, 41.0614, 12.4531, 0.0, 30.3282, 65.6064, 43.0771, 12.9226], [23.207, 6.9372, 38.241, 20.4564, 62.295, 27.2052, 0.0, 35.4986, 44.0512, 48.972, 27.3327, 44.8877, 16.4771, 30.0563], [42.2464, 16.9426, 34.2249, 45.0824, 0.0, 57.6912, 31.2461, 13.5148, 40.5405, 31.6807, 27.7264, 80.0712, 0.0, 36.1931], [50.4252, 0.0, 44.3889, 36.45, 45.3376, 40.9464, 40.8082, 68.1871, 0.0, 136.68, 0.0, 9.7502], [57.1155, 13.3973, 14.016, 17.199, 10.3356, 20.1465, 55.9504, 56.1053, 0.0, 0.0, 0.0, 0.0, 99.144, 0.0, 0.0, 0.0, 0.0, 55.7658, 0.0, 0.0, 17.0344, 0.0, 14.553, 28.1018, 48.7801], [22.512, 40.1058, 28.0606, 0.0, 42.7856, 71.6643, 45.12, 30.7084, 0.0, 0.0, 122.7264, 53.6947, 30.7944, 24.696], [19.703, 9.6478, 7.408, 13.1166, 22.8096, 27.9387, 32.6652, 26.2237, 14.867, 29.8088, 27.9203, 34.3536, 20.5526, 7.6563, 15.9075, 11.5644, 34.3002, 26.0172, 0.0, 16.9527, 21.1199, 35.2275, 15.1909, 25.0806, 19.6416, 17.4824], [60.7316, 0.0, 43.1965, 184.2911, 132.9372, 69.5675, 121.2854, 119.3115], [25.936, 45.36, 16.7746, 2.3643, 38.7539, 31.6333, 44.1499, 41.1762, 27.7667, 0.0, 120.1968, 27.2266, 9.3483, 34.4295, 9.2321, 67.6166, 69.0228, 2.2698, 18.1374, 33.3371, 34.419, 18.3774, 83.9682, 26.3252], [6.2818, 0.0, 19.12, 38.556, 9.1476, 37.962, 25.3422, 49.3046, 35.2162, 50.4174, 39.2422, 0.0, 126.5616, 32.9146, 35.4686, 25.2945, 0.0, 51.6963, 119.7504, 0.0, 34.5999, 24.3958, 75.8835, 16.1524, 25.4259, 21.8786, 0.0], [39.7769, 15.561, 16.144, 55.2636, 36.234, 34.3323, 44.4312, 49.2016, 24.5678, 35.0836, 26.8958, 0.0, 109.0992, 0.0, 20.9808, 48.4785, 18.7071, 51.8752, 24.7104, 0.0, 44.3631, 49.7551, 40.3095, 23.9813, 66.8293, 24.9066, 31.5692], [51.7841, 45.942, 60.032, 61.5384, 6.6528, 56.8764, 89.8498, 58.7843, 49.4966, 55.8557, 28.9449, 6.636, 67.728, 48.1584, 14.8684, 17.892, 12.7306, 25.0879, 39.6792, 55.3109, 38.1546, 32.34, 30.1895, 29.0985, 6.4926, 16.2385], [38.4324, 30.5737, 22.8, 60.7068, 27.6804, 47.8188, 31.7601, 49.047, 44.3078, 44.2839, 31.7626, 2.646, 102.0, 20.9318, 55.688, 43.7535, 59.3284, 42.6182, 26.0172, 11.3724, 24.1423, 73.6499, 41.0025, 12.4164, 21.251, 57.9973, 39.3354], [16.8287, 10.7741, 34.064, 52.92, 18.8892, 64.3689, 85.9003, 40.1341, 54.0763, 58.5545, 67.5211, 3.696, 125.0112, 43.608, 13.0072, 52.2585, 57.1904, 53.7534, 42.4116, 7.5933, 25.0411, 35.6495, 95.5185, 32.3871, 45.7352, 32.1086, 47.1689], [54.0326, 4.6238, 35.792, 40.257, 32.2661, 78.5547, 117.6604, 114.2198, 51.324, 73.0704, 101.0768, 0.0, 138.72, 99.047, 23.1381, 34.902, 17.0065, 78.573, 33.858, 0.0, 42.6065, 45.9782, 65.2575, 10.3837, 62.8742, 36.9644], [75.6595, 43.0669, 46.336, 64.449, 25.0193, 73.926, 19.1712, 56.2083, 61.9949, 41.5851, 30.9941, 7.644, 149.8992, 26.0131, 59.9814, 30.7125, 7.6286, 97.4002, 149.4504, 0.0, 40.2781, 58.1183, 79.1175, 27.0305, 44.1657, 49.4041, 77.6286], [57.8341, 66.2009, 31.936, 80.8164, 45.2866, 95.1048, 145.6356, 88.975, 15.4987, 86.8095, 95.6976, 32.109, 149.8992, 17.2157, 47.3126, 77.1435, 26.6273, 74.906, 130.3236, 0.0, 91.7083, 77.9279, 59.829, 36.3977, 66.0759, 47.4126, 52.5817], [4.4506, 30.5144, 61.312, 72.765, 73.7273, 46.3536, 99.6411, 87.9446, 36.8856, 120.6664, 88.5767, 13.7235, 151.776, 58.7002, 61.2504, 76.1985, 79.0559, 145.1164, 42.2928, 11.817, 76.2669, 61.9338, 167.013, 54.7752, 90.874, 81.2126, 69.4253], [201.5649, 158.3067, 124.2662, 154.3104, 200.0339, 257.5332, 6.6045, 486.5808, 126.1219, 155.5371, 160.8075], [51.2046, 31.5666, 48.608, 91.9674, 79.3822, 81.8514, 258.9352, 108.5526, 38.9611, 152.5606, 102.8186, 303.8784, 101.4739, 54.2921, 30.051, 136.1492, 150.5722, 88.1496, 20.3814, 127.2069, 158.3609, 178.794, 110.9788, 40.4303, 98.8354, 102.6082]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

