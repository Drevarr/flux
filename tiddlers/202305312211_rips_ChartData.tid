created: 20230531221142000
creator: Drevarr
modified: 20230705163532593
modifier: drevarr
tags: ChartData
title: 202305312211_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Mildly Ecstatic", "Arriasa", "Grasszanine", "Smol Gluvs", "Primal Clone", "Newtype Khan", "Irin The Undeath", "Be\u00eb", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Chronomancer", "Scourge", "Druid", "Spellbreaker", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0377, 0.0106, 0.0556, 0.0082, 0.0241, 0.0, 0.0, 0.0162, 0.012, 0.0234, 0.0214, 0.0369, 0.0, 0.0, 0.0], [0.0, 0.0746, 0.0556, 0.0652, 0.0162, 0.176, 0.0702, 0.05, 0.0615, 0.0512, 0.0, 0.0], [0.0498, 0.0636, 0.0, 0.0403, 0.0307, 0.0185, 0.0217, 0.0054, 0.012, 0.0292, 0.0071, 0.0451, 0.0273, 0.0156, 0.0], [0.0709, 0.0106, 0.2222, 0.0416, 0.0329, 0.037, 0.0543, 0.0216, 0.136, 0.0117, 0.0929, 0.0738, 0.0205, 0.0, 0.0], [0.086, 0.0247, 0.5333, 0.0409, 0.0241, 0.0185, 0.0652, 0.0541, 0.056, 0.0994, 0.0286, 0.0451, 0.0239, 0.0, 0.0439], [0.0709, 0.0177, 0.4, 0.0775, 0.0439, 0.037, 0.0543, 0.0324, 0.156, 0.0351, 0.0786, 0.0246, 0.0273, 0.0156, 0.0], [0.089, 0.0247, 0.3222, 0.0737, 0.0219, 0.0556, 0.0652, 0.0541, 0.18, 0.0234, 0.05, 0.0492, 0.0205, 0.0312, 0.0], [0.184, 0.0636, 0.4111, 0.0749, 0.0921, 0.0435, 0.027], [0.1538, 0.0601, 0.5333, 0.0819, 0.0044, 0.0, 0.1304, 0.0649, 0.276, 0.0351, 0.0857, 0.0451, 0.0546, 0.0312, 0.0263], [0.1719, 0.0389, 0.1444, 0.1039, 0.1316, 0.1481, 0.1304, 0.0703, 0.16, 0.0351, 0.1, 0.0738, 0.0648, 0.0312, 0.0088], [0.1659, 0.106, 0.3778, 0.1631, 0.1667, 0.1111, 0.0, 0.1892, 0.344, 0.0702, 0.25, 0.1189, 0.0922, 0.0469, 0.0088]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

