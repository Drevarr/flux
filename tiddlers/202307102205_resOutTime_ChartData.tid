created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Drevarr Moonwillow", "Nidircc", "Be\u00eb", "Crusader Siolith", "Rozaalyna", "Inedible Plant", "Ryvalia Fazebringer", "Melli Dragonswrath", "Tootsie Pop Rocks", "Tika Fiery", "Gabe Malhorn", "Zaedy Zae", "Eibh\u00ebar", "Tegan Parker", "Kary\u00edna", "Solus Sanctus", "Newtype Khan", "Daphne Agla\u00e9", "Konztantin\u00eb", "Bella Sassy", "Rangu Elfdrake", "Sub Train", "Sygaldry Verdandi", "Fribble Bibble", "Koralia Danai"];
const professions = ["Chronomancer", "Scrapper", "Tempest", "Scourge", "Firebrand", "Scourge", "Vindicator", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Tempest", "Vindicator", "Firebrand", "Spellbreaker", "Reaper", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 848.68, 0.0, 87.84, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [642.39, 0.0, 26.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 424.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 39.16, 0.0, 0.0], [0.0, 0.0, 107.52, 0.0, 0.0, 0.0, 122.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2141.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [214.13, 0.0, 0.0, 0.0, 156.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 424.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 146.4, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2333.87, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [642.39, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1909.53, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [214.13, 55.44, 0.0, 0.0, 235.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1485.19, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2997.82, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 212.17, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3211.95, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [856.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.76, 0.0, 0.0, 1909.53, 61.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2970.38, 122.2, 29.28, 0.0, 152.88, 0.0, 0.0, 0.0, 0.0, 0.0], [3211.95, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 485.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1070.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.8, 1909.53, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 58.56, 234.96, 0.0, 0.0], [2783.69, 0.0, 0.0, 156.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1060.85, 0.0, 58.56, 0.0, 76.44, 0.0, 0.0, 117.12, 0.0, 0.0], [2141.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3819.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1284.78, 0.0, 53.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1909.53, 152.75, 0.0, 0.0, 305.76, 0.0, 0.0, 29.28, 0.0, 0.0, 0.0], [3426.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2333.87, 91.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 392.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 43.2, 3819.06, 30.55, 0.0, 161.7, 0.0, 0.0, 0.0, 0.0, 69.56], [6638.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 77.91, 88.2, 0.0, 0.0, 0.0, 0.0, 0.0, 1485.19, 61.1, 0.0, 539.0, 229.32, 0.0, 0.0, 0.0, 313.28, 0.0, 0.0], [3640.21, 0.0, 156.8, 0.0, 51.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2758.21, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [4496.73, 0.0, 0.0, 0.0, 0.0, 0.0, 1058.4, 0.0, 31.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 29.28, 0.0, 0.0], [1713.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 176.4, 0.0, 0.0, 0.0, 0.0, 0.0, 2758.21, 30.55, 175.68, 107.8, 382.2, 0.0, 0.0, 0.0, 78.32, 0.0, 0.0], [642.39, 0.0, 40.32, 0.0, 235.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5092.08, 61.1, 234.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [7494.55, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2758.21, 61.1, 0.0, 592.9, 305.76, 0.0, 0.0, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

