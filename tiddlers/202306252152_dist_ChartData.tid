created: 20230625215204000
creator: Drevarr
modified: 20230705163536554
modifier: drevarr
tags: ChartData
title: 202306252152_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Gabe Malhorn", "Eibh\u00ebar", "Tika Fiery", "Smol Gluvs", "Grasszanine", "Johosh The Mighty", "Newtype Khan", "Drevarr Moonwillow", "Gestern Yesteryear", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Reaper", "Spellbreaker", "Berserker", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[345, 268, 255, 290, 269, 663, 284, 162, 321, 215, 7449, 185, 246, 223, 260, 398, 594], [1540, 349, 235, 286, 207, 639, 329, 144, 282, 13577, 4083, 457, 657, 343, 317, 549, 745, 463], [395, 280, 247, 262, 252, 530, 168, 167, 290, 184, 516, 251, 219, 3154, 168, 225, 355, 908], [194, 245, 189, 370, 228, 480, 289, 102, 226, 235, 18177, 261, 236, 688, 208, 472, 479, 648], [160, 210, 190, 284, 244, 705, 389, 249, 206, 223, 308, 257, 243, 801, 166, 210, 295, 675], [219, 194, 199, 234, 343, 508, 232, 98, 276, 226, 2283, 232, 240, 749, 218, 258, 293, 890], [487, 193, 211, 226, 219, 700, 240, 169, 210, 779, 7414, 211, 144, 718, 161, 201, 445, 639], [549, 194, 200, 189, 210, 595, 166, 216, 245, 236, 544, 223, 221, 389, 251, 169, 240, 292], [180, 148, 212, 244, 210, 300, 185, 151, 254, 200, 2317, 176, 199, 397, 182, 175, 335, 522], [440, 227, 194, 200, 201, 245, 182, 135, 270, 222, 309, 136, 179, 366, 177, 186, 250, 397]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

