created: 20230224230708000
creator: Drevarr
modified: 20230705163520153
modifier: drevarr
tags: ChartData
title: 202302242307_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Whose Guardian", "Kosair", "Viral Marketing", "Air One Com", "Aronorf Xideliesi", "Kahless The Drunk", "Blanco Padre Guard", "Gavann", "Zaylen Harker", "Ravioli Fetabringer", "Bella Sassy", "Koralia Danai"];
const professions = ["Dragonhunter", "Dragonhunter", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[68.9979, 75.8472, 19.9891, 31.5418, 0.0, 31.0209, 53.7045, 56.0555, 14.5962, 0.0, 0.0, 5.1562, 0.0, 59.509, 0.0, 7.488, 0.0, 31.739, 62.0259, 42.0835, 59.3331, 23.2711, 51.1188, 0.0, 114.2288, 43.3296, 48.9995, 9.1101, 0.0], [20.0283, 60.4656, 83.4086, 57.3648, 25.4016, 53.8304, 56.3182, 90.2418, 56.2734, 0.0, 0.0, 25.2691, 0.0, 130.4803, 0.0, 0.0, 0.0, 75.263, 89.8753, 62.927, 173.5462, 74.2791, 0.0, 0.0, 118.6192, 79.4448, 155.1953, 57.548, 45.0927], [305.6346, 90.6843, 86.3909, 64.0579, 356.2496, 292.7232, 222.999, 213.0295, 26.8069], [93.1157, 112.3387, 101.5046, 79.92, 52.3152, 96.7775, 89.6112, 92.7555, 44.523, 0.0, 66.6557, 36.5786, 212.532, 51.696, 26.4333, 94.1904, 66.0115, 74.255, 88.9997, 126.0162, 55.1289, 25.033, 145.9808, 75.5136, 205.0385, 95.4932, 90.1164], [65.6424, 38.0827, 47.7734, 75.7997, 47.6112, 106.6833, 93.7184, 51.3633, 29.9497, 49.0495, 53.8843, 66.4659, 303.467, 0.0, 42.3, 11.1038, 127.715, 230.6666, 53.893, 190.1043, 41.0434, 68.453, 140.4542, 112.7392, 48.1248, 70.1543, 204.1634, 47.3497], [301.8919, 218.3126, 251.2282, 148.7222, 74.8944, 201.8315, 159.6822, 396.0753, 93.2, 47.6834, 48.7805, 76.5552, 62.448, 364.8864, 47.196, 22.8039, 241.4578, 281.0346, 53.6381, 208.4186, 65.4689, 39.7135, 47.5728, 217.3248, 141.3504, 118.1292, 154.7493, 75.1239], [226.8122, 260.8507, 163.031, 228.8198, 113.8704, 209.8474, 117.5525, 304.0739, 94.1868, 85.0757, 62.328, 63.2515, 10.152, 273.4738, 0.0, 77.256, 28.4764, 283.7318, 161.1677, 178.8691, 163.8246, 55.2005, 94.9502, 48.9466, 156.8784, 213.7536, 268.8042, 237.3501, 68.6755], [176.3745, 300.1003, 174.3341, 56.2637, 176.9712, 182.3457, 286.3202, 311.8664, 61.1618, 63.1719, 24.696, 0.0, 79.7592, 0.0, 117.252, 146.4807, 175.7923, 163.1107, 135.313, 193.3658, 80.1121, 58.1473, 133.8398, 414.6576, 208.2672, 289.8384, 231.0056, 144.5363], [386.3042, 537.8256, 290.4269, 137.0362, 187.992, 212.8452, 191.1083, 184.4218, 74.9776, 0.5346, 0.0, 34.9517, 490.9728, 159.264, 0.0, 341.6299, 190.1131, 110.533, 223.6595, 58.0866, 0.0, 62.4552, 247.6656, 174.8433, 158.8977, 100.2266], [331.2527, 335.2128, 343.9354, 82.2643, 53.7936, 114.243, 219.6097, 272.7364, 97.7211, 34.0099, 0.0, 366.9878, 0.0, 93.132, 164.3482, 290.9189, 232.3605, 147.6888, 351.9219, 79.4133, 86.6712, 98.9362, 283.9648, 155.6064, 243.31, 271.7976, 56.2393], [238.9759, 181.8211, 47.8848, 73.1357, 178.6176, 312.4901, 243.0082, 439.2272, 122.7366, 141.7135, 63.4334, 108.24, 23.872, 596.9045, 23.7536, 87.264, 0.0, 386.0021, 346.4981, 165.2189, 301.4323, 95.454, 49.2215, 68.7898, 574.7504, 231.3792, 303.8813, 246.7042, 98.9599], [353.9025, 302.0098, 280.1261, 156.0394, 97.8768, 263.9385, 278.9149, 479.2788, 124.4349, 88.313, 39.5842, 54.4874, 21.288, 612.2832, 53.378, 132.048, 48.4123, 199.0944, 329.6589, 161.8205, 275.968, 205.3992, 87.4689, 72.733, 427.1232, 280.7136, 394.1658, 242.9626, 186.3357], [355.5803, 411.4843, 386.0851, 226.0493, 198.6432, 149.3045, 362.8631, 348.1474, 102.7472, 140.2027, 78.6675, 661.667, 23.7536, 59.832, 62.2445, 298.9094, 341.7652, 247.4602, 399.9654, 119.12, 120.7576, 105.5506, 508.5808, 281.8368, 448.1677, 290.3838, 98.1539]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

