created: 20230812001414000
creator: Drevarr
tags: ChartData
title: 202308120014_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Bella Sassy", "Legacy Of Mathus", "Be\u00eb", "K\u00e2 \u00d4tik R\u00e6j", "Cerys Fireblade", "Jedd Eye", "Zaylen Harker", "Jimbo One Eye", "Keypek The Drunk", "Revitiel", "\u00c1rk\u00e1ntor", "Yummy Kiwi", "Air One Com", "Mike The Archmagus", "Black Raspberry Pie", "Blancooo Padreee", "Solus Sanctus", "Arcanophage Farra", "King Jamls", "Newtype Khan", "Eibh\u00ebar", "Brutal Araden", "Cesare Pirane", "Emily Melia", "Seiker Novus Terra", "Tootsie Pop Rocks", "Venomina The Sly", "Tegan Parker", "J\u00e2sm\u00eene", "Vee U", "Zaedy Zae", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Berserker", "Firebrand", "Berserker", "Scourge", "Berserker", "Berserker", "Berserker", "Firebrand", "Scrapper", "Scrapper", "Vindicator", "Scourge", "Firebrand", "Firebrand", "Weaver", "Chronomancer", "Spellbreaker", "Firebrand", "Spellbreaker", "Virtuoso", "Spellbreaker", "Chronomancer", "Vindicator", "Spellbreaker", "Druid", "Tempest", "Scrapper", "Druid", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.9802, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.0077, 4.0, 0.0, 0.0, 9.0092, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 12.0607], [0.9901, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9934, 0.0, 0.0, 4.0102, 0.0, 0.0, 31.045, 5.0, 0.0, 0.0, 5.0061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 8.0121], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9868, 0.0, 0.0, 0.0, 0.0, 0.0, 35.0193, 0.0, 0.0, 0.0, 14.0183, 0.0, 6.9861, 2.1005], [3.9802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9934, 0.0, 0.0, 6.0204, 7.9831, 7.3333, 33.0129, 4.0, 4.9348, 0.0, 4.0092, 0.0, 0.0, 4.0, 7.375, 0.0, 10.5208, 0.0, 3.0044, 4.004], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0139, 46.0167], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9934, 0.0, 0.0, 0.0, 0.0, 1.0, 31.0103, 13.0058, 0.0, 0.0, 14.0183, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 4.0044, 5.0081], [0.0, 0.0, 6.0172, 0.0, 0.0, 0.0, 0.9934, 0.0, 0.0, 0.0, 0.0, 1.0, 44.0476, 5.0, 0.0, 0.0, 2.0, 0.0, 1.9931, 0.0, 0.0, 0.0, 0.0, 0.9804, 0.0, 3.004], [3.9802, 0.0, 0.0, 1.0, 0.0, 0.9899, 0.0, 1.0, 9.9576, 47.1197], [1.9901, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9934, 0.0, 0.0, 2.0, 0.9915, 0.0, 36.0592, 4.0, 0.0, 0.0, 19.1009, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 3.0044, 5.0081], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9934, 0.0, 0.0, 0.0, 0.9915, 0.0, 39.018, 1.0, 0.9783, 0.0, 19.0856, 5.9861, 1.0, 0.0, 0.0, 4.0, 0.0, 2.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 50.0746, 0.0, 0.0, 0.0, 1.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3.9802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.051, 3.9831, 0.0, 51.3076], [0.9901, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9899, 2.9934, 0.0, 3.0102, 0.0, 4.0139, 52.5328, 7.0289, 0.0, 0.0, 8.0245, 0.0, 1.9931, 2.0, 1.0, 0.0, 0.0, 0.0, 3.0044, 7.4656], [1.9901, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 10.051, 1.9915, 0.0, 54.2368, 5.0, 1.9783, 8.0183, 0.0, 0.9931, 2.0, 4.0, 0.0, 0.0, 0.0, 2.0, 8.0121], [1.9901, 0.0, 0.0, 6.0645, 2.0, 0.0, 1.9899, 0.0, 0.0, 2.9844, 8.0204, 0.9915, 1.0, 50.4402, 7.0, 2.9565, 0.0, 13.0153, 0.0, 0.9931, 4.0, 8.0, 1.0, 5.0, 0.0, 5.0044, 9.1336], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9934, 0.0, 0.0, 0.0, 0.0, 0.0, 56.1248, 3.0, 2.9565, 0.0, 17.0214, 9.9865, 7.9792, 0.0, 6.0, 0.0, 2.0, 0.0, 7.0087, 4.0243], [10.9505, 0.0, 0.0, 3.0, 0.0, 0.9899, 7.0197, 0.0, 2.0, 0.0, 14.0556, 57.1737, 26.0, 0.0, 0.0, 1.0, 0.0, 4.9861, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.0364], [0.9901, 0.0, 0.0, 1.0, 0.0, 0.0, 0.9899, 3.9934, 0.0, 3.9688, 2.0, 9.9576, 1.0, 64.3938, 0.0, 0.0, 25.0459, 0.0, 6.9861, 0.0, 0.0, 0.0, 5.0, 0.0, 1.0, 7.0121], [0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 7.9899, 12.9803, 0.0, 0.0, 0.0, 0.0, 0.0, 68.1647, 6.0058, 0.0, 0.0, 39.1254, 0.0, 6.9861, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0066, 0.0, 0.0, 1.9915, 4.0139, 97.1544], [10.9505, 0.0, 0.0, 0.0, 0.0, 3.0118, 1.9899, 8.9803, 0.0, 0.0, 6.0204, 2.9831, 3.0, 68.13, 28.0, 11.8696, 0.0, 24.0306, 0.0, 5.9861, 4.0, 3.0, 0.0, 4.0, 0.0, 12.0175, 17.0283], [21.0198, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.3163, 28.9237, 9.5972, 71.0347, 27.0202, 35.2826, 0.0, 22.4067, 0.0, 35.8611, 9.0053, 6.0, 0.0, 18.3958, 0.0, 2.0, 18.2065], [4.9802, 0.0, 0.0, 3.0323, 0.0, 4.9899, 3.9934, 0.0, 5.0102, 0.9915, 2.0, 114.2857, 17.0, 4.9348, 0.0, 34.1223, 0.9865, 7.1944, 0.0, 5.0, 0.0, 4.0, 0.0, 1.0, 20.1296], [177.9936, 0.0, 0.0, 0.0], [6.9703, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9899, 77.125, 0.0, 37.3367, 34.8898, 0.0, 116.8266, 56.2826, 0.0, 201.526, 1.9865, 39.25, 11.0265, 24.0227, 0.0, 36.0417, 0.0, 22.1572, 74.583], [30.9505, 0.0, 0.0, 0.0, 0.0, 12.0471, 5.9899, 34.1184, 0.0, 42.6122, 28.339, 19.0833, 183.1017, 54.1329], [9.9703, 0.0, 0.0, 0.0, 0.0, 5.0118, 0.9899, 0.0, 0.0, 0.9844, 14.6429, 3.9831, 3.0, 213.4363, 60.0896, 24.1304, 0.0, 76.3364, 0.0, 15.1111, 0.0, 2.0, 0.0, 1.0, 0.0, 1.0, 22.0972], [33.604, 0.0, 2.0, 1.0, 0.0, 6.0235, 0.0, 4.9868, 0.0, 0.0, 25.1224, 32.8814, 215.1493, 62.0202, 37.8478, 0.0, 120.6697, 0.0, 23.9653, 6.0, 6.0, 0.0, 15.0, 0.0, 10.0131, 26.0567], [42.6436, 15.0517, 4.0323, 0.0, 7.0353, 16.0, 34.4803, 0.0, 0.9844, 25.2347, 30.8814, 1.0, 238.3037, 82.7312, 16.0652, 0.0, 97.5994, 21.0139, 12.0053, 11.0114, 5.0323, 12.7292, 0.9804, 27.1048, 99.6356], [40.4554, 0.0, 2.0, 0.0, 3.0, 4.0118, 1.0, 0.0, 34.6633, 8.9576, 0.0, 190.3372, 104.3786, 56.6957, 0.0, 187.0703, 0.0, 40.0208, 7.0053, 55.4659, 2.0, 37.6042, 60.476, 118.8664], [25.9703, 0.0, 14.0517, 5.0323, 6.0208, 0.0, 15.0404, 43.9474, 1.0, 28.3571, 27.9153, 19.4167, 311.1686, 73.2023, 50.7391, 0.0, 160.2844, 0.0, 25.1458, 9.0159, 43.5, 3.0, 38.5208, 0.0, 40.3362, 76.83], [39.1287, 0.0, 3.0323, 2.0, 4.0118, 16.9899, 75.1447, 0.0, 0.0, 69.1735, 70.4322, 12.2222, 376.027, 119.4104, 85.8478, 0.0, 193.5168, 0.0, 51.3611, 25.0423, 16.0114, 2.1935, 13.0, 1.4118, 58.3537, 114.4211], [27.8911, 0.0, 20.1552, 12.129, 8.25, 22.0353, 21.1717, 75.8618, 0.0, 0.0, 50.102, 48.0847, 43.1528, 326.2625, 139.0896, 55.2174, 6.9703, 208.6269, 6.9865, 58.7847, 62.2381, 53.2614, 7.0968, 45.875, 4.9412, 75.4541, 157.8664], [35.8911, 2.0, 26.2903, 0.0, 7.0588, 16.9899, 72.6382, 0.0, 63.4286, 52.839, 57.0833, 380.1068, 151.9451, 93.4783, 0.0, 243.3976, 56.375, 73.6825, 49.3068, 0.0, 36.1042, 0.0, 33.2052, 121.3765]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

