created: 20230322220917000
creator: Drevarr
modified: 20230705163522799
modifier: drevarr
tags: ChartData
title: 202303222209_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Oo Dads Mad", "Husky Guard", "Tootsie Poppa", "Nelliel T", "Dark Sidiuz", "Rozaalyna", "Grasszanine", "Seren Nightroad", "Legacy Of Mathus", "Smol Gluvs", "Nazhul Naxxremis", "Panther B Me", "Rina Of Theros", "My Birthday Girl", "Etch\u00e9ry", "Lord Erin The Wise", "Smol Daddy Tika", "Be\u00eb", "Xyntharos", "Sp\u00edcy Cheese", "Kosa\u00edr", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Spellbreaker", "Dragonhunter", "Scourge", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Berserker", "Weaver", "Berserker", "Scourge", "Vindicator", "Berserker", "Holosmith", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31256.0, 10566.0, 2793.0, 0.0, 11900.0, 15134.0, 9075.0, 7569.0, 7425.0, 10685.0, 25038.0, 35958.0, 11459.0, 0.0, 1302.0, 621.0, 166.0, 4326.0, 1872.0, 797.0, 499.0, 0.0, 0.0, 0.0, 0.0], [36630.0, 21750.0, 19864.0, 0.0, 0.0, 42178.0, 14289.0, 25826.0, 4948.0, 16305.0, 9491.0], [58861.0, 15581.0, 29628.0, 3236.0, 4298.0, 10003.0, 5892.0, 5479.0, 23623.0, 0.0, 8324.0, 15660.0, 39865.0, 42942.0, 1630.0, 0.0, 2279.0, 0.0, 0.0, 4184.0, 347.0, 3374.0, 0.0, 0.0, 0.0], [42163.0, 16703.0, 12022.0, 0.0, 8558.0, 21225.0, 10115.0, 10400.0, 33086.0, 21063.0, 35662.0, 79278.0, 9250.0, 0.0, 62.0, 0.0, 4673.0, 0.0, 0.0, 9021.0, 0.0, 2668.0], [51949.0, 27245.0, 9902.0, 0.0, 7047.0, 26010.0, 3312.0, 43948.0, 0.0, 1478.0, 24226.0, 19202.0, 90903.0, 0.0, 768.0, 0.0, 0.0, 6004.0, 3158.0, 1365.0, 0.0, 0.0, 0.0], [59144.0, 41241.0, 19853.0, 0.0, 14848.0, 38622.0, 9472.0, 0.0, 26578.0, 112228.0, 0.0, 442.0, 7123.0, 691.0, 0.0, 5246.0], [40497.0, 18197.0, 24391.0, 0.0, 20780.0, 43498.0, 7991.0, 21992.0, 31696.0, 0.0, 13931.0, 10402.0, 56057.0, 32502.0, 4024.0, 22307.0, 3410.0, 427.0, 2283.0, 237.0], [45485.0, 24961.0, 24353.0, 0.0, 20966.0, 21581.0, 17655.0, 28349.0, 18927.0, 13110.0, 16577.0, 70566.0, 25752.0, 9253.0, 0.0, 3750.0, 5919.0, 850.0, 11369.0, 848.0, 0.0, 0.0, 0.0, 0.0, 0.0], [31721.0, 24211.0, 1713.0, 44316.0, 32064.0, 21120.0, 23022.0, 24643.0, 0.0, 13348.0, 24840.0, 93547.0, 30823.0, 4569.0, 0.0, 0.0, 653.0, 1136.0, 27.0], [128439.0, 27201.0, 95029.0, 2082.0, 117247.0, 28333.0, 0.0, 3226.0, 0.0, 16847.0, 6114.0, 26964.0, 0.0], [63378.0, 29734.0, 24837.0, 2412.0, 26937.0, 30807.0, 16858.0, 21979.0, 46530.0, 0.0, 15308.0, 70482.0, 107479.0, 28872.0, 9521.0, 2970.0, 5036.0, 4683.0, 1457.0, 22633.0, 5042.0, 0.0, 0.0], [72660.0, 30511.0, 32271.0, 0.0, 25417.0, 48105.0, 20454.0, 36257.0, 8656.0, 0.0, 31903.0, 30239.0, 137442.0, 39378.0, 0.0, 2037.0, 1314.0, 11243.0, 0.0, 13581.0, 4446.0, 0.0, 0.0], [65961.0, 22602.0, 35472.0, 1084.0, 12211.0, 23977.0, 18950.0, 18031.0, 55670.0, 22955.0, 45811.0, 148638.0, 31656.0, 4980.0, 3285.0, 5741.0, 10217.0, 6538.0, 6600.0, 3189.0, 0.0, 3048.0], [90520.0, 35053.0, 32614.0, 2907.0, 25264.0, 59435.0, 15203.0, 37389.0, 47181.0, 1474.0, 16636.0, 24386.0, 114219.0, 32297.0, 8218.0, 7770.0, 6455.0, 6178.0, 3609.0, 1970.0, 1460.0, 0.0, 0.0], [97468.0, 7097.0, 24299.0, 0.0, 31133.0, 47904.0, 7920.0, 50455.0, 84263.0, 0.0, 29800.0, 59140.0, 250219.0, 0.0, 16743.0, 10383.0, 7801.0, 19874.0, 12856.0, 15847.0, 1179.0, 9405.0, 14574.0, 0.0, 0.0, 0.0], [116159.0, 56633.0, 51910.0, 0.0, 95828.0, 57097.0, 49948.0, 49671.0, 80840.0, 0.0, 34346.0, 100206.0, 89081.0, 77998.0, 4171.0, 0.0, 0.0, 0.0, 0.0, 0.0], [112634.0, 42522.0, 41811.0, 0.0, 66172.0, 81735.0, 26570.0, 33903.0, 138413.0, 0.0, 18532.0, 56509.0, 212195.0, 7784.0, 0.0, 3881.0, 659.0, 8396.0, 5360.0, 13714.0, 3168.0, 1907.0, 4652.0, 211.0, 0.0], [156067.0, 32542.0, 29039.0, 0.0, 85293.0, 16551.0, 7151.0, 22671.0, 52646.0, 0.0, 60718.0, 94832.0, 180872.0, 71914.0, 2114.0, 0.0, 1038.0, 24287.0, 0.0, 45553.0, 11816.0, 0.0, 1138.0, 0.0, 0.0, 0.0], [136880.0, 49164.0, 57292.0, 0.0, 47171.0, 60873.0, 52864.0, 59052.0, 63493.0, 0.0, 46808.0, 77472.0, 148335.0, 68255.0, 16157.0, 9033.0, 34663.0, 11277.0, 10833.0, 5547.0, 0.0, 7458.0, 0.0], [178104.0, 33689.0, 61233.0, 0.0, 87206.0, 59867.0, 21320.0, 43522.0, 64555.0, 2945.0, 36522.0, 37220.0, 230946.0, 66241.0, 6687.0, 2946.0, 12062.0, 16507.0, 20245.0, 21957.0, 6932.0, 7346.0, 0.0, 0.0, 0.0], [157276.0, 81597.0, 75917.0, 2124.0, 90857.0, 57478.0, 38416.0, 42669.0, 0.0, 2550.0, 130624.0, 206023.0, 117698.0, 17579.0, 29884.0, 0.0, 22146.0, 24207.0, 5791.0, 6423.0, 0.0, 784.0, 0.0, 0.0], [197931.0, 68643.0, 34808.0, 1525.0, 100875.0, 103949.0, 27535.0, 90140.0, 75967.0, 0.0, 52060.0, 81783.0, 147366.0, 44565.0, 44168.0, 8767.0, 9193.0, 7702.0, 9245.0, 0.0, 4406.0, 0.0, 0.0, 0.0], [210238.0, 93543.0, 112380.0, 0.0, 109263.0, 94047.0, 32434.0, 40725.0, 133707.0, 3074.0, 80461.0, 79894.0, 400917.0, 76171.0, 27613.0, 7129.0, 4478.0, 41400.0, 9143.0, 19472.0, 15936.0, 2409.0, 0.0, 4255.0, 0.0, 0.0], [201461.0, 79806.0, 123196.0, 0.0, 133598.0, 93906.0, 29136.0, 69464.0, 179956.0, 6538.0, 72646.0, 129819.0, 326146.0, 70166.0, 62620.0, 10852.0, 17478.0, 0.0, 8936.0, 28439.0, 16783.0, 0.0, 617.0, 4941.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

