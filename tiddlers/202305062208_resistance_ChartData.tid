created: 20230506220820000
creator: Drevarr
modified: 20230705163528961
modifier: drevarr
tags: ChartData
title: 202305062208_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaidy Sagemist", "Puny Demon", "Sub Train", "Hyde En Sikh", "Audrinafa", "Venomina The Fierce", "Miphest\u00f6", "Sygaldry Verdandi", "Johosh The Mighty", "Lil Red Robin", "Koralia Danai", "Bella Sassy", "Jupi Jupi Jupi", "Ark Darkness", "Aronorf Xideliesi", "Xanvias Einzbern", "Blancooo Padreee", "Newtype Khan", "Smol Daddy Tika"];
const professions = ["Vindicator", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.4955, 58.1081, 43.8126, 0.0, 121.1768, 19.3805, 0.0, 85.2605, 0.0, 0.0, 52.9518, 0.0, 0.0, 0.0], [32.301, 100.3685, 43.4928, 21.528, 31.6362, 28.6003, 35.5622, 124.6115, 4.8376, 8.0546, 24.9097], [56.52, 83.0307, 210.9274, 103.7837, 130.6655], [68.7999, 140.868, 70.8357, 16.056, 52.3082, 57.2006, 45.481, 200.791, 7.1574, 13.8283, 63.8405, 14.2619, 7.7969, 25.0742, 12.464], [74.5791, 136.2278, 133.177, 182.1245, 5.3751, 30.4009, 159.8995, 0.0, 3.2666, 64.4673, 21.3446], [4.5405, 120.3174, 181.1225, 214.3429, 0.0, 27.5933, 202.057, 99.3381], [101.9171, 242.4942, 77.0718, 38.088, 42.7123, 53.9482, 283.529, 4.0455, 12.1889, 71.746], [116.2602, 270.4162, 17.136, 55.6203, 73.1942, 76.5677, 246.7005, 7.2422, 15.1114, 66.5254, 0.0, 4.5583, 37.293, 28.4179], [84.0758, 437.1939, 312.1248, 171.216, 115.4663], [0.0, 123.0042, 190.6061, 156.8851, 404.609, 29.7328, 52.177, 188.6874, 0.0, 26.0395, 87.1232, 35.4289], [150.6601, 444.9919, 92.742, 29.376, 66.6986, 100.6656, 79.2288, 307.2405, 0.0, 32.8601, 107.9918, 0.0, 5.7845, 62.1126, 15.6112], [157.3069, 504.8608, 132.2373, 14.328, 63.1581, 71.8771, 128.2176, 329.4385, 7.6949, 39.6317, 138.7188, 8.0174, 7.722, 46.2026, 64.065], [130.1368, 471.9078, 162.7782, 28.512, 128.4862, 166.8979, 106.0819, 468.6805, 25.9985, 56.1686, 156.0214, 9.4198, 7.5535, 45.439, 15.2996], [63.2026, 451.5322, 169.8138, 48.096, 156.9245, 129.4541, 85.3978, 504.5, 13.8055, 94.6955, 188.0908, 0.0, 28.7726, 119.1977, 42.3464], [42.5627, 333.3037, 180.0474, 68.544, 252.2899, 274.1491, 55.7626, 645.2555, 55.8479, 164.076, 10.0283, 24.6449, 97.2419, 64.9374], [242.8986, 408.5172, 167.0955, 134.496, 159.3229, 228.9907, 132.8141, 580.6795, 29.3367, 39.3466, 212.7022, 0.0, 12.4488, 41.6206, 47.8306], [128.0378, 391.9149, 137.6739, 0.0, 108.9563, 252.3226, 314.9798, 902.046, 71.7717, 30.0445, 401.0912, 0.0, 28.1455, 50.4665], [175.6147, 492.5349, 474.1035, 92.808, 147.9019, 409.8125, 251.2339, 855.1275, 130.332, 162.661, 247.3073, 0.0, 0.0, 185.9561, 89.9589], [359.0422, 622.0831, 518.2359, 0.0, 237.671, 408.3072, 256.6771, 909.6135, 13.947, 130.5137, 393.7824, 57.4447, 0.0, 134.0895, 57.8953]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

