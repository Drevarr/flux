created: 20230227222028000
creator: Drevarr
modified: 20230705163520341
modifier: drevarr
tags: ChartData
title: 202302272220_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Arka\u00f1", "Grumyaar Lordsbane", "Rozaalyna", "Newtype Khan", "Iris S K", "Lord Erin The Wise", "Rina Of Theros", "Etchery Howls", "Legacy Of Mathus", "Viral Marketing", "Jeckyll Mbs", "High Sorcer Baradun", "Mike The Archmagus", "Sofya De Nova", "Black Raspberry Pie", "Blanco Padre Guard", "Nelliel T", "Tribal S", "What Charr U Saying", "Kira Dragonblaze", "My Birthday Girl", "Venomina The Siren", "Smol Gluvs", "Sp\u00edcy Cheese", "Cat Wigglebooty", "Tegan Parker", "\u00c1rk\u00e1ntor", "Fribble Bibble", "Jupi Jupi Jupi", "Gavann", "Ark Darkness", "Mac Aaroni", "Smol Daddy Tika", "Kahless The Drunk", "Be\u00eb", "Tootsie Pop Bringer", "Zaylen Harker", "Arcanophage Farra", "Husky Guard", "Mistwalker Caelon", "Xanvias Tseli", "Zadie Miststep", "Sygaldry Verdandi", "Koralia Danai", "Ravioli Fetabringer", "Primal Clone", "Drevarr Moonwillow", "Bella Sassy", "Eibh\u00ebar", "Ryvalia Fazebringer"];
const professions = ["Chronomancer", "Firebrand", "Scourge", "Spellbreaker", "Spellbreaker", "Weaver", "Scourge", "Druid", "Berserker", "Willbender", "Berserker", "Tempest", "Weaver", "Weaver", "Chronomancer", "Firebrand", "Scourge", "Druid", "Berserker", "Dragonhunter", "Scrapper", "Tempest", "Scourge", "Berserker", "Scrapper", "Tempest", "Scourge", "Scrapper", "Dragonhunter", "Firebrand", "Firebrand", "Tempest", "Berserker", "Firebrand", "Scourge", "Scrapper", "Firebrand", "Spellbreaker", "Dragonhunter", "Vindicator", "Berserker", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[42, 0, 29], [70, 2], [0, 5, 16, 3, 8, 6, 4, 3, 1, 26, 1, 0], [0, 1, 1, 0, 5, 75, 1], [0, 22, 2, 2, 0, 2, 56, 0], [1, 3, 5, 0, 1, 5, 0, 1, 0, 0, 0, 1, 0, 37, 1, 3, 0, 4, 24], [0, 8, 4, 0, 6, 6, 8, 0, 0, 2, 0, 2, 0, 16, 0, 0, 2, 0, 3, 33, 0], [2, 11, 9, 8, 4, 4, 2, 3, 2, 0, 1, 2, 40, 1, 0, 2, 0], [1, 1, 11, 5, 8, 6, 2, 2, 1, 0, 3, 0, 52, 1], [3, 30, 15, 0, 10, 4, 7, 1, 3, 14, 1, 8], [1, 13, 8, 0, 1, 2, 2, 0, 1, 1, 1, 0, 25, 0, 0, 2, 0, 4, 37, 0], [2, 1, 17, 0, 3, 3, 2, 0, 2, 3, 0, 13, 0, 0, 1, 0, 5, 47, 0], [2, 3, 8, 0, 3, 3, 5, 2, 4, 3, 0, 3, 4, 39, 1, 0, 1, 0, 1, 18], [0, 2, 3, 1, 1, 2, 2, 1, 1, 61, 1, 0, 1, 0, 2, 29, 0], [2, 11, 3, 3, 2, 0, 3, 1, 54, 0, 1, 1, 0, 2, 43, 0], [5, 15, 12, 0, 2, 2, 6, 3, 2, 2, 1, 3, 3, 27, 1, 1, 1, 1, 3, 40], [0, 0, 12, 0, 9, 8, 1, 2, 3, 1, 32, 0, 3, 0, 2, 60, 0], [1, 12, 0, 5, 8, 2, 1, 4, 2, 1, 5, 2, 35, 0, 2, 1, 0, 56, 1], [2, 65, 1, 0, 2, 0, 0, 69, 0], [3, 37, 25, 0, 16, 9, 3, 8, 2, 28, 1, 10], [0, 15, 1, 0, 12, 7, 1, 3, 0, 0, 2, 4, 1, 49, 1, 0, 0, 0, 0, 49, 1], [0, 12, 16, 2, 7, 4, 1, 1, 3, 1, 3, 2, 43, 0, 0, 1, 0, 4, 51, 1], [4, 8, 0, 1, 2, 60, 1, 0, 3, 0, 1, 71, 1], [1, 15, 6, 7, 4, 2, 2, 1, 4, 1, 5, 1, 49, 0, 0, 2, 0, 2, 57, 0], [1, 18, 14, 5, 8, 5, 2, 3, 8, 1, 4, 0, 45, 0, 0, 0, 0, 2, 43], [3, 0, 2, 5, 1, 4, 1, 62, 0, 0, 3, 0, 2, 78, 0], [48, 0, 7, 0, 2, 106, 0], [1, 11, 6, 0, 8, 6, 8, 4, 2, 0, 1, 7, 1, 80, 1, 0, 3, 0, 1, 37], [3, 23, 9, 2, 4, 6, 3, 84, 1, 0, 4, 0, 6, 39], [4, 37, 19, 0, 4, 10, 9, 2, 2, 6, 2, 6, 3, 77, 3], [24, 7, 8, 9, 6, 4, 6, 2, 8, 2, 104, 2, 1, 3, 1], [2, 23, 7, 0, 2, 2, 2, 1, 2, 1, 2, 4, 1, 40, 3, 0, 3, 0, 2, 91, 1], [1, 19, 6, 0, 3, 5, 4, 2, 1, 1, 0, 7, 2, 68, 1, 0, 3, 0, 3, 63, 1], [5, 19, 12, 7, 3, 5, 2, 1, 6, 4, 4, 4, 55, 2, 0, 4, 1, 4, 64, 1], [3, 28, 19, 0, 9, 5, 3, 5, 52, 4, 0, 5, 1, 5, 77, 1], [2, 19, 20, 0, 4, 8, 7, 3, 2, 3, 0, 5, 2, 46, 2, 0, 1, 0, 1, 90, 2], [12, 8, 4, 8, 4, 3, 1, 1, 6, 4, 86, 2, 4, 1, 2, 79, 2], [4, 25, 18, 7, 7, 9, 2, 3, 2, 0, 3, 2, 50, 3, 0, 2, 0, 4, 93, 0], [6, 19, 10, 0, 4, 3, 4, 2, 2, 3, 1, 3, 2, 54, 1, 4, 1, 4, 111, 2], [3, 14, 18, 0, 16, 7, 4, 8, 5, 2, 1, 7, 3, 43, 8, 0, 3, 0, 3, 94, 0], [2, 24, 11, 0, 7, 4, 4, 1, 1, 6, 1, 3, 5, 72, 4, 0, 3, 0, 4, 91, 0], [0, 17, 10, 5, 4, 10, 2, 3, 6, 1, 8, 5, 82, 4, 0, 3, 0, 8, 82, 1], [6, 20, 19, 5, 12, 5, 3, 4, 5, 2, 7, 4, 79, 3, 1, 6, 10, 78, 2], [7, 19, 18, 5, 7, 7, 6, 6, 6, 5, 8, 2, 78, 3, 0, 5, 1, 4, 97, 1], [5, 31, 20, 12, 9, 9, 5, 7, 10, 2, 6, 5, 92, 5, 1, 7, 1, 5, 113, 2], [2, 44, 18, 15, 5, 17, 2, 2, 46, 1, 18, 6, 63, 4, 0, 4, 0, 5, 100, 0], [1, 32, 18, 2, 11, 9, 5, 21, 8, 2, 7, 0, 122, 4, 0, 5, 0, 7, 112, 2], [7, 28, 29, 8, 8, 11, 3, 4, 4, 4, 6, 4, 120, 2, 1, 5, 2, 11, 134, 1], [2, 42, 25, 6, 30, 20, 2, 4, 15, 1, 8, 1, 102, 2, 0, 5, 0, 3, 128, 0], [2, 35, 26, 7, 13, 21, 7, 4, 46, 2, 10, 4, 117, 4, 0, 4, 2, 9, 146, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

