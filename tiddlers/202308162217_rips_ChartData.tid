created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaedy Zae", "Rina Of Theros", "Tribal S", "Arriasa", "Hawaiian Supreme", "Be\u00eb", "Ryvalia Fazebringer", "Morton Saltbringer", "Name Is What", "Kylo Milan", "Daphne Agla\u00e9", "Necrotic Windrunner", "Alarics Bane", "Luke The Ghastly", "Rina Of Theros", "Aspros Gemeos", "Vanhelsing Wizard", "Be\u00eb", "Newtype Khan", "Rahani Sunray", "Raziel Umbra", "Eibh\u00ebar"];
const professions = ["Druid", "Scourge", "Druid", "Druid", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Chronomancer", "Reaper", "Reaper", "Reaper", "Scourge", "Reaper", "Spellbreaker", "Virtuoso", "Reaper", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.082, 0.0, 0.225, 0.1071, 0.0741, 0.0676, 0.0214, 0.0714, 0.0426, 0.069, 0.0275, 0.0, 0.0529, 0.0316, 0.1333, 0.0714, 0.0265, 0.0865, 0.0074, 0.0, 0.0632, 0.0638, 0.0145, 0.0448, 0.1096, 0.0968, 0.1707], [0.1148, 1.6579, 1.6, 0.1548], [0.1148, 0.1053, 0.2, 0.0952, 0.1296, 0.0676, 0.0374, 0.0357, 0.1064, 0.1034, 0.0459, 0.0333, 0.0647, 0.019, 0.0889, 0.0571, 0.0265, 0.1058, 0.0259, 0.0, 0.0316, 0.0957, 0.0291, 0.0896, 0.0959, 0.0484, 0.061], [0.0164, 0.1579, 0.075, 0.0476, 0.0741, 0.027, 0.0214, 0.0357, 0.0638, 0.0805, 0.1284, 0.1, 0.0633, 0.1556, 0.0143, 0.0619, 0.0577, 0.0185, 0.0842, 0.1809, 0.0255, 0.1194, 0.1233, 0.129, 0.0732], [0.4426, 0.0526, 0.0, 0.4808, 0.0074, 0.4526, 0.5, 0.0], [0.8525, 0.9737, 0.65, 0.6905], [0.0164, 0.0526, 0.025, 0.0476, 0.0185, 0.0811, 0.1444, 0.0179, 0.0426, 0.4023, 0.1284, 0.0824, 0.0316, 0.0, 0.0714, 0.0708, 0.2115, 0.0111, 0.0, 0.0632, 0.0319, 0.0109, 0.0597, 0.0959, 0.1129, 0.0854], [0.4, 0.6714, 0.2566, 1.3942, 0.0667, 0.1, 0.4316], [0.5082, 0.2105, 0.65, 0.6786, 0.6059, 0.1646, 0.2222, 0.5286, 0.2805], [0.2185, 0.1, 0.4105, 1.1489, 0.2473, 0.7761], [0.4259, 0.4459, 0.0321, 0.2321, 0.5745, 0.1494, 0.1743, 0.0, 0.3, 0.1772, 0.0, 0.2571, 0.1593, 0.3365, 0.0, 0.0, 0.0737, 0.234, 0.0909, 0.3433, 0.0685, 0.3226], [0.4259, 0.3108, 0.1872, 0.1339, 0.3617, 0.3218, 0.1835, 0.2235, 0.0886, 0.0222, 0.5143, 0.0265, 0.25, 0.0148, 0.0, 0.0421, 0.3404, 0.1236, 0.4478, 0.0274, 0.2419, 0.378], [0.1803, 0.5, 0.3, 0.5714, 0.7778, 0.5811, 0.1658, 0.6809, 0.2874, 0.6881, 0.0, 0.3412, 0.2278, 0.4444, 0.3, 0.1327], [0.7647, 0.057, 0.6444, 0.3571, 0.0796, 0.8077, 0.0407, 0.0667, 0.5895, 0.6596, 0.1127, 0.7313], [0.8333, 0.6486, 0.0535, 0.2946, 0.9787, 0.7126, 0.211, 0.0, 0.3294, 0.0316, 0.8667, 0.4286, 0.1504, 0.6827, 0.0259, 0.0, 0.1579, 0.617, 0.1164, 0.403, 0.0411, 0.2742, 0.378], [1.027, 0.3316, 0.5268, 0.8085, 0.8966, 0.789, 0.0, 0.8471, 0.3797, 1.1333, 0.6286], [0.8689, 1.7105, 1.15, 0.7857, 0.8243, 0.016, 0.5625, 1.4255, 0.6897, 0.7156, 0.7941, 0.1329], [0.5185, 0.7162, 0.1337, 0.5268, 0.9574, 0.3678, 0.5872, 0.0, 0.3059, 0.1962, 0.3111, 0.4714, 0.2389, 0.2788, 0.0, 0.0333, 0.4, 0.5745, 0.1091, 0.3582, 0.3836, 0.3548, 0.5], [0.377, 0.2105, 0.0, 0.3333, 1.0185, 0.8378, 0.4439, 0.1696, 0.4681, 0.7586, 0.5596, 0.5, 0.3101, 0.2444, 0.6714, 0.3097, 0.6731, 0.0704, 0.0667, 0.5053, 0.7234, 0.16, 0.5075, 0.9315, 0.1613, 0.5], [0.3607, 0.4211, 1.25, 0.5238, 0.4815, 1.2162, 0.123, 0.7946, 0.6596, 0.8851, 0.9817, 0.0333, 0.7588, 0.3987, 0.5556, 1.0714, 0.4602, 0.7692, 0.1333, 0.0333, 0.4316, 0.9468, 0.2182, 0.4627, 1.0822, 1.2258, 1.1098], [0.5902, 1.4737, 0.575, 0.6071, 1.4444, 1.0135, 0.6096, 0.8929, 1.0638, 0.6322, 1.3578, 0.0, 0.6824, 0.2532, 0.9333, 0.7, 0.4956, 1.0481, 0.0519, 0.0, 0.5053, 0.9468, 0.1382, 0.2687, 0.3288, 0.5645, 0.5366], [1.2787, 2.7895, 2.05, 1.3214, 1.2593, 2.1622, 0.9412, 1.4911, 0.7234, 1.8851, 1.6697, 0.0333, 0.7765, 0.462, 1.2667, 1.7, 0.8584, 2.0096, 0.137, 0.1333, 1.4, 1.6489, 0.2509, 0.8209, 0.589, 1.9839, 1.7195]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

