created: 20230318001239000
creator: Drevarr
modified: 20230705163522391
modifier: drevarr
tags: ChartData
title: 202303180012_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Oo Dads Mad", "Sumatra Satyricon", "Newtype Khan", "R\u00fana Bierdna", "Nazhul Naxxremis", "Grasszanine", "Lucky Leipreach\u00e1n", "Shaca Booey", "King Squid", "Smol Gluvs", "Seren Nightroad", "Hauzzy", "F\u00f4xy Lat\u00eena", "Kmpek", "Rina Of Theros", "Permanent Dawn", "Khailerian", "Smol Daddy Tika", "Demon Sekhmet", "Lord Erin The Wise", "Xyntharos", "Xanvias Tseli", "Mike The Archmagus", "Kosa\u00edr"];
const professions = ["Firebrand", "Spellbreaker", "Soulbeast", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Scrapper", "Spellbreaker", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Vindicator", "Scourge", "Weaver", "Herald", "Berserker", "Berserker", "Weaver", "Vindicator", "Berserker", "Weaver", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[62.3793, 64.7, 33.7209, 269.8416, 0.0, 7.7213, 5.2985, 21.9432, 90.0957, 54.6462, 155.8182, 263.3344, 0.0, 97.2603, 0.0, 0.0, 117.0759, 24.679, 108.4426, 76.625, 165.6667, 7.2336, 49.6872], [292.1, 45.3522, 35.7692, 0.0, 141.9508, 17.8209, 58.9318, 731.9681, 232.9077, 349.3818, 143.8627, 229.6339, 10.495, 250.7534, 0.0, 0.0, 169.3924], [238.6966, 107.4983, 52.086, 327.6154, 144.1967, 131.6567, 165.6705, 86.5213, 156.0462, 204.2545, 58.5686, 53.6306, 259.7228, 3.7823, 0.0, 180.0633, 259.7901, 261.1967, 0.0, 94.0748, 213.3037], [134.6621, 418.35, 121.0565, 214.8643, 109.8462, 114.4098, 85.4179, 18.6136, 337.4574, 78.3846, 375.5273, 145.9608, 170.7421, 168.6832, 55.7808, 30.9252, 0.0, 201.5443, 43.5926, 146.9836, 342.8333, 87.5263, 69.757, 144.879], [177.0345, 669.65, 48.5581, 185.5995, 226.918, 64.791, 106.1932, 0.0, 225.1231, 145.4545, 384.3922, 168.5691, 448.6139, 345.3425, 19.6803, 0.0, 161.6582, 14.963, 340.5082, 0.0, 17.9252, 197.7557], [376.0586, 60.6346, 367.2964, 0.0, 113.6066, 227.7313, 193.9318, 1281.3404, 1012.3385, 1730.9091, 151.2353], [149.569, 685.15, 52.1628, 295.224, 78.2308, 85.5574, 134.5224, 153.9432, 240.3511, 445.9846, 346.6182, 272.6471, 211.7887, 149.4455, 353.6575, 12.7483, 0.0, 232.7215, 48.9383, 310.2459, 131.2083, 91.1754, 102.4206, 188.516], [128.8034, 1159.525, 160.495, 17.5181, 0.0, 296.3115, 0.0, 13.6477, 137.9681, 271.9077, 584.1273, 104.2063, 517.1485, 484.3699, 125.102, 0.0, 622.8481, 133.2346, 253.6885, 0.0, 89.028, 512.468], [755.2, 108.4219, 415.5362, 0.0, 192.8525, 32.2388, 206.1023, 183.9385, 576.2364, 263.5098, 272.0799, 118.5248, 602.589, 19.8912, 0.0, 83.1899, 108.679, 169.3115, 606.25, 0.0, 46.2804, 296.1073], [574.2131, 233.3582, 548.0341, 306.9787, 727.3077, 849.2182, 0.0, 370.4376, 697.2178, 110.9241, 171.6049, 758.8525, 790.125, 850.7895, 116.4673, 394.0868], [209.0897, 1790.175, 45.1827, 391.19, 179.0, 106.8525, 38.0896, 89.9205, 708.2234, 403.0769, 519.1091, 139.2745, 250.4809, 434.3267, 357.3288, 11.0816, 23.3333, 93.1899, 26.963, 597.0492, 193.9583, 354.386, 53.757, 189.1416], [406.3759, 1449.65, 61.588, 195.0995, 85.6923, 333.8361, 251.4627, 100.5227, 183.9894, 209.4923, 1218.0182, 160.6863, 191.8602, 684.0, 370.3699, 10.7483, 0.0, 220.1646, 70.1605, 492.6885, 0.0, 49.0093, 366.8744], [531.0379, 1196.675, 179.4917, 206.8959, 81.2308, 386.9508, 186.9701, 114.0568, 31.6596, 539.1077, 1388.1818, 398.4709, 825.3168, 766.3562, 61.8367, 0.0, 941.5082], [534.9897, 1394.075, 319.0532, 299.5158, 55.1154, 599.7705, 451.5672, 371.6023, 633.8404, 489.4615, 808.5818, 0.0, 198.6839, 861.0297, 512.8356, 28.0476, 0.0, 387.962, 37.1111, 715.9344, 0.0, 155.8411, 524.7146], [567.6862, 1403.35, 271.6478, 111.1629, 306.5, 318.623, 294.6269, 581.1364, 538.9787, 819.9077, 1204.9818, 586.6739, 954.6634, 810.9315, 19.9252, 0.0, 321.2911, 118.2222, 588.7377, 0.0, 108.6729, 402.3379], [554.9759, 687.075, 184.7276, 519.0498, 43.9615, 224.0164, 175.8806, 260.875, 991.7766, 978.7846, 1079.1091, 253.7843, 374.1448, 957.6733, 625.6438, 14.2653, 73.2, 128.3038, 328.0247, 409.2459, 497.7917, 142.6491, 150.8318, 375.9361], [99.0724, 800.15, 46.7774, 292.9434, 694.0, 594.1967, 378.2239, 0.0, 0.0, 704.1231, 913.8545, 1128.0582, 1668.5941, 761.5205, 32.2245, 0.0, 405.0506, 192.9012, 357.8361, 0.0, 65.4579, 448.2032], [832.9828, 1084.225, 325.5914, 829.414, 411.9615, 266.082, 20.6418, 0.0, 449.6809, 568.9692, 1827.2364, 286.9412, 432.7887, 352.8317, 172.7945, 0.0, 225.4051, 697.8272, 404.5082, 0.0, 333.2991, 518.774], [808.0793, 195.975, 258.7508, 310.638, 363.3077, 224.377, 141.0448, 619.0682, 65.3298, 216.2462, 1028.5091, 257.1569, 658.4576, 1637.703, 271.8219, 79.1905, 0.0, 184.0506, 264.9506, 1507.7705, 959.75, 42.2982, 231.9065, 615.3059], [561.2724, 361.325, 90.887, 218.5475, 266.5385, 154.2951, 113.8806, 107.1477, 645.1809, 67.2308, 1768.5455, 855.6007, 1753.5446, 438.0548, 0.0, 0.0, 1032.0127, 22.8025, 313.0328, 1174.3333, 112.7664, 808.3174], [899.5, 2338.15, 216.7375, 1758.724, 342.3443, 427.403, 444.6136, 1728.3936, 141.1692, 1416.0182, 521.1961, 772.0532, 399.7723, 296.9726, 151.6259, 0.0], [711.7931, 1496.95, 175.8073, 1028.2851, 0.0, 147.3279, 127.7015, 725.9091, 330.1489, 873.6, 1113.1818, 154.4118, 573.2213, 1357.8713, 830.0, 37.619, 0.0, 579.4177, 248.4198, 1138.9508, 280.0833, 228.3509, 82.6168, 907.5845], [1095.4655, 2133.425, 802.3223, 601.7014, 292.541, 802.6866, 167.2386, 2051.3298, 1501.6462, 3085.7455, 1784.5674, 3125.6832, 646.3425, 106.9388, 0.0, 891.519, 666.642, 1684.7541, 0.0, 194.2243, 982.2237], [1689.8931, 3584.675, 349.2359, 1087.2398, 984.7692, 567.7705, 206.5672, 522.3864, 1085.5957, 1273.5692, 992.3273, 627.5882, 2231.3278, 1931.1287, 558.0411, 104.6395, 0.0, 1908.3165, 567.6543, 1011.7705, 453.4167, 78.4299, 706.726], [1288.9034, 2707.175, 338.1728, 737.0837, 98.6538, 1204.7541, 458.1642, 379.0114, 772.9574, 1349.7077, 2333.5091, 346.2353, 2079.6922, 1464.2178, 1886.6164, 0.0, 0.0, 541.2785, 459.1481, 2025.0656, 199.2917, 2039.1404, 293.6355, 1423.8082]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

