created: 20230614223544000
creator: Drevarr
modified: 20230705163535064
modifier: drevarr
tags: ChartData
title: 202306142235_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["River No Hug", "Cedryn X", "River No Hug", "Elonith Requiem", "Zayde Sunsabre", "Be\u00eb", "Jacob Pine", "Johosh The Mighty", "Smol Gluvs", "Tootsy Pop Star", "No Reserv\u00e9", "Rozaalyna", "Elon The Archmagus", "Hyde En Sikh", "Tegan Parker", "Sub Train", "Alarics Bane", "Fribble Bibble", "Raelyn Sunray", "Drevarr Moonwillow", "Sygaldry Verdandi", "Primal Clone", "Bella Sassy", "Eibh\u00ebar"];
const professions = ["Reaper", "Berserker", "Scourge", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Berserker", "Reaper", "Reaper", "Vindicator", "Reaper", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 4, 6, 1], [5, 2, 5, 6, 2], [3, 2, 2, 13, 0], [6, 5, 13, 0], [9, 3, 12, 0], [8, 7, 12, 0], [0, 2, 2, 11, 3, 4, 2, 3, 1], [1, 3, 4, 19, 3], [13, 5, 13, 0], [1, 2, 2, 14, 5, 4, 3, 2, 0], [7, 2, 5, 20, 5], [1, 5, 8, 21, 6], [2, 6, 5, 24, 5, 5, 2, 0, 0], [9, 9, 10, 22, 8], [8, 2, 8, 18, 5, 7, 5, 6, 1], [7, 6, 4, 19, 6, 9, 5, 2, 2], [4, 0, 1, 13, 6, 14, 9, 17, 1], [5, 3, 1, 24, 4, 13, 7, 11], [8, 3, 7, 22, 9, 9, 8, 14, 1], [5, 5, 9, 19, 9, 13, 7, 16, 5], [4, 5, 6, 28, 3, 16, 6, 19, 1], [5, 3, 11, 47, 8, 17, 5, 10, 1], [8, 11, 8, 32, 11, 12, 9, 19, 5], [19, 8, 7, 31, 7, 21, 9, 34, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

