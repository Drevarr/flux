created: 20230410221909000
creator: Drevarr
modified: 20230705163525169
modifier: drevarr
tags: ChartData
title: 202304102219_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Smol Gluvs", "Newtype Khan", "Skye Nightroad", "Legacy Of Mathus", "Blancooo Padreee", "Rozaalyna", "Kmpek", "Rina Of Theros", "Nazhul Naxxremis", "Smol Daddy Tika", "Inedible Plant", "Jeckyll Mbs", "Lord Erin The Wise", "Elonith Requiem", "Be\u00eb", "Sofya De Nova", "Sassy Daddy Demon", "Sp\u00edcy Cheese", "Xyntharos", "Mike The Archmagus", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scrapper", "Berserker", "Berserker", "Scourge", "Vindicator", "Scourge", "Scourge", "Berserker", "Vindicator", "Berserker", "Weaver", "Scourge", "Scourge", "Weaver", "Vindicator", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 4989.0, 21138.0, 0.0, 55046.0, 8904.0, 6709.0, 6298.0, 10814.0, 0.0, 10559.0, 0.0, 9657.0, 22630.0, 0.0, 0.0, 6864.0, 0.0, 14313.0, 11147.0, 4211.0, 20590.0], [0.0, 9848.0, 21024.0, 26088.0, 71734.0, 17556.0, 9721.0, 6806.0, 11151.0, 2662.0, 8200.0, 507.0, 6720.0, 10337.0, 8306.0, 0.0, 1434.0, 0.0, 5643.0], [0.0, 8936.0, 20520.0, 27762.0, 31837.0, 11637.0, 1409.0, 12912.0, 14535.0, 4938.0, 14330.0, 2406.0, 14691.0, 14429.0, 2151.0, 0.0, 4455.0, 0.0, 9564.0, 4283.0, 572.0, 20363.0], [27540.0, 35509.0, 19651.0, 70540.0, 22702.0, 28932.0, 11225.0, 10060.0], [19881.0, 45032.0, 38621.0, 72866.0, 19548.0, 22189.0, 19515.0], [24861.0, 6341.0, 35758.0, 67267.0, 1411.0, 0.0, 149.0, 3553.0, 0.0, 8476.0, 1589.0, 6813.0, 27597.0, 0.0, 5409.0, 3309.0, 0.0, 12378.0, 16664.0, 18493.0, 23664.0], [2593.0, 16136.0, 17961.0, 102171.0, 18537.0, 4387.0, 14111.0, 38416.0, 18718.0, 331.0, 16634.0, 25978.0, 3056.0, 0.0, 0.0, 0.0, 16098.0], [16572.0, 11932.0, 18564.0, 20229.0, 7150.0, 32640.0, 15120.0, 12268.0, 33496.0, 7396.0, 3514.0, 12801.0, 0.0, 7909.0, 18199.0, 0.0, 98940.0], [29017.0, 28429.0, 42551.0, 99752.0, 26019.0, 2178.0, 9401.0, 19596.0, 8525.0, 21690.0, 637.0, 12286.0, 33677.0, 5476.0, 0.0, 5677.0, 0.0, 26898.0], [2086.0, 26886.0, 48377.0, 43119.0, 150480.0, 17330.0, 7649.0, 20700.0, 2004.0, 19856.0, 44671.0, 3004.0, 1253.0, 1953.0, 0.0, 21207.0], [0.0, 58297.0, 51588.0, 48722.0, 80886.0, 25031.0, 10791.0, 9145.0, 13636.0, 17789.0, 2828.0, 23228.0, 46325.0, 3081.0, 0.0, 0.0, 0.0, 16837.0, 18203.0, 15889.0, 5146.0], [25607.0, 41566.0, 41304.0, 94830.0, 17507.0, 11269.0, 0.0, 33663.0, 18816.0, 24330.0, 2795.0, 24928.0, 23920.0, 20058.0, 0.0, 5645.0, 0.0, 12029.0, 10273.0, 0.0, 55899.0], [2898.0, 19835.0, 50510.0, 17824.0, 83710.0, 58280.0, 15425.0, 18971.0, 11690.0, 3128.0, 36623.0, 6705.0, 46578.0, 45951.0, 5323.0, 0.0, 2490.0, 0.0, 33675.0, 7094.0, 25518.0], [373.0, 34388.0, 21317.0, 79006.0, 180045.0, 2868.0, 0.0, 11263.0, 25751.0, 1053.0, 33086.0, 3588.0, 23604.0, 26387.0, 13527.0, 0.0, 2508.0, 0.0, 10449.0, 36175.0], [0.0, 95422.0, 194883.0, 21757.0, 7039.0, 18441.0, 37338.0, 15840.0, 47119.0, 0.0, 35105.0, 28050.0, 1017.0, 100.0, 11360.0, 0.0, 30450.0], [4775.0, 29895.0, 33619.0, 97396.0, 209927.0, 18782.0, 9600.0, 13026.0, 21247.0, 18682.0, 21389.0, 5576.0, 22405.0, 23603.0, 5971.0, 3076.0, 436.0, 0.0, 20006.0], [54771.0, 247453.0, 17655.0, 4813.0, 4614.0, 23017.0, 10251.0, 11732.0, 12245.0, 25678.0, 9082.0, 0.0, 8167.0, 0.0, 36898.0, 43662.0, 6416.0, 60204.0], [34428.0, 77365.0, 36048.0, 197910.0, 15878.0, 13275.0, 31144.0, 45636.0, 2097.0, 57942.0, 76371.0, 9288.0, 0.0, 12407.0, 0.0, 5803.0, 18964.0, 0.0], [0.0, 35192.0, 74204.0, 86883.0, 78867.0, 46937.0, 0.0, 21140.0, 58212.0, 899.0, 41737.0, 1988.0, 44223.0, 61246.0, 12749.0, 0.0, 3434.0, 0.0, 7602.0, 31048.0, 29662.0, 66109.0], [0.0, 43489.0, 78279.0, 88499.0, 257881.0, 12748.0, 6286.0, 36844.0, 49464.0, 11944.0, 39028.0, 725.0, 0.0, 49637.0, 26194.0, 0.0, 15572.0, 0.0, 30575.0, 47268.0, 18383.0, 68171.0], [4562.0, 58200.0, 89783.0, 88816.0, 364563.0, 10424.0, 27484.0, 14291.0, 39660.0, 0.0, 36597.0, 21452.0, 37694.0, 55020.0, 71402.0, 6047.0, 3297.0, 0.0, 20595.0, 70326.0, 0.0, 58961.0], [1937.0, 52741.0, 128923.0, 119270.0, 358343.0, 63647.0, 25363.0, 18117.0, 40516.0, 23245.0, 46759.0, 36931.0, 16588.0, 53063.0, 24842.0, 0.0, 22255.0, 0.0, 59004.0, 36545.0, 15413.0, 115847.0], [3361.0, 100111.0, 185878.0, 86928.0, 382122.0, 60098.0, 42082.0, 67526.0, 70207.0, 24694.0, 68072.0, 21524.0, 123633.0, 53622.0, 31207.0, 2338.0, 20074.0, 0.0, 56413.0, 40225.0, 16254.0, 118465.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

