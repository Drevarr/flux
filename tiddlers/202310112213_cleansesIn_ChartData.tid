created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00e9ld\u00e1", "Victoria Raskae", "Bozuko", "Ch\u00e2rl\u00eese", "Luke The Ghastly", "Lord Erin The Wise", "Foxgale", "Isarii Ashenfist", "Grayson Kin", "Mellody Moon", "Morv\u00e4rth", "Rina Of Theros", "Black Raspberry Pie", "Sanskuy", "Aira Draugr", "Rozaalyna", "Belvyn Brightblade", "Kat Bon Z", "Daphne Agla\u00e9", "Cat Wigglebooty", "Glorious Gluvs", "Sub Train", "Adjudicatrix Farra", "Venomina The Sly", "Arriasa", "Jmbrage Gaurdian", "\u00c1rk\u00e1ntor", "Efreet White", "Necrotic Windrunner", "Sygaldry Verdandi", "Zaylen Harker", "Legendary Sakis", "Ryvalia Fazebringer", "Morton Saltbringer", "Crusader Siolith", "Xanvias Einzbern", "Drevarr Moonwillow", "No Reserv\u00e9", "Kalisha Lafay", "Bella Bitty", "Be\u00eb", "Mistwalker Cael", "Solus Luxes", "Atria Ruinheart", "Jimbo The Pleb", "Tootsie Pop Rocks", "Mike The Archmagus", "Newtype Khan", "Tegan Parker", "Zaedy Zae"];
const professions = ["Chronomancer", "Vindicator", "Berserker", "Soulbeast", "Reaper", "Weaver", "Tempest", "Willbender", "Berserker", "Dragonhunter", "Reaper", "Reaper", "Chronomancer", "Herald", "Herald", "Reaper", "Firebrand", "Scrapper", "Reaper", "Scrapper", "Berserker", "Dragonhunter", "Reaper", "Druid", "Druid", "Firebrand", "Scourge", "Reaper", "Reaper", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Scrapper", "Vindicator", "Chronomancer", "Firebrand", "Reaper", "Herald", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Weaver", "Spellbreaker", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0024, 0.0159, 0.0066, 0.0408, 0.0947, 0.0312, 0.0, 0.1423, 0.0209, 0.0943, 0.0563, 0.0868, 0.0385, 0.0], [0.2253, 0.0157, 0.0986, 0.1187], [0.0, 0.1976, 0.0157, 0.0566, 0.1268, 0.1324, 0.0312], [0.0063, 0.0263, 0.102, 0.0421, 0.0, 0.166, 0.0262, 0.0, 0.1549, 0.1096, 0.0, 0.0], [0.0323, 0.1383, 0.0105, 0.0, 0.1268, 0.3059, 0.0, 0.0938], [0.0794, 0.0066, 0.0612, 0.0632, 0.0312, 0.0, 0.1383, 0.0157, 0.0189, 0.2817, 0.1826, 0.0], [0.0082, 0.0066, 0.0204, 0.0632, 0.0, 0.0968, 0.1818, 0.0576, 0.338, 0.2009], [0.0912], [0.0543, 0.0, 0.0329, 0.0204, 0.1368, 0.0, 0.0, 0.1265, 0.0052, 0.0377, 0.169, 0.0959, 0.0], [0.1053, 0.0132, 0.051], [0.1014, 0.0, 0.0197, 0.0714, 0.0316, 0.0, 0.1613, 0.1304, 0.0262, 0.0, 0.1268, 0.1096, 0.0, 0.0], [0.1058, 0.0794, 0.0, 0.0714, 0.1158, 0.0, 0.0, 0.1423, 0.0471, 0.0377, 0.1268, 0.137, 0.0, 0.125], [0.1116, 0.0476, 0.0066, 0.0408, 0.0421, 0.0, 0.0, 0.1383, 0.0366, 0.0, 0.1549, 0.2146, 0.0, 0.0625], [0.2067, 0.1587], [0.2567, 0.0, 0.0066, 0.0204, 0.0526, 0.0], [0.2654, 0.0, 0.0066, 0.0102, 0.0, 0.0, 0.1383], [0.2911, 0.0159, 0.0263, 0.0918, 0.0, 0.0312], [0.2892, 0.0197, 0.0816, 0.0316, 0.0, 0.1265, 0.0419, 0.0, 0.169, 0.137], [0.3392, 0.0317, 0.0, 0.0612, 0.0632, 0.0], [0.344, 0.0317, 0.0, 0.0204, 0.0737, 0.0, 0.1344, 0.0471, 0.0, 0.1408], [0.3309, 0.0794, 0.0197, 0.0816, 0.0, 0.0, 0.0645, 0.1186, 0.0105, 0.0566, 0.1972, 0.1187, 0.0, 0.0312], [0.3872], [0.3498, 0.0159, 0.0, 0.051, 0.1053, 0.0, 0.1462, 0.0209, 0.2535, 0.1279, 0.0, 0.0625], [0.3474, 0.0159, 0.0, 0.0204, 0.1789, 0.0, 0.0, 0.2292, 0.0262, 0.0, 0.1408, 0.1096, 0.0, 0.0], [0.3697, 0.0132, 0.0816, 0.0988, 0.0262, 0.0, 0.169, 0.1416, 0.0312], [0.376, 0.0, 0.0132, 0.0204, 0.0842, 0.0, 0.1225, 0.0105, 0.0, 0.0986, 0.0868, 0.0, 0.0312], [0.3479, 0.0635, 0.0, 0.0816, 0.1158, 0.0625, 0.0645, 0.2134, 0.0785, 0.1132, 0.0986, 0.1644, 0.0, 0.0625], [0.4197], [0.3891, 0.0317, 0.0197, 0.0204, 0.0211, 0.0, 0.0645, 0.1067, 0.0524, 0.0, 0.0423, 0.0959, 0.0, 0.0625], [0.3819, 0.0066, 0.0306, 0.1053, 0.0, 0.0, 0.1265, 0.0105, 0.1698, 0.0282, 0.1461], [0.4134, 0.0, 0.0132, 0.0, 0.0211, 0.0645, 0.1028, 0.0209, 0.0228, 0.0], [0.4168, 0.0476, 0.0, 0.051, 0.0316, 0.0, 0.1344, 0.0157], [0.3765, 0.0317, 0.0132, 0.0714, 0.0947, 0.0, 0.0645, 0.2016, 0.0419, 0.0943, 0.2394, 0.2009, 0.0, 0.0625], [0.3576, 0.0263, 0.0408, 0.1684, 0.0, 0.2411, 0.0785, 0.1698, 0.2817, 0.2968, 0.0], [0.4197, 0.0, 0.0132, 0.0204, 0.0421, 0.0, 0.0323, 0.1225, 0.0366, 0.0943, 0.0845, 0.1187, 0.0, 0.0312], [0.3945, 0.0, 0.0197, 0.0408, 0.0947, 0.0, 0.0, 0.1937, 0.0105, 0.0943, 0.2535, 0.21, 0.1923, 0.0], [0.4129, 0.0476, 0.0197, 0.051, 0.0842, 0.0, 0.0, 0.1383, 0.0314, 0.0566, 0.2958, 0.1553, 0.0, 0.0938], [0.4318, 0.0476, 0.0197, 0.051, 0.0947, 0.0, 0.0, 0.2016, 0.0157, 0.0566, 0.0282, 0.0776, 0.0, 0.0], [0.444, 0.0, 0.0132, 0.0204, 0.0316, 0.0, 0.0, 0.1383, 0.0157, 0.0, 0.169, 0.1005, 0.0], [0.4304, 0.0159, 0.0066, 0.0816, 0.0842, 0.0, 0.0323, 0.1423, 0.0105, 0.1887, 0.1268, 0.1461, 0.0, 0.0], [0.4163, 0.0, 0.0132, 0.0918, 0.1158, 0.0, 0.0, 0.2174, 0.0419, 0.0189, 0.338, 0.1279, 0.1875], [0.4163, 0.0855, 0.051, 0.1368, 0.0, 0.0323, 0.1542, 0.1361, 0.0, 0.2113, 0.1416, 0.0, 0.0312], [0.4478, 0.0, 0.0066, 0.0102, 0.0421, 0.0, 0.0949, 0.0314, 0.0755, 0.2254, 0.0868, 0.0, 0.4062], [0.4566, 0.0, 0.0066, 0.0306, 0.0842, 0.0, 0.0, 0.1344, 0.0052, 0.0, 0.1408, 0.0731], [0.4299, 0.0635, 0.0197, 0.0408, 0.0632, 0.0, 0.0, 0.2688, 0.0366, 0.0377, 0.1268, 0.2055, 0.0, 0.0625], [0.4862, 0.0476, 0.0329, 0.051, 0.0421, 0.0312, 0.0968, 0.1146, 0.0157, 0.0377, 0.0563, 0.1005, 0.0, 0.0], [0.4949, 0.0317, 0.0066, 0.0714, 0.1368, 0.0, 0.0, 0.1423, 0.0157, 0.0755, 0.0913, 0.0, 0.0], [0.4896, 0.0794, 0.0066, 0.0408, 0.1368, 0.0, 0.0645, 0.1265, 0.0524, 0.0755, 0.2958, 0.3059, 0.0, 0.1562], [0.5313, 0.0, 0.0066, 0.051, 0.0947, 0.0, 0.0, 0.1225, 0.0314, 0.0, 0.1408, 0.1826, 0.0], [0.541, 0.0066, 0.0102, 0.0842, 0.125, 0.0, 0.1739, 0.0105, 0.0377, 0.1268, 0.1461, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

