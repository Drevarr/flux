created: 20230625214256000
creator: Drevarr
modified: 20230705163536183
modifier: drevarr
tags: ChartData
title: 202306252142_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Yngvar The Burdened", "Wall Knot", "Melpomene Vandrish", "Shrimp Tempsura", "Wall Knot", "Booboo Hurts", "Tacitus Kilgore I", "Blaze All Might", "Koralia Danai", "Gestern Yesteryear", "Aronorf Xideliesi"];
const professions = ["Scourge", "Firebrand", "Chronomancer", "Tempest", "Dragonhunter", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 132.3713, 31.857, 20.6669, 69.8152, 16.956, 133.907, 0.0, 0.0, 34.6651, 21.2987, 0.0, 19.3327], [12.1224, 108.6112, 120.876, 118.393, 131.5868], [0.0, 0.0, 9.3958, 19.1347, 29.9819, 51.4639, 8.7308, 158.1937, 0.0, 56.4365, 203.6685], [5.2846, 247.8481, 116.7403, 67.6301, 220.4363, 101.2409, 0.0, 61.6334], [71.9073, 49.7164, 40.1274, 146.3774, 37.409, 23.3198, 11.7844, 410.8784, 30.0573, 0.0, 14.9542, 0.0, 0.0, 0.0], [10.2932, 0.0, 149.9573, 64.2114, 44.1019, 78.7115, 263.175, 21.231, 176.9933, 25.4197, 120.1898, 161.1288, 128.5339, 38.3438, 17.0719, 0.0, 0.0, 0.0], [123.9003, 148.4022, 2.7256, 0.0, 78.3605, 13.9601, 67.6323, 173.34, 60.4725, 78.729, 127.225, 0.0, 324.7357, 208.917, 146.8631, 133.2096, 109.3059], [88.8786, 8.9764, 2.4844, 24.7786, 71.1691, 216.3316, 36.2183, 412.0266, 579.315, 120.225, 279.7536], [55.5409, 166.2056, 145.1013, 35.1965, 385.4671, 141.5534, 339.0237, 335.8988, 103.089, 510.048, 32.6634], [41.7579, 34.792, 122.7395, 0.0, 370.4141, 27.9335, 98.1543, 67.7325, 8.211, 300.1997, 9.7768, 181.7683, 508.1562, 167.764, 19.5367, 293.6761, 57.8547, 14.6485, 12.8938], [258.5324, 651.1725, 260.652, 174.4762, 334.5888, 335.1071, 729.1829, 193.7754, 109.1692, 506.9448, 397.989, 78.5314, 121.073]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

