created: 20230515221048000
creator: Drevarr
modified: 20230705163530293
modifier: drevarr
tags: ChartData
title: 202305152210_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Klenga", "Rosetendril", "Artakama Nahid", "Belvyn Brightblade", "Venom The Ferocious", "Tootsie Pop Rocks", "Sheep Poh", "Tika Mi", "Cat Wigglebooty", "Eibh\u00ebar", "Miphest\u00f6", "Etcherii", "Ryvalia Fazebringer", "Primal Clone", "Black Raspberry Pie", "Ark Darkness", "Newtype Khan", "Tribal S", "Fribble Bibble", "Gavann", "Sub Train", "Arriasa", "Bella Sassy", "Koralia Danai", "Drevarr Moonwillow", "Solus Sanctus", "Sygaldry Verdandi"];
const professions = ["Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Tempest", "Scrapper", "Chronomancer", "Tempest", "Willbender", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Druid", "Scrapper", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[146.1456, 154.1779, 18.7431, 77.0462, 52.3759, 75.9497, 21.4415, 85.4413], [54.058, 40.9556, 51.9264, 66.0613, 132.3456, 55.249, 0.0, 0.0, 84.3006, 17.5018, 13.1544, 0.0, 0.0, 0.0, 0.0, 0.0, 50.5325, 0.0, 14.1773, 0.0, 0.0, 0.0, 0.0, 48.7577, 76.2919], [18.6486, 31.71, 7.6243, 18.533, 67.4611, 159.1075, 25.378, 0.0, 98.2127, 10.6766, 9.396, 18.4583, 41.4305, 24.5495, 20.1348, 42.822, 0.0, 46.5936, 18.4032, 18.6444, 38.4065, 0.0, 23.4413, 0.0, 18.5803], [20.7207, 261.985, 0.0, 0.0, 6.8752, 234.0058, 337.896, 0.0, 0.0], [0.0, 0.0, 0.0, 63.7637, 54.8558, 69.6384, 0.0, 56.3051, 0.0, 25.8804, 175.968, 53.8358, 181.3968, 125.3462, 4.5402, 93.5394, 0.0, 13.0646, 23.0143], [0.0, 64.175, 0.0, 0.0, 0.0, 101.6602, 228.8208, 17.2102, 78.8351, 28.1784, 28.8792, 0.0, 68.4715, 4.2483, 23.4108, 103.896, 20.8915, 55.4064, 61.5485, 0.0, 58.28, 0.0, 10.3141, 0.0, 46.0989], [273.4416, 192.8246, 44.9381, 216.5685, 0.0, 230.5369, 0.0, 61.2306], [42.884, 19.3116, 19.4832, 59.784, 137.0304, 170.4893, 10.4415, 0.0, 75.6883, 38.0904, 28.9872, 0.0, 42.6431, 19.5877, 11.466, 36.3816, 70.6656, 57.0499, 0.0, 41.3788, 54.8598, 58.0718, 19.5426, 36.0346], [40.1435, 37.901, 19.6627, 0.0, 59.8836, 153.8957, 287.8637, 5.1246, 24.9863, 94.7346, 24.0437, 6.7392, 37.2268, 35.1217, 29.0304, 74.295, 22.1414, 63.3216, 49.4842, 1.6483, 7.693, 50.0338, 64.1353, 16.7339, 37.5125], [10.3831, 39.713, 0.0, 20.736, 87.3843, 178.4909, 202.2634, 0.0, 30.785, 87.7786, 15.2078, 26.9784, 21.5927, 47.0489, 47.0884, 31.0464, 74.997, 32.0515, 60.3024, 71.568, 15.8216, 58.5714, 59.8987, 43.8195, 16.18, 97.5467], [156.9096, 248.88, 293.5651, 26.5306, 232.712, 36.7625, 197.8441, 15.9427, 190.3779], [0.0, 358.474, 51.4892, 64.7784, 293.938, 679.0618], [30.4435, 46.206, 27.7385, 0.0, 98.7432, 234.9427, 205.1088, 25.1381, 70.3885, 22.4011, 17.0424, 0.0, 40.5008, 53.3798, 31.0464, 56.511, 64.7726, 107.8752, 56.7091, 0.2468, 65.3902, 61.0342, 52.1333, 28.2261, 100.1507], [83.201, 0.0, 86.8861, 260.2406, 284.0698, 6.7162, 3.2333, 46.208, 38.6285, 35.1, 17.1202, 49.8379, 37.781, 39.2868, 99.2745, 41.2027, 95.7984, 91.4707, 24.6158, 92.1407, 60.3245, 51.4457, 0.0, 82.4854], [0.0, 0.0, 102.131, 291.6288, 386.5056, 25.3255, 21.3431, 108.8123, 48.6538, 9.3096, 20.9512, 57.8814, 21.0146, 60.0264, 68.913, 82.8518, 76.5408, 58.6858, 14.3214, 82.1748, 61.8149, 66.6982, 31.7865, 27.3778], [18.9902, 21.14, 51.8153, 0.0, 232.0616, 314.1158, 720.8448, 9.8063, 111.2966, 110.9294, 99.9648, 0.0, 111.4784, 22.7983], [35.4301, 124.877, 0.0, 0.0, 127.8381, 257.8982, 371.567, 0.0, 21.085, 82.4788, 35.2018, 27.3672, 10.3015, 61.3576, 44.494, 39.1356, 76.8105, 33.2122, 86.496, 111.169, 24.9316, 74.4818, 66.0731, 91.9522, 24.9228, 72.4914], [85.617, 0.0, 0.0, 36.8668, 313.6474, 411.6403, 18.0526, 69.2707, 50.2848, 0.0, 138.6406, 52.8933, 35.8596, 93.366, 79.1914, 195.7584, 77.5661, 38.1476, 186.6126, 25.4782, 77.5124], [192.978, 33.3564, 45.9648, 195.8922, 474.336, 658.9565, 44.9843, 0.0, 157.0078, 82.6944, 41.2128, 29.8596, 116.2883, 78.3509, 79.4052, 184.9185, 90.3067], [374.631, 30.1462, 20.5416, 119.1694, 433.344, 406.9283, 84.8467, 37.0008, 10.2831, 179.1414, 4.3132, 64.638, 135.954, 75.5309, 311.1408, 140.7504, 19.6709, 221.9302, 19.6587, 4.9383, 20.0965, 19.7768], [16.1439, 85.315, 45.8784, 77.8188, 287.4125, 511.4678, 0.0, 13.5406, 54.6546, 55.5355, 72.792, 19.0265, 149.7157, 23.9009, 100.548, 238.8555, 152.0885, 258.3456, 251.1696, 27.4386, 312.4974, 133.2107, 143.7105, 0.0, 158.8477], [28.3714, 257.757, 16.8287, 24.5592, 199.3796, 480.4262, 809.0534, 22.8155, 336.5398, 28.1218, 58.32, 0.0, 94.9466, 51.7907, 68.9724, 153.855, 47.8987, 211.5072, 129.1632, 37.0125, 128.7988, 204.3226, 101.5787, 0.0, 158.4254], [120.2939, 125.028, 13.5934, 75.6648, 189.7146, 701.783, 890.3856, 37.8437, 308.2188, 90.0859, 90.936, 68.8475, 112.9335, 73.4864, 93.7188, 167.2515, 68.2099, 268.872, 226.2912, 32.5513, 121.2224, 220.078, 175.028, 22.4503, 36.3161], [107.1784, 141.94, 0.0, 0.0, 135.909, 765.9648, 1079.3702, 11.1236, 0.0, 101.0282, 117.6413, 53.136, 23.0225, 160.6695, 54.5797, 59.9256, 272.5515, 139.3661, 308.2848, 246.9437, 32.6006, 229.6232, 21.9297, 173.1527, 142.4491], [72.5225, 531.369, 85.6984, 65.8368, 231.4637, 686.3232, 754.2787, 34.2461, 352.2737, 61.9642, 34.7112, 46.7415, 102.7476, 132.0874, 73.2816, 160.641, 72.0936, 177.5616, 131.0717, 15.8019, 121.5138, 178.2766, 190.3429, 64.8388, 163.2112], [229.067, 73.4092, 60.6744, 184.5333, 667.3498, 914.809, 0.0, 23.0888, 287.8476, 117.0466, 80.7624, 52.5888, 207.5567, 24.3225, 136.5588, 283.374, 151.4635, 298.1664, 287.4989, 15.1702, 289.0688, 0.0, 213.2216, 280.5347], [85.9795, 156.285, 38.6483, 38.3184, 339.1746, 986.1504, 1017.719, 9.672, 21.7226, 294.3067, 117.6979, 131.8464, 41.4625, 276.109, 65.314, 103.4712, 340.9965, 289.2226, 449.9424, 284.8406, 81.4275, 299.3844, 186.793, 257.9788, 78.131, 192.3485]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

