created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Charr Surethang", "Mort\u00e4rion", "Melody Phoenixstorm", "Tikonis", "Seiker Novus Terra", "Jimbo The Pleb", "Tegan Parker", "Oo Dads Mad", "F\u00e4dscelsior", "Konoko K", "Kos\u00e1ir", "Nsidejob", "Zenady", "Sofya De Nova", "High Sorcer Baradun", "Mistwalker Cael", "Tootsie Pop Rocks", "Venomina The Fierce", "Xanvias Einzbern", "Keypek The Drunk", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Scrapper", "Scrapper", "Holosmith", "Tempest", "Berserker", "Tempest", "Berserker", "Tempest", "Tempest", "Virtuoso", "Catalyst", "Berserker", "Tempest", "Tempest", "Herald", "Scrapper", "Spellbreaker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0.135, 0.601, 0.605, 0.136, 0.148, 0, 0, 0, 0.589, 0.551], [0, 0.484, 0, 0, 0.269], [0.427, 0.208, 0.375, 0, 0, 0.112], [0.337, 0.449, 0.438, 1.408, 0.606], [0, 0.235, 0.366, 0.416, 3.313], [0, 0.193, 0.107, 0, 0.405, 0.275, 0, 0.434, 0, 0.081, 0.534], [0, 0.673, 1.374, 0.856], [0, 0.36, 0.182, 0, 0.466, 0.089, 0.452, 0.189, 0, 0.415, 0.217], [0, 0.619, 0.582, 1.41, 0.673, 0.101], [0.716, 0.67, 0.593, 0.356, 0.372, 0.094], [0.769, 0.477, 0.954, 0.807, 0.513], [0, 2.08, 0.531, 0, 0, 0, 0, 0, 0.715, 0, 0.2, 0, 0, 0.992], [0, 0.406, 0, 0, 0.161, 0, 0, 0, 0.422, 0.467, 0.452, 0.452, 0, 0, 0.165], [0, 0.48, 0, 0, 0.797, 0, 0, 0, 0.282, 0.617, 0, 0, 0, 0, 0.551], [0.36, 0.726, 0, 0.417, 0.795, 0.589, 0.461, 0.071, 0.733, 0.992], [0.38, 1.08, 0.725, 0.802, 0.926, 0.608, 0.727, 0.731, 0.792, 0.543], [0.831, 0.161, 0.645, 0, 0, 0, 0.601, 0.603, 1.023, 0.409, 0.814, 0.624, 0.67, 0, 0.7, 1.07], [0, 0.58, 0.707, 1.267, 0.606, 1.249, 0.18, 0.091, 0, 0.783, 0.82, 0.315, 0.182], [0.841, 1.304, 0.432, 0.868, 0.6, 0, 0.706, 0.662, 0.403, 0.314, 0, 1.312, 0.956], [1.163, 0.542, 0.934, 1.411, 0, 0.628, 1.201, 0, 2.045, 1.13, 1.074, 0.758, 0.462, 0.009, 1.439, 0.551], [1.006, 1.342, 3.281, 2.119, 2.594, 1.491, 0.875], [0.429, 1.402, 1.892, 2.792, 2.581, 2.866, 2.071, 1.746, 0, 2.516, 2.369, 1.729, 0.972, 1.467, 2.808, 2.748]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

