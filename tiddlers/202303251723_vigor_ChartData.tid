created: 20230325172304000
creator: Drevarr
modified: 20230705163523063
modifier: drevarr
tags: ChartData
title: 202303251723_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Tika Sumiko", "Zadie Miststep", "Arcanophage Farra", "Newtype Khan", "\u00c1rkantor", "Mac Chiato", "Zefirokai"];
const professions = ["Druid", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Vindicator", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[86.4819, 80.2643, 0.0, 0.0, 463.3469, 78.4862, 0.0, 73.6258, 66.7597, 0.0, 0.0, 81.6432, 52.1136, 167.9874, 80.4762, 0.0, 0.0], [101.6088, 102.0195, 0.0, 0.0, 0.0, 16.3215, 906.0433, 57.2723, 0.0, 105.421, 32.4888, 0.0, 0.0, 32.7274, 0.0, 118.5857, 216.5882, 174.8569, 294.8986], [126.4023, 170.5522, 0.0, 0.0, 31.3992, 31.5186, 1037.0453, 15.7394, 0.0, 200.3098, 35.7562, 56.9837, 90.9638, 23.7888, 146.4755, 134.8359, 201.4824, 282.2293], [0.0, 41.283, 0.0, 0.0, 85.4658, 0.0, 1491.3576, 57.0618, 0.0, 131.5526, 0.0, 0.0, 0.0, 0.0, 0.0, 142.2596, 249.5103, 374.9839, 517.69], [316.928, 195.5002, 0.0, 34.5974, 78.939, 0.0, 2121.1997, 200.8742, 70.3759, 224.8517, 103.4442, 17.6218, 28.424, 71.9021, 179.1216, 102.9112, 101.9139, 190.1545, 126.828], [178.5718, 158.004, 18.2434, 71.7066, 13.3111, 2307.0548, 81.013, 85.3811, 257.3424, 92.1567, 66.9178, 0.0, 59.568, 44.9904, 347.1091, 287.1963, 308.2749, 532.1114], [141.1603, 121.3988, 13.6987, 47.4682, 14.4648, 0.0, 1415.854, 67.1686, 744.9019, 188.6947, 203.4739, 40.4872, 262.3094, 234.2592, 716.1625, 628.4972, 830.8124, 1198.0594], [626.4033, 811.7752, 178.9452, 419.5382, 589.2642, 4307.5778, 418.0142, 283.7569, 631.0354, 367.4013, 2.496, 35.2784, 208.9786, 280.392, 530.4467, 646.3619, 805.2519, 1066.3794]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

