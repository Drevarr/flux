created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Rafaellagabriela", "Solus Luxes", "Sister Elon\u00edth", "Bella Sassy", "Crusader Siolith", "Tegan Parker", "Cat Wigglebooty", "Tootsie Pop Rocks", "Tribal S", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Scrapper", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.1401, 42.7358, 47.4617, 28.9089, 12.879, 0.0, 14.2296, 76.7637, 54.653, 35.718, 28.9552, 10.8011, 56.7267, 35.9798, 55.9187, 50.051, 24.5916, 5.5123, 13.3614, 13.3386, 34.7609, 8.7646, 5.1888, 27.166, 34.9694, 14.0333], [12.0431, 55.5246, 16.3426, 58.0777, 36.4846, 6.616, 0.0, 21.2895, 34.4411, 12.2989, 27.7137, 14.2146, 0.0, 26.0779, 113.9427, 47.6715, 29.2847, 8.9879, 30.7877, 0.0, 25.4467, 19.4237, 16.5282, 25.2241, 2.2387, 0.0, 26.7703, 25.4681, 19.661, 16.4462, 15.3032, 12.3178, 12.7575], [21.3376, 36.4361, 115.4613, 92.5943, 102.4268, 69.764, 20.7769, 80.5805, 3.9706, 27.5184, 8.4374, 13.1468, 18.7022, 28.9332, 103.8719, 36.8077], [29.821, 29.0742, 13.0961, 113.7583, 47.8321, 0.0, 0.0, 8.6954, 2.4343, 68.4293, 59.6853, 11.3049, 19.8754, 9.7284, 124.0029, 29.0542, 27.6836, 10.6025, 22.2306, 13.7365, 19.8357, 41.7374, 0.0, 18.3425, 0.0, 18.954, 13.4627, 37.8682, 10.936, 1.3762, 1.1844, 9.1495, 8.316], [44.7314, 71.8411, 27.0151, 99.0295, 118.6466, 18.7734, 67.959, 34.6531, 22.6302, 54.2342, 23.7546, 24.3747, 33.6532, 14.7523, 20.3391, 88.9962, 24.4233, 20.936, 12.0578, 2.9799, 16.4887, 12.165, 16.5485, 12.3464, 36.9811, 160.1262, 42.7456, 21.0823, 20.8454, 16.2056, 18.6543, 15.9705], [16.4557, 30.3711, 6.2078, 63.3627, 125.1104, 86.1552, 64.0994, 40.3466, 77.0981, 185.9283, 53.6625, 0.0, 19.5439, 197.4861, 179.0503, 6.1422, 52.313, 23.547, 38.8838, 17.5223, 110.7621, 35.0743, 63.4271, 20.5709, 68.211, 28.7245, 0.0, 26.57, 20.2138, 27.8428, 43.9412, 90.8145], [41.9278, 49.0703, 5.0479, 32.3745, 248.8324, 22.566, 14.1075, 12.3519, 183.8327, 52.9623, 254.718, 97.8358, 476.0006, 110.5754, 0.0, 170.3941, 160.7003, 48.0778, 65.7087, 148.6013, 109.296, 0.0, 7.488, 69.7019, 0.0, 61.5098, 29.892, 1.8048, 84.8623, 59.2987], [134.2262, 77.2096, 0.0, 54.4388, 287.9503, 6.8688, 158.8761, 94.8032, 202.0914, 208.5624, 375.3513, 0.0, 140.9892, 136.3595, 184.1277, 28.7898, 260.9732, 14.4214, 63.9947, 250.4314, 278.7199, 0.0, 98.0881, 16.727, 0.0, 194.4644, 5.2272, 161.5127, 77.6064, 107.1976, 93.3307, 193.4415], [499.1011, 68.6882, 375.1312, 244.2885, 803.2727, 429.8238, 404.019, 268.1844, 622.6389, 858.0168, 0.0, 629.694, 414.8707, 157.3522, 854.1147, 909.8218, 0.0, 309.0395, 317.8982, 79.5366, 451.9614, 0.0, 300.0085, 263.6813, 171.7004, 250.0564, 429.8333], [401.1493, 439.401, 82.2118, 386.5877, 987.1898, 456.5026, 575.7399, 185.0534, 798.8299, 738.4095, 316.0125, 5.3479, 464.3206, 1101.1545, 1077.6866, 158.1837, 330.8854, 331.9325, 465.1883, 690.4089, 379.8709, 239.5404, 88.7462, 269.568, 124.049, 4.5157, 211.5338, 162.7027, 191.5532, 373.2044, 582.1672], [274.8084, 689.6386, 35.329, 324.669, 725.1426, 260.973, 29.9376, 260.5527, 529.7802, 641.9246, 621.2052, 693.7011, 0.0, 469.025, 1168.7328, 889.7508, 407.7438, 717.6359, 375.7653, 201.2509, 664.5192, 772.8478, 193.2481, 489.9092, 426.6874, 52.7904, 496.6612, 57.4266, 470.2068, 238.8202, 95.8988, 416.3758, 756.6143], [201.403, 486.9935, 177.8825, 163.6341, 390.7966, 282.7805, 378.2605, 197.3602, 517.419, 498.1743, 574.1649, 0.0, 331.2883, 1230.1875, 1445.66, 360.4982, 879.4188, 692.9771, 636.3861, 677.3164, 735.7479, 137.7519, 301.7278, 553.6819, 393.588, 492.0392, 167.8802, 345.6079, 320.2392, 73.5456, 243.2758, 1081.9778]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

