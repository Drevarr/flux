created: 20230701101710000
creator: Drevarr
modified: 20230705163540348
modifier: drevarr
tags: ChartData
title: 202307011017_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Atros Beta Ranger", "F\u00f9gly", "Sakis Ranger", "Violet Stab", "Anti Jimbo", "Ryvalia Fazebringer", "Wall Knot", "Bella Sassy", "Valkren Sothur", "Gamora Titus", "Drumina", "Gestern Yesteryear", "Drevarr Moonwillow", "Govinda Ektar", "Ryvalia Routbringer", "Grim Breacher", "F\u00f9gly", "Fluffy No Care Bear", "Trodek", "Dizzy Bunnyhopper", "No Reserv\u00e9", "Atros Shroudkeeper", "Elonith Requiem", "Sister Elonith", "Latedoctor", "Legacy Of Mathus", "Charr Surethang"];
const professions = ["Druid", "Tempest", "Druid", "Firebrand", "Catalyst", "Chronomancer", "Firebrand", "Firebrand", "Dragonhunter", "Dragonhunter", "Druid", "Firebrand", "Scrapper", "Vindicator", "Berserker", "Reaper", "Catalyst", "Berserker", "Scrapper", "Holosmith", "Vindicator", "Vindicator", "Scourge", "Berserker", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[102.4681], [68.7406, 7.6514], [3.1442, 5.6481, 61.4035, 55.7949, 88.3889, 55.5886, 43.2075, 27.1892], [226.4953, 18.8189, 65.5319], [364.9904, 254.4259, 273.8947], [95.2925, 1.9973, 57.6383, 7.6739, 66.9745, 0.0, 162.8095, 72.5309, 0.7812, 36.0156, 95.525], [6.0189, 36.1277, 0.0, 170.5127, 29.2143, 131.358, 49.3023, 12.9375, 38.9219, 93.625], [0.0, 0.0, 97.614, 46.0128, 26.5, 108.6076, 90.3208, 10.4919, 400.6383, 8.6522, 83.6083, 0.0, 36.119, 5.6667, 0.0, 28.0156], [334.2642, 101.2811], [37.9615, 147.2037, 1080.193, 589.6282, 628.8333], [203.7179, 124.8889, 90.1835, 38.3396, 4.6622, 211.4894, 141.6087, 111.1943, 164.8095, 53.0, 0.0, 68.25, 263.1875, 212.8083], [8.2981, 12.0, 125.3509, 285.4487, 53.6111, 128.6709, 214.6557, 19.0459, 482.8511, 7.5435, 63.1178, 0.0, 72.1905, 23.0864, 81.3125, 24.7344, 89.1583], [181.4167, 233.6519, 110.9575, 15.8405, 233.766, 168.5, 203.707, 0.0, 80.9762, 99.6914, 7.8605, 6.625, 82.3281, 150.375], [342.2564, 62.1667, 694.6772, 104.8019, 0.0, 408.2766, 87.913, 323.3025, 143.7143, 175.6429, 89.4321, 19.5156, 352.4688], [2276.0063], [852.5385, 1611.4722, 1501.8291], [565.8696, 1078.5127], [4409.3846, 710.3611], [0.0, 1078.3404, 625.9348, 1239.0828, 0.0, 950.3571, 637.5309, 570.2093, 265.7188, 458.875, 958.3667], [0.0, 1414.3376, 0.0, 1139.1358, 969.8372, 782.7344, 356.0, 929.675], [1446.2166, 963.381, 801.7284, 179.5349, 639.4219, 676.7969, 1183.8417], [862.4783, 1937.5764, 450.1143, 692.6905, 938.0123, 677.3023, 869.5781, 1287.2656, 1336.9333], [1678.8696, 1854.9172, 224.3714, 1232.5, 1249.3333, 253.0, 1250.0781, 1156.75, 1914.0833], [75.3462, 98.5556, 3026.0175, 3266.7308, 793.9722, 1405.8544, 1445.7972, 310.8973, 3611.5319], [72.4231, 82.5926, 1249.1228, 1313.2051, 415.1389, 1874.3797, 781.5802, 131.1135, 809.9787, 642.1087, 1507.3854, 186.7143, 494.1667, 653.9012, 1173.186, 689.6094, 1222.8125, 824.4], [469.7222, 91.6392, 848.2311, 203.5973, 2735.5319, 968.6087, 2146.1083, 0.0, 1645.5714, 1058.8395, 614.1094, 1270.9688, 2014.7], [0.0, 92.537, 2812.193, 2553.4615, 906.4722, 2996.7722, 1324.7217, 146.527, 4838.0851, 2675.0217, 2686.6019, 0.0, 794.1667, 1621.9753, 1333.4531, 1751.5156, 2940.7167]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

