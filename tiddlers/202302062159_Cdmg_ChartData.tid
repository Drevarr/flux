created: 20230206215940000
creator: Drevarr
modified: 20230705163518738
modifier: drevarr
tags: ChartData
title: 202302062159_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Mac Aaroni", "Xanvias Tsollice", "Allexa Adalhart", "Gavann", "Ravioli Fetabringer", "Sygaldry Verdandi", "Dark Sidiuz", "Sigmund Mistwalker", "Ace Rages", "\u00c2 R K", "Johosh The Great", "Sumatra Satyricon", "Sp\u00edcy Cheese", "Legacy Of Mathus", "Lord Erin The Wise", "Demon Sekhmet", "Rina Of Theros", "Smol Gluvs", "Daring Deathblade", "Fungus", "Be\u00eb"];
const professions = ["Tempest", "Tempest", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Vindicator", "Berserker", "Firebrand", "Firebrand", "Ranger", "Berserker", "Berserker", "Weaver", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.1891, 3.9103, 17.4304, 30.4324, 0.0, 2.6187, 50.1236, 64.7705, 3.3807, 6.8495, 18.8263, 27.1154, 0.0, 39.8427, 1.3974, 3.8144, 0.0], [7.2473, 0.0, 16.6392, 17.5892, 0.0, 4.875, 92.2921, 1.5902, 0.0, 6.7849, 44.988, 0.0, 0.4947, 14.5618, 2.2372, 13.1237, 94.6552], [4.4727, 4.609, 49.3797, 27.8054, 15.7255, 17.5562, 19.6629, 2.7377, 0.5625, 14.9462, 24.6587, 52.4615, 3.6947, 32.7978, 7.3397], [0.0, 179.3544, 3.8973, 1.2157, 23.6], [21.6909, 18.8077, 1.7658, 59.6054, 0.0, 86.3, 38.7416, 0.8197], [17.0255, 1.8782, 15.1266, 70.573, 15.3137, 23.2375, 0.0, 17.0164, 8.0057, 37.1505, 42.0838], [0.6364, 0.0, 16.8797, 5.1351, 15.1176, 31.9563, 41.6854, 21.6393, 0.2784, 0.3441, 43.6048, 0.0, 1.2947, 126.8427, 0.0, 32.2062, 110.6552], [43.3927, 184.2532], [7.6655, 0.391, 84.2152, 49.3838, 0.0, 12.3, 21.9551, 11.1148, 21.0682, 11.828, 35.3353, 0.0, 3.1053, 12.8427, 9.1923, 15.9897, 0.4483], [9.7782, 0.9367, 24.573, 0.0, 39.4125, 67.8764, 3.377, 66.0568, 93.9785, 18.3293, 47.3077, 0.0, 30.0112, 0.0, 0.0, 0.0], [35.5418, 24.1154, 71.8608, 91.9189, 1.7843, 39.4062, 4.7079, 72.2787, 22.5284, 32.1075, 10.1317, 7.3077, 0.0, 12.8652, 0.0, 11.7629, 113.1379], [6.5782, 4.8462, 37.3291, 81.4919, 0.0, 136.025, 110.1798, 18.8525, 12.5, 131.1075, 33.1916, 0.0, 0.0, 95.4831, 0.0, 0.4433, 89.3793], [25.1309, 70.9423, 116.057, 31.4973, 134.7647, 14.125, 87.3258, 4.1475, 75.9148, 27.4516, 20.2575, 52.7308, 35.6105, 113.3933, 7.6859], [7.7927, 1.9167, 54.0316, 51.0595, 0.0, 70.2, 102.8652, 194.6393, 0.0, 34.0753, 173.6407, 3.2308, 0.0, 125.1011, 0.0], [52.9927, 14.3654, 7.3544, 111.2811, 21.8431, 25.8125, 31.5618, 27.3443, 116.3807, 14.043, 139.8982, 32.1154, 0.0, 36.1573, 0.0, 0.0, 0.0], [55.8364, 5.1218, 44.4873, 117.8703, 57.8627, 31.5188, 44.7528, 32.0, 62.4205, 99.0645, 52.6826, 13.3846, 0.0, 133.1124, 35.5769, 2.1856], [45.0218, 40.1154, 165.1013, 180.1676, 14.6078, 52.7125, 10.5506, 66.7049, 94.9091, 158.6452, 128.994, 78.5385, 2.5684, 172.9438, 0.0], [31.4291, 32.6667, 111.2658, 23.827, 32.0, 113.3187, 215.9775, 250.8525, 78.3523, 140.3441, 150.8922, 19.6923, 6.1895, 260.3371, 2.1731, 25.2577, 74.6207], [40.8109, 5.141, 131.4241, 206.5297, 0.0, 195.0813, 178.7865, 261.8525, 113.3693, 0.4731, 139.4431, 17.3077, 4.1368, 259.3708, 6.2564, 9.8041, 25.1034], [155.377, 433.6136, 12.1935, 271.6946, 126.4231, 143.3053, 644.6067, 0.0], [19.7964, 13.8718, 81.7152, 212.8541, 18.6078, 167.3125, 121.7079, 274.2951, 142.0795, 222.4839, 130.509, 0.5385, 14.9053, 295.2135, 0.6667, 11.2784, 62.4828], [48.6545, 29.8397, 189.8481, 253.3405, 1.8235, 186.5563, 242.2247, 150.1311, 126.125, 274.2473, 229.1856, 139.8846, 16.2, 306.3708, 91.5, 5.8969]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

