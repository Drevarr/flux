created: 20230523000132000
creator: Drevarr
modified: 20230705163531316
modifier: drevarr
tags: ChartData
title: 202305230001_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Hrakkus", "Guntheryah", "Cheaky Gadgetz", "Bamm\u00edt", "Phaydyd", "Hauzzy", "Oo Dads Mad", "Aira Draugr", "Scraparone", "Tribal S", "Zefirokai", "Cedryn X", "Kmpek", "Alnerian", "Xanvias Einzbern", "Carne Palida", "Eruwon", "My Birthday Girl", "Be\u00eb", "Sire Nighthawk", "Soxxdodendron", "Husky Guard", "Sumatra Satyricon", "Blanco Padre Guard", "Kaye X Kaye", "Nocta Asthariel", "Fribble Bibble", "Binkety Bonk", "Cyclotechnist Farra", "Lord Erin The Wise", "Smol Gluvs", "M\u00e4raas", "Crusader Siolith", "Mistwalker Caelon", "Kary\u00edna", "Sygaldry Verdandi", "Bella Sassy", "Primal Clone", "Gavann", "Black Raspberry Pie", "Hyde En Sikh", "Tootsy Pop Star", "Grasszanine", "Elonith Primal", "Cat Wigglebooty", "Koralia Danai", "Arriasa", "Drevarr Moonwillow", "Venomina The Fierce", "Miphest\u00f6"];
const professions = ["Catalyst", "Soulbeast", "Mechanist", "Berserker", "Dragonhunter", "Berserker", "Spellbreaker", "Herald", "Scrapper", "Druid", "Tempest", "Berserker", "Vindicator", "Dragonhunter", "Berserker", "Scrapper", "Weaver", "Scrapper", "Scourge", "Vindicator", "Willbender", "Dragonhunter", "Soulbeast", "Firebrand", "Vindicator", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Scourge", "Firebrand", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Reaper", "Spellbreaker", "Tempest", "Scrapper", "Firebrand", "Druid", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0397], [0.0, 0.0559], [0.0179, 0.0, 0.0, 0.0, 0.0112, 0.0, 0.0, 0.0155], [0.0, 0.0089, 0.0161, 0.0, 0.0086, 0.0279, 0.0, 0.0061], [0.0, 0.0, 0.0237, 0.0293], [0.0042, 0.0, 0.0, 0.0534], [0.0, 0.0, 0.0192, 0.0, 0.0694], [0.0381, 0.0, 0.0, 0.0037, 0.0694, 0.0161], [0.0, 0.0, 0.0056, 0.0305, 0.0483], [0.0293, 0.0, 0.0, 0.0293], [0.069], [0.0286, 0.0096, 0.0074, 0.0089, 0.0, 0.0223, 0.0, 0.0, 0.0345], [0.0, 0.0, 0.0, 0.0515, 0.0161, 0.0, 0.0, 0.0042, 0.0, 0.0, 0.0448], [0.0, 0.0, 0.0, 0.0, 0.0251, 0.1515, 0.0305, 0.0448], [0.0286, 0.0144, 0.0, 0.0179, 0.0484, 0.04, 0.0, 0.0293, 0.0, 0.0, 0.0276], [0.0028, 0.0, 0.0931], [0.0, 0.0, 0.0488, 0.0, 0.0, 0.0397], [0.0, 0.0096, 0.0, 0.0134, 0.1613, 0.0, 0.0, 0.0265, 0.0, 0.0, 0.0397], [0.0095, 0.0048, 0.0074, 0.0336, 0.0, 0.02, 0.0, 0.0293, 0.0, 0.0, 0.0431], [0.0, 0.0, 0.0, 0.0, 0.1452, 0.02, 0.0, 0.0418, 0.0, 0.0466], [0.019, 0.0, 0.0192, 0.0111, 0.047, 0.0645, 0.0, 0.0, 0.0139, 0.0, 0.0, 0.0431], [0.0095, 0.0, 0.0048, 0.0037, 0.0694, 0.0323, 0.0, 0.0, 0.053, 0.0, 0.0], [0.0286, 0.0192, 0.0259, 0.0492, 0.0, 0.0, 0.0086, 0.0153, 0.0, 0.0, 0.0466], [0.019, 0.0096, 0.0185, 0.0582, 0.0323, 0.0, 0.0, 0.0363, 0.0, 0.0, 0.031], [0.0048, 0.0185, 0.0559, 0.1129, 0.02, 0.0, 0.0335, 0.0, 0.0, 0.031], [0.0, 0.0, 0.0096, 0.0074, 0.0447, 0.0323, 0.0, 0.0, 0.0432, 0.0, 0.0, 0.0517], [0.0095, 0.0, 0.0144, 0.0074, 0.0559, 0.0, 0.0, 0.0, 0.0446, 0.0, 0.0448], [0.0484, 0.06, 0.0, 0.0669, 0.0061, 0.0586], [0.0095, 0.0, 0.0096, 0.0185, 0.047, 0.0484, 0.14, 0.0, 0.0237, 0.0, 0.0, 0.0586], [0.0, 0.0, 0.0096, 0.0111, 0.0604, 0.0, 0.0, 0.0, 0.0488, 0.0, 0.0, 0.0397], [0.0095, 0.0, 0.0096, 0.0111, 0.0716, 0.0323, 0.02, 0.0, 0.0349, 0.0, 0.0431], [0.0095, 0.0, 0.0048, 0.0148, 0.0828, 0.0161, 0.0, 0.0, 0.0363, 0.0, 0.0, 0.0362], [0.0, 0.0192, 0.0037, 0.0626, 0.0484, 0.02, 0.0, 0.0488, 0.0, 0.0, 0.0345], [0.0571, 0.0048, 0.0037, 0.0537, 0.0645, 0.0, 0.0, 0.0321, 0.0603], [0.0095, 0.0, 0.0144, 0.0037, 0.0403, 0.0323, 0.02, 0.0, 0.0544, 0.0, 0.0, 0.0552], [0.0, 0.0, 0.0148, 0.085, 0.0, 0.0, 0.0, 0.0391, 0.0, 0.0, 0.0483], [0.019, 0.024, 0.0111, 0.0626, 0.0484, 0.0, 0.0, 0.0516, 0.0, 0.0379], [0.0095, 0.0, 0.0, 0.0111, 0.0783, 0.0, 0.06, 0.0, 0.046, 0.0, 0.0, 0.0448], [0.2791, 0.0096, 0.0074, 0.0649, 0.0, 0.0, 0.0697, 0.0606, 0.0, 0.0138], [0.0095, 0.0, 0.0048, 0.0185, 0.038, 0.0, 0.0, 0.0, 0.0669, 0.0, 0.0, 0.0586], [0.019, 0.0433, 0.0037, 0.0716, 0.1452, 0.0, 0.0, 0.0363, 0.0, 0.0, 0.0569], [0.0095, 0.0, 0.0288, 0.0111, 0.0626, 0.0, 0.0, 0.0, 0.0669, 0.0606, 0.0, 0.0466], [0.0381, 0.0, 0.0048, 0.0, 0.0895, 0.0806, 0.02, 0.0, 0.0656, 0.0, 0.0293], [0.0095, 0.024, 0.0148, 0.0895, 0.0323, 0.0, 0.0, 0.0377, 0.0, 0.0183, 0.0586], [0.0, 0.0, 0.0, 0.0037, 0.0559, 0.0484, 0.04, 0.0, 0.0572, 0.0, 0.0, 0.0776], [0.019, 0.0, 0.0, 0.0148, 0.1119, 0.0806, 0.0, 0.0, 0.0446, 0.0, 0.0431], [0.0381, 0.1395, 0.024, 0.0148, 0.0984, 0.0645, 0.0, 0.0, 0.0377, 0.0, 0.0, 0.0483], [0.0286, 0.0, 0.0096, 0.0074, 0.0738, 0.0806, 0.0, 0.0, 0.0391, 0.0, 0.0862], [0.0952, 0.0, 0.0144, 0.0037, 0.0917, 0.0, 0.0628, 0.0, 0.0638], [0.0571, 0.0, 0.0144, 0.0761, 0.0323, 0.04, 0.0, 0.0739, 0.0, 0.0, 0.069]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

