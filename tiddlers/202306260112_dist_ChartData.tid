created: 20230626011254000
creator: Drevarr
modified: 20230705163537523
modifier: drevarr
tags: ChartData
title: 202306260112_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Mighty", "Mistwalker Cael", "Oo Dads Mad", "Sakis Ranger", "Fuuko Kazari", "Dargon Spiritwalker", "Grasszanine", "Smol Gluvs", "Xanvias Einzbern", "Gestern Yesteryear", "Drevarr Moonwillow", "Artakama Nahid", "Bella Sassy"];
const professions = ["Berserker", "Vindicator", "Spellbreaker", "Druid", "Berserker", "Reaper", "Spellbreaker", "Reaper", "Berserker", "Firebrand", "Scrapper", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[493, 445, 161, 260, 460, 484, 1355, 530, 508, 4669, 9502, 5537, 4161, 212, 156, 166, 201, 302, 770, 298, 5852, 2545, 1816, 1998, 4008], [437, 646, 257, 265, 7432, 1427, 808, 506, 227, 292, 284, 435, 5787, 2356, 324, 172, 280, 180, 464, 741, 249, 17925, 2276, 782, 1663], [371, 526, 332, 328, 6735, 1692, 728, 472, 509, 363, 8648, 11184, 6159, 4252, 380, 119, 241, 169, 313, 695, 456, 1119, 3171, 2664, 1924, 1777], [2819, 6498, 1312, 304, 210, 359, 191, 232, 531, 360, 2916, 3040, 1668, 1725, 3893], [440, 339, 148, 195, 3916, 364, 311, 279, 249, 13246, 11020, 2601, 2276, 269, 125, 167, 315, 324, 2634, 285, 4573, 600, 1955, 596], [247, 389, 158, 183, 2323, 217, 326, 327, 238, 264, 2452, 8516, 11241, 217, 226, 144, 251, 286, 346, 2691, 276, 5781, 12234, 1364, 1074, 3724], [441, 241, 264, 379, 1294, 2013, 340, 247, 108, 145, 172, 363, 598, 219, 5834, 2835, 1389, 1620, 4869], [415, 297, 191, 233, 505, 347, 369, 388, 283, 262, 319, 6836, 255, 234, 133, 149, 262, 283, 3258, 247, 5963, 1200, 3286, 1059, 3238], [488, 311, 256, 221, 2878, 582, 291, 406, 205, 225, 193, 1568, 6435, 288, 246, 136, 114, 168, 196, 1445, 263, 1332, 2731, 1110, 1662, 1906], [200, 374, 269, 174, 503, 208, 238, 246, 165, 269, 311, 1559, 1441, 520, 240, 142, 176, 215, 611, 224, 5900, 2761, 3473, 963, 4061], [332, 310, 287, 206, 597, 322, 242, 433, 176, 227, 270, 363, 218, 283, 182, 148, 136, 198, 200, 557, 229, 5783, 2645, 2249, 1466, 4785], [277, 299, 192, 184, 6657, 260, 448, 390, 223, 401, 221, 277, 991, 274, 199, 123, 196, 267, 213, 698, 268, 4974, 2838, 3222, 1600, 4791], [271, 302, 151, 133, 561, 180, 221, 312, 174, 264, 2291, 337, 294, 3786, 211, 136, 214, 243, 207, 608, 203, 5808, 4814, 790, 5879, 1408]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

