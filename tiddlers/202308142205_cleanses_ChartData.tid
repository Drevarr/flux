created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Mort\u00e4rion", "Sister Elon\u00edth", "Jerryatric Reflexes", "Seiker Novus Terra", "Newtype Khan", "Blancooo Padreee", "Arcanophage Farra", "Raziel Umbra", "Eibh\u00ebar", "Tropcaller", "Mike The Archmagus", "Mike The Archmagus", "My Birthday Girl", "Tootsie Pop Rocks", "Cat Wigglebooty", "Mielikki Embla", "High Sorcer Baradun", "Klengah", "Tegan Parker", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Weaver", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Druid", "Tempest", "Druid", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0603, 0.0845, 0.0, 0.0435, 0.0, 0.0, 0.2459, 0.0, 0.5, 0.9655, 0.0545], [0.1018, 0.1019, 0.1338, 0.0602, 0.0, 0.1158, 0.0, 0.0, 0.0, 0.0078, 0.0208, 0.0, 0.2182, 0.0309, 0.0, 0.0222, 0.0, 0.0122, 0.0, 0.0], [0.031, 0.1047, 0.0563, 0.0723, 0.0, 0.0632, 0.0, 0.0164, 0.0, 0.0625, 0.1379, 0.0727, 0.1443, 0.0, 0.1, 0.0, 0.1585, 0.0, 0.1471], [0.4407, 0.5752], [0.0847, 0.0619, 0.0904, 0.1408, 0.0, 0.0, 0.0, 0.0484, 0.0, 0.0164, 0.0, 0.0, 0.2069, 0.0727, 0.2268, 0.0, 0.1444, 0.0, 0.1585, 0.0, 0.0], [0.0169, 0.0796, 0.1621, 0.1268, 0.0602, 0.0087, 0.0, 0.0161, 0.0, 0.0, 0.0, 0.3793, 0.0], [0.0169, 0.0841, 0.1549, 0.1549, 0.012, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2069, 0.1455, 0.0309, 0.0, 0.102, 0.0, 0.0, 0.0], [0.1695, 0.0, 0.1679, 0.0282, 0.0, 0.0, 0.1263, 0.0, 0.0, 0.0, 0.2292, 0.6207, 0.2727, 0.2577, 0.1222, 0.0, 0.0732, 0.0, 0.0294], [0.0339, 0.0, 0.0445, 0.0493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0656, 0.0, 0.1875, 1.5862, 0.0, 0.6804, 0.0, 0.3778, 0.0408, 0.3049, 0.2075, 0.0588], [0.2439, 0.1056, 0.0723, 0.0, 0.1053, 0.0, 0.1967, 0.0543, 0.2083, 0.5517, 0.3455, 0.1649, 0.0, 0.2222, 0.0612, 0.378, 0.1321, 0.2059], [0.0508, 0.0133, 0.6227, 0.0, 0.0155, 0.0, 0.1034, 0.0, 0.0103, 0.1, 0.0, 0.0488, 0.0, 0.0], [1.7254, 0.8675, 0.5652, 0.8632, 0.2581], [0.322, 0.0, 0.2769, 0.0, 0.2261, 0.0105, 0.0, 0.0, 0.5082, 0.0, 0.7292, 1.6207, 0.6545, 1.0, 0.0, 0.7556, 0.102, 0.5732, 0.0943, 0.0], [0.2373, 0.0, 0.4304, 0.3732, 0.1566, 0.1565, 0.0421, 0.0, 0.2131, 0.0, 0.4167, 0.2414, 0.4909, 1.1649, 0.0, 0.6778, 0.0, 0.6341, 0.0, 0.0], [0.0169, 0.4204, 0.5882, 0.2465, 0.3614, 0.113, 0.0, 0.0161, 0.0, 0.0, 0.2083, 0.3103, 0.8364, 0.567, 0.3667, 0.5102, 0.1341, 0.0], [0.1372, 0.9598, 0.493, 0.1446, 0.1913, 0.2316, 0.0806, 0.0], [0.4237, 0.3097, 0.5997, 0.8592, 0.2289, 0.1913, 0.2211, 0.0, 0.0, 0.0, 0.7708, 0.5862, 0.5636, 1.3918, 0.7111, 0.6735, 1.0732, 0.0189], [0.1864, 0.7788, 0.7805, 0.7183, 0.1566, 0.0783, 0.0842, 0.0, 0.0, 0.3607, 0.0155, 0.0208, 0.4138, 0.7273, 0.8454, 0.0, 0.4222, 0.3673, 0.5854, 0.0, 0.0], [0.3729, 0.3584, 0.9326, 0.6479, 0.3855, 0.0783, 0.0737, 0.0968, 0.0, 0.2083, 0.2414, 1.2182, 1.1753, 0.0, 1.0444, 0.2245, 0.9268, 0.0755, 0.2647], [0.4576, 0.9779, 1.4577, 1.2887, 0.2771, 0.4, 0.3789, 0.1935, 0.1852, 1.1311, 0.3798, 0.3125, 1.7586, 1.4, 1.9485, 0.0357, 1.4333, 0.6327, 1.0732, 0.4151, 0.3235], [0.9831, 1.0619, 1.7202, 1.5423, 0.3614, 0.3826, 0.6842, 0.0, 0.1311, 0.1163, 1.375, 1.2759, 1.2364, 2.1856, 1.2, 0.2857, 1.4634, 0.0, 0.4412]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

