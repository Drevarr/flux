created: 20230625214748000
creator: Drevarr
modified: 20230705163536411
modifier: drevarr
tags: ChartData
title: 202306252147_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Aronorf Xideliesi", "Bellatrix Astra", "Air One Com", "Gestern Yesteryear", "Traidoruns Maximus", "Tika Fiery", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[413.2128, 180.4426, 191.3117, 0.0, 442.176, 228.2244, 533.9158, 362.9307, 154.8859], [476.9856, 113.2008, 231.7891, 39.2256, 166.2898, 366.0202, 573.6097, 344.5788, 82.9114, 0.0, 32.1912, 32.4764, 741.364, 0.0], [611.8694, 107.5286, 56.015, 0.0, 306.8386, 286.6882, 695.945, 340.1962, 198.9456, 39.9749, 0.0, 0.0, 548.7885, 10.9942, 0.0], [633.7094, 61.0848, 177.049, 29.9376, 330.5266, 403.2847, 877.8213, 631.0886, 288.1066, 0.0, 14.3208, 0.0, 776.8475, 5.0878], [652.7539, 278.663, 405.0134, 0.0, 447.7032, 292.6505, 803.3138, 599.589, 182.3842, 17.7764, 64.872, 14.4716, 1027.6435, 0.0, 86.4728], [1196.4826, 190.9142, 256.0118, 58.0824, 821.9736, 896.6667, 1415.316, 915.955, 271.2326], [942.6144, 239.3458, 378.5597, 33.8688, 792.6005, 837.0435, 1574.417, 1740.1502, 369.2472, 0.0, 42.228, 39.4702, 1791.4, 28.2312, 86.4728], [870.9792, 340.7174, 393.3005, 65.016, 876.2981, 952.315, 1690.5706, 1438.5753, 419.4523, 65.6225, 369.7704, 66.4774, 1827.5725, 25.2926, 105.2678], [1030.848, 301.4486, 369.7949, 14.8824, 1074.3298, 816.5066, 2136.3138, 1218.0778, 211.0282, 23.9672, 409.1832, 0.0, 1964.6835, 14.9563, 13.3954], [1138.6502, 471.0802, 561.2659, 0.0, 1039.4294, 939.7279, 1754.9918, 1815.2016, 530.591, 0.0, 430.1136, 0.0, 2233.3935, 0.0, 17.6528]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

