created: 20230625215649000
creator: Drevarr
modified: 20230705163536942
modifier: drevarr
tags: ChartData
title: 202306252156_interupted_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Hraka Thera", "Pale Pam", "Xanvias Einzbern", "Fiorela Marina", "Grimdox", "Solus Sanctus", "Aira Draugr", "Johosh The Mighty", "Grasszanine", "Mister Jekyll", "Zayde Sunsabre", "Shaca Booey", "Primal Clone", "Rina Of Theros", "Mmathuss", "Inedible Plant", "Elon The Mender", "Cedryn X", "Lord Erin The Wise", "Mistwalker Cael", "Belvyn Brightblade", "Blancooo Padreee", "Mammary Mission", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Raziel Umbra", "Sygaldry Verdandi", "Momomeko", "Elonith Requiem", "Black Raspberry Pie", "Tegan Parker", "Tribal S", "Rozaalyna", "Newtype Khan", "Eibh\u00ebar", "Euljian", "Cerys Fireblade", "Artakama Nahid", "Crusader Siolith", "Jacob Pine", "Rina Of Theros", "Arcanophage Farra", "Tika Fiery", "Sumatra Satyricon", "Miphest\u00f6", "Etchery Howls", "Smol Gluvs", "Tootsy Pop Star", "High Sorcer Baradun", "Irish Mini Rev"];
const professions = ["Firebrand", "Harbinger", "Druid", "Berserker", "Reaper", "Firebrand", "Firebrand", "Herald", "Berserker", "Spellbreaker", "Reaper", "Spellbreaker", "Berserker", "Chronomancer", "Scourge", "Firebrand", "Vindicator", "Druid", "Berserker", "Weaver", "Vindicator", "Firebrand", "Spellbreaker", "Scourge", "Scrapper", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Reaper", "Chronomancer", "Tempest", "Druid", "Reaper", "Spellbreaker", "Chronomancer", "Willbender", "Berserker", "Tempest", "Firebrand", "Reaper", "Reaper", "Spellbreaker", "Firebrand", "Soulbeast", "Tempest", "Druid", "Reaper", "Reaper", "Tempest", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Interupted per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 2, 0, 0], [0, 1, 1, 0, 2, 0, 3, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 3, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 0, 1], [0, 1, 0, 1, 7, 0], [2, 0, 0, 0, 1, 2, 0, 0, 3, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1], [0, 0, 0, 8, 0, 2], [0, 0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 4, 0, 2], [0, 0, 0, 1, 0, 1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], [0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 3, 2, 2, 0, 0], [0, 0, 0, 6, 1, 4], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 9, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 3, 0, 0, 2, 0, 0, 0, 1, 0, 1, 2, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 2, 0, 1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 2, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 3, 2, 1, 1], [0, 0, 0, 1, 5, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 2], [0, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 2, 1, 1, 2], [0, 0, 0, 0, 11, 0, 3], [0, 0, 2, 0, 4, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 2, 0, 1], [2, 2, 0, 1, 1, 1, 0, 1, 2, 0, 1, 2, 1, 1], [0, 0, 0, 0, 2, 0, 0, 2, 0, 1, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0, 5], [0, 0, 1, 0, 3, 0, 1, 1, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 2], [2, 5, 1, 1, 2, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 3, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 5], [0, 1, 0, 2, 0, 1, 0, 0, 1, 0, 3, 0, 3, 1, 0, 0, 1, 0, 1, 2], [2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 2, 2, 2, 3], [0, 0, 4, 0, 4, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0], [0, 0, 3, 1, 4, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 3, 1, 1, 0], [1, 0, 2, 0, 4, 0, 1, 2, 0, 0, 0, 3, 2, 0, 2], [0, 0, 3, 0, 2, 0, 0, 3, 1, 0, 1, 3, 0, 1, 1, 0, 1, 0, 2, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 4, 1, 0, 0, 2, 0, 0, 3, 2, 1, 2, 1], [0, 2, 0, 1, 0, 0, 0, 0, 2, 1, 5, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2], [0, 0, 2, 1, 0, 0, 2, 0, 1, 0, 0, 2, 0, 0, 2, 4, 2, 2], [0, 0, 0, 0, 4, 0, 1, 3, 0, 0, 1, 4, 0, 1, 0, 0, 0, 2, 0, 2, 0, 1], [0, 1, 0, 0, 4, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 5, 0, 3], [0, 0, 2, 0, 3, 0, 0, 2, 0, 1, 1, 4, 1, 0, 0, 0, 0, 0, 3, 0, 1, 1], [0, 3, 0, 1, 0, 3, 1, 1, 1, 0, 0, 3, 0, 3, 1, 3], [0, 1, 0, 9, 3, 2, 0, 5], [0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 1, 2, 0, 1, 1, 1, 1, 2, 1, 6, 0, 0], [0, 0, 1, 1, 5, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 2, 8, 1, 1], [0, 0, 0, 0, 13, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 4], [0, 0, 1, 0, 4, 1, 1, 1, 0, 1, 0, 3, 0, 0, 1, 0, 0, 1, 1, 4, 0, 5], [0, 0, 4, 0, 0, 1, 1, 0, 0, 2, 1, 0, 2, 3, 5, 2, 3], [0, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 2, 0, 4, 0, 0, 0, 2, 3, 2, 3, 1], [0, 0, 1, 0, 12, 0, 0, 1, 0, 2, 0, 4, 1, 2, 0, 0, 1, 0, 2, 0, 0], [0, 0, 0, 0, 2, 0, 1, 3, 0, 3, 1, 6, 1, 0, 2, 0, 2, 3, 1, 1], [0, 1, 0, 2, 7, 1, 0, 2, 2, 0, 3, 4, 0, 1, 1, 0, 0, 0, 2, 1, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

