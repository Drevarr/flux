created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Irish Necroman", "Smol Gluvs", "Cesare Pirane", "Daphne Agla\u00e9", "Rivn", "Hyde En Sikh", "Govinda Ektar", "Tootsie Pop Rocks", "Foot Infection", "Sub Train", "Isis Urd", "Sr Conrad", "Vini Boy", "Johosh The Great", "Grasszanine", "Be\u00eb", "Civil Rules", "Mort\u00e4rion", "Bruno Dionizi", "Ryvalia Fazebringer", "Master Marcovius", "Kosa\u00efr", "Rahani Sunray", "Newtype Khan", "N\u00eec\u00f4le", "M\u00f9st\u00e1ng", "Daphne Agla\u00e9", "Lord Erin The Wise", "Smol Gluvs", "Irish Necroman", "Vera Khin", "M A N O W A R", "Ax Axun", "Minnie Darley", "Kisumaiasu", "Revitiel", "K H I T H", "K\u00e2 \u00d4tik R\u00e6j", "Jimbo The Pleb", "Be\u00eb", "Permanent Dawn", "Alarics Bane", "Blancoo Padre", "Keypek The Drunk", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Scourge", "Specter", "Chronomancer", "Vindicator", "Scrapper", "Reaper", "Firebrand", "Untamed", "Bladesworn", "Tempest", "Dragonhunter", "Spellbreaker", "Scourge", "Berserker", "Scrapper", "Holosmith", "Chronomancer", "Harbinger", "Weaver", "Chronomancer", "Spellbreaker", "Berserker", "Berserker", "Reaper", "Weaver", "Reaper", "Reaper", "Dragonhunter", "Berserker", "Vindicator", "Dragonhunter", "Reaper", "Vindicator", "Dragonhunter", "Berserker", "Berserker", "Reaper", "Weaver", "Reaper", "Scrapper", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2083.6, 185.7778, 524.3262, 331.2676, 342.248], [283.32, 1176.1833, 15.7778, 457.9733, 1391.6901, 302.1496], [394.662, 74.6969, 22.1447, 269.5629, 72.45, 143.875, 94.8302, 65.4262, 158.6944, 321.7447, 41.9091, 35.8395], [390.84, 1904.25, 12.1852, 425.492, 639.9577, 438.2362, 0.0], [4545.5, 158.2593, 476.3957], [81.52, 708.0833, 24.2963, 124.2834, 16.6761, 21.2205, 9.3026, 123.26, 166.9643, 339.0893, 11.1415, 20.4098, 234.2199, 153.3085, 75.1477, 17.8765], [178.44, 125.75, 59.7166, 485.6056, 0.0, 112.0143, 114.4286, 306.566, 74.9016, 276.1155, 551.3723, 32.9432], [32.16, 515.2333, 130.9198, 109.3803, 57.4882, 0.0, 212.7514, 245.4786, 233.0893, 81.5189, 53.5246, 206.395, 197.1489, 94.25, 3.4938], [224.0, 2652.8148, 1795.0695], [231.64, 379.1, 18.4815, 19.1551, 274.9296, 52.7362, 8.4737, 249.1886, 301.6071, 202.0179, 123.3019, 282.1967, 231.9056, 226.8085, 49.3409, 36.3333], [434.88, 408.9357, 494.4107, 677.2925, 125.5902, 172.672], [2160.1, 193.8519, 480.2299, 18.8873, 180.6969, 0.0, 591.3943], [139.2299, 2.2817, 21.2362, 41.7895, 351.6343, 456.1, 414.9821, 117.3962, 167.5574, 262.5826, 204.0957, 65.1591, 31.0617], [1208.88, 3574.25, 7.3704, 636.1497, 3818.8169], [210.937, 74.6447, 18.3371, 496.9286, 600.7321, 380.0283, 255.4426, 465.3801, 522.9362, 80.0114, 82.0123], [549.2, 697.0, 756.6043, 2572.8451, 1105.9803, 587.8295, 182.4444], [926.6229, 484.8286, 824.0357, 345.566, 141.623, 274.5466, 0.5638, 0.0, 150.1605], [1126.08, 3438.8, 230.5556, 1010.492, 1933.338, 1099.1654], [402.9014, 270.9409, 199.9211, 988.5771, 990.3491, 11.8361, 438.5292, 0.0, 0.0, 0.0], [632.4971, 262.7214, 985.0893, 339.4245, 137.1639, 674.5006, 452.3404, 276.2841, 115.6296], [9.0741, 620.1016, 282.0845, 239.9252, 226.9079, 438.9029, 935.9857, 764.9107, 322.8491, 329.9836, 384.4969, 488.5213, 869.7159, 57.7037], [5782.0282, 2498.5748, 299.8684], [520.9859, 275.437, 98.7105, 405.64, 577.6857, 165.6607, 361.8396, 160.8852, 720.3528, 1089.9149, 80.9432, 17.716], [506.96, 1683.4667, 141.8148, 391.0214, 770.0141, 197.7874, 33.6974, 461.0686, 461.15, 856.8036, 314.3585, 142.3934, 569.5913, 434.3298, 238.6705], [145.92, 4805.9167, 353.0741, 1360.3262, 4219.8451, 1126.7323], [771.9151, 235.9672, 1032.6547, 2365.5638, 234.9886, 84.7037], [116.3684, 799.6714, 651.9357, 1107.9107, 73.6415, 110.9836, 910.9665, 1627.5745, 220.9886], [0.0, 300.0709, 429.8553, 2062.06, 1822.6071, 685.6429, 2795.5943], [93.2237, 944.2229, 1028.5286, 1566.625, 850.1132, 192.5738, 807.5255, 1230.1064, 386.7727, 78.9877], [43.2895, 462.3314, 620.9714, 93.9643, 1330.5283, 292.0492, 1278.1988, 1524.5532, 228.9659, 117.8889], [1424.8886, 613.7, 222.5893, 476.8679, 455.6066, 1061.3801, 919.8723, 388.6136, 11.7284], [202.122, 603.8571, 2158.5143, 1444.7857, 912.8113, 3418.1475, 882.0236, 960.7979, 440.8182], [977.04, 2412.0333, 1847.0741, 684.369, 691.2535, 116.2205, 90.1974, 718.3114, 1337.9143, 1331.1964, 616.8585, 392.0, 1133.3528, 1355.1809, 362.3636, 146.1111], [303.24, 2118.7833, 0.0, 563.3957, 571.3662, 350.4961, 172.6579, 668.2143, 543.4857, 1765.4286, 884.2925, 394.459, 1382.0286, 1296.0213, 18.8523, 6.6914], [631.3976, 4.7763, 893.5771, 192.6929, 1747.9107, 229.8852, 1726.9665, 2070.0213, 324.2159, 39.3827], [799.52, 4220.8, 1030.0, 146.4973, 671.2113, 203.8543, 297.3816, 883.6486, 1322.4, 3347.4464, 988.2358, 254.7049, 995.6062, 1132.883, 798.4773, 4.8642], [93.25, 1167.2543, 1962.1571, 826.6786, 702.9245, 1229.9836, 1596.5205, 1010.1064, 424.8182, 80.9753], [552.6, 2951.05, 320.7778, 319.1176, 3945.0845, 61.4646, 7.7368, 304.8543, 788.55, 1157.3571, 2983.4434, 205.1475, 1337.8062, 1205.8404, 347.3636, 143.3827], [1170.1667, 767.3704, 457.8075, 1656.7746, 663.6417, 132.4868, 737.7114, 627.2643, 1349.8393, 2158.6415, 556.2787, 1459.5752, 1900.9362, 349.7273, 394.9136], [6495.6667, 16.6974, 964.2829, 2129.3071, 2318.9464, 2044.8679, 1139.6066, 1688.0919, 2234.266], [76.32, 3499.15, 322.1111, 999.8342, 101.0141, 6.4606, 34.3553, 1931.9314, 2003.7857, 2919.1607, 4359.1604, 104.5574, 1448.5776], [612.6, 1087.3833, 514.8889, 382.3529, 821.831, 1066.2559, 0.0, 465.1086, 2853.3071, 2291.3393, 2725.5755, 1691.7049, 1578.4882, 3622.2553, 2558.3523, 549.9753], [1425.56, 4155.5667, 208.8148, 1167.107, 422.4085, 468.9488, 453.9737, 1184.7657, 1914.5286, 2660.4286, 1471.3679, 728.5082, 2370.7963, 1968.3298, 831.0568, 267.9753], [2134.52, 5077.0667, 2053.0741, 1405.4599, 1480.9014, 968.8583, 671.4079, 2619.5686, 2569.0714, 3250.7857, 3381.3019, 1475.3607, 3767.1652, 2665.3617, 1483.0, 839.7284], [1423.28, 5741.5667, 4142.2963, 1722.0374, 4207.4225, 1834.4409, 507.9737, 3207.4371, 3699.1429, 3356.9643, 2450.4057, 655.4262, 2879.1491, 2854.6915, 1539.125, 553.6173], [792.2, 5007.65, 625.7778, 1429.1872, 5969.5211, 2430.0118, 303.9605, 2590.88, 1983.3071, 5121.75, 3307.9151, 408.541, 3318.6907, 4304.5957, 772.3523, 308.5185]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

