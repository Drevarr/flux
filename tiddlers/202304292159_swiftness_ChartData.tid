created: 20230429215910000
creator: Drevarr
modified: 20230705163527553
modifier: drevarr
tags: ChartData
title: 202304292159_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Smol Gluvs", "Belvyn Brightblade", "Husky Guard", "Fallendruid", "Madame Charrlotte", "Jupi Jupi Jupi", "Bombshell Cutie", "Be\u00eb", "Fribble Bibble", "Shawn L\u00eb\u00eb", "Stark Gandalf", "Owl Scowls", "Blancooo Padreee", "Tika Fiery", "Magister Boombottom", "Newtype Khan", "Miphest\u00f6", "Kenley Ellesmera", "Drevarr Moonwillow", "Venomina The Fierce", "Gabe Malhorn", "Kaotic Reaper Z", "Johosh The Great", "Zady Stardust"];
const professions = ["Scourge", "Scourge", "Firebrand", "Dragonhunter", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Scrapper", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Spellbreaker", "Tempest", "Druid", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 97.0155, 0.0, 76.1208, 298.1072, 80.7677, 24.8391, 115.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.811], [0.0, 102.1999, 0.0, 7.5012, 48.7968, 66.7828, 84.3457, 81.6816, 0.0, 373.6652, 0.0, 0.0, 0.0, 26.0091, 0.0, 0.0, 18.1424, 36.7591], [29.4336, 0.0, 0.0, 0.0, 0.0, 0.0, 191.7832, 338.0265, 73.3421, 9.9621, 223.7827], [3.9312, 14.1485, 0.0, 0.0, 20.9318, 77.1512, 411.7485, 78.4829, 194.4077, 0.0, 108.5243, 0.0, 0.0, 0.0, 19.2648, 52.636], [41.8257, 31.1699, 0.0, 0.0, 159.5832, 634.524, 110.3558, 6.3806, 87.2001, 2.952, 0.0, 0.0], [602.9749, 281.3731, 4.4741, 86.9688, 0.0, 192.5308, 0.0], [0.0, 0.0, 0.0, 423.9818, 250.5283, 0.0, 135.1949, 0.0, 0.0, 56.2578, 0.6997, 0.0, 88.9211, 119.1768, 109.5775], [21.7136, 19.2137, 104.6596, 47.737, 161.8372, 217.6247, 160.7357, 26.1284, 250.1509, 82.2255, 25.6211, 60.249, 17.1873], [0.0, 105.9106, 0.0, 0.0, 63.9658, 35.9996, 489.9775, 94.248, 8.5295, 326.3643, 0.0, 0.0, 60.6575, 0.0, 0.0, 0.0, 63.5076], [0.0, 200.8178, 12.7622, 17.3236, 564.0214, 220.8259, 39.1761, 318.1532], [347.5282, 1035.237], [307.7626, 66.4396, 490.4716, 0.0, 44.4114, 350.2806, 53.4175, 0.0, 7.176, 184.7102], [35.05, 47.7364, 71.3488, 117.876, 56.2598, 77.4732, 439.1125, 173.0736, 145.6033, 84.5932, 35.3993, 193.0059, 42.1013, 54.3228, 7.2607, 35.6592, 85.7353], [0.0, 0.0, 53.9194, 117.852, 297.1414, 483.4637, 49.7295, 48.6465, 22.1206, 441.2243, 11.8334, 77.5866, 58.5869, 71.3368, 136.9719], [113.7591, 9.6478, 0.0, 104.731, 19.8058, 20.5436, 834.4426, 277.6032, 44.8845, 419.6938, 90.9585, 62.6248, 35.7131, 0.0, 37.8457, 1.7296, 73.0337], [36.0612, 85.9925, 86.2735, 286.4744, 59.881, 193.2, 595.2486, 461.8723, 0.0, 44.9258, 30.3559, 60.059, 13.5977, 72.2477, 30.0709, 13.6344, 177.9289], [0.0, 233.0208, 90.0396, 185.3195, 141.0457, 195.7456, 52.3738, 146.3812, 763.296, 228.937, 0.0, 203.3127, 203.5958, 10.5655, 309.7978, 69.9964, 0.0, 0.0, 23.5152, 74.1101], [0.0, 76.3447, 0.0, 0.0, 144.0058, 163.5116, 1136.4129, 359.7418, 23.7701, 548.528, 46.1865, 216.4783, 6.7837, 0.0, 0.0, 17.4064, 264.902], [205.1494, 284.2598, 731.425, 370.2518, 26.9659, 259.4029, 270.477, 15.1833, 621.3061, 122.1971, 190.9824, 63.954, 70.3064, 155.2169], [25.3354, 52.3392, 0.0, 44.2172, 77.2607, 191.3878, 34.7539, 257.4712, 1447.0754, 428.1715, 361.5219, 159.1927, 247.5532, 35.7739, 15.9761, 9.9568, 57.316, 120.1801], [228.913, 449.8577, 81.4531, 305.4492, 1262.6095, 468.0413, 23.3734, 481.5666, 205.6252, 33.6118, 426.3996, 9.2173, 29.2117, 12.5024, 15.18, 207.7452], [83.0844, 231.6674, 41.7312, 168.1698, 149.3491, 388.0744, 1125.4673, 835.0944, 46.3832, 565.0659, 22.509, 305.6165, 179.2042, 2.842, 70.0484, 100.3168, 98.4906], [166.2182, 262.8164, 1650.5351, 471.1258, 64.2025, 500.6488, 151.1362, 76.8953, 386.2019, 154.0773, 44.6803, 31.9394, 124.7704, 516.2953], [60.6312, 78.7626, 127.3961, 101.8734, 114.1094, 260.3692, 1482.1657, 536.1283, 140.9789, 454.9671, 68.9107, 96.2601, 445.4056, 110.5463, 110.653, 99.544, 329.809], [157.2008, 280.912, 10.0271, 393.563, 121.0867, 159.1968, 2038.7827, 661.6781, 126.8733, 680.7159, 257.9925, 999.3355, 64.2166, 305.718, 54.6493, 74.7408, 545.1966]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

