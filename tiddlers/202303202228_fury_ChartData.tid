created: 20230320222849000
creator: Drevarr
modified: 20230705163522664
modifier: drevarr
tags: ChartData
title: 202303202228_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Zadie Miststep", "Physis Windrunner", "Avanda Corone", "Mak\u00e4dos", "Tootsie Pop Rocks", "Mistwalker Caelon", "Lord Erin The Wise", "Xyntharos", "Cat Wigglebooty", "Fribble Bibble", "Tribal S", "Stoic Rapidfire", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Weaver", "Chronomancer", "Harbinger", "Scrapper", "Vindicator", "Weaver", "Vindicator", "Scrapper", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.2256, 30.6945, 30.8524, 26.4701, 16.0653, 171.0072, 49.9677, 23.4872, 24.8028, 27.0799, 22.359, 75.7416, 30.7742, 22.5383, 30.7211, 14.0576, 28.2028, 143.5579, 49.3425, 24.89, 23.8477, 26.0603, 24.1903], [1.8278, 31.28, 26.4096, 24.3105, 23.6441, 28.7941, 25.5337, 351.2808, 94.6757, 0.0, 0.0, 0.0, 25.9635, 121.3194, 23.5915, 19.3253, 31.487, 33.5984, 0.0, 152.4874, 38.1969, 30.5432, 22.1414, 31.4257, 15.9575], [31.8271, 77.8428, 332.748, 168.91, 33.5852, 3.4882, 15.8306, 79.5238, 257.3886, 85.3567, 60.291, 104.1624], [77.6798, 76.2532, 54.3262, 126.1568, 316.5202, 95.202, 35.9573, 170.8808, 84.5664, 78.1239, 369.9994, 47.5623, 0.0, 76.589, 47.1271], [59.3993, 48.9283, 272.9267, 650.049, 154.1808, 59.4877, 0.0, 143.9984, 120.4624, 305.2037, 24.4197, 0.0, 0.0, 147.2231, 66.0999], [23.8194, 51.8832, 74.784, 48.043, 80.8283, 103.9974, 854.1936, 120.1377, 40.1676, 40.2815, 0.0, 100.4749, 187.7594, 95.7283, 30.4763, 18.6369, 68.1536, 34.9619, 280.705, 40.1706, 0.0], [42.2307, 25.0312, 27.0, 59.3085, 0.0, 53.1371, 84.7501, 889.9956, 235.1352, 40.2798, 38.1685, 19.2175, 78.848, 279.7124, 42.3223, 66.8115, 147.223, 47.8768, 29.7468, 375.7234, 29.6055, 48.316, 12.0032, 126.2334, 42.1806], [21.2106, 22.7977, 24.8544, 90.06, 45.7975, 54.6733, 116.1046, 968.76, 240.0363, 66.759, 19.7048, 38.9642, 57.3338, 383.2259, 44.8301, 12.1433, 152.5843, 82.064, 36.1627, 409.8384, 33.3594], [57.1962, 28.3219, 23.1696, 74.328, 36.3814, 58.5335, 119.9074, 1059.7392, 267.7696, 52.3226, 17.7962, 92.4211, 311.4707, 59.8457, 57.8813, 154.1161, 70.4352, 45.152, 394.2691, 59.3271, 55.1078, 12.7968, 145.0416, 75.4169], [45.7341, 19.8752, 25.1568, 127.395, 47.6279, 111.2374, 182.3835, 1873.4976, 350.4913, 109.3202, 0.0, 172.9587, 681.8073, 68.2668], [103.4634, 67.0151, 55.1952, 76.038, 48.628, 27.6912, 124.8745, 2117.3724, 360.6522, 121.3256, 0.0, 1.8144, 152.6272, 404.8854, 98.6386, 176.7622, 275.9793, 147.1632, 151.2385, 629.1821, 128.871, 103.7492], [97.7514, 33.1452, 53.7408, 107.673, 68.951, 85.2006, 151.1843, 1449.7704, 443.1348, 63.8792, 158.5771, 35.2296, 243.4714, 410.5992, 114.2424, 73.143, 425.5851, 111.3568, 86.5641, 723.0557, 67.725, 100.3736, 34.7994, 209.4259, 65.3545], [136.1741, 152.3016, 89.8704, 164.9865, 92.312, 67.3175, 313.8548, 1614.8808, 672.4125, 66.8712, 90.4071, 16.5262, 196.1626, 436.9094, 6.2843, 390.2686, 124.2, 72.9431, 1065.5798, 134.1342, 135.6751, 57.159, 259.0113, 81.1087], [167.4758, 71.7671, 139.7232, 179.892, 165.5276, 113.4038, 251.9221, 2662.4052, 430.8222, 137.819, 91.7487, 16.2389, 229.335, 877.5395, 194.0573, 208.1363, 409.5863, 213.256, 271.9411, 1332.5472, 188.856, 166.2996, 94.3987, 177.3517, 170.4164]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

