created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Il Kurai Il", "Belvyn Brightblade", "Newtype Khan", "Aira Draugr", "Irin The Undeath", "Melli Dragonswrath", "Ateriuz", "Sister Elonith", "Johosh The Mighty", "Scarlet Merc\u00fcry", "Tribal Z", "Colera Piadosa", "Xanvias Einzbern", "Gabe Malhorn", "Mistwalker Cael", "No Reserv\u00e9", "Ryvalia Fazebringer", "Sub Train", "Sygaldry Verdandi", "Crusader Siolith", "Solus Sanctus", "Tika Fiery", "Bella Sassy", "Koralia Danai"];
const professions = ["Scourge", "Firebrand", "Spellbreaker", "Herald", "Scourge", "Berserker", "Berserker", "Berserker", "Berserker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.1413, 0.0, 0.793, 2.9606, 1.0976, 0.0, 0.9609, 3.3516, 0.0, 0.6336, 0.5107, 0.0, 0.0, 8.0625, 0.7007, 0.3822, 0.4608, 0.4608, 0.4978, 1.3706, 0.0, 0.8695], [4.7109, 0.0, 0.0, 0.0, 2.5872, 0.0, 1.5582, 4.4982, 0.0, 1.4256, 0.5645, 0.0, 0.7992, 9.3355, 0.0, 2.6938, 2.3716, 0.0764], [6.8522, 0.0, 0.0, 0.0, 5.88, 0.0, 1.8439, 3.528, 0.0, 1.489, 1.4246, 0.0, 0.0, 4.6677, 0.0, 1.0248, 1.2936, 0.0, 1.0368, 0.0, 1.5518, 1.1356, 1.0086], [13.7043, 0.0, 0.0, 10.6737, 5.9584, 3.4517, 2.4931, 0.0], [12.6337, 1.982, 0.0, 0.0, 2.9792, 0.0, 2.0257, 5.3802, 0.0, 1.0454, 0.0538, 0.0, 0.0, 4.2434, 0.5194, 0.2928, 0.3058, 1.1328, 0.48, 0.6442, 1.4881, 0.0, 1.7738], [5.7815, 0.0, 2.571, 0.3136, 1.8605, 1.2206, 4.851, 0.0, 1.0454, 1.7472, 1.5686, 1.1232, 8.9111, 0.8248, 1.4933, 1.1319, 0.9173, 1.2096, 1.1712, 0.0, 2.1538, 0.0, 1.1477], [1.1686, 3.0576, 0.0, 1.6361, 3.969, 1.518, 1.7741, 3.2525, 1.2797, 0.2592, 10.1842, 1.9857, 3.0158, 1.0241, 0.9173, 0.816, 1.2096, 1.1126, 1.9972, 0.624, 0.9391], [8.5652, 0.0, 0.0, 0.0, 3.7632, 0.0, 1.1167, 3.969, 0.0, 1.1405, 1.8278, 1.2178, 2.268, 7.8503, 1.7413, 0.732, 1.9404, 0.9937, 1.7472, 0.0, 0.7906, 1.1356, 0.0, 1.113], [8.5652, 0.0, 0.0, 3.0385, 3.0576, 1.4198, 1.1686, 5.292, 0.1316, 2.1542, 1.7203, 1.6099, 1.8144, 9.1233, 0.1222, 0.4099, 1.7787, 2.8283, 0.72, 1.5168, 1.9618, 0.235, 0.364, 0.8695], [27.6228, 0.9009, 0.0, 5.2979, 17.64], [15.4174, 0.0, 2.9606, 5.6448, 0.0, 0.831, 3.969, 0.0, 0.6019, 1.7203, 0.6192, 0.9936, 11.6693, 0.2444, 1.1712, 0.9163, 2.1403, 0.384, 0.7296, 0.1464, 2.702, 0.0, 1.8433], [1.4443, 2.9865, 1.0584, 0.253, 5.5123, 4.6771, 3.1166, 2.6352, 29.916, 5.2851], [13.2761, 0.0, 0.0, 0.0, 5.2528, 0.0, 0.5973, 4.6746, 1.3358, 1.6474, 2.3923, 0.8669, 1.2096, 10.8207, 2.2913, 2.2546, 1.9404, 2.599, 0.8352, 1.1328, 0.8491, 1.6056, 2.5042], [17.8223, 4.9491, 8.3448, 7.1148, 8.1791, 3.0624, 3.0528, 4.5384, 0.7124, 4.0693], [17.5587, 0.0139, 0.0, 0.0, 7.6048, 0.0, 4.1552, 0.0882, 0.0, 2.2176, 1.5322, 1.775, 0.0, 21.217, 0.9471, 1.3469, 3.0184, 2.599, 0.9216, 0.7104, 1.1419, 1.1748, 0.0, 3.1998], [9.6358, 1.5662, 0.0, 0.0, 13.2496, 2.9621, 0.0, 5.6448, 0.0, 3.8016, 2.7149, 2.9722, 2.7648, 16.3371, 1.833, 3.0158, 3.5574, 1.4524, 0.0, 0.1344, 0.2635, 0.3478], [14.5608, 3.8947, 0.0, 0.0, 10.2704, 1.7136, 1.4803, 8.2908, 0.0, 2.5661, 3.6557, 2.5181, 0.0, 34.3715, 1.833, 1.8739, 4.7971, 5.1215, 1.008, 1.8432, 0.0, 2.5062, 0.6344, 4.0693], [16.9163, 0.0, 0.0, 10.1136, 0.0, 5.22, 12.6126, 3.8355, 5.0371, 2.3117, 2.064, 2.8296, 24.3996, 5.1019, 3.4843, 5.4978, 6.1152, 1.5264, 1.6128, 2.5474, 4.1118, 3.7562], [14.1326, 0.0, 0.0, 0.3116, 22.8144, 0.049, 5.168, 14.9058, 0.0, 10.0109, 3.36, 7.1414, 0.0, 29.4916, 6.9043, 7.32, 5.1205, 7.0325, 4.6944, 3.8208, 2.3717, 5.4041, 0.2756, 3.4084], [27.6228, 0.0, 0.0, 0.0, 16.856, 3.5251, 2.6749, 16.5816, 0.1923, 6.5261, 4.7309, 3.7358, 3.6288, 30.5525, 6.9654, 4.1285, 6.0907, 6.2681, 0.9504, 3.0912, 2.4302, 6.2264, 4.1388], [30.6206, 0.0, 0.0, 3.0385, 22.5792, 0.3917, 4.7006, 1.4112, 0.2935, 6.6845, 8.8973, 3.0547, 2.484, 35.6446, 6.4155, 9.6624, 8.7857, 9.2492, 3.6192, 1.3056, 3.7186, 7.6754, 0.0312, 7.6864], [37.2586, 0.0, 0.0, 2.1815, 14.896, 3.4027, 7.8689, 16.1406, 1.265, 0.1267, 4.3814, 3.6326, 3.9744, 36.0689, 4.2159, 4.3627, 6.7914, 9.7079, 1.5072, 2.1888, 4.8019, 9.79, 0.0728, 4.6257], [37.0445, 3.1739, 2.1638, 4.2851, 20.0704, 4.6022, 5.168, 16.5816, 2.9348, 6.3994, 6.5318, 4.2931, 4.7304, 32.8864, 5.8962, 5.7096, 9.163, 9.7843, 2.0928, 4.9344, 4.3334, 7.0488, 0.9152, 4.9388], [47.9651, 4.6431, 14.4134, 23.0496, 3.6475, 8.8298, 22.1382, 3.4813, 7.6032, 5.6986, 3.6946, 2.7432, 40.1001, 7.8819, 10.2187, 7.8694, 8.5613, 2.064, 3.2832, 4.597, 7.4404, 6.9212]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

