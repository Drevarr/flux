created: 20230626220846000
creator: Drevarr
modified: 20230705163539442
modifier: drevarr
tags: ChartData
title: 202306262208_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Specialist Zeff", "Zadey Starbolt", "Cyclotechnist Farra", "Ateriuz", "Cat Wigglebooty", "Gravlyn Isshtail", "Aira Draugr", "Tootsie Pop Rocks", "Ak\u00e1nt\u00f3r", "Legacy Of Mathus", "Latedoctor", "Arcanophage Farra", "Caelon Cai", "Bella Sassy", "My Birthday Girl", "Be\u00eb", "Zadie Miststep", "Shaca Booey", "Xanvias Einzbern", "Rozaalyna", "Solus Sanctus", "Arriasa", "Tika Fiery", "Sygaldry Verdandi", "Cyr", "Newtype Khan", "Ateriuz", "Tegan Parker", "Black Raspberry Pie", "Gavann", "Regis Hawkesburne", "Primal Clone", "Smol Gluvs", "Blancooo Padreee", "Artakama Nahid", "Rahani Sunray", "Koralia Danai", "Lord Erin The Wise", "Zaylen Harker", "No Reserv\u00e9", "Mistwalker Cael", "Crusader Siolith", "Mike The Archmagus", "Drevarr Moonwillow", "\u00c1rkantor", "Johosh The Mighty", "Sub Train", "Eibh\u00ebar", "Grasszanine", "Ryvalia Fazebringer"];
const professions = ["Scrapper", "Scrapper", "Scrapper", "Berserker", "Scrapper", "Spellbreaker", "Herald", "Scrapper", "Druid", "Berserker", "Reaper", "Spellbreaker", "Reaper", "Firebrand", "Scrapper", "Reaper", "Tempest", "Berserker", "Berserker", "Reaper", "Firebrand", "Druid", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Berserker", "Chronomancer", "Reaper", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Weaver", "Scrapper", "Vindicator", "Berserker", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 23, 0, 28, 0, 9, 12, 0, 2, 14], [24, 9, 11, 34, 8, 7, 0, 0, 3, 4], [5, 4, 12, 41, 0, 8, 7, 0, 0, 24], [45, 0, 3, 16, 12, 3, 0, 16, 2, 3, 2], [9, 0, 5, 0, 2, 4, 0, 2, 2, 0, 3, 15, 2, 9, 11, 7, 23, 6, 3], [69, 0, 19, 2, 7, 18], [25, 0, 26, 20, 21, 29], [5, 25, 7, 8, 3, 40, 4, 0, 12, 22], [42, 0, 17, 1, 8, 29, 5, 3, 23, 5], [19, 0, 29, 0, 5, 8, 0, 15, 3, 3, 29, 0, 20, 1, 0, 5, 6], [0, 23, 2, 16, 0, 0, 13, 2, 17, 23, 7, 10, 7, 8, 10, 1, 0, 1, 5], [96, 0, 6, 2, 0, 10, 4, 12, 7, 11], [37, 0, 25, 13, 6, 28, 4, 3, 0, 37], [11, 0, 5, 1, 8, 5, 0, 4, 2, 9, 27, 6, 7, 32, 25, 8, 4, 0, 0, 0], [0, 20, 15, 12, 12, 0, 2, 0, 8, 21, 12, 8, 19, 3, 21, 0, 0, 4, 3], [10, 0, 9, 29, 13, 0, 0, 4, 2, 14, 12, 11, 3, 20, 12, 8, 2, 0, 4, 9], [8, 0, 35, 7, 66, 4, 1, 24, 4, 15], [46, 15, 15, 5, 12, 5, 2, 8, 14, 14, 4, 26], [20, 0, 0, 7, 16, 15, 0, 10, 4, 16, 6, 38, 6, 17, 3, 4, 3, 0, 0, 5], [41, 0, 4, 4, 3, 17, 7, 4, 3, 23, 28, 3, 5, 32, 9, 1, 2, 0, 1], [39, 0, 10, 3, 20, 16, 2, 4, 2, 14, 17, 3, 0, 29, 5, 5, 7, 0, 0, 11], [12, 0, 22, 12, 18, 2, 9, 5, 39, 10, 25, 3, 23, 1, 4, 1, 0, 0, 8], [6, 0, 26, 9, 11, 13, 4, 15, 0, 1, 7, 18, 6, 24, 9, 24, 14, 0, 7, 6], [22, 0, 11, 11, 7, 10, 2, 13, 0, 23, 16, 5, 4, 44, 0, 32, 6, 0, 0, 4], [5, 57, 4, 42, 5, 10, 27, 34, 6, 0, 14, 8], [65, 3, 2, 0, 39, 7, 2, 1, 4, 29, 1, 13, 9, 14, 9, 4, 1, 10, 11], [11, 14, 73, 55, 24, 13, 16, 18], [16, 7, 4, 19, 0, 19, 10, 26, 2, 90, 0, 23, 6, 0, 6, 7], [34, 0, 10, 9, 13, 1, 34, 7, 18, 3, 0, 20, 5, 45, 27, 9, 13, 0, 8, 0], [78, 18, 7, 3, 11, 3, 0, 2, 21, 24, 15, 14, 12, 23, 12, 0, 3, 10], [39, 0, 11, 11, 4, 29, 4, 17, 11, 13, 13, 9, 11, 30, 13, 3, 15, 0, 13, 19], [23, 0, 0, 2, 8, 16, 9, 7, 18, 35, 4, 23, 13, 51, 34, 7, 4, 0, 9, 10], [83, 0, 0, 3, 3, 16, 16, 2, 3, 25, 38, 8, 41, 5, 12, 6, 1, 2, 17], [53, 0, 3, 32, 1, 14, 0, 14, 10, 28, 13, 23, 1, 10, 22, 17, 7, 0, 10, 24], [3, 0, 2, 19, 21, 3, 12, 22, 14, 16, 11, 60, 4, 25, 34, 32, 5, 0, 4, 10], [0, 8, 8, 16, 4, 26, 17, 54, 11, 27, 23, 17, 34, 2, 17, 24, 0, 1, 16], [32, 0, 33, 14, 4, 16, 4, 2, 16, 29, 40, 22, 6, 10, 25, 26, 10, 0, 6, 11], [40, 0, 5, 0, 3, 55, 4, 22, 7, 7, 8, 31, 10, 0, 45, 21, 16, 0, 19, 17], [41, 13, 18, 24, 9, 3, 3, 5, 25, 49, 29, 17, 49, 4, 13, 3, 3, 0, 9], [0, 15, 40, 19, 21, 2, 23, 7, 62, 4, 18, 10, 52, 14, 4, 14, 1, 20, 6], [43, 49, 30, 54, 47, 52, 11, 0, 46, 22], [54, 0, 33, 21, 9, 16, 6, 9, 18, 12, 27, 22, 12, 52, 12, 28, 4, 1, 10, 12], [0, 35, 26, 0, 16, 41, 11, 32, 2, 54, 50, 2, 15, 9, 0, 20, 54], [15, 1, 10, 26, 36, 20, 4, 8, 7, 28, 25, 22, 21, 48, 18, 39, 30, 0, 5, 9], [101, 52, 31, 77, 15, 46, 18, 2, 17, 14], [46, 0, 2, 19, 32, 9, 6, 9, 14, 4, 42, 27, 15, 41, 12, 26, 33, 3, 10, 33], [54, 0, 15, 12, 28, 32, 10, 3, 8, 11, 50, 22, 10, 48, 11, 49, 4, 0, 12, 32], [48, 0, 18, 23, 8, 6, 33, 8, 24, 12, 80, 32, 6, 106, 10, 22, 10, 0, 16, 21], [63, 0, 33, 12, 17, 40, 32, 6, 16, 26, 39, 61, 34, 68, 53, 40, 3, 0, 1, 21], [23, 3, 33, 29, 27, 41, 7, 0, 41, 33, 47, 43, 40, 170, 18, 73, 52, 1, 41, 53]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

