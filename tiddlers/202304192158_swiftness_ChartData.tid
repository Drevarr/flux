created: 20230419215809000
creator: Drevarr
modified: 20230705163526071
modifier: drevarr
tags: ChartData
title: 202304192158_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Elonith Requiem", "Anita Strips", "Mac Chiato", "Jupi Jupi Jupi", "Skye Nightroad", "Grasszanine", "Be\u00eb", "Newtype Khan", "Corlyss Velaryonn", "Abigail Ryn", "Tegan Parker", "Eibh\u00ebar", "Smol Gluvs", "Venomina The Siren", "Gabe Malhorn", "Sygaldry Verdandi", "Zadie Miststep", "Ark Darkness", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Arcanophage Farra", "Miphest\u00f6", "Solus Sanctus", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Weaver", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Scrapper", "Spellbreaker", "Scourge", "Spellbreaker", "Vindicator", "Tempest", "Tempest", "Chronomancer", "Scourge", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 95.3093, 0.0, 187.3373, 0.0, 31.2032, 18.6435, 4.5312, 25.4524, 63.2624, 20.241, 89.8032, 37.7824, 78.5568, 23.6768, 74.921, 67.4122, 135.049, 16.3834, 0.0, 0.0], [10.1665, 126.4705, 70.4816, 0.0, 0.0, 93.4915, 35.1208, 76.32, 117.2589, 45.8304, 153.5293, 120.4126, 57.181, 24.0768, 0.0, 18.503, 30.7402], [0.0, 0.0, 54.3629, 3.8006, 484.7856, 63.4756, 42.8069, 17.052, 0.0, 0.0, 9.8862, 0.0, 8.5224, 78.6178, 41.2608, 43.2102, 30.723, 47.4046, 0.0, 71.6869, 134.5215, 0.0], [29.2114, 100.5365, 34.3123, 329.4845, 14.8588, 93.6096, 20.2919, 0.0, 0.0, 35.1722, 0.0, 16.2816, 138.2491, 75.8688, 42.5442, 39.7782, 102.0846, 76.0608, 0.0, 9.7121, 0.0], [0.0, 20.7261, 257.1782, 0.0, 239.7408, 65.7565, 29.1555, 22.0539, 14.8397, 0.7129, 0.0, 87.132, 126.132, 180.096, 47.6496, 68.453, 9.2081, 4.9248, 0.0, 0.0, 2.2493], [0.0, 29.9693, 0.0, 0.0, 0.0, 0.0, 79.917, 0.0, 109.8418, 45.614, 234.4296, 85.7736, 41.3952, 150.5696, 95.5108, 85.4305, 113.7629, 51.6424, 45.0862, 11.5531], [2.9008, 68.7619, 105.9379, 16.5168, 178.8509, 63.9318, 93.5121, 45.3583, 0.0, 33.9364, 61.8125, 36.252, 146.2635, 100.0608, 51.2751, 44.6292, 126.3553, 0.0, 0.0, 60.4044, 0.0], [0.0, 111.5136, 19.0032, 67.8912, 79.0512, 131.931, 147.2156, 0.0, 0.0, 47.1973, 0.0, 212.0424, 35.0155, 33.6, 67.4789, 145.8534, 80.5423, 40.7664, 0.0, 6.3431, 24.5035], [56.1537, 322.1698, 0.0, 263.5027, 207.3709, 46.8048, 62.9219, 0.0, 0.0, 34.5068, 1.2615, 0.0, 108.4812, 8.1984, 51.423, 118.7956, 0.0, 0.0, 31.4819, 0.0, 56.232], [9.2347, 80.7725, 342.8506, 78.3995, 38.9065, 29.2158, 110.5046, 27.5971, 73.9567, 42.2022, 76.7016, 85.1057, 18.4128, 53.6427, 159.1128, 55.9874, 82.08, 0.0, 28.1098, 0.0], [10.7951, 43.3697, 263.2766, 12.5741, 173.9712, 48.1606, 31.3982, 84.9758, 0.0, 48.605, 21.7687, 15.9692, 164.5968, 115.0645, 17.5392, 76.9496, 79.5564, 23.1907, 69.2755, 0.0, 15.6604, 89.5622], [0.0, 86.7715, 74.1658, 215.3424, 29.5872, 67.3794, 90.2051, 0.0, 37.9848, 55.2774, 4.4438, 233.412, 63.5431, 18.816, 129.7785, 91.8456, 136.9276, 70.4794, 30.926, 0.0], [254.1299, 330.0106, 28.9843, 0.0, 32.9108, 313.6897, 41.6637, 0.0, 0.0, 17.5861, 10.1778, 44.3928, 268.2929, 9.408, 91.8956, 7.546, 11.3112, 13.4611, 0.0, 0.0, 0.0], [0.0, 22.5638, 290.1096, 146.4134, 120.719, 94.4313, 98.5826, 14.4374, 0.0, 0.0, 108.0357, 19.8683, 165.8688, 229.1748, 36.0192, 83.9787, 76.1068, 12.1069, 23.1466, 0.0, 16.2394, 18.8803], [20.6941, 186.2626, 72.0346, 402.8918, 214.8003, 47.2924, 106.0634, 0.0, 40.8283, 51.5487, 229.8504, 107.9087, 33.8688, 106.6196, 182.8288, 15.0058, 106.321, 9.9112, 21.2139, 113.3501], [20.0688, 544.6147, 199.2899, 189.7545, 64.7408, 96.8544, 139.8333, 133.5449, 159.5088, 220.8741, 29.232, 209.0957, 94.2172, 168.5874, 117.4291, 0.0, 148.4185, 79.3042], [7.6353, 6.8874, 255.4358, 67.417, 824.8781, 10.362, 83.8586, 110.0991, 46.2182, 37.5197, 78.2819, 21.1011, 420.396, 114.1104, 151.2672, 46.9097, 381.5042, 79.1213, 60.4109, 4.6754, 45.481, 145.249], [34.9802, 503.7278, 89.5104, 515.761, 263.352, 176.1031, 156.0258, 0.0, 0.0, 127.618, 109.5481, 270.8088, 79.4765, 58.8, 153.6032, 200.508, 127.8332, 152.6688, 0.0, 52.8769, 145.1126], [0.0, 465.2208, 125.7408, 593.1994, 93.91, 406.3242, 0.0, 0.0, 6.3179, 233.3248, 30.8776, 168.1584, 324.5848, 168.6048, 300.5474, 251.174, 260.1567], [0.0, 0.0, 816.6629, 162.9302, 423.8957, 477.8916, 17.1618, 121.8081, 41.857, 0.0, 97.1513, 65.6543, 250.4568, 51.2352, 200.1888, 442.3862, 162.0234, 42.8005, 12.5309, 0.0, 39.2168, 115.0882], [7.366, 25.0726, 386.8128, 123.0768, 770.1408, 282.512, 221.9328, 166.598, 73.3488, 0.0, 131.8007, 54.0716, 493.2816, 143.8783, 76.6752, 270.4334, 174.3126, 69.9132, 157.2106, 31.2018, 48.9552, 51.3245], [23.2189, 453.3725, 144.4243, 606.3533, 232.6569, 258.7915, 164.6086, 120.6998, 44.8066, 154.7101, 34.576, 432.48, 284.9897, 82.7232, 103.1421, 258.3966, 0.0, 201.1507, 86.3411, 118.5716, 127.9704], [19.8152, 450.0619, 99.1718, 630.9638, 231.2883, 256.9389, 206.6702, 0.0, 5.9949, 198.818, 102.396, 503.7648, 190.176, 347.531, 257.7498, 364.0602, 41.1494, 28.3618, 53.5612, 65.6381], [50.9505, 62.2261, 614.7187, 230.5248, 1190.2176, 114.8947, 149.7754, 229.0084, 113.2234, 134.691, 171.7734, 87.1855, 249.1848, 147.8855, 362.8128, 183.7912, 318.4412, 43.0847, 217.6214, 48.5512, 32.0314, 18.6758], [101.3452, 819.1022, 111.5328, 1267.656, 227.6388, 399.791, 170.5768, 0.0, 144.7764, 123.5677, 476.7456, 94.8375, 309.1872, 103.29, 295.2642, 204.965, 169.5773, 0.0, 13.3706, 146.7144], [1.7819, 57.7997, 828.1627, 202.393, 1181.519, 322.005, 313.4946, 180.0691, 75.7843, 175.6233, 321.8781, 599.4936, 276.7844, 143.472, 224.8556, 502.9948, 232.3619, 377.2944, 43.6825, 37.6639, 0.0], [92.2765, 115.9509, 1017.3874, 379.0694, 1642.7549, 312.6205, 458.3945, 52.918, 685.8538, 457.9991, 340.7429, 836.4672, 340.0412, 423.2256, 284.7875, 820.7892, 282.1538, 436.5014, 81.0184, 98.0157, 235.3906]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

