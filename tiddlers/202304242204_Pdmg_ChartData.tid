created: 20230424220408000
creator: Drevarr
modified: 20230705163526622
modifier: drevarr
tags: ChartData
title: 202304242204_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Sumatra Satyricon", "Newtype Khan", "Blancooo Padreee", "Seren Nightroad", "Grasszanine", "Solo Bloodborn", "Smol Gluvs", "Cedryn X", "Panther B Me", "Rina Of Theros", "Tootsie Pop Rocks", "Leana Deeb", "Kmpek", "Inedible Plant", "Daddys Lil Orchid", "Cyclotechnist Farra", "Sp\u00edcy Cheese", "Etch\u00e9ry", "Smol Bee", "Lord Erin The Wise", "Arka\u00f1tor", "Xyntharos", "Mike The Archmagus", "Mistwalker Caelon", "Xanvias Tsoli"];
const professions = ["Chronomancer", "Soulbeast", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Berserker", "Scourge", "Scourge", "Scrapper", "Weaver", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Berserker", "Berserker", "Vindicator", "Weaver", "Scrapper", "Vindicator", "Weaver", "Vindicator", "Holosmith"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[97.3623, 41.18, 398.2424, 394.3711, 523.2321, 564.5172, 161.6207, 546.1719, 372.7183, 516.7467, 559.7556, 365.1325, 356.784], [171.9834, 96.76, 550.3636, 352.0928, 292.0172, 491.1875, 462.8873, 231.9067, 493.3444, 488.8072, 570.312], [98.3727, 109.62, 780.0758, 549.8454, 442.5357, 161.6552, 90.2586, 794.4688, 276.831, 746.2133, 366.8222, 441.8193, 473.72], [96.1863, 61.3, 447.6364, 644.4639, 995.2321, 248.4138, 330.1034, 946.1719, 503.8592, 710.9067, 98.9111, 477.6386, 387.896], [117.5756, 207.24, 1815.7576, 861.0928, 2074.1786, 805.6207, 314.7759, 1312.4219], [232.6066, 80.8, 634.3485, 623.9485, 613.5893, 766.8276, 320.4138, 903.0469, 422.493, 802.2267, 643.1333, 786.1687, 868.152], [142.2981, 147.4, 675.7879, 860.9175, 2003.5714, 526.6552, 167.1552, 745.1562, 594.7887, 881.5867, 866.2333, 520.9277, 821.96], [113.3499, 214.74, 1286.0909, 974.6907, 1440.2143, 298.8966, 425.7759, 1162.8438, 741.9014, 987.8667, 979.4778, 686.241, 597.48], [1409.6289, 3666.3214, 327.7241, 205.2586, 3125.7344, 680.8028, 1382.5467, 1852.0889, 2068.7349, 1298.16], [323.3872, 283.36, 1337.1818, 1373.5155, 2382.7143, 366.3793, 340.8966, 2269.3438, 818.9859, 1619.1067, 1339.9778, 1200.2048, 1131.424], [181.4513, 278.62, 1967.2576, 1618.4536, 2235.5536, 1390.3793, 593.5172, 2137.6094, 1084.2113, 1689.84, 1762.3444, 1533.8434, 884.632], [266.7329, 137.52, 1584.1212, 937.0206, 1793.3393, 990.8621, 620.931, 1988.2969, 1636.8732, 2984.5867, 1087.2, 1844.6024, 1991.696], [147.8716, 355.22, 2018.8485, 2411.7526, 4596.4643, 778.7586, 777.0, 2332.2188, 927.8873, 3138.64, 1485.9556, 1900.9036, 2514.544], [3104.7629, 4453.4286, 582.6552, 1838.2931, 4278.9062, 1331.7746, 2312.2533, 2450.4444, 2549.9518, 1938.688], [399.0228, 437.96, 2694.8939, 1888.6495, 3666.2679, 999.1034, 1139.5172, 3033.8906, 650.0986, 4377.3333, 2891.1333, 2368.3133, 107.664], [406.4907, 543.7, 2653.4227, 4378.8929, 1005.7586, 1206.3276, 4307.8125, 853.9577, 2843.0933, 2625.9333, 1457.9518, 1697.688], [515.2609, 272.92, 3062.4545, 2306.1031, 3116.6071, 2583.8621, 3062.7969, 1604.2535, 2629.36, 2081.9111, 1910.012, 1820.28], [362.0476, 200.48, 2576.6667, 2209.3918, 4476.9107, 841.9655, 1273.0172, 4798.3281, 936.3944, 3942.92, 2865.8111, 2063.632], [780.2008, 0.0, 3188.7121, 2780.6804, 3477.0357, 1843.1034, 2094.931, 959.507, 2892.9067, 1190.2111, 2988.4578, 2268.944], [471.6605, 179.46, 3339.5758, 2151.0825, 3804.0179, 203.6552, 1903.0862, 4408.9219, 1000.2817, 4589.6533, 2802.8333, 3163.494, 82.392], [462.089, 188.12, 2820.1061, 2433.2784, 5200.4286, 150.1724, 1749.5, 5026.7812, 568.0845, 3759.6667, 2800.3889, 3453.6145], [491.5052, 714.78, 2868.1061, 1782.0103, 4029.2679, 2459.7241, 1544.2414, 3829.8438, 800.2958, 3926.1333, 2864.0778, 4456.2289, 2228.616], [644.7598, 129.7, 1709.8182, 3947.7835, 5924.0, 1734.3793, 2479.9828, 2625.5469, 1372.1408, 4309.6533, 2658.0, 2859.9277, 2342.36], [772.3789, 282.54, 2984.0, 4333.3299, 5225.8929, 765.6207, 2214.2069, 6265.0469, 1598.7183, 4380.24, 4198.9778, 2626.0, 3013.384], [761.9193, 654.2, 3892.4091, 3843.1649, 7558.6964, 1204.3103, 2294.7414, 4674.5469, 1266.5352, 4728.9467, 2317.7111, 4334.8795, 3067.64], [541.7888, 1485.72, 5171.9091, 3975.9175, 3695.9107, 2351.2414, 1740.3966, 3757.3125, 2200.2113, 5057.8933, 2669.9333, 4707.6024, 4748.264]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

