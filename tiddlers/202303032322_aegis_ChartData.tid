created: 20230303232222000
creator: Drevarr
modified: 20230705163520996
modifier: drevarr
tags: ChartData
title: 202303032322_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Hud Da Bu Dah", "Air One Com", "Blanco Padre Guard", "Jupi Jupi Jupi", "Aronorf Xideliesi", "Drevarr Moonwillow", "Viral Marketing", "Kahless The Drunk", "Koralia Danai", "Ravioli Fetabringer", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 101.2788, 0.0, 161.5268, 13.9104, 0.0, 248.0832, 0.0, 16.236, 76.7657], [22.7542, 103.275, 0.0, 157.9115, 0.0, 161.2688, 34.5442, 9.4821, 0.0, 306.1958, 0.0, 12.7512, 80.425], [0.0, 82.62, 0.0, 0.0, 15.9228, 95.7726, 0.0, 18.3084, 5.1084, 60.8454, 3.8923, 17.1112, 112.3616, 20.8916, 0.0, 0.0, 56.9802, 0.0, 156.3662, 39.8765, 0.0, 0.0, 155.9866, 15.3252, 51.1632, 52.9803], [8.8114, 370.6884, 35.317, 0.0, 0.1558, 28.6671, 210.9064, 0.0, 23.0136, 335.756, 32.6074, 44.5575, 71.9212], [12.5514, 129.0249, 0.0, 13.6896, 14.7075, 6.9993, 50.4596, 0.0, 0.0, 187.6988, 0.3672, 0.2925, 133.152, 6.9972, 0.0, 27.5028, 45.3409, 0.0, 237.3876, 39.1037, 0.0, 0.0, 336.1018, 18.8082, 80.0712, 118.3704], [31.5955, 59.7618, 0.1464, 5.3469, 8.1172, 0.0, 15.0419, 7.6152, 35.604, 195.9959, 18.972, 49.335, 247.1488, 50.2299, 0.0, 32.3424, 91.0293, 0.0, 186.2977, 54.5597, 17.7969, 0.0, 382.9997, 5.418, 19.9584, 29.8313], [92.4693, 0.0, 32.6268, 17.6472, 279.7045, 41.1264, 36.0262, 298.3072, 38.7845, 0.0, 33.2805, 138.4548, 0.0, 290.0257, 74.4979, 0.0, 0.0, 385.7184, 56.502, 51.084, 3.0229], [38.7763, 190.9899, 9.4095, 0.0, 16.1876, 20.3742, 30.7238, 16.53, 39.732, 323.0338, 53.905, 44.9963, 129.1808, 18.3926, 12.1696, 22.7698, 220.277, 314.2805, 106.1827, 13.3676, 0.0, 333.7229, 114.7068, 98.2872, 55.4464], [61.1864, 273.3345, 0.0, 0.0, 8.756, 16.8168, 159.9667, 21.0444, 48.8136, 451.1779, 30.7958, 132.1612, 593.1104, 154.3882, 38.6974, 53.3853, 331.1103, 0.0, 14.9657, 247.68, 246.7872, 185.0333], [29.4862, 217.0152, 0.0, 13.5606, 59.4533, 15.1074, 128.016, 25.2396, 59.9592, 281.7326, 136.4515, 124.2637, 553.632, 74.6701, 11.6678, 29.5069, 284.5534, 0.0, 429.878, 118.7021, 26.1437, 110.0232, 1163.952, 106.038, 246.312, 207.6255], [23.3974, 310.1004, 78.7262, 39.2038, 34.9459, 61.1919, 225.9482, 39.0108, 168.0096, 566.231, 94.8355, 181.935, 650.3424, 135.1959, 42.977, 66.3905, 478.0774, 623.1425, 230.9126, 34.6343, 76.6332, 1007.2858, 311.2254, 219.4632, 250.8211]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

