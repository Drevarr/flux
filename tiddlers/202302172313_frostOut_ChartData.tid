created: 20230217231312000
creator: Drevarr
modified: 20230705163519463
modifier: drevarr
tags: ChartData
title: 202302172313_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Sproxz", "Abigail Ryn", "Mac Aaroni", "Venomina The Siren", "Tegan Parker", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.096, 20.137, 52.7933, 0.0, 54.0212, 39.606, 25.051, 36.2896], [56.1715, 0.0, 31.066, 90.2541, 87.7257, 11.8683, 16.1971, 17.6746, 19.8912, 182.6698, 49.7128, 69.888, 11.9616, 68.5579, 96.7504, 0.0, 54.8525], [68.9227, 77.5109, 67.0908, 231.3741, 150.5221, 14.699, 76.4165, 67.6138, 67.799, 288.4627, 139.6389, 19.926, 44.574, 57.9642, 127.4696, 63.822], [64.319, 31.0262, 19.698, 186.592, 148.4935, 58.3027, 67.3603, 92.3141, 0.0, 146.1533, 40.7377, 0.0, 106.0224, 82.2259, 190.9109, 146.3712, 157.0589, 0.0, 64.5178, 48.5208, 11.8737, 55.2422, 15.801, 0.0, 56.3492, 90.86], [82.535, 60.192, 56.252, 207.5405, 138.08, 39.5263, 10.2816, 56.8781, 239.4538, 44.9922, 19.9555, 121.344, 73.4093, 163.5101, 158.4276, 0.0, 83.6654, 19.968, 46.3459, 71.7048, 39.7449, 51.5151, 33.3385, 57.6558, 34.3749, 104.786], [76.6066, 60.0826, 54.9388, 239.2768, 85.4717, 36.2022, 16.6622, 0.0, 34.0517, 16.6656, 163.0138, 33.919, 0.0, 123.7248, 63.1949, 367.3944, 256.4734, 163.4275, 123.216, 46.103, 87.0062, 38.0029, 81.9315, 19.688, 98.0458, 117.2575, 25.85]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

