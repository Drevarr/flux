created: 20230212214943000
creator: Drevarr
modified: 20230705163519096
modifier: drevarr
tags: ChartData
title: 202302122149_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Sizklea", "Primal Shield", "Superproxy", "Blanco Padre Guard", "Harry Callahann", "Sumatra Satyricon", "Kosa\u00edr", "Sygaldry Verdandi", "Bella Sassy", "Gangsta Mech", "Joh Oshi", "Shade Ilia", "Hyde En Sikh", "Koralia Danai", "Arka\u00f1", "Daring Deathblade", "Be\u00eb", "Ark Darkness", "Legionstorm", "Rina Of Theros", "Tootsie Pop Bringer", "Zadie Miststep", "Minka Bringer", "Morv\u00e4rth", "Ez Mode Mathus", "Smol Gluvs", "Newtype Khan", "Whose Guardian", "High Sorcer Baradun", "Reverve Mk V", "Venomina The Fierce", "Zaylen Harker", "Veggie Mac", "Tegan Parker", "Lord Erin The Wise", "Xanvias Tseli", "Bambiae", "Ace Hammers"];
const professions = ["Reaper", "Dragonhunter", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Soulbeast", "Scrapper", "Firebrand", "Firebrand", "Engineer", "Druid", "Soulbeast", "Chronomancer", "Firebrand", "Chronomancer", "Scourge", "Scourge", "Firebrand", "Soulbeast", "Scourge", "Scrapper", "Tempest", "Scrapper", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Willbender", "Tempest", "Herald", "Spellbreaker", "Firebrand", "Tempest", "Tempest", "Weaver", "Berserker", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 12], [0, 7, 5, 0, 14], [2, 10, 15, 1, 7, 0, 0, 0], [0, 0, 35], [0, 2, 22, 0, 7, 0, 1, 6], [0, 18, 13, 0, 4, 0, 0, 3], [2, 12, 4, 0, 10, 1, 0, 9], [3, 22, 0, 9, 1, 0, 5], [3, 12, 19, 2, 2, 0, 0, 3], [0, 17, 17, 0, 7, 0, 0, 2], [0, 0, 42, 0, 7], [0, 12, 16, 0, 21, 0, 0, 4], [0, 22, 21, 0, 12], [2, 10, 9, 12, 26, 0, 2, 0], [0, 37, 12, 1, 7, 0, 0, 5], [1, 16, 36, 2, 0, 1, 3, 5], [10, 18, 10, 1, 13, 2, 4, 6], [0, 11, 37, 0, 19, 0], [0, 14, 40, 0, 14], [0, 31, 10, 0, 11, 0, 0, 17], [0, 17, 42, 0, 10, 0, 0, 2], [23, 16, 3, 29, 0, 0, 4], [0, 15, 47, 0, 11, 1, 0, 2], [7, 9, 49, 11, 0, 0, 2], [7, 35, 37, 0, 9, 0, 0, 3], [25, 47, 0, 14, 6, 0, 4], [2, 22, 32, 1, 9, 6, 8, 17], [0, 19, 51, 0, 0, 0, 8, 21], [0, 19, 32, 2, 31, 1, 1, 13], [2, 32, 42, 22, 0, 0, 5], [3, 14, 54, 0, 3, 1, 13, 19], [1, 30, 63, 0, 7, 0, 1, 8], [0, 12, 65, 3, 32, 0, 1, 5], [0, 23, 56, 1, 25, 3, 1, 10], [0, 12, 81, 2, 24, 1, 3, 4], [2, 33, 44, 0, 13, 6, 4, 27], [4, 19, 73, 0, 12, 0, 1, 22], [8, 26, 63, 11, 22, 3, 0, 7], [7, 7, 95, 0, 39, 5, 2, 24]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

