created: 20230626011254000
creator: Drevarr
modified: 20230705163537769
modifier: drevarr
tags: ChartData
title: 202306260112_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Johosh The Mighty", "Newtype Khan", "Aira Draugr", "Eoooeee", "Blancooo Padreee", "Good Sir Ragnarok", "Arcanophage Farra", "Xanvias Einzbern", "Freyja Asgrimrkin", "Crusader Siolith", "Mistwalker Cael", "Sub Train", "Smol Daddy Tika", "Mmathuss", "Imalou", "Ryvalia Fazebringer", "Traidoruns Maximus", "Sygaldry Verdandi", "Yummy Kiwi", "Gestern Yesteryear", "Bella Sassy"];
const professions = ["Firebrand", "Berserker", "Spellbreaker", "Herald", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.1096, 0.0, 0.0, 5.016, 6.2404, 1.5624, 2.7739, 0.3293, 4.1548, 1.1012, 0.4752], [0.0, 0.0, 0.0, 3.52, 7.597, 1.1606, 0.0, 1.4994, 1.811, 0.9588, 1.2449, 0.7346, 0.077, 0.6031, 1.1785, 1.0488, 1.4246, 0.0, 0.0, 0.7906, 3.3826, 1.2096, 1.0433, 1.2784, 1.2672, 0.5667], [2.044, 0.0, 0.0, 1.584, 1.7636, 1.9195, 0.0, 3.5986, 1.811, 5.1136, 0.9576, 3.1007, 0.9127, 0.0, 1.2061, 1.7968, 0.0, 0.457, 0.0, 0.0, 1.991, 2.5891, 0.9504, 0.5216, 3.236, 0.0, 2.2264], [1.1388, 0.0, 1.4001, 5.016, 8.4109, 2.8123, 0.0, 3.2928, 16.2996, 0.0], [0.1739, 0.0, 6.16, 18.4498, 5.9818, 5.6977, 4.555], [2.2192, 0.0, 2.9137, 7.656, 9.9032, 0.0, 1.8058, 0.3749, 2.6342, 2.8764, 0.0, 1.0907, 1.1799, 1.7774, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6397, 4.2178, 0.7776, 1.0681, 1.0387, 0.887, 1.518], [2.4041, 2.4111, 2.6662, 1.7581, 5.2072, 2.4461, 0.0, 2.6781, 6.1488, 4.2178, 4.3488, 5.5531, 4.9421, 4.6957], [2.482, 0.0, 0.0, 2.376, 12.3451, 3.7944, 0.0, 1.8742, 0.0, 8.3096, 3.8304, 0.7247, 1.0907, 2.3854, 1.4918, 0.0, 0.0, 1.3171, 0.0, 0.0, 1.259, 1.2946, 2.6208, 0.9191, 1.2784, 2.0698, 0.7894], [0.9928, 1.7968, 2.119, 5.72, 6.9187, 1.4731, 0.6053, 3.8235, 1.0976, 3.995, 1.6758, 1.6038, 1.1575, 0.8208, 4.2532, 1.0626, 0.5888, 1.7203, 0.0, 1.5999, 1.9325, 1.921, 1.872, 0.0, 2.6367, 1.5629, 0.6072], [0.876, 3.2071, 5.1841, 1.232, 3.1202, 3.348, 1.3338, 0.2249, 0.7683, 18.5368, 5.4583, 1.3356, 0.9747, 0.73, 0.2898, 4.4712, 2.2042, 2.3218, 0.7999, 1.6982, 0.0, 0.0, 0.5216], [4.3166, 2.2025, 4.232, 4.7846, 3.1791, 5.6518, 3.3379, 10.44, 8.8128, 3.7757, 5.0736, 1.0771, 3.1979], [4.3508, 0.0, 0.0, 8.624, 3.2558, 3.2587, 0.0, 0.9746, 4.1709, 13.2634, 0.0, 1.9008, 1.1353, 0.0, 1.1426, 0.0, 1.1408, 2.5267, 0.0, 3.4954, 3.8357, 5.8882, 1.0944, 0.0, 3.196, 0.6758], [2.8616, 0.0, 0.0, 0.792, 13.4303, 2.2766, 0.0, 4.7981, 2.744, 1.4382, 2.8728, 3.1363, 4.8527, 0.0, 4.5706, 1.6615, 0.9752, 2.9837, 0.0, 0.0, 3.865, 7.4333, 3.0528, 1.1923, 5.5531, 4.4986, 3.9266], [1.3724, 1.8934, 5.0706, 8.096, 12.2094, 1.3392, 0.9234, 6.3724, 4.3355, 16.9388, 3.9262, 2.0315, 0.5565, 2.565, 0.5396, 2.0479, 1.8032, 1.2634, 0.0, 1.7216, 1.3469, 3.8002, 1.7856, 2.0866, 1.7977, 0.0, 2.3276], [5.1336, 9.5212, 8.5613, 12.3046, 5.9371, 3.2551, 2.5154, 1.6672, 6.7606, 1.6422, 3.68, 5.161, 0.1965, 0.313, 6.9101, 6.0552, 3.3696, 2.6082, 7.2709, 3.9072, 1.9835], [4.7304, 0.0, 1.892, 9.504, 13.2947, 4.5979, 1.9186, 7.0472, 3.0733, 23.0112, 5.171, 3.9085, 0.5788, 1.1542, 4.6975, 0.0, 5.3222, 0.0, 1.5129, 3.3965, 4.4266, 2.2464, 0.5465, 4.3146, 3.0624, 1.6799], [1.314, 0.0, 0.719, 8.184, 26.8607, 3.348, 0.7285, 5.9976, 1.8659, 16.2996, 8.0917, 3.6828, 0.4007, 2.6676, 4.888, 1.8354, 0.736, 6.2362, 2.3575, 0.0, 1.0541, 8.4773, 4.8672, 3.3037, 3.7953, 2.5344, 2.024], [5.3436, 0.5796, 0.0, 8.448, 27.132, 3.0355, 0.1949, 7.9468, 6.9698, 12.4644, 4.3092, 4.2412, 4.0736, 2.7189, 3.8723, 1.449, 4.8024, 2.3654, 1.9646, 2.2607, 6.2366, 4.009, 4.5216, 3.3534], [5.5772, 1.0046, 0.4541, 9.24, 26.5894, 4.6426, 0.0, 4.7981, 4.555, 14.0624, 4.0698, 3.0294, 1.4024, 2.4881, 4.9832, 3.0139, 2.668, 3.8438, 0.3929, 2.2955, 0.2928, 5.0112, 5.1552, 2.8069, 6.392, 5.9136, 2.8741], [1.9699, 12.0702, 4.1709, 30.6816, 10.0548, 4.4075, 4.2739, 3.4884, 6.5384, 0.425, 3.4408, 3.3869, 2.1253, 3.791, 2.9573, 6.6398, 4.5504, 3.6515, 9.7877, 6.4627, 3.542], [4.5552, 0.2512, 0.4162, 6.6, 21.5699, 8.5709, 0.0, 6.2225, 2.9635, 8.3096, 3.8304, 3.9679, 7.4348, 6.1047, 8.3794, 2.7048, 5.2256, 4.0051, 2.3303, 6.4123, 6.8069, 5.0976, 3.4031, 3.0761, 4.9632, 2.3478], [7.6504, 5.5448, 5.4111, 25.168, 37.0352, 5.5354, 0.2257, 14.2443, 12.6224, 36.9138, 12.5924, 0.0713, 3.8065, 6.5408, 0.73, 3.7094, 5.6488, 5.4566, 0.2858, 0.7825, 4.2749, 9.396, 5.7024, 2.9311, 8.1098, 0.0422, 3.4206]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

