created: 20230625214256000
creator: Drevarr
modified: 20230705163535948
modifier: drevarr
tags: ChartData
title: 202306252142_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Wall Knot", "Yngvar The Burdened", "Drac Tepes", "Surethang", "Drevarr Moonwillow", "Hayuf", "Booboo Hurts", "Aronorf Xideliesi", "Arriasa", "Shrimp Tempsura", "Drumina", "Ani Deasun"];
const professions = ["Dragonhunter", "Scourge", "Scourge", "Guardian", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Druid", "Tempest", "Druid", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.9817, 0.9897, 0.0, 0.0, 4.0, 0.9831, 7.0446, 33.1439, 0.989, 1.973, 4.0055, 4.973, 0.0, 1.0], [0.0, 14.9576, 15.0595, 3.0052, 5.9703, 10.0064, 15.0504, 0.989, 3.973, 16.0829, 8.0405, 13.3051, 0.0], [10.0064, 42.2158, 0.0, 4.973, 12.2265, 6.973, 0.0, 0.0], [54.2626, 0.0, 0.973, 13.0442, 14.7838], [43.2569, 17.2887, 0.0, 11.1321, 0.0, 24.1957, 26.661, 0.0, 45.5939, 0.0, 2.0, 0.0], [20.1683, 29.3121, 44.5216, 0.0, 6.973, 9.0331, 6.973], [0.0, 5.0189, 2.9545, 19.4348, 23.8644, 0.0, 37.0667, 20.25, 17.0729, 27.1089, 30.2548, 40.1763, 0.0, 3.973, 7.0166, 0.9865, 0.0, 1.0], [0.0, 37.1697, 21.1429, 16.0521, 31.3366, 31.586, 53.7842, 2.022, 14.8649, 37.4972, 4.973, 9.9661, 9.0303], [0.0, 2.9545, 57.8986, 3.0, 159.4303, 108.7024], [84.2803, 122.6079, 4.989, 31.2973, 87.3757, 28.9865, 24.7288, 2.0], [64.8899, 14.1856, 6.5094, 0.0, 29.087, 45.322, 0.0, 99.4667, 43.0476, 39.0625, 51.1782, 32.9745, 99.2662, 0.0, 57.5946, 81.6575, 1.9865, 9.7797, 10.3333], [50.6972, 28.3814, 5.9318, 46.413, 57.1017, 0.0, 83.1091, 65.9524, 54.0833, 53.6337, 70.2994, 121.6511, 9.978, 26.4054, 49.1602]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

