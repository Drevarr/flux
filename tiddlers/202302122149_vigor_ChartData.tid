created: 20230212214943000
creator: Drevarr
modified: 20230705163519167
modifier: drevarr
tags: ChartData
title: 202302122149_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Ace Hammers", "Blanco Padre Guard", "Ark Darkness", "Bella Sassy", "Sizklea", "Sygaldry Verdandi", "High Sorcer Baradun", "Venomina The Fierce", "Zadie Miststep", "Tegan Parker", "Veggie Mac", "Newtype Khan"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.93, 7.9435, 55.9451, 7.79, 14.8, 4.95, 11.7872, 55.3402], [0.0, 115.596, 17.6774, 0.0, 0.0, 0.0, 0.0, 43.1386], [23.6174, 35.2123, 117.7157, 0.0, 0.0], [0.0, 45.527, 54.4385, 0.5861, 11.47, 18.2754, 63.1082, 35.6995], [36.4518, 213.0523, 0.0, 0.0, 1.036], [53.5828, 34.9752, 102.5492, 0.0, 2.59, 12.2265, 0.0, 52.5062], [0.0, 92.4768, 148.7516, 0.0, 0.0, 30.3923, 7.4784], [0.0, 151.5197, 38.8703, 0.0, 34.003, 19.6713, 0.0, 44.1226], [0.0, 161.8344, 92.2039, 0.0, 42.18, 0.0, 0.0, 120.1267], [31.4345, 92.2397, 181.3946, 0.0, 44.104, 31.4721, 0.0, 63.3696], [0.0, 126.8592, 699.665, 4.6764, 61.161, 24.2748, 0.0, 55.4582], [137.1308, 347.0251, 507.6238, 0.0, 0.0, 51.1632, 67.8061, 223.4861]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

