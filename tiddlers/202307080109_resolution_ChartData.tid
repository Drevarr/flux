created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Urilstormwalker", "K\u00f4sair", "Arriasa", "Gamora Titus", "Aronorf Xideliesi", "Air One Com", "Bella Sassy", "Gestern Yesteryear", "Tika Fiery", "Koralia Danai", "Solus Sanctus"];
const professions = ["Firebrand", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[101.177, 119.3751, 76.9886, 79.006, 63.4771, 115.1533, 46.9862, 61.7364, 102.1094, 0.0, 219.4857, 840.0882], [34.6484, 0.0, 39.6943, 0.0, 0.0, 0.0, 48.3101, 0.0, 21.4579, 47.2003, 38.9726, 123.9625, 15.0242, 29.1555, 27.3355, 41.579, 49.3856, 29.4147, 138.0483, 0.0, 26.7462, 35.244, 0.0, 0.0, 5.774, 16.3061, 37.422, 52.7983, 0.0, 75.2611, 9.17, 698.6633, 17.5732, 154.3845, 149.107], [25.004, 51.042, 0.0, 91.2125, 0.0, 0.0, 35.2934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 110.331, 22.6734, 14.9526, 24.3575, 0.0, 0.0, 0.0, 14.2968, 43.7976, 0.0, 34.713, 0.0, 0.0, 932.5583, 0.0, 0.0, 363.4348, 207.8727], [37.3274, 0.0, 38.4479, 0.0, 37.1592, 0.0, 252.3394, 0.0, 191.7154, 168.8947, 155.0648, 445.2075, 154.0955, 171.5985, 178.6747, 194.2468, 0.0, 163.7582, 164.6156, 431.2776, 39.9344, 144.7173, 80.3563, 0.0, 0.0, 76.6899, 188.6018, 131.0364, 205.9931, 100.3275, 183.1826, 107.954], [57.018, 56.9076, 23.1071, 0.0, 0.0, 0.0, 157.2917, 21.3237, 112.3159, 107.4902, 105.332, 311.0225, 65.2252, 35.1405, 51.8765, 88.0634, 140.6367, 55.4944, 330.2754, 42.47, 116.5671, 103.2649, 0.0, 20.8454, 82.6711, 154.6759, 147.0348, 107.7992, 48.7305, 175.712, 27.916, 1578.0362, 0.0, 17.5375, 176.05, 258.7445], [47.7755, 83.0208, 48.1957, 35.8877, 0.0, 0.0, 118.7659, 35.1396, 122.2611, 70.295, 56.5721, 64.9775, 51.1434, 105.3787, 44.1029, 91.4338, 64.8186, 141.3373, 303.9933, 49.979, 101.1231, 152.2149, 26.8664, 47.4029, 64.0464, 126.7006, 104.1084, 127.8662, 119.5425, 115.639, 45.948, 2399.993, 37.398, 536.4717, 521.1227], [93.6475, 47.6722, 23.7754, 124.1251, 81.7236, 242.748, 105.719, 74.9385, 301.5382, 63.21, 3129.4796, 18.0118, 9.6533, 1315.4246, 845.5244], [172.7062, 98.9256, 62.9932, 37.0627, 58.0944, 67.8307, 168.3427, 0.0, 170.4197, 158.0083, 189.2026, 471.7625, 141.7601, 206.3543, 114.0062, 140.8214, 233.4592, 214.1737, 509.496, 45.8344, 184.275, 164.9811, 19.3688, 32.0947, 69.6427, 174.305, 179.0316, 179.135, 76.6395, 353.9554, 90.65, 2193.8994, 61.1993, 446.5098, 481.2773], [157.4806, 246.468, 148.8697, 82.1549, 154.9704, 30.1275, 137.0242, 79.7607, 93.4524, 105.8832, 130.5374, 654.005, 36.8953, 231.1065, 34.4597, 128.1742, 172.9618, 208.2374, 627.4515, 50.2716, 171.1827, 129.7371, 39.7373, 19.7971, 124.6877, 166.9634, 124.0668, 235.6042, 182.5425, 230.8459, 14.504, 4017.9182, 179.6506, 0.0, 716.2522, 789.5153], [189.0928, 278.6724, 160.3114, 242.1072, 148.044, 35.7143, 177.6902, 45.3951, 163.6094, 93.96, 159.8406, 523.58, 117.7823, 288.5625, 55.3008, 21.824, 303.1041, 365.6494, 581.3457, 280.3212, 235.7316, 192.4322, 97.4063, 134.1333, 205.5262, 219.0672, 205.8095, 124.1415, 265.2968, 107.94, 4184.1227, 71.7842, 1398.3561, 961.6775], [160.4274, 153.0696, 47.5884, 48.1277, 42.8064, 52.1527, 187.2562, 33.5916, 205.6602, 115.9142, 211.6959, 577.865, 121.081, 310.2367, 138.744, 123.9028, 22.3475, 234.0765, 201.5674, 735.2709, 34.2783, 286.5564, 182.2115, 0.0, 39.6614, 145.2371, 218.4706, 165.0924, 217.0055, 88.515, 441.3793, 95.368, 5003.0576, 65.6146, 1519.1662, 1083.4691]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

