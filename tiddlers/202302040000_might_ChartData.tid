created: 20230204000024000
creator: Drevarr
modified: 20230705163518615
modifier: drevarr
tags: ChartData
title: 202302040000_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Zady Stardust", "Ravioli Fetabringer", "Palatine Of Ruin", "Tegan Parker", "Johosh The Great", "Tyrisai", "Veron Blackburn", "\u00c9\u00efbhear", "Venomina The Siren", "Newtype Khan", "Abigail Ryn", "Grasszanine", "Arcanophage Farra"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Herald", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.4707, 2.4923, 1.4952, 3.1325, 0.7409, 5.1874, 4.0572, 0.0877, 8.5058, 6.3602, 9.1728, 0.4256, 1.4652, 0.0, 10.296, 0.0, 11.4576, 1.9363, 3.7548, 3.6036, 1.1722, 4.9368, 30.2899, 1.5811, 1.3749, 2.7918, 2.9137, 0.2295], [0.0, 0.0542, 0.0, 0.0, 3.5986, 4.4629, 5.7154, 3.5673, 4.8048, 0.0, 9.1728, 0.0, 4.9104, 7.8255, 19.2406, 0.0, 19.6416, 4.518, 4.871, 4.6847, 3.0517, 2.6479, 14.8838, 0.3544, 0.3606, 1.802, 3.6043, 4.59], [7.4246, 15.7437, 1.3604, 1.188, 10.9134, 23.8095, 8.9232, 20.0508, 2.3439, 6.2156, 11.0167, 0.6063, 8.5721, 32.5094, 4.9613, 1.7581, 0.8883, 3.2826, 2.2032], [5.3033, 7.0913, 1.4035, 25.2578, 4.569, 11.1573, 5.5252, 13.7412, 10.1943, 14.9292, 3.0202, 20.119, 4.8577, 4.5159, 9.2664, 2.5465, 4.1963, 20.2368, 1.5538, 2.1638, 2.9187, 3.2732, 7.2981], [0.0, 1.6976, 0.0, 0.5255, 2.8577, 0.0, 0.635, 2.1638, 58.6318, 0.0, 0.0, 0.0, 1.4652, 6.3027, 49.6138, 14.0941, 8.2522, 0.0, 4.2622, 0.0, 1.2126, 1.9074, 28.3315, 0.0, 1.3524, 3.9593, 0.0, 0.0], [2.5838, 4.2802, 4.704, 5.1422, 0.0, 2.9106, 4.405, 5.8565, 3.4796, 25.4526, 6.7496, 6.3945, 1.064, 0.198, 2.3265, 24.5174, 0.0, 23.0516, 2.0042, 5.4799, 4.6332, 4.7493, 5.7222, 30.9427, 1.363, 1.713, 3.0964, 1.7974, 6.3342], [5.6014, 8.3257, 1.1928, 4.69, 6.6895, 7.1089, 0.0, 4.8686, 0.0, 18.2453, 5.6852, 11.2455, 2.1384, 4.7799, 21.1068, 15.8787, 19.437, 4.586, 7.2304, 1.7503, 0.8084, 3.9494, 21.2813, 8.3688, 2.8851, 9.8728, 4.4462, 7.4817], [104.3174, 25.0519, 16.071, 25.4561, 12.4967, 42.1821], [3.2628, 6.7906, 2.94, 4.4574, 5.8205, 7.4088, 3.1298, 8.82, 10.9942, 16.2974, 3.92, 13.5387, 4.0888, 19.1268, 14.5512, 21.1712, 21.8733, 13.0944, 5.639, 8.6765, 13.5907, 2.6677, 8.1457, 24.937, 8.8868, 2.6372, 7.411, 1.1447, 9.5931], [0.1509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2898, 3.2105, 12.2223, 75.3188, 0.0, 9.1728, 2.2876, 21.6216, 24.1956, 38.4169, 24.0698, 3.41, 0.0, 5.277, 2.4196, 0.485, 2.2216, 40.9958, 10.9313, 1.9384, 3.7309, 0.0, 0.0], [12.2401, 18.656, 8.7864, 4.9312, 5.6977, 4.318, 10.4782, 5.0585, 39.5424, 4.1276, 21.0798, 1.9152, 27.7596, 20.6847, 9.6525, 27.5933, 25.7796, 11.1422, 11.315, 17.7606, 8.7307, 8.2579, 51.1795, 11.8581, 7.4833, 9.5683, 0.6244, 22.2615], [9.0717, 3.6842, 1.7304, 18.2689, 19.6037, 25.331, 6.0568, 21.5914, 14.1522, 100.9012, 1.7134, 43.9677, 36.9864, 44.838, 87.8377, 17.8922, 63.5624, 13.8258, 24.4567, 25.0708, 13.2578, 21.8566, 73.7664, 13.3574, 7.2353, 3.3502, 9.1384, 36.0315], [14.7108, 14.7189, 16.2456, 9.0311, 13.5003, 18.4338, 17.1562, 34.5391, 29.7078, 74.215, 16.5106, 25.7985, 5.3808, 45.0252, 40.7772, 58.4942, 47.1328, 44.2618, 23.745, 30.8753, 52.5611, 21.7257, 15.6407, 103.273, 22.9257, 17.1529, 23.9587, 2.8002, 45.9], [30.8738, 29.1308, 14.8176, 12.92, 21.362, 27.8888, 23.7926, 16.6522, 8.9474, 84.0194, 23.6755, 43.8354, 2.4472, 64.3896, 21.4884, 60.682, 70.745, 97.1168, 33.8002, 9.8689, 75.9845, 23.1, 26.928, 119.3318, 40.8627, 33.9678, 41.4709, 14.2846, 77.8923]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

