created: 20230506002551000
creator: Drevarr
modified: 20230705163528378
modifier: drevarr
tags: ChartData
title: 202305060025_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sheep Paws", "Blancooo Padreee", "Newtype Khan", "Mistwalker Caelon", "Zenek Tryst", "Smol Gluvs", "Smol Daddy Tika", "Xanvias Tsolice", "Morv\u00e4rth", "Venngi", "Rina Of Theros", "Rozaalyna", "Khailerian", "Lord Erin The Wise", "Be\u00eb", "Kmpek", "Sister Elonith", "Hauzzy", "Mistwalker Caelon", "Johosh The Great", "Demon Dalham", "Kos\u00e4ir", "Permanent Dawn", "Xanvias Einzbern"];
const professions = ["Berserker", "Spellbreaker", "Spellbreaker", "Herald", "Weaver", "Scourge", "Spellbreaker", "Weaver", "Scourge", "Scrapper", "Scourge", "Scourge", "Vindicator", "Weaver", "Scourge", "Vindicator", "Berserker", "Berserker", "Vindicator", "Willbender", "Dragonhunter", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2853.9472], [135.4455, 204.706, 91.443, 142.1351, 198.3043, 228.087, 200.1375, 193.301, 150.0723, 53.197, 210.9375, 0.0, 150.1687, 97.215, 124.7533, 128.6994], [225.495, 221.0317, 192.9597, 233.0, 59.5217, 315.6304, 247.7683, 242.0, 172.5149, 124.3636, 145.4375, 14.2206, 176.9802, 93.3832, 160.5333, 10.9294], [1014.4585], [3571.7321], [180.1386, 243.2165, 154.2148, 169.7973, 33.9565, 115.1739, 302.8674, 69.5225, 284.2851, 135.4394, 250.0625, 24.4118, 125.0774, 226.2336, 221.3783, 151.8744], [244.8614, 272.1285, 135.8523, 8.2568, 259.2609, 170.1304, 265.3755, 291.8131, 174.7064, 227.7727, 103.1354, 70.9118, 86.5337, 71.2523, 218.3417, 178.3795], [4375.7774], [294.2148, 271.0435, 673.1896, 459.4256, 549.7727, 110.6458, 42.75, 438.6607, 200.215, 384.8783, 413.6554], [181.4783, 735.0161, 427.045, 570.7702, 264.0455, 430.0521, 267.3088, 509.8135, 461.5047, 608.1733, 106.8368], [439.9356, 595.6796, 264.4899, 157.3243, 164.8261, 881.5652, 557.8414, 615.7128, 371.9745, 219.8182, 253.5208, 11.3676, 320.0714, 131.4206, 159.9117, 411.934], [586.8861, 195.3539, 495.7517, 360.4189, 455.2609, 664.5651, 724.6678, 398.7702, 392.4848, 32.0208, 59.8971, 242.4663, 201.5234, 460.1183, 379.5655], [769.4505, 832.6989, 474.953, 57.5541, 89.2174, 448.0435, 823.4932, 848.4775, 514.3617, 258.2424, 225.3646, 264.2941, 569.8869, 365.0374, 482.3417, 441.0522], [934.8218, 842.0, 150.5369, 475.5946, 772.3913, 438.6087, 1355.2094, 1414.3979, 1044.366, 1141.1212, 165.4062, 65.4265, 530.2024, 789.2243], [854.4356, 772.1303, 647.6107, 485.3243, 480.0, 587.7174, 884.71, 793.4637, 314.9447, 0.0, 434.246, 523.4579, 538.3217, 529.5536], [521.9752, 732.2271, 650.2685, 467.027, 1683.3043, 1142.9565, 576.5143, 153.9827, 894.7532, 801.697, 371.25, 233.9853, 673.879, 856.0093, 842.2867, 566.6783], [797.5347, 1401.3363, 310.1745, 201.4054, 380.6087, 274.913, 541.6654, 1155.5917, 539.8085, 82.6515, 202.7812, 45.7059, 883.1845, 349.5794, 375.64, 747.5555], [1163.7871, 1515.8732, 559.6309, 614.5, 277.6087, 443.913, 1763.4994, 400.4256, 1383.7787, 244.3485, 570.5625, 14.1029, 612.8433], [1452.1485, 1425.368, 680.302, 48.9459, 1301.2174, 538.3913, 1183.8858, 1237.7234, 634.9545, 369.1354, 292.1029, 710.4286, 516.8037, 795.8017, 677.9835], [586.8416, 884.7799, 573.9664, 11.4595, 288.2174, 401.5652, 1475.119, 713.7889, 656.6468, 270.6667, 304.9688, 113.4412, 696.3115, 510.9159, 623.6917, 756.6095], [436.4901, 1260.118, 115.1275, 118.5, 2289.0435, 468.6087, 993.4907, 1128.0657, 1454.6128, 619.5758, 247.9792, 1388.0882, 839.9663, 438.0561, 657.44, 764.4739], [1375.4455, 1435.0528, 433.1074, 1095.9595, 506.6957, 1274.5, 1538.1165, 1153.5848, 709.9702, 592.7879, 495.1458, 10.1618, 894.4028, 353.5327, 908.9, 693.9129], [1036.6188, 1119.1338, 489.7315, 455.7568, 247.7826, 519.8478, 2006.0335, 689.9343, 1085.5872, 538.8485, 342.8542, 296.7206, 1141.2877, 1294.1589, 813.3267, 940.0907], [1688.9307, 1874.6708, 1167.8792, 1254.0405, 397.0435, 1388.9348, 2260.2181, 1960.8858, 1813.8511, 966.1515, 355.5833, 233.0882, 1054.1845, 877.514, 1675.54, 1147.7617]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

