created: 20230628220723000
creator: Drevarr
modified: 20230705163539851
modifier: drevarr
tags: ChartData
title: 202306282207_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Tootsie Pop Rocks", "Vopiscus Zergherdus", "Rahani Sunray", "Primal Clone", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer", "Demon Staph", "Arriasa", "My Birthday Girl", "Fribble Bibble", "Belvyn Brightblade", "Drevarr Moonwillow", "Tribal S", "Blanco Padre Guard", "Miphest\u00f6", "Gavann", "Bella Sassy", "Sub Train", "Crusader Siolith", "Tika Fiery", "Solus Sanctus", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Scrapper", "Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Druid", "Druid", "Scrapper", "Scrapper", "Firebrand", "Scrapper", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 20.6711, 12.1275, 14.8176, 0.0, 3.9744, 0.0, 0.0, 28.5929, 34.9642, 35.4586, 30.9435, 29.5214, 6.0115, 0.0, 37.4136, 63.9009, 21.3878, 0.0, 41.2658, 5.4243, 0.0, 7.3958], [0.0, 28.566, 87.9491, 42.0273, 13.9395, 30.3717, 1.4861, 7.546, 14.0083, 0.0, 55.8661, 26.2829, 18.0075, 5.1759, 14.0592, 0.0, 17.4806, 58.7412, 24.1975, 19.3126, 42.926, 12.4582, 0.0, 2.5229], [69.7495, 31.5874, 69.237, 57.7338, 35.8376, 28.9613, 16.8438, 4.608, 0.0, 8.8849, 9.2275, 0.0, 7.9373, 0.0, 0.0, 11.1926, 81.9995, 56.7093, 0.0, 45.7719, 0.1323, 20.1485], [31.0454, 27.0774, 48.2944, 49.5263, 25.4707, 10.7531, 28.7539, 20.0906, 66.4768, 31.5706, 23.0055, 16.4082, 56.964, 0.0, 61.3709, 108.7506, 51.2046, 39.0779, 62.7881, 12.1054, 58.7174], [19.2024, 53.1449, 66.2715, 25.7544, 67.5024, 63.7853, 5.1494, 2.3986, 26.6035, 41.7242, 60.9797, 36.7027, 1.5435, 12.0994, 54.637, 22.1968, 71.809, 87.7943, 15.5391, 53.5247, 44.2303, 7.6955, 40.6651, 25.7126], [13.9679, 43.2023, 90.1943, 74.0439, 51.4226, 15.6849, 5.1149, 31.774, 17.4182, 25.9163, 62.1942, 47.7965, 15.6555, 5.0825, 79.5072, 0.0, 42.1925, 117.2443, 22.1906, 52.0536, 48.2621, 21.0798, 21.5968, 38.0506], [16.4506, 13.7379, 34.2187, 64.9554, 35.4123, 60.8619, 79.4702, 40.7808, 39.2662, 70.6253, 0.0, 44.8718, 43.4419, 34.3245, 25.8129, 20.6525, 16.0604, 69.2938, 96.2879, 45.4133, 9.1282, 49.7443, 0.0, 21.3439, 15.1373], [21.3721, 13.717, 58.1919, 67.4328, 70.4718, 60.6424, 74.2419, 20.9779, 17.1402, 19.3229, 34.9854, 45.9585, 23.5354, 30.7965, 20.4102, 31.7544, 0.0, 57.661, 63.9803, 78.2118, 34.7024, 74.2904, 22.5572, 22.861, 33.0739], [77.8075, 60.1372, 86.1523, 150.8916, 73.5147, 41.6539, 24.2878, 25.2288, 13.2055, 35.9237, 0.0, 16.2859, 179.1607, 99.8863, 0.0, 101.5638, 20.3963, 0.0, 44.375], [16.958, 58.4947, 141.756, 66.7674, 106.6867, 33.4611, 0.0, 18.326, 47.9539, 0.0, 77.0236, 40.5389, 20.8372, 62.7816, 0.0, 50.9957, 95.0179, 106.8818, 61.559, 56.7998, 35.9194, 0.0, 34.3526], [20.4196, 0.0, 87.414, 170.7885, 61.6518, 91.5947, 32.0828, 15.7939, 13.475, 65.2493, 0.0, 115.5674, 75.6864, 31.458, 11.1122, 75.7258, 26.8498, 55.8041, 69.8401, 62.1248, 37.2341, 5.292, 15.9921, 21.6691], [72.5254, 131.5366, 106.5456, 86.6555, 57.2736, 38.2234, 25.8451, 23.1936, 31.3326, 54.9712, 71.3837, 39.249, 54.734, 57.1094, 0.0, 119.7864, 165.9042, 74.5993, 1.0939, 80.8716, 7.8939, 49.5777, 44.617], [38.2082, 0.0, 45.3221, 243.0988, 48.4659, 125.4557, 39.3548, 0.0, 34.7655, 28.7539, 0.0, 72.8049, 92.9491, 22.7482, 21.0238, 99.9173, 0.0, 47.2858, 185.6698, 103.4414, 36.8902, 88.52, 40.3295, 0.0, 47.1053], [37.7017, 79.9389, 134.6035, 214.1437, 74.4408, 102.1866, 80.5633, 11.785, 5.3361, 59.4125, 59.6421, 89.488, 46.967, 36.2723, 11.5658, 73.4472, 20.7156, 89.6669, 135.581, 60.4364, 88.0008, 84.4883, 45.2466, 10.1768, 52.0819], [0.0, 142.5778, 161.8852, 121.4514, 118.8701, 76.5708, 29.687, 45.6533, 77.1686, 0.0, 100.8018, 33.9034, 31.458, 37.1252, 90.8515, 0.0, 90.2328, 181.3833, 113.8772, 49.0737, 168.9172, 29.8116, 0.0, 60.7219], [0.0, 157.6178, 164.7498, 115.8066, 109.2661, 73.0536, 31.3459, 63.6829, 92.4365, 0.0, 184.6649, 32.6074, 80.703, 38.4459, 56.9693, 132.0883, 156.9396, 20.4442, 188.0679, 7.497, 88.1626], [20.4709, 138.9439, 152.2851, 101.6946, 98.9486, 138.2648, 9.9878, 60.5836, 13.5475, 15.5561, 49.6658, 92.7936, 18.0075, 44.2488, 34.2269, 0.0, 186.6907, 240.6008, 158.2584, 66.1986, 183.6211, 76.0504, 95.0678, 160.2202], [105.9365, 207.1759, 159.0246, 227.0386, 131.3729, 37.3939, 38.0804, 62.2694, 0.0, 126.1781, 26.9568, 30.2452, 31.2156, 186.2602, 32.1632, 89.9813, 222.1846, 145.5289, 40.1718, 135.1812, 52.1703, 23.7248, 63.2794], [76.5097, 134.3511, 202.5307, 189.7182, 169.2499, 151.6682, 7.4304, 53.6035, 82.6368, 53.6275, 173.0314, 75.2717, 57.8445, 20.5836, 156.8813, 30.4916, 159.4637, 323.0766, 75.8035, 79.8155, 115.1412, 81.2542, 0.0, 94.729], [53.9687, 192.3916, 238.7633, 145.7064, 217.215, 179.6159, 84.7757, 81.5237, 85.8931, 0.0, 166.0002, 129.0298, 55.2352, 27.1336, 141.4162, 18.3034, 50.807, 170.3495, 143.8661, 27.3847, 204.4912, 79.9312, 0.0, 73.751], [26.953, 22.5096, 192.3113, 188.748, 207.7757, 100.2408, 23.3626, 68.1565, 93.0509, 37.2527, 222.1859, 135.2506, 81.2175, 42.688, 146.9914, 0.0, 137.6443, 319.9014, 148.1092, 52.9966, 179.1744, 61.8282, 16.7296, 118.4717], [0.0, 122.9954, 174.8918, 166.698, 232.1973, 134.0821, 22.2221, 90.1478, 71.9462, 0.0, 233.6276, 87.7651, 132.2632, 46.4099, 159.984, 22.2603, 211.8427, 370.5458, 119.2672, 22.2548, 307.7744, 105.5754, 93.7194, 136.1318], [35.653, 0.0, 166.7024, 351.2545, 195.6717, 247.4539, 158.4175, 69.7421, 40.5598, 97.0752, 0.0, 240.6588, 83.255, 98.196, 29.4014, 213.4574, 11.0878, 162.7963, 366.4975, 196.7909, 99.8071, 265.5599, 97.7697, 0.0, 129.289], [14.9088, 217.9799, 380.287, 122.5098, 229.6179, 209.5598, 99.671, 108.0964, 154.5216, 43.4877, 228.4501, 53.0323, 165.0442, 32.763, 166.141, 56.1375, 162.7963, 208.7694, 197.0202, 27.0075, 286.5486, 47.5839, 87.2719, 90.3744], [67.594, 23.691, 203.6969, 297.3702, 225.5715, 237.0267, 155.328, 102.0557, 114.7261, 150.9581, 35.8986, 248.6488, 134.473, 83.4225, 83.295, 230.9587, 32.8192, 171.851, 296.3255, 287.6174, 148.1642, 187.9493, 96.6452, 115.7069]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

