created: 20230625215649000
creator: Drevarr
modified: 20230705163536897
modifier: drevarr
tags: ChartData
title: 202306252156_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Fiorela Marina", "Euljian", "Belvyn Brightblade", "Shaca Booey", "Bella Sassy", "Pale Pam", "Grimdox", "Etchery Howls", "Imalou", "Drevarr Moonwillow", "Demon Staph", "Mammary Mission", "Tika Fiery", "Tribal S", "Black Raspberry Pie", "Rozaalyna", "Sygaldry Verdandi", "Koralia Danai", "Jacob Pine", "Newtype Khan", "Elonith Requiem", "Tootsy Pop Star", "Sumatra Satyricon", "Irish Mini Rev", "Artakama Nahid", "Xanvias Einzbern", "Mister Jekyll", "Cerys Fireblade", "Momomeko", "Miphest\u00f6", "Raelyn Sunray", "Tegan Parker", "Johosh The Mighty", "Smol Gluvs", "Blancooo Padreee", "Raziel Umbra", "Grasszanine", "Crusader Siolith", "Primal Clone", "Elon The Mender", "Arcanophage Farra", "Lord Erin The Wise", "Eibh\u00ebar", "High Sorcer Baradun", "Zayde Sunsabre", "Solus Sanctus", "Mmathuss", "Ryvalia Fazebringer", "Inedible Plant", "Mistwalker Cael"];
const professions = ["Reaper", "Willbender", "Firebrand", "Berserker", "Firebrand", "Druid", "Firebrand", "Druid", "Firebrand", "Scrapper", "Druid", "Scourge", "Firebrand", "Druid", "Chronomancer", "Reaper", "Firebrand", "Firebrand", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Soulbeast", "Herald", "Tempest", "Berserker", "Reaper", "Berserker", "Chronomancer", "Tempest", "Firebrand", "Tempest", "Berserker", "Reaper", "Spellbreaker", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Druid", "Spellbreaker", "Weaver", "Chronomancer", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 0, 50, 0], [0, 0, 18, 1, 23, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 4, 0, 1], [1, 0, 0, 0, 51, 0, 3], [1, 0, 0, 64, 1, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 5, 0, 3, 0, 3, 0, 0, 0, 11, 18, 5, 16, 8], [3, 0, 0, 9, 8, 2, 0, 46, 6, 0, 0, 3, 1], [25, 0, 3, 0, 8, 2, 0, 0, 9, 3, 0, 12, 16], [13, 1, 0, 0, 0, 1, 2, 17, 0, 6, 9, 0, 8, 6, 4, 12, 6], [0, 0, 0, 3, 48, 1, 0, 9, 3, 10, 21, 0], [0, 1, 0, 3, 11, 0, 1, 7, 0, 3, 0, 11, 0, 8, 6, 0, 0, 13, 15, 5, 1, 24], [0, 0, 0, 0, 21, 0, 2, 12, 0, 6, 1, 21, 0, 10, 3, 0, 2, 9, 8, 0, 17], [1, 21, 0, 0, 5, 21, 0, 7, 0, 0, 15, 11, 24, 7], [0, 0, 0, 3, 12, 0, 0, 0, 0, 2, 1, 16, 0, 10, 8, 0, 0, 7, 2, 16, 30, 8], [0, 0, 4, 12, 21, 0, 16, 5, 0, 0, 12, 16, 31, 1, 3], [0, 0, 0, 0, 25, 2, 2, 10, 0, 24, 6, 1, 0, 18, 2, 0, 0, 11, 5, 13, 4, 8], [0, 0, 0, 6, 32, 1, 1, 4, 0, 5, 12, 10, 0, 0, 1, 0, 0, 41, 4, 8, 6], [0, 0, 0, 5, 10, 0, 0, 1, 0, 0, 1, 5, 0, 13, 0, 0, 9, 37, 29, 2, 19], [0, 0, 0, 7, 13, 0, 0, 2, 0, 6, 3, 5, 0, 7, 1, 0, 10, 21, 18, 17, 26], [4, 20, 0, 6, 7, 20, 0, 7, 0, 0, 0, 15, 0, 11, 17, 34], [2, 0, 0, 7, 36, 4, 3, 3, 0, 3, 5, 6, 0, 0, 31, 0, 0, 0, 8, 4, 11, 20], [27, 0, 4, 4, 22, 1, 20, 6, 0, 0, 10, 8, 23, 6, 18], [0, 0, 0, 5, 34, 0, 0, 37, 0, 13, 4, 11, 0, 3, 0, 0, 8, 10, 12, 5, 10], [0, 0, 0, 4, 32, 0, 0, 1, 0, 3, 6, 14, 0, 0, 9, 12, 11, 11, 22, 29], [1, 1, 3, 2, 33, 0, 5, 9, 2, 5, 1, 42, 0, 2, 0, 0, 0, 19, 11, 7, 15], [0, 0, 0, 0, 7, 2, 1, 10, 0, 0, 0, 1, 0, 9, 0, 0, 67, 9, 30, 22, 4], [0, 0, 0, 2, 6, 0, 2, 0, 0, 2, 5, 37, 0, 1, 10, 0, 12, 5, 50, 27, 6], [0, 0, 0, 33, 3, 2, 1, 11, 0, 23, 0, 17, 0, 0, 0, 4, 28, 13, 17, 21], [0, 0, 0, 3, 22, 0, 2, 7, 0, 6, 36, 2, 0, 9, 5, 0, 0, 18, 11, 30, 4, 21], [0, 2, 0, 50, 0, 4, 5, 0, 19, 2, 5, 0, 1, 12, 0, 26, 32, 7, 1, 16], [0, 0, 0, 0, 24, 3, 0, 11, 0, 0, 3, 2, 1, 16, 16, 11, 0, 7, 9, 45, 4, 31], [40, 0, 18, 17, 0, 29, 11, 43, 0, 25], [3, 1, 0, 5, 21, 1, 5, 13, 0, 0, 2, 35, 0, 13, 2, 0, 0, 19, 22, 39, 2, 13], [0, 0, 0, 1, 40, 1, 0, 9, 0, 1, 10, 19, 0, 25, 3, 0, 0, 10, 14, 12, 13, 40], [0, 0, 1, 2, 41, 4, 2, 15, 0, 7, 8, 45, 0, 27, 9, 0, 0, 6, 0, 12, 9, 13], [0, 0, 0, 1, 39, 0, 3, 5, 0, 1, 17, 5, 0, 3, 1, 0, 11, 40, 5, 0, 71], [1, 7, 0, 0, 29, 0, 0, 0, 0, 14, 7, 26, 0, 0, 17, 0, 19, 22, 31, 0, 37], [1, 20, 0, 5, 6, 33, 0, 19, 43, 0, 0, 1, 22, 9, 0, 62], [0, 0, 0, 4, 34, 0, 2, 5, 0, 4, 12, 15, 0, 17, 0, 0, 0, 21, 48, 24, 10, 26], [0, 0, 0, 0, 11, 0, 1, 7, 0, 22, 3, 23, 0, 18, 0, 0, 0, 22, 25, 36, 34, 24], [0, 0, 0, 3, 39, 2, 5, 4, 0, 4, 13, 14, 0, 15, 5, 0, 12, 48, 18, 9, 35], [2, 0, 0, 5, 29, 0, 3, 7, 0, 12, 18, 52, 17, 11, 4, 2, 0, 11, 37, 4, 11, 10], [0, 0, 0, 3, 50, 2, 1, 13, 0, 43, 11, 23, 11, 29, 1, 0, 14, 0, 31, 4, 0], [0, 0, 1, 41, 2, 4, 17, 1, 3, 7, 18, 0, 14, 0, 0, 0, 5, 25, 22, 6, 71], [2, 0, 0, 0, 43, 1, 1, 22, 0, 9, 6, 29, 3, 31, 1, 3, 6, 35, 1, 45], [0, 0, 1, 2, 34, 2, 0, 0, 0, 3, 4, 15, 19, 79, 0, 16, 18, 8, 19, 19], [1, 0, 1, 0, 60, 1, 1, 3, 0, 5, 4, 34, 0, 7, 35, 2, 0, 25, 11, 39, 5, 16], [0, 0, 0, 7, 66, 1, 3, 7, 1, 8, 8, 21, 0, 26, 26, 1, 0, 12, 25, 19, 30, 21], [1, 0, 1, 3, 16, 1, 2, 22, 0, 10, 24, 27, 0, 17, 13, 0, 0, 13, 70, 20, 17, 50], [1, 0, 1, 3, 59, 2, 15, 25, 0, 7, 35, 51, 0, 15, 11, 11, 39, 27, 3, 60], [0, 8, 0, 13, 83, 6, 24, 10, 0, 10, 20, 33, 1, 18, 8, 0, 0, 49, 16, 36, 6, 32]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

