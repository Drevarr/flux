created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Rahani Sunray", "Mister Jekyll", "Belvyn Brightblade", "Venomina The Sly", "Oo Dads Mad", "Primal Clone", "Tootsie Pop Rocks", "Mistwalker Cael", "Mike The Archmagus", "Rozaalyna", "Bee Nemesis", "Xanvias Einzbern", "Legacy Of Mathus", "Eibh\u00ebar", "Glorious Gluvs", "Be\u00eb", "Arriasa", "Tribal S", "Black Raspberry Pie", "Kisumaiasu", "Zaedy Zae", "Name Is What", "Tegan Parker", "Koralia Danai", "Sygaldry Verdandi", "Marshall R", "Keypek The Drunk", "Klenga", "Etchery Howls", "Audens Silvermarker", "Blanco Padre Guard", "Solus Sanctus", "Drevarr Moonwillow", "Sub Train", "Ex Warcraft", "Crusader Siolith", "Bella Sassy", "High Sorcer Baradun", "Grasszanine", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Chronomancer", "Scourge", "Firebrand", "Druid", "Berserker", "Chronomancer", "Scrapper", "Vindicator", "Weaver", "Scourge", "Berserker", "Berserker", "Berserker", "Chronomancer", "Berserker", "Scourge", "Druid", "Druid", "Chronomancer", "Scourge", "Druid", "Scourge", "Tempest", "Firebrand", "Firebrand", "Herald", "Scrapper", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.5296, 16.5938, 4.8944, 3.2026, 1.4652, 35.5028, 1.044], [4.1366, 27.0715, 6.7052, 1.4904, 2.4184, 8.4929, 1.449, 5.0327, 7.9359, 0.864, 0.0], [1.2039, 40.0433, 54.2508, 1.6397, 0.0], [5.2788, 41.1713, 23.4681, 0.7686, 0.0, 8.1696, 16.0712, 1.5456, 5.7551, 0.0, 0.0, 14.2011, 5.796], [5.5875, 83.4705, 33.221, 1.819], [5.8962, 27.0715, 36.2688, 1.7678, 1.0886, 5.1888, 1.8396, 15.0259, 4.2504, 3.7083, 1.3653, 20.2575, 4.788], [2.9944, 59.2189, 28.0398, 0.0, 0.0, 3.9192, 17.2471, 0.0, 11.9196, 0.0, 0.0, 19.0044, 0.0], [2.9944, 65.4228, 35.6593, 1.5372, 1.4774, 2.8152, 0.7855, 0.0, 3.1234, 5.0809, 3.946, 1.6493, 26.5227, 0.774], [3.8588, 68.2428, 33.8306, 2.2802, 0.9158, 1.8768, 1.3229, 11.7594, 4.2504, 3.6361, 1.0156, 17.9602, 1.386, 1.782], [5.8344, 58.655, 40.8405, 0.0, 1.9526, 5.244, 10.0608, 2.254, 4.1899, 3.0136, 2.1206, 27.358, 2.322, 1.3068], [3.9514, 63.1669, 39.6214, 1.8446, 6.5688, 1.757, 15.9405, 1.771, 2.3598, 2.2644, 2.7096, 16.2895, 5.922, 3.7323], [5.0936, 73.8827, 39.3166, 2.1265, 3.7536, 1.7363, 8.4929, 2.9302, 3.0822, 3.5131, 23.8078, 1.17], [2.84, 68.2428, 36.8784, 2.4083, 0.2592, 5.0232, 1.5709, 22.4735, 1.7388, 3.4675, 2.6973, 0.0, 24.6431, 1.08, 1.9503], [5.1862, 79.5226, 35.0497, 1.3066, 2.1686, 5.1336, 2.8111, 14.7646, 4.347, 4.1418, 2.8638, 3.0126, 24.852, 0.954, 1.7325], [5.464, 71.6267, 33.8306, 1.9471, 2.065, 7.0656, 1.943, 24.4334, 5.3774, 3.2508, 2.7806, 2.1711, 26.7315, 1.188, 1.8216], [7.9953, 89.6744, 41.7549, 0.4612, 8.9976, 1.8396, 18.0311, 4.6046, 3.4434, 4.0793, 2.6591, 24.2254, 1.062, 0.4653], [1.8213, 98.6982, 54.5556, 2.76, 1.0128, 19.4683, 4.4114, 3.0341, 0.0, 0.0, 40.3061, 0.0], [2.377, 103.7742, 56.9939, 15.6768, 0.0, 13.1967, 2.7692, 0.3853, 0.0, 34.4586, 0.0], [4.0131, 77.2666, 44.8027, 2.0752, 11.2056, 7.1725, 28.6145, 3.7352, 5.4421, 2.1645, 2.4235, 45.5271, 5.598], [7.9645, 62.6029, 54.8604, 1.9215, 2.6266, 11.6472, 0.9095, 29.9211, 6.7942, 8.0909, 2.6141, 0.4881, 42.6034, 6.858, 1.8909], [0.8335, 130.8457, 55.47, 0.0, 5.6856, 0.0, 27.0466, 1.932, 5.129, 0.0, 0.0, 30.6995, 1.332, 0.0], [4.8157, 98.6982, 55.7747, 2.0752, 5.3544, 6.5317, 32.1424, 6.6976, 9.5116, 2.2144, 1.3969, 32.9967, 1.854, 2.3661], [6.0814, 85.7265, 100.5774, 1.2041, 7.2864, 41.5499, 0.0, 0.0, 53.463, 0.0, 0.0], [0.4939, 129.7177, 65.8325, 0.0, 10.9848, 0.0, 37.1074, 1.0626, 8.7892, 0.9158, 58.0575, 3.528], [11.1441, 135.9216, 67.6612, 3.0744, 0.0, 5.796, 0.5374, 19.4683, 5.5062, 17.6025, 0.5494, 0.0, 47.8244, 2.43, 0.0], [11.2367, 184.4247, 112.7686, 3.5868, 9.6048], [7.8719, 119.0019, 63.3942, 0.8711, 2.6266, 17.1672, 3.1625, 34.6249, 3.542, 11.9196, 4.0793, 2.2721, 49.2862, 9.738, 0.9207], [5.0936, 181.6048, 51.203, 0.0, 1.6008, 0.0, 49.2588, 0.3864, 6.622, 0.0, 0.0, 71.2144, 4.824, 0.0], [5.6492, 160.1732, 77.4141, 0.0, 16.56, 5.6016, 25.6094, 6.1824, 7.8501, 0.0, 0.0, 87.0863, 4.572], [11.7306, 250.4116, 67.9659, 5.9695, 0.0, 10.0464, 2.5424, 63.2394, 2.9624], [7.0075, 157.3532, 71.9281, 0.0, 0.0, 1.0488, 5.8496, 53.7013, 6.5366, 19.4807, 1.2321, 0.0, 84.789, 5.166, 1.5543], [2.13, 174.8369, 75.8902, 2.1008, 5.2992, 6.9038, 68.3352, 0.2898, 7.3444, 1.5984, 79.568, 2.124, 0.0], [7.1927, 214.8802, 110.9399, 0.0, 1.1923, 10.5984, 5.1055, 39.982, 2.0286, 3.1545, 0.0, 0.0, 82.9095, 4.77, 0.0], [5.4022, 190.6286, 103.0156, 0.0, 7.9488, 0.0, 41.1579, 22.54, 11.0046, 0.0, 0.0, 98.3636, 5.436, 0.0], [8.9832, 363.2096, 165.8003], [3.3031, 241.3877, 131.9697, 18.3816, 1.4882, 45.339, 7.567, 5.5143, 9.324, 7.8428, 86.4598, 5.454, 0.0], [15.0337, 236.3118, 133.1889, 0.0, 21.0312, 2.9971, 49.5201, 21.252, 6.2126, 6.5268, 0.0, 111.7294, 5.652], [34.1422, 362.6456, 2.1335, 0.0, 17.664, 22.3429, 0.0, 0.0505, 159.3449, 11.214, 0.2772], [20.5903, 397.6129, 221.8798, 13.0918, 5.521, 29.1456, 13.9729, 77.3507, 3.2522, 13.3885, 1.382, 9.7951, 142.6377, 2.304], [18.3368, 533.5345, 243.824, 8.9158, 27.6552, 5.3122, 107.2719, 17.7422, 20.3235, 13.4532, 6.2608, 204.6632, 13.068, 1.9503], [21.3312, 496.3112, 291.3697, 6.9174, 2.5488, 56.4144, 8.2267, 114.0662, 15.5526, 35.9755, 19.8468, 2.7096, 195.2654, 7.506, 8.7516]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

