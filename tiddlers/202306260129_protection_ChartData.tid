created: 20230626012920000
creator: Drevarr
modified: 20230705163538606
modifier: drevarr
tags: ChartData
title: 202306260129_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Stark Wall", "Alarics Clone", "Palm Sauce", "Imalou", "Tribal S", "Ygyn", "Kosair", "Traidoruns Maximus", "Drevarr Moonwillow", "Astraea Lumena"];
const professions = ["Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[105.979, 63.189], [18.923, 33.637, 21.0038, 38.6906, 24.99, 31.3949, 34.8129, 67.384, 30.2408, 38.0171, 20.7972, 24.9724, 13.574, 36.4344, 12.2849], [0.0, 29.1616, 15.4737, 43.9138, 34.4362, 87.94, 21.857, 0.0, 27.8727, 19.7064, 15.1502, 28.764, 82.7761, 74.7711], [55.5451, 35.4982, 54.585, 25.4212, 75.937, 44.5029, 151.4306, 115.5851, 12.33, 52.697, 24.2189, 21.4975], [34.4678, 11.201, 20.5583, 48.4126, 12.2892, 55.7251, 38.3078, 135.5827, 18.8907, 61.5422, 5.3352, 0.0, 18.2007, 10.7875, 16.3118, 93.9775, 86.9805, 70.6035, 87.5043, 34.4005, 0.0, 0.0], [60.6296, 63.1039, 87.9984, 51.2554, 82.2944, 93.7584, 6.5239, 201.3737, 152.6022, 152.231, 80.5229], [7.5754, 63.851, 105.3238, 218.5497, 47.6982, 114.0936, 33.6456, 145.2173, 121.432, 212.2024, 0.0, 59.79], [14.2902, 26.8774, 46.1419, 47.6731, 9.5158, 100.584, 44.8195, 109.7332, 75.7266, 94.2971, 31.1364, 0.0, 68.4029, 27.2544, 27.7277, 144.6124, 91.8153, 112.345, 82.6289, 157.7073, 19.149, 30.318], [45.8816, 43.0529, 37.7962, 70.0652, 67.0712, 75.1925, 30.6398, 132.018, 5.5543, 62.9633, 36.882, 52.7136, 16.8739, 87.4997, 45.031, 200.8937, 61.5519, 81.5859, 74.9631, 86.7877, 61.7552, 17.844], [23.6171, 45.0749, 23.8729, 124.2557, 0.0, 88.1496, 69.4773, 278.7838, 32.8349, 201.7919, 14.1804, 32.6759, 74.6739, 57.2424, 49.3068, 209.8091, 192.5352]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

