created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Enter Effore", "Shandalar V Basing", "Sakis Ranger", "Drevarr Moonwillow", "Gabe Malhorn", "Klenga", "Aronorf Xideliesi", "Sygaldry Verdandi", "Tika Fiery", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.5294, 7.7215, 7.8585, 17.0294, 12.27, 23.5987, 25.5154, 23.4027, 13.739], [0.0, 0.0, 36.33, 38.6906, 80.4794, 0.0], [39.7366, 0.0, 0.518, 32.8442, 4.9312, 46.4678, 22.7247, 0.0, 1.4391, 4.3331, 0.6149, 11.7075, 19.8778, 0.0, 16.3699], [6.5305, 34.1807, 2.3779, 9.5623, 8.8578, 22.1224, 12.8928, 5.8405, 34.5345, 5.535, 4.9077, 1.146, 7.7438, 15.5765, 19.0122, 10.8367, 0.0], [80.0771, 22.0483, 8.174, 0.2812, 53.4737, 42.6805, 4.3993, 95.199, 0.0369, 24.5146, 0.2236, 20.4488, 0.0, 56.9559, 12.361], [65.7505, 94.772, 14.7942, 4.4548, 64.7463, 47.502, 90.6256, 0.0, 23.673, 16.1068, 8.0438, 21.9128], [12.259, 58.2562, 18.7372, 0.0, 0.0, 74.465, 33.9201, 28.236, 20.3688, 25.7834, 0.0, 107.8612, 40.2358, 60.7422, 14.9292], [0.0, 100.65, 14.2975, 7.5524, 54.8309, 14.3205, 40.0725, 7.4907, 35.1439, 88.0425, 22.89, 56.6683, 108.8366, 0.0], [11.9917, 30.0742, 6.321, 0.1347, 0.0, 0.3619, 35.6164, 0.0, 29.991, 18.1179, 27.7465, 31.9748, 51.765, 57.9838, 92.2009, 0.2088, 201.906], [44.9114, 141.3126, 32.7638, 9.8524, 15.2129, 58.1334, 97.6361, 24.0596, 60.177, 25.6639, 37.897, 60.931, 98.28, 83.4574, 84.6283, 27.144], [77.0292, 114.5397, 14.5082, 1.8959, 55.5229, 33.3419, 133.1987, 21.7386, 74.958, 15.3688, 11.3954, 40.4996, 102.5325, 99.9108, 213.1215, 19.6898, 229.662]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

