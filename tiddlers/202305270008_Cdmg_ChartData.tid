created: 20230527000807000
creator: Drevarr
modified: 20230705163531637
modifier: drevarr
tags: ChartData
title: 202305270008_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Bee", "Chrozz", "Eibh\u00ebar", "Bella Sassy", "Kosair", "High Sorcer Baradun", "Mistwalker Cael", "Aronorf Xideliesi", "Lucas Ryn", "Sumatra Satyricon", "Kary\u00edna", "Lord Erin The Wise", "Miphest\u00f6", "Zefirokai", "Maw Rev", "Cedryn X", "Solus Sanctus", "Tika Fiery", "Rozaalyna", "Sofya De Nova", "Melli Dragonswrath", "Hauzzy", "Kosair", "Smol Gluvs", "Legacy Of Mathus", "Xanvias Einzbern", "Panther B Me", "Gavann"];
const professions = ["Vindicator", "Willbender", "Chronomancer", "Firebrand", "Guardian", "Weaver", "Vindicator", "Firebrand", "Firebrand", "Soulbeast", "Vindicator", "Weaver", "Tempest", "Tempest", "Renegade", "Berserker", "Firebrand", "Firebrand", "Scourge", "Weaver", "Berserker", "Berserker", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.9792, 8.0497, 0.0, 0.0, 0.0, 18.9367, 4.3378, 10.4868, 8.9618, 3.7045, 0.0, 0.0, 2.125, 26.6836, 14.9462, 1.087, 0.0, 5.1244, 0.0, 4.1277, 4.2162, 3.5352, 24.1963, 1.0854, 0.0], [11.0755, 12.411, 0.0, 14.0, 0.0, 12.6414, 26.7162, 12.8026, 4.9924, 0.2045, 0.948, 0.0, 0.0, 3.8867, 47.2366, 0.0, 0.0, 4.9043, 0.0, 8.6596, 8.8559, 17.8592, 43.55, 1.5981, 0.5122, 7.3704], [17.9323, 6.233, 4.1532, 2.7895, 0.0625, 14.9177, 8.1757, 25.2039, 20.1756, 2.5455, 5.3815, 0.0, 10.3125, 13.5039, 10.9677, 1.3188, 1.2407, 1.0574, 1.4242, 0.0, 11.4685, 6.493, 17.425, 1.2336, 5.9512, 8.1358], [5.9688, 3.3743, 0.0, 10.7368, 0.0, 53.7321, 4.1757, 24.1513, 4.8702, 0.9318, 0.0, 0.0, 0.0, 3.2773, 0.0, 0.4409, 0.058, 0.7407, 0.0, 0.0, 21.7234, 1.5946, 1.0458, 5.775, 0.0, 0.0, 2.716], [48.1159, 7.2593, 39.1244, 116.6364, 232.4865], [24.2083, 18.5052, 0.0, 0.0, 9.7025, 0.0, 17.75, 84.458, 6.0694, 0.0, 0.0833, 18.8359, 0.0, 16.6344, 0.0, 0.0, 0.0, 0.0, 19.6216, 5.162, 12.972, 0.0, 0.0], [19.0677, 10.1806, 0.0, 89.0789, 0.0, 21.9895, 9.2432, 15.25, 11.8702, 0.0, 4.3873, 19.4681, 2.0312, 3.543, 0.0, 5.8495, 13.7174, 0.0, 4.1962, 13.0, 0.0, 13.0721, 20.9577, 4.225, 2.2336, 17.6707, 18.6049], [16.4609, 14.3927, 0.0, 20.9737, 4.1772, 2.4324, 65.8158, 70.229, 22.3182, 2.6416, 46.8936, 0.5729, 1.957, 9.3871, 4.0, 8.0, 1.9091, 0.0, 34.7027, 6.838, 7.271, 9.378, 16.5432], [18.2266, 13.623, 0.0, 9.2632, 0.0, 11.4958, 0.0, 15.4013, 36.9924, 28.0909, 0.0, 0.0, 7.1771, 15.9531, 0.0, 28.4409, 4.1304, 2.5926, 19.9952, 1.7879, 27.8919, 17.0704, 98.625, 16.6449, 1.0183, 29.7901], [44.2917, 8.9476, 0.0, 1.7368, 0.0, 10.8038, 0.0, 30.0526, 13.2519, 8.3409, 19.474, 2.9574, 5.6354, 23.1289, 0.0, 0.3118, 8.4545, 0.0, 0.0, 3.6216, 12.669, 20.325, 39.3551, 14.872, 18.9753], [30.8854, 12.6675, 0.0, 50.2105, 0.0, 22.0485, 5.0135, 41.375, 35.9771, 0.0, 0.0, 10.4468, 0.9896, 11.1875, 0.0, 19.6129, 6.8913, 5.7037, 10.7943, 0.697, 0.0, 7.6036, 19.338, 4.975, 0.0, 10.6768, 12.5185], [28.0365, 32.5497, 0.0, 1.5789, 0.0, 31.192, 15.7973, 28.2105, 98.9924, 1.4091, 19.5491], [12.612, 3.466, 0.0, 20.7511, 2.5, 28.0263, 99.0305, 0.0, 0.0, 1.3723, 16.1042, 38.2852, 0.0645, 91.7742, 4.4058, 1.9569, 0.0, 31.0638, 7.9009, 11.4014], [52.8229, 44.4372, 0.4919, 0.0, 0.0, 2.481, 0.0, 71.9671, 77.7405, 0.0, 6.7919], [12.4149, 31.2812, 42.7344, 189.6774, 32.0, 0.0, 21.7225, 12.0606, 41.2342, 28.581, 26.85, 58.5047, 17.7073, 43.7901], [19.0729, 19.3089, 0.1129, 4.2632, 0.0, 17.6688, 88.1622, 36.25, 97.4962, 0.0, 6.5607, 0.5745, 8.8854, 10.8164, 16.6882, 1.2029, 0.0, 4.4545, 0.5758, 19.0631, 19.6197, 7.925, 25.3271, 11.439, 14.6049], [24.5677, 32.7539, 0.4274, 0.0, 0.0, 29.2532, 5.2703, 23.7961, 35.9237, 0.0, 1.0058, 0.0, 0.0, 7.6406, 1.1183, 2.1232, 1.5926, 9.1148, 0.0, 59.4468, 30.2072, 20.0599, 148.475, 4.0841, 20.9939, 7.321], [28.3203, 16.3586, 6.5887, 8.6579, 0.0, 35.7806, 27.7973, 81.1776, 97.4885, 0.0, 4.8324, 3.0106, 7.9062, 26.6016, 0.0, 39.9785, 1.0217, 0.0, 2.4545, 15.9091, 0.0, 13.036, 22.9472, 2.625, 13.6542, 13.3963, 34.4691], [35.5599, 25.2304, 0.0, 1.1842, 90.6181, 1.7297, 85.7566, 69.4427, 0.5682, 0.1908, 1.9894, 10.1146, 10.0586, 0.0, 6.8065, 1.6746, 12.1818, 0.0, 83.8288, 10.0493], [19.9661, 25.6754, 0.371, 68.5263, 0.0, 58.8207, 12.1216, 90.1382, 41.2672, 9.1136, 1.2428, 51.6915, 0.0, 25.2383, 6.6129, 60.828, 23.0, 0.0, 5.8182, 14.1818, 40.3617, 22.6577, 17.1585, 0.0, 13.1121, 30.3049, 30.0741], [62.7708, 39.3927, 0.0, 17.3947, 0.0, 51.6667, 46.7162, 141.9079, 110.1374, 0.0, 4.4509, 0.0, 19.3854, 18.1953, 0.0, 65.7204, 15.7899, 0.0, 1.7321, 1.4545, 0.0, 9.9279, 8.1092, 0.0, 11.4953, 0.0, 0.1481], [77.3646, 50.7932, 0.0, 17.4474, 0.0, 72.5063, 1.4459, 107.5329, 235.5573, 7.6136, 1.7283], [80.5417, 38.6309, 0.1774, 19.1842, 16.5312, 91.9873, 59.8649, 105.2039, 56.6947, 0.5455, 19.5029, 8.7447, 3.5833, 17.8633, 0.0, 54.4301], [47.6224, 22.4581, 0.0, 30.9474, 0.0, 60.7173, 7.0, 81.5263, 92.2748, 15.6591, 5.6012, 9.5745, 54.8333, 43.1406, 9.0968, 56.6774, 11.7464, 0.0, 25.4737, 85.7273, 126.9787, 37.7387, 18.1021, 147.575, 46.028], [53.4583, 44.055, 0.0, 21.5789, 0.0, 79.7658, 52.4459, 78.3158, 70.2977, 0.0, 12.4393, 1.0532, 72.1979, 16.5586, 0.0, 109.914, 24.5652, 0.0, 10.4689, 10.303, 23.6126, 17.1444, 0.0, 70.7664, 14.372, 23.9753], [60.9531, 40.3613, 0.0, 0.0, 0.0, 101.0211, 51.9189, 92.0263, 133.916, 0.0, 4.104, 11.7128, 0.2604, 48.8516, 0.0, 95.0215, 1.8333, 0.0, 1.5167, 0.0, 0.0, 45.973, 22.419, 0.0, 0.0, 32.3537, 0.0], [35.237, 29.7304, 0.0, 108.5263, 0.0, 114.4662, 39.1216, 56.6974, 69.9618, 11.4091, 23.3121, 39.6064, 13.75, 50.1953, 0.0, 43.1828, 2.413, 0.0, 20.6077, 0.1515, 14.8298, 95.9279, 38.2782, 18.95, 43.1682, 17.4146, 52.716], [117.7266, 163.3115, 24.4194, 241.4219, 204.0987, 377.145, 0.0, 9.4624, 61.9787, 13.5938]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

