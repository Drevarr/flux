created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Arcanophage Farra", "Eibh\u00ebar", "Yummy Kiwi", "Tootsie Pop Rocks", "Legacy Of Mathus", "Bella Sassy", "Rozaalyna", "Glorious Gluvs", "Drevarr Moonwillow", "Vee Usagi", "Darks Na", "Rafaellagabriela", "Mistwalker Cael", "Be\u00eb", "Luke The Ghastly", "Nose Llama", "Solus Luxes", "Sygaldry Verdandi", "Vee Usagi", "Elonith Requiem", "Daphne Agla\u00e9", "Lord Erin The Wise", "Sub Train", "Be\u00eb", "\u00c1rk\u00e1ntor", "Kosa\u00efr", "Mike The Archmagus", "Rina Of Theros", "Alarics Bane", "Xanvias Tsolice", "Charr Surethang", "Jimbo The Pleb"];
const professions = ["Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Reaper", "Berserker", "Scrapper", "Scourge", "Firebrand", "Firebrand", "Herald", "Scourge", "Scourge", "Tempest", "Firebrand", "Firebrand", "Reaper", "Reaper", "Scourge", "Weaver", "Dragonhunter", "Reaper", "Reaper", "Weaver", "Weaver", "Scourge", "Reaper", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.6429, 23.2673, 26.3095, 13.2593], [0.5128, 3.7197, 29.0217, 0.0, 0.0, 4.9524, 0.0, 2.2667, 0.0, 0.0, 8.6515, 0.0, 0.6329, 0.0, 0.0, 0.0, 0.0, 0.0, 29.5644, 8.8651, 1.5926], [6.8645, 2.4015, 1.2391, 0.0, 10.6966, 0.0, 0.0, 5.1667, 8.6786, 0.0, 15.4091, 0.0, 2.7089, 1.4, 35.0923, 5.8926, 0.0, 1.5714, 7.1089, 5.5317, 0.9753], [0.0, 2.7283, 0.0, 4.4286, 0.0, 4.1444, 52.8929, 0.0, 13.4545, 9.6848, 18.8987, 4.6824, 3.6923, 0.0, 6.2817, 0.0, 5.7327, 16.5556, 22.4444], [7.6264, 10.5682, 0.8587, 1.3077, 9.4944, 25.119, 0.0, 4.9222, 3.4286, 0.0, 1.4697, 2.7065, 0.2025, 0.0, 7.0923, 3.9835, 5.507, 0.3429, 5.4059, 16.6905, 1.4444], [37.7546, 15.4091, 2.663], [24.3846, 0.0152, 0.0, 0.0, 0.4831, 0.0, 14.7727, 2.3, 0.0, 0.0, 0.0, 0.4022, 5.6709, 17.7765, 0.0, 4.1074, 5.5352, 4.8143, 0.0, 16.9206, 0.5802], [3.1136, 0.1413, 19.1573, 12.0476, 0.3864, 15.2556, 0.0, 0.0645, 3.3485, 1.0652, 74.8987, 0.5647, 6.6154, 14.4628, 3.7324, 24.5857], [12.0549, 0.0, 7.1848, 0.3708, 22.2143, 0.0, 26.4444, 0.0, 0.0, 0.8182, 0.0, 48.2025, 1.0118, 4.2769, 0.0, 15.3239, 0.0, 34.0, 0.0, 0.0], [10.685, 1.6364, 5.2391, 0.0, 13.7753, 31.9286, 0.0, 20.5111, 9.1429, 0.0, 12.2727, 0.0, 14.7342, 1.5294, 9.4615, 3.7355, 32.2817, 5.2, 5.4653, 15.0079, 1.9506], [67.011], [10.4689, 6.8258, 8.587, 38.6067, 8.9643, 0.9773, 14.0222, 0.0, 5.8387, 16.7879, 10.2283, 33.0253, 4.8706, 19.0615, 10.8182, 4.4366, 3.9714, 0.0, 3.4921, 2.716], [23.9744, 2.3106, 4.4348, 8.5618, 46.3571, 0.0, 3.6778, 5.1786, 0.0, 4.5152, 0.0, 2.3038, 0.7882, 8.7692, 3.3471, 48.1549, 8.6429, 3.9208, 18.8968, 0.3333], [6.0293, 1.7727, 15.6087, 0.0, 0.0, 2.25, 0.0, 11.8667, 49.2857, 0.0, 8.8939, 0.0, 37.4937, 0.0, 41.5231, 6.6281, 3.5775, 16.0286, 18.0396, 25.5873, 29.0988], [80.1136], [57.5311, 59.8712], [16.1465, 1.7348, 21.5109, 0.0, 27.5357, 0.0, 10.2556, 6.3214, 0.0645, 1.1061, 7.0652, 37.9494, 2.1059, 0.0, 2.0331, 0.0, 1.8857, 15.7525, 57.1508, 10.4815], [18.5495, 0.0, 8.663, 1.0, 49.9213, 13.3095, 2.25, 9.9889, 0.0, 9.129, 0.0, 3.3804, 24.6329, 0.0, 13.6154, 0.0413, 85.7183, 23.0571, 2.7723, 6.4524, 4.4938], [10.674, 9.0227, 0.0, 46.6517, 44.619, 0.0, 48.6111, 77.5714, 0.0, 1.9848, 18.087, 23.9747, 3.3176, 4.1077, 5.3967, 13.6197, 0.0, 4.5248, 10.4683, 0.6543], [14.2348, 72.9891, 10.1154, 8.8539, 4.8095, 5.5682, 13.7222, 0.0, 1.871, 59.3182, 21.2283, 0.0253, 8.2, 17.0, 7.3306, 20.8592, 28.1571, 10.2376, 23.9841, 21.3827], [6.2609, 0.3077, 17.3034, 0.7857, 0.5, 12.1222, 12.5714, 23.9355, 82.9545, 16.2826, 1.6076, 14.9882, 44.9231, 34.1983, 78.2817, 22.3143, 0.2871, 50.4683, 0.0], [25.5788, 10.4773, 26.1413, 58.809, 15.1071, 1.7273, 40.1333, 0.0, 3.1515, 11.5217, 42.2278, 1.8353, 84.2154, 2.2231, 1.2535, 30.8286, 5.3762, 23.6667, 9.0494], [59.9927, 16.7727, 31.7391, 0.0, 42.2135, 13.7381, 48.3889, 0.0, 1.5806, 8.9891, 51.1646, 7.7176, 8.6769, 22.0496, 37.9437, 16.5143], [23.0879, 49.6894, 23.0761, 6.8462, 39.0899, 53.3929, 40.8864, 51.7, 18.8929, 4.2581, 21.4697, 0.0, 55.8101, 24.4235, 77.7385, 14.0331, 33.0563], [21.1818, 9.5217, 15.1538, 34.573, 25.0, 0.0, 40.9333, 13.9643, 0.6129, 39.5606, 3.7826, 71.2405, 16.0353, 18.6308, 11.4298, 51.7042, 32.7857, 26.2277, 79.619, 34.8148], [36.6117, 14.303, 10.7717, 9.7692, 0.0, 23.7857, 23.2045, 52.9889, 92.9643, 21.4194, 74.3485, 34.5761, 110.3418, 31.9765, 28.0, 47.9917], [33.1538, 22.3182, 81.0, 0.0, 0.0, 14.5833, 7.2955, 40.3222, 0.0, 49.2258, 32.4091, 2.6304, 23.4177, 29.4941, 3.7846, 25.2397, 0.0, 50.8286, 2.6931, 77.9921, 32.1111], [2.1923, 52.236, 111.6786, 35.6364, 10.4667, 12.6429, 41.3871, 48.5606, 0.9239, 80.2911, 34.2941, 51.1231, 43.7438, 91.0845, 13.3429, 50.9703, 18.5159, 30.5309], [24.8828, 11.7174, 154.2584, 56.5952, 99.2727, 87.7889, 2.1429, 4.2903, 17.3333, 1.5543, 120.8101, 3.2588, 50.4, 8.9256, 6.9437, 25.1, 11.1188, 108.9206, 19.0], [66.1319, 7.8939, 21.0435, 22.9231, 16.0, 214.369, 0.25, 30.8, 122.3571, 7.5806, 84.2576, 2.5652, 92.9367, 43.0235, 42.6154, 12.1736, 40.7465, 4.7857, 7.6733, 53.9365, 8.2593], [96.2711, 13.6439, 20.2935, 0.1923, 149.4045, 130.8929, 3.5682, 27.9111, 0.0, 22.6774, 37.6364, 46.0, 173.3797, 11.3647, 76.0615, 44.562, 42.9718, 6.9143, 2.0693, 81.7937, 11.0247], [308.7753, 58.4643, 0.0, 51.5444, 13.1935, 90.5, 88.4239, 110.4557, 61.2118, 107.1692, 35.6364, 34.9014, 75.7286, 90.8119, 87.7619, 150.7778], [119.4212, 39.1591, 12.0652, 0.0, 54.6629, 100.7619, 0.0, 30.7333, 0.0, 75.0645, 79.4091, 13.0543, 143.962, 33.7647, 22.0923, 42.9339, 86.831, 55.5429, 4.495, 150.1587, 54.7901]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

