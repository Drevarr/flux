created: 20230401000636000
creator: Drevarr
modified: 20230705163523561
modifier: drevarr
tags: ChartData
title: 202304010006_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Legacy Of Mathus", "Arriasa", "Oo Dads Mad", "Xyntharos", "Jeckyll Mbs", "Sassy Daddy Demon", "High Sorcer Baradun", "Fungus", "Whose Guardian", "Blancooo Padreee", "Mistwalker Caelon", "Mac Chiato", "Raziel Umbra", "Johosh The Great", "Xanvias Tlesel", "Zaylen Harker", "Smol Daddy Tika", "Zadie Miststep", "Air One Com", "Koralia Danai", "Lord Erin The Wise", "Ju\u00e7", "Cat Wigglebooty", "Sp\u00edcy Cheese", "Ark Darkness", "Tegan Parker", "Aronorf Xideliesi", "Estryl", "Abigail Ryn", "Sister Elon\u00edth", "Mike The Archmagus", "Ateriuz", "Primal Clone", "Brioche Bunbringer", "Arcanophage Farra", "Bella Lunabringer", "Il Kurai Il", "Ryvalia Fazebringer", "Dark Sidiuz", "Grasszanine", "Newtype Khan", "Drevarr Moonwillow", "Rozaalyna", "Smol Gluvs", "Rina Of Theros", "Nazhul Naxxremis", "Panther B Me", "Be\u00eb"];
const professions = ["Firebrand", "Berserker", "Druid", "Spellbreaker", "Vindicator", "Berserker", "Vindicator", "Tempest", "Scourge", "Firebrand", "Berserker", "Vindicator", "Tempest", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Tempest", "Dragonhunter", "Tempest", "Berserker", "Chronomancer", "Chronomancer", "Spellbreaker", "Firebrand", "Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[827, 3585, 2688, 1914, 4384, 0, 0, 1230, 3591, 0, 2092, 0, 0, 2406], [3910, 0, 0, 1109, 85, 3946, 0, 0, 4586, 0, 3063, 0, 0, 0, 0, 3869, 2402, 0, 269, 0, 0, 1248], [0, 0, 6210, 5708, 1233, 0, 276, 4919, 4919, 0, 0, 0, 0, 0, 3745], [2420, 1766, 0, 133, 1483, 2234, 4796, 1188, 3080, 0, 6321, 0, 0, 2355, 0, 1398, 2180, 0, 0, 289], [0, 0, 0, 0, 1093, 3693, 2912, 261, 1188, 0, 0, 0, 0, 1252, 0, 0, 7249, 2870, 2538, 0, 1450, 141, 0, 1188, 0, 0, 1248, 0, 0, 2714], [0, 0, 1450, 2223, 4589, 3366, 2376, 0, 1376, 0, 1190, 2378, 0, 0, 3135, 0, 5463, 0, 2376], [2604, 0, 1094, 181, 0, 0, 4831, 0, 219, 0, 1188, 0, 0, 2043, 733, 0, 1416, 0, 0, 0, 885, 0, 0, 3602, 2552, 0, 1238, 0, 0, 8434], [3861, 0, 5125, 1230, 4, 5374, 0, 0, 5750, 0, 3821, 0, 261, 8562], [621, 0, 11098, 5939, 3485, 4910, 0, 0, 6544, 0, 0, 2507], [65, 261, 2342, 2317, 0, 4707, 0, 1398, 2856, 0, 1188, 0, 1246, 3052, 466, 0, 2401, 5242, 0, 0, 2675, 6564, 0, 261, 0, 1167], [3086, 0, 2965, 0, 0, 1127, 5857, 0, 7069, 0, 1209, 0, 1188, 4263, 0, 0, 846, 0, 0, 2420, 0, 3152, 4312, 0, 1628, 0, 0, 0], [1188, 228, 1645, 3607, 2491, 6901, 0, 0, 6174, 0, 4371, 0, 0, 0, 0, 0, 4737, 0, 0, 0, 3308, 0, 0, 0, 1049, 0, 1248, 606, 0, 2465], [0, 311, 5965, 0, 0, 3393, 4874, 0, 2634, 0, 13291, 0, 0, 521, 0, 0, 0, 0, 516, 0, 3139, 0, 0, 2854, 0, 0, 0, 0, 0, 2761], [0, 464, 4119, 1188, 1188, 2432, 2875, 0, 3110, 0, 10438, 0, 959, 5806, 0, 261, 2832, 0, 1150, 0, 0, 0, 0, 3698, 0, 0, 0, 0, 0, 0], [0, 294, 1443, 0, 3392, 3400, 3905, 290, 4356, 0, 3048, 0, 0, 8420, 435, 0, 358, 1416, 0, 3096, 0, 2198, 1245, 0, 2763, 337, 0, 337], [2636, 261, 1220, 167, 0, 5644, 0, 2849, 3407, 0, 0, 0, 0, 547, 1111, 7367, 1188, 0, 0, 228, 3383, 261, 3082, 946, 0, 0, 0, 0, 7483], [2387, 0, 8823, 162, 175, 2413, 605, 41, 7448, 0, 9359, 0, 0, 1724, 0, 157, 2420, 1188, 292, 2729, 1188, 0, 914, 0, 358, 0, 0, 1248], [3896, 224, 0, 1189, 0, 0, 3766, 0, 5677, 0, 4589, 0, 0, 2413, 1188, 0, 2418, 0, 2634, 0, 261, 4139, 0, 228, 3209, 0, 3950, 0, 0, 5895], [3834, 0, 7131, 0, 0, 5429, 235, 974, 6713, 0, 0, 0, 1544, 5644, 0, 0, 6815, 0, 0, 0, 4279, 0, 0, 228, 88, 1248, 0, 0, 3287], [2634, 0, 4274, 528, 2681, 5972, 0, 2376, 9265, 0, 0, 0, 474, 1675, 200, 5016, 228, 1188, 1263, 3829, 261, 0, 0, 2762, 0, 0, 4263], [5794, 0, 3610, 1843, 1449, 7451, 1941, 0, 6014, 2027, 0, 0, 0, 276, 0, 6104, 1188, 0, 0, 0, 0, 2926, 3186, 0, 0, 0, 0, 5134], [3594, 1741, 0, 418, 261, 4367, 4586, 2648, 3772, 0, 3629, 0, 2839, 5720, 0, 261, 6060, 0, 357, 0, 7148, 0, 0, 0, 0, 0, 0, 0, 3138], [3608, 7741, 1914, 0, 5229, 0, 0, 0, 1823, 7943, 1188, 10922, 1264, 0, 3010, 261, 0, 1649, 2542, 0, 1248, 606, 0, 2438], [8111, 338, 5643, 2840, 3133, 4029, 8346, 3433, 9696, 0, 6833, 0, 0, 3897], [5569, 5256, 2527, 4903, 0, 8431, 6058, 0, 1188, 0, 1180, 1244, 3732, 3, 4409, 0, 2342, 0, 578, 1191, 0, 2515, 220, 0, 2412, 0, 2552], [4071, 0, 5094, 2, 4559, 7999, 6000, 839, 12135, 0, 0, 0, 0, 5223, 0, 4035, 2420, 0, 0, 2911, 1248, 0], [4582, 0, 3077, 1188, 0, 5471, 3563, 0, 4595, 0, 4101, 0, 0, 3622, 0, 0, 0, 5517, 3520, 0, 0, 1794, 0, 6026, 3033, 0, 1244, 0, 0, 7468], [1776, 0, 1629, 1354, 3009, 4658, 7245, 276, 4758, 0, 6397, 0, 0, 5368, 1244, 7546, 228, 0, 0, 0, 5964, 0, 176, 1135, 2467, 0, 0, 8221], [4910, 0, 5765, 0, 1247, 11039, 9296, 228, 1952, 0, 4305, 0, 3929, 782, 289, 3971, 0, 0, 0, 261, 1188, 0, 7094, 555, 0, 5000, 337, 0, 1527], [0, 0, 11223, 0, 10711, 9090, 6375, 0, 12224, 0, 5464, 0, 227, 10388], [10929, 4996, 6022, 100, 2420, 0, 6259, 1188, 9829, 0, 1223, 12986, 0, 0, 2, 1470, 3091, 0, 0, 0, 0, 1486, 0, 0, 4156], [10868, 149, 3842, 1860, 6202, 4653, 3608, 834, 0, 0, 11948, 0, 266, 6642, 0, 0, 5460, 228, 0, 0, 0, 2285, 3324, 3534, 1738, 0, 0, 4427], [0, 6107, 3614, 9141, 10741, 0, 0, 8609, 0, 8767, 0, 294, 4461, 0, 0, 7623, 1188, 3094, 0, 228, 3608, 0, 0, 0, 0, 6163, 0, 0, 0], [8407, 0, 5627, 2370, 3608, 2168, 2445, 0, 5073, 590, 12957, 4, 8304, 0, 0, 4806, 1505, 1720, 0, 2376, 0, 0, 6959, 232, 0, 1248, 0, 0, 3857], [3694, 127, 0, 1698, 0, 8978, 3686, 1244, 1570, 607, 8561, 0, 2385, 11080, 900, 14588, 1416, 0, 0, 944, 4338, 0, 5859, 0, 0, 0, 0, 847, 2735], [9089, 3827, 11042, 1933, 0, 14471, 8253, 0, 10538, 240, 16659, 0, 1945, 1182], [3049, 228, 5241, 4865, 5821, 3922, 7021, 4647, 4898, 81, 2669, 0, 1394, 7997, 0, 0, 13491, 2234, 0, 0, 1253, 0, 7231, 0, 0, 0, 0, 0, 5576], [2434, 1308, 16065, 5040, 7317, 7388, 23445, 2188, 11229, 5714], [5011, 1742, 9370, 4951, 2091, 8150, 5089, 1192, 219, 0, 5101, 0, 6, 6483, 2288, 0, 9910, 2302, 6262, 3721, 3940, 0, 5353, 232, 0, 1042, 0, 0, 4038], [12843, 1677, 719, 3948, 10268, 11719, 475, 12602, 0, 2443, 0, 261, 6436, 4527, 228, 4733, 0, 7525, 7590, 0, 5690, 5595, 0, 3706], [3362, 4589, 5778, 7336, 12601, 9413, 7137, 4463, 7292, 0, 11784, 2625, 4720, 6036, 0, 7958, 0, 7244, 4754, 5095, 0, 4704, 2703, 0, 1248, 0, 0, 3429], [12169, 4373, 9734, 5994, 4812, 13113, 2615, 2376, 10591, 0, 9064, 0, 2328, 11210, 0, 8024, 1514, 4307, 6351, 3892, 0, 6304, 5882, 0, 0, 0, 0, 10171], [6377, 2225, 7660, 5192, 6889, 7077, 14332, 301, 8130, 0, 6961, 0, 670, 12688, 1038, 0, 21404, 1294, 5749, 4906, 4174, 0, 6243, 2392, 0, 720, 344, 0, 10598], [9724, 974, 13843, 9525, 417, 19957, 15281, 0, 0, 2680, 0, 212, 23089, 0, 20598, 5257, 0, 6368, 7927, 0, 3589, 3236, 2507, 0, 0, 6061], [2798, 2502, 10467, 0, 4808, 7277, 19087, 2716, 14505, 277, 5786, 0, 2072, 12440, 993, 0, 20087, 7210, 4681, 0, 8432, 3846, 0, 5377, 771, 0, 8096, 0, 0, 14359], [15593, 0, 7801, 6155, 0, 18696, 10117, 2420, 14422, 0, 20015, 0, 3432, 11117, 1019, 21273, 0, 1503, 0, 3399, 5729, 0, 4553, 1248, 0, 3919, 0, 0, 6501], [20681, 1486, 3493, 10828, 12547, 10029, 18659, 3372, 12043, 0, 5786, 0, 2376, 22003, 1447, 0, 12796, 1449, 6824, 0, 9927, 6955, 0, 4306, 2362, 2612, 0, 0], [3773, 2726, 13616, 6413, 6091, 13558, 10906, 488, 24604, 0, 5157, 0, 1583, 18692, 1996, 206, 23944, 7158, 0, 0, 4977, 261, 0, 13103, 1157, 0, 5975, 0, 0, 9069], [15055, 2244, 7560, 6740, 12998, 22269, 22204, 168, 17608, 0, 21040, 0, 2183, 17067, 324, 15384, 4975, 5481, 0, 9738, 4944, 0, 9039, 5635, 0, 3516, 0, 0, 15300]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

