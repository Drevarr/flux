created: 20230701101710000
creator: Drevarr
modified: 20230705163540472
modifier: drevarr
tags: ChartData
title: 202307011017_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Requiem", "Valkren Sothur", "Legacy Of Mathus", "Sakis Ranger", "F\u00f9gly", "Wall Knot", "Drumina", "Ryvalia Fazebringer", "Gestern Yesteryear", "Sister Elonith", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Scourge", "Dragonhunter", "Berserker", "Druid", "Tempest", "Firebrand", "Druid", "Chronomancer", "Firebrand", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.4876, 20.5356, 0.0, 1.3406, 3.0278, 0.0, 0.4928, 1.0483, 2.304], [8.7641, 22.533], [0.0, 1.738, 3.9962, 5.106, 0.0, 0.0, 12.6699, 0.0, 0.0, 4.5587, 0.0, 0.4749, 5.0688], [1.7545, 5.8779, 1.8075, 2.0202, 1.8619, 4.2581, 11.8232, 12.099], [20.3393, 26.5845], [4.7175, 1.3809, 4.6368, 29.3433, 4.3571, 9.4462, 0.0, 0.6272, 4.0768, 4.176], [4.7814, 0.0, 5.214, 7.7444, 13.209, 0.4888, 1.3009, 20.0646, 1.5935, 2.1092, 0.0, 5.6986, 2.0339, 2.8512], [14.1107, 14.319, 3.2444, 4.1216, 16.0611, 0.0, 0.0, 0.0, 3.2346, 5.2595, 7.5168], [5.0523, 0.0, 4.5566, 0.0, 0.0, 4.6752, 7.2207, 24.1425, 1.5092, 3.1878, 9.8439, 0.0, 2.5225, 0.0, 2.2938, 3.7363, 2.2176], [5.7876, 2.1924, 3.4992, 10.7562, 1.8533, 14.1126, 11.4374, 19.536, 2.4868], [4.4021, 21.4817, 34.5878, 71.5395, 6.2994, 5.7831, 55.3896, 2.9365, 5.927, 8.7658, 2.4665, 9.2109, 12.3469, 12.9168], [21.3304, 3.1109, 7.7127, 6.7704, 0.0, 19.257, 25.9891, 65.157, 7.7964, 0.0, 58.0743, 3.353, 8.2849, 6.8834, 11.5136, 17.7139]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

