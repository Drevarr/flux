created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Rafaellagabriela", "Pl\u00eeo", "Crusader Siolith", "Rahani Sunray", "Solus Luxes", "Arcanophage Farra", "Sygaldry Verdandi", "Miphest\u00f6", "Primal Clone", "Eibh\u00ebar", "Cat Wigglebooty", "Tootsie Pop Rocks", "Etchery Howls", "Drevarr Moonwillow", "Tegan Parker", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Druid", "Scrapper", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 3.0, 6.9922, 0.0, 0.0, 2.1458, 0.0, 0.0, 11.0676, 28.0124, 27.7423, 0.9939, 0.0, 0.0, 2.9714, 5.0267, 18.0631, 0.9915, 14.0292, 15.4182, 0.0, 6.9385, 8.9677, 0.0, 9.0159], [2.0, 10.4746, 0.0, 0.0, 0.0, 13.0946, 33.1801, 23.135, 14.9816, 0.0, 0.0, 0.0, 4.0133, 12.009, 0.0, 19.0219, 3.0182, 0.0, 9.0154, 15.0323, 11.1154, 11.0159], [0.0, 0.0, 20.018, 12.0078, 0.0, 4.9492, 5.0052, 0.0, 4.0135, 16.0, 9.9939, 13.9816, 0.0, 4.9091, 0.0, 19.1067, 31.0721, 0.0, 7.0, 0.0, 0.0, 8.8615, 0.9892, 1.9615, 7.0159], [0.0, 12.1611, 0.0, 3.0, 0.0, 17.0144, 33.3566, 4.0167, 20.8644, 9.0104, 12.0476, 8.0405, 42.323, 8.135, 4.9939, 0.0, 1.1212, 10.2, 9.0533, 7.0, 0.0, 13.3869, 16.6182, 1.9846, 5.9785, 6.8846, 2.0], [0.0, 6.0078, 1.0, 12.1525, 5.0052, 48.6905, 21.1351, 28.1553, 28.0613, 24.0613, 1.0, 0.0, 24.9714, 1.0, 42.5495, 0.0, 15.0073, 0.0, 0.0, 0.9846, 15.043, 35.5, 16.0476], [1.0, 5.0, 0.0, 1.0, 0.0, 17.0432, 23.0155, 1.0, 0.0, 22.0469, 18.0952, 0.0, 10.0541, 22.0, 34.3681, 17.9877, 0.0, 0.0, 14.3429, 10.76, 12.009, 0.0, 11.0, 11.1273, 0.0, 23.2308, 11.9677, 18.3846, 15.1587], [10.0, 18.6846, 0.0, 4.0, 12.1087, 16.0432, 28.0078, 12.0667, 6.9322, 18.0208, 24.119, 0.0, 9.0541, 31.0124, 2.9939, 15.9816, 0.0, 0.0, 18.9143, 5.0267, 29.0541, 0.0, 1.0, 18.0545, 0.0, 32.7692, 11.9677, 10.9231, 24.0476], [0.0, 2.0, 0.9846, 0.0, 0.0, 25.0576, 28.5814, 9.8, 14.8814, 15.0156, 0.0, 0.0, 25.6757, 33.0248, 32.2025, 18.0429, 5.08, 0.0, 5.9714, 15.08, 20.036, 0.0, 0.0, 15.2364, 0.0, 8.9385, 22.0215, 3.9615, 2.0], [74.4783, 71.4049, 94.3129, 0.0, 29.3939, 13.9143], [0.0, 0.0, 0.0, 16.0234, 0.0, 51.1727, 51.3333, 0.0, 23.9153, 32.1771, 21.4762, 0.0, 0.0, 55.9814, 4.9939, 35.1595, 1.0, 0.0, 0.9714, 10.0533, 2.0, 0.0, 1.0, 8.4, 0.0, 4.9538, 16.9462, 39.1154, 16.0317], [0.0, 0.0, 0.0, 0.0, 0.0, 53.1331, 38.8915, 0.0, 12.0678, 15.2188, 16.3333, 0.0, 45.6351, 15.0, 45.546, 24.1472, 0.0, 0.0, 25.7143, 36.44, 16.991, 0.0, 32.3431, 5.4909, 0.0, 22.2769, 39.7634, 45.4231, 37.619], [0.0, 42.7517, 0.9846, 0.0, 0.0, 86.0935, 102.5039, 28.9833, 29.322, 28.0365, 25.3571, 0.0, 48.973, 78.0994, 102.681, 96.8896, 1.0, 2.9394, 3.9714, 34.2, 46.3964, 0.0, 0.0, 29.1273, 0.0, 40.1385, 53.3118, 26.3077, 69.0], [0.0, 63.3691, 1.9846, 3.0, 0.0, 76.5719, 150.3411, 40.65, 55.0678, 32.901, 33.6667, 0.0, 54.527, 113.882, 131.7239, 77.0429, 20.16, 51.1818, 38.0, 54.4, 83.3333, 0.0, 38.3212, 22.1636, 0.0, 76.2, 60.129, 52.3462, 74.873], [7.0052, 68.7619, 5.974, 139.0135, 233.9193, 174.6994, 210.9632, 30.52, 26.9091, 75.1429, 124.0267, 131.2072, 0.0, 73.6788, 90.6545, 0.0, 108.1231, 180.7742, 86.8846, 137.9524], [20.7778, 80.5906, 2.9692, 22.7734, 0.0, 123.1439, 137.4729, 61.4333, 68.4746, 73.1875, 75.4524, 0.0, 65.9054, 127.7702, 117.6442, 144.3436, 8.12, 52.6667, 37.9143, 50.9067, 97.3423, 17.4492, 53.8175, 40.9818, 61.8923, 71.914, 24.8077, 68.0159], [63.8188, 8.1077, 4.0, 2.0, 118.241, 147.3876, 51.7333, 77.2203, 78.2708, 43.1667, 0.0, 87.9595, 150.0745, 127.4049, 133.7485, 0.0, 49.5152, 42.0857, 91.48, 0.9915, 66.0657, 101.9273, 1.0, 55.2769, 103.0538, 76.8462, 96.5397], [23.037, 112.1745, 6.0308, 18.1641, 161.6295, 230.5659, 32.2167, 125.5085, 148.9167, 115.619, 0.0, 133.6486, 196.6894, 211.2761, 199.8098, 34.64, 48.8788, 127.5714, 142.44, 118.8288, 95.9124, 127.0364, 0.0, 147.8923, 141.5269, 130.0385, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

