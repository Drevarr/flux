created: 20230610164704000
creator: Drevarr
modified: 20230705163534850
modifier: drevarr
tags: ChartData
title: 202306101647_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Lindirine", "Olou Lil Scapper", "Blackout Angel", "Morv\u00e4rth", "Arcanophage Farra", "Yngvar The Burdened", "Little Heks", "Eibh\u00ebar", "Lucky Leipreach\u00e1n", "Newtype Khan", "Lord Erin The Wise", "Rakloz Blightspire", "Melli Dragonswrath", "Smol Gluvs", "Rosie Sunray", "Be\u00eb", "Xyntharos", "Elonith Requiem", "Kary\u00edna", "Duke Silvver", "Johosh The Mighty", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Reaper", "Scrapper", "Reaper", "Reaper", "Spellbreaker", "Scourge", "Reaper", "Chronomancer", "Scrapper", "Spellbreaker", "Weaver", "Berserker", "Berserker", "Reaper", "Vindicator", "Reaper", "Vindicator", "Reaper", "Vindicator", "Vindicator", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.2287, 0.0, 82.1304, 34.6741, 49.3176, 0.0, 171.6723, 332.5248], [0.0, 155.2656, 277.7479, 347.8614], [0.0, 59.4286, 93.67, 520.8542, 73.8197, 10.3103, 58.7232, 148.4419, 74.6829, 78.0, 0.0, 44.7465, 12.9615, 0.0, 0.0, 47.0532], [47.2958, 113.5385, 0.0, 0.0, 44.9415, 0.0, 93.8696, 83.4665, 76.6235, 35.25, 86.7647, 265.8218], [0.0, 144.9762, 56.38, 327.8958, 158.8197, 14.3448, 35.2147, 137.093, 0.0, 133.2414, 114.7887, 60.9808, 0.0, 0.0, 89.7073, 0.0, 48.4026, 0.0, 103.75, 47.2437, 93.9307], [138.0563, 113.0962, 177.1346, 0.0, 14.5106, 67.2927, 160.6087, 75.6422, 77.5294, 173.7812, 71.6807, 237.1782], [0.0, 12.39, 95.2917, 69.8197, 61.4713, 69.9435, 219.3953, 32.1951, 14.6667, 0.0, 4.0563, 67.6538, 0.0, 0.0, 27.0372, 0.0, 140.0435, 120.9521, 5.9765, 12.5781, 61.1176, 110.0297], [130.0233, 39.0952, 40.93, 151.3958, 279.0328, 25.2299, 36.0508, 132.2093, 3.2561, 0.0, 55.6207, 65.4085, 175.6538, 12.8269, 25.7979, 62.7561, 0.0, 24.3738, 3.3412, 128.9844, 67.1008, 183.7723], [119.7195, 0.0, 43.4366, 16.2885, 170.7885, 0.0, 0.0, 173.9268, 341.087, 81.9521, 95.3765, 185.2188, 93.6134, 268.3168], [35.1628, 29.4286, 90.95, 220.0625, 148.9344, 88.1724, 36.4407, 31.2558, 0.0, 45.6296, 214.5862, 128.6761, 0.0, 8.9038, 0.0, 32.2713, 0.0, 104.3478, 94.7572, 0.0, 0.0, 53.6807, 205.8812], [73.2326, 175.6429, 240.63, 537.9583, 383.7213, 30.7701, 55.8023, 189.9767, 0.0, 100.4789, 171.2308, 0.0, 0.0, 62.5266], [239.2791, 189.4286, 278.93, 611.5625, 764.9508, 2.7241, 448.3164, 553.1163], [102.814, 326.881, 245.44, 338.0833, 391.1148, 81.5977, 108.1751, 65.3256, 0.0, 25.9259, 110.9655, 232.6197, 34.8269, 119.8654, 0.0, 77.0957, 0.0, 0.0, 111.7604, 0.0, 43.7969, 154.1933, 583.3663], [245.814, 102.1429, 303.02, 726.9583, 750.1967, 62.6092, 65.7119, 43.9535, 62.1829, 13.8889, 200.5517, 58.0282, 59.4423, 83.3077, 0.0, 4.5851, 114.1463, 74.087, 70.5911, 109.7882, 62.9531, 64.3782, 555.8515], [0.0, 0.0, 71.34, 1198.1667, 851.4426, 0.0, 69.2825, 315.4419, 0.0, 0.0, 45.5634, 98.1154, 0.0, 31.2447, 28.6829, 0.0, 172.1725, 8.7294, 177.75, 81.2857, 800.0], [30.9302, 123.3333, 290.68, 146.2292, 675.918, 115.5747, 257.6836, 94.5814, 14.6341, 1170.3333, 216.4828, 150.8592, 309.6538, 99.4231, 0.0, 126.9202, 0.0, 0.0, 235.2971, 21.8353, 8.9844, 157.605, 549.4752], [90.7442, 244.381, 213.6, 344.375, 858.4754, 14.4598, 105.1469, 438.7674, 0.0, 0.0, 298.8028, 167.9038, 42.7308, 0.0, 165.1702, 0.0, 168.6087, 246.4984, 185.7176, 109.9688, 267.1008, 514.802], [138.2558, 408.0238, 85.93, 1010.0625, 357.2459, 0.0, 196.7797, 449.3023, 456.0854, 166.0, 319.9577, 117.25, 59.0, 0.0, 177.1649, 24.4634, 219.7391, 199.6166, 21.6941, 197.9844, 262.2521, 782.3465], [1127.5116, 418.6905, 370.8, 607.5833, 794.5082, 25.7816, 77.4746, 441.6047, 0.0, 352.037, 0.0, 124.4507, 40.9615, 82.5192, 0.0, 122.3085, 95.2439, 700.8261, 259.5687, 121.9294, 396.8281, 145.3025, 475.6931], [410.5349, 323.8571, 521.0, 960.7083, 247.3607, 123.2644, 396.3333, 310.0233, 0.0, 376.8519, 447.8276, 242.1972, 775.1923, 55.5385, 0.0, 11.1649, 58.3902, 357.4348, 158.9457, 61.9765, 310.4375, 170.7479, 430.9703], [527.7209, 159.7857, 471.73, 2294.6667, 1208.8033, 61.9655, 71.3672, 536.5581, 0.0, 81.6667, 0.0, 192.0282, 0.0, 372.0, 155.5532, 0.0, 0.0, 277.7859, 0.0, 44.75, 514.4286, 600.5347], [412.2791, 789.881, 484.07, 1481.0208, 1250.4098, 229.7701, 152.3164, 7.2326, 0.0, 311.2069, 99.5915, 297.9423, 79.2308, 0.0, 136.8298, 84.9268, 479.7391, 219.4888, 145.2824, 177.0938, 308.3109, 991.7327], [1064.5349, 1221.3095, 227.99, 1871.75, 969.2787, 62.954, 278.2147, 120.6977, 101.122, 0.0, 254.1408, 310.6346, 76.9808, 0.0, 181.3883, 0.0, 0.0, 587.8243, 97.6824, 94.1875, 227.5966, 958.2673]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

