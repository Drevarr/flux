created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Sygaldry Verdandi", "Bella Sassy", "Ex Warcraft", "Klikkin", "High Sorcer Baradun", "Rayla Shadowmoon", "K\u00e2 \u00d4tik R\u00e6j", "Darkandshadow", "Solus Sanctus", "Sub Train", "Necrotic Windrunner", "Aira Draugr", "Grasszanine", "Oo Dads Mad", "Newtype Khan", "Kisumaiasu", "Arcanophage Farra", "Daphne Agla\u00e9", "Audens Silvermarker", "Glorious Gluvs", "Name Is What", "Black Raspberry Pie", "Primal Clone", "Cedryn X", "Marshall R", "Rozaalyna", "Mister Jekyll", "Revitiel", "Eibh\u00ebar", "Mort\u00e4rion", "Bee Nemesis", "Be\u00eb", "Legacy Of Mathus", "Kary\u00edna", "My Birthday Girl", "Mike The Archmagus", "Mistwalker Cael", "Keypek The Drunk", "Xanvias Einzbern"];
const professions = ["Tempest", "Firebrand", "Firebrand", "Tempest", "Holosmith", "Tempest", "Herald", "Berserker", "Virtuoso", "Firebrand", "Firebrand", "Scourge", "Herald", "Spellbreaker", "Berserker", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Chronomancer", "Berserker", "Herald", "Scourge", "Scourge", "Vindicator", "Chronomancer", "Scrapper", "Berserker", "Scourge", "Berserker", "Vindicator", "Scrapper", "Weaver", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[138.4286, 53.2537, 21.7701, 18.082, 874.5917, 178.223, 2.6857, 613.1071, 93.6189, 3.7, 24.6061], [44.6825, 106.4961, 69.1206, 3.0328, 4.3056, 38.275, 12.0755, 91.446, 75.2714, 578.7143, 152.1111, 31.3922, 162.7357, 0.15, 42.3636], [84.0, 131.7776, 74.8457, 72.3934, 36.0417, 44.7547, 87.9496, 107.0143, 218.0536, 72.3111, 20.3725, 138.7974, 11.975], [195.2222, 231.5187, 86.7026], [101.8917, 461.1887, 1029.3993, 199.7714], [193.127, 147.4057, 2.2154, 29.4098, 133.9917, 208.5144, 58.6143, 63.0, 170.2203, 6.925, 150.2727], [660.1746, 264.2476, 34.7878], [67.1765, 801.5066, 319.85], [849.4604, 160.375, 439.697], [46.4921, 138.5708, 148.2283, 445.7541, 145.2333, 6.717, 175.1763, 6.0714, 515.4464, 326.2222, 145.6322, 157.75, 17.2121], [164.2698, 187.5004, 48.1994, 4.1148, 634.3833, 20.6038, 66.0396, 152.7857, 516.6607, 298.0667, 50.5294, 212.0705, 61.3, 6.6364], [28.283, 531.5216, 291.8, 1908.0714, 225.7556, 228.5294, 638.1233, 910.2], [540.9048, 399.5882, 323.3521, 435.6885, 259.1667], [299.254, 240.5117, 223.9502, 281.1475, 90.9444, 207.125, 216.6792, 256.5, 112.0714, 492.0536, 220.9111, 131.0588, 362.7841, 386.575], [1452.8571, 523.5873, 360.4244, 546.5246], [416.3175, 282.6855, 281.7637, 133.6393, 84.6667, 834.5667, 287.3208, 383.0612, 375.1571, 1089.9821, 334.1556, 140.8431, 388.8767, 122.55, 134.4545], [567.7778, 287.9305, 271.1801, 484.5738, 379.4444, 601.85, 403.7925, 538.0288, 542.4857, 1621.4821, 929.4889, 19.4118, 264.6013, 244.225, 234.9697], [594.8254, 482.2076, 162.119, 413.2951, 421.3833, 298.3585, 506.8165, 770.4286, 506.8214, 887.0, 0.0, 477.0991, 459.65, 0.0], [290.873, 498.0365, 324.463, 17.4167, 476.9583, 636.1942, 148.9571, 1178.5893, 463.4383], [742.9048, 532.9409, 433.5627, 1084.0984, 51.3611, 595.8333, 189.2264, 872.6295, 211.5571], [681.0159, 374.5204, 328.881, 274.4918, 292.7222, 221.5583, 381.8113, 644.0504, 381.5, 2301.4821, 518.4444, 119.1569, 556.1278, 651.9, 416.2424], [730.4762, 504.0947, 243.9936, 682.377, 444.0167, 77.5094, 509.5036, 256.7286, 2317.5357, 746.3333, 70.0392, 474.1564, 58.475, 58.3939], [424.6508, 420.583, 414.3183, 208.8197, 521.3083, 74.8302, 633.6763, 1812.7571, 1724.2857, 178.7111, 235.5294, 524.8084, 0.85], [436.873, 316.1025, 516.1013, 1201.1311, 428.4167, 1655.775, 14.6226, 621.1942, 589.2857, 1651.2143, 467.5333, 618.3877, 149.225], [1484.4286, 858.2815, 626.455, 251.2623, 639.3611, 0.0, 27.0189, 578.7446, 242.0286, 829.1071], [1805.6032, 1117.1477, 787.6736, 236.4426, 1108.5583], [1266.4286, 765.4162, 513.9904, 815.2951, 125.0556, 469.7583, 602.0719, 920.2429, 1300.875, 786.0, 175.2549, 802.2489, 334.35, 31.6364], [1506.7778, 806.9331, 613.4277, 1605.5417, 10.1887, 579.8813, 0.0, 3833.1071, 710.9493, 260.6, 22.8485], [3401.1429, 1106.4926, 531.0322, 309.7869, 1209.8667, 324.4906, 1115.9712, 561.4286, 4777.0179, 828.0, 291.7647, 1051.7379, 427.8, 478.9697], [1582.5556, 1127.556, 885.5595, 52.0164, 493.3611, 1979.4167, 696.6415, 933.3777, 1307.3571, 4040.8929, 806.8667, 239.6078, 787.7996, 530.75, 390.0606], [951.9206, 1365.2068, 1146.574, 1080.0984, 912.0667, 1423.7662, 1516.8, 4650.625], [1021.0635, 978.702, 723.8023, 5851.2131, 1229.0, 67.1887, 1399.8669, 454.8286, 3620.2321, 1173.0, 233.7059, 923.5551, 576.55, 161.3636], [1660.2381, 1195.02, 798.7524, 0.0, 1234.3083, 484.1698, 1019.1331, 1068.9286, 5448.4821, 689.6667, 219.4118, 860.7159, 1125.95, 69.6364], [1725.4921, 1249.3831, 965.6431, 628.0656, 121.7778, 450.725, 216.6038, 1181.4029, 721.5, 1561.5, 611.7778, 26.1961, 1272.2159, 284.0, 220.0303], [2813.6349, 1165.5334, 821.8601, 242.0, 885.3611, 910.4083, 398.4151, 1398.6439, 1559.3571, 2088.1071, 571.4222, 198.6078, 1109.2445, 407.15, 533.3333], [1604.7619, 1496.7142, 906.6077, 309.8525, 243.4444, 1452.6833, 1268.2626, 1767.8429, 4154.0, 2767.2, 35.3725, 1368.1145, 348.8, 186.303], [3696.5556, 2086.3884, 1666.3039, 50.2787, 41.8333, 1486.8167, 398.0189, 1297.7914, 2683.5857, 3483.8929, 380.4222, 2293.1652, 3700.125, 531.0303], [3732.5079, 2371.907, 1381.6029, 1614.377, 291.2778, 1557.4167, 910.6792, 88.1403, 2208.1571, 7978.1607, 2493.8444, 240.7059, 2446.7093, 1457.775], [2745.746, 2212.4474, 1327.1061, 338.8852, 6.3611, 2421.025, 990.8868, 2079.6295, 766.7143, 6375.4643, 1797.5556, 467.7451, 2398.5815, 1520.175, 255.5758], [3864.3333, 2603.4874, 1462.1559, 339.0984, 2380.9833, 674.8491, 1670.3022, 787.2571, 4741.9286, 1124.4889, 2023.5022, 1506.375]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

