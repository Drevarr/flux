created: 20231009220917000
creator: Drevarr
tags: ChartData
title: 202310092209_interupted_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Bitty", "Ka Otik Praetor", "No Reserv\u00e9", "Ryvalia Fazebringer", "Zaedy Zae", "Klengah", "Morv\u00e4rth", "Solus Luxes", "Sygaldry Verdandi", "Kalisha Lafay", "Mister Jekyll", "Atria Ruinheart", "Tribal S", "Xattu Ashfur", "K\u00e9ld\u00e1", "Jmbrage Warrior", "Drevarr Moonwillow", "Rozaalyna", "Adjudicatrix Farra", "Xanvias Einzbern", "Aira Draugr", "Tootsie Pop Rocks", "Black Raspberry Pie", "Eibh\u00ebar", "Amiti\u00e9l", "Glorious Gluvs", "Lucky Leipreach\u00e1n", "Skyra Lightmoon", "Tegan Parker", "Newtype Khan", "Belvyn Brightblade", "Daphne Agla\u00e9", "Momomeko", "Elonith Requiem", "Be\u00eb", "Mistwalker Cael", "Necrotic Windrunner", "Mort\u00e4rion", "Venomina The Sly", "Tidalblade", "Cat Wigglebooty", "Jimbo The Pleb", "Sub Train", "Lhea Firehands", "Cedryn X", "High Sorcer Baradun", "Daray Darkblood", "Kurn The Drunk", "Apogeal", "Rina Of Theros", "Fang Shiyu"];
const professions = ["Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Druid", "Druid", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Reaper", "Firebrand", "Druid", "Reaper", "Chronomancer", "Berserker", "Scrapper", "Reaper", "Reaper", "Berserker", "Herald", "Scrapper", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Scrapper", "Herald", "Tempest", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Reaper", "Herald", "Reaper", "Scrapper", "Druid", "Renegade", "Scrapper", "Berserker", "Firebrand", "Tempest", "Berserker", "Tempest", "Reaper", "Reaper", "Scrapper", "Reaper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Interupted per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0], [0, 1, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 3, 1, 0, 0, 0, 0], [0, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1], [1, 1, 4, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 2, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 2, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 3, 1, 0, 0, 0, 0, 0], [0, 1, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0], [0, 0, 4, 3, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 6, 0, 3, 0, 0], [0, 0, 4, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], [0, 0, 6, 0, 0, 4, 0], [0, 0, 3, 0, 4, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0], [1, 0, 2, 3, 2, 0, 2, 1, 0, 0, 0], [0, 0, 8, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0], [1, 1, 5, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 1, 5, 0, 3, 0, 2], [0, 0, 4, 0, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0], [0, 1, 4, 0, 0, 0, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0], [1, 1, 5, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 6, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0], [1, 1, 2, 0, 2, 0, 0, 0, 2, 3, 0, 0, 0, 1, 0, 0], [0, 0, 5, 0, 0, 0, 1, 2, 0, 2, 0, 0, 1, 1, 0], [0, 0, 12], [0, 1, 2, 0, 0, 2, 1, 4, 3, 0, 0, 0, 0, 0], [0, 0, 9, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 5, 0, 5, 0, 2], [0, 1, 3, 3, 0, 2, 0, 1, 2, 1, 0, 0, 0, 0], [11, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [6, 3, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0], [1, 0, 7, 0, 2, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0], [0, 1, 5, 0, 4, 0, 1, 2, 0, 1, 0, 0, 0, 1, 0], [0, 0, 5, 0, 4, 0, 4, 0, 1, 1], [1, 0, 6, 4, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0], [0, 1, 6, 0, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0], [1, 3, 5, 0, 2, 0, 5], [0, 0, 9, 4, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0], [0, 2, 6, 0, 2, 0, 2, 0, 1, 4, 0, 0, 0, 0, 1], [0, 0, 10, 0, 2, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0], [0, 0, 5, 0, 3, 0, 1, 0, 9, 0, 0, 0, 0, 0, 0], [1, 1, 5, 0, 2, 0, 3, 1, 2, 5, 0, 0, 0, 0, 0], [1, 0, 10, 0, 3, 0, 2, 0, 3, 1, 0, 0, 0, 0], [0, 2, 3, 0, 6, 3, 1, 1, 4, 0, 0, 0, 1, 0, 0], [0, 3, 5, 0, 3, 0, 1, 1, 2, 4, 0, 1, 0, 1], [0, 10, 0, 5, 0, 7, 0], [0, 2, 11, 0, 4, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0], [0, 2, 3, 0, 4, 0, 0, 1, 4, 9, 0, 0, 0, 0, 0, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

