created: 20230417215912000
creator: Drevarr
modified: 20230705163525810
modifier: drevarr
tags: ChartData
title: 202304172159_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Daddy Demon", "Venomina The Siren", "Mac Chiato", "Miphest\u00f6", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 55.3707, 15.9499, 0.0, 28.4342, 36.9779, 19.9758, 33.4974, 20.0502, 0.0, 0.0, 15.8746, 0.0, 36.0835, 18.2574, 38.4523, 0.0, 19.3234, 40.131, 38.8815], [76.8222, 72.4583, 80.6805, 58.4248, 0.0, 39.8945, 15.3504, 58.9723, 38.1421, 37.5144, 19.2282, 34.4477, 36.6976, 37.7545], [116.3623, 90.4187, 0.0, 79.6564, 20.0336, 49.5517, 35.4682, 37.3678, 35.8267, 44.2073, 39.8443, 47.4492, 34.6053, 19.238, 0.0, 19.8432, 0.0, 30.8774, 19.845, 19.8891, 19.8514, 14.9299, 39.9972, 39.396], [0.0, 0.0, 0.0, 40.1641, 281.9636, 0.0, 79.6936, 19.9318, 59.1557, 23.6989, 93.7262, 0.0, 0.0, 65.0236, 57.2549, 0.0, 35.8945, 40.0355, 57.6206, 72.3387, 0.0, 0.0, 19.8866, 0.0, 39.9432, 19.8847, 14.8764, 38.1814, 37.9858, 38.6149, 20.0655], [112.1816, 0.0, 28.9727, 0.0, 6.8708, 16.66, 87.5973, 27.3655, 119.6244, 52.5038, 15.7138, 38.3244, 19.9699, 93.6924, 95.4089, 37.4609, 0.0, 76.1513, 0.0, 0.0, 66.3326, 56.1613, 78.0364, 77.6434, 35.0032, 51.4745], [0.0, 0.0, 60.0706, 20.0737, 305.4219, 0.0, 72.9159, 19.9318, 79.7122, 39.984, 92.4542, 20.0655, 55.3115, 59.8728, 37.3865, 59.9098, 59.8226, 68.5588, 78.7288, 20.1221, 59.9429, 19.8432, 0.0, 39.9432, 19.8847, 39.7782, 20.1813, 34.681, 40.0418, 33.0505]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

