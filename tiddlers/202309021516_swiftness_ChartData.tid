created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaedy Zae", "Luke The Ghastly", "Auro Vivier", "Jimbo The Pleb", "Ryvalia Fazebringer", "High Sorcer Baradun", "Mike The Archmagus", "Cat Wigglebooty", "Elizabeth Conbolt", "Gamora Titus", "Sofya De Nova", "J\u00e2sm\u00eene", "Loganlek", "Forever Dreaming", "Tegan Parker", "Arcanophage Farra", "Greg The Knight", "Air One Com", "Newtype Khan", "Mistwalker Cael", "Yummy Kiwi", "Gestern Yesteryear", "Scarlet Merc\u00fcry", "Drevarr Moonwillow", "Budget Chicken", "Koralia Danai", "Sub Train", "Bella Sassy"];
const professions = ["Druid", "Scourge", "Firebrand", "Berserker", "Chronomancer", "Tempest", "Weaver", "Scrapper", "Tempest", "Firebrand", "Weaver", "Tempest", "Berserker", "Scourge", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Herald", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 13.7363, 89.5334, 60.6413, 0.0, 6.7779, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 106.455, 41.5883, 0.0, 0.0, 0.0, 19.2192, 0.0], [126.36, 0.0, 204.457, 28.1165, 0.0, 0.0, 63.1512], [401.3184, 92.1092], [140.5123, 0.0, 50.4461, 6.0749, 0.0, 2.6775, 2.5452, 0.0, 0.0, 0.0, 0.0, 35.8483, 19.679, 262.8729, 0.0, 0.0, 0.0, 2.5356, 0.0, 3.6423], [0.0, 17.622, 8.519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.6069, 26.236, 0.0, 0.0, 0.0, 138.5834, 23.8423, 32.993, 39.99, 241.248, 20.7508], [376.1597, 92.736, 0.0, 90.5148, 58.5396, 82.759], [39.312, 18.2655, 178.5658, 92.3059, 10.1002, 0.0, 0.0, 39.8899, 4.0379, 0.0, 55.4387, 53.2908, 2.271, 30.5158, 29.9628, 151.6502, 109.7376], [127.1462, 0.0, 173.3875, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.1821, 40.4766, 378.412, 0.0, 0.0, 59.5795, 0.0, 81.5136, 0.0], [117.936, 0.0, 207.2966, 73.1136, 0.0, 0.0, 61.0344, 71.1245, 0.0, 0.0, 0.0, 21.9163, 196.445, 61.0759, 0.0, 45.9166, 33.8688, 12.6711], [141.999, 120.7597, 166.3812, 313.5455, 6.2449, 49.2307, 38.0042, 136.8864, 0.0], [55.823, 37.8675, 142.9862, 39.8362, 0.0, 25.8876, 67.9896, 34.3505, 18.032, 3.1423, 19.8803, 50.4432, 211.9164, 47.3017, 21.0714, 89.8867, 16.8025, 75.8016, 40.2961], [157.8096, 0.0, 136.3046, 87.3062, 0.0, 8.694, 11.5835, 152.096, 68.6136, 0.0, 30.8057, 119.4467, 265.4278, 89.8644, 0.0, 0.0, 15.9936, 8.6184], [124.8998, 0.0, 166.7059, 109.8854, 0.0, 0.0, 95.1048, 0.0, 68.6136, 0.0, 59.6988, 117.3618, 269.1182, 152.0033, 0.0, 10.9369, 260.8704, 0.0], [135.4438, 19.2634, 54.4544, 86.5633, 70.8849, 389.1995, 276.9454, 0.0, 0.0, 130.6318, 307.8432, 42.7329], [198.9187, 0.0, 348.6125, 67.7914, 0.0, 0.0, 0.0, 79.5047, 56.3226, 73.456, 0.0, 112.5873, 96.0556, 325.0426, 9.8324, 0.0, 62.3146, 0.0, 69.6192, 70.4349], [61.2144, 52.7918, 202.7866, 0.0, 0.0, 105.2793, 0.0, 64.2173, 129.5795, 103.5428, 83.4624, 84.7669, 282.1767, 167.7705, 6.973, 122.0173, 31.3137, 89.5776, 18.8528], [477.4723, 258.5138, 693.049, 147.0874, 34.0704, 60.5421], [238.68, 22.8443, 453.6806, 40.8576, 0.0, 17.6868, 0.0, 0.0, 13.6416, 7.5748, 147.2764, 138.5662, 477.4862, 71.3512, 0.0, 6.3325, 44.1142, 0.0, 0.0], [333.2534, 0.0, 275.449, 162.5165, 0.0, 0.0, 12.852, 30.3565, 55.6499, 0.0, 95.2862, 136.7356, 401.6902, 167.1505, 0.0, 63.6662, 28.6944, 34.8583], [169.3786, 21.8047, 450.1728, 157.6243, 13.2039, 25.8048, 16.0261, 29.5098, 7.4078, 7.255, 31.9939, 175.3817, 533.5525, 88.7572, 130.2956, 39.2515, 102.7091, 93.8112, 83.183], [620.568, 138.9218, 593.6602, 332.4518, 55.0973, 44.5995, 273.6216, 23.3723, 182.5152, 52.9175], [534.4186, 60.4395, 626.567, 129.4541, 101.9088, 53.856, 8.5428, 66.1052, 47.1027, 64.09, 91.4673, 49.7876, 40.1715, 506.8677, 178.9316, 138.5261, 96.3852, 300.5856], [932.9299, 276.8782, 1389.2717, 382.0723, 126.2419, 138.0213, 168.3864], [460.7366, 8.5635, 659.975, 180.9562, 77.8378, 91.9836, 140.8428, 56.7481, 282.5536, 46.0258, 128.3116, 200.7445, 168.2627, 619.4262, 189.1183, 153.8943, 100.0138, 75.3058, 196.0896, 79.3868], [410.6419, 246.708, 650.2867, 355.945, 27.5184, 156.1365, 158.1552, 34.2376, 16.6835, 75.1258, 0.0, 72.7978, 215.5532, 779.1087, 200.0579, 225.4213, 35.0381, 0.0, 245.28, 122.9148], [494.208, 94.5697, 1199.5142, 254.6611, 80.3779, 8.4609, 52.6932, 0.0, 64.2566, 34.8381, 75.46, 49.266, 395.5113, 612.3292, 356.2245, 111.1757, 266.1821, 262.9536, 86.261], [394.1309, 0.0, 839.376, 146.5498, 21.3293, 23.5314, 247.8168, 86.1327, 238.2733, 97.2279, 10.1443, 167.5624, 378.2223, 886.2734, 306.8411, 62.7879, 165.9258, 304.2475, 296.4192, 112.3727], [651.3437, 148.5743, 1416.4992, 443.8426, 56.9923, 42.1668, 194.6196, 97.6855, 147.2352, 93.9642, 22.967, 175.4739, 411.529, 1071.647, 318.6665, 93.8165, 303.0227, 312.7098, 224.5824, 267.3499]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

