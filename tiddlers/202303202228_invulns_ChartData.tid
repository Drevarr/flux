created: 20230320222849000
creator: Drevarr
modified: 20230705163522683
modifier: drevarr
tags: ChartData
title: 202303202228_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Sheep Poh", "Gavann", "Garphon", "Morton Saltbringer", "Drevarr Moonwillow", "\u00c1rkantor", "Raelyn Sunray", "Solus Sanctus", "Ark Darkness", "Ryvalia Fazebringer", "Legacy Of Mathus", "Fribble Bibble", "Xanvias Einzbern", "Newtype Khan", "Viral Marketing", "Rozaalyna", "Koralia Danai", "Lee Roy Jenkins I V", "Be\u00eb", "Tribal S", "Johosh The Great", "Kiloak", "Jeckyll Mbs", "Whose Guardian", "Mistwalker Caelon", "Misaki Amakase", "Smol Gluvs", "Xyntharos", "Tootsie Pop Rocks", "Stoic Rapidfire", "Smol Daddy Tika", "Zefirokai", "Zaylen Harker", "Nazhul Naxxremis", "The X E N", "Bella Sassy", "Demon Sekhmet", "Primal Clone", "Venomina The Siren", "Dark Sidiuz", "Cerys Fireblade", "Lord Erin The Wise", "Eibh\u00ebar", "Avanda Corone", "Zadie Miststep", "Sumatra Satyricon", "Black Raspberry Pie", "High Sorcer Baradun", "Sister Elon\u00edth"];
const professions = ["Scourge", "Catalyst", "Firebrand", "Renegade", "Chronomancer", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Scrapper", "Berserker", "Spellbreaker", "Firebrand", "Scourge", "Firebrand", "Firebrand", "Scourge", "Druid", "Firebrand", "Firebrand", "Spellbreaker", "Dragonhunter", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Scrapper", "Druid", "Berserker", "Tempest", "Firebrand", "Scourge", "Scrapper", "Firebrand", "Berserker", "Chronomancer", "Tempest", "Scourge", "Berserker", "Weaver", "Chronomancer", "Chronomancer", "Tempest", "Soulbeast", "Chronomancer", "Tempest", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 16, 46, 0, 0, 0], [57, 0, 0, 19], [42, 0, 0, 35], [0, 19, 0, 27, 0, 34, 0], [0, 0, 0, 0, 0, 0, 52, 14, 20], [0, 0, 0, 0, 0, 0, 0, 14, 6, 27, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 12, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 31, 8, 0, 25], [0, 0, 45, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 5, 17, 0, 43], [0, 27, 0, 0, 21, 0, 37, 0, 0, 0, 26], [0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 47, 2, 0, 33], [0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 29, 22, 24, 0, 0, 32], [0, 0, 0, 0, 0, 0, 0, 0, 7, 15, 0, 0, 0, 0, 0, 5, 0, 0, 0, 13, 58, 22], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 26, 24, 0, 0, 53], [0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 23, 0, 0, 0, 6, 0, 21, 0, 0, 47], [0, 0, 6, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 62, 6, 0, 11], [0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 24, 0, 0, 28, 0, 0, 0, 0, 40], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 32, 20, 0, 79], [133, 0, 0, 5], [0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 25, 0, 0, 0, 40, 0, 12, 0, 0, 38], [0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 24, 0, 36, 0, 0, 0, 0, 28, 17, 0, 0, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 18, 21, 0, 34], [0, 9, 0, 0, 0, 0, 0, 103, 0, 0, 0, 8, 0, 22, 0, 11], [0, 0, 9, 0, 0, 8, 11, 63, 38, 0, 0, 28], [0, 0, 0, 0, 0, 0, 0, 9, 0, 26, 0, 0, 0, 29, 0, 19, 0, 7, 0, 15, 13, 22, 0, 0, 20], [0, 0, 0, 0, 23, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 36, 27, 0, 0, 37], [26, 0, 0, 0, 0, 0, 48, 0, 0, 0, 20, 21, 26, 0, 0, 30], [0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 25, 56, 0, 0, 45], [0, 0, 0, 0, 12, 0, 0, 0, 0, 19, 0, 0, 0, 0, 77, 0, 0, 0, 0, 3, 20, 0, 0, 57], [0, 0, 0, 0, 0, 0, 9, 6, 16, 0, 0, 0, 14, 0, 55, 0, 0, 0, 6, 47, 39], [0, 0, 0, 0, 0, 0, 0, 11, 0, 5, 0, 0, 0, 0, 32, 0, 0, 0, 0, 86, 15, 0, 0, 45], [0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 36, 35, 0, 0, 29], [34, 130, 31, 0, 0, 20], [0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 96, 62, 0, 0, 12], [0, 0, 0, 7, 0, 0, 13, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 56, 71, 15, 0, 0, 10], [33, 0, 0, 0, 23, 144, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 52, 0, 0, 0, 84], [0, 0, 14, 0, 56, 0, 0, 0, 34, 46, 58, 0, 30], [0, 0, 4, 0, 0, 0, 1, 0, 32, 0, 0, 0, 0, 0, 53, 0, 2, 0, 13, 6, 128, 0, 1], [97, 17, 34, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 39, 44, 0, 12], [5, 0, 10, 0, 0, 47, 6, 15, 0, 0, 58, 58, 0, 35, 0, 0, 0, 41, 29, 21], [0, 0, 0, 0, 0, 18, 0, 47, 0, 0, 33, 0, 0, 11, 0, 0, 0, 15, 39, 84, 0, 0, 98], [16, 0, 0, 0, 0, 0, 37, 78, 12, 53, 0, 0, 0, 30, 0, 6, 0, 0, 0, 8, 106], [0, 0, 1, 12, 2, 3, 1, 41, 0, 17, 0, 0, 24, 28, 0, 76, 0, 15, 0, 28, 25, 49, 0, 0, 24], [29, 0, 0, 30, 21, 0, 47, 0, 0, 0, 26, 100, 27, 0, 85], [0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 46, 0, 81, 0, 0, 0, 0, 57, 42, 0, 0, 50], [0, 0, 6, 0, 0, 34, 0, 36, 0, 0, 0, 0, 0, 40, 0, 0, 0, 57, 38, 81, 0, 0, 90], [0, 4, 0, 0, 0, 0, 0, 46, 0, 66, 0, 0, 43, 24, 0, 30, 0, 6, 0, 52, 64, 13, 0, 0, 62], [0, 0, 0, 0, 0, 86, 0, 69, 0, 0, 0, 28, 0, 120, 0, 0, 0, 48, 62, 78, 0, 0, 98], [5, 16, 122, 0, 23, 94, 0, 75, 0, 0, 0, 136, 37, 80, 0, 0, 32]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

