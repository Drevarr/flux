created: 20230213220222000
creator: Drevarr
modified: 20230705163519248
modifier: drevarr
tags: ChartData
title: 202302132202_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Arcanophage Farra", "Jupi Jupi Jupi", "Kira Dragonblaze", "Newtype Khan", "Grasszanine", "Smol Gluvs", "Nelliel T", "Ace Hammers", "Dark Sidiuz", "Rina Of Theros", "Elonith Tenebris", "Smol Daddy Tika", "Skye Nightroad", "Jeckyll Mbs", "Whose Guardian", "Legacy Of Mathus", "Xyntharos", "Sassy Daddy Demon", "Be\u00eb", "Lord Erin The Wise", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Spellbreaker", "Dragonhunter", "Dragonhunter", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Scourge", "Scourge", "Scourge", "Berserker", "Scrapper", "Berserker", "Dragonhunter", "Berserker", "Vindicator", "Vindicator", "Scourge", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.5312, 216.6425, 319.8902, 1460.4054, 742.0348, 122.5964, 246.25, 1046.0125, 13.6145], [36.25, 181.0181, 304.1341, 419.1622, 551.2609, 67.28, 19.2, 804.3125, 159.655, 282.2333, 261.5568], [514.6406, 593.3684], [221.8812, 363.5808, 925.9268, 9.05, 1975.8919, 651.1652], [85.4062, 199.6915, 121.3171, 0.0, 954.7568, 471.113, 120.7127, 123.15, 695.5125, 177.6508, 461.2667, 101.8216], [101.8812, 211.9927, 284.9512, 692.6216, 576.6783, 130.1164, 217.075, 718.3, 191.1494, 589.6833, 203.2054], [116.0875, 160.8784, 506.9268, 8.45, 2159.4865, 726.6348, 155.3782, 125.325, 872.4875, 185.6983, 575.45, 310.1027], [113.2156, 337.8566, 720.0976, 2240.027, 291.5304, 70.1564, 102.9, 1197.8375, 149.9441, 463.8833, 247.2216], [159.3406, 356.9601, 1299.1707, 2712.4054, 1027.9043, 139.2764, 203.875, 1356.0875, 45.2318, 1116.55, 227.0108], [235.9437, 421.7368, 1178.6707, 2099.2973, 999.1913, 106.4473, 94.75, 1015.0375, 325.0098, 686.05, 308.0378], [224.2344, 395.4229, 1164.8171, 187.95, 2083.6486, 625.2087, 301.9418, 281.4, 994.525, 348.5768, 940.7667, 430.2541], [0.0, 1402.7927, 88.1, 3233.2703, 1060.887, 466.1127, 346.45, 1711.9, 701.9637, 2038.3833, 741.1514], [245.3344, 427.3539, 725.5366, 91.65, 1631.8108, 18.0957, 293.6727, 255.325, 1936.5125, 653.1648, 1418.6167, 1092.427], [189.2, 639.9673, 1074.7317, 6.4, 4122.3514, 1401.5043, 390.96, 726.4, 3126.0125, 529.3282], [193.9125, 595.5681, 964.1707, 149.25, 3394.4324, 2220.1478, 0.0, 213.675, 1444.575, 653.5908, 1080.75, 620.3081], [307.4594, 697.0472, 1381.9634, 3245.027, 1457.0174, 265.7309, 689.85, 1060.975, 480.7402, 1363.35, 745.8162], [509.7312, 723.5064, 2371.9268, 61.6, 1701.2432, 0.0, 721.8836, 331.375, 1983.6625, 485.2109, 1136.2, 619.227], [250.5437, 563.735, 1598.939, 576.95, 1994.3784, 2144.2435, 315.7818, 406.825, 1464.175, 848.7444, 1459.55, 638.6811], [299.5656, 543.4192, 2193.6585, 0.0, 5341.6757, 1104.3913, 359.6982, 558.15, 3392.125, 586.9008, 1460.8, 728.9243], [414.4125, 721.412, 1557.7073, 99.55, 3571.1081, 1512.0696, 439.2327, 77.275, 2072.4, 764.0545, 2131.1833, 743.6216], [302.2969, 744.2613, 2569.4634, 228.7, 3935.027, 62.5652, 561.6218, 1048.125, 2825.2875, 884.5042, 775.7667, 905.9189], [388.7406, 980.0236, 1415.4512, 586.55, 5108.9459, 4428.0783, 546.1818, 0.0, 3136.65, 991.7709, 3784.3167, 1340.0216], [420.4844, 1126.1506, 2413.6585, 211.25, 7927.4324, 4448.713, 876.1673, 299.325, 2246.0875, 944.0154, 3735.8833, 1461.5622]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

