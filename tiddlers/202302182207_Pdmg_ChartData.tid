created: 20230218220736000
creator: Drevarr
modified: 20230705163519623
modifier: drevarr
tags: ChartData
title: 202302182207_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Bri The Warrior", "Leilani Ellesmera", "Xmus Jaxnflaxn Waxn", "Irish Mini Rev", "Sumatra Satyricon", "Ark Est Destroyer", "Sailor Soup", "Adalvarn", "Kira Dragonblaze", "Aveliad Frostmoon", "Dark Sidiuz", "Kia Forte", "Husky Guard", "Ace Hammers", "Kalenthian", "Peanut Strongpaw", "Morv\u00e4rth", "Minka Bringer", "Rina Of Theros", "Be\u00eb", "Lord Erin The Wise", "Legacy Of Mathus", "Sheep Poh", "Sp\u00edcy Cheese", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Spellbreaker", "Soulbeast", "Engineer", "Vindicator", "Soulbeast", "Spellbreaker", "Reaper", "Mirage", "Dragonhunter", "Scrapper", "Scourge", "Scrapper", "Dragonhunter", "Vindicator", "Mechanist", "Spellbreaker", "Scourge", "Scrapper", "Scourge", "Scourge", "Weaver", "Berserker", "Catalyst", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[346.2821, 229.0333, 278.8333, 249.8655, 35.1354, 55.6712, 348.863, 322.6316, 100.2576, 70.1324, 321.0847], [876.5714, 136.6771, 349.2534, 333.4521, 542.9474], [510.2143, 129.1562, 341.9795, 736.9726, 679.0789, 205.4394, 70.7353, 211.5763], [677.0444, 453.5714, 662.9244, 66.5521, 134.3973, 455.6986, 334.0, 44.5909, 214.4706, 57.8814], [596.2381, 867.2605, 8.5312, 1351.7034], [413.7778, 332.3111, 265.9643, 350.521, 175.4583, 211.4315, 437.0548, 106.3947, 52.0758, 207.9412, 594.9746], [1076.9111, 1314.5357, 882.4706, 30.9896], [872.369, 620.1597, 214.5274, 486.3288, 661.7368, 56.0606, 32.9412, 911.8559], [496.226, 804.4932, 706.4474, 735.0152, 294.25, 1114.339], [922.7179, 944.1778, 1175.0476, 896.6639, 102.0417], [1216.7094, 1269.0333, 1327.0833, 732.7647, 27.0], [1118.4957, 1106.1333, 1473.3214, 1173.1345], [688.1513, 192.8542, 847.7603, 967.2877, 799.3684, 375.8485, 118.4265, 1683.6525], [903.7607, 1554.2556, 610.6807, 71.9062, 346.6712, 879.6438, 408.1053, 0.0, 516.7647, 743.339], [970.6496, 716.8778, 1209.4643, 689.6807, 90.2292, 439.2397, 883.7397, 325.1053, 68.0147, 762.8898], [1801.4556, 724.0, 14.7563, 210.5, 484.1438, 665.5753, 982.2368, 159.4697, 887.3971, 1777.1186], [1142.1333, 1062.8333, 998.0504, 159.125, 395.9521, 804.3699, 1111.6579, 328.9242, 535.7059, 1224.9915], [1794.9667, 1571.619, 1145.605, 78.4167, 536.3836, 1005.0411, 579.3684, 26.6515, 216.8676, 707.6695], [746.2479, 888.3444, 2077.5238, 1632.7563, 143.1771, 423.2397, 526.5342, 305.6053, 185.5909, 286.7794, 919.9915], [1151.3504, 2002.2333, 1170.9167, 1531.2857, 56.0, 368.6096, 643.4384, 547.8947, 35.4242, 710.8676, 723.5], [2454.8974, 2390.4889, 1993.3214, 1501.4622, 114.1354, 105.4932, 642.9737, 198.4545, 259.1029, 1350.0763], [461.5983, 2979.6889, 3194.381, 1509.3277, 120.375, 552.0274, 1324.3288, 51.7273, 1185.4853, 1542.8644], [2062.4701, 3327.4889, 1792.1667, 2383.1345, 116.7292, 528.6164, 1195.2329, 528.8684, 266.7727, 101.2353, 827.1356], [3911.2024, 2919.0504, 163.7188, 803.5411, 2123.4521, 382.3947, 78.5758, 1258.0588, 3614.7627], [2256.4872, 2989.0889, 3306.4762, 2814.479, 127.9688, 1334.9795, 1351.3699, 123.3158, 225.8485, 2789.4068], [2575.9573, 5824.0778, 4432.6429, 2042.1933, 203.4479, 419.3219, 1820.1781, 677.3684, 255.0758, 704.8824, 2581.8814]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

