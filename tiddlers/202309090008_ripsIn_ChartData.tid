created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mew Mew", "Permanent Dawn", "Mew Mew", "Graumas", "Cupi Cupita", "Heals For Daddy", "Loganlek", "Seiker Novus Terra", "Lord Erin The Wise", "Graumas", "J\u00e2sm\u00eene", "Lucky Luprac\u00e1n", "Oo Dads Mad", "Rina Of Theros", "Air One Com", "Mort\u00e4rion", "Sofya De Nova", "Snugglies Wugglies", "Regis Hawkesburne", "Raziel Umbra", "Tegan Parker", "Koralia Danai", "K\u00e2 \u00d4tik R\u00e6j", "Glorious Gluvs", "Tribal S", "Firebrand pl1-2628", "Solus Luxes", "Elon Illusionblade", "Th\u00f6rfinn Stormcloak", "Philip Poundhouse", "Black Raspberry Pie", "Legoh Brave", "Jobless Jennifer", "Trooobi", "Gestern Yesteryear", "Xanvias Einzbern", "Be\u00eb", "Brutal Araden", "High Sorcer Baradun", "Wren Raveness", "No Reserv\u00e9", "Mistwalker Cael", "Daphne Agla\u00e9", "K\u00f4sair", "Jimbo The Pleb", "Kahlyanne", "Mister Jekyll", "Sub Train", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Scrapper", "Weaver", "Holosmith", "Thief", "Herald", "Druid", "Berserker", "Tempest", "Weaver", "Deadeye", "Tempest", "Scrapper", "Berserker", "Reaper", "Firebrand", "Scrapper", "Tempest", "Virtuoso", "Berserker", "Chronomancer", "Tempest", "Firebrand", "Berserker", "Berserker", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Herald", "Chronomancer", "Tempest", "Berserker", "Herald", "Firebrand", "Berserker", "Reaper", "Renegade", "Tempest", "Chronomancer", "Vindicator", "Herald", "Reaper", "Spellbreaker", "Berserker", "Tempest", "Reaper", "Firebrand", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1087, 0.0149, 0.0331, 0.0181, 0.0049, 0.0078, 0.0, 0.0, 0.0119], [0.0, 0.0081, 0.0142, 0.0435, 0.0, 0.0634, 0.0387, 0.0065, 0.0, 0.0, 0.0, 0.0, 0.0155], [0.0323, 0.0712], [0.1087, 0.0, 0.0187, 0.0552, 0.031, 0.0, 0.0156, 0.0, 0.0, 0.0251], [0.0, 0.0242, 0.0918, 0.0075, 0.0221, 0.0039], [0.0, 0.0161, 0.0724, 0.1087, 0.0, 0.041, 0.0497, 0.0129], [0.0, 0.0403, 0.0686, 0.1087, 0.0, 0.0336, 0.0331, 0.0103, 0.0, 0.0, 0.0, 0.0, 0.0107], [0.0403, 0.0582, 0.1304, 0.0, 0.0597, 0.0166, 0.0259, 0.0, 0.0078, 0.0], [0.0, 0.0161, 0.0582, 0.087, 0.0187, 0.0276, 0.0233, 0.0, 0.0312, 0.0, 0.0, 0.0203], [0.0403, 0.1242], [0.0, 0.0323, 0.0957, 0.0037, 0.0387, 0.022], [0.0, 0.0484, 0.0194, 0.1304, 0.0, 0.0373, 0.116, 0.0129, 0.0098, 0.0, 0.0, 0.0, 0.0394], [0.0, 0.0242, 0.0763, 0.087, 0.0448, 0.0387, 0.0259], [0.0, 0.0242, 0.0699, 0.0435, 0.0, 0.041, 0.0387, 0.0078, 0.0, 0.0078, 0.0, 0.0, 0.0274], [0.0, 0.0081, 0.0686, 0.0652, 0.0448, 0.0387, 0.0103, 0.0, 0.0156, 0.0, 0.0, 0.0263], [0.0, 0.0403, 0.0918, 0.0, 0.0, 0.0149, 0.0, 0.0155, 0.0049, 0.0156, 0.0, 0.0, 0.0155], [0.0, 0.0242, 0.0854, 0.0435, 0.0, 0.0149, 0.0331, 0.0116, 0.0, 0.0, 0.0, 0.0, 0.0251], [0.0, 0.0, 0.0867, 0.087, 0.0, 0.0485, 0.0497, 0.0065, 0.0, 0.0, 0.0, 0.0, 0.0167], [0.0, 0.0806, 0.0737, 0.087, 0.0, 0.0373, 0.0387, 0.0194, 0.0, 0.0, 0.0, 0.0, 0.0191], [0.0, 0.0403, 0.0595, 0.0217, 0.0, 0.0224, 0.0663, 0.0323, 0.0, 0.0078, 0.0, 0.0, 0.0286], [0.0, 0.0645, 0.0737, 0.0652, 0.0187, 0.0829, 0.0168, 0.0, 0.0078, 0.0, 0.0, 0.0251], [0.0242, 0.0854, 0.087, 0.0224, 0.0552, 0.0323, 0.0, 0.0, 0.0, 0.0, 0.0143], [0.0, 0.0242, 0.088, 0.087, 0.0336, 0.0331, 0.0181, 0.0, 0.0, 0.0, 0.0, 0.0286], [0.0242, 0.0906, 0.0217, 0.0, 0.0261, 0.0663, 0.0207, 0.0, 0.0156, 0.0, 0.0, 0.0203], [0.0, 0.0403, 0.0893, 0.0435, 0.0, 0.0336, 0.0829, 0.0078, 0.0, 0.0078, 0.0, 0.0, 0.0286], [0.0, 0.0323, 0.0815, 0.1304, 0.0709, 0.0552, 0.0065, 0.0, 0.0, 0.0, 0.0, 0.0286], [0.0, 0.0242, 0.0918, 0.0435, 0.0, 0.0224, 0.0608, 0.0259, 0.0, 0.0, 0.0, 0.0, 0.0298], [0.0, 0.0645, 0.0763, 0.0652, 0.0, 0.0485, 0.0884, 0.0194, 0.0, 0.0078, 0.0, 0.0, 0.0298], [0.0, 0.0161, 0.1345, 0.087, 0.0448, 0.0331, 0.0155], [0.0, 0.0968, 0.0841, 0.0217, 0.0485, 0.0829, 0.0259, 0.0, 0.0, 0.0167], [0.0, 0.0403, 0.0841, 0.2391, 0.0112, 0.0387, 0.0039, 0.0, 0.0234, 0.0111, 0.0, 0.0549], [0.0, 0.0565, 0.0983, 0.087, 0.0, 0.0224, 0.0276, 0.0336, 0.0, 0.0, 0.0, 0.0, 0.0263], [0.0, 0.0726, 0.1242, 0.1957, 0.0, 0.0261, 0.0387, 0.0246], [0.0, 0.0484, 0.119, 0.087, 0.056, 0.0884, 0.0181], [0.0169, 0.0645, 0.1009, 0.0652, 0.0373, 0.0387, 0.0168, 0.0, 0.0078, 0.0, 0.0334], [0.0, 0.1452, 0.1035, 0.0435, 0.056, 0.0497, 0.0129, 0.0, 0.0, 0.0, 0.0, 0.0179], [0.0, 0.1613, 0.0944, 0.0, 0.0, 0.0149, 0.105, 0.0116, 0.0, 0.0078, 0.0, 0.0, 0.031], [0.0, 0.0806, 0.0673, 0.0217, 0.0, 0.0149, 0.0718, 0.0466, 0.0, 0.0, 0.0, 0.0, 0.043], [0.0, 0.0161, 0.1268, 0.1522, 0.0, 0.0522, 0.1326, 0.0129], [0.0, 0.0403, 0.1164, 0.0, 0.0, 0.041, 0.0331, 0.0181, 0.0, 0.0234, 0.0, 0.0, 0.031], [0.0, 0.0242, 0.0918, 0.0217, 0.0, 0.0597, 0.0994, 0.0285, 0.0, 0.0078, 0.0, 0.0, 0.0298], [0.0, 0.0242, 0.1087, 0.1087, 0.0, 0.0373, 0.0552, 0.0168, 0.0, 0.0078, 0.0, 0.0, 0.0382], [0.0, 0.0323, 0.1229, 0.0217, 0.0672, 0.0552, 0.0181, 0.0, 0.0, 0.0, 0.0, 0.0215], [0.0, 0.0403, 0.0957, 0.087, 0.0, 0.0634, 0.0994, 0.0181, 0.0078, 0.0, 0.0, 0.0334], [0.0, 0.1371, 0.1268, 0.0652, 0.0, 0.0597, 0.0994, 0.0103, 0.0, 0.0156, 0.0, 0.0], [0.0, 0.0484, 0.1151, 0.0652, 0.0746, 0.0663, 0.0181, 0.0, 0.0, 0.0, 0.0, 0.0227], [0.0, 0.0726, 0.1151, 0.087, 0.0, 0.041, 0.0442, 0.0246, 0.0, 0.0312, 0.0, 0.0, 0.0263], [0.0508, 0.0645, 0.1229, 0.1304, 0.0, 0.0224, 0.0718, 0.022, 0.0, 0.0078, 0.0111, 0.0, 0.0215], [0.0, 0.0645, 0.1332, 0.0435, 0.0597, 0.0718, 0.0065, 0.0, 0.0, 0.0, 0.0, 0.0394], [0.0, 0.0403, 0.1475, 0.0652, 0.0, 0.0634, 0.1381, 0.0233, 0.0, 0.0078, 0.0, 0.0, 0.043]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

