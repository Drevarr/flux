created: 20230213220222000
creator: Drevarr
modified: 20230705163519186
modifier: drevarr
tags: ChartData
title: 202302132202_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Daring Deathblade", "Warrior Husky", "Tacoplasm", "Belvyn Brightblade", "High Sorcer Baradun", "Kira Dragonblaze", "Ace Hammers", "Koralia Danai", "Jupi Jupi Jupi", "Sygaldry Verdandi", "Black Raspberry Pie", "Blanco Padre Guard", "Elonith Tenebris", "Zady Stardust", "Uneeta Healah", "Skye Nightroad", "Arriasa", "Gavann", "Xyntharos", "Ravioli Fetabringer", "Xanvias Tseli", "Raziel Umbra", "Arka\u00f1", "Whose Guardian", "Smol Gluvs", "Bella Sassy", "Smol Daddy Tika", "Tootsie Pop Bringer", "Lord Erin The Wise", "Joh Oshi", "Ryvalia Fazebringer", "Oo Dads Mad", "Mistwalker Caelon", "Zaylen Harker", "Drevarr Moonwillow", "Abigail Ryn", "Legacy Of Mathus", "Nelliel T", "Rina Of Theros", "Sassy Daddy Demon", "\u00c9\u00efbhear", "Mike The Archmagus", "Be\u00eb", "Grasszanine", "Arcanophage Farra", "Mac Chiato", "Jeckyll Mbs", "Newtype Khan", "Dark Sidiuz", "Tegan Parker"];
const professions = ["Scourge", "Berserker", "Tempest", "Firebrand", "Tempest", "Dragonhunter", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Scrapper", "Druid", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Chronomancer", "Chronomancer", "Dragonhunter", "Scourge", "Firebrand", "Berserker", "Scrapper", "Weaver", "Druid", "Chronomancer", "Spellbreaker", "Vindicator", "Firebrand", "Scrapper", "Tempest", "Berserker", "Scourge", "Scourge", "Vindicator", "Scrapper", "Tempest", "Scourge", "Spellbreaker", "Spellbreaker", "Tempest", "Berserker", "Spellbreaker", "Scourge", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1055, 0.075, 0.5625, 0.3073, 0.1167, 0.0757], [0.2594, 0.3448, 0.3902, 0.0, 0.4865], [0.1127, 0.5875, 0.3226, 0.1167, 0.0541], [0.1, 0.3612, 0.4268, 0.0, 0.4054, 0.8522], [0.2255, 0.475, 0.3575, 0.1833, 0.0649], [0.1969, 0.3158, 0.3049, 0.0, 0.7568, 0.8348], [0.1812, 0.2123, 0.2073, 0.7568, 0.8261, 0.0909, 0.025, 0.3375, 0.0182, 0.05, 0.0216], [0.0938, 0.2178, 0.1951, 0.3243, 0.8609, 0.0764, 0.15, 0.1439, 0.0333, 0.0054], [0.2439, 0.5676, 0.9739, 0.0545, 0.025, 0.1875, 0.3268], [0.0906, 0.2287, 0.2317, 0.0, 0.2432, 0.2, 0.1164, 0.0, 0.2875, 0.2304, 0.0667, 0.0486], [0.0218, 0.3293, 0.0, 0.9459, 0.9565, 0.2036, 0.0, 0.4125, 0.236, 0.1333, 0.0324], [0.0109, 0.2317, 0.5676, 1.0435, 0.1455, 0.0, 0.375, 0.3156, 0.1, 0.0324], [0.0381, 0.2317, 0.05, 0.5135, 0.8522, 0.1855, 0.075, 0.5375, 0.2821, 0.15, 0.1135], [0.4146, 0.0, 0.3784, 0.913, 0.1636, 0.3625, 0.3478, 0.0333, 0.0865], [0.0254, 0.4268, 0.7027, 0.8087, 0.1455, 0.0, 0.3375, 0.3575, 0.0, 0.0757], [0.15, 0.2686, 0.3293, 0.0, 0.4595, 0.7304, 0.1382, 0.05, 0.45, 0.1578], [0.1469, 0.2015, 0.2927, 0.0, 0.6216, 0.887, 0.08, 0.35, 0.2095, 0.0833, 0.027], [0.1, 0.2214, 0.2683, 0.3243, 1.0348, 0.0909, 0.025, 0.2125, 0.2235, 0.0432], [0.0938, 0.2105, 0.3537, 0.0, 0.4054, 0.913, 0.0909, 0.05, 0.2875, 0.2249, 0.0333, 0.0757], [0.1375, 0.1978, 0.3659, 0.0, 0.5135, 0.9478, 0.1236, 0.05, 0.15, 0.2151, 0.0667, 0.0432], [0.0938, 0.2686, 0.3293, 0.0, 0.3243, 1.0, 0.0982, 0.05, 0.275, 0.1676, 0.1833, 0.1027], [0.0781, 0.2922, 0.3171, 0.0, 0.4865, 0.8, 0.1673, 0.0, 0.325, 0.2039, 0.0167, 0.0811], [0.1281, 0.2396, 0.3415, 0.0, 0.4595, 0.913, 0.16, 0.0, 0.3125, 0.2235, 0.0167, 0.0378], [0.1281, 0.294, 0.2561, 0.4324, 0.7739, 0.1018, 0.075, 0.275, 0.2346, 0.15, 0.0432], [0.1625, 0.2613, 0.2195, 0.0, 0.6216, 0.8, 0.1673, 0.05, 0.325, 0.2081, 0.0667, 0.1243], [0.225, 0.2142, 0.3902, 0.7297, 0.7826, 0.1236, 0.0, 0.3, 0.2584, 0.0833, 0.0162], [0.25, 0.2813, 0.3293, 0.0, 0.6486, 0.0783, 0.1091, 0.0, 0.4375, 0.2891, 0.2833, 0.0865], [0.1281, 0.2686, 0.1951, 0.0, 0.4865, 0.9478, 0.1418, 0.025, 0.2625, 0.2654, 0.2, 0.0324], [0.1656, 0.2922, 0.3049, 0.0, 0.7568, 0.0348, 0.16, 0.05, 0.4625, 0.3073, 0.3333, 0.0757], [0.1187, 0.2904, 0.1585, 0.1, 0.6216, 0.9391, 0.0945, 0.2875, 0.2919, 0.0667, 0.0649], [0.1094, 0.2976, 0.2683, 0.0, 0.5405, 1.2261, 0.2036, 0.025, 0.3, 0.1997, 0.1667, 0.0865], [0.2687, 0.2759, 0.4634, 0.7297, 1.3217, 0.1527, 0.0, 0.3625, 0.1704], [0.1062, 0.2904, 0.3293, 0.0, 0.5676, 1.0957, 0.1855, 0.025, 0.3875, 0.2346, 0.1167, 0.1568], [0.125, 0.2396, 0.3902, 0.6216, 1.1565, 0.04, 0.525, 0.331, 0.0667, 0.0378], [0.1375, 0.2595, 0.3049, 0.0, 0.6216, 1.3391, 0.1309, 0.4625, 0.2598, 0.1333, 0.0811], [0.2188, 0.3194, 0.2683, 0.4054, 1.1304, 0.2291, 0.2375, 0.2612], [0.25, 0.3684, 0.3659, 0.0, 0.7838, 0.1565, 0.2618, 0.025, 0.5125, 0.2612, 0.1333, 0.0811], [0.2969, 0.392, 0.3171, 0.3243, 0.8435, 0.1345, 0.075, 0.4875, 0.1969, 0.1833, 0.0541], [0.1469, 0.3303, 0.4024, 0.0, 0.3243, 0.8261, 0.1455, 0.05, 0.4, 0.3142, 0.1667, 0.1135], [0.175, 0.3067, 0.3293, 0.0, 0.7297, 0.5826, 0.2073, 0.05, 0.2875, 0.3436, 0.1833, 0.1135], [0.1969, 0.2305, 0.4512, 0.8378, 1.3478, 0.1782, 0.0, 0.2125, 0.3017, 0.1833, 0.0216], [0.175, 0.2704, 0.3171, 0.5676, 1.3304, 0.1527, 0.025, 0.4, 0.2933, 0.1333, 0.0649], [0.1469, 0.2995, 0.6341, 0.0, 0.7568, 1.0609, 0.16, 0.05, 0.45, 0.2514, 0.3, 0.1081], [0.3187, 0.265, 0.439, 0.5676, 1.2174, 0.1345, 0.025, 0.425, 0.2612, 0.1333, 0.1081], [0.2562, 0.3376, 0.4512, 0.5405, 1.2522, 0.1091, 0.0, 0.4, 0.2821, 0.1333, 0.0324], [0.1094, 0.265, 0.2317, 0.1, 0.3243, 1.287, 0.2327, 0.5625, 0.3757, 0.05, 0.0757], [0.1469, 0.4229, 0.4146, 0.0, 0.8108, 0.9652, 0.0255, 0.025, 0.5625, 0.3045, 0.3667, 0.0649], [0.2344, 0.3775, 0.3293, 0.05, 0.4595, 1.1826, 0.1818, 0.025, 0.65, 0.2291, 0.35, 0.1081], [0.2375, 0.3358, 0.3902, 0.5405, 0.8609, 0.1164, 0.025, 0.6875, 0.3436, 0.0833, 0.1189], [0.3281, 0.323, 0.3415, 0.5946, 1.5913, 0.1527, 0.025, 0.425, 0.2598, 0.1167, 0.0486]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

