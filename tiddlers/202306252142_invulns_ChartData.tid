created: 20230625214256000
creator: Drevarr
modified: 20230705163536066
modifier: drevarr
tags: ChartData
title: 202306252142_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Wall Knot", "Koralia Danai", "Elonith Requiem", "Xanvias Tsolice", "Drev Of The Dead", "Hayuf", "Hayuf", "Booboo Hurts", "Drac Tepes", "Fluffy No Care Bear", "Latedoctor", "Gamora Titus", "Liyo Morgaine", "Ani Deasun", "Blaze All Might", "Vesnan", "Ateriuz", "Drevarr Moonwillow", "Elonith Requiem", "Govinda Ektar", "Aronorf Xideliesi", "Jerryatric Reflexes", "Melpomene Vandrish", "Charr Surethang", "Yngvar The Burdened", "Shrimp Tempsura", "Wall Knot", "Drumina", "Gestern Yesteryear", "Yedrax", "Tacitus Kilgore I"];
const professions = ["Firebrand", "Firebrand", "Scourge", "Weaver", "Reaper", "Dragonhunter", "Firebrand", "Firebrand", "Scourge", "Berserker", "Reaper", "Dragonhunter", "Herald", "Vindicator", "Firebrand", "Scourge", "Berserker", "Scrapper", "Reaper", "Vindicator", "Firebrand", "Berserker", "Chronomancer", "Spellbreaker", "Scourge", "Tempest", "Dragonhunter", "Druid", "Firebrand", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 17, 8], [0, 0, 0, 0, 0, 1, 0, 0, 14, 12, 0], [0, 0, 0, 0, 0, 0, 0, 12, 20], [0, 0, 24, 12, 0], [9, 28, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 32, 9, 0], [12, 0, 7, 23, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 13, 22, 0, 0, 8, 0, 0, 0, 0, 0, 0], [5, 21, 0, 0, 0, 0, 1, 22], [0, 11, 0, 0, 12, 0, 0, 7, 16, 4], [15, 22, 0, 0, 0, 0, 13, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 7], [0, 27, 17, 7], [0, 0, 0, 0, 0, 0, 0, 3, 13, 0, 9, 29, 0, 0, 0], [0, 2, 0, 0, 0, 16, 4, 0, 0, 18, 15], [0, 0, 0, 9, 0, 19, 18, 10, 0, 0, 0, 0, 0], [0, 5, 8, 19, 24], [0, 0, 0, 0, 0, 0, 6, 0, 0, 17, 17, 19], [8, 11, 19, 10, 0, 0, 16], [3, 27, 25, 0, 0, 0, 14, 0], [0, 0, 36, 10, 0, 21, 8, 0, 0, 0, 0, 0, 0], [22, 23, 24, 0, 2, 1, 0, 0, 0, 0, 0, 3], [0, 13, 13, 0, 0, 2, 0, 17, 11, 4, 17], [0, 17, 0, 0, 0, 16, 0, 0, 6, 28, 14, 10], [0, 0, 0, 25, 0, 9, 13, 0, 0, 0, 0, 24, 22], [16, 17, 0, 0, 26, 0, 24, 24], [0, 25, 0, 0, 3, 17, 0, 44, 0, 0, 25, 0, 0, 14], [7, 0, 19, 0, 0, 0, 0, 0, 10, 13, 0, 0, 8, 0, 0, 25, 0, 21, 28], [0, 0, 15, 0, 0, 16, 0, 0, 8, 5, 42, 13, 11, 0, 0, 0, 0, 26, 23], [0, 5, 0, 4, 27, 2, 0, 0, 93, 0, 21, 8], [2, 6, 0, 0, 0, 6, 17, 0, 0, 22, 35, 19, 22, 67, 0, 0, 35]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

