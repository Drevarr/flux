created: 20230523000132000
creator: Drevarr
modified: 20230705163531177
modifier: drevarr
tags: ChartData
title: 202305230001_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Really Good Griefer", "Phaydyd", "Arriasa", "Carne Palida", "Belvyn Brightblade", "Chloe Phoenixshadow", "Woginaator", "Hyde En Sikh", "Need Ragee", "Hrakkus", "Slingsshot", "S\u00f6phie Dark", "Cat Wigglebooty", "Crusader Siolith", "Tribal S", "Scrivy", "Mayauraa", "Elonith Primal", "Primal Clone", "Blanco Padre Guard", "Scraparone", "Zefirokai", "Sygaldry Verdandi", "Koralia Danai", "Oo Dads Mad", "The Incredible Mr E", "Drevarr Moonwillow", "Fribble Bibble", "Bamm\u00edt", "Black Raspberry Pie", "Bella Sassy", "Guntheryah", "Miphest\u00f6", "Cheaky Gadgetz", "Venomina The Fierce", "Cerys Fireblade", "Gavann", "Aira Draugr", "M\u00e4raas", "Sumatra Satyricon", "Grasszanine", "Hauzzy", "Smol Gluvs", "Phaydyd", "Cedryn X", "Nocta Asthariel", "Husky Guard", "Alnerian", "Kaye X Kaye", "Sire Nighthawk", "Kmpek", "Kary\u00edna", "Binkety Bonk", "Tootsy Pop Star", "Soxxdodendron", "Eruwon", "Lord Erin The Wise", "Cyclotechnist Farra", "My Birthday Girl", "Be\u00eb", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Tempest", "Firebrand", "Druid", "Scrapper", "Firebrand", "Dragonhunter", "Daredevil", "Chronomancer", "Druid", "Catalyst", "Untamed", "Reaper", "Scrapper", "Firebrand", "Druid", "Tempest", "Dragonhunter", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Scourge", "Scrapper", "Scrapper", "Berserker", "Chronomancer", "Firebrand", "Soulbeast", "Tempest", "Mechanist", "Spellbreaker", "Berserker", "Firebrand", "Herald", "Firebrand", "Soulbeast", "Spellbreaker", "Berserker", "Scourge", "Dragonhunter", "Berserker", "Scourge", "Dragonhunter", "Dragonhunter", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Reaper", "Willbender", "Weaver", "Weaver", "Scrapper", "Scrapper", "Scourge", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [7.4242, 0.0], [29.7333, 0.0, 4.6683, 3.0185, 5.6667, 19.7258, 13.24, 0.0, 4.3291, 0.0, 0.0, 0.5603], [3.1897, 17.8232, 13.3172], [72.7619, 3.9856, 2.4185, 5.264, 101.6129], [40.1143, 52.7019, 14.8667, 7.0022], [111.7452], [17.7429, 0.0, 8.8556, 25.8501, 72.7419, 55.7, 4.9052, 7.9372, 0.0, 0.0, 4.4431], [71.3462, 23.1148, 25.6219], [0.0, 3.537, 0.0, 0.0, 61.45], [313.781, 41.4856], [504.6286, 0.0], [27.4667, 0.0, 4.2452, 3.6889, 8.6331, 50.5323, 138.64, 0.0, 22.272, 0.0, 0.0, 34.3069], [107.8952, 18.6538, 6.9296, 28.6913, 50.0968, 76.66, 8.1293, 10.106, 0.0, 0.0, 19.9138], [58.5467, 0.0, 0.0, 30.6379], [25.899, 1.6704, 0.0, 1092.22], [0.0, 414.54, 36.5431, 10.4868, 472.3333, 0.0, 25.1655], [61.4857, 5.2788, 5.8519, 21.1208, 111.0161, 12.7, 0.0, 23.1074, 0.0, 2.2561, 34.2707], [81.3048, 0.0, 1.3077, 4.3519, 37.7897, 17.3387, 75.52, 3.7155, 32.3473, 5.9394, 0.0, 18.8466], [64.2857, 2.8702, 2.4333, 56.9508, 9.4355, 59.06, 8.2155, 30.2469, 0.0, 0.0, 11.919], [179.64, 10.3103, 14.5286, 54.0244, 68.9517], [139.4724], [94.9333, 18.125, 6.1111, 16.8658, 25.871, 78.22, 0.0, 28.643, 0.0, 0.0, 59.55], [38.4286, 0.0, 3.8558, 2.1593, 92.2774, 44.2258, 21.32, 0.0, 32.6067, 0.0, 25.4224], [261.8381, 0.0, 32.6394, 7.8111, 134.9172], [45.4074, 13.9687, 294.3871, 61.2931, 84.0404], [106.3238, 34.7209, 16.5385, 9.5333, 81.085, 80.9839, 71.82, 0.5431, 33.0139, 1.122, 36.0931], [71.819, 13.7209, 9.2067, 141.1148, 19.1879, 14.9355, 61.94, 0.0, 42.1925, 0.0, 32.1776], [0.0, 49.8031, 0.8387, 516.92, 0.0, 107.0809, 0.0, 47.7256], [351.2667, 0.0, 23.6683, 19.7741, 42.1186, 81.371, 2.06, 0.2155, 59.5607, 0.0, 0.0, 44.3776], [112.4857, 81.125, 5.3963, 76.5078, 31.9032, 0.0, 0.0, 60.1855, 0.0, 66.6172], [62.4815, 296.085], [167.2667, 0.0, 23.8894, 75.7204, 267.4194, 309.56, 1.6552, 55.4895, 0.0, 0.0, 60.6052], [43.2506, 0.0, 693.56, 0.0, 82.4491, 212.0606, 0.0, 84.3983], [213.6095, 40.4884, 65.6346, 3.4259, 107.4832, 31.8362, 72.8103, 0.0, 95.8948], [841.2, 0.0, 227.9471, 57.6407, 48.7002, 424.3387], [95.2326, 52.9038, 0.0, 157.7562, 221.46, 7.5776, 145.4045, 223.9697, 0.0, 29.419], [683.8, 0.0, 28.6058, 42.6741, 223.3669, 682.5323], [322.9619, 0.0, 8.6538, 9.237, 109.3065, 77.6774, 195.08, 18.6466, 128.7741, 0.0, 0.0, 112.4534], [160.8857, 130.4231, 11.8, 94.2729, 383.9677, 274.7, 0.0, 82.8396, 307.0, 0.0, 173.8379], [292.219, 0.0, 41.3558, 7.2556, 177.4407, 278.4516, 436.72, 0.0, 137.5662, 0.0, 118.2086], [44.8898, 59.7879, 0.0, 579.9414], [283.2571, 0.0, 109.6298, 35.0704, 197.0224, 594.3548, 867.4, 15.0517, 150.622, 0.0, 82.7793], [717.04, 14.819, 246.4142, 370.0034], [265.819, 151.5481, 0.0, 51.7606, 67.931, 234.6304, 90.9697, 0.0, 333.3328], [111.181, 0.0, 133.4952, 29.4111, 283.1186, 187.3387, 633.5, 1.7759, 208.3501, 38.6061, 0.0, 244.7638], [988.3619, 0.0, 111.2452, 113.5407, 159.6532, 486.1129, 318.14, 0.0, 390.2036, 130.8788, 0.0], [0.0, 477.5806, 0.0, 0.0, 249.6974, 368.5758, 146.3963, 635.269], [175.2067, 73.7407, 232.481, 641.2581, 541.82, 25.8707, 261.7155, 60.8485, 0.0, 374.0155], [958.4667, 0.0, 167.3942, 0.0, 772.629, 665.86, 0.0, 415.6722, 40.5122, 352.5017], [963.4667, 118.1058, 41.7148, 466.6398, 650.3871, 1264.82, 0.0, 74.8563, 0.0, 15.5, 392.9069], [64.8095, 0.0, 198.4567, 34.0222, 205.962, 604.4355, 835.62, 47.4052, 523.9107, 178.9394, 35.3293, 339.469], [740.9677, 1041.7, 66.3448, 590.1018, 0.0, 533.8897], [1248.5619, 0.0, 336.5625, 52.5889, 175.4899, 950.6129, 667.4, 25.1121, 426.9428, 144.5152, 45.7866, 447.3138], [774.9143, 0.0, 250.0192, 81.8259, 310.2237, 973.7581, 1132.12, 34.181, 499.3821, 297.6364, 0.0, 338.8776], [0.0, 85.2155, 878.9121, 345.9394, 0.0, 616.8948], [792.3714, 0.0, 257.3221, 117.7556, 345.2774, 435.8226, 429.98, 0.0, 574.6471, 4.1212, 0.0, 537.3259], [69.7429, 11.186, 372.274, 230.1963, 633.4049, 516.2419, 247.24, 348.2759, 271.2762, 0.0, 0.0, 770.1414], [0.0, 105.0817, 222.0667, 115.519, 823.5161, 778.08, 185.6466, 1115.5537, 16.9697, 0.0, 414.9466], [1318.9714, 210.9615, 117.9333, 398.5459, 535.1452, 1214.38, 41.2328, 662.272, 378.697, 0.0, 550.5948], [1616.8952, 412.9615, 43.9148, 820.5414, 1222.371, 1260.54, 0.0, 797.9358, 508.2138], [1841.1619, 658.3125, 70.6889, 91.9195, 1631.8871, 1512.74, 0.0, 1057.3752, 0.0, 0.0, 915.9466]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

