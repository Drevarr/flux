created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Newtype Khan", "Sub Train", "Darks Na", "Arcanophage Farra", "Crusader Siolith", "Bella Sassy", "Koralia Danai", "Solus Luxes"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.8765, 52.5141, 340.3102, 15.3568, 47.4518, 10.3229, 98.8395, 46.369, 300.8538, 12.0717, 45.0055, 93.7669, 48.6108], [16.7875, 196.84, 255.6247, 32.3473, 47.1172, 24.7233, 130.152, 38.6935, 204.723, 15.5142, 60.7237, 73.485, 14.6664, 0.0, 59.7029, 14.9206, 208.575, 15.514, 0.0, 502.7616, 162.3758, 0.0, 7.8336, 20.1331, 0.0], [0.0, 79.9311, 131.1057, 15.722, 117.8209, 0.0, 112.3449, 28.0833, 343.5786, 32.7726, 87.9883, 130.0195, 63.4284, 41.6584, 88.6849, 26.3458, 168.7127, 25.0843, 17.9626, 947.232, 220.1126, 9.919, 12.1805], [1.5451, 167.6655, 425.9367, 8.0724, 91.0561, 21.8392, 137.2549, 55.3991, 455.1378, 41.6313, 50.4837, 132.077, 63.2394, 26.9395, 247.5063, 35.3365, 163.8001, 33.4121, 17.2418, 868.4478], [14.797, 203.0967, 669.6427, 0.0, 128.9171, 0.0, 198.2793, 48.6265, 412.413, 0.0, 71.7223, 119.9275, 47.439, 47.8289, 239.6811, 14.1902, 199.7323, 30.3899, 0.0, 739.1142, 204.8587, 15.9932, 109.1597, 15.5477], [56.6822, 181.3037, 751.819, 178.3762, 41.5701, 235.7943, 74.949, 569.664, 71.1909, 82.7208, 209.3833, 75.3732, 71.6982, 277.3577, 11.7904, 217.558, 77.9392, 47.9833, 1050.1524, 342.7142, 44.4308, 0.0, 54.9965, 61.4686], [72.3701, 192.1299, 742.4095, 64.214, 124.5121, 18.3187, 221.7887, 69.6664, 720.981, 105.4782, 85.5442, 223.6883, 117.2934, 55.1131, 339.3792, 69.7513, 321.1437, 58.362, 43.8808, 1304.2656, 350.555, 47.866, 0.7987, 68.1946, 79.735], [19.8917, 197.4727, 887.6295, 70.3836, 155.7377, 26.7123, 260.5042, 59.6431, 676.7727, 89.3673, 139.6941, 205.856, 109.4688, 79.1329, 394.5899, 227.5236, 66.8578, 27.8863, 1340.2422, 416.2752, 37.856, 0.0, 60.2381, 74.6798], [23.6222, 179.3353, 945.3411, 70.2107, 162.6519, 36.3589, 193.6774, 84.2499, 746.7939, 61.7355, 117.9077, 297.0754, 115.4034, 45.752, 258.8093, 48.8833, 392.0255, 55.3734, 35.2044, 1503.7308, 379.7798, 37.6968, 0.0, 71.232, 44.2642]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

