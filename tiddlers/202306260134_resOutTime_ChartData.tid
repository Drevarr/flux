created: 20230626013408000
creator: Drevarr
modified: 20230705163538939
modifier: drevarr
tags: ChartData
title: 202306260134_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Elon The Archmagus", "Minka Bringer", "Ayeme", "Fribble Bibble", "Arcanophage Farra", "Kary\u00edna", "Sub Train", "Lord Erin The Wise", "Tootsie Pop Rocks", "Lucky Leipreach\u00e1n", "Gestern Yesteryear", "Taery Shimui", "Argentum Boomstick", "Bella Sassy", "Tegan Parker", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Solus Sanctus", "Aira Draugr", "Xanvias Einzbern", "Koralia Danai", "Sygaldry Verdandi", "Artakama Nahid", "Sumatra Satyricon", "Azariel Moon", "Newtype Khan", "Aronorf Xideliesi", "Primal Clone"];
const professions = ["Tempest", "Scrapper", "Deadeye", "Scrapper", "Spellbreaker", "Vindicator", "Firebrand", "Weaver", "Scrapper", "Scrapper", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Tempest", "Chronomancer", "Scrapper", "Firebrand", "Herald", "Berserker", "Firebrand", "Firebrand", "Tempest", "Soulbeast", "Reaper", "Spellbreaker", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 59.04, 0.0, 0.0, 0.0, 0.0, 76.11, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 83.66, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 121.9, 0.0, 0.0, 0.0], [278.3, 0.0, 0.0, 0.0, 0.0, 54.18], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 190.92, 25.37, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 125.49, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 95.46, 50.74, 0.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 1001.3, 0.0, 0.0, 47.73, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 209.15, 0.0, 0.0, 26.88, 111.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 1401.82, 0.0, 0.0, 0.0, 36.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 82.72, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2202.86, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1602.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 129.72, 0.0], [0.0, 143.19, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.76, 111.32, 0.0, 0.0, 127.84, 0.0, 0.0, 0.0, 0.0], [155.1, 0.0, 0.0, 0.0, 767.04, 0.0, 0.0, 0.0, 0.0, 0.0], [206.8, 0.0, 0.0, 333.96], [0.0, 0.0, 0.0, 29.52, 0.0, 0.0, 0.0, 95.46, 25.37, 54.12, 0.0, 0.0, 0.0, 0.0, 0.0, 46.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 43.24, 0.0, 111.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.5, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 167.32, 82.72, 0.0, 26.88, 0.0, 0.0, 0.0, 0.0, 0.0, 27.09, 0.0, 25.37], [0.0, 0.0, 0.0, 59.04, 1001.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 83.66, 0.0, 0.0, 80.64, 0.0, 0.0, 0.0, 63.92, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 143.19, 0.0, 0.0, 123.2, 0.0, 0.0, 0.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 0.0, 0.0, 330.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 1001.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 125.49, 0.0, 129.72, 107.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.74], [0.0, 0.0, 0.0, 3404.42, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1602.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 767.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 127.84, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 4005.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1401.82, 0.0, 0.0, 30.8, 0.0, 0.0, 45.0, 0.0, 0.0, 191.76, 0.0, 0.0, 0.0, 236.88, 0.0, 0.0, 86.48, 26.88, 0.0, 0.0, 127.84, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 4405.72, 0.0, 0.0, 0.0, 0.0, 0.0, 92.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2202.86, 0.0, 0.0, 0.0, 0.0, 126.28, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.36, 236.88, 0.0], [0.0, 0.0, 0.0, 1288.71, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 177.12, 3804.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.5, 0.0, 0.0, 191.76, 0.0, 0.0, 41.36, 0.0, 83.66, 0.0, 129.72, 53.76, 0.0, 0.0, 0.0, 0.0, 0.0, 27.09, 0.0, 0.0], [0.0, 0.0, 0.0, 59.04, 200.26, 0.0, 0.0, 143.19, 101.48, 0.0, 0.0, 0.0, 1034.0, 45.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.68, 0.0, 0.0, 413.6, 43.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 708.48, 8010.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 107.52, 0.0, 0.0, 0.0, 0.0, 24.38, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

