created: 20230603000934000
creator: Drevarr
modified: 20230705163533034
modifier: drevarr
tags: ChartData
title: 202306030009_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Blanco Padre Guard", "Sister Elon\u00edth", "Duke Silvver", "Xyntharos", "Arriasa", "Drevarr Moonwillow", "Sumatra Satyricon", "Bella Sassy", "Wild Doggy", "Air One Com", "Koralia Danai", "Latedoctor", "Husky Guard", "Morv\u00e4rth", "Dargon Spiritwalker", "Pu Ella", "Ana Larive", "Morv\u00e4rth", "High Sorcer Baradun", "Grilo Gringo", "Grothez", "Destiny Searider", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "A Girl Named Jeff", "Dusknant", "Proteccdebussy", "Axunar", "Sanellek Knut", "Johnny London", "Casian Of Phoenicia", "Xxenia De Berg", "Kardknight", "Sigrid Oluvkin", "Vdddzz", "Lilmickeyy", "Be\u00eb", "Smallniv", "Gamora Titus", "Y\u00e4suke", "Petra Sykora", "Tamizo", "Drunkirishman", "N\u00f3b\u00fa", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Gestern Yesteryear", "Fluffy I Care Bear", "Rozaalyna", "Fluffy I Care Bear", "Tacitus Kilgore I"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Vindicator", "Druid", "Scrapper", "Soulbeast", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Reaper", "Dragonhunter", "Reaper", "Scourge", "Firebrand", "Tempest", "Scourge", "Tempest", "Dragonhunter", "Tempest", "Ranger", "Herald", "Spellbreaker", "Vindicator", "Firebrand", "Dragonhunter", "Druid", "Soulbeast", "Ranger", "Mechanist", "Renegade", "Scourge", "Soulbeast", "Mesmer", "Reaper", "Virtuoso", "Firebrand", "Vindicator", "Ranger", "Druid", "Ranger", "Soulbeast", "Vindicator", "Firebrand", "Tempest", "Scourge", "Weaver", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[518.3161, 2103.8261, 564.7037, 1356.8298, 0.0, 1603.2314, 309.3874, 1911.1667, 249.1064, 498.0, 369.1746, 1032.6667, 237.2313, 303.1908], [0.0, 145.4125, 9.7241, 585.3233, 111.3333, 0.0, 68.1765, 533.9074, 1065.3475, 322.2083, 242.2388, 39.5588, 779.9574, 0.0, 1176.8273, 184.4516, 95.2867, 286.95, 15.5918, 162.0303, 394.6667, 221.8977, 130.8303], [91.3333, 35.5, 466.7729, 132.0667, 0.0, 301.2222, 885.4016, 296.157, 293.1479, 41.9688, 693.5106, 0.0, 543.6242, 180.1184, 1176.4697, 322.6053, 0.0, 371.7727, 80.5833, 207.9885, 82.1179], [268.3111, 198.875, 61.9032, 381.9949, 128.8871, 0.0, 85.381, 327.0847, 933.0824, 501.0567, 703.1197, 138.4103, 3590.3889, 192.3077, 1006.6667, 550.0612, 749.7368, 180.6348, 146.48, 257.9084, 167.0161, 188.4574, 204.2713], [41.4651, 111.1728, 10.5556, 503.3841, 166.85, 0.0, 65.45, 152.2833, 1262.8934, 1107.0119, 332.3942, 0.0, 728.3404, 0.0, 1171.0551, 168.0903, 1054.8118, 235.9519], [71.6522, 82.0625, 134.6, 511.7947, 146.7167, 0.0, 76.3729, 1240.401, 467.0052, 412.3008, 0.0, 677.4468, 0.0, 1359.92, 186.6312, 105.687, 10.6944, 174.816, 222.2826, 183.5517, 197.2136], [47.3256, 163.0875, 116.8824, 419.8251, 94.4167, 20.35, 20.7826, 274.1552, 1044.0478, 329.0995, 313.0704, 191.557, 1140.2791, 0.0, 962.0, 87.7895, 477.122, 134.4369, 11.5652, 202.7634, 151.2903, 188.4086, 87.44], [0.0909, 177.4937, 18.3793, 741.8033, 89.8793, 55.7619, 481.1833, 1315.1636, 327.4375, 1061.2019, 123.1053, 4952.6667, 0.0, 1151.0833], [46.4468, 140.6914, 0.0, 420.4083, 139.0167, 0.0, 0.0, 314.1017, 1075.4024, 253.2766, 212.5704, 71.987, 1098.4255, 0.0, 804.175, 112.3, 413.9153, 179.4958, 0.0, 222.2273, 259.2667, 78.0992, 93.9352], [151.5, 40.2778, 0.0, 554.3889, 1099.8564, 299.7268, 545.7132, 6966.4286, 103.2222, 540.915, 490.6273, 3044.0435, 292.8333, 216.8841, 382.2791, 193.8571, 256.1732, 151.2072], [6.1379, 103.4684, 0.0, 450.9147, 99.2167, 0.0, 219.1053, 1014.9319, 408.5026, 215.3768, 28.5676, 1147.6957, 1058.696, 284.9, 427.8548, 352.7423, 21.4255, 260.2093, 399.2, 88.3543, 64.4643], [3.2778, 175.6795, 0.0, 414.5565, 48.1379, 0.0, 0.0, 174.5, 1141.5833, 614.1221, 209.0565, 6.8056, 800.2553, 955.6395, 136.6053, 725.33, 120.495, 13.0, 214.0746, 74.4125, 139.3258, 104.8606], [1372.1707, 1001.1091, 2920.9167, 458.4576, 436.2308, 421.837, 58.3944, 396.3684, 245.3625], [19.4524, 464.0, 32.9286, 762.2356, 308.1333, 0.0, 8.1667, 302.9483, 1125.7191, 1790.2857, 4385.0, 36.8966, 5111.0, 0.0], [307.2326, 348.9512, 163.0, 862.7182, 389.1, 511.8305, 2009.7778, 222.3333, 268.6364, 283.3745], [44.5952, 96.0, 26.3214, 660.7268, 152.8667, 0.0, 34.4706, 160.5965, 1492.1165, 632.7047, 557.7064], [93.9125, 168.6923, 358.9497, 91.5833, 0.0, 0.0, 123.6102, 1293.85, 377.0474, 1010.1525, 6.7403, 3516.8, 0.0, 834.8165, 176.0053, 986.1333], [486.4074, 131.3571, 771.8395, 184.0333, 76.7, 0.0, 555.2241, 893.7557, 706.852, 460.2701], [791.5916, 316.3714, 592.5143, 1168.6341, 0.0, 1237.9167, 305.5503, 1384.4786, 451.6176, 78.0366, 478.9924], [354.5116, 240.3671, 6.6786, 752.8558, 106.8136, 0.0, 0.0, 330.0175, 1282.4894, 3300.0278, 1200.73], [1392.3652, 4811.0, 1679.7121, 336.7403, 1025.6087, 0.0, 1314.0312], [367.25, 120.4615, 905.9843, 212.0, 151.6667, 12.381, 853.7333, 1562.3107, 1337.1791, 739.9692], [104.962, 247.625, 1152.0628, 233.234, 40.1143, 0.0, 1973.7642, 1059.7436, 2250.2727, 147.5263], [15.4878, 23.4568, 52.3704, 512.59, 163.35, 0.0, 1103.588, 184.4606, 356.8188, 9.1389, 993.4894], [0.0, 1112.8803, 677.4132, 1659.5361, 277.4876, 113.3488, 269.4651, 435.7391, 306.4565, 227.0549], [18.9545, 160.0519, 212.7143, 408.0967, 106.4, 635.7368, 1289.8462], [0.0, 685.3023, 317.7447, 1384.1809, 214.5887, 157.7551, 370.7939, 493.0263, 308.4701, 355.157], [1092.8116, 201.1842, 1776.25, 263.2366, 20.5778, 426.237, 425.2632, 215.1866, 227.5754], [1329.1828, 2026.625, 519.3832, 525.1587, 353.1774, 1219.5273], [357.0, 218.2245, 670.7538, 299.1613, 437.2955, 432.75], [1075.5517, 706.028, 46.8776, 1443.1765, 333.5085, 317.1288], [1484.7692, 451.3101, 278.9163], [1493.4848, 569.9828, 146.2951, 212.197, 97.9234], [533.2782, 12.5526, 383.3906, 319.8, 252.4091, 241.4], [9.3036, 466.4485, 296.3769, 0.0, 216.0815, 70.4516, 271.963, 192.5785], [715.8356, 82.4825, 499.8608, 8859.2857, 2219.9], [1375.0846], [984.9787, 1098.3846], [337.8571, 37.1429, 156.5659, 182.0139, 371.7519, 161.97], [258.0076, 374.1818, 283.9597, 273.0599], [2435.6552, 3128.0833], [531.5111, 123.8924], [63.381, 955.6829], [412.1935], [11.1818, 276.4407, 0.0, 919.5246], [3.3778, 185.9846, 268.1786, 83.9921, 82.8492], [162.6102], [23.1395, 343.675, 0.0], [207.7203], [97.2449]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

