created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Keypek The Drunk", "Tootsie Pop Rocks", "Klengah", "Gabe Malhorn", "Jerryatric Reflexes", "Ryvalia Fazebringer", "Zaedy Zae", "Venomina The Sly", "Arriasa", "Inedible Plant", "Gavann", "Urilstormwalker", "Drevarr Moonwillow", "Solus Sanctus", "Crusader Siolith", "Sub Train", "Bella Sassy", "Rafaellagabriela", "Sygaldry Verdandi", "Koralia Danai", "Sister Elon\u00edth"];
const professions = ["Tempest", "Scrapper", "Scrapper", "Druid", "Firebrand", "Spellbreaker", "Chronomancer", "Druid", "Druid", "Druid", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.5203, 16.4718, 48.99, 24.4122, 0.0, 59.1024, 0.0, 19.0102, 0.0, 18.5443, 19.1111, 41.1443, 14.5973, 0.0, 18.0393, 0.0, 0.0, 57.33], [60.1251, 31.3051, 55.522, 5.6962, 0.0, 18.4464, 10.3632, 12.6203, 24.056, 9.5941, 45.4184, 105.1187, 4.4194, 10.6243, 18.0393, 8.0638, 32.7205, 23.868], [119.4017, 30.6152, 99.7763, 22.7567, 17.9957, 43.6128, 22.1952, 32.0458, 0.0, 56.47, 9.4376, 67.2358, 18.3917, 20.857, 45.9596, 0.0, 2.6014, 70.434], [140.1303, 36.5226, 109.9009, 14.7315, 20.1512, 33.5328, 0.0, 36.2952, 0.0, 58.9168, 75.2649, 288.512, 18.3917, 0.0, 54.662, 11.4591, 88.1603, 112.905], [484.7588, 148.8934, 454.4639, 76.3513, 46.3445], [54.4606, 223.2311, 50.059, 10.6145, 55.0704, 0.0, 62.4303, 44.5997, 59.0456, 196.1841, 303.3139, 49.595, 30.4042, 49.3136, 11.742, 32.3736, 80.847], [141.1001, 51.4853, 179.3034, 17.1447, 22.9926, 36.4224, 20.3728, 28.6911, 57.4561, 79.8436, 171.0565, 318.3667, 58.2106, 56.4509, 23.1158, 10.5496, 76.1358, 0.0], [182.921, 72.2691, 171.7916, 50.1432, 39.3226, 46.872, 0.0, 35.9118, 17.2965, 85.188, 96.7354, 440.2944, 35.8013, 20.0736, 30.0051, 31.083, 54.6883, 153.738], [119.8305, 160.8505, 39.5927, 56.3712, 78.5232, 0.0, 24.4418, 9.4766, 65.4846, 153.5969, 535.8797, 54.9965, 20.2205, 20.3963, 13.2982, 72.6672, 171.405], [202.8011, 84.1702, 181.9162, 41.3604, 36.8731, 71.568, 17.0136, 73.9962, 55.9981, 145.1995, 131.7725, 478.9299, 33.2122, 39.0701, 38.7982, 4.911, 138.3971, 164.268], [422.8154, 105.644, 205.9213, 66.2497, 32.8233, 79.3632, 0.0, 220.014, 473.4106, 112.9838, 26.879, 78.3216, 0.0, 45.9011, 155.961], [503.7903, 158.5954, 514.8849, 110.6406, 101.8992, 175.4592, 113.9976, 162.8254, 227.8762], [85.1467, 171.9044, 327.6163, 249.0347, 1201.2134, 130.9291, 44.7494, 114.219, 37.8735, 134.1192, 307.008], [322.5664, 146.0906, 344.7263, 48.5438, 85.2753, 79.9008, 35.3328, 44.73, 178.1338, 120.6669, 304.5985, 814.6074, 90.1282, 124.4074, 141.414, 26.8793, 132.963, 209.664], [549.7327, 242.0757, 439.6036, 112.6048, 125.0225, 126.2688, 0.0, 97.8948, 99.6038, 215.7709, 95.7916, 604.3699, 0.0, 99.6336, 92.5536, 0.0, 96.138, 270.504], [503.4267, 98.6586, 263.2396, 63.3595, 29.492, 86.3184, 0.0, 85.1467, 140.5587, 233.6069, 261.4215, 701.7114, 165.7037, 135.0317, 168.3371, 18.0475, 332.2919, 397.8], [473.1217, 247.3363, 541.8294, 113.8955, 100.0702, 207.1104, 15.98, 98.5657, 29.689, 188.1476, 344.7083, 750.3821, 167.891, 65.4106, 17.858, 12.4898, 109.0875, 250.965], [425.4822, 113.0175, 470.1407, 81.2337, 132.6976, 144.816, 57.8, 149.526, 99.3387, 278.8731, 485.2106, 947.8246, 117.1354, 56.5488, 191.8154, 32.3764, 120.2448, 445.068], [121.4259, 490.0633, 102.5874, 172.7714, 220.6512, 21.2296, 164.9259, 213.9196, 291.6867, 354.3819, 976.1741, 291.0974, 187.6637, 189.2772, 17.4614, 205.1677, 346.671], [527.5494, 233.4517, 482.2249, 137.9991, 99.0578, 172.6704, 26.3568, 122.688, 94.6336, 307.1403, 336.8043, 942.3053, 148.7405, 68.2992, 77.8684, 69.1586, 191.698, 354.159], [627.0711, 177.1801, 598.3312, 147.4272, 191.6815, 183.4896, 64.6816, 146.0115, 116.3038, 411.4521, 478.3683, 1279.488, 213.647, 140.6131, 305.0372, 9.1147, 180.0782, 358.137], [745.6242, 275.1056, 889.0052, 131.7698, 186.5213, 235.704, 54.2776, 97.9267, 276.4122, 359.6825, 568.1435, 1568.5018, 154.7222, 128.8138, 362.9626, 121.7248, 263.787, 532.116]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

