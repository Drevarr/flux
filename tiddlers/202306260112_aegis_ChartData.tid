created: 20230626011254000
creator: Drevarr
modified: 20230705163537415
modifier: drevarr
tags: ChartData
title: 202306260112_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Crusader Siolith", "Ryvalia Fazebringer", "Sub Train", "Fribble Bibble", "Belvyn Brightblade", "Eoooeee", "Mmathuss", "Drevarr Moonwillow", "Yummy Kiwi", "Traidoruns Maximus", "Sygaldry Verdandi", "Gestern Yesteryear", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.0104, 35.4522, 0.0, 1.76, 58.0625, 27.3197, 0.0, 11.2455, 0.0, 24.4494, 29.3983, 3.6828, 0.0, 4.8222, 24.4081, 0.0, 0.0, 0.0, 0.0, 13.4688, 20.0448, 7.5456, 0.0994, 13.1835, 20.3174, 0.0], [17.2348, 6.8972, 20.056, 6.4243, 0.0, 68.2731, 11.7413, 107.1979, 36.8352, 48.5622, 16.02, 0.0, 5.3636], [0.0, 0.0, 0.0, 34.32, 59.2834, 8.7494, 0.0, 46.9312, 0.0, 54.6516, 22.5515, 0.0, 0.0, 7.2589, 28.5343, 0.0, 9.2552, 51.529, 0.0, 0.0, 0.0, 6.0552, 5.616, 2.8566, 1.4382, 0.0, 6.659], [5.9568, 0.0, 0.0, 17.424, 47.074, 0.3571, 0.0, 38.0848, 0.0, 1.9176, 36.0536, 11.0959, 11.9314, 0.0, 28.9786, 14.2388, 0.0, 0.0, 0.0, 0.0, 25.5907, 39.5885, 24.192, 29.0131, 38.6716, 18.8813, 11.7999], [24.7908, 0.0, 0.0, 28.336, 58.3338, 29.9088, 71.5214, 0.0, 38.5118, 0.383, 1.5137, 1.5903, 11.6803, 15.5912, 10.488, 22.0147, 26.9329, 0.6782, 3.6893, 44.3909, 14.4, 0.2236, 3.6355, 5.449, 4.8576], [3.7668, 20.2667, 4.0867, 91.608, 29.7095, 12.0082, 88.3147, 0.0, 156.1246, 45.9169, 7.1161], [0.0, 125.591, 65.56, 157.9082, 37.7208, 35.9856, 47.3066], [39.8635, 62.7499, 49.1176, 75.7452, 0.0, 5.1203, 19.9004, 6.0021, 50.2444, 8.4815, 13.1192, 63.0605, 0.0, 0.0, 22.3114, 41.5512, 10.3392, 3.0802, 25.8477, 18.9235, 11.3546], [9.636, 57.2065, 0.0, 81.488, 96.5899, 1.8302, 0.0, 89.0644, 28.2083, 73.3482, 11.9221, 5.5717, 9.3047, 6.2843, 18.9805, 3.2844, 43.0376, 34.2451, 57.5985, 0.713, 12.4733, 59.5915, 24.048, 5.1419, 19.6554, 11.5315, 5.5053], [0.0, 87.7899, 89.8934, 321.3578, 34.8566, 16.6439, 29.1829, 10.2857, 38.5006, 23.667, 48.5944, 31.8797, 0.0, 90.828, 8.6962, 39.672, 26.5536, 12.9665, 37.7927, 31.68, 12.9536], [28.7328, 51.8935, 0.0, 144.584, 186.1255, 80.1288, 21.1459, 69.4972, 39.8978, 305.6974, 64.9253, 19.21, 23.284, 14.3896, 36.6597, 5.1971, 99.2128, 32.471, 45.4894, 28.6935, 24.0389, 18.959, 48.7008, 57.3556], [60.152, 27.1253, 52.3706, 177.232, 165.6409, 62.5406, 0.0, 151.8892, 7.5186, 354.9158, 108.2088, 19.5426, 0.8904, 34.6788, 37.4532, 28.9414, 51.9616, 33.5194, 109.4639, 12.0165, 7.9642, 63.9763, 58.2336, 9.9112, 56.6891, 48.8083, 17.285], [33.9304, 65.3209, 133.2725, 164.12, 293.2969, 102.3595, 17.1342, 129.923, 136.3219, 171.785, 85.7531, 26.5162, 25.6435, 24.624, 82.3653, 61.4762, 50.14, 57.0931, 42.9011, 39.0302, 96.4656, 38.8512, 47.2208, 45.9425, 34.0666, 14.593], [51.7132, 58.018, 63.9874, 277.2, 271.727, 176.7744, 26.4811, 224.0104, 266.9912, 535.33, 198.5105, 0.0, 42.4721, 29.4462, 4.2849, 52.5311, 24.3616, 29.4067, 83.4241, 23.633, 10.453, 92.1643, 45.5616, 25.5852, 41.7477, 0.0, 6.9626]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

