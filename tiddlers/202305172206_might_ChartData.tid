created: 20230517220640000
creator: Drevarr
modified: 20230705163530532
modifier: drevarr
tags: ChartData
title: 202305172206_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupiter Four", "Cat Wigglebooty", "Itsy Bitsy Tika", "Lathena Haras", "Arriasa", "Tegan Parker", "Sygaldry Verdandi", "Zadie Miststep", "Miphest\u00f6", "Koralia Danai", "Gabe Malhorn", "Venomina The Siren", "Solus Sanctus", "Drevarr Moonwillow", "Johosh The Great", "Bella Sassy", "Lucas Ryn", "Artakama Nahid", "Newtype Khan", "Grasszanine"];
const professions = ["Chronomancer", "Scrapper", "Firebrand", "Catalyst", "Druid", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 19.8789, 10.7093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.0773, 0.0, 5.9558, 9.4949, 0.0, 0.0, 0.0, 8.5728, 8.4326, 2.4552, 0.0, 0.0, 0.0, 4.8863, 19.9234, 4.4688, 0.0, 5.9378, 5.9623, 0.0, 0.0, 15.0192, 0.0, 8.798, 24.2717, 0.0, 0.0, 0.0], [2.248, 0.418, 5.756, 10.0339, 2.003, 2.3265, 8.9746, 3.1283, 1.1491, 8.2253, 3.744, 11.9794, 3.7393, 2.1504, 17.0366, 7.1064, 5.6218, 6.205, 1.2852, 2.9606, 2.9484, 1.2524, 18.0359, 4.9157, 12.4382, 13.9503, 11.759, 7.497, 0.0, 23.9904, 0.0, 10.2797, 2.5344, 1.909, 1.9008], [3.516, 6.3391, 12.8768, 10.2269, 5.8219, 0.0, 1.5115, 3.0794, 4.0843, 1.6963, 7.4909, 10.08, 9.4075, 2.2363, 2.106, 7.68, 17.7773, 9.4752, 6.5587, 1.2499, 5.8477, 0.0, 0.0, 0.8114, 8.2839, 12.4009, 2.4549, 7.154, 16.148, 6.7306, 2.052, 16.8336, 1.0458, 12.9654, 4.9099, 1.386, 1.1136, 10.6704], [6.9744, 41.7754, 23.5411, 7.7875, 12.47, 12.1237, 8.163, 13.0026, 0.0, 0.3672, 3.888, 17.123, 8.2485, 4.212, 2.9952, 6.3887, 9.3624, 0.2342, 0.1339, 0.0, 0.0, 0.0, 2.7518, 21.2866, 2.7558, 14.9749, 10.3018, 28.9007, 4.165, 2.1168], [1.6716, 0.0, 21.125, 63.6768, 17.8027, 0.2275, 38.8272, 1.4908, 0.0, 7.8979, 7.6378, 0.0, 0.0, 0.0, 5.6862, 0.0, 9.7219, 7.7832, 0.0, 9.0619, 0.0, 0.0, 0.0, 0.0, 17.6165, 0.4096, 0.0, 13.0203, 3.5608, 0.0, 0.0, 11.088, 0.0, 24.7269, 2.6866, 7.6032, 7.0791, 7.4304], [2.5938, 31.4167, 42.4281, 20.2608, 0.1685, 2.6057, 27.5223, 0.0, 9.7196, 0.0, 26.0712, 0.0, 6.565, 2.1996, 7.0308, 14.7456, 43.8877, 2.7636, 15.8112, 0.6696, 5.9212, 2.9812, 7.1305, 0.0, 33.1412, 2.9331, 4.9686, 3.0321, 0.468, 5.8464, 0.0, 9.1684, 16.4899, 6.2172, 15.1126, 0.0], [1.7868, 2.1595, 15.1317, 11.2882, 1.1981, 3.8258, 4.1882, 0.4888, 2.3007, 2.6083, 17.9928, 13.608, 17.9352, 20.053, 3.969, 22.6176, 28.7029, 8.3472, 10.4237, 7.5442, 0.407, 7.4573, 4.2462, 1.7816, 21.2866, 15.5663, 24.9581, 25.6829, 26.168, 14.1943, 23.8896, 1.1111, 24.0786, 12.877, 6.48], [18.3872, 7.4304, 35.8414, 15.5333, 4.3992, 0.9306, 0.0, 0.0, 0.0, 0.0, 11.677, 9.18, 4.6699, 11.5479, 21.4488, 22.3488, 31.0177, 9.2496, 28.6944, 27.9446, 11.1384, 3.575, 0.0, 0.0, 11.0103, 0.0, 17.4298, 9.5864, 8.1154, 0.3332, 0.144, 0.0, 0.7353, 37.044, 3.335, 31.3236, 11.6128, 7.8624], [8.9918, 15.9754, 12.6394, 20.6467, 0.1872, 2.2541, 12.4071, 0.0, 8.5822, 5.2166, 16.7443, 9.18, 9.0014, 5.719, 3.321, 11.4816, 36.2027, 16.8072, 20.6131, 2.0981, 0.0, 11.3117, 0.0, 0.0, 37.2253, 13.2574, 26.5948, 31.3345, 30.2257, 8.3633, 28.728, 0.0, 31.3123, 4.6728], [16.8885, 4.2493, 10.0878, 17.8488, 7.02, 6.142, 1.2596, 3.5927, 6.6952, 7.6061, 14.2474, 7.056, 18.8827, 6.9287, 0.0, 11.52, 34.0731, 16.2432, 17.8022, 4.1962, 5.195, 4.5864, 0.882, 19.9234, 8.8631, 27.413, 20.3889, 18.2182, 12.2951, 35.6832, 19.7259, 32.424, 6.336, 11.3344, 12.3552], [10.3752, 4.0171, 19.4042, 24.8918, 7.3195, 1.003, 6.7074, 1.4908, 7.0054, 12.8957, 12.852, 12.708, 18.6797, 9.7149, 5.1678, 22.0032, 23.3327, 22.6728, 36.8928, 2.0534, 0.3856, 7.3735, 7.7616, 6.1387, 25.6907, 8.379, 24.6308, 22.1774, 35.1114, 9.9294, 0.0, 14.5152, 7.2876, 11.1132, 9.6346, 3.4452, 7.3972, 5.0112], [0.0, 27.5621, 42.7248, 58.2739, 0.0, 0.0, 26.1997, 0.0, 6.2557, 0.0, 0.0, 0.0, 4.4669, 1.4664, 0.0, 0.0, 30.6473, 17.9916, 10.3066, 3.0802, 2.5137, 3.024, 6.7561, 27.683, 1.3034, 25.4491, 35.1977, 0.3312, 15.8603, 4.716, 43.9488, 0.1797, 20.4668, 33.6283, 7.2864, 17.5386, 0.1296], [1.0952, 2.7167, 32.0314, 5.5786, 7.4655, 6.7389, 1.833, 3.3605, 5.2531, 7.4174, 9.108, 17.0554, 7.8819, 7.6788, 12.672, 27.0363, 24.252, 13.8202, 14.1955, 1.5208, 11.0882, 7.7364, 2.1521, 29.5705, 14.7843, 19.0664, 21.7482, 38.1754, 20.1919, 3.582, 45.9648, 0.6046, 27.4126, 20.5661, 9.1476, 10.1414, 11.4048], [3.1702, 5.2245, 21.0657, 43.8984, 6.7392, 0.7238, 15.4931, 3.055, 8.453, 3.4838, 15.863, 5.472, 18.6797, 13.0876, 5.022, 20.1984, 53.6096, 15.9612, 28.2259, 14.7312, 2.3134, 4.4688, 0.6426, 7.7792, 33.4503, 11.5072, 28.7223, 19.2443, 24.6774, 15.0273, 3.474, 33.8688, 3.3334, 27.5052, 10.7462, 17.3844, 13.6411, 17.5824], [27.7248, 6.966, 26.8217, 46.021, 8.2742, 0.0, 4.2511, 0.1711, 6.7468, 14.3366, 36.9403, 12.528, 18.0029, 22.0327, 7.6788, 22.5792, 42.684, 31.1892, 34.7846, 11.8742, 5.8262, 13.2947, 4.0219, 37.8545, 9.5334, 29.5406, 54.3704, 35.7739, 11.6287, 2.808, 52.8192, 7.2059, 36.0253, 25.476, 4.5936], [26.1109, 18.5528, 20.2349, 29.4264, 6.6082, 6.7417, 17.8233, 0.9532, 7.4706, 12.239, 51.6283, 17.496, 29.3731, 18.8432, 7.209, 21.0816, 48.1468, 20.9808, 42.0461, 9.1512, 6.3832, 12.8199, 5.5566, 1.8698, 41.21, 20.1468, 41.406, 38.7031, 32.0475, 11.1622, 7.074, 39.5136, 8.0883, 42.971, 42.4291, 13.2264, 9.4653, 0.0], [13.6607, 10.3561, 42.2501, 32.3208, 10.8014, 8.2203, 10.3287, 9.7027, 8.5564, 6.9312, 22.9133, 19.116, 11.7086, 29.9512, 8.0676, 22.4256, 51.48, 23.5752, 46.0282, 17.9006, 4.1983, 13.8812, 8.9208, 7.1266, 49.3891, 21.6364, 42.2243, 35.4838, 33.7037, 19.7921, 8.388, 52.92, 3.9543, 46.0272, 38.6309, 22.4928, 19.5271, 10.8], [5.0147, 6.8963, 85.7463, 48.7224, 0.7114, 8.9131, 22.4209, 8.7495, 0.0, 2.0429, 23.7946, 29.34, 23.3496, 18.8432, 9.8496, 13.9776, 92.127, 39.2544, 61.3709, 8.8834, 0.0, 1.201, 14.8302, 11.0074, 77.0721, 12.6616, 54.9079, 48.0033, 60.2857, 7.6969, 0.0, 62.1936, 14.0851, 23.3377, 27.4214, 33.0264, 4.4145, 0.3024], [19.0212, 17.0899, 37.6809, 55.283, 12.4301, 9.1819, 28.5929, 0.0, 11.5291, 14.7562, 39.3638, 20.916, 34.9906, 23.0591, 13.365, 26.5728, 71.4795, 29.328, 64.6502, 23.3914, 4.4768, 20.4448, 7.3206, 85.6706, 16.609, 48.3615, 42.9955, 50.9282, 20.4918, 6.912, 66.9312, 5.2288, 67.3275, 44.2819, 33.8184, 21.2769, 41.472], [53.2594, 15.302, 61.2982, 85.3848, 21.659, 6.8037, 29.4432, 24.3667, 25.2554, 28.6368, 38.1154, 25.2, 76.2754, 44.8352, 20.655, 39.5904, 108.7007, 53.7492, 99.6691, 6.9638, 8.6751, 31.2537, 8.9082, 13.7239, 38.7982, 29.9782, 63.0091, 52.7965, 54.9858, 14.7941, 7.146, 133.8624, 17.1407, 95.8513, 65.7744, 45.738, 17.5386, 74.3472]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

