created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Rahani Sunray", "Arriasa", "Hyde En Sikh", "Fribble Bibble", "Drevarr Moonwillow", "Gavann", "Koralia Danai", "Bella Sassy"];
const professions = ["Tempest", "Chronomancer", "Druid", "Chronomancer", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[88.7094, 41.3712, 54.9576, 31.4458, 20.6298, 11.8325, 3.402, 0.0, 12.807, 8.3597, 16.6874, 0.0], [54.4986, 14.7233, 44.6026, 27.8737, 25.0711, 30.3811, 44.3318, 31.0262, 35.478, 24.2249, 20.124, 19.9017], [34.2475, 23.1563, 11.1427, 21.7642, 40.5821, 66.6922, 38.295, 47.738, 51.7496, 44.2424], [34.425, 0.0, 12.3869, 32.954, 52.5074, 62.7898, 33.5059, 51.9178, 40.113, 51.1551, 3.5759, 19.2301], [54.1773, 55.6358, 34.3699, 19.8337, 72.5459, 11.2781, 31.1018, 13.0507, 46.323, 25.5877, 32.8176, 41.5888], [19.737, 27.7056, 21.1385, 34.7344, 84.0829, 32.6304, 29.106, 52.6824, 19.044, 94.0115, 45.2945, 44.8812], [90.4995, 72.437, 27.234, 24.1769, 78.0779, 78.9782, 192.3264, 163.1794, 135.594, 101.5983, 137.4005, 20.5241], [127.6326, 89.519, 109.7806, 85.8325, 158.0611, 175.1587, 144.9857, 198.4435, 133.479, 169.9204, 153.4842, 0.0], [203.2299, 93.0946, 206.9539, 67.7565, 132.3724, 176.3467, 113.9746, 188.1662, 117.639, 194.0843, 156.9053, 63.6363]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

