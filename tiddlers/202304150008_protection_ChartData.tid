created: 20230415000841000
creator: Drevarr
modified: 20230705163525617
modifier: drevarr
tags: ChartData
title: 202304150008_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "High Sorcer Baradun", "Zadie Miststep", "Cat Wigglebooty", "Newtype Khan", "Mac Chiato", "Black Raspberry Pie", "Drogo Deception", "Ryvalia Fazebringer", "Venomina The Siren", "Primal Clone", "Elonith Primal", "Sassy Daddy Demon", "Air One Com", "Stoic Rapidfire", "Mmathuss", "Aronorf Xideliesi", "Drevarr Moonwillow", "Lucas Ryn", "Bella Sassy", "Solus Sanctus", "Koralia Danai", "Johosh The Great"];
const professions = ["Tempest", "Tempest", "Tempest", "Scrapper", "Spellbreaker", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Vindicator", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.9216, 19.013, 28.5052, 19.08, 138.0924, 0.0, 14.2388, 32.2506, 9.5472, 35.7213, 0.0, 182.7617, 37.9141, 18.988, 0.0, 34.9954, 55.3575, 68.6731, 15.6348, 0.0, 13.3241], [19.5696, 33.4417, 0.0, 13.896, 53.8272, 27.675, 73.8507, 35.397, 23.166, 7.2211, 0.0, 144.8885, 31.9884, 20.6969, 0.0, 124.0648, 200.3977, 54.4998, 14.7576, 22.937, 94.4328], [21.9492, 41.8669, 87.17, 129.6584, 0.0, 56.5303, 50.603, 10.8082, 240.7162, 154.6309, 132.7905, 35.604, 14.0792, 29.5588], [79.27, 148.4052, 4.3056, 34.9531, 0.0, 150.1449, 72.105, 33.7512, 16.5968, 68.4646, 251.3804, 37.2893, 41.7444, 29.8834, 57.4358], [46.9584, 95.2902, 39.4902, 28.152, 116.5455, 86.805, 146.2138, 189.9639, 58.734, 43.4033, 35.075, 161.736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.8927, 68.108], [69.2496, 59.143, 25.956, 15.264, 74.2527, 62.3025, 92.3399, 50.8668, 20.4048, 28.2698, 0.0, 79.1159, 27.7408, 35.1278, 55.4576, 17.7703, 299.5028, 200.1138, 37.41, 52.0745, 110.7322], [29.4624, 73.3464, 24.89, 47.556, 105.0912, 88.56, 84.0517, 141.0636, 43.3836, 21.1255, 25.875, 189.3659, 0.0, 76.9819, 42.0584, 46.4306, 112.1816, 216.2141, 170.7548, 74.1492, 37.4359, 26.2601], [79.8093, 54.9248, 37.98, 115.9047, 78.5025, 157.6898, 176.0673, 54.7092, 56.1554, 29.624, 188.8268, 0.0, 77.4014, 41.3464, 31.2101, 54.0739, 195.1816, 188.6401, 78.7932], [60.912, 14.2034, 40.2782, 44.172, 56.9511, 57.7125, 153.9707, 137.3928, 46.332, 52.4681, 0.0, 143.1364, 0.0, 62.9804, 72.1544, 23.0736, 96.7007, 226.3097, 197.2454, 83.9532, 68.578, 91.7162], [79.8768, 54.0328, 73.233, 13.896, 66.9636, 56.3625, 65.6687, 126.1182, 15.0228, 59.5355, 44.413, 212.4133, 60.8091, 34.1651, 173.5598, 207.6328, 190.4962, 105.9348, 51.6083, 67.1378], [33.696, 82.0638, 41.6686, 46.872, 109.5768, 114.885, 162.8966, 184.851, 60.6996, 59.0746, 36.202, 163.6229, 0.0, 93.2908, 61.2838, 18.216, 70.863, 210.6615, 184.7593, 79.464, 56.3636, 75.4816], [119.462, 401.3748, 185.3754, 110.1304, 60.639, 130.4969, 287.5563, 429.5866, 55.8828, 130.8623, 133.8229], [209.7792, 129.0326, 94.9711, 89.028, 374.1471, 110.295, 404.0005, 517.5828, 113.0688, 206.0312, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [89.9856, 140.7559, 90.6143, 85.176, 242.5428, 115.4925, 221.1271, 182.229, 94.4424, 82.8888, 62.721, 172.3836, 108.7606, 23.2128, 52.543, 59.852, 289.7437, 294.0964, 73.3236, 24.8018, 117.0708], [138.4992, 106.9384, 12.9317, 70.92, 253.6767, 149.715, 363.0904, 305.5941, 108.108, 94.4118, 24.081, 279.6685, 148.143, 63.1826, 49.507, 130.824, 470.6232, 399.0465, 158.5668, 137.7621, 109.6326], [197.0784, 153.0054, 49.1773, 80.964, 272.2599, 127.17, 269.3691, 267.7062, 92.8512, 122.7584, 41.998, 402.1835, 115.7351, 110.8899, 76.1024, 166.6916, 447.9081, 296.1212, 132.8184, 88.8111, 106.916], [151.0272, 155.2599, 137.7985, 146.268, 361.6515, 142.29, 176.7104, 286.9779, 109.1844, 85.7311, 40.112, 365.119, 212.4869, 101.301, 45.1352, 165.2743, 478.5314, 542.4669, 165.5844, 141.8647, 129.36], [157.3776, 178.4061, 77.868, 64.944, 262.9683, 202.0275, 348.214, 424.6329, 141.2892, 145.3434, 50.83, 501.6512, 13.4205, 213.5881, 101.4434, 46.9568, 218.149, 534.3938, 545.1666, 88.8036, 147.0861, 100.3834], [175.2624, 200.425, 164.5425, 121.284, 249.5916, 187.5825, 346.3013, 331.4208, 140.2128, 161.0147, 21.091, 579.2844, 0.0, 149.6113, 154.0876, 127.8358, 228.833, 473.8202, 455.2335, 185.6052, 133.6595, 46.893], [118.584, 319.2372, 162.9203, 164.412, 255.5991, 267.3675, 373.0789, 375.2082, 133.6608, 181.1416, 49.013, 431.9699, 147.304, 195.7188, 85.3723, 360.7472, 574.2714, 539.5985, 176.1624, 75.0116, 208.7224], [255.3552, 270.1643, 156.9874, 171.972, 388.6452, 288.9675, 475.5135, 409.2942, 120.7908, 288.5359, 69.759, 522.6768, 174.2057, 192.1111, 112.5344, 267.7531, 521.606, 615.1896, 124.4592, 112.5407, 251.1524], [161.3088, 282.1131, 152.3988, 107.568, 462.177, 297.405, 531.1937, 621.8073, 134.784, 297.8311, 78.177, 569.8498, 230.2116, 163.5816, 103.1026, 176.0673, 733.4453, 574.6944, 200.5692, 184.0091, 257.7498], [133.92, 230.7857, 170.3363, 146.592, 418.923, 412.2225, 749.2393, 618.1365, 213.5484, 262.5708, 97.75, 630.9052, 385.3816, 184.0887, 110.0246, 206.8109, 714.2637, 776.8329, 186.792, 148.811, 233.6888]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

