created: 20230419215809000
creator: Drevarr
modified: 20230705163526007
modifier: drevarr
tags: ChartData
title: 202304192158_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Be Leaf Me Too", "Koralia Danai", "Newtype Khan", "Zadie Miststep", "Gabe Malhorn", "Mac Chiato", "Miphest\u00f6", "Jupi Jupi Jupi", "Venomina The Siren", "Sygaldry Verdandi", "Solus Sanctus", "Johosh The Great", "Drevarr Moonwillow", "Bella Sassy", "Grasszanine", "Abigail Ryn", "Arcanophage Farra"];
const professions = ["Firebrand", "Catalyst", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.4424, 19.6891, 4.7952, 24.6106, 3.6495, 18.8194, 0.3979, 0.0, 4.7416, 1.7586, 1.4908, 21.624, 19.8453, 18.2112, 14.65, 17.5714, 6.5366], [47.4192, 116.9002, 32.2591, 9.6535, 3.922], [5.593, 19.3406, 2.4154, 55.7981, 7.5597, 15.6016, 2.7852, 0.0, 6.1314, 15.5678, 28.7472, 6.9649, 7.056, 6.2152, 26.3032, 6.4229, 8.208, 2.1445, 0.5527, 1.7722], [11.7773, 131.377, 5.2214, 3.1824, 4.1057, 7.8008, 9.6628, 0.0, 5.4781, 6.2264, 5.734, 11.7024, 7.2512, 3.6288, 15.3899, 5.0666, 2.2736, 9.7949, 0.0, 0.0, 0.6475], [3.3558, 44.257, 20.9568, 30.3389, 3.063, 36.8588, 9.947, 0.0, 4.5478, 2.2814, 6.8808, 22.896, 4.198, 0.8064, 10.6546, 31.801, 8.4692, 0.0, 3.6901, 2.1582, 3.4762], [0.888, 65.5574, 7.1035, 18.9169, 5.1156, 7.0234, 11.027, 7.6549, 26.5848, 28.5276, 9.2736, 21.7531, 24.1472, 14.4374, 9.7949, 3.8833, 2.9478, 10.4966], [0.0, 39.0298, 15.984, 74.0438, 12.4475, 15.1141, 1.8757, 0.0, 0.0, 7.2721, 2.609, 65.508, 4.9613, 4.8384, 8.5828, 7.3304, 11.5954, 1.751, 0.2995, 3.2374, 0.0], [8.5333, 77.1883, 7.4592, 47.5238, 22.4836, 27.7903, 20.7466, 0.0, 0.1809, 18.9645, 8.1408, 28.1459, 9.4752, 26.9324, 30.5074, 11.368, 2.7907, 1.0723, 0.2895, 0.9202], [6.4128, 11.4896, 68.4763, 13.249, 58.1318, 16.7487, 12.6763, 9.5491, 0.0, 4.1826, 1.4908, 39.8136, 20.8948, 6.4512, 15.5379, 40.7484, 9.3786, 6.0192, 2.5696, 3.7901, 7.8384], [6.4719, 50.7038, 6.287, 130.9027, 26.6545, 0.0, 9.4923, 0.0, 16.683, 11.3247, 23.532, 14.6931, 0.0, 17.3876, 40.8562, 0.0, 19.535, 0.0, 0.0, 6.2366], [1.3261, 9.8437, 26.4845, 5.5056, 73.4074, 17.5307, 14.0414, 15.8015, 10.5917, 4.9742, 17.7762, 0.0, 46.428, 19.4636, 9.8784, 17.6836, 34.7116, 20.0077, 15.7046, 3.4776, 1.895, 17.1082], [2.2067, 8.022, 37.1131, 8.951, 72.983, 29.0007, 28.7654, 10.1175, 3.625, 3.3721, 3.6598, 8.2283, 35.9976, 10.7813, 17.6064, 30.8538, 33.2024, 13.5279, 9.9043, 3.6998, 2.7636, 12.0302], [5.2732, 8.9808, 60.287, 12.361, 92.5018, 11.7958, 28.0829, 10.0038, 2.9453, 13.6886, 6.3361, 41.4672, 30.9128, 11.3568, 19.7553, 27.489, 7.6734, 8.0986, 4.9749, 2.5267, 6.7478], [2.2688, 11.4577, 55.2341, 8.7024, 70.8614, 25.4163, 39.394, 22.1676, 2.3222, 0.0258, 16.4929, 4.0425, 38.5416, 28.8138, 16.3296, 24.6387, 29.9684, 10.5722, 17.9482, 4.1152, 7.7907, 14.3818], [7.4903, 12.3845, 83.2867, 15.4157, 124.7501, 19.2251, 33.7385, 0.0, 12.3475, 19.7249, 9.2317, 53.8056, 37.9732, 25.1328, 24.2687, 58.6432, 11.2543, 14.6102, 7.5734, 2.6057, 11.0078], [2.7972, 15.98, 147.0586, 27.457, 125.1744, 58.1316, 82.786, 61.8988, 66.7786, 55.9903, 19.1516, 52.2792, 87.5864, 38.976, 88.3441, 109.8482, 42.1753, 38.304, 13.1279, 21.056, 20.1072], [9.5519, 26.1752, 224.4211, 39.4627, 276.8688, 98.537, 68.1595, 55.2485, 33.4742, 20.9562, 40.2104, 47.5922, 131.3976, 69.8401, 67.1328, 53.6427, 123.7544, 31.3188, 65.664, 7.245, 6.7906, 34.7275], [16.9228, 223.8984, 54.2035, 270.9283, 97.1685, 117.7921, 87.3631, 44.8022, 2.8295, 92.636, 25.9177, 153.5304, 133.1924, 84.8064, 108.3954, 47.5398, 33.9903, 45.9648, 19.7837, 31.8209, 42.6341]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

