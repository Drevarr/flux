created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Ryvalia Fazebringer", "Black Raspberry Pie", "Seiker Novus Terra", "Mew Mew", "K\u00f4sair", "Cupi Cupita", "Trooobi", "Oo Dads Mad", "Lucky Luprac\u00e1n", "J\u00e2sm\u00eene", "Mort\u00e4rion", "K\u00e2 \u00d4tik R\u00e6j", "Mew Mew", "Heals For Daddy", "Tegan Parker", "Jimbo The Pleb", "High Sorcer Baradun", "Sofya De Nova", "Kahlyanne", "Xanvias Einzbern", "Mistwalker Cael", "Regis Hawkesburne", "Drevarr Moonwillow"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Tempest", "Holosmith", "Spellbreaker", "Herald", "Herald", "Berserker", "Scrapper", "Tempest", "Scrapper", "Berserker", "Scrapper", "Druid", "Tempest", "Berserker", "Tempest", "Tempest", "Tempest", "Berserker", "Herald", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.043], [0, 0.069, 0.076, 0.285, 0, 0.095, 0.072, 0.033, 0, 0, 0.111, 0, 0.045], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.485, 0], [0.189, 0.065, 0, 0, 0.28, 0.137, 0.066, 0.15, 0.736, 0.664], [2.147, 0.266], [0, 0.086, 0.396, 0, 0, 0.159, 0.24, 0.098, 0, 0, 0, 0.114], [0, 0.323, 0.568, 0.159, 0.239, 0.11], [0, 0, 0.491, 0, 0.597, 0.43, 0.075], [0, 0.31, 0.474, 0.91, 0.159, 0.24, 0.202], [0, 0.201, 0.155, 0.647, 0, 0.502, 0.457, 0.149, 0.376, 0.267, 0.332, 0, 0.189], [0, 0.207, 0.443, 0.297, 0.428, 0.321], [0, 0.275, 0.698, 1.712, 0, 0.186, 0, 0.099, 0, 0, 0, 0, 0.155], [0, 0.316, 0.464, 0, 0.474, 0.435, 0.117, 0, 0, 0, 0, 0.364], [0.217, 0.676, 0.503, 0.466, 0.069, 0, 0.912, 0, 0.386], [0, 0.17, 0.633, 0.617, 0, 0.471, 0.683, 0.38], [0.479, 0.208, 0.519, 0.58, 0.476, 0.425, 0.297, 0, 0.407, 0.332, 0, 0.298], [0.834, 0.828, 0.461, 1.265, 0.46, 0.477, 0.661, 0.537, 0.25, 0.68, 0.553, 0], [0, 0.413, 0.654, 1.325, 0.556, 0.77, 0.567, 0.627], [0.36, 0.414, 0.69, 0.575, 0, 0.583, 0.728, 0.455, 0, 0.456, 0.662, 0, 0.357], [0, 0.383, 0.57, 0.471, 0.571, 0.72, 0.487, 0.299, 0.457, 0.663, 0.665, 0.468], [0, 0.383, 0.853, 0.977, 0.458, 0.697, 0.615, 0, 0.843, 1.107, 1.248, 0.229], [0.133, 0.441, 0.739, 0, 0.926, 0.556, 0.801, 0.731, 0.269, 0.38, 0.967, 0, 0.539], [0, 0.335, 0.761, 0, 0, 0.605, 0.846, 0.538, 0, 0.951, 1.107, 0, 0.709], [0.407, 0.998, 1.198, 1.75, 1.011, 0.984, 0.778, 0.612, 0.714, 0.498, 0.252, 0.697]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

