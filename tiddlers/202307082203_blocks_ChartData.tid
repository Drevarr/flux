created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Willgrantor", "Necrotic Windrunner", "Ateriuz", "Lord Erin The Wise", "Venomina The Siren", "No Reserv\u00e9", "Enter Effore", "Kary\u00edna", "High Sorcer Baradun", "Legacy Of Mathus", "Cedryn X", "Glorious Gluvs", "Sakis Ranger", "Mechanical Dark", "Johosh The Mighty", "Tegan Parker", "Arriasa", "Latedoctor", "Artakama Nahid", "Hyde En Sikh", "Klenga", "Newtype Khan", "Gabe Malhorn", "Xanvias Einzbern", "Be\u00eb", "Sygaldry Verdandi", "Koralia Danai", "Tika Fiery", "Aronorf Xideliesi", "Zaedy Zae", "Crusader Siolith", "Mistwalker Cael", "Primal Clone", "Drevarr Moonwillow", "Chocolate Teapot", "Bella Sassy", "Black Raspberry Pie", "Rahani Sunray"];
const professions = ["Berserker", "Firebrand", "Reaper", "Berserker", "Weaver", "Tempest", "Vindicator", "Firebrand", "Vindicator", "Weaver", "Berserker", "Berserker", "Berserker", "Druid", "Scrapper", "Berserker", "Tempest", "Druid", "Reaper", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Willbender", "Vindicator", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 5, 1, 1, 0, 1, 1, 0, 4, 2], [1, 1, 1, 6, 1, 3, 3, 2, 4, 3], [6, 3, 0, 0, 8, 0, 2, 2, 1, 0, 0, 0, 2, 3, 0], [1, 1, 20, 3, 0, 2, 3], [5, 4, 1, 0, 2, 1, 0, 0, 2, 2, 0, 5, 10, 1], [3, 0, 0, 16, 0, 3, 0, 0, 1, 4, 3, 3, 3], [12, 8, 3, 5, 8, 1, 0, 3], [3, 2, 2, 10, 4, 10, 2, 2, 7], [7, 3, 3, 0, 6, 1, 0, 1, 3, 1, 5, 6, 3, 5], [9, 1, 0, 0, 8, 2, 1, 0, 4, 6, 0, 6, 4, 1, 3], [11, 6, 5, 0, 5, 1, 2, 1, 7, 2, 2, 3, 2, 1], [11, 5, 0, 0, 10, 0, 1, 3, 2, 3, 0, 4, 2, 5, 3], [5, 8, 1, 1, 0, 0, 3, 0, 1, 6, 3, 2, 8, 4, 8, 1], [6, 3, 3, 1, 10, 3, 2, 0, 3, 3, 3, 5, 6, 0, 5], [1, 9, 4, 15, 2, 22], [5, 10, 4, 2, 0, 15, 1, 0, 2, 8, 4, 3], [2, 0, 14, 3, 1, 3, 6, 6, 0, 10, 5, 5], [13, 3, 5, 1, 14, 0, 0, 2, 1, 0, 3, 9, 2, 2, 2], [7, 7, 0, 0, 5, 1, 0, 1, 3, 4, 1, 9, 1, 6, 1, 13], [8, 5, 2, 0, 2, 6, 5, 1, 0, 7, 2, 5, 7, 4, 3, 2, 7], [7, 14, 12, 4, 0, 12, 3, 1, 4, 12], [8, 13, 9, 4, 3, 16, 3, 0, 4, 5, 2, 4], [8, 11, 11, 2, 3, 14, 2, 2, 1, 7, 5, 1, 1, 1, 8, 3], [14, 10, 4, 3, 13, 4, 2, 3, 2, 6, 4, 8, 2, 5, 6], [9, 12, 10, 3, 1, 16, 6, 2, 1, 8, 5, 1, 5, 0, 5, 3], [10, 5, 5, 0, 14, 1, 1, 3, 4, 3, 4, 3, 5, 2, 8, 21], [8, 11, 9, 3, 23, 1, 6, 10, 5, 7, 9, 3, 2, 1], [10, 16, 7, 6, 1, 19, 4, 3, 3, 5, 6, 1, 6, 4, 2, 6], [9, 11, 7, 1, 2, 8, 5, 1, 3, 9, 4, 4, 7, 5, 7, 2, 15], [11, 14, 8, 3, 2, 20, 2, 5, 11, 3, 0, 6, 8, 4, 3], [8, 5, 4, 3, 1, 15, 4, 1, 1, 8, 6, 2, 5, 1, 8, 5, 28], [20, 7, 2, 2, 20, 2, 1, 1, 9, 4, 5, 2, 2, 1, 35], [6, 12, 4, 2, 0, 12, 3, 2, 4, 5, 5, 2, 21, 1, 7, 29], [4, 29, 11, 3, 0, 17, 5, 1, 2, 3, 3, 2, 1, 4, 27, 5], [11, 11, 5, 5, 2, 16, 5, 3, 3, 5, 7, 4, 9, 3, 5, 9, 20], [13, 25, 11, 10, 0, 23, 5, 4, 8, 7, 23, 11], [6, 18, 6, 4, 3, 23, 9, 3, 7, 9, 7, 9, 11, 4, 7, 5, 24], [16, 1, 55, 1, 1, 4, 4, 2, 1, 47, 4, 7, 1, 21], [40, 20, 14, 0, 26, 4, 1, 4, 15, 4, 7, 16, 2, 9, 19, 22]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

