created: 20230607221050000
creator: Drevarr
modified: 20230705163534136
modifier: drevarr
tags: ChartData
title: 202306072210_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Etcherii", "Crusader Siolith", "Blanco Padre Guard", "Shaca Booey", "Rafaellagabriela", "Gabe Malhorn", "Sub Train", "Zayde Sunsabre", "Xanvias Einzbern", "Koralia Danai", "Grasszanine", "Johosh The Great", "Newtype Khan", "Solus Sanctus"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.487, 20.332, 586.8425, 10.0285, 60.456, 19.7174, 0.0, 12.8423, 6.8526, 18.0489, 11.891, 11.8151, 28.7448], [16.6973, 15.272, 590.261, 33.9275, 60.0163, 21.1444, 0.0, 15.5995, 6.9414, 16.3381, 10.12, 21.1002, 22.9958], [25.2765, 14.996, 678.0025, 32.9507, 63.3139, 17.469, 0.0, 12.5939, 6.4085, 30.7944, 16.951, 18.8485, 33.0322], [12.4537, 31.878, 713.327, 19.4058, 108.7109, 27.5439, 0.0, 10.4328, 9.5556, 16.4664, 23.437, 15.3318, 62.4103], [19.557, 13.846, 757.7675, 29.2389, 167.2982, 53.4014, 0.0, 36.7632, 30.4941, 37.6376, 23.759, 35.0405], [21.402, 14.996, 862.6015, 17.7126, 184.2259, 43.24, 7.5012, 10.6564, 8.0581, 57.654, 22.977, 17.1281, 22.9958], [52.2135, 44.39, 1313.8435, 33.081, 133.9925], [49.2615, 96.094, 1138.3605, 51.3146, 60.7858, 26.2467, 0.0, 12.6187, 24.2887, 54.0613, 4.002, 12.65, 63.9694], [1270.5425, 36.337, 137.7298, 49.4233, 0.0, 77.7989, 18.3117, 69.1163, 50.439, 49.1579, 77.075], [1316.1225, 19.6662, 101.8958, 69.5732, 0.0, 65.8508, 29.9865, 95.8048, 58.305, 85.8682, 147.037], [1334.3545, 30.9971, 251.1672, 61.1846, 13.7676, 97.3231, 18.9589, 100.98, 62.077, 99.6567, 117.4639], [112.8218, 126.914, 1389.0505, 23.2478, 142.6762, 14.3989, 0.0, 67.689, 97.0277, 113.7254, 21.689, 95.3051, 0.0], [59.8703, 46.0, 1540.604, 39.9186, 201.923, 62.525, 0.0, 33.4595, 15.5706, 97.9005, 41.446, 28.842, 69.3286], [7.4722, 59.846, 1803.8285, 36.1416, 285.6821, 50.2881, 3.7884, 26.4794, 32.1184, 30.8799, 37.513, 64.6668, 155.4655], [0.0, 107.088, 1916.639, 55.4171, 494.3102, 133.136, 0.0, 43.8426, 0.0, 209.2736, 60.237, 76.9626, 0.0], [22.6013, 33.028, 2059.0765, 56.7846, 319.0978, 105.1597, 11.1888, 73.9735, 32.3722, 113.811, 70.127, 113.4958, 150.1063], [42.2505, 20.838, 2890.9115, 67.7248, 317.339, 154.0209, 0.0, 124.8458, 19.3649, 121.0391, 120.313, 16.4703, 339.0425], [124.9987, 162.932, 3092.603, 57.1754, 386.039, 144.8972, 27.7032, 58.4982, 7.8805, 117.6175, 102.005, 55.6853, 192.9312]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

