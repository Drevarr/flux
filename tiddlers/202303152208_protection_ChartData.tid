created: 20230315220824000
creator: Drevarr
modified: 20230705163522242
modifier: drevarr
tags: ChartData
title: 202303152208_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Belvyn Brightblade", "Zadie Miststep", "Cat Wigglebooty", "Raziel Umbra", "Primal Clone", "Etcheriii", "Ryvalia Fazebringer", "Black Raspberry Pie", "Eibh\u00ebar", "Mac Chiato", "Mike The Archmagus", "Tribal S", "\u00c1rkantor", "Blanco Padre Guard", "Fribble Bibble", "Drevarr Moonwillow", "Bella Sassy", "Whose Guardian", "Zaylen Harker", "Ravioli Fetabringer", "Koralia Danai", "Sygaldry Verdandi", "Johosh The Great"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Druid", "Vindicator", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 98.1441, 0.0, 35.9306, 55.5444, 0.0, 62.6198, 0.0, 59.1456, 88.0718, 38.1546, 172.3162], [92.6365, 156.5707, 65.0504, 0.0, 109.201, 0.0, 0.0, 93.9996, 0.0, 126.9432], [24.5284, 60.6992, 57.9503, 45.2866, 0.0, 0.0, 87.2685, 0.0, 25.4016, 86.8745, 14.5512, 37.7271, 0.0, 1.7898, 23.0908, 0.0, 24.3821, 0.0, 33.0149, 35.6443, 75.6926, 61.9747], [8.7192, 57.8318, 24.801, 15.9725, 28.4597, 4.6656, 49.3776, 126.3367, 104.6557, 13.8185, 7.4899, 14.7941, 12.6868, 25.6061, 13.3743, 80.089, 45.5544, 90.4919, 90.3571], [34.4906, 46.7754, 0.0, 0.0, 44.3837, 22.4246, 28.0872, 95.5348, 20.2298, 62.856, 121.5665, 24.9739, 43.0975, 8.8285, 53.212, 0.0, 9.131, 36.2146, 49.5504, 0.0, 49.8708, 73.1722], [31.9505, 39.3058, 71.542, 28.0098, 44.2886, 12.9494, 28.6963, 131.6703, 4.9815, 43.74, 101.3295, 1.3367, 67.8684, 19.7998, 22.2893, 41.65, 14.9224, 45.8266, 0.0, 69.1325, 66.1205, 0.0, 95.7334, 54.0432], [213.4264, 10.4227, 258.0477, 19.6321, 102.6179, 137.3117, 0.0, 122.2531, 0.0, 184.3694], [40.325, 75.3483, 78.9125, 21.3822, 59.4, 17.6118, 0.0, 115.9644, 14.3978, 75.9456, 83.9835, 0.0, 62.0953, 16.7365, 9.009, 35.7524, 42.6931, 3.588, 51.1464, 41.2387, 0.0, 101.4373, 116.951], [48.8981, 69.6917, 63.0218, 0.0, 51.4642, 5.2189, 20.7778, 137.5748, 7.533, 87.6096, 95.8367, 12.2839, 75.924, 11.8061, 25.8688, 34.0864, 0.0, 15.8141, 74.2229, 53.5997, 0.0, 111.766, 74.9606], [60.4082, 56.1305, 59.438, 20.664, 53.8402, 20.5747, 13.0058, 92.1102, 4.2525, 82.4904, 145.8509, 0.0, 68.5397, 27.7823, 7.4899, 33.1534, 10.8192, 48.0298, 0.0, 65.9813, 63.2966, 13.897, 93.498, 68.04], [29.5294, 120.4557, 36.4472, 22.0626, 19.8634, 0.0, 43.8002, 195.557, 0.0, 40.1112, 129.5168, 65.8865, 46.3197, 18.8495, 17.7171, 70.9716, 0.0, 0.0, 0.0, 45.3288, 89.8301, 0.0, 56.0372, 71.7725], [18.4559, 126.765, 137.7419, 2.5956, 107.0626, 14.3632, 22.7969, 244.8006, 26.1832, 41.6016, 165.9434, 60.4721, 83.2412, 14.2321, 26.4854, 27.9222, 66.2184, 81.4949, 56.2104, 53.4164, 89.0352], [88.4293, 161.357, 130.5742, 0.0, 69.2366, 0.0, 0.0, 174.6551, 20.6185, 97.4592, 188.7823, 0.0, 111.1673, 1.3192, 51.8429, 40.1839, 2.6956, 43.2562, 0.0, 121.5394, 82.6373, 0.0, 30.1383, 103.6541], [114.7835, 228.3655, 199.1409, 29.1816, 114.7608, 31.9224, 302.9008, 9.2462, 247.7952, 295.3157, 12.6223, 164.737, 26.1612, 8.257, 43.1827, 2.1068, 66.7814, 26.7127, 71.2171, 93.5597, 61.9181, 0.0, 120.217], [142.6459, 198.1246, 216.8573, 11.907, 160.0949, 23.6579, 27.1058, 299.0039, 23.1579, 237.0384, 209.3084, 61.9103, 140.3017, 26.8314, 32.1871, 73.6358, 0.0, 67.9205, 138.7944, 0.0, 95.6563, 158.9414], [88.7468, 181.9527, 226.7299, 48.1068, 164.2766, 21.2816, 55.1592, 302.4285, 15.7221, 131.6736, 137.7561, 13.7221, 121.7067, 34.2443, 5.1888, 57.1771, 114.6888, 155.7662, 156.3235, 202.2579, 185.7686], [51.7558, 233.877, 136.1191, 21.5082, 89.7653, 36.2013, 17.6419, 317.7802, 57.3115, 142.7544, 357.183, 39.7282, 63.4379, 2.795, 52.9558, 79.968, 1.104, 89.401, 55.0309, 135.4531, 160.213, 52.9267, 116.6991, 148.8326], [107.9171, 201.098, 210.7715, 16.5438, 123.552, 54.7757, 24.2407, 356.7499, 5.7955, 184.356, 270.8867, 15.025, 146.3434, 0.0, 79.8323, 110.2559, 47.334, 81.0288, 15.5181, 140.3981, 197.7221, 0.0, 265.1552, 230.6362], [134.1522, 252.3696, 195.9628, 23.1588, 187.5139, 46.5488, 72.5191, 478.973, 24.1299, 319.9824, 262.7919, 39.6266, 146.9476, 21.4771, 102.0592, 25.8428, 72.7301, 0.0, 162.0202, 142.2576, 0.0, 105.2142, 254.8973], [167.5712, 192.9032, 221.0498, 162.8035, 46.3834, 15.6228, 580.5304, 21.469, 230.364, 500.143, 25.8199, 214.4804, 0.0, 74.9744, 82.6336, 0.0, 31.9219, 152.3242, 219.6734, 10.2144, 286.9688, 289.5005], [182.6534, 227.6403, 295.4318, 36.3762, 141.9898, 55.8435, 13.5586, 483.3424, 70.4822, 210.6648, 397.2234, 74.8202, 212.735, 22.2147, 62.8221, 116.0536, 1.2328, 84.2357, 25.6093, 155.3299, 242.6371, 39.5002, 83.6318, 344.6323], [197.6165, 253.0948, 222.1993, 0.0, 186.8011, 65.1082, 19.0294, 554.7868, 0.0, 262.8288, 623.2996, 48.6281, 269.9969, 0.0, 125.569, 109.6561, 69.768, 165.947, 199.4803, 0.0, 269.5488, 283.7462], [112.8784, 265.5682, 404.4352, 89.2962, 111.1493, 95.143, 31.4148, 566.2415, 66.6428, 152.4096, 439.2874, 86.9011, 354.4464, 59.799, 192.523, 47.7756, 133.2446, 247.345, 294.1056, 74.135, 363.278, 387.4781], [264.2957, 359.6267, 436.149, 286.213, 84.0285, 50.8728, 575.6888, 85.9977, 286.1568, 661.4608, 50.5739, 256.3023, 47.5821, 100.9184, 157.6036, 19.0624, 144.0893, 7.4541, 251.9021, 312.2741, 203.4141, 437.8666]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

