created: 20230311223557000
creator: Drevarr
modified: 20230705163521763
modifier: drevarr
tags: ChartData
title: 202303112235_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Zadie Miststep", "Mac Chiato", "Drevarr Moonwillow", "\u00c1rkantor"];
const professions = ["Druid", "Tempest", "Tempest", "Scrapper", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[869.4512, 110.1017, 11.7983, 182.8, 91.7248, 484.8974, 530.977, 330.1278, 276.2756, 539.3652, 465.0968, 34.1207, 460.9643, 15.15, 42.0, 634.0968, 0.0, 305.6706, 689.256, 619.1746, 874.4364, 1167.775], [1206.9222, 134.1864, 340.6471, 0.0, 429.6881, 318.9359, 869.2697, 430.8647, 195.4382, 894.043, 684.8189, 0.0, 219.7845, 171.575, 235.3704, 107.0, 1012.8817], [1081.6637, 316.7458, 14.5714, 22.8667, 624.7431, 567.7179, 718.2566, 415.218, 136.2473, 871.4821, 537.3368, 0.0, 0.0, 15.2778, 6.8571, 688.3548, 492.3571, 452.8176, 675.7246, 785.7222, 1290.9636, 1651.375], [1341.641, 337.6102, 87.084, 129.1333, 453.6606, 613.7372, 832.5592, 606.7331, 534.689, 1025.5394, 898.8358, 265.9185, 218.8879, 25.3929, 355.325, 381.0926, 143.6857, 1088.1828, 159.3571, 837.3824, 1747.686, 1319.0238, 2070.1455, 2019.025], [2944.4358, 1080.9661, 20.084, 366.7867, 1128.4587, 999.7628, 1538.8289, 797.515, 556.4594, 1854.5776, 1848.6968, 48.3852, 647.7069, 85.5, 887.3, 1059.8704, 317.4, 1952.871, 1048.3929, 4608.2875]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

