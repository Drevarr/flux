created: 20230427220456000
creator: Drevarr
modified: 20230705163526905
modifier: drevarr
tags: ChartData
title: 202304272204_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Chio Slayer", "Elusive In The Mist", "Solikai", "Zadie Miststep", "Primal Clone", "Mac Aaroni", "Xkaet"];
const professions = ["Scrapper", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.302, 0.0, 15.7248, 0.0, 0.0, 0.0, 12.8159, 29.6072, 20.4406, 68.3575, 43.3892, 25.0099, 111.8074, 25.3449, 8.3411, 15.7481, 72.697, 8.2362], [91.1131, 223.4509, 29.6184, 134.0275, 420.9696, 42.5007], [0.0, 44.8443, 74.1972, 182.308, 108.4238, 155.8418, 116.201, 35.8315, 370.2096, 117.5877, 65.9087, 160.6872, 37.0138, 55.0746], [474.2166, 312.8364, 77.9904, 84.9747, 34.3479, 214.353, 355.6648, 124.8072, 0.0, 0.0, 0.0, 0.0, 0.0], [328.8714, 12.9766, 88.848, 89.6289, 52.4356, 60.5421, 205.1504, 113.7164, 65.4562, 181.6214, 38.1969, 157.3541, 234.5789, 51.6861, 38.3328, 40.1718, 51.6499], [220.5918, 33.1409, 42.552, 73.8898, 0.0, 94.0032, 146.0818, 184.3548, 41.6539, 313.0142, 0.0, 104.5286, 431.7984, 62.6211, 63.812, 145.3163, 99.1872, 33.9782], [757.6998, 186.0134, 65.0736, 42.8247, 147.9128, 306.3366, 374.455, 229.7652, 113.7175, 415.5505, 63.0896, 209.2176, 502.5917, 118.3653, 75.754, 173.7949, 183.3754, 16.8422], [532.6178, 73.008, 121.4101, 73.8198, 415.8999, 545.494, 209.1068, 173.4163, 496.4652, 69.516, 217.8749, 669.0845, 24.1785, 230.6804, 244.7085, 64.9555, 37.8189]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

