created: 20230408001602000
creator: Drevarr
modified: 20230705163524673
modifier: drevarr
tags: ChartData
title: 202304080016_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Dark Sidiuz", "Arcanophage Farra", "Lucky Leipreach\u00e1n", "Lord Erin The Wise", "N Er Gal", "Kiloak", "Rozaalyna", "Panther B Me", "Smol Gluvs", "Kos\u00e4ir", "Kmpek", "Kos\u00e4ir", "Vocare Veilrender", "Smol Daddy Tika", "Xyntharos", "Jeckyll Mbs", "Smol Dome Dim", "Sp\u00edcy Cheese", "S E M C H O R \u00c1", "Sofya De Nova", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Scrapper", "Weaver", "Dragonhunter", "Dragonhunter", "Scourge", "Scourge", "Scourge", "Vindicator", "Vindicator", "Herald", "Vindicator", "Berserker", "Vindicator", "Berserker", "Berserker", "Berserker", "Scrapper", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9629.0, 39275.0, 11883.0, 4143.0, 57366.0, 0.0, 19229.0, 0.0, 15154.0, 6360.0, 2460.0, 38317.0, 18576.0, 14442.0], [2373.0, 14663.0, 8125.0, 4804.0, 27218.0, 3102.0, 6396.0, 3679.0, 18727.0, 0.0, 0.0, 17909.0, 3063.0, 3264.0, 666.0, 0.0, 30378.0, 19709.0, 9292.0, 63354.0, 1193.0, 201.0], [3690.0, 6339.0, 2393.0, 3608.0, 27199.0, 2744.0, 0.0, 2640.0, 5055.0, 1185.0, 0.0, 7735.0, 6257.0, 4397.0, 897.0, 0.0, 22712.0, 35995.0, 17045.0, 47712.0, 3543.0, 71.0, 24354.0, 20414.0, 10797.0, 12684.0], [0.0, 3971.0, 0.0, 0.0, 43778.0, 197.0, 0.0, 0.0, 0.0, 2590.0, 0.0, 3047.0, 0.0, 24890.0, 24380.0, 60393.0, 9115.0, 6131.0, 45422.0, 23298.0, 11064.0, 19360.0], [0.0, 12861.0, 8336.0, 4849.0, 77038.0, 0.0, 33710.0, 4609.0, 7851.0, 0.0, 2882.0, 38105.0, 5233.0, 0.0, 3143.0, 48562.0, 125031.0], [5022.0, 2459.0, 7711.0, 0.0, 39580.0, 23047.0, 24140.0, 60363.0, 32692.0, 1127.0, 55354.0, 73679.0, 24143.0, 30916.0], [0.0, 1736.0, 1462.0, 0.0, 56792.0, 98755.0, 34066.0, 80222.0, 14062.0, 0.0, 22196.0, 40872.0, 43157.0, 6827.0], [12340.0, 27918.0, 8060.0, 963.0, 36825.0, 0.0, 16326.0, 1564.0, 4016.0, 3132.0, 1782.0, 34992.0, 0.0, 91.0, 12633.0, 0.0, 28952.0, 67287.0, 50682.0, 11718.0, 13050.0, 2995.0, 24677.0, 40293.0, 29497.0], [5075.0, 23619.0, 22488.0, 50.0, 41085.0, 548.0, 31398.0, 738.0, 1586.0, 0.0, 2523.0, 17500.0, 7370.0, 0.0, 4574.0, 19948.0, 43216.0, 48757.0, 66650.0, 31808.0, 6416.0, 13389.0, 37106.0, 11215.0, 22086.0], [8483.0, 28591.0, 14889.0, 8335.0, 16187.0, 208.0, 15568.0, 814.0, 28129.0, 1063.0, 0.0, 24774.0, 5971.0, 0.0, 4158.0, 57168.0, 53712.0, 38966.0, 61529.0, 22832.0, 3818.0, 46277.0, 24601.0, 33799.0, 7302.0], [13720.0, 21789.0, 30808.0, 9246.0, 78490.0, 3935.0, 31383.0, 11364.0, 0.0, 0.0, 121988.0, 128112.0, 56706.0, 31097.0], [7274.0, 13279.0, 8862.0, 4363.0, 31604.0, 0.0, 26563.0, 0.0, 43.0, 2566.0, 6215.0, 34239.0, 5281.0, 11061.0, 5862.0, 0.0, 92342.0, 88637.0, 30901.0, 11139.0, 18958.0, 9304.0, 78401.0, 3089.0, 35223.0, 33499.0], [10478.0, 9047.0, 0.0, 61732.0, 1165.0, 0.0, 92032.0, 147613.0, 94900.0, 104367.0, 38086.0, 10367.0], [8000.0, 29706.0, 21759.0, 19047.0, 25676.0, 2886.0, 20071.0, 0.0, 12446.0, 0.0, 4272.0, 28183.0, 0.0, 5984.0, 1688.0, 0.0, 48868.0, 125442.0, 103326.0, 4363.0, 62653.0, 17352.0, 47942.0, 1218.0, 73608.0, 42862.0], [29518.0, 50260.0, 9085.0, 10041.0, 24364.0, 2837.0, 37389.0, 0.0, 32965.0, 1413.0, 0.0, 27504.0, 2318.0, 11705.0, 0.0, 0.0, 41826.0, 93930.0, 62920.0, 3080.0, 14726.0, 8776.0, 79655.0, 92517.0, 62743.0, 27484.0], [2230.0, 19735.0, 27545.0, 14048.0, 47208.0, 185.0, 7225.0, 4092.0, 5907.0, 0.0, 4528.0, 25749.0, 21742.0, 0.0, 2280.0, 57573.0, 63018.0, 64612.0, 115598.0, 52706.0, 6138.0, 103010.0, 74336.0, 41331.0, 14072.0], [0.0, 5874.0, 13189.0, 8928.0, 16182.0, 1518.0, 39376.0, 0.0, 15346.0, 10853.0, 0.0, 32192.0, 9476.0, 155.0, 10213.0, 0.0, 64628.0, 70694.0, 112260.0, 164814.0, 33209.0, 110841.0, 72234.0, 10719.0, 17956.0], [31567.0, 19926.0, 8235.0, 0.0, 15525.0, 3272.0, 22953.0, 2508.0, 23679.0, 17703.0, 108330.0, 37152.0, 5373.0, 3294.0, 0.0, 135910.0, 7860.0, 85572.0, 140330.0, 37382.0, 3890.0, 43170.0, 13795.0, 41943.0, 83817.0], [46104.0, 48729.0, 47921.0, 20355.0, 46910.0, 2833.0, 70710.0, 4563.0, 34090.0, 17834.0, 0.0, 71296.0, 1623.0, 0.0, 15174.0, 0.0, 132888.0, 0.0, 106444.0, 32687.0, 59789.0, 21578.0, 151674.0, 147447.0, 65937.0, 22035.0], [13307.0, 58330.0, 28678.0, 22417.0, 96613.0, 3727.0, 36264.0, 6620.0, 25452.0, 868.0, 0.0, 61676.0, 45779.0, 7001.0, 4305.0, 0.0, 96412.0, 132298.0, 61139.0, 118669.0, 30478.0, 23363.0, 114278.0, 98219.0, 23023.0, 77452.0], [8646.0, 21402.0, 37847.0, 15124.0, 36873.0, 10671.0, 25281.0, 13413.0, 22528.0, 18983.0, 2037.0, 89166.0, 619.0, 0.0, 5628.0, 0.0, 125102.0, 148513.0, 125380.0, 192013.0, 43138.0, 23408.0, 124365.0, 88156.0, 26374.0, 36125.0], [1602.0, 35823.0, 73616.0, 15591.0, 57701.0, 0.0, 60169.0, 18464.0, 25597.0, 4532.0, 5563.0, 52951.0, 28157.0, 9151.0, 8918.0, 0.0, 183739.0, 238235.0, 122521.0, 261175.0, 37362.0, 25125.0, 133536.0, 107668.0, 119252.0, 82863.0], [33844.0, 97927.0, 38105.0, 12003.0, 84712.0, 5809.0, 131959.0, 19969.0, 2390.0, 11664.0, 0.0, 94046.0, 31484.0, 13904.0, 10995.0, 0.0, 232766.0, 191848.0, 140769.0, 276326.0, 66456.0, 49423.0, 147115.0, 261345.0, 182481.0, 53880.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

