created: 20230222220539000
creator: Drevarr
modified: 20230705163519826
modifier: drevarr
tags: ChartData
title: 202302222205_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Panther B Me", "Sygaldry Verdandi", "Smol Daddy Tika", "Fribble Bibble", "Pixil Ranger", "Tootsie Pop Bringer", "Xanvias Tseli", "Blanco Padre Guard", "Forever Broke", "Sheep Poh", "Cat Wigglebooty", "Rina Of Theros", "Zaylen Harker", "Sumatra Satyricon", "Kiloak", "Venomina The Siren", "Jeckyll Mbs", "Black Raspberry Pie", "Acme Corporation", "Ark Darkness", "Ryvalia Fazebringer", "Ace Hammers", "My Birthday Girl", "Koralia Danai", "Kosair", "One Whole Keg", "Kmpek", "Sp\u00edcy Cheese", "Primal Clone", "Lord Erin The Wise", "Sofya De Meme", "Husky Guard", "Dark Sidiuz", "Eibh\u00ebar", "Elonith Tenebris", "Mac Aaroni", "Arcanophage Farra", "Legacy Of Mathus", "\u00c1rk\u00e1ntor", "Mistwalker Caelon", "Mike The Archmagus", "Sassy Daddy Demon", "Newtype Khan", "Smol Gluvs", "Ravioli Fetabringer", "Xyntharos"];
const professions = ["Druid", "Scourge", "Firebrand", "Berserker", "Scrapper", "Druid", "Scrapper", "Berserker", "Firebrand", "Reaper", "Catalyst", "Scrapper", "Scourge", "Firebrand", "Soulbeast", "Firebrand", "Tempest", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Vindicator", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Berserker", "Chronomancer", "Weaver", "Catalyst", "Dragonhunter", "Scourge", "Chronomancer", "Scourge", "Tempest", "Spellbreaker", "Berserker", "Scourge", "Vindicator", "Tempest", "Vindicator", "Spellbreaker", "Scourge", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 0, 0, 0, 1, 2, 5, 6, 0, 1, 2], [1, 1, 0, 0, 1, 0, 2, 3, 6, 2, 2, 2], [0, 1, 0, 0, 0, 0, 1, 7, 9, 1, 2, 1], [0, 0, 0, 0, 3, 1, 2, 1, 7, 4, 2, 3], [1, 1, 3, 1, 1, 0, 0, 1, 8, 3, 5, 1], [10, 10, 5], [1, 2, 2, 2, 0, 1, 2, 3, 4, 4, 3, 2], [1, 2, 1, 0, 1, 1, 0, 4, 6, 3, 4, 3], [0, 1, 0, 0, 2, 0, 2, 0, 6, 2, 10, 4], [2, 3, 6, 4, 7, 5], [9, 18], [1, 2, 0, 0, 2, 2, 2, 0, 4, 6, 7, 2], [2, 1, 0, 0, 0, 1, 0, 5, 10, 4, 3, 5], [2, 0, 3, 0, 0, 3, 1, 11, 4, 8, 4], [1, 1, 2, 2, 1, 1, 4, 1, 10, 3, 11], [1, 1, 4, 2, 3, 6, 8, 6, 2, 4], [1, 0, 1, 4, 2, 3, 9, 7, 6, 4], [0, 1, 1, 2, 3, 4, 5, 10, 5, 7, 2], [1, 0, 2, 0, 1, 1, 2, 2, 11, 5, 14, 2], [0, 7, 3, 6, 1, 7, 3, 10, 4], [0, 1, 1, 3, 3, 4, 16, 6, 6, 2], [2, 1, 1, 3, 0, 2, 6, 3, 13, 6, 6, 4], [1, 1, 6, 6, 0, 3, 5, 6, 8, 3, 6, 4], [3, 2, 1, 2, 7, 5, 2, 2, 12, 5, 6, 3], [0, 3, 2, 1, 0, 0, 1, 9, 19, 8, 5, 5], [2, 1, 1, 1, 3, 2, 2, 8, 15, 5, 9, 4], [1, 4, 2, 3, 4, 6, 5, 13, 4, 8, 4], [0, 3, 2, 3, 5, 5, 14, 7, 9, 6], [2, 3, 1, 0, 5, 2, 3, 9, 19, 6, 9], [1, 1, 1, 3, 7, 3, 4, 9, 10, 5, 9, 7], [0, 3, 2, 4, 3, 6, 3, 3, 14, 8, 10, 6], [1, 1, 7, 4, 7, 5, 16, 5, 12, 5], [3, 3, 4, 4, 4, 20, 9, 12, 5], [2, 1, 5, 11, 16, 22, 9], [1, 4, 2, 3, 6, 4, 7, 4, 14, 9, 10, 5], [2, 3, 3, 2, 0, 6, 6, 2, 16, 6, 19, 7], [3, 3, 2, 1, 6, 9, 4, 3, 16, 10, 14, 2], [3, 3, 3, 3, 4, 6, 4, 4, 22, 8, 16, 5], [2, 6, 4, 3, 4, 6, 5, 2, 28, 7, 15, 3], [3, 1, 5, 6, 9, 8, 5, 5, 21, 9, 15, 5], [4, 5, 3, 2, 5, 5, 5, 3, 21, 6, 24, 9], [3, 5, 2, 3, 9, 10, 5, 5, 22, 10, 15, 4], [1, 2, 2, 6, 6, 5, 6, 9, 22, 12, 28, 6], [3, 5, 5, 5, 5, 8, 7, 3, 21, 13, 24, 8], [1, 2, 5, 8, 9, 10, 9, 33, 14, 23, 11], [2, 5, 4, 6, 10, 9, 7, 8, 29, 13, 29, 5], [1, 4, 5, 8, 9, 12, 9, 2, 29, 11, 34, 9]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

