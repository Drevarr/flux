created: 20230603215001000
creator: Drevarr
modified: 20230705163533306
modifier: drevarr
tags: ChartData
title: 202306032150_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Blanco Padre Guard", "Pocket Stabbs", "Drevarr Moonwillow", "Sygaldry Verdandi", "Crusader Siolith", "Belvyn Brightblade", "Tika Fiery", "Aronorf Xideliesi", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 14.2573, 10.3238, 60.1216, 37.4112, 0.0, 4.3704, 0.0, 11.5747, 0.0, 0.0], [23.1466, 0.0, 0.0, 0.0, 0.0403, 0.0, 0.0, 2.0209, 0.0, 0.9479, 54.0735, 77.8328, 5.3702, 0.0, 0.5756], [9.2275, 0.0, 45.2949, 0.0, 60.1974, 13.0815, 0.1734, 19.4665, 58.056, 0.0, 4.8048, 0.0], [0.0, 61.7407, 29.4941, 12.7002, 4.4237, 11.1111, 18.1864, 11.0741, 5.9438, 0.5867, 5.3546, 1.919, 28.1549, 18.88, 2.943, 5.3726, 6.8375], [27.2936, 81.7885, 56.876, 66.4749, 14.611, 10.4738], [12.7159, 129.8452, 8.8099, 0.0, 10.679, 0.0, 12.2653, 11.9924, 85.6707, 9.018, 2.1502, 43.992, 33.1816, 4.8544, 0.0, 0.0], [245.3702, 29.9831, 7.0042, 0.0, 0.0, 0.0, 3.8065, 34.4648, 77.3584, 0.6302, 0.0], [86.5894, 154.0764, 42.6086, 19.9936, 8.6573, 0.0, 25.9, 8.049, 35.8861, 52.391, 0.0, 0.0, 47.7313, 151.7008, 22.2089, 54.9276, 34.7771], [234.4708, 324.8577, 86.5488, 129.2262, 14.0141, 14.9817, 30.2906, 0.0, 63.6386, 20.0133, 20.9765, 21.7212, 54.0368, 48.38, 50.1824, 34.1796, 25.8617], [204.4639, 299.1579, 60.119, 68.1472, 40.608, 12.0024, 135.9249, 87.3503, 80.9783, 21.0781, 0.0, 70.8638, 124.4192, 64.3511, 14.0868, 17.4798]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

