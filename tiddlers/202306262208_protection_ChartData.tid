created: 20230626220846000
creator: Drevarr
modified: 20230705163539531
modifier: drevarr
tags: ChartData
title: 202306262208_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Cyr", "Zadie Miststep", "Rahani Sunray", "Ak\u00e1nt\u00f3r", "Zadey Starbolt", "\u00c1rkantor", "Eibh\u00ebar", "Black Raspberry Pie", "My Birthday Girl", "Primal Clone", "Ryvalia Fazebringer", "Arriasa", "Drevarr Moonwillow", "Gavann", "Zaylen Harker", "Bella Sassy", "Crusader Siolith", "Solus Sanctus", "Tika Fiery", "Koralia Danai", "Sygaldry Verdandi", "Sub Train"];
const professions = ["Tempest", "Tempest", "Chronomancer", "Druid", "Scrapper", "Vindicator", "Chronomancer", "Chronomancer", "Scrapper", "Chronomancer", "Chronomancer", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.1728, 13.8298, 1.2487, 23.7378, 10.6978, 13.9233, 18.584, 97.2127, 112.752, 40.248, 94.9068, 75.0964], [396.9769, 0.0, 19.3393, 17.7109, 18.326, 42.9051, 6.9309, 0.0, 9.3744, 18.8395], [0.0, 26.231, 31.3435, 27.5968, 58.3317, 9.7767, 32.5335, 24.3936, 37.4674, 32.1262, 30.3416, 14.9716, 49.6943, 16.146, 46.6937, 28.3446, 14.675, 34.4277, 55.6628], [440.2667, 0.0, 39.3466, 67.4498, 19.1022, 68.5759, 0.0, 38.8893, 36.4896, 28.9296], [53.5436, 63.0481, 71.1611, 36.6597, 48.392, 183.5566, 89.3403, 0.0, 103.6152, 100.7078], [72.842, 72.1952, 89.148, 120.7178, 60.536, 156.2933, 45.6881, 0.0, 105.4602, 101.4799], [354.6081, 10.3026, 47.5438, 19.5077, 31.4776, 59.0548, 5.6686, 27.4036, 39.2448, 17.3225, 37.2724, 25.9688, 10.6191, 48.9537, 8.556, 60.295, 47.9196, 39.5359, 37.7118, 40.9909], [425.2227, 0.0, 23.7112, 31.8283, 0.0, 34.5892, 11.1996, 21.3495, 12.264, 32.0695, 17.1037, 70.3211, 20.3729, 48.8055, 30.452, 47.2402, 43.2999, 32.8021, 44.4645, 40.4762], [21.7371, 66.7313, 35.1937, 5.3469, 53.1493, 8.1472, 17.9359, 79.2288, 10.6898, 48.8514, 81.0299, 31.5164, 63.2472, 46.644, 112.9999, 84.2508, 10.6657, 80.1099, 149.4851], [476.8021, 13.8369, 17.2445, 28.6911, 20.7192, 72.7338, 24.0287, 6.2615, 41.3952, 10.4076, 25.5798, 22.9793, 20.8187, 71.7641, 40.296, 31.7566, 21.9632, 0.0, 54.2799, 43.4363], [412.0208, 0.0, 37.6768, 25.2402, 33.4396, 75.2647, 11.5209, 17.3323, 19.4544, 54.2606, 52.1057, 45.2447, 23.2834, 75.6153, 8.234, 35.0354, 52.1478, 23.22, 29.7783, 97.812], [780.4448, 17.0478, 10.9903, 39.8995, 22.1206, 89.1245, 11.7504, 5.658, 32.7264, 41.3591, 67.9563, 10.3831, 79.3183, 23.506, 130.4266, 73.0539, 18.6379, 84.9438, 117.8248], [961.8937, 41.3952, 10.5653, 20.677, 31.9519, 77.3136, 37.9134, 31.5905, 43.9488, 27.1303, 50.7434, 66.1268, 35.9476, 93.0934, 18.216, 54.648, 45.8447, 34.6907, 67.9698, 153.5391], [856.2788, 26.8079, 48.6266, 10.3057, 92.0773, 15.9962, 18.049, 88.0992, 75.2638, 138.4559, 52.8857, 67.9871, 24.794, 133.2197, 70.2351, 10.8515, 121.6962, 167.1813], [1038.9557, 51.9156, 62.9151, 21.5816, 129.8603, 47.1163, 22.5566, 112.3248, 64.633, 83.5129, 95.6207, 49.0576, 179.2993, 87.952, 276.701, 121.2476, 41.3316, 168.6699, 145.6884], [1116.6317, 38.7156, 74.8981, 34.8514, 59.8506, 168.487, 59.9684, 36.1546, 58.5312, 59.729, 117.4175, 120.2509, 109.0752, 160.0437, 129.72, 182.0993, 89.1054, 38.313, 175.1274, 28.7001], [1195.2289, 37.5837, 62.2684, 70.6155, 44.543, 145.4676, 49.9622, 41.1714, 87.7632, 103.0529, 69.7391, 115.6997, 65.5238, 244.4721, 84.548, 180.5813, 145.4422, 29.6752, 145.2384, 147.1041], [1028.517, 22.5225, 133.7358, 140.6892, 74.8348, 200.7863, 84.2035, 38.927, 157.9872, 133.2878, 165.1338, 222.8769, 71.1873, 287.0566, 76.82, 243.3658, 208.7869, 23.5141, 136.0503, 307.2713], [1416.2833, 0.0, 78.0859, 81.938, 85.6363, 225.1314, 90.8361, 61.7665, 155.8032, 118.6114, 95.5838, 107.1772, 129.5792, 242.8427, 89.148, 204.6264, 174.1784, 97.7717, 124.5375, 217.1813], [1563.0388, 0.0, 133.7662, 114.4793, 53.8138, 248.452, 88.8854, 64.4635, 91.9296, 137.7331, 142.3162, 192.2676, 180.5509, 180.188, 165.554, 271.4184, 203.7366, 41.9198, 170.7732, 289.1246], [1755.2333, 20.9055, 80.2111, 122.8642, 83.6528, 134.8619, 122.4841, 98.5812, 128.1504, 106.3692, 192.1515, 230.1053, 138.5989, 259.7284, 101.43, 227.0928, 192.2656, 14.1178, 185.5701, 301.2223], [1892.7783, 60.3141, 103.4062, 110.4294, 128.5192, 230.374, 113.9927, 64.4446, 150.4272, 77.1926, 151.8141, 210.3387, 106.3745, 242.9168, 140.116, 295.9493, 213.1326, 80.914, 213.7617, 283.333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

