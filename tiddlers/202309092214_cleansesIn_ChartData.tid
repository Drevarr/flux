created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Helgariz", "Itty Bitty Mew", "Sygaldry Verdandi", "Fqa Rev", "Starla Rayn", "Krytsmancer", "Melody Phoenixstorm", "Jimbo The Pleb", "Oo Dads Mad", "Christie Raskae", "Mort\u00e4rion", "Fourty Eighth", "Aira Draugr", "Belvyn Brightblade", "Charr Surethang", "Matrim The Mad", "Konoko K", "Philip Poundhouse", "Tegan Parker", "Traidoruns Maximus", "F\u00e4dscelsior", "Kos\u00e1ir", "Keypek The Drunk", "Nsidejob", "Sofya De Nova", "Latedoctor", "Zatoshin", "Mistwalker Cael", "Sygaldry Verdandi", "Koralia Danai", "Lord Erin The Wise", "Govinda Ektar", "Seiker Novus Terra", "Xanvias Einzbern", "Rina Of Theros", "No Reserv\u00e9", "Zenady", "High Sorcer Baradun", "Venomina The Fierce", "Pr\u00e6tor Lightbringer", "Serene Azura", "Glorious Gluvs", "Crusader Siolith", "Rhaevynn", "Bella Sassy", "Gabe Malhorn", "Hyde En Sikh", "Tootsie Pop Rocks", "Be\u00eb", "Drevarr Moonwillow"];
const professions = ["Berserker", "Catalyst", "Willbender", "Herald", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Willbender", "Scrapper", "Scourge", "Herald", "Firebrand", "Berserker", "Catalyst", "Tempest", "Herald", "Tempest", "Firebrand", "Tempest", "Virtuoso", "Scrapper", "Catalyst", "Tempest", "Reaper", "Vindicator", "Herald", "Firebrand", "Firebrand", "Weaver", "Vindicator", "Tempest", "Berserker", "Reaper", "Vindicator", "Berserker", "Tempest", "Spellbreaker", "Firebrand", "Dragonhunter", "Berserker", "Firebrand", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Reaper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1004, 0.0847, 0.1017, 0.0978, 0.1818], [0.1115, 0.1073, 0.0508, 0.2065, 0.0727], [0.2062, 0.1451, 0.0233, 0.0], [0.2693], [0.0928, 0.1365, 0.3953, 0.0778, 0.0075], [0.197, 0.0734, 0.0, 0.2391, 0.2], [0.04, 0.2062, 0.1741, 0.3488, 0.0778], [0.299, 0.1928, 0.1395, 0.0889], [0.04, 0.2165, 0.1911, 0.2558, 0.1222, 0.0324], [0.2668, 0.0319, 0.0687, 0.0078, 0.1524], [0.1655, 0.1646, 0.1224, 0.0426, 0.0, 0.0534], [0.2214, 0.1558, 0.0743, 0.0904, 0.0678, 0.1522], [0.04, 0.2474, 0.1365, 0.3023, 0.0111, 0.2843], [0.045, 0.4742, 0.1485, 0.1163, 0.0444, 0.3092], [0.2784, 0.2184, 0.3023, 0.0, 0.3217], [0.197, 0.1837, 0.0319, 0.0, 0.3155, 0.0753, 0.0452, 0.0543, 0.2636], [0.2887, 0.1775, 0.2558, 0.0444, 0.4115], [0.1633, 0.0213, 0.0, 0.5242, 0.2026, 0.3086], [0.0125, 0.1224, 0.117, 0.0, 0.4529, 0.0623, 0.3494, 0.0876, 0.0678, 0.0761, 0.2727], [0.3741, 0.1939, 0.0319, 0.0286, 0.3104, 0.3662], [0.2653, 0.0532, 0.3511, 0.3636, 0.3829, 0.0989], [0.045, 0.1649, 0.1416, 0.1163, 0.0111, 0.0816, 0.0745, 0.2366, 0.3065, 0.1375, 0.1073, 0.1695, 0.1087, 0.1455], [0.1122, 0.117, 0.0286, 0.3003, 0.5429, 0.29, 0.0791], [0.1443, 0.1109, 0.2791, 0.0111, 0.1247, 0.0816, 0.0106, 0.0, 0.2875, 0.2104, 0.2342, 0.1045, 0.0678, 0.1087, 0.2182], [0.1735, 0.1596, 0.0286, 0.3257, 0.5325, 0.1859, 0.0763, 0.1525, 0.087, 0.2818], [0.035, 0.3505, 0.1655, 0.2093, 0.0667, 0.1122, 0.102, 0.117, 0.0, 0.43, 0.0727, 0.2379, 0.0508, 0.0, 0.0], [0.414, 0.2245, 0.1809, 0.0, 0.4249, 0.1039, 0.1747, 0.0932, 0.0543, 0.2182], [0.035, 0.3608, 0.1519, 0.2558, 0.0111, 0.0374, 0.102, 0.0213, 0.0286, 0.2697, 0.3896, 0.1524, 0.0621, 0.0847, 0.1739, 0.1727], [0.03, 0.389, 0.1837, 0.0319, 0.0, 0.2824, 0.4104, 0.2639, 0.065, 0.0508, 0.0543, 0.1909], [0.05, 0.1443, 0.1485, 0.2791, 0.0222, 0.3766, 0.0204, 0.0213, 0.0, 0.2417, 0.3325, 0.1413, 0.0565, 0.0169, 0.0, 0.1818], [0.1229, 0.2093, 0.0, 0.3566, 0.0408, 0.0426, 0.0, 0.2723, 0.1948, 0.3048, 0.1356, 0.1356, 0.0978, 0.2545], [0.1546, 0.0887, 0.0, 0.1222, 0.419, 0.0, 0.0426, 0.0, 0.2799, 0.226, 0.2156, 0.0904, 0.2203, 0.1739, 0.2727], [0.04, 0.2165, 0.1724, 0.3488, 0.1222, 0.4913, 0.1429, 0.0426, 0.0, 0.2875, 0.2987], [0.035, 0.1856, 0.1536, 0.1628, 0.0778, 0.1546, 0.0918, 0.0851, 0.0286, 0.3257, 0.4026, 0.2379, 0.1045, 0.0169, 0.1739, 0.1545], [0.025, 0.2371, 0.1877, 0.2326, 0.0667, 0.4389, 0.2143, 0.0213, 0.0, 0.3104, 0.1636, 0.1487, 0.1412, 0.0761, 0.1636], [0.1649, 0.1928, 0.3256, 0.1222, 0.3092, 0.102, 0.0, 0.0286, 0.3868, 0.3299, 0.316], [0.1753, 0.186, 0.2093, 0.1222, 0.3142, 0.1122, 0.0426, 0.0286, 0.2748, 0.4026, 0.1747, 0.0763, 0.0847, 0.0761, 0.1636], [0.3042, 0.0612, 0.0532, 0.4249, 0.4805, 0.3457, 0.0734, 0.0847, 0.1413, 0.3182], [0.2031, 0.093, 0.0889, 0.4489, 0.2347, 0.0106, 0.3308, 0.2779, 0.1227, 0.096, 0.0847, 0.1196, 0.1364], [0.2268, 0.1775, 0.1163, 0.0333, 0.3516, 0.102, 0.0532, 0.0286, 0.3104, 0.374, 0.1599, 0.113, 0.0508, 0.1522, 0.2273], [0.2268, 0.1502, 0.2558, 0.1111, 0.3641, 0.1633, 0.0319, 0.0286, 0.3028, 0.3922, 0.2082, 0.1158, 0.0847, 0.1522, 0.2727], [0.2099, 0.2326, 0.0444, 0.4389, 0.1327, 0.117, 0.3461, 0.3039, 0.2602, 0.1045, 0.0339, 0.1957, 0.1909], [0.04, 0.299, 0.198, 0.2558, 0.1111, 0.4938, 0.0714, 0.0532, 0.3206, 0.3792, 0.2416, 0.0819, 0.0109, 0.0], [0.3402, 0.1741, 0.3256, 0.2222, 0.3541, 0.1837, 0.0532, 0.0286, 0.3308, 0.3766, 0.2714, 0.1497, 0.0508, 0.1957, 0.1636], [0.05, 0.3402, 0.2253, 0.1628, 0.0889, 0.4514, 0.2041, 0.0638, 0.0286, 0.2366, 0.5377, 0.1599, 0.0847, 0.0847, 0.163, 0.1545], [0.045, 0.3093, 0.2218, 0.3488, 0.0222, 0.3865, 0.1327, 0.0, 0.0286, 0.4478, 0.4727, 0.2788, 0.0847, 0.1356, 0.1413, 0.2182], [0.035, 0.2887, 0.2304, 0.5116, 0.0556, 0.4339, 0.1429, 0.0745, 0.0, 0.4122, 0.4909, 0.171, 0.1017, 0.0678, 0.1957, 0.1636], [0.05, 0.3196, 0.2423, 0.2558, 0.1444, 0.5112, 0.1122, 0.0532, 0.0286, 0.3944, 0.5117, 0.3383, 0.0847], [0.055, 0.2268, 0.2218, 0.3023, 0.1, 0.4938, 0.1735, 0.0638, 0.0, 0.3461, 0.5766, 0.3866, 0.0734, 0.0678, 0.2283, 0.2182], [0.045, 0.5052, 0.2304, 0.3953, 0.1111, 0.4913, 0.2449, 0.1064, 0.0, 0.3766, 0.4649, 0.2639, 0.1045, 0.1695, 0.3152, 0.2545]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

