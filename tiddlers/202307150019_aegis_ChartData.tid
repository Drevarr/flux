created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Drevarr Moonwillow", "Air One Com", "Mmathuss", "Gabe Malhorn", "Gavann", "Gestern Yesteryear", "Tika Fiery", "Solus Sanctus", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.5614, 0.0, 82.7058, 19.0757, 10.9652, 17.7551, 12.9086, 37.831, 23.1188, 5.3703, 36.8906, 14.6362, 0.0, 3.3264, 20.8872, 30.3309, 19.1277, 1.0197, 27.1607, 0.4277, 35.2598, 13.8424, 14.2784, 4.4398, 2.12, 8.4942, 24.3741, 1.3104], [0.6921, 49.3244, 18.5192, 12.8588, 35.2053, 78.6934, 52.2547, 0.0, 72.7056, 16.0164, 52.0389, 0.0, 32.3523, 70.3309, 64.5322, 59.8752, 44.5588, 16.6135, 23.8478, 0.0, 57.2592, 18.0101, 1.2449], [24.2242, 89.5804, 30.6194, 57.0507, 27.5418, 4.8686, 16.5375, 7.2752, 77.9229, 42.457, 73.359, 0.0, 34.0695, 11.616, 33.6037, 62.4456, 19.0555, 22.9522, 16.6166, 17.4174, 16.0846, 32.54, 77.369, 28.1289, 65.2252], [74.1905, 34.953, 30.6788, 22.055, 145.9248, 36.288, 0.0, 105.0786, 8.0676, 65.8476, 167.1155, 90.6606, 164.7162, 41.2474, 108.8683, 83.5406, 43.8306, 30.5962, 22.32, 3.5307], [16.485, 36.3329, 36.3883, 32.6898, 13.8138, 167.5968, 47.2651, 0.0, 85.3578, 43.902, 40.4613, 64.4688, 83.0592, 231.7019, 55.4083, 82.8749, 59.0018, 31.8107, 7.2304, 46.85, 70.9728, 100.0421, 46.8796], [95.9992, 69.0718, 41.3438, 40.9887, 395.3936, 50.6822, 19.7248, 151.5888, 32.0544, 25.5672, 138.3853, 339.8382, 234.3303], [60.2774, 40.2402, 107.5563, 74.046, 122.6254, 17.6392, 44.2969, 49.8852, 22.1738, 17.3043, 241.3779, 54.4018, 72.2476, 159.9642, 93.0429, 128.9763, 97.3813, 167.5836, 96.8933, 82.9699, 96.811, 42.0314, 26.8922, 82.12, 77.8807, 26.9197, 24.9304], [165.92, 67.5584, 193.2575, 66.7472, 41.6473, 7.0904, 72.2202, 57.0176, 38.34, 35.9168, 175.0134, 158.9414, 27.6368, 72.171, 34.4736, 143.5743, 171.4134, 114.7163, 215.4533, 59.2099, 103.1184, 162.019, 48.539, 48.1776, 43.36, 98.0929, 232.1587, 70.8271], [101.8675, 36.6002, 163.5256, 73.1998, 110.8879, 25.57, 130.241, 93.639, 90.0788, 15.606, 232.2275, 39.8261, 86.3052, 58.806, 57.4236, 114.1479, 81.041, 107.532, 241.897, 99.3643, 176.0616, 85.8, 99.1835, 50.055, 70.57, 97.0183, 101.5058, 104.5044], [96.3305, 110.474, 199.3037, 103.2765, 134.5172, 1.7195, 119.7103, 76.5378, 56.3625, 73.5548, 218.4538, 143.761, 62.3024, 152.7768, 25.974, 136.9413, 138.5789, 102.0164, 376.5056, 86.2963, 123.3144, 115.3438, 83.9863, 72.1269, 45.76, 160.7761, 57.8488, 66.1097], [235.3837, 54.2178, 218.9956, 73.8697, 63.063, 6.8876, 114.9545, 55.0572, 50.76, 37.4085, 292.3312, 103.0882, 41.0596, 241.6986, 24.2676, 121.0221, 180.745, 229.5252, 252.0126, 167.1278, 118.3248, 142.4566, 109.8253, 75.5265, 27.43, 149.2117, 152.4178, 146.3717]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

