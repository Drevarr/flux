created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Audra Storm", "Kosa\u00edr", "Mike The Archmagus", "Gordon Ramsybringer", "Cat Wigglebooty", "Dizzy Bunnyhopper", "Permanent Dawn", "Mort\u00e4rion", "Tootsie Pop Bringer", "Lord Erin The Wise", "Elon Illusionblade", "Rozaalyna", "Morton Saltbringer", "Glorious Gluvs", "Legacy Of Mathus", "Be\u00eb", "Sister Elonith", "Arriasa", "Name Is What", "Brioche Bunbringer", "Zaedy Zae", "Primal Clone", "Jimbo The Pleb", "Il Dim Il", "Xanvias Einzbern", "Venomina The Sly", "Seren\u00e1 Joy", "Tribal S", "Kosa\u00edr", "Arcanophage Farra", "Klengah", "Keypek The Drunk", "Newtype Khan", "My Birthday Girl", "Drevarr Moonwillow"];
const professions = ["Berserker", "Weaver", "Scrapper", "Weaver", "Herald", "Scrapper", "Scrapper", "Weaver", "Scrapper", "Scrapper", "Weaver", "Chronomancer", "Scourge", "Chronomancer", "Berserker", "Berserker", "Scourge", "Berserker", "Druid", "Scourge", "Chronomancer", "Druid", "Chronomancer", "Berserker", "Scourge", "Berserker", "Druid", "Chronomancer", "Druid", "Holosmith", "Spellbreaker", "Druid", "Scrapper", "Spellbreaker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[57.325, 130.2812, 9.6448, 34.5984, 26.1576, 73.2495, 8.1967, 27.0173], [12.0931, 31.8427, 88.464, 79.2418, 159.5232], [46.7514, 48.2184, 46.6578, 271.2003, 171.0933], [129.0366, 502.8797], [51.6596, 382.639, 37.8048, 0.0, 0.0, 128.7682, 33.1867, 0.0, 0.0], [0.0, 32.3674, 49.8413, 0.0, 25.6397, 111.864, 0.0, 0.0, 19.5804, 102.2238, 0.0, 50.3424, 56.6352, 75.4714, 0.0, 91.3605, 0.0, 0.0, 51.2534, 0.0], [29.0909, 45.423, 223.5797, 3.9861, 19.7626, 86.7302, 19.7539, 95.113, 0.0, 54.7056, 91.6066, 11.3328, 4.009, 55.9227, 4.031, 41.2171, 22.0704], [88.8174, 313.235, 47.7945, 32.8474, 62.0006, 65.965, 10.8922, 73.5314, 31.4918, 61.6302, 4.031, 29.7259, 59.5718, 24.2923, 77.0112], [46.9417, 46.7029, 0.0, 15.961, 0.0, 84.7901, 39.4901, 40.7592, 32.9868, 238.5222, 42.1443, 0.0, 60.5875, 43.5298, 92.7322, 0.0, 139.0894, 87.1363], [0.0, 21.7286, 0.0, 6.528, 27.3521, 0.0, 71.0216, 61.1146, 65.9599, 37.8288, 0.0, 156.827, 52.5159, 39.6906, 36.7411, 34.6925, 173.1974, 49.1726, 0.0, 53.947, 0.0, 27.9418, 0.0, 86.5613, 73.069], [31.2855, 8.3494, 15.961, 6.3202, 53.6857, 44.932, 54.8275, 11.983, 28.345, 84.7602, 240.3376, 27.6705, 22.2592, 76.3968, 42.1344, 97.1962, 0.0, 11.9599, 0.0, 8.0784, 66.1478, 78.3686, 11.2819, 62.8992, 67.4515, 66.4061, 142.379], [62.4179, 164.001, 50.688, 36.5894, 34.1561, 24.7455, 45.2319, 66.4954, 13.4495, 0.8333, 7.252, 204.0938, 130.9714, 53.3808, 28.6474, 47.3066, 24.8976, 42.1546, 50.5248, 187.5494, 189.961], [21.8522, 129.6501, 32.9894, 60.3514, 69.1253, 60.2759, 70.3296, 188.2188, 169.6748, 42.8796, 20.4544, 37.4918, 13.6253, 56.2464, 22.561, 46.4001, 70.7232, 59.6448, 36.9994, 49.1176, 18.8448, 64.7438, 68.5094, 68.6338], [33.2661, 99.3139, 87.2298, 102.3634, 19.9731, 51.3139, 62.7638, 86.3635, 0.0, 186.8184, 82.5326, 4.6944, 78.0634, 81.6614, 52.441, 97.645, 85.3997, 160.9234, 122.3011], [0.0, 0.0, 0.0, 34.4026, 0.0, 97.3111, 46.3315, 0.0, 30.8491, 112.5432, 107.5305, 35.6814, 9.4451, 14.3962, 10.6978, 84.1613, 118.4918, 51.6413, 35.7466, 79.0272, 57.8573, 70.9733, 91.6742, 248.5454, 165.9408], [32.65, 174.5498, 58.0237, 79.2826, 31.5252, 92.637, 29.1883, 106.4832, 48.5399, 43.4765, 67.8258, 100.8273, 30.6515, 97.8586, 34.8293, 98.327, 3.654, 142.7439, 163.7976, 64.2096, 46.5485, 96.479], [0.0, 167.8779, 5.2659, 26.1446, 0.0, 92.6006, 175.3416, 228.4674, 54.7605, 31.1478, 39.2582, 72.2304, 153.3235, 9.261, 232.3325, 162.5299, 0.0, 0.0, 0.0, 60.7277, 72.5458, 85.728, 59.4048, 0.0], [62.2402, 169.591, 81.664, 39.8208, 46.237, 81.1808, 30.5378, 69.8938, 43.4248, 67.8254, 41.7186, 73.3163, 22.3299, 44.2176, 40.1414, 47.4422, 34.6406, 1.659, 78.1824, 119.4955, 24.6528, 31.6819, 106.6867, 0.0, 75.9326, 75.9878, 194.975, 133.5778], [22.7602, 123.429, 39.7555, 56.4581, 46.4948, 61.4754, 76.1901, 44.2224, 111.573, 308.3472, 51.136, 64.6061, 40.9306, 177.191, 12.061, 248.8328, 102.215, 17.6784, 77.0515, 17.6218, 62.3246, 20.1734, 272.8378, 140.087], [41.8488, 165.4436, 10.0813, 32.7053, 5.9875, 46.7767, 25.1899, 91.5883, 165.5514, 244.3875, 70.5501, 24.6806, 53.3453, 48.5366, 96.839, 3.304, 243.9602, 151.788, 49.2624, 70.1568, 100.3755, 40.9594, 62.1432, 47.3146, 177.1536, 223.4242], [45.1256, 124.6011, 62.2054, 36.7526, 21.0622, 63.732, 88.4146, 18.408, 47.9318, 105.601, 115.542, 222.1831, 17.1441, 26.0944, 99.625, 40.9032, 84.5184, 1.673, 222.0337, 154.5235, 15.84, 75.2794, 81.1126, 37.103, 89.5104, 60.7027, 187.019, 154.9392], [144.4363, 21.6832, 47.3606, 46.9476, 40.7137, 107.2071, 54.5443, 65.9957, 52.3742, 142.9722, 269.3849, 78.8319, 30.0349, 72.5107, 50.4245, 92.8512, 9.492, 265.1116, 97.3445, 0.0, 89.255, 44.5626, 0.0, 23.4662, 42.2074, 294.6902, 177.2174], [47.0404, 187.8033, 57.3478, 80.425, 30.7541, 76.1753, 71.7713, 70.007, 55.05, 22.9104, 233.3772, 234.7517, 71.2467, 18.8752, 79.6205, 10.7251, 59.5795, 9.254, 152.5997, 93.3413, 48.2688, 43.5974, 114.0955, 12.1181, 56.4883, 117.2102, 215.2363, 196.2869], [58.1146, 171.0335, 35.7914, 11.424, 47.0534, 66.6225, 132.7969, 77.4269, 99.6552, 159.9466, 74.7054, 184.338, 171.7506, 38.8483, 118.0838, 30.479, 107.7312, 21.973, 47.7289, 0.0, 4.0752, 43.5418, 201.4645, 59.4797, 79.4707, 96.9638, 245.257, 103.3234], [24.8132, 206.2861, 21.1904, 30.0941, 67.8434, 110.5087, 121.3015, 95.0515, 236.7288, 199.0012, 43.3053, 62.2205, 100.9056, 25.1438, 65.472, 0.0, 244.2924, 146.0501, 36.8208, 21.4646, 113.1626, 45.9389, 84.672, 104.9165, 164.2118, 126.8851], [78.1112, 130.191, 46.6752, 92.0448, 60.7522, 48.786, 68.1227, 150.2093, 32.5865, 84.1291, 214.1496, 127.3608, 89.6679, 22.3043, 119.8944, 40.0824, 119.3376, 7.497, 77.8502, 174.5395, 0.0, 73.0243, 205.8, 29.4403, 35.8042, 78.8333, 174.9259, 160.6234], [105.601, 56.3598, 358.4816, 114.0876, 100.768, 124.6195, 70.3973, 181.655, 421.9194, 154.1899, 29.1312, 43.8202, 168.2072, 39.6864, 127.2499, 99.335, 331.0757, 250.8365], [86.0072, 220.7117, 51.3638, 21.9667, 72.1678, 78.96, 45.4318, 51.769, 28.9737, 152.1677, 204.0948, 264.0781, 97.4079, 27.433, 78.5606, 41.1221, 139.753, 12.544, 191.9124, 158.0597, 57.384, 70.7971, 63.6608, 39.8362, 95.2862, 71.209, 272.3074, 243.3187], [28.1887, 109.8149, 29.0893, 59.5354, 36.0612, 108.852, 84.6661, 121.2662, 90.9631, 65.8541, 13.9356, 256.956, 123.4917, 25.8989, 103.6877, 51.4368, 157.1328, 284.3803, 259.8077, 14.8032, 69.8784, 105.1501, 18.7325, 69.6125, 24.1862, 336.2736, 329.3146], [89.3038, 231.5309, 50.857, 69.5232, 56.3825, 97.4663, 171.8812, 171.1661, 196.4799, 39.1792, 193.2, 82.3536, 190.2854, 327.395, 61.9632, 115.4246, 157.6154, 63.8477, 114.0653, 69.3485, 343.0627, 274.2149], [55.4102, 163.4601, 91.2806, 41.8445, 14.8781, 145.8293, 124.3502, 73.8586, 35.4481, 153.3931, 212.0328, 287.1204, 142.9578, 73.7914, 37.1275, 141.0029, 26.733, 164.8919, 140.1787, 22.2912, 11.4979, 193.3422, 22.3642, 47.3256, 104.5152, 445.2178, 267.7973], [27.3991, 91.6026, 29.3427, 34.5005, 21.289, 75.6817, 123.5506, 141.7133, 46.966, 54.6653, 165.6396, 439.1993, 109.0179, 44.0371, 103.3786, 51.0264, 148.7405, 43.981, 217.4934, 31.3584, 3.096, 50.8915, 139.011, 10.9574, 65.0765, 97.8029, 516.2914, 500.0227], [12.752, 318.4451, 21.641, 56.3366, 55.6114, 91.791, 32.487, 200.449, 77.1917, 194.0458, 300.4092, 487.7974, 161.1468, 37.1338, 175.9334, 82.1074, 167.7274, 16.744, 272.8634, 193.955, 45.792, 81.7939, 123.3702, 39.8986, 116.9078, 94.3738, 129.4176, 145.9546], [94.298, 255.6938, 41.353, 73.7664, 40.5065, 116.6422, 169.832, 68.4211, 64.5291, 109.224, 180.81, 352.4766, 142.0677, 28.0947, 150.5414, 101.7245, 94.6368, 60.382, 400.8788, 222.2443, 63.3312, 118.153, 59.3802, 27.6307, 117.0288, 149.2397, 339.456, 313.1789], [27.0241, 215.7529, 0.0, 121.7472, 79.4405, 125.8425, 168.0827, 293.0554, 149.1251, 92.5474, 99.4896, 345.4941, 164.3202, 46.4285, 98.0794, 101.5056, 165.7037, 21.322, 366.9924, 212.1696, 34.9488, 124.2221, 100.1011, 5.8282, 48.4747, 95.9424, 577.9238, 265.2302], [81.0722, 454.9474, 22.5984, 86.5286, 38.813, 106.8427, 151.3894, 253.1808, 139.5388, 108.3715, 332.4258, 478.4409, 187.1919, 87.3974, 190.153, 130.4798, 269.5661, 13.37, 480.8331, 246.864, 17.5536, 98.8042, 204.3731, 42.4195, 90.1454, 76.7904, 588.0014, 406.0507]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

