created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Bearah", "Glorious Gluvs", "Legacy Of Mathus", "Arriasa", "Sub Train", "Klengah", "Darks Na", "Charr Surethang", "Yummy Kiwi", "Zaylen Harker", "Tribal S", "Venomina The Sly", "Jimbo The Pleb", "Rafaellagabriela", "Koralia Danai", "Sygaldry Verdandi", "Zaedy Zae", "Arcanophage Farra", "Bella Sassy", "Solus Luxes", "Newtype Khan"];
const professions = ["Firebrand", "Berserker", "Berserker", "Druid", "Firebrand", "Druid", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Druid", "Druid", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Druid", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[108.654], [0.0, 0.0, 35.5893, 0.0, 0.0, 12.5567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 17.4369, 0.0, 0.0, 0.0, 0.0, 17.3922, 28.0476, 0.0], [60.7152, 9.7152, 41.7422], [92.7108, 49.5264], [30.723, 8.0952, 107.3394, 22.1697], [54.2724, 27.1392, 0.0, 0.0, 0.0, 0.0, 25.2369, 0.0, 27.2369, 24.506, 0.0, 34.0451, 27.1245, 0.0, 0.0, 0.0], [38.1108, 29.9376, 19.0182, 0.0, 14.6437, 0.0, 31.7655, 0.0, 0.0, 11.9882, 28.3093, 19.1022, 29.172, 24.7163, 30.8151, 0.0, 0.0, 6.4337, 11.9511, 17.5203], [0.0, 0.0, 15.5998, 0.0, 14.907, 0.0, 9.9746, 44.1815, 54.4654, 35.49, 51.0596, 29.9478, 17.6624, 0.0, 17.9928, 24.0408], [9.768, 46.7066, 0.0, 11.2367, 28.3237, 68.9715, 22.377, 0.0, 42.2096, 5.4896, 57.1217, 23.8017, 58.7867, 22.3681, 20.7533, 0.0, 40.5818, 68.6637, 26.8758], [119.574, 73.7616, 13.0401, 50.7638, 22.1785, 6.1697, 18.4977, 0.0, 19.3924, 34.0837, 32.3996, 89.5955, 46.3437, 36.3012, 22.2737], [92.82, 50.424, 26.3249, 19.1421, 13.5299, 23.1739, 19.4805, 10.071, 25.8073, 43.1278, 64.7318, 63.7143, 42.8162, 53.4663, 0.0, 18.6998, 2.5452, 29.2824, 14.4585], [47.3928, 40.8144, 47.0911, 26.9207, 43.276, 14.4795, 64.8999, 27.3718, 27.2118, 20.2363, 51.5143, 61.1286, 43.5006, 27.1814, 33.6519, 26.8394, 4.7016, 62.4015, 21.2908], [26.754, 17.8992, 29.681, 0.0, 24.7224, 12.0557, 50.1767, 61.4952, 0.0, 1.6322, 32.9551, 65.3375, 76.0699, 35.5368, 63.7046, 20.6692, 35.2806, 23.4612, 36.7993, 36.7794, 48.4785], [65.6292, 64.152, 68.172, 35.511, 10.516, 0.0, 54.4752, 0.0, 0.0, 17.4808, 18.9088, 45.075, 41.0729, 63.9581, 35.8172, 41.6905, 50.9922, 20.0788, 91.3752, 27.5562], [68.796, 51.6912, 48.4895, 45.0482, 4.0295, 22.1874, 62.127, 11.8482, 14.8586, 39.8772, 36.0594, 82.7557, 85.9579, 45.7061, 56.5336, 10.0089, 26.201, 50.9747, 116.0271, 11.2266], [182.0364, 49.0512, 0.0, 21.1713, 55.692, 55.3599, 76.5531, 11.8222, 0.0, 49.5079, 57.5874, 37.8347, 50.5206, 55.2376, 46.9541, 11.9266, 0.0, 37.0114, 53.9343, 40.9941], [203.112, 25.344, 45.6927, 0.0, 44.2366, 69.4184, 25.381, 55.8441, 6.5407, 47.0501, 21.2051, 44.3972, 73.3278, 41.8782, 64.1312, 40.7973, 0.0, 9.7919, 62.5338, 19.3914], [0.0, 124.9776, 43.6301, 21.4958, 0.0, 0.0, 30.5307, 80.4141, 0.0, 0.0, 108.145, 75.5274, 0.0, 125.6054, 156.5109, 28.7387, 3.599, 59.3978, 0.0, 0.0, 52.0506], [178.8696, 71.4912, 38.1414, 0.0, 69.8383, 0.0, 39.0245, 87.4692, 14.1658, 43.9471, 18.509, 33.3325, 64.4237, 53.6367, 37.4673, 87.8678, 55.4822, 43.4644, 25.4166, 69.0165, 0.0], [331.3128, 34.2144, 77.0518, 14.8606, 14.847, 99.8197, 32.5371, 60.6177, 11.7354, 36.3788, 28.7918, 36.6694, 43.6578, 48.9957, 56.9108, 82.96, 35.8848, 23.8336, 29.9415, 85.7745, 21.6594], [233.5788, 209.5104, 60.2011, 5.3539, 134.4345, 0.0, 112.442, 108.0027, 0.0, 75.6592, 63.3772, 274.9126, 116.3077, 227.0444, 61.1189, 127.3186, 22.96, 16.359, 30.0121, 41.2335, 21.2625]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

