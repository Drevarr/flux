created: 20230227222028000
creator: Drevarr
modified: 20230705163520371
modifier: drevarr
tags: ChartData
title: 202302272220_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Iris S K", "Drevarr Moonwillow", "Smol Daddy Tika", "Sassy Daddy Demon", "Black Raspberry Pie", "Tootsie Pop Bringer", "Echo Monchichi", "Belvyn Brightblade", "Sumatra Satyricon", "Grumyaar Lordsbane", "Tribal S", "Rina Of Theros", "High Sorcer Baradun", "Sygaldry Verdandi", "Etchery Howls", "Ark Darkness", "Gavann", "Demon Sekhmet", "Cat Wigglebooty", "Rozaalyna", "Legacy Of Mathus", "Jeckyll Mbs", "Dark Sidiuz", "Jupi Jupi Jupi", "Fribble Bibble", "\u00c1rk\u00e1ntor", "What Charr U Saying", "Newtype Khan", "Tegan Parker", "Venomina The Siren", "Sp\u00edcy Cheese", "Kahless The Drunk", "Sofya De Nova", "Be\u00eb", "Zaylen Harker", "M A C U M B E I R O", "Primal Clone", "Mac Aaroni", "Lord Erin The Wise", "Ryvalia Fazebringer", "Koralia Danai", "Mike The Archmagus", "Arcanophage Farra", "My Birthday Girl", "Husky Guard", "Smol Gluvs", "Mistwalker Caelon", "Eibh\u00ebar", "Ravioli Fetabringer"];
const professions = ["Berserker", "Spellbreaker", "Scrapper", "Berserker", "Vindicator", "Chronomancer", "Scrapper", "Renegade", "Firebrand", "Soulbeast", "Firebrand", "Druid", "Scourge", "Tempest", "Firebrand", "Druid", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Scourge", "Berserker", "Berserker", "Scourge", "Dragonhunter", "Scrapper", "Scourge", "Berserker", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Firebrand", "Weaver", "Scourge", "Firebrand", "Weaver", "Chronomancer", "Tempest", "Weaver", "Chronomancer", "Firebrand", "Weaver", "Spellbreaker", "Scrapper", "Dragonhunter", "Scourge", "Vindicator", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 8, 0, 0, 0, 2, 3, 0, 2, 1, 0, 0, 0, 22, 0, 0, 4, 1, 1, 5, 0], [1, 19, 1, 3, 0, 0, 29, 0], [1, 7, 4, 2, 2, 2, 1, 2, 0, 0, 1, 0, 9, 1, 0, 2, 0, 0, 20, 1], [3, 5, 2, 0, 0, 1, 5, 1, 0, 0, 0, 1, 0, 21, 0, 0, 0, 0, 1, 15, 0], [10, 18, 4, 2, 3, 2, 4, 1, 2, 3, 5, 3], [2, 4, 0, 2, 2, 1, 2, 0, 18, 0, 0, 1, 1, 1, 25, 0], [3, 8, 4, 0, 3, 2, 2, 2, 0, 1, 0, 1, 3, 10, 0, 1, 2, 0, 0, 17, 1], [59, 1], [12, 10, 5, 2, 8, 4, 7, 2, 2, 5, 2, 2], [4, 4, 2, 0, 2, 4, 3, 1, 2, 3, 1, 2, 4, 22, 0, 2, 5], [58, 3], [1, 12, 2, 3, 4, 6, 0, 0, 1, 1, 2, 1, 9, 1, 1, 0, 0, 17, 1], [7, 9, 5, 1, 2, 4, 6, 1, 2, 1, 0, 1, 2, 9, 1, 0, 1, 0, 0, 11, 0], [2, 0, 2, 3, 2, 5, 0, 0, 1, 0, 0, 21, 2, 0, 7, 2, 0, 17, 0], [2, 7, 2, 5, 2, 5, 1, 2, 2, 0, 1, 1, 14, 0, 0, 0, 7, 19, 0], [7, 12, 5, 5, 4, 5, 1, 2, 3, 1, 2, 1, 20, 0, 0, 2, 0], [7, 4, 2, 5, 3, 3, 3, 0, 3, 0, 36, 0, 0, 3, 1], [1, 6, 3, 0, 4, 5, 7, 0, 2, 4, 0, 2, 3, 32, 2], [6, 34, 2, 1, 10, 1, 6, 16], [1, 7, 6, 3, 3, 5, 0, 0, 2, 1, 3, 1, 20, 0, 0, 1, 0, 0, 25], [4, 4, 11, 6, 5, 5, 3, 2, 4, 36, 1, 0], [4, 1, 8, 5, 6, 7, 0, 2, 3, 4, 1, 4, 34, 2], [2, 6, 3, 1, 6, 1, 2, 2, 1, 1, 0, 1, 17, 0, 0, 7, 1, 5, 28, 0], [6, 3, 6, 3, 4, 5, 6, 2, 0, 5, 42, 0, 2], [3, 18, 4, 1, 2, 5, 1, 36, 1, 0, 1, 0, 0, 18], [2, 12, 8, 2, 5, 3, 4, 1, 2, 2, 1, 1, 1, 23, 1, 0, 3, 1, 1, 22], [29, 0, 5, 1, 6, 54, 2], [0, 34, 4, 0, 4, 1, 3, 50, 2], [6, 1, 6, 3, 4, 76, 4], [1, 0, 1, 0, 1, 0, 2, 34, 0, 0, 1, 1, 3, 56, 1], [1, 13, 9, 2, 2, 5, 1, 2, 3, 0, 2, 1, 22, 1, 1, 3, 1, 0, 34, 0], [1, 10, 7, 3, 2, 7, 1, 3, 3, 0, 1, 0, 32, 0, 0, 2, 0, 1, 32, 0], [1, 13, 11, 5, 3, 4, 0, 1, 2, 0, 2, 0, 23, 0, 1, 3, 0, 5, 33, 0], [0, 2, 4, 0, 2, 4, 1, 3, 0, 32, 1, 0, 6, 3, 2, 46, 2], [2, 13, 10, 0, 5, 2, 2, 2, 17, 0, 0, 4, 0, 2, 52, 0], [7, 4, 3, 7, 0, 2, 0, 1, 3, 0, 34, 1, 7, 0, 2, 40, 2], [3, 33, 1, 0, 6, 0, 2, 69, 3], [1, 15, 11, 5, 4, 4, 0, 2, 3, 0, 6, 1, 24, 1, 0, 3, 1, 0, 39, 1], [5, 14, 10, 0, 3, 3, 3, 0, 2, 3, 0, 2, 1, 26, 1, 0, 4, 0, 3, 46, 0], [6, 7, 6, 0, 1, 4, 2, 0, 3, 0, 2, 2, 3, 27, 3, 4, 0, 4, 71], [5, 18, 10, 3, 4, 5, 2, 2, 4, 2, 2, 5, 29, 2, 0, 8, 2, 4, 38, 2], [2, 16, 8, 5, 4, 8, 2, 2, 3, 0, 3, 2, 33, 3, 0, 3, 0, 3, 53, 3], [7, 7, 8, 0, 6, 4, 5, 0, 2, 1, 8, 2, 6, 40, 1, 2, 5, 2, 3, 51], [4, 13, 7, 4, 6, 7, 0, 0, 0, 2, 2, 8, 38, 4, 1, 9, 2, 3, 50, 1], [6, 17, 5, 0, 4, 7, 6, 3, 4, 1, 3, 3, 2, 37, 0, 2, 8, 2, 2, 47, 3], [7, 14, 5, 0, 2, 4, 2, 2, 1, 0, 2, 1, 0, 38, 1, 10, 0, 4, 71, 4], [9, 5, 0, 3, 5, 55, 3, 0, 10, 2, 6, 81, 5], [8, 18, 13, 0, 4, 3, 4, 1, 2, 1, 6, 3, 4, 52, 2, 0, 6, 1, 5, 90, 3], [6, 22, 12, 5, 8, 5, 1, 2, 3, 3, 2, 3, 61, 0, 1, 7, 1, 5, 87, 1], [10, 20, 11, 8, 6, 7, 2, 4, 3, 5, 3, 10, 64, 3, 1, 11, 3, 7, 87, 5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

