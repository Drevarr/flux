created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c4rt\u00ebm\u00edza", "Mister Jekyll", "No Reserv\u00e9", "Slingsshot", "Sigrid Oluvkin", "Gavann", "Seiker Novus Terra", "Willgrantor", "Shandalar V Basing", "Enter Effore", "Charr Surethang", "Mechanical Dark", "Sakis Ranger", "Heavenm", "Permanent Dawn", "Lil Rev Robin", "Govinda Ektar", "Johosh The Mighty", "Necrotic Windrunner", "Mistwalker Cael", "Cedryn X", "Koralia Danai", "Aronorf Xideliesi", "Xanvias Einzbern", "Hyde En Sikh", "Klenga", "Kary\u00edna", "Gabe Malhorn", "Sygaldry Verdandi", "Lord Erin The Wise", "Latedoctor", "Legacy Of Mathus", "Drevarr Moonwillow", "Tegan Parker", "Chocolate Teapot", "Tika Fiery", "Newtype Khan", "Glorious Gluvs", "Bella Sassy", "Venomina The Siren", "Arriasa", "Zaedy Zae", "Rahani Sunray", "Be\u00eb", "Crusader Siolith", "Primal Clone", "Artakama Nahid", "High Sorcer Baradun", "Black Raspberry Pie"];
const professions = ["Druid", "Reaper", "Vindicator", "Untamed", "Scourge", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Druid", "Guardian", "Weaver", "Vindicator", "Vindicator", "Berserker", "Reaper", "Vindicator", "Berserker", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Weaver", "Reaper", "Berserker", "Scrapper", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Tempest", "Druid", "Druid", "Chronomancer", "Reaper", "Willbender", "Chronomancer", "Tempest", "Weaver", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17, 27], [46], [10, 20, 10, 0, 7, 0, 0, 0], [13, 20, 0, 8, 0, 0, 0, 6], [0, 58], [16, 30, 0, 14], [0, 0, 65], [0, 0, 0, 9, 0, 33, 27, 0, 0, 0], [19, 38, 11, 0, 0, 8], [0, 0, 0, 36, 0, 0, 0, 0, 42], [23, 4, 4, 0, 10, 0, 0, 0, 19, 23], [0, 43, 0, 0, 40, 0], [22, 12, 3, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 2], [55, 15, 19], [0, 48, 4, 28, 0, 0, 10], [11, 35, 0, 0, 44], [56, 19, 7, 18, 0, 10, 0, 0], [0, 7, 18, 6, 0, 15, 0, 0, 0, 23, 9, 36], [32, 1, 6, 0, 28, 0, 0, 0, 18, 0, 10, 21, 0, 0, 11], [0, 25, 4, 19, 0, 0, 0, 0, 0, 0, 0, 14, 54, 0, 0, 16], [16, 6, 25, 0, 17, 0, 0, 0, 16, 0, 20, 15, 0, 0, 26], [0, 9, 35, 2, 0, 0, 0, 0, 0, 28, 0, 24, 38, 0, 0, 10], [0, 14, 0, 0, 0, 0, 0, 0, 12, 15, 37, 45, 0, 0, 24], [0, 13, 23, 18, 0, 0, 0, 0, 0, 36, 0, 15, 29, 0, 0, 24], [0, 92, 12, 21, 0, 10, 0, 0, 0, 44], [0, 38, 15, 40, 0, 21, 0, 0, 0, 31, 0, 38], [13, 2, 7, 0, 15, 0, 0, 0, 84, 2, 32, 31, 0, 0], [15, 17, 18, 0, 23, 0, 0, 0, 18, 33, 14, 45, 0, 0, 11], [0, 69, 17, 45, 0, 0, 0, 22, 0, 38, 6, 0, 0, 0], [2, 60, 0, 3, 56, 0, 0, 0, 0, 35, 29, 5, 0, 7], [2, 18, 0, 0, 38, 0, 0, 0, 100, 22, 5, 5, 0, 0, 13, 0], [33, 9, 10, 0, 19, 0, 0, 25, 0, 27, 36, 0, 39, 6], [0, 38, 31, 6, 0, 19, 0, 0, 0, 7, 5, 45, 8, 0, 23, 24, 0], [88, 0, 9, 0, 0, 0, 42, 0, 13, 33, 0, 29], [0, 54, 46, 21, 0, 0, 4, 31, 33, 0, 23, 7], [0, 3, 29, 24, 0, 13, 0, 0, 0, 15, 0, 73, 40, 0, 0, 13, 11], [0, 34, 25, 6, 0, 15, 0, 0, 0, 30, 0, 52, 25, 0, 0, 37], [0, 35, 15, 17, 0, 0, 0, 0, 0, 21, 32, 5, 68, 0, 22, 25], [0, 66, 19, 28, 0, 0, 0, 0, 0, 17, 48, 13, 21, 0, 0, 36, 0], [5, 0, 0, 24, 0, 0, 55, 23, 106, 32, 0, 0, 10], [52, 57, 25, 0, 0, 0, 0, 0, 27, 34, 15, 45, 0, 0, 40], [0, 30, 22, 105, 0, 5, 0, 0, 0, 44, 0, 43, 16, 0, 0, 31, 0], [41, 20, 46, 0, 16, 0, 0, 0, 20, 45, 89, 42, 0, 0, 0, 0], [106, 27, 3, 0, 39, 0, 0, 0, 18, 47, 69, 43, 0, 0, 14, 0], [41, 20, 80, 0, 39, 0, 0, 0, 52, 5, 51, 0, 53, 36, 3], [0, 56, 13, 113, 0, 36, 0, 0, 0, 18, 12, 36, 23, 0, 27, 54], [0, 91, 47, 30, 0, 46, 0, 0, 0, 77, 0, 62, 20, 0, 0, 18, 0], [42, 50, 12, 0, 45, 0, 0, 0, 37, 57, 27, 70, 0, 42, 32], [126, 0, 44, 9, 0, 0, 80, 8, 32, 53, 0, 0, 58, 17]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

