created: 20230517220640000
creator: Drevarr
modified: 20230705163530401
modifier: drevarr
tags: ChartData
title: 202305172206_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Johosh The Great", "Lucas Ryn", "Miphest\u00f6", "Jupiter Four", "Eibh\u00ebar", "Cat Wigglebooty", "Primal Clone", "Tootsie Pop Rocks", "Venomina The Siren", "Tegan Parker", "Artakama Nahid", "Arriasa", "Tribal S", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0185, 0.0078, 0.0249, 0.0769, 0.0, 0.1045, 0.3269, 0.0364, 0.0263, 0.0458, 0.0, 0.1915, 0.2179, 0.0, 0.0875, 0.1015, 0.15, 0.2828, 0.1613, 0.0, 0.0, 0.0, 0.3056, 0.1402, 0.1053, 0.006, 0.1027, 0.1065, 0.0294, 0.081, 0.1316, 0.1429, 0.0311, 0.0312], [0.0, 0.0926, 0.0465, 0.0348, 0.0, 0.0, 0.1343, 0.3077, 0.0182, 0.0526, 0.0065, 0.04, 0.1277, 0.2564, 0.1111, 0.15, 0.0761, 0.2583, 0.1311, 0.3011, 0.0196, 0.1053, 0.1389, 0.243, 0.1316, 0.0359, 0.1096, 0.1243, 0.0, 0.0, 0.0952, 0.0, 0.1005, 0.0466, 0.0], [0.0, 0.0, 0.0078, 0.005, 0.0, 0.0, 0.0896, 0.0769, 0.0, 0.0, 0.0458, 0.0533, 0.1844, 0.4103, 0.0, 0.05, 0.0508, 0.2, 0.2623, 0.4731, 0.0196, 0.0526, 0.0, 0.1944, 0.1963, 0.1184, 0.0659, 0.1575, 0.1124, 0.0, 0.0, 0.0952, 0.0, 0.1799, 0.0104, 0.0114, 0.0, 0.0], [0.0, 0.0, 0.0388, 0.0348, 0.0, 0.0, 0.3433, 0.0192, 0.0, 0.0, 0.0065, 0.0133, 0.2695, 0.4872, 0.0, 0.2, 0.1472, 0.2667, 0.2623, 0.1183, 0.0196, 0.0, 0.0, 0.75, 0.1729, 0.0, 0.0, 0.3014, 0.2722, 0.0735, 0.119, 0.0, 0.0518, 0.0114], [0.0, 0.0, 0.1008, 0.0149, 0.0, 0.0, 0.1791, 0.0, 0.0, 0.0, 0.0065, 0.1333, 0.6241, 0.4231, 0.5, 0.2875, 0.198, 0.325, 0.373, 0.7419, 0.098, 0.0, 0.0, 0.3611, 0.3505, 0.25, 0.024, 0.2329, 0.1598, 0.0, 0.0, 0.1905, 0.0, 0.3704, 0.1347, 0.0114, 0.0, 0.0], [0.0305, 0.0, 0.0155, 0.0547, 0.0256, 0.4091, 0.1493, 0.4423, 0.0, 0.0, 0.0784, 0.0133, 0.7376, 0.5385, 0.1389, 0.075, 0.1168, 0.7417, 0.2787, 0.7204, 0.0, 0.0, 0.2143, 0.25, 0.2056, 0.1711, 0.0599, 0.1849, 0.3077, 0.0, 0.0, 0.2714, 0.0, 0.4074, 0.2435, 0.1364, 0.0, 0.0208], [0.0076, 0.0, 0.031, 0.1244, 0.0, 0.0, 0.597, 0.4808, 0.0, 0.0392, 0.1333, 0.8298, 0.4872, 0.05, 0.1827, 0.7833, 0.1189, 1.3011, 0.0, 0.0, 0.0, 0.2222, 0.3084, 0.1053, 0.0359, 0.3904, 0.2781, 0.1029, 0.0, 0.2905, 0.0, 0.1481, 0.0, 0.0, 0.0], [0.0, 0.0, 0.031, 0.0299, 0.3333, 0.0, 0.209, 0.8654, 0.0, 0.1842, 0.0, 0.0, 0.4043, 0.4359, 0.0, 0.1375, 0.1371, 0.7583, 0.6066, 0.4409, 0.2157, 0.0877, 0.0, 0.4722, 0.3364, 0.2368, 0.1796, 0.2808, 0.2249, 0.0, 0.1333, 0.0, 0.3968, 0.0725, 0.0, 0.0206, 0.0], [0.0, 0.0, 0.0775, 0.0498, 0.0, 0.0, 0.2239, 0.0, 0.0, 0.0, 0.0131, 0.08, 0.7589, 0.5769, 0.3333, 0.525, 0.0761, 0.9333, 0.4016, 0.8602, 0.2632, 0.0, 0.5833, 0.5327, 0.0789, 0.1437, 0.7123, 0.4852, 0.0147, 0.0, 0.4, 0.0, 0.6455, 0.114, 0.0, 0.0103, 0.0938], [0.084, 0.0185, 0.155, 0.0995, 0.0256, 0.0, 0.2985, 2.9038, 0.0545, 0.0, 0.0458, 0.0, 1.5674, 0.7436, 0.1667, 0.7125, 0.2538, 1.3, 1.0082, 0.7097, 0.0, 0.0, 1.6111, 0.8505, 0.2368, 0.0719, 0.363, 0.645, 0.1765, 0.0, 0.4, 0.0, 0.6984, 0.1554, 0.0455, 0.0, 0.0208], [0.0, 0.0741, 0.155, 0.199, 0.2308, 0.0455, 1.0746, 2.3077, 0.2182, 0.0, 0.1438, 0.12, 1.6809, 1.2692, 0.5556, 0.7125, 0.5838, 1.325, 0.9877, 1.5376, 0.2456, 2.3056, 1.0841, 0.4737, 0.2455, 1.0342, 0.8047, 0.0588, 0.0, 0.6952, 0.0263, 0.9101, 0.2435, 0.0114, 0.0, 0.0417], [0.0, 0.2593, 0.2481, 0.3632, 0.8462, 0.1364, 0.9552, 1.8269, 0.2, 0.1579, 0.3856, 0.36, 1.844, 1.2051, 0.9167, 0.975, 0.8832, 2.0, 1.4344, 0.914, 0.6078, 0.3684, 0.1071, 1.75, 1.0234, 0.7763, 0.3772, 1.1575, 0.8462, 0.2647, 0.0, 0.6667, 0.1316, 0.1905, 0.2124, 0.1818, 0.2062, 0.1562], [0.0153, 0.2407, 0.1318, 0.3532, 1.2821, 0.0, 1.1045, 0.1538, 0.0, 0.1579, 0.5752, 0.4267, 0.6099, 1.2436, 0.4722, 1.625, 1.0102, 2.1917, 0.8115, 2.2473, 0.1569, 0.7018, 0.3571, 1.25, 1.0607, 0.3289, 0.3892, 0.8767, 0.9763, 0.4853, 0.0222, 0.8952, 0.0, 1.3968, 0.2746, 0.0341, 0.0103, 0.0729], [0.0, 0.0, 0.3876, 0.408, 0.5128, 0.6818, 1.2537, 2.1346, 0.1091, 0.0, 0.4706, 0.0667, 2.0993, 1.9744, 0.6111, 1.275, 0.7411, 1.75, 1.3197, 2.1398, 0.2549, 0.0, 0.0, 2.0556, 1.0748, 0.3026, 0.1317, 0.8699, 0.787, 0.1029, 0.0, 0.7952, 0.0, 1.1905, 0.3731, 0.0682, 0.0, 0.0104], [0.0382, 0.4074, 0.2558, 0.3582, 1.1282, 0.1818, 1.5373, 2.0577, 0.1455, 0.2368, 0.3529, 0.2933, 1.9149, 1.6154, 0.1944, 1.3125, 0.7766, 2.1583, 1.6025, 0.3763, 0.1765, 0.4211, 0.0, 2.3611, 1.4626, 0.7632, 0.509, 1.1575, 0.8935, 0.6471, 0.0, 0.9571, 0.0526, 1.4868, 0.2539, 0.0795, 0.0412, 0.625], [0.1145, 0.7778, 0.6047, 0.4378, 1.1795, 0.1364, 1.3881, 1.7692, 0.1818, 0.2895, 0.281, 0.2, 1.8582, 2.1154, 0.8056, 1.35, 0.9086, 1.9417, 1.4672, 1.7527, 0.451, 0.4035, 0.0, 2.0833, 1.4019, 0.8816, 0.4012, 1.2534, 1.1183, 0.3824, 0.0667, 0.8619, 0.0, 1.0688, 0.5492, 0.1591, 0.0309, 0.2708]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

