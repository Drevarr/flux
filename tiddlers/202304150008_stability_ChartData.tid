created: 20230415000841000
creator: Drevarr
modified: 20230705163525660
modifier: drevarr
tags: ChartData
title: 202304150008_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Kmpek", "Elonith Primal", "Blancooo Padreee", "Smol Daddy Tika", "Mistwalker Caelon", "Arcanophage Farra", "Xanvias Einzbern", "Sassy Daddy Demon", "Corlyss Velaryonn", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Mmathuss", "Air One Com", "Lucas Ryn", "Xyntharos", "Solus Sanctus", "Bella Sassy", "Koralia Danai", "Johosh The Great"];
const professions = ["Spellbreaker", "Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Vindicator", "Spellbreaker", "Berserker", "Vindicator", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.7776, 1.2776, 2.5956, 0.0, 2.8836, 0.0, 1.7002, 1.5732, 0.6552, 2.4582, 0.0, 5.7955, 1.3634, 0.9969, 0.0, 1.6353, 1.0096, 5.7368, 1.5996, 2.2844, 1.2936], [0.9072, 5.1854, 2.0857, 2.7, 6.8085, 0.0, 0.0, 1.5732, 0.0, 1.3059, 0.0, 5.3912, 0.0, 0.7866, 4.2248, 2.5502, 0.0, 0.0, 1.5186, 4.5924, 0.7925, 0.0], [2.024, 9.4346, 3.933, 1.614, 1.0525, 2.6165, 4.543, 7.7616, 2.9412, 2.9837, 2.9753], [3.456, 1.6533, 3.1982, 1.62, 1.8423, 1.62, 0.0, 1.4421, 0.936, 2.996, 0.0, 4.5825, 1.6781, 1.8988, 0.0, 1.7443, 6.7304, 3.7121, 2.8896, 0.0], [3.3801, 1.449, 11.4563, 5.6635, 1.4241, 3.0765, 4.9059, 10.0956, 8.099, 3.4056, 1.5385, 2.7166], [3.7584, 1.503, 2.9664, 4.572, 6.7284, 0.0, 2.2315, 2.4909, 4.1184, 4.2251, 0.0, 9.5694, 0.0, 3.1988, 0.8545, 1.8216, 0.8722, 5.2161, 1.1811, 1.9092, 3.3566, 2.4578], [3.3264, 4.3587, 2.0394, 1.62, 2.6433, 1.89, 1.9127, 6.2928, 1.3572, 4.3019, 0.0, 7.5477, 4.4574, 1.614, 1.8621, 1.4173, 3.7017, 5.0619, 3.8184, 2.4709, 2.7166], [2.9808, 0.9018, 2.8737, 0.72, 4.5657, 2.7, 4.2504, 5.5062, 2.7612, 3.6105, 2.001, 7.4129, 0.2622, 3.1464, 2.0887, 2.024, 0.9812, 3.1969, 6.243, 3.096, 2.3776, 2.2638], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.312, 19.4083, 0.0, 4.2476, 5.6964, 2.3478, 1.8533, 12.4512, 11.8111, 1.9608, 0.6061, 5.8212], [5.5728, 1.7285, 2.642, 2.34, 8.0901, 4.05, 7.8632, 5.8995, 5.9904, 8.2197, 3.381, 9.5694, 1.1012, 4.3672, 3.4813, 3.2706, 4.7113, 7.9303, 2.838], [8.424, 8.1913, 6.2572, 3.996, 10.8936, 0.4725, 0.2125, 4.5885, 4.1652, 1.9205, 0.253, 13.0737, 4.8245, 2.7058, 2.3478, 4.7969, 9.2543, 13.8359, 4.0248, 4.0093, 4.851], [8.8128, 3.6072, 4.8667, 0.0, 10.8135, 2.295, 0.0, 6.8172, 2.6676, 8.2197, 2.576, 16.3084, 0.0, 2.4647, 1.7089, 2.3883, 3.9247, 10.4321, 25.647, 2.3736, 7.8322, 6.4033], [7.8624, 7.2144, 3.1055, 5.4, 19.224, 2.97, 0.425, 6.1617, 6.6456, 8.2197, 2.806, 20.3518, 5.3489, 4.2248, 1.5382, 5.56, 6.3939, 11.6424, 7.0176, 5.5478, 6.3386], [4.0608, 8.4919, 4.0788, 3.924, 10.5732, 6.345, 5.1005, 11.5368, 5.1012, 5.6079, 1.955, 9.8389, 7.6562, 3.4178, 3.3598, 3.0526, 20.8642, 15.6919, 4.902, 2.1445, 6.7267], [10.152, 9.6192, 7.0452, 2.988, 12.4956, 1.8225, 3.0815, 15.732, 6.2244, 6.837, 0.207, 21.1605, 0.0, 5.9782, 5.6489, 4.3718, 7.1953, 6.5621, 15.8606, 5.7276, 5.6876, 2.0698], [4.32, 15.7063, 2.4566, 3.816, 10.0926, 7.6275, 12.0074, 11.6679, 5.85, 4.9933, 1.587, 13.478, 0.0, 10.96, 3.9875, 3.1979, 3.5977, 19.3499, 19.9101, 3.096, 6.8531, 7.2442], [10.9296, 10.8967, 10.5214, 4.752, 22.9086, 6.615, 5.4193, 14.2899, 9.9684, 11.6766, 1.173, 23.4517, 8.5477, 5.5065, 3.7646, 8.9396, 17.499, 20.4163, 3.0444, 10.0699, 10.1548], [9.936, 13.4518, 11.1703, 8.532, 19.3041, 7.7625, 19.7644, 24.2535, 9.6876, 13.1362, 5.336, 30.8646, 11.1173, 9.4465, 2.5098, 8.3945, 26.2486, 37.6268, 13.6224, 7.8322, 12.3539], [11.1456, 14.1282, 8.7138, 7.668, 21.9474, 7.8975, 14.5576, 27.6621, 6.0372, 14.6726, 4.186, 32.6168, 15.3649, 7.7376, 5.4648, 9.9208, 29.2772, 32.2274, 11.1972, 10.2564, 15.5232], [11.8368, 13.6773, 12.7926, 6.48, 22.6683, 13.5675, 24.4398, 21.7626, 10.998, 14.519, 4.163, 29.9212, 15.4698, 7.8325, 6.5578, 12.5373, 31.1281, 32.0587, 8.7204, 5.0816, 12.6126]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

