created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Seiker Soulkeeper", "Morton Saltbringer", "Tribal S", "Venomina The Siren", "Etchery Howls", "Gamora Titus", "Mother Ship", "Rahani Sunray", "Urilstormwalker", "Ryvalia Fazebringer", "Zaedy Zae", "Arriasa", "Aronorf Xideliesi", "Air One Com", "Drevarr Moonwillow", "Tika Fiery", "Koralia Danai", "Bella Sassy", "Solus Sanctus", "Gestern Yesteryear"];
const professions = ["Tempest", "Firebrand", "Chronomancer", "Druid", "Tempest", "Druid", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Druid", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.8584, 124.7004, 0.0, 19.0944, 0.0, 0.0, 37.9579, 0.0, 2.5404, 0.0, 0.0, 10.34, 0.0, 0.0, 1.0037, 0.0, 17.1727, 13.9403, 104.6799, 0.0, 15.9003, 23.3002, 0.0, 0.0, 26.0568, 0.0, 8.9892, 10.4618, 0.0, 34.1422, 0.0, 483.504, 0.0, 0.0, 80.6358, 116.529], [155.0694, 124.4184, 171.1458, 79.1683, 79.0608, 193.1085, 182.8445, 0.0, 198.9581, 106.4534], [19.1102, 24.5904, 14.5418, 43.9661, 18.1896, 10.3837, 40.3603, 20.2014, 32.2679, 21.9542, 48.7625, 29.799, 37.5772, 24.2458, 13.1478, 10.8474, 21.494, 41.8209, 68.2617, 17.4073, 16.7427, 27.412, 0.0, 0.0, 5.4779, 10.89, 16.4574, 11.025, 50.0711, 4.788, 671.4662], [75.905, 30.9636, 32.2476, 43.2317, 0.0, 11.3783, 94.9603, 5.3793, 48.645, 42.5606, 43.1587, 145.5825, 23.3125, 100.548, 28.7525, 36.7404, 16.1786, 20.091, 93.2466, 189.3567, 0.0, 68.094, 36.3796, 0.0, 62.0626, 69.6293, 58.8456, 71.3971, 73.6785, 103.4762, 1.148], [66.841, 0.0, 0.0, 0.0, 12.8232, 0.0, 25.0723, 0.0, 18.0527, 31.5446, 27.328, 19.975, 16.3825, 17.6557, 5.1168, 33.4034, 0.0, 5.7804, 95.4477, 120.3774, 0.0, 0.0, 43.5068, 0.0, 0.0, 39.8847, 0.0, 51.7572, 13.2149, 0.0, 76.6193, 22.372, 939.8109, 92.1937], [86.8889, 94.3572, 35.0601, 102.5712, 40.5288, 12.8115, 85.0886, 20.8593, 54.4824, 68.7917, 57.2207, 166.615, 48.7595, 76.3942, 44.7523, 61.1338, 0.0, 104.3832, 106.9201, 209.001, 11.4586, 70.6914, 69.1174, 0.0, 0.0, 27.8926, 82.1873, 56.5884, 49.4946], [27.1472, 51.6624, 21.6689, 38.9722, 33.8832, 0.0, 140.2128, 0.0, 105.7759, 56.8426, 74.1422, 102.93, 63.3956, 39.0308, 13.3824, 30.5336, 13.3062, 72.956, 150.8087, 290.0001, 14.3354, 83.3976, 19.5408, 0.0, 0.0, 18.5655, 111.0127, 94.1292, 89.6287, 19.53, 139.8411, 34.09], [52.0619, 0.0, 61.555, 0.0, 0.0, 0.0, 9.6096, 0.0, 14.4854, 48.3926, 39.1789, 67.915, 9.5911, 46.7685, 0.0, 20.5893, 0.0, 78.119, 0.0, 184.0644, 0.0, 18.3924, 18.2877, 0.0, 0.0, 35.2951, 13.2535, 9.306, 0.0, 0.0, 0.0, 0.0, 939.2065, 0.0, 182.5066, 300.4694], [31.9694, 24.8724, 21.3812, 39.9514, 18.7824, 13.806, 46.7813, 0.0, 23.9441, 25.1942, 26.7678, 106.1025, 17.1587, 37.4062, 14.9568, 27.0964, 32.3812, 61.9643, 127.4637, 0.0, 42.1902, 51.4954, 0.0, 0.0, 21.408, 32.1871, 16.038, 20.067, 44.163, 69.581, 1.736, 922.8883, 49.3864, 170.8847, 138.2059], [80.6978, 207.6516, 164.9811, 52.0458, 55.9776, 83.8851, 51.1594, 75.7152, 160.781, 3.78, 242.7617, 1222.6607], [35.3628, 25.3236, 22.8834, 54.7373, 39.5616, 16.497, 50.1446, 0.0, 37.9431, 38.6986, 28.3008, 143.585, 26.8607, 57.3705, 0.0, 24.8273, 0.0, 40.7431, 45.0892, 93.288, 22.966, 71.1126, 68.1776, 22.8677, 0.0, 36.8052, 44.9383, 46.0152, 37.381, 40.7925, 50.4416, 11.788, 886.0211, 27.0762, 0.0, 215.6504, 163.2659], [19.0209, 46.5864, 13.6789, 72.3629, 37.3776, 6.903, 30.0518, 0.0, 17.296, 0.0, 0.0, 151.4575, 33.0145, 80.9685, 40.6786, 14.0488, 0.0, 41.2482, 66.9001, 164.8686, 0.0, 32.1516, 33.4818, 0.0, 0.0, 0.0, 44.5519, 67.2804, 27.3475, 39.312, 53.2199, 28.546, 1053.4343, 16.5498, 0.0, 279.2121, 218.3979], [60.1435, 111.4464, 55.8022, 107.2224, 28.2984, 0.0, 66.8741, 22.6782, 0.0, 24.9091, 22.8175, 91.2975, 0.0, 11.628, 0.0, 60.5666, 14.6227, 38.1055, 0.0, 173.121, 53.2947, 35.6967, 66.1804, 43.611, 0.0, 0.0, 31.2984, 64.5876, 29.9782, 45.738, 84.0899, 5.572, 1244.4184, 0.0, 0.0, 515.9541, 291.5731], [66.4392, 0.0, 0.0, 0.0, 7.6128, 28.8698, 97.7995, 0.0, 58.6443, 65.2925, 52.0617, 131.2475, 38.0873, 0.0, 13.776, 60.6333, 51.7426, 27.7472, 196.8915, 35.4485, 68.4099, 113.6423, 0.0, 0.0, 56.4663, 84.0034, 87.8724, 83.939, 30.8385, 61.1843, 34.566, 1403.9747, 0.0, 23.4125, 274.4772, 224.287], [27.8169, 0.0, 14.6696, 44.7494, 31.7616, 11.1442, 122.9155, 0.0, 73.7782, 66.6922, 37.2038, 99.7575, 28.8565, 125.856, 25.7808, 73.0469, 82.6086, 102.5846, 215.5491, 29.7924, 113.0922, 74.5998, 9.8094, 0.0, 53.0907, 94.0498, 51.2424, 80.5741, 15.561, 105.205, 52.682, 1561.1135, 0.0, 252.9552, 329.4137], [30.0941, 148.05, 47.3967, 100.1232, 121.8672, 66.3097, 61.021, 0.0, 20.2687, 33.7219, 31.8974, 246.8675, 11.587, 119.9992, 32.1178, 19.5882, 47.3092, 90.4452, 180.4764, 35.4973, 52.0884, 63.6742, 101.3738, 31.1497, 31.2984, 45.6192, 45.7626, 20.79, 91.8074, 2.912, 1792.5911, 50.4682, 39.5522, 532.0238, 367.5049], [106.6688, 126.4488, 85.8446, 109.8173, 119.028, 34.047, 187.0814, 66.2544, 67.7787, 130.559, 116.6229, 462.715, 49.5356, 144.1102, 75.1579, 131.5112, 160.2226, 167.6838, 428.4969, 70.4582, 127.1673, 106.1628, 0.0, 0.0, 82.1677, 148.7254, 83.5164, 113.183, 46.053, 183.4913, 40.908, 3085.3599, 27.4856, 0.0, 721.274, 669.2273], [118.8583, 77.0424, 41.8356, 191.0419, 84.4896, 49.8712, 153.972, 0.0, 138.9626, 54.8467, 118.7454, 538.62, 115.4261, 211.356, 103.8317, 45.6168, 216.4548, 290.8787, 480.792, 154.813, 164.8296, 121.7093, 0.0, 138.6044, 139.0654, 128.0664, 195.2866, 84.546, 198.6793, 100.786, 2813.9933, 24.3862, 828.7405, 549.3152], [194.11, 62.5112, 21.3427, 103.6646, 188.2541, 145.0152, 222.8787, 162.5715, 334.1986, 91.742, 4452.4675, 92.3107, 51.9956, 1429.0608, 1145.1167], [140.201, 136.0932, 0.0, 176.1091, 89.232, 32.058, 159.2136, 10.836, 160.2042, 133.6176, 166.1198, 524.4025, 35.3707, 156.123, 71.5171, 111.1888, 0.0, 240.2497, 115.6578, 444.6429, 58.2194, 216.567, 171.7166, 0.0, 38.4518, 88.1786, 114.7608, 253.836, 143.8954, 80.514, 198.2471, 66.948, 3136.1278, 61.404, 840.3624, 820.715], [128.1902, 267.6744, 91.5015, 210.9197, 51.48, 67.509, 150.9144, 94.8924, 155.1235, 97.2, 157.9538, 439.215, 62.8135, 362.2635, 129.947, 123.469, 146.5854, 316.6916, 478.9083, 101.0795, 180.6597, 108.9431, 73.0704, 19.2595, 32.571, 143.5476, 187.8624, 163.2894, 50.715, 313.3305, 47.404, 3371.2316, 68.3924, 859.1582, 696.9186]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

