created: 20230212214943000
creator: Drevarr
modified: 20230705163519165
modifier: drevarr
tags: ChartData
title: 202302122149_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Be\u00eb", "Arka\u00f1", "Bambiae", "Ez Mode Mathus", "Reverve Mk V", "High Sorcer Baradun", "Veggie Mac", "Xanvias Tseli", "Tegan Parker", "Venomina The Fierce", "Daring Deathblade", "Blanco Padre Guard", "Legionstorm", "Zadie Miststep", "Koralia Danai", "Newtype Khan", "Ark Darkness", "Sygaldry Verdandi", "Zaylen Harker", "Primal Shield", "Bella Sassy"];
const professions = ["Scourge", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Herald", "Tempest", "Tempest", "Berserker", "Tempest", "Spellbreaker", "Scourge", "Firebrand", "Soulbeast", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.1829, 49.6766, 84.2692, 0.0, 32.264, 0.0, 0.0, 140.1216], [55.8835, 130.5346, 147.5464, 0.0, 55.093, 0.0], [49.7297, 143.2205, 155.4811, 0.0, 0.0, 0.0, 15.3318, 35.5421], [8.2883, 297.5856, 24.206, 20.7692, 15.984, 0.0, 0.0, 44.5162], [134.447, 178.7832, 0.0, 34.595, 0.0, 0.0, 73.5638], [18.5447, 43.8672, 148.7516, 0.0, 21.793, 34.4223, 127.0643, 43.4534], [31.6008, 106.1112, 181.4951, 44.844, 0.0, 0.0, 81.3571], [77.0339, 119.3899, 111.1871, 0.0, 49.654, 55.0935, 24.3715, 62.6218], [79.501, 181.6339, 106.9686, 0.0, 37.777, 0.0, 0.0, 99.3446], [15.7172, 184.0051, 188.4254, 0.0, 45.251, 0.0, 18.6051, 105.7603], [0.0, 204.2789, 191.5391, 0.0, 40.441, 50.8761, 89.5997, 24.2064], [24.5876, 256.0896, 135.9958, 105.6165, 40.959, 36.7488, 37.6173, 111.9398], [117.7546, 373.7011, 14.8651, 7.9243, 52.392, 54.7668, 37.2781, 159.2506], [0.0, 227.6352, 0.0, 103.9804, 88.985, 41.2335, 109.2224, 284.4941], [41.9681, 255.971, 285.4505, 58.7179, 22.385, 30.7197, 44.079, 154.8029], [68.108, 563.2786, 117.0126, 2.4054, 83.213, 67.1814, 114.5648, 9.1709], [41.9404, 395.7533, 310.3596, 53.1135, 31.487, 27.2844, 65.7878, 118.3949], [185.1142, 416.027, 636.5887, 0.0855, 204.166], [194.4558, 181.0411, 433.8004, 30.9279, 207.089, 92.268, 73.7421, 295.7904], [33.5689, 637.6157, 482.4133, 12.4298, 124.209, 91.1592, 126.6912, 155.7869], [175.135, 693.1018, 626.143, 0.0, 221.852, 96.4656, 119.6528, 216.48], [231.5729, 1030.405, 739.9415, 107.973, 317.423, 72.8244, 202.1293, 420.3254]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

