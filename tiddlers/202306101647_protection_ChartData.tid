created: 20230610164704000
creator: Drevarr
modified: 20230705163534957
modifier: drevarr
tags: ChartData
title: 202306101647_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Seikers Sorrow", "Zarandor Kel", "Imalou", "Sub Train", "Yngvar The Burdened", "Venomina The Siren", "Newtype Khan", "Scintilla The Storm", "Tomitigas", "Morton Saltbringer", "Pamtastic", "Cat Wigglebooty", "Air One Com", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer", "Sakis Ranger", "Blanco Padre Guard", "Aronorf Xideliesi", "Arriasa", "Solus Sanctus", "Zhavashian", "Drevarr Moonwillow", "Bella Sassy", "Koralia Danai", "Tika Fiery", "Gestern Yesteryear"];
const professions = ["Chronomancer", "Dragonhunter", "Firebrand", "Firebrand", "Scourge", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Druid", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.3529, 0.0, 187.1239, 26.9892, 21.2307, 58.6599, 45.4813], [10.4333, 0.0, 70.9286, 13.7112, 0.0, 151.2291, 24.8234, 16.2131, 37.6683, 28.3578], [23.9166, 54.576, 89.5104, 75.4838, 43.2616, 87.8486, 0.0], [27.5931, 11.1434, 83.088, 102.6202, 77.0357, 0.0, 87.0167, 0.0, 0.0, 0.0], [10.3518, 26.0832, 27.6162, 0.0, 63.6192, 29.4593, 0.0, 132.9874, 14.161, 23.7709, 48.0474, 29.0506], [0.0, 18.672, 4.4928, 18.9442, 19.4097, 0.0, 0.0, 8.2041, 63.9, 17.8922, 0.0, 77.9674, 34.2309, 0.0, 52.9596, 17.1181, 1.6621, 38.3097, 39.8889], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 23.6882, 26.249, 175.6493, 32.2371, 45.7229, 61.1089, 50.2323], [0.0, 0.0, 15.312, 9.0778, 11.3606, 0.0, 27.2031, 21.4931, 0.0, 0.0, 0.0, 0.0, 49.4564, 92.9472, 0.0, 25.5401, 95.6215, 0.0, 19.3491, 68.1061, 30.3374], [0.0, 0.0, 12.576, 18.432, 18.7392, 0.0, 69.0477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 38.4422, 18.4828, 0.0, 209.926, 13.9944, 0.0, 21.0499, 80.1738], [0.0, 0.0, 16.704, 8.5248, 33.2035, 13.8869, 40.6799, 0.0, 0.0, 0.0, 12.4285, 19.7683, 46.904, 12.4448, 95.5642, 12.391, 0.0, 113.5689, 31.6957, 18.7219, 48.5139, 63.4957], [165.6421, 98.5331, 241.52, 84.0835], [0.0, 0.0, 0.0, 4.9536, 33.4085, 4.2002, 9.2414, 0.0, 12.4605, 0.0, 75.1699, 24.254, 17.0444, 297.6035, 44.982, 10.4429, 58.31, 42.017], [11.1069, 0.0, 15.024, 14.8147, 16.4261, 0.0, 26.1217, 11.7115, 14.9748, 0.0, 0.0, 0.0, 0.0, 0.0, 152.4154, 19.4069, 0.0, 235.376, 26.3228, 28.4749, 29.0967, 104.2754], [0.0, 20.3834, 46.56, 15.6672, 24.7123, 20.7304, 62.9748, 6.9626, 20.6328, 0.0, 13.7385, 10.9138, 10.4333, 112.7098, 25.593, 0.0, 178.2973, 28.9884, 29.1962, 36.7936, 41.5716], [20.3175, 0.0, 15.312, 20.183, 28.9579, 18.049, 30.1148, 3.4813, 25.197, 17.915, 0.0, 13.7704, 23.3147, 15.4898, 105.1296, 14.9937, 20.5464, 146.3744, 51.6044, 42.6182, 40.5838, 59.19], [10.2362, 0.0, 28.272, 16.7501, 46.0867, 18.8094, 21.0471, 6.0922, 43.6798, 0.0, 10.2611, 0.0, 17.7549, 13.7738, 97.7299, 29.8365, 0.0, 163.2921, 48.6056, 60.713, 45.0736, 58.9921], [0.0, 36.1654, 66.528, 67.968, 63.1277, 0.0, 66.1361, 3.4813, 41.756, 0.0, 0.0, 21.9177, 20.8894, 18.7158, 37.0116, 113.5219, 18.4074, 113.4218, 0.0, 0.0, 42.0415, 29.9414], [0.0, 61.2242, 47.328, 57.8534, 37.7712, 10.8054, 91.0099, 24.2365, 43.8684, 0.0, 22.8764, 18.0517, 23.3376, 0.0, 0.0, 182.4653, 21.6513, 0.0, 371.3056, 108.8315, 42.9946, 116.4451, 108.7295], [0.0, 6.8746, 17.088, 44.905, 80.9885, 20.8104, 87.5991, 21.4364, 74.5347, 20.3737, 0.0, 0.0, 0.0, 0.0, 359.7869, 49.8281, 20.2607, 409.4071, 20.6584, 47.7299, 99.0104, 98.98], [22.3105, 64.416, 36.1728, 57.7987, 45.7028, 89.0965, 30.0628, 0.0, 0.0, 63.9038, 0.0, 51.0214, 223.9757, 0.3206, 9.6807, 429.7083, 89.6724, 74.1664, 158.2533, 100.9101], [22.2525, 17.556, 46.752, 132.8947, 90.0067, 13.4467, 82.9404, 23.4419, 37.0033, 0.0, 0.0, 47.6375, 0.0, 0.0, 0.0, 248.0698, 114.0087, 0.0, 336.2935, 28.9051, 55.319, 129.2733, 137.4832], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.6583, 41.3788, 4.1342, 0.0, 45.9441, 59.1219, 1.5787, 55.5671, 0.0, 117.2338, 5.4064, 751.8792, 185.8423, 164.3264, 253.9984, 253.9827], [48.4137, 18.7942, 101.28, 58.4294, 108.0139, 50.8254, 175.6973, 65.9362, 82.9086, 33.4341, 74.731, 71.2026, 37.2258, 3.9247, 245.4528, 43.9815, 46.9329, 411.908, 108.9148, 71.9712, 174.7551, 181.4303], [30.9213, 38.4938, 198.528, 108.1958, 60.7853, 84.9625, 63.8899, 44.3296, 120.1759, 16.6309, 36.4869, 78.6386, 48.048, 47.8667, 270.359, 49.0171, 0.0, 478.4017, 86.7986, 92.7629, 236.3887, 179.1538], [21.6333, 40.4712, 33.216, 91.1232, 93.5789, 0.0, 191.8361, 0.0, 0.0, 0.0, 0.0, 0.0, 23.9782, 11.9891, 466.0896, 95.5636, 23.7521, 743.641, 163.6012, 81.4733, 239.1293, 166.0389], [0.0, 99.9768, 134.544, 93.9802, 138.8458, 0.0, 199.3232, 32.0505, 46.4333, 0.0, 43.3881, 11.8747, 0.0, 38.502, 352.0262, 95.5259, 18.8536, 577.701, 134.7377, 53.1552, 243.969, 231.4647], [48.9942, 88.0387, 153.456, 112.9421, 118.6718, 39.0595, 155.3157, 62.8333, 154.8783, 0.0, 0.0, 90.5782, 123.5062, 56.8339, 23.2502, 386.3174, 100.8444, 0.0, 742.9055, 119.8687, 141.5904, 190.732, 184.1028]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

