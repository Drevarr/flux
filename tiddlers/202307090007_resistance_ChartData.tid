created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Greg The Knight", "K\u00e2 Otik", "Hayuf", "Zaedy Zae", "Koranthin", "Enter Effore", "Boof Floof", "K\u00e2 \u00d4tik R\u00e6j", "Newtype Khan", "Tika Fiery", "Jerryatric Reflexes", "Zayde Sunsabre"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[126.0312], [47.628, 6.3266, 54.817, 24.1036, 6.0869, 18.0752], [23.495, 1.8434, 138.1794], [29.8775, 30.6163, 0.0, 60.7563, 51.4087], [75.7112, 26.6179, 2.6634, 0.0, 213.658], [18.5925, 14.688, 0.0, 68.6565, 124.51, 20.286, 0.0, 44.8259, 29.9903, 0.0, 0.0, 20.482, 23.8493], [43.4287, 20.351, 15.6229, 20.2019, 161.655, 51.156, 0.0, 17.6854, 56.3214, 22.4194, 16.5026, 20.7667], [26.2237, 5.0918, 7.0076, 32.2403, 134.4649, 77.4396, 7.0679, 46.625, 62.5263, 7.0293, 34.2593, 30.9743], [128.6838, 19.4602, 122.6874, 194.9771, 61.2986, 40.663, 20.0366], [0.0, 30.0778, 0.0, 361.198, 73.9116, 0.0, 22.4704, 348.9063, 0.0, 23.0525], [0.0, 35.7082, 15.7284, 47.2131, 384.525, 157.7898, 5.0738, 86.3214, 75.1748, 0.0, 13.4473, 28.8086, 21.8483], [94.535, 46.3978, 103.6274, 129.4504, 566.2384], [272.2734, 0.0, 150.0576, 358.3727, 34.7886, 78.1514, 65.5591, 39.6271]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

