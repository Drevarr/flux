created: 20230529221000000
creator: Drevarr
modified: 20230705163532238
modifier: drevarr
tags: ChartData
title: 202305292210_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Pamtastic", "Solus Sanctus", "Zadey Starbolt", "Artakama Nahid", "Tegan Parker", "Tribal S", "Johosh Of The North", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Scrapper", "Tempest", "Tempest", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[117.6957, 4.2778, 68.4259, 13.8276, 246.055, 359.4923, 78.1437, 1253.8946, 0.0, 245.2764, 511.5654], [113.12, 330.4174, 16.8696, 28.5833, 76.5556, 181.7586, 233.211, 196.9308, 94.5632, 545.4558, 61.9091, 79.561, 357.9843, 94.3571, 201.994], [48.7067, 1009.4496, 177.3261, 94.4167, 369.3457, 44.931, 375.2018, 628.4615, 178.8103, 1068.4387, 126.6591, 200.3171, 1261.877, 98.2143, 782.346], [47.4533, 968.0896, 89.2174, 173.1111, 249.1049, 292.7931, 641.2569, 1057.7154, 205.3678, 1490.8006, 599.0227, 278.0976, 831.6832, 319.1286, 626.406], [167.6533, 943.7367, 238.1667, 297.9691, 45.0862, 268.3486, 621.5692, 257.0, 1673.2963, 375.2045, 381.748, 1227.3482, 68.2, 630.842], [80.88, 1029.7311, 177.1522, 65.8056, 458.6975, 5.5862, 395.0183, 880.4462, 306.3621, 1681.0114, 29.4773, 256.9024, 963.0288, 142.3571, 841.676], [45.8933, 1047.598, 194.4565, 40.1944, 473.3704, 732.431, 373.0917, 1149.0154, 335.8276, 2011.1453, 199.7045, 427.1301, 1444.6466, 287.4857, 830.222], [42.6667, 1456.1471, 269.4565, 15.8611, 448.7654, 626.6207, 622.7706, 1355.0231, 431.4713, 2551.0228, 215.6818, 632.8455, 1655.6047, 257.9857, 1131.338]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

