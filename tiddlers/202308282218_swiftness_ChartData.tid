created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Nyx", "Tootsie Pop Rocks", "Vee U", "Venomina The Sly", "Aira Draugr", "Zaedy Zae", "High Sorcer Baradun", "Selandir", "Mad V King", "Cat Wigglebooty", "Tegan Parker", "Belvyn Brightblade", "Newtype Khan", "Hyde En Sikh", "Mar\u00eda Callas", "My Birthday Girl", "Arcanophage Farra", "Mokaris", "Mistwalker Cael", "Koralia Danai", "Darks Na", "Sub Train", "Drevarr Moonwillow", "Solus Luxes", "Bella Sassy", "Crusader Siolith"];
const professions = ["Vindicator", "Scrapper", "Weaver", "Druid", "Herald", "Druid", "Tempest", "Tempest", "Scourge", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Dragonhunter", "Scrapper", "Spellbreaker", "Herald", "Herald", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[101.6226, 65.7516, 32.3408, 1.5912, 85.134, 64.7, 486.2913], [0.0, 34.1658, 132.9876, 0.0, 11.039, 98.0392, 0.0, 71.208, 0.0, 0.0, 10.3859, 14.931, 44.247, 22.1712, 106.6736, 0.0, 29.9376, 359.766, 16.2518, 0.0, 0.0, 0.0], [0.0, 16.0284, 168.7437, 42.5723, 24.6459, 24.3255, 0.0, 8.9848, 165.5586, 25.2909, 75.5149, 10.0919, 21.4704, 0.0, 58.8335, 0.0, 134.886, 21.9613, 0.0, 132.066, 59.1624, 7.1662, 16.7578, 26.1542, 24.1711], [0.0, 0.0, 240.5695, 0.0, 24.1441, 0.0, 0.0, 74.4072, 203.5362, 103.6422, 32.5321, 147.7538, 51.597, 0.0, 64.6299, 0.0, 43.2309, 0.0, 0.0, 31.4226, 106.0646, 0.0, 0.0, 0.0, 0.0], [12.4166, 67.2771, 43.5974, 0.0, 77.6179, 125.6252, 268.0072, 71.4724, 237.0633, 69.309, 44.3734, 157.0619, 203.1372], [0.0, 57.7163, 218.614, 0.0, 13.8842, 0.0, 48.6194, 0.0, 99.0978, 21.8484, 6.3631, 78.9719, 43.5456, 0.0, 27.0982, 13.1642, 163.5194, 60.5112, 46.0429, 381.6252, 113.4778, 0.0, 0.0, 9.9994, 109.2161], [1.1554, 117.3307, 497.1352, 122.3932, 40.5756, 189.4758, 140.1004, 364.941, 95.6097], [71.924, 337.3479, 16.1568, 89.6318, 53.4971, 52.4664, 0.0, 77.0921, 0.0, 50.2489, 20.9875, 0.0, 643.4802, 57.5942, 0.0, 0.0, 38.0621, 107.8567], [392.3761, 45.8974, 165.4399, 0.0, 210.3841, 95.4019, 839.0676], [0.0, 123.0953, 308.6316, 0.0, 52.4499, 20.8083, 52.2837, 281.5683, 0.0, 66.3284, 170.0933, 9.828, 173.0639, 54.0302, 8.316, 459.4986, 176.3467], [96.332, 85.3406, 19.6938, 0.0, 287.0667, 44.9184, 123.7975, 87.8117, 116.424, 722.7198, 160.9502, 99.0535, 5.0688, 70.3718, 132.0703], [24.2347, 258.001, 743.6641, 0.0, 35.7979, 31.466, 166.7667, 148.4984, 423.3909, 145.8702, 144.1609, 310.5966, 120.3174], [22.9819, 153.1134, 204.8134, 12.5314, 157.5778, 0.0, 75.5302, 54.3154, 300.5571, 78.2136, 0.0, 277.8713, 112.3794, 0.0, 82.3089, 54.1351, 217.2773, 125.1527, 0.0, 687.654, 186.3259, 0.0, 8.1408, 50.1312, 0.0], [0.0, 0.0, 290.7536, 0.0, 0.0, 0.0, 0.0, 0.0, 229.3491, 0.0, 43.3199, 698.4014, 0.0, 0.0, 16.9545, 0.0, 1316.5768, 0.0, 0.0, 320.6016, 0.0, 0.0, 0.0, 72.5222, 23.5339], [132.077, 7.9758, 26.9094, 320.5409, 58.4652, 478.768, 138.8197, 34.9549, 1338.4206, 547.573, 96.0732, 18.1094, 108.192, 17.2894], [16.1472, 128.4381, 738.6458, 42.7453, 156.9086, 43.5989, 150.06, 0.0, 329.337, 0.0, 58.2375, 57.6122, 48.9132, 189.2989, 249.535, 0.0, 103.0242, 9.1002, 0.0, 1268.289, 293.531], [83.3251, 148.8251, 607.2264, 164.504, 164.6593, 44.8321, 280.3121, 217.8036, 655.4103, 157.7583, 124.2709, 82.2052, 8.6184, 119.3465, 228.0883, 8.0342, 170.8181, 0.0, 17.7962, 887.1192, 577.6531, 49.14, 107.3856, 36.7877], [34.7985, 1012.7758, 98.983, 216.3488, 195.4988, 640.4561, 12.4614, 210.657, 0.0, 345.6985, 899.7462, 105.5573, 295.1771, 160.6467, 125.8211, 734.5602, 365.809], [37.8206, 212.9387, 903.6256, 32.6163, 26.9878, 86.2033, 436.0744, 44.0664, 513.8844, 39.1986, 81.878, 286.2976, 86.7132, 97.3434, 703.1033, 97.6622, 336.0218, 156.3485, 170.1454, 507.3156, 167.3654, 53.0758, 48.3994, 61.824, 351.0122], [0.0, 273.3264, 1230.1353, 46.1664, 373.7035, 193.9076, 463.0852, 199.7887, 1357.4025, 471.9438, 148.6278, 557.2123, 180.2304, 8.6688, 454.1479, 761.453, 219.4453, 121.275, 1109.3544, 770.9645, 133.4515, 40.32, 103.9181, 124.4664], [39.6163, 259.6179, 1461.609, 128.774, 178.9338, 145.6545, 445.9783, 320.2038, 1509.0162, 303.0777, 213.6077, 781.0966, 237.9888, 0.0, 1051.7568, 99.0013, 613.9346, 247.4846, 196.6734, 1149.885], [138.0586, 591.0121, 278.2075, 180.7449, 425.0585, 97.8389, 706.2824, 366.9341, 1269.876, 542.4921, 74.7985, 368.1109, 123.795, 89.1863, 422.5576, 107.5745, 566.0719, 28.9124, 275.5645, 2026.0746, 1001.1989, 86.7002, 71.8541], [96.2846, 252.6582, 1066.7236, 68.9614, 115.3674, 71.7432, 294.9179, 188.5012, 1398.3471, 112.9599, 158.7835, 288.7471, 119.3724, 350.9961, 746.4314, 88.8107, 736.3286, 45.2658, 112.959, 2445.0426, 828.9864, 43.5663, 120.791, 217.3517, 292.4748], [76.6853, 489.4989, 2238.52, 211.7467, 154.6782, 124.7103, 750.5001, 398.3133, 1234.272, 300.5073, 292.3673, 632.2649, 206.8416, 250.7631, 946.4072, 217.7924, 1167.2338, 192.8835, 170.8661, 1595.2662, 746.3016, 205.9103, 116.7667, 100.6656, 100.4227], [54.288, 561.2752, 2177.3583, 110.7072, 639.6787, 187.145, 729.9919, 315.0115, 2205.6678, 100.1997, 229.7473, 708.0035, 337.3272, 185.115, 998.5748, 35.5973, 815.7723, 170.4857, 239.0573, 2582.118, 1151.5997, 221.676, 94.5408, 295.4112, 312.5678], [0.0, 531.9601, 2031.8247, 564.347, 154.9033, 921.1683, 322.1001, 2309.8095, 311.7987, 201.977, 636.2821, 408.429, 256.3617, 962.9269, 105.766, 1362.8956, 156.0798, 219.2652, 2283.831, 1079.1792, 417.872, 104.7091, 137.1149, 449.9906]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

