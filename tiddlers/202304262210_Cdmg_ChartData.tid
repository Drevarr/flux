created: 20230426221022000
creator: Drevarr
modified: 20230705163526707
modifier: drevarr
tags: ChartData
title: 202304262210_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Etch\u00e9ry", "Necrotic Windrunner", "Eibh\u00ebar", "Khailerian", "Al Darasuum", "Sumatra Satyricon", "High Sorcer Baradun", "Mistwalker Caelon", "Kary\u00edna", "Lord Erin The Wise", "Seren Nightroad", "Sygaldry Verdandi", "Miphest\u00f6", "Jupi Jupi Jupi", "Tootsie Poppa", "Panther B Me", "Rozaalyna", "Xanvias Tsoli", "Freylk Nasferatu", "Mike The Archmagus", "Smol Gluvs", "Be\u00eb"];
const professions = ["Spellbreaker", "Berserker", "Scourge", "Chronomancer", "Vindicator", "Dragonhunter", "Soulbeast", "Tempest", "Vindicator", "Vindicator", "Weaver", "Scourge", "Firebrand", "Tempest", "Firebrand", "Scourge", "Scourge", "Scourge", "Holosmith", "Scourge", "Weaver", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.9538, 10.4372, 0.2415, 0.0, 0.0, 0.0, 1.5215, 2.3565, 3.6502, 9.1158, 0.0, 0.2184, 7.6577, 0.0, 0.0, 10.4723], [0.0, 2.8923, 0.0, 33.0471], [0.0542, 12.7069, 0.0, 11.2299, 4.4615, 3.6889, 64.4545, 16.8292], [20.7846, 11.6, 15.9068, 0.0, 1.4545, 1.775, 3.7055, 4.3914, 0.0, 11.5419, 10.8605, 0.5747, 3.1, 1.5556, 1.5758, 7.4264], [8.7385, 16.4077, 11.0212, 3.5224, 4.7121, 0.0, 7.1779, 11.0327, 3.2069, 0.1552, 0.0, 6.1839, 0.0, 0.0, 0.0, 2.8645], [1.2857, 11.9113, 10.814, 30.3046, 13.9192, 1.2444, 2.2626, 21.775], [9.8462, 5.0179, 43.4788, 3.4776, 0.0, 0.0, 0.5951, 5.8513, 0.0, 5.0493, 0.0, 11.092, 5.3231, 0.0, 0.5758, 11.3816], [0.2769, 14.9141, 7.3263, 1.9701, 3.7955, 0.0, 15.0245, 3.557, 0.0, 17.7069, 0.0, 4.4138, 2.5769, 0.0, 0.0, 14.258], [4.5538, 12.1897, 8.2119, 2.3657, 21.6515, 19.6125, 16.8896, 10.3597, 11.601, 5.9975, 0.0465, 8.1552, 8.4038, 0.0, 32.7677, 9.2874], [0.0, 19.2487, 34.0169, 0.6119, 0.2348, 7.475, 36.2025, 10.0738, 0.5813, 9.5345, 0.0, 28.7241, 3.6577, 1.3778, 1.1313, 8.7208], [3.4782, 39.4661, 5.2612, 10.4545, 17.4, 9.454, 11.9599, 2.33, 0.532, 0.569, 11.4462, 0.0, 8.5657, 28.6101], [49.0308, 40.2218, 67.6483, 1.9701, 0.1288, 60.0375, 18.9571, 3.4778, 1.9852, 0.3325], [27.6462, 12.7115, 31.5339, 0.0, 13.553, 0.0, 0.5583, 13.8449, 0.0, 29.7217, 0.0, 23.8218, 1.7769, 0.0, 14.6465, 15.1731], [0.3385, 23.0692, 83.8136, 1.0896, 0.0, 0.0, 25.6135, 4.1635, 0.8128, 20.0985, 0.0, 9.8678, 8.4154, 70.0444, 0.0, 13.1696], [7.5385, 31.5936, 44.4195, 1.7015, 3.3485, 27.1625, 4.7362, 4.5886, 0.0099, 16.3941, 0.0, 38.6954, 16.6846, 4.0, 0.0, 14.3239], [0.3538, 61.2179, 59.1949, 0.4776, 4.4242, 0.025, 8.3497, 9.1213, 2.2956, 9.4828, 6.0465, 28.1437, 8.1577, 2.3111, 33.7273, 6.8174], [38.0, 45.5231, 47.0508, 2.7239, 6.0909, 13.125, 23.5951, 7.0274, 3.3596, 13.0764, 4.7674, 57.9023, 35.7269, 0.0, 19.1717, 31.1932], [120.8154, 38.2449, 137.8347, 11.4179, 5.1136, 21.5125, 3.7239, 7.1909, 0.0, 31.6527, 0.0, 60.5747, 4.2615, 2.0222, 5.2626, 13.179], [50.5949, 103.4873, 0.0, 3.25, 0.0, 13.7362, 5.847, 0.0, 29.3054, 0.0, 47.5, 5.4346, 0.0, 0.0, 32.1673], [126.8, 54.6308, 123.2161, 7.5896, 6.9545, 4.6875, 55.8405, 41.4884], [8.5077, 51.3115, 35.661, 5.6716, 19.0455, 0.0, 41.5031, 25.885, 9.0739, 45.0961, 8.2791, 70.6379, 23.8269, 0.0, 3.1717, 16.7633], [65.8718, 105.1653, 6.2463, 26.3788, 8.2125, 63.4969, 7.6498, 0.0099, 32.4335, 3.186, 47.1149, 13.2423, 39.7111, 0.0, 18.4464], [108.45, 159.8178, 0.0672, 46.6061, 24.175, 61.3558, 26.0876, 18.2808, 103.6232, 7.6279, 101.4655, 17.2346, 66.8889, 105.697, 30.4146]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

