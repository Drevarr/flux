created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Venomina The Sly", "Crusader Siolith", "Inedible Plant", "Tegan Parker", "Mike The Archmagus", "Arriasa", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Firebrand", "Vindicator", "Tempest", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.0565, 60.8623, 135.581, 66.1878, 220.5588, 84.8946, 56.544, 106.3114, 70.4602, 30.7024, 0.0, 21.111, 139.348, 71.9418, 151.2027, 28.3338, 5.8882, 60.79, 17.3881, 5.3104, 74.844, 0.0, 6.0865, 39.2374, 8.2962, 0.0, 59.0897, 75.1117, 47.0463, 0.0, 28.6161, 160.6073], [0.0, 410.9553, 636.385, 34.7655, 13.2531, 0.0, 1432.4097, 311.6702, 232.9036, 106.904], [32.5197, 23.882, 16.5391, 76.7831, 113.5512, 417.7489, 423.2676, 76.368, 136.4611, 189.9139, 13.0944, 0.0, 45.8712, 36.7722, 267.3675, 42.6006, 230.5463, 17.4866, 0.0, 18.5878, 19.5664, 107.7754, 108.5767, 16.0552, 64.1318, 50.2722, 0.0, 174.5963, 33.0971, 172.4128, 143.2051, 14.3449, 156.4938, 111.3493, 0.0, 42.2979], [55.6299, 0.0, 13.3175, 0.0, 0.0, 732.0452, 233.7615, 207.984, 0.0, 11.328, 95.6784, 0.0, 161.5704, 0.0, 0.0, 40.5132, 0.0, 0.0, 0.0, 161.295, 47.0329, 91.355, 737.9316, 90.146, 0.0, 0.0, 0.0, 226.9562, 121.3758, 0.0, 41.8624, 99.8033, 1373.2103], [72.6418, 77.2481, 215.4805, 398.7387, 165.753, 1498.2244, 417.6711, 207.024, 49.9872, 195.4646, 133.9696, 24.5001, 97.0692, 38.7438, 131.5052, 71.6809, 0.0, 18.2987, 84.7185, 39.3703, 27.3521, 403.0992, 107.583, 140.5404, 59.3208, 17.0197, 210.1075, 241.794, 99.9019, 191.2973, 29.6385, 358.4154, 79.9585, 67.0102, 182.355], [498.2607, 152.112, 110.6016, 324.887, 327.7072, 41.6985, 241.8588, 144.5592, 596.2889, 231.6132, 504.6178, 135.5536, 97.2956, 118.9357, 78.0903, 73.7035, 141.9314, 392.2632, 143.1808, 179.7777, 65.2608, 178.0736, 210.2029, 187.2108, 162.841, 205.8995, 43.3089, 552.8254, 166.6717, 47.2905, 170.4282], [306.5893, 865.8608, 345.5298, 2951.0242, 1229.3358, 686.928, 487.08, 1015.6118], [289.821, 681.7684, 474.3608, 887.3048, 380.1168, 4865.6847, 943.0533, 1194.336, 442.9574, 1185.0221, 870.48, 0.0, 657.294, 318.0228, 1125.8746, 479.4258, 407.4989, 265.3123, 34.405, 530.721, 218.1168, 418.5367, 1239.205, 219.3443, 466.9968, 212.3154, 412.0168, 409.2847, 1389.5375, 235.081, 11.2294, 87.5347, 4155.4009, 145.2886, 469.9085, 445.4934], [320.8599, 802.489, 341.8837, 1034.3489, 529.9938, 4804.2433, 1037.2467, 866.736, 431.0707, 945.4915, 742.512, 131.8351, 406.2996, 356.2458, 1367.5749, 458.4048, 567.7897, 330.2208, 104.9611, 593.8671, 324.7517, 773.887, 1949.6131, 514.9837, 438.7323, 43.659, 269.0107, 760.5775, 965.979, 404.8149, 470.208, 92.2145, 3140.4272, 337.0522, 429.7158, 446.9102]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

