created: 20230412220340000
creator: Drevarr
modified: 20230705163525389
modifier: drevarr
tags: ChartData
title: 202304122203_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Konztantin\u00eb", "Sister Elon\u00edth", "Xanvias Einzbern", "K\u00f4sair", "Nazhul Naxxremis", "Minka Bringer", "Tribal Z", "Smol Gluvs", "Konztantin\u00eb", "Rozaalyna", "Tribal Z", "Koralia Danai", "Ark Darkness", "Panther B Me", "Drevarr Moonwillow", "Sumatra Satyricon", "Xyntharos", "Tootsie Pop Rocks", "Demon Staph", "Estryl", "Johoshua", "Fribble Bibble", "Jeckyll Mbs", "Mac Chiato", "Inedible Plant", "Tegan Parker", "Lucas Ryn", "Blancooo Padreee", "Black Raspberry Pie", "Solus Sanctus", "Sp\u00edcy Cheese", "Bella Sassy", "Venomina The Siren", "Skye Nightroad", "Rina Of Theros", "Sub Train", "Eibh\u00ebar", "Smol Daddy Tika", "Arriasa", "Zadie Miststep", "Lord Erin The Wise", "Mistwalker Caelon", "Gavann", "Sygaldry Verdandi", "Grasszanine", "Arcanophage Farra", "Ryvalia Fazebringer", "Newtype Khan", "Primal Clone"];
const professions = ["Scourge", "Vindicator", "Firebrand", "Berserker", "Berserker", "Scourge", "Scrapper", "Tempest", "Scourge", "Herald", "Scourge", "Weaver", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Soulbeast", "Vindicator", "Scrapper", "Druid", "Berserker", "Scrapper", "Scrapper", "Berserker", "Tempest", "Vindicator", "Tempest", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Tempest", "Scrapper", "Scourge", "Firebrand", "Chronomancer", "Berserker", "Druid", "Tempest", "Weaver", "Vindicator", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Chronomancer", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 0, 1, 2, 1, 4, 0, 4, 2], [3, 0, 0, 0, 1, 1, 3, 0, 4, 0, 0, 1, 2], [0, 2, 0, 1, 1, 0, 2, 1, 1, 1, 6], [2, 0, 0, 1, 1, 0, 1, 0, 3, 0, 1, 0, 1, 1, 0, 1, 2, 1, 1, 0], [2, 0, 0, 1, 2, 0, 5, 0, 2, 0, 1, 1, 2], [0, 0, 0, 5, 3, 1, 2, 0, 3, 2], [0, 0, 2, 0, 0, 2, 0, 2, 6, 0, 2, 2], [1, 1, 4, 0, 1, 1, 2, 4, 2], [0, 0, 0, 1, 2, 0, 7, 0, 6, 1], [0, 3, 5, 0, 4, 5], [4, 0, 0, 2, 1, 6, 2, 0, 1, 2], [5, 0, 0, 1, 1, 1, 0, 6, 3, 1], [2, 0, 0, 0, 2, 1, 3, 1, 0, 4, 0, 0, 1, 0, 0, 0, 0, 5, 0], [1, 0, 0, 1, 1, 1, 1, 4, 0, 1, 0, 0, 1, 0, 3, 2, 2, 1, 0], [5, 0, 0, 3, 0, 2, 6, 2, 0, 1], [0, 0, 0, 0, 2, 2, 3, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 0, 1, 4], [2, 1, 0, 0, 1, 1, 5, 0, 0, 3, 2, 0, 1, 0, 0, 2, 0, 1, 1, 0], [1, 0, 0, 1, 1, 2, 3, 0, 4, 1, 3, 0, 0, 0, 0, 0, 0, 1, 2, 2], [2, 0, 0, 0, 2, 0, 4, 0, 3, 2, 2, 0, 3, 1, 0, 2, 0], [2, 0, 0, 2, 2, 2, 5, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 4], [2, 0, 2, 2, 2, 0, 1, 2, 0, 1, 4, 2, 2, 2], [1, 0, 0, 1, 3, 6, 2, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 2, 1, 2], [2, 0, 0, 1, 1, 1, 2, 2, 0, 1, 0, 0, 3, 0, 3, 2, 1, 1, 3], [1, 0, 0, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 8, 2, 1, 5], [3, 0, 0, 1, 4, 1, 2, 0, 6, 1, 0, 1, 1, 0, 0, 0, 0, 1, 3], [1, 1, 0, 1, 1, 0, 4, 0, 3, 2, 4, 0, 2, 0, 0, 0, 3, 0, 1, 2], [0, 0, 0, 2, 3, 1, 2, 4, 0, 3, 0, 3, 1, 0, 0, 1, 4, 0, 1], [0, 0, 0, 0, 2, 0, 6, 7, 2, 1, 0, 2, 0, 0, 0, 3, 2, 1, 0], [5, 1, 0, 1, 4, 2, 7, 0, 1, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 7, 1, 0, 2, 0, 2, 2, 4, 0, 1, 0, 0, 1, 2, 1, 0, 3], [2, 0, 0, 0, 2, 3, 2, 0, 0, 3, 5, 0, 2, 2, 0, 1, 2, 0, 3, 0], [7, 0, 0, 0, 2, 2, 1, 0, 1, 0, 1, 0, 0, 0, 3, 6, 2, 2], [2, 0, 0, 2, 3, 3, 0, 0, 8, 2, 1, 0, 1, 0, 1, 1, 2, 0, 0, 2], [4, 0, 0, 1, 1, 2, 2, 0, 3, 4, 1, 1, 1, 0, 0, 0, 0, 3, 2, 4], [2, 0, 0, 0, 3, 3, 5, 0, 3, 0, 2, 0, 0, 3, 5, 1, 0, 2], [6, 0, 0, 3, 1, 1, 5, 0, 2, 5, 1, 1, 3, 0, 2], [3, 0, 0, 2, 1, 1, 3, 0, 4, 2, 1, 0, 2, 0, 1, 4, 3, 1, 2, 0], [4, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 0, 3, 0, 0, 4, 6, 1, 1, 1], [3, 0, 0, 2, 1, 3, 0, 0, 5, 4, 0, 0, 3, 1, 1, 3, 0, 2, 4], [6, 0, 0, 0, 1, 3, 6, 0, 3, 3, 3, 0, 2, 1, 0, 1, 0, 3, 0, 0], [2, 0, 0, 1, 1, 1, 4, 0, 7, 1, 1, 3, 1, 0, 0, 7, 3, 0, 1], [2, 0, 0, 5, 2, 8, 4, 0, 1, 2, 1, 0, 1, 1, 0, 1, 0, 2, 0, 4], [0, 0, 0, 1, 1, 1, 6, 4, 0, 7, 0, 3, 5, 0, 3, 2, 0, 1, 1], [0, 0, 1, 5, 2, 2, 0, 5, 3, 3, 0, 3, 2, 0, 1, 0, 2, 1, 5], [2, 0, 0, 0, 2, 3, 7, 0, 11, 1, 1, 0, 1, 0, 0, 2, 1, 3, 2], [1, 0, 0, 2, 1, 3, 5, 0, 5, 1, 2, 0, 1, 0, 0, 1, 2, 6, 2, 5], [0, 0, 0, 2, 1, 4, 4, 0, 5, 3, 3, 0, 3, 1, 0, 5, 0, 1, 2, 4], [2, 0, 0, 4, 1, 4, 4, 0, 6, 0, 3, 0, 2, 0, 0, 1, 6, 1, 1, 4], [10, 0, 0, 3, 1, 4, 4, 0, 4, 5, 2, 0, 0, 0, 0, 1, 0, 2, 2, 2], [2, 0, 0, 8, 3, 2, 4, 0, 6, 5, 6, 0, 2, 2, 0, 3, 1, 9, 1, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

