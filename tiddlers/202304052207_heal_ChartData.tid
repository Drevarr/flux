created: 20230405220700000
creator: Drevarr
modified: 20230705163524494
modifier: drevarr
tags: ChartData
title: 202304052207_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Ak\u00e1nt\u00f3r", "Johosh The Great", "Mac Chiato", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Firebrand", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[128.6275, 23.3077, 312.0548, 276.3687, 0.0, 108.3947, 48.127, 462.6833, 61.5938, 217.9434, 4.9118, 103.6717, 233.8728, 95.5385, 94.7105, 31.6905, 6.4497, 317.3363, 268.3476, 169.9796, 125.1613, 160.3451, 39.0893, 272.7137], [827.2353, 727.4038, 1829.3425, 1248.3283, 361.6364, 556.8636, 1033.8947, 371.8413, 1053.05, 102.9844, 328.7547], [181.2157, 394.4615, 400.0685, 310.1616, 0.0, 0.0, 164.5714, 251.9833, 143.4219, 439.1321, 2.6176, 249.7172, 230.1676, 159.1346, 321.5368, 33.1905, 73.0237, 400.2798, 505.3362, 175.898, 152.8226, 343.6106, 25.3214, 288.9315], [77.6471, 290.9423, 536.7534, 626.4394, 0.0, 0.0, 0.0, 0.0, 493.3019, 0.0, 199.5253, 16.5607, 0.0, 319.8526, 89.1905, 0.8225, 580.5298, 608.1852, 47.1837, 11.8387, 2.5841, 382.3347], [391.1569, 440.3846, 781.0137, 1040.3131, 208.1364, 203.8409, 290.7619, 1174.15, 90.0469, 2436.9623, 40.8824, 613.3939, 182.5029, 195.3462, 626.2842, 67.4286, 118.8876, 1410.6369, 1037.0741, 1024.9184, 1268.0887, 769.0531, 14.2857, 1488.3992], [603.2549, 709.1346, 1634.6849, 989.7222, 255.9773, 23.8409, 612.5789, 210.9206, 886.65, 608.3906, 2234.6604, 89.7647, 658.6061, 371.6879, 387.8846, 650.5105, 513.0714, 175.2308, 1553.0238, 1210.1339, 761.0612, 1118.0, 459.1327, 44.0179, 1177.0605]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

