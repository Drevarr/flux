created: 20230306221045000
creator: Drevarr
modified: 20230705163521279
modifier: drevarr
tags: ChartData
title: 202303062210_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Estryl", "Xanvias Tseli", "Husky Guard", "Blanco Padre Guard", "Raziel Umbra", "Koralia Danai", "Tribal S", "Smol Daddy Tika", "Nazhul Naxxremis", "Black Raspberry Pie", "Legacy Of Mathus", "Mac Aaroni", "Klee Flamepumpkin", "Zaylen Harker", "Oo Dads Mad", "Xyntharos", "Viral Marketing", "Zadie Miststep", "Cat Wigglebooty", "Primal Clone", "Mike The Archmagus", "Demon Sekhmet", "Chronomancer Trixy", "Tegan Parker", "Ravioli Fetabringer", "Morv\u00e4rth", "Fribble Bibble", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Eibh\u00ebar", "Bella Sassy", "Drevarr Moonwillow", "Arcanophage Farra", "Smol Gluvs", "\u00c1rkantor", "Newtype Khan", "Dark Sidiuz", "Tootsie Pop Bringer", "Rozaalyna", "Be\u00eb", "My Birthday Girl"];
const professions = ["Spellbreaker", "Berserker", "Dragonhunter", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Berserker", "Scourge", "Chronomancer", "Berserker", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Tempest", "Scrapper", "Chronomancer", "Tempest", "Spellbreaker", "Chronomancer", "Tempest", "Firebrand", "Scourge", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Scrapper", "Spellbreaker", "Scourge", "Vindicator", "Spellbreaker", "Scourge", "Scrapper", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5440, 1235, 0, 0, 1077, 2163, 654, 3838, 8336, 0, 4134, 1081, 6458, 0, 1550, 261, 5123, 0, 4144, 1248, 2834, 6318, 1248, 6418, 1463, 6289], [1248, 1451, 0, 2874, 0, 0, 1079, 0, 3461, 5410, 0, 4427, 9973, 3338, 3918, 1688, 4119, 0, 0, 6144, 9795, 0, 0, 3419, 0, 1983, 1077, 1205, 246, 2105, 1125, 1159, 0, 2319], [1159, 2154, 0, 1813, 0, 0, 66, 0, 1083, 1368, 0, 5326, 0, 2372, 7472, 550, 7517, 0, 3048, 207, 3194, 0, 4929, 0, 5040, 0, 1200, 3067, 4745, 5298, 518, 2599, 4859, 5148], [2536, 0, 0, 2154, 0, 0, 1077, 0, 1449, 0, 0, 3833, 1359, 6112, 2408, 654, 0, 0, 2308, 0, 1981, 3664, 0, 2650, 0, 3726, 9142, 1248, 7372, 5211, 7004, 4639, 4567], [3796, 153, 0, 269, 0, 0, 2201, 548, 1375, 2113, 0, 5248, 5932, 3736, 4670, 550, 2722, 275, 0, 16885, 0, 0, 520, 3284, 2776, 0, 2339, 621, 5772, 9707, 0, 3336, 318, 1813], [0, 3059, 4144, 0, 2412, 0, 1083, 1088, 1116, 6619, 7619, 6600, 6905, 0, 0, 1166, 1239, 4005, 0, 2801, 0, 4144, 1077, 0, 10224, 11405, 1159, 2661, 3426, 0], [3207, 0, 0, 321, 0, 0, 1077, 0, 6602, 3159, 0, 5633, 916, 3754, 4972, 1166, 1973, 0, 3605, 1083, 8050, 0, 0, 2308, 0, 1077, 0, 5536, 0, 2591, 6770, 2478, 8463, 3474, 6577], [10043, 0, 0, 1068, 0, 0, 1317, 0, 1288, 3825, 0, 7052, 4951, 0, 2508, 0, 2772, 3850, 0, 9907, 0, 0, 4310, 0, 1811, 0, 6508, 1159, 1699, 10790, 3660, 7529, 0, 1708], [12034, 0, 10023, 6000, 11010, 16543, 9079, 4134, 5590, 13952], [5319, 3272, 0, 2325, 0, 0, 6022, 0, 2435, 3702, 257, 8532, 6547, 5379, 2544, 4581, 622, 0, 4061, 0, 5423, 0, 0, 1188, 0, 6510, 0, 1690, 5678, 0, 10215, 0, 1248, 277, 3065], [9606, 1891, 0, 0, 0, 0, 4318, 0, 1065, 3011, 0, 3446, 1259, 6742, 7771, 3936, 1288, 0, 7734, 0, 6304, 0, 4712, 0, 4490, 551, 0, 2898, 3741, 5954, 1159, 3003, 2582, 4597], [6491, 0, 0, 3653, 0, 1077, 0, 731, 2896, 0, 5086, 7840, 6503, 8402, 1166, 6548, 0, 1268, 0, 7722, 0, 0, 3661, 0, 2968, 0, 4648, 1159, 5252, 6194, 283, 5194, 0, 3542], [6835, 9365, 3783, 4355, 0, 11194, 1083, 19818, 6084, 5432, 5191, 0, 6033, 1248, 4662, 7554], [2412, 2947, 538, 0, 0, 1346, 1416, 2832, 2985, 0, 10767, 383, 1340, 2253, 3904, 5701, 0, 10229, 0, 15252, 0, 0, 2270, 261, 2492, 0, 8262, 142, 4411, 5082, 3905, 1613, 1292, 1821], [5181, 1323, 0, 7198, 0, 8928, 220, 7515, 2817, 0, 9437, 7130, 7505, 9468, 1288, 16506, 0, 11772], [14716, 0, 0, 1077, 0, 0, 0, 0, 2166, 1047, 0, 7361, 14877, 1084, 8690, 5098, 0, 7709, 0, 3084, 0, 4614, 0, 0, 0, 5221, 2426, 5242, 0, 2318, 5867, 3389, 2429], [722, 0, 0, 3067, 0, 0, 3388, 0, 4794, 0, 0, 5420, 6976, 5514, 1584, 1166, 4841, 0, 6377, 3093, 17193, 0, 5632, 0, 7003, 0, 0, 0, 3933, 1159, 0, 4675, 3763, 9285], [11609, 0, 0, 5092, 0, 1238, 0, 0, 3475, 589, 6489, 7282, 2869, 6942, 3498, 6196, 2406, 0, 5515, 8619, 0, 4543, 0, 1077, 3391, 540, 6722, 3021, 1552, 3465, 3480], [425, 730, 0, 1555, 0, 10818, 0, 1558, 3161, 22, 9402, 1625, 5335, 7105, 76, 3284, 0, 6416, 451, 11686, 0, 3017, 0, 7075, 1416, 812, 10257, 3985, 130, 8672, 1172, 3433], [3998, 0, 0, 7562, 0, 0, 13045, 0, 2596, 2422, 0, 3681, 622, 6817, 6574, 1161, 7363, 8366, 874, 19703, 0, 0, 5059, 1220, 2496, 0, 1077, 4934, 5106, 590, 0, 2582, 2591, 0], [8303, 3067, 1077, 0, 0, 3546, 2573, 5635, 3249, 1116, 5133, 0, 5064, 7759, 5790, 3540, 0, 0, 1248, 3067, 0, 16592, 0, 0, 0, 6697, 0, 7732, 10552, 3101, 7305, 3067, 2356], [6716, 4380, 7041, 7896, 2988, 6506, 5321, 0, 2558, 3415, 6968, 1625, 3433, 2360, 0, 5729, 1097, 5941, 2376, 1619, 8076, 0, 5503, 4343, 3570, 3273, 3124, 1436, 7559, 4318], [8205, 0, 0, 4650, 0, 0, 6107, 391, 3918, 0, 0, 11806, 9948, 5700, 0, 1992, 14944, 1064, 8297, 4763, 1350, 4430, 0, 7168, 1239, 7294, 3132, 0, 6458, 10034, 5046], [0, 4420, 0, 10942, 0, 0, 3429, 0, 0, 2023, 0, 8155, 9033, 4681, 6281, 8127, 6480, 5621, 0, 5549, 4977, 101, 1500, 3391, 5934, 1159, 18973, 8937, 3025, 9251, 2755, 0], [2719, 876, 0, 1375, 0, 0, 4683, 0, 4361, 3415, 2936, 13088, 12329, 5303, 7239, 1442, 6188, 15440, 4091, 10255, 0, 0, 5542, 496, 6076, 0, 8541, 2163, 3700, 6513, 0, 1618, 2192, 2408], [14234, 5011, 0, 5841, 0, 0, 10000, 275, 3594, 4105, 2295, 12705, 4060, 25031, 13463, 3958, 10865, 0, 22969], [3527, 319, 0, 2426, 66, 0, 4347, 1182, 8295, 637, 1037, 9166, 6157, 9121, 11402, 550, 9714, 5933, 919, 11303, 0, 0, 3360, 36, 9388, 186, 4234, 264, 9588, 9450, 5394, 8862, 2157, 2340], [11989, 0, 0, 8539, 0, 0, 8100, 606, 7930, 0, 0, 13231, 3578, 5846, 17547, 4764, 7189, 0, 6392, 2232, 11302, 0, 0, 5060, 0, 2114, 0, 9386, 3076, 3434, 8617, 3596, 3525, 1247, 2390], [4504, 3608, 0, 6665, 0, 0, 9299, 0, 4500, 3155, 0, 8559, 10405, 2427, 5399, 0, 3432, 5431, 0, 20950, 0, 0, 6715, 3687, 1318, 0, 7704, 5755, 14679, 12018, 5933, 3972, 4239, 1406], [13752, 2844, 0, 4136, 0, 0, 8502, 1347, 5628, 7483, 0, 5497, 5207, 7456, 6238, 2332, 4352, 0, 5214, 602, 20923, 0, 0, 8163, 0, 3561, 0, 3134, 3417, 13088, 12297, 2407, 16340, 976, 976], [9217, 8129, 0, 10884, 0, 0, 5557, 0, 6550, 5907, 0, 8873, 8374, 2410, 1823, 5859, 8439, 8918, 1531, 17970, 0, 6792, 3031, 5821, 0, 0, 1900, 14724, 12833, 2919, 9494, 3954, 4437], [11760, 4053, 0, 11012, 0, 0, 9202, 0, 18805, 3977, 188, 9494, 6058, 7362, 10179, 5288, 8185, 3, 10411, 387, 24831, 0, 9865, 1415, 9374, 944, 11127, 5131, 17184, 12389, 126, 3882, 5684, 5867], [9004, 0, 0, 9189, 0, 7041, 1083, 3460, 0, 0, 13121, 15924, 13212, 17342, 3430, 5784, 4626, 6156, 27369, 0, 5429, 0, 8874, 0, 12679, 9199, 7984, 19248, 8681, 13204, 5520, 9215], [26553, 4631, 0, 1248, 0, 0, 12570, 0, 15832, 1296, 2764, 16785, 5349, 7895, 18432, 2454, 5004, 0, 15617, 5100, 16000, 0, 0, 16072, 679, 8579, 0, 8518, 8259, 19255, 12326, 1437, 8708, 7298, 7934], [23620, 1694, 0, 12017, 0, 0, 10022, 1578, 18715, 7089, 0, 11907, 7706, 5542, 17561, 4909, 10346, 13262, 4931, 20262, 0, 10003, 12003, 0, 7499, 5325, 17902, 12912, 5598, 7110, 4062, 7896], [7937, 5798, 0, 8532, 0, 1961, 8411, 7908, 8281, 11975, 6910, 9437, 16461, 13156, 17913, 17242, 0, 23269, 8782, 3031, 6597, 11651, 6239, 21904, 14857, 4112, 15076, 5372, 11973], [0, 16023, 15749, 0, 9235, 11088, 14698, 16133, 4636, 18318, 0, 22153, 4807, 33608, 0, 0, 16408, 2469, 17844, 0, 1249, 10189, 24613, 24768, 3221, 3366, 7834, 9178], [40306, 0, 0, 14487, 0, 0, 17791, 0, 37529, 1321, 82, 30558, 24432, 9888, 5582, 3082, 1280, 27809, 13077, 3391, 69, 303, 14487, 23363, 17487, 18133, 1295, 4362], [13026, 2099, 0, 12523, 0, 0, 11139, 1344, 14726, 6098, 0, 21785, 15064, 27512, 16600, 5198, 14520, 3998, 0, 38497, 0, 19736, 1730, 12827, 0, 13302, 6977, 19130, 17317, 9708, 13804, 0], [27784, 3422, 0, 20176, 0, 0, 21339, 254, 17774, 9481, 0, 26481, 21155, 13321, 16811, 0, 13884, 0, 25558, 4789, 38712, 0, 0, 23354, 1449, 19408, 3391, 7237, 5892, 21245, 14429, 5520, 20752, 8422, 12091], [44005, 4533, 8935, 0, 0, 28429, 2747, 37382, 6669, 2394, 9327, 45439, 30643, 24993, 2865, 32912, 503, 45632, 8101, 88430, 0, 32656, 671, 33311, 0, 14313, 11285, 56341, 32052, 17802, 12869, 48129, 21426]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

