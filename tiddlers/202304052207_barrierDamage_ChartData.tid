created: 20230405220700000
creator: Drevarr
modified: 20230705163524415
modifier: drevarr
tags: ChartData
title: 202304052207_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Arriasa", "Hrakkus", "Mike The Archmagus", "Xanvias Tlesel", "Sassy Daddy Demon", "Marrosch", "Sp\u00edcy Cheese", "Tribal S", "Rozaalyna", "Koralia Danai", "Smol Daddy Tika", "Sumatra Satyricon", "Xyntharos", "Drevarr Moonwillow", "Zenek Tryst", "River No Hug", "Rina Of Theros", "Blancooo Padreee", "Newtype Khan", "Panther B Me", "Grasszanine", "Be\u00eb", "Dark Sidiuz", "Seren Nightroad", "Smol Gluvs", "Tootsie Pop Rocks"];
const professions = ["Tempest", "Druid", "Tempest", "Weaver", "Berserker", "Vindicator", "Berserker", "Berserker", "Druid", "Scourge", "Firebrand", "Berserker", "Soulbeast", "Vindicator", "Scrapper", "Weaver", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1529, 0, 2465, 3681, 0, 0, 0, 0, 0, 0, 251, 0, 197, 0, 0, 0, 2981, 2987, 361, 0, 0, 0, 269], [0, 0, 0, 1816, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 5419, 0, 7831, 0, 0, 0, 0, 0], [4622, 0, 780, 0, 0, 0, 0, 0, 872, 0, 1339, 493, 1407, 0, 3383, 0, 0, 3200], [0, 1199, 1982, 0, 295, 0, 275, 1720, 5463, 0, 3652, 269, 0, 1581], [540, 483, 0, 0, 150, 0, 0, 0, 2240, 0, 0, 0, 0, 3647, 135, 2331, 0, 0, 4811, 269, 0, 0, 0, 0, 1939], [1248, 0, 2457, 1248, 0, 0, 0, 0, 1207, 0, 0, 3823, 0, 0, 92, 0, 391, 2052, 0, 0, 269, 0, 0, 4163], [0, 0, 0, 2538, 0, 0, 0, 1188, 0, 0, 424, 0, 0, 3051, 4167, 0, 269, 1699, 0, 3694], [0, 0, 0, 5237, 0, 0, 1100, 0, 0, 0, 0, 302, 0, 0, 2318, 0, 0, 2203, 0, 0, 0, 2401, 0, 4024], [0, 0, 0, 1449, 0, 0, 566, 2242, 0, 0, 0, 1204, 275, 0, 1356, 0, 0, 2523, 6047, 9, 1614, 433, 0, 1067], [0, 325, 1739, 2806, 0, 0, 0, 0, 0, 0, 825, 275, 0, 6472, 0, 0, 2662, 269, 0, 0, 2507, 0, 1880], [0, 0, 2608, 0, 0, 0, 0, 50, 0, 3184, 686, 159, 4, 1964, 0, 0, 8041, 1085, 0, 1248, 0, 0, 1445], [0, 0, 0, 204, 111, 0, 0, 0, 205, 356, 0, 0, 2801, 3342, 604, 3341, 0, 0, 5820, 364, 0, 0, 1123, 36, 2420], [1248, 265, 0, 1193, 0, 0, 0, 0, 0, 0, 2420, 0, 2924, 275, 0, 2033, 0, 0, 4930, 787, 0, 0, 4134, 0, 3802], [0, 0, 0, 378, 0, 0, 0, 3960, 101, 1539, 0, 0, 2678, 1309, 0, 5745, 0, 0, 5976, 141, 0, 0, 1248, 0, 1155], [567, 0, 5, 4972, 128, 0, 323, 116, 3708, 1221, 768, 0, 3135, 1177, 49, 2490, 643, 198, 1758, 2078, 0, 5, 110, 61, 5592], [994, 3627, 0, 4066, 861, 0, 0, 227, 261, 0, 0, 0, 4585, 275, 35, 2064, 393, 275, 7976, 3438, 0, 269, 538, 269], [2154, 410, 1131, 4346, 0, 0, 0, 0, 1935, 838, 0, 0, 5247, 1254, 108, 4907, 0, 0, 60, 1973, 0, 0, 0, 0, 5865], [0, 0, 2226, 2523, 830, 0, 0, 2176, 1319, 0, 2447, 0, 4713, 2791, 919, 3847, 992, 0, 4, 2734, 0, 2226, 0, 0, 2496], [0, 0, 0, 1479, 242, 0, 0, 0, 3526, 924, 0, 0, 3103, 0, 2835, 0, 0, 4046, 10602, 0, 2731, 0, 0, 5024], [1594, 0, 0, 6717, 0, 0, 0, 1561, 5770, 199, 4105, 0, 497, 0, 0, 2341, 0, 739, 7662, 2708, 0, 3124, 385, 0, 1922], [2857, 1888, 1264, 4590, 315, 0, 0, 261, 1616, 0, 3608, 0, 2810, 0, 1182, 3687, 0, 0, 6906, 2072, 0, 0, 116, 0, 6501], [2490, 0, 0, 2821, 323, 0, 0, 2489, 0, 0, 0, 0, 651, 2000, 955, 2672, 0, 0, 15163, 2218, 0, 3713, 3413, 0, 2811], [480, 1248, 0, 9034, 2383, 0, 0, 0, 1409, 511, 2187, 0, 3416, 1288, 3843, 2668, 0, 1270, 10761, 7309, 1304, 0, 0, 0, 2565], [1240, 0, 0, 21120, 1248, 0, 0, 0, 0, 1188, 5563, 317, 0, 2700, 4315, 0, 269, 2507, 0, 16062], [1384, 2174, 2575, 3414, 1248, 0, 3225, 2350, 0, 1780, 0, 4551, 1859, 0, 3539, 0, 0, 8504, 8507, 0, 709, 593, 0, 11252], [0, 0, 8018, 384, 0, 0, 2488, 3789, 781, 3376, 0, 3322, 4824, 2252, 1615, 0, 3995, 8330, 6361, 0, 1254, 3474, 0, 7926], [10, 0, 737, 22506, 491, 0, 0, 4065, 6676, 564, 5022, 0, 14508, 5218, 8261, 10633, 0, 0, 13995, 6986, 0, 1687, 1497, 0, 44066]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

