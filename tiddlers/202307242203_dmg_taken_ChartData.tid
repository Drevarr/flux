created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Keypek The Drunk", "Jimbo The Pleb", "Name Is What", "Glorious Gluvs", "Johosh The Mighty", "Primal Clone", "Mort\u00e4rion", "Elon Illusionblade", "Mistwalker Cael", "Vee Nemesis", "Ryvalia Fazebringer", "Hey Yey Yeah Ah Ah", "Xanvias Einzbern", "Zaedy Zae", "Jerryatric Reflexes", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Solus Sanctus", "Crusader Siolith", "Tegan Parker", "Legacy Of Mathus", "Arriasa", "Fang Shiyu", "Lord Erin The Wise", "Sub Train", "Klengah", "Sygaldry Verdandi", "Oo Dads Mad", "Bella Sassy", "Ateriuz", "Venomina The Sly", "Inedible Plant", "Latedoctor", "Sister Elon\u00edth", "Koralia Danai", "Sylvanas Rodex", "Urilstormwalker", "Holten Mcgroins", "Gavann", "Avatar Shazbott", "Useless Light Field", "Rafaellagabriela", "Gabe Malhorn", "Useless Light Field", "Rihni Toyo", "Dalveirric", "Crabbedmermaidd", "Il Wolf", "Q Captain Crunch Q", "Luke The Ghastly"];
const professions = ["Scrapper", "Berserker", "Scourge", "Berserker", "Berserker", "Chronomancer", "Scrapper", "Chronomancer", "Vindicator", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Druid", "Spellbreaker", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Berserker", "Druid", "Dragonhunter", "Weaver", "Firebrand", "Druid", "Firebrand", "Berserker", "Firebrand", "Berserker", "Druid", "Vindicator", "Reaper", "Firebrand", "Firebrand", "Herald", "Firebrand", "Thief", "Firebrand", "Tempest", "Willbender", "Firebrand", "Firebrand", "Dragonhunter", "Soulbeast", "Soulbeast", "Deadeye", "Ranger", "Untamed", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[999.9188, 229.2526, 237.5467, 413.4815, 504.8056, 1111.0988, 333.1935, 540.9437, 119.4298, 226.9783, 364.4777, 602.1335, 553.9012, 64.0404, 59.733, 627.9048, 202.0957, 310.3388], [1194.8287, 813.7553, 280.7768, 2599.8571, 307.6286, 1230.8375, 163.0741, 388.3944, 31.272, 177.6512, 311.7066, 494.7968, 745.1176, 49.5, 30.8436, 101.4615, 191.5, 399.0474], [1200.0084, 440.4839, 196.3281, 753.1489, 639.0986, 1100.4146, 49.037, 486.9028, 271.4634, 181.7279, 327.9679, 475.4611, 554.1333, 48.396, 41.1966, 188.2857, 252.5536, 423.4458], [1405.1419, 345.1809, 245.0056, 737.7925, 330.0822, 20.5926, 5700.7333, 132.5, 230.7402, 268.3427, 423.2695, 434.4583, 63.5859, 97.4551, 60.88, 163.7054, 289.8921], [1121.6258, 555.75, 189.0425, 919.0426, 165.9863, 933.8395, 30.2857, 470.1096, 44.9479, 280.2063, 433.8417, 435.7634, 310.5405, 83.71, 57.3966, 391.5, 100.6216, 294.1225], [923.727, 282.8617, 150.2966, 845.4918, 436.9571, 561.8765, 106.0625, 738.1806, 37.2047, 196.8188, 373.728, 390.0699, 961.9333, 13.97, 119.6831, 285.4211, 203.8142, 436.6183], [1150.8798, 772.0, 175.733, 292.2419, 312.45, 1021.425, 0.0, 827.4265, 41.3551, 288.7786, 664.8602, 351.9382, 1308.8767, 115.62, 89.7941, 31.5349, 117.5536], [1151.537, 341.0645, 241.2471, 1117.1538, 399.6986, 774.9375, 53.1538, 329.0694, 67.1304, 177.4766, 405.5531, 433.9143, 395.4138, 64.1, 16.7735, 83.08, 285.598, 244.5103], [1049.3279, 392.5319, 254.3398, 672.3636, 294.6429, 544.962, 18.5758, 433.6667, 158.1838, 261.4776, 232.8623, 373.022, 249.3421, 68.2772, 26.3046, 194.1176, 179.3243, 125.7025], [505.064, 798.6559, 188.9011, 977.2857, 453.3088, 0.0, 468.1969, 436.4211, 614.4056, 757.0, 158.5758, 33.9143, 16.0526, 137.3119, 300.2172], [1041.2226, 492.7872, 244.8, 621.5, 380.9041, 464.1098, 174.8286, 252.0548, 69.8981, 322.7463, 291.7773, 269.1535, 409.8608, 97.8713, 26.2647, 246.6786, 228.9316, 195.5512], [608.9778, 329.8457, 4603.1875, 952.4625, 0.0, 1118.0147, 9.4741, 246.6512, 280.2823, 519.18, 1126.0169, 38.96, 20.7556, 23.0476, 230.8, 264.9046], [907.5677, 293.8617, 206.0761, 210.2292, 150.662, 554.3291, 136.2667, 251.0143, 101.2564, 259.8116, 206.3089, 388.7721, 1028.4459, 44.9802, 26.9826, 171.5385, 206.8919, 159.6803], [1066.97, 522.5851, 70.3539, 486.9333, 241.5634, 713.0649, 21.68, 530.6571, 61.04, 180.5606, 332.4958, 278.7197, 286.28, 38.9208, 32.2159, 206.1429, 175.7748, 116.5257], [528.6526, 203.0706, 1072.9583, 303.7246, 820.2963, 0.0, 645.4722, 117.9176, 242.7364, 368.749, 425.5245, 765.2456, 80.7677, 28.9191, 284.8214, 198.9107, 539.2656], [779.9105, 262.3895, 244.6, 184.5208, 115.2817, 586.975, 132.75, 308.0685, 142.4356, 63.8923, 352.814, 201.8878, 1248.7808, 186.3366, 43.9244, 228.6471, 190.7043, 114.4585], [933.7629, 477.5638, 133.4006, 432.7826, 185.0597, 399.8462, 84.1481, 198.8889, 25.2105, 82.209, 459.9617, 295.5518, 718.46, 50.5426, 2.2316, 0.0, 145.6486, 145.6314], [843.2937, 158.0538, 84.5575, 456.12, 291.9041, 553.3951, 0.0, 361.8904, 100.5339, 125.3594, 101.1799, 319.5944, 4541.8667, 37.4947, 12.1047, 0.0, 170.2783, 182.1265], [859.8039, 2324.7879, 129.879, 97.2292, 103.0694, 557.9875, 0.0, 304.0278, 92.2689, 122.6462, 260.3349, 268.931, 303.64, 8.3535, 14.8496, 86.3529, 77.0442, 202.1792], [773.0742, 275.2872, 120.8879, 1169.1429, 144.1176, 446.6049, 29.2174, 188.7917, 395.4167, 82.5079, 396.9347, 349.7008, 544.5577, 37.4688, 11.1988, 96.9286, 26.3519, 102.5904], [733.0826, 566.7741, 728.9067, 50.898, 20.3646, 0.2093, 807.313, 416.1721], [776.1825, 412.5591, 203.9878, 684.6, 132.5143, 355.7722, 20.7586, 245.9306, 50.1, 106.3622, 238.8219, 309.2222, 354.3857, 43.1398, 7.1685, 62.1111, 210.9027, 99.3595], [58.2416, 396.8364, 323.274, 1177.9383, 107.88, 528.625, 494.1975, 182.2117, 342.2814, 541.3418, 432.2439, 18.5, 44.0335, 158.5217, 270.3727, 54.2313], [507.8646, 325.8373, 581.5, 438.0143, 297.4545, 664.2361, 187.8261, 95.0588, 231.7068, 396.6827, 609.4259, 53.6, 69.4309, 48.8636, 318.4312, 1707.1667], [972.0855, 376.1702, 90.8309, 454.4583, 328.4429, 585.6494, 116.0625, 418.3088, 13.114, 69.6544, 216.9228, 247.8976, 247.6849, 55.6162, 9.104, 57.6522, 36.7, 114.1282], [754.5882, 114.5579, 130.5113, 391.1698, 290.507, 402.9872, 2.1154, 535.0556, 11.6942, 155.0469, 234.7864, 315.852, 276.7, 31.3404, 21.1285, 2.8889, 133.875, 171.5433], [1022.4041, 220.3617, 66.2783, 413.7407, 91.0556, 351.2716, 118.6667, 358.3194, 29.1797, 28.1562, 183.7901, 256.1921, 243.4906, 19.1111, 13.1638, 110.75, 287.0804, 95.3583], [995.5438, 280.8438, 211.0652, 1332.18, 510.8611, 1086.8625, 62.875, 657.6389, 298.3951, 187.9779], [738.2361, 406.9681, 117.2126, 678.1273, 160.6849, 289.8537, 215.1613, 225.8904, 10.1081, 55.6493, 199.2282, 244.4241, 174.5088, 29.5506, 3.8198, 110.9167, 110.513, 160.4538], [405.4681, 209.1908, 1105.5833, 437.4, 576.0633, 11.0833, 712.3472, 45.1538, 244.8881, 139.6506, 410.002, 500.8246, 55.35, 6.8306, 3.44, 244.3894], [466.8737, 385.5229, 255.6333, 304.1667, 550.0247, 0.0, 44.4286, 219.716, 140.3893, 221.8182, 283.544, 524.1111, 52.9505, 2.8883, 146.6875, 147.7565, 186.7349], [877.1071, 560.75, 89.4633, 285.2917, 244.1268, 156.8657, 0.0, 131.7215, 196.298, 363.9186, 20.3465, 53.1985, 0.0, 80.1696, 71.2625], [89.6931, 361.8268, 340.1606, 506.4491, 532.537, 97.56, 51.6936, 150.6842, 368.5714, 332.3086], [603.4404, 54.6667, 53.8329, 448.8222, 164.3889, 374.4321, 0.0, 352.2778, 10.8312, 152.7836, 154.9132, 273.8147, 291.0577, 26.4681, 36.2256, 32.25, 34.6339, 147.4603], [614.1111, 165.7391, 83.0113, 278.8049, 163.1389, 292.5556, 31.1034, 364.2917, 12.0569, 76.3623, 111.5963, 222.1844, 706.6622, 4.3936, 7.9444, 15.0968, 131.1101, 110.0464], [236.7069, 977.4182, 259.2537, 322.8765, 119.7895, 51.9911, 135.7907, 389.9957, 462.245], [666.125, 145.3564, 96.927, 235.1324, 399.1627, 1607.8667, 16.62, 0.0, 132.9, 188.9292, 291.686], [164.3492, 366.8762, 1794.0556, 150.2323, 399.6538, 28.8421, 479.2017], [895.323, 229.7312, 231.9341, 355.75, 175.1831, 442.7342, 285.2917, 8.3798, 85.25], [551.0429, 838.5926, 922.9677, 14.288, 202.1136, 265.3048, 287.9582, 688.8772, 37.2277, 95.9112, 155.8947, 214.4107], [1162.8667, 555.2314, 11131.5, 411.971, 2500.8611, 3169.8889, 274.7424, 245.9044], [236.337, 104.0057, 32.8958, 79.75, 302.7692, 21.7857, 211.8472, 40.4462, 123.186, 198.8669, 268.2251, 156.3962, 28.5842, 3.8621, 32.9032, 35.8919, 149.9325], [690.5915, 254.0543, 67.0653, 616.6087, 152.9857], [131.6328, 889.0769, 31.8687, 26.0757, 0.0, 533.1784], [147.8283, 38.0601, 142.4545, 305.6549, 346.5945], [585.4187], [208.7477, 323.6024], [57.8276, 1301.7959, 110.4262], [842.5556], [236.8125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

