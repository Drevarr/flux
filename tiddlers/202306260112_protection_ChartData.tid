created: 20230626011254000
creator: Drevarr
modified: 20230705163537699
modifier: drevarr
tags: ChartData
title: 202306260112_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Warrior Constantine", "Hyde En Sikh", "Crusader Siolith", "Demon Staph", "Belvyn Brightblade", "Black Raspberry Pie", "Eoooeee", "Ryvalia Fazebringer", "Imalou", "Mmathuss", "Tribal S", "Yummy Kiwi", "Fribble Bibble", "Miphest\u00f6", "Drevarr Moonwillow", "Traidoruns Maximus", "Bella Sassy", "Sub Train", "Gestern Yesteryear", "Sygaldry Verdandi"];
const professions = ["Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Firebrand", "Scrapper", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[28.178, 14.3161, 51.4246, 79.904, 139.3228, 25.2216, 56.8273, 36.9891, 150.6914, 20.6363, 8.3398], [19.8648, 15.2258, 70.6217, 29.745, 172.7438, 63.441, 3.564, 10.7293, 16.7238, 17.3935, 19.7644, 12.972, 22.9555, 20.4676, 22.7809, 36.073, 37.9598, 28.08, 10.2838], [41.0552, 23.5318, 40.5266, 108.064, 151.6679, 41.2474, 111.0306, 30.2389, 217.4878, 16.5186, 3.9085, 10.2173, 44.0923, 38.4054], [67.7332, 58.1725, 41.3816, 75.2909, 23.2537, 58.2565, 70.3013, 183.8693, 138.9312, 76.3582, 95.2807, 30.983, 14.7954], [66.3424, 24.5557, 0.0, 106.832, 198.6062, 55.8893, 80.9676, 38.1416, 128.4792, 25.6637, 4.5619, 27.2017, 4.7965, 23.2972, 0.0, 29.0536, 18.0365, 14.1808, 26.8849, 22.7798, 33.408, 4.5504, 0.0, 35.196, 12.6298], [0.0, 9.119, 7.9086, 161.656, 283.9364, 23.2574, 69.2723, 0.0, 449.837, 46.5394, 26.5874], [28.2656, 35.684, 60.1656, 82.544, 55.3493, 21.204, 15.1848, 68.8225, 78.4784, 201.348, 46.8745, 5.643, 29.8061, 22.3155, 20.1232, 17.813, 30.2864, 33.0624, 25.4148, 26.2763, 40.3771, 54.0374, 32.9184, 14.0346, 30.4819, 15.1853, 24.1463], [0.0, 87.032, 294.448, 471.0115, 118.2067, 113.2047, 61.0814], [20.0604, 23.2033, 29.3638, 97.24, 200.0985, 38.1226, 0.0, 106.9072, 26.6717, 132.7938, 37.9688, 12.4027, 26.0665, 0.0, 28.0264, 59.8727, 24.4536, 16.0474, 15.3953, 26.4328, 11.5656, 46.8547, 33.2064, 37.0613, 45.9425, 34.0243, 22.6081], [65.2912, 44.494, 37.5373, 118.888, 262.9091, 76.379, 0.0, 55.6277, 28.5925, 216.0496, 62.7228, 20.6237, 43.8745, 29.8053, 29.2643, 14.4624, 23.1974, 19.1638, 23.8939, 36.7757, 79.7616, 23.2128, 9.4889, 66.9562, 16.009, 13.581], [113.1178, 299.805, 80.6736, 249.4478, 35.6227, 49.6822, 67.6259, 41.5786, 102.9646, 16.8084, 40.8848, 93.0048, 0.0, 16.99, 64.6795, 102.3538, 51.0048, 28.3921, 85.453, 42.2189, 48.5558], [112.0988, 21.7157, 65.1983, 169.488, 299.266, 62.8085, 149.3402, 77.3808, 109.1434, 21.2771, 33.1674, 21.5973, 70.5898, 83.5783, 69.0736, 16.0205, 0.0, 80.081, 27.9038, 0.0, 82.3392, 35.7448, 67.3557, 61.776, 29.0444], [0.0, 263.1447, 72.3867, 494.7408, 70.5751, 54.5173, 42.2717, 55.3527, 77.7313, 24.092, 54.7032, 32.1485, 21.2534, 67.8906, 71.209, 137.975, 109.4688, 44.2897, 137.3081, 90.6259, 52.4823], [67.2476, 49.9808, 96.492, 220.88, 320.0219, 59.8622, 118.5276, 64.1547, 345.6474, 65.1168, 21.4141, 58.9693, 17.33, 7.2257, 49.3672, 73.4899, 28.8082, 63.3518, 21.9014, 121.1458, 51.4656, 24.7655, 34.5168, 23.2531, 59.6473], [19.0714, 198.176, 379.7123, 61.8264, 0.0, 196.7213, 39.788, 450.4762, 150.008, 22.5958, 3.428, 48.4785, 61.8613, 31.453, 15.5296, 88.9997, 111.1071, 112.5481, 27.3182, 121.7722, 35.7984, 67.5648, 38.5118, 28.5754, 104.5598], [43.8, 54.0574, 87.9402, 217.096, 418.2398, 143.7854, 0.0, 214.1143, 158.6032, 324.2342, 93.7012, 37.2438, 43.2957, 15.0822, 64.1465, 5.4482, 64.8416, 36.8794, 73.0295, 42.7968, 68.3395, 82.3507, 10.5696, 31.5965, 66.5967, 19.0291, 15.4836], [124.8008, 81.569, 39.7698, 270.688, 542.233, 124.7688, 38.3519, 169.4322, 68.3256, 343.4102, 107.8736, 33.6917, 64.3759, 34.0375, 119.2472, 18.1415, 94.7232, 80.855, 34.6305, 57.0914, 113.0208, 147.1205, 81.792, 92.529], [163.1696, 86.6695, 197.5626, 330.704, 480.3721, 224.1821, 5.5199, 292.0082, 174.9026, 719.2598, 187.8811, 41.1523, 49.6398, 39.501, 26.5664, 89.0652, 18.8048, 27.9283, 28.1474, 40.8317, 97.4731, 171.4666, 20.1888, 4.7693, 89.5679, 34.9536, 23.0331], [207.4368, 118.0259, 167.1014, 394.944, 742.1959, 220.5216, 34.3607, 388.3446, 155.036, 504.0092, 198.0317, 52.8779, 55.0712, 0.0, 163.2388, 64.1617, 89.2768, 76.2854, 44.7572, 94.6886, 104.9395, 172.0094, 130.7808, 106.3897, 209.4179, 100.1722, 58.8579], [146.5548, 131.4919, 245.3167, 526.064, 964.4069, 243.5558, 55.1885, 338.1897, 186.7018, 623.8592, 201.7184, 46.7003, 114.6167, 77.3091, 158.827, 107.4965, 119.6368, 127.3574, 46.1704, 212.0458, 221.8291, 129.1392, 73.6009, 83.0161, 119.2224, 85.9593], [198.2972, 134.1001, 232.2998, 459.8, 823.1849, 213.7363, 51.3616, 464.889, 186.6469, 948.7326, 326.8768, 84.7282, 34.1691, 109.3203, 149.8445, 30.9506, 115.0368, 88.7846, 22.4679, 114.9305, 61.6051, 250.1424, 173.4336, 67.9374, 199.2306, 109.296, 23.9237]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

