created: 20230401222944000
creator: Drevarr
modified: 20230705163523907
modifier: drevarr
tags: ChartData
title: 202304012229_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Skye Nightroad", "Cat Wigglebooty", "Johosh The Great", "Aluin Ellesmera", "Macette", "High Sorcer Baradun", "Tootsie Pop Rocks", "Tegan Parker", "Tribal S", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Druid", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1255, 0.1604, 0.0779, 0.4039, 0.0, 0.1511, 0.0882, 0.3524, 0.0, 0.3364, 0.0, 0.2099, 0.0795, 0.2018, 0.0, 0.0, 0.0, 0.2262, 0.0, 0.2149, 0.0, 0.1513, 0.0, 0.0, 0.4821, 0.0244, 0.0, 0.2083, 0.084, 0.1059], [0.0294, 0.3669, 0.1618, 0.2286, 0.0, 0.4766, 0.0, 1.0123, 0.0, 0.3684, 0.0093, 0.027, 0.0, 0.2917, 0.3471, 0.1912, 0.2845, 0.1429, 0.0, 0.6786, 0.1463, 0.1667, 0.1042, 0.1145, 0.7412], [0.1905, 0.092, 0.0909, 0.342, 0.2941, 0.1727, 0.1912, 0.2, 0.0, 0.3551, 0.5517, 0.2716, 0.0, 0.3684, 0.0, 0.0541, 0.2162, 0.2738, 0.1074, 0.0588, 0.2089, 0.1099, 0.3077, 0.2679, 0.2195, 0.2, 0.2083, 0.1145, 0.3882], [0.2554, 0.0873, 0.1494, 0.8013, 0.0588, 0.3597, 0.3529, 0.019, 0.0, 0.5421, 0.5517, 0.3951, 0.0, 0.1754, 0.0278, 0.0, 0.0811, 0.2024, 0.0, 0.1405, 0.0, 0.2829, 0.1099, 0.0, 0.4107, 0.0, 0.0333, 0.25, 0.0229, 0.2706], [0.2814, 0.1439, 0.0649, 0.7622, 0.0294, 0.3165, 0.4265, 0.1333, 0.0, 0.3458, 0.0, 0.642, 0.1364, 0.3947, 0.0093, 0.0811, 0.0, 0.0536, 0.0, 0.157, 0.0, 0.3207, 0.0879, 0.1026, 0.2857, 0.1951, 0.0, 0.125, 0.1756, 0.6235], [0.0216, 0.059, 0.2857, 0.886, 0.7941, 0.0, 0.3524, 0.0, 0.5327, 0.679, 0.0227, 0.6667, 0.0463, 0.1351, 0.3243, 0.2857, 0.0, 0.314, 0.0, 0.2796, 0.6484, 0.0256, 0.0, 0.0732, 0.0, 0.125, 0.1985, 0.6353], [0.29, 0.1462, 0.3571, 0.9577, 0.0, 0.5755, 0.7941, 0.2381, 0.0, 0.6075, 0.5, 0.1358, 0.0, 0.6228, 0.0093, 0.0, 0.0811, 0.3274, 0.0, 0.6777, 0.0, 0.4326, 0.4286, 0.6429, 0.0, 0.0, 0.0, 0.1069, 0.4471], [0.6471, 1.1583, 0.2941, 0.4381, 1.1028, 0.0862, 1.716, 0.2614, 0.8684, 0.0556, 0.0541, 0.1892, 0.7202, 0.1333, 0.8678, 0.0735, 1.1694, 0.4615, 0.1538, 1.1786, 0.2927, 0.4333, 0.6667, 0.3206, 1.5412], [0.8398, 0.5472, 0.4416, 0.5309, 0.5588, 1.8201, 0.7794, 0.581, 0.1163, 1.7009, 2.0123, 0.4091, 1.4825, 0.0, 0.0811, 0.1622, 0.7798, 0.1333, 0.9091, 0.2059, 1.7928, 0.7473, 0.0, 1.8929, 0.0, 0.8, 0.9167, 0.3359, 1.1412], [0.8182, 0.8585, 0.6753, 2.1857, 1.5882, 1.1223, 1.0, 0.6571, 0.4884, 1.6729, 1.9138, 2.1111, 0.4545, 1.0526, 0.0556, 0.3243, 1.0811, 0.9524, 0.6446, 0.3824, 1.6069, 0.5604, 0.2821, 1.7857, 0.3902, 0.7, 0.5833, 0.7099, 1.6824], [0.8355, 0.842, 0.8636, 2.1075, 1.1765, 1.3813, 0.9559, 0.981, 0.093, 1.9252, 1.3793, 0.0494, 0.3409, 1.4298, 0.0926, 0.2162, 0.5405, 1.0952, 0.3, 1.3471, 0.2206, 1.7056, 0.8022, 1.9286, 0.6098, 0.7333, 1.1458, 0.5649, 1.3294]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

