created: 20230408001602000
creator: Drevarr
modified: 20230705163524776
modifier: drevarr
tags: ChartData
title: 202304080016_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Zenek Tryst", "Venomina The Siren", "Mac Chiato", "Mike The Archmagus", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.0488, 17.5185, 20.0346, 20.0077, 19.8151, 40.2331, 51.3926, 19.9553, 0.0, 25.3252, 0.0, 19.7568, 19.5098, 0.0, 0.0, 0.0, 47.079, 37.0125, 31.9013, 72.0096, 34.1453, 20.0928, 60.0024, 39.6581, 18.5932, 59.976], [16.0495, 27.9854, 16.0353, 14.6079, 29.0864, 32.1182, 28.968, 31.9357, 14.3751, 27.2567, 11.8224, 12.3264, 26.4556, 0.0, 15.0946, 15.9248, 58.8666, 47.8413, 46.4712, 74.1312, 47.8483, 19.2975, 46.4784, 31.5638, 16.1868, 115.7537], [20.0488, 30.0546, 54.8594, 0.0, 22.516, 60.3307, 59.231, 19.9553, 39.7135, 39.3112, 0.0, 39.8304, 34.4818, 59.941, 20.0789, 0.0, 89.0857, 18.2736, 82.3088, 110.9472, 79.5226, 48.9762, 58.7328, 59.6165, 18.1608, 122.351], [17.5038, 17.5787, 19.0159, 36.0366, 18.0491, 40.1952, 19.9709, 50.0902, 0.0, 18.4573, 0.0, 18.8064, 41.7054, 57.6941, 35.3434, 20.1724, 96.444, 106.8498, 88.4775, 151.2576, 56.16, 32.1485, 48.9072, 56.8445, 16.7884, 178.1287], [20.0488, 39.6376, 38.4846, 72.812, 25.087, 60.2928, 96.5827, 19.9553, 19.8406, 38.4885, 0.0, 19.9584, 35.4696, 78.061, 16.4539, 20.0392, 20.0746, 77.7474, 97.055, 165.7344, 79.4102, 41.3577, 187.3488, 103.3032, 26.9028, 501.5493], [20.0488, 35.941, 37.315, 17.2794, 59.0558, 20.0976, 53.9146, 15.9863, 18.3044, 34.518, 39.312, 17.5392, 86.8682, 80.1629, 93.2578, 52.2292, 254.3978, 154.818, 217.14, 203.2992, 86.9357, 20.0928, 58.6776, 59.7643, 20.0596, 198.0707]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

