created: 20230603000934000
creator: Drevarr
modified: 20230705163533038
modifier: drevarr
tags: ChartData
title: 202306030009_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Latedoctor", "Gamora Titus", "Destiny Searider", "Sumatra Satyricon", "Grothez", "Dargon Spiritwalker", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Miphest\u00f6", "Husky Guard", "Grasszanine", "Sakis Ranger", "Be\u00eb", "Morv\u00e4rth", "Morv\u00e4rth", "A Girl Named Jeff", "Johosh Of The North", "Tika Fiery", "Sureting", "Vdddzz", "Bella Sassy", "Xanvias Tsoli", "Zadey Starbolt", "Venomina The Siren", "Ana Larive", "Black Raspberry Pie", "The Fancy Cheese", "Lord Erin The Wise", "Wild Doggy", "Tegan Parker", "Melli Dragonswrath", "Cat Wigglebooty", "Dusknant", "Pamtastic", "N\u00f3b\u00fa", "Blanco Padre Guard", "Hyde En Sikh", "Drevarr Moonwillow", "Koralia Danai", "Aronorf Xideliesi", "Pu Ella", "Arriasa", "Xyntharos", "Air One Com", "Sister Elon\u00edth", "Cyclotechnist Farra", "Kary\u00edna", "Newtype Khan", "Duke Silvver", "Mistwalker Cael", "Smol Gluvs"];
const professions = ["Reaper", "Firebrand", "Ranger", "Soulbeast", "Tempest", "Scourge", "Herald", "Tempest", "Dragonhunter", "Spellbreaker", "Druid", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Tempest", "Firebrand", "Reaper", "Soulbeast", "Firebrand", "Holosmith", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Scrapper", "Weaver", "Dragonhunter", "Tempest", "Berserker", "Scrapper", "Vindicator", "Tempest", "Druid", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Druid", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Spellbreaker", "Vindicator", "Vindicator", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 2, 5, 5, 2, 6, 2, 7, 2], [9, 3, 14, 3, 7, 10], [2, 4, 14, 3, 0, 0, 11, 5, 5, 6], [0, 3, 0, 14, 2, 0, 3, 12, 9, 4, 1, 1, 0, 3], [3, 2, 8, 2, 1, 1, 3, 9, 13, 12], [2, 3, 1, 17, 1, 0, 0, 2, 11, 13, 6], [0, 2, 0, 16, 2, 0, 15, 6, 7, 2, 6], [17, 10, 6, 6, 1, 4, 0, 5, 4, 4], [3, 2, 1, 28, 3, 1, 0, 4, 8, 3, 2, 4, 0, 0], [1, 12, 7, 4, 1, 8, 5, 5, 4, 2, 6, 0, 5, 3], [0, 1, 0, 10, 0, 0, 1, 3, 9, 6, 4, 0, 1, 0, 6, 4, 9, 1, 0, 1, 0, 4, 5], [1, 0, 0, 10, 0, 0, 1, 2, 15, 12, 5, 0, 3, 0, 4, 6, 1, 0, 0, 0, 4, 2], [3, 4, 1, 29, 7, 3, 7, 0, 7, 5], [12, 9, 1, 5, 0, 11, 4, 12, 3, 3, 6], [1, 9, 7, 13, 9, 3, 13, 0, 6, 7], [1, 1, 1, 8, 1, 0, 0, 1, 13, 9, 0, 1, 4, 0, 7, 5, 8, 2, 0, 3, 0, 2, 2], [0, 0, 0, 6, 0, 0, 0, 0, 12, 11, 6, 1, 2, 0, 9, 5, 10, 3, 2, 0, 0, 2, 0], [1, 2, 0, 12, 0, 0, 10, 5, 6, 3, 0, 10, 2, 11, 0, 0, 2, 0, 5, 1], [1, 18, 7, 1, 13, 3, 12, 15], [3, 1, 0, 6, 1, 0, 0, 0, 12, 12, 6, 1, 2, 0, 7, 3, 6, 2, 2, 0, 0, 6, 2], [1, 2, 0, 1, 2, 0, 0, 1, 13, 12, 2, 0, 4, 0, 7, 7, 7, 3, 1, 3, 0, 5, 1], [3, 2, 16, 1, 0, 0, 2, 4, 5, 5, 0, 3, 0, 6, 6, 7, 3, 2, 2, 0, 2, 4], [2, 2, 14, 0, 0, 1, 2, 2, 14, 4, 2, 4, 10, 2, 7, 3, 1, 0, 4, 1], [4, 2, 16, 5, 2, 2, 3, 19, 17, 13], [2, 5, 2, 18, 1, 0, 16, 10, 1, 4, 0, 9, 4, 6, 0, 1, 2, 0, 6, 5], [0, 1, 0, 6, 2, 2, 0, 3, 12, 6, 3, 0, 10, 8, 13, 7, 0, 6, 2, 9, 3], [2, 3, 0, 20, 3, 0, 0, 2, 10, 14, 8, 3, 3, 2, 9, 6, 8, 1], [2, 0, 0, 1, 21, 8, 14, 0, 2, 9, 8, 3, 5, 4, 7, 2, 8, 6], [3, 2, 0, 21, 3, 1, 0, 2, 15, 6, 7, 3, 3, 2, 3, 5, 4, 2, 6, 0, 7, 7], [1, 3, 1, 17, 1, 1, 0, 3, 18, 3, 7, 2, 2, 0, 11, 6, 7, 1, 0, 5, 1, 8, 7], [3, 3, 0, 12, 1, 2, 0, 2, 15, 15, 6, 1, 7, 1, 9, 8, 8, 0, 1, 4, 0, 6, 3], [4, 9, 2, 49, 7, 8, 30], [2, 3, 3, 14, 0, 0, 0, 1, 21, 13, 6, 1, 4, 2, 7, 3, 14, 6, 1, 4, 0, 4, 5], [2, 2, 1, 3, 13, 14, 10, 3, 4, 0, 6, 11, 7, 7, 1, 10, 3, 8, 10], [2, 2, 0, 19, 2, 1, 0, 3, 18, 13, 9, 2, 2, 0, 15, 6, 12, 4, 1, 3, 0, 2, 4], [2, 2, 0, 15, 0, 1, 2, 18, 21, 11, 4, 3, 0, 10, 5, 12, 3, 2, 2, 0, 7, 1], [1, 3, 2, 18, 2, 1, 1, 1, 12, 15, 8, 1, 3, 1, 9, 9, 12, 5, 1, 4, 2, 6, 7], [1, 4, 0, 18, 1, 1, 0, 4, 18, 10, 12, 2, 5, 11, 12, 12, 5, 0, 4, 0, 3, 4], [3, 4, 0, 29, 2, 0, 3, 14, 7, 9, 2, 3, 0, 14, 8, 16, 0, 1, 13, 1, 3, 5], [13, 0, 21, 4, 0, 1, 6, 15, 23, 10, 3, 4, 2, 15, 15, 6], [3, 4, 1, 23, 3, 0, 4, 14, 16, 13, 2, 4, 0, 11, 9, 7, 2, 8, 0, 10, 6], [4, 8, 3, 20, 3, 2, 1, 5, 27, 11, 13, 2, 4, 2, 13, 14, 7, 9], [5, 3, 1, 25, 4, 2, 2, 14, 19, 11, 3, 6, 12, 8, 9, 5, 7, 6, 0, 5, 3], [1, 0, 28, 5, 2, 5, 17, 15, 9, 4, 3, 1, 11, 8, 12, 4, 2, 12, 4, 7, 6], [2, 5, 0, 10, 4, 1, 1, 3, 15, 21, 13, 5, 6, 1, 15, 10, 14, 4, 2, 9, 0, 9, 8], [1, 8, 2, 31, 1, 0, 3, 9, 10, 12, 15, 1, 1, 0, 7, 13, 7, 10, 0, 9, 0, 7, 17], [2, 4, 1, 27, 2, 4, 1, 3, 21, 18, 14, 5, 4, 2, 10, 6, 14, 6, 4, 9, 0, 8, 8], [1, 8, 4, 18, 4, 3, 2, 5, 18, 20, 12, 4, 3, 1, 6, 10, 7, 8, 3, 11, 4, 8, 17], [0, 7, 2, 24, 3, 1, 2, 4, 22, 22, 13, 3, 4, 1, 6, 13, 13, 7, 2, 9, 1, 9, 20], [2, 8, 2, 25, 3, 0, 0, 4, 25, 15, 15, 3, 5, 3, 15, 10, 11, 5, 5, 12, 1, 9, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

