created: 20230626220846000
creator: Drevarr
modified: 20230705163539493
modifier: drevarr
tags: ChartData
title: 202306262208_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Drumina", "Irish Necroman", "Dim Og", "Sumatra Satyricon", "Shaca Booey", "Solus Sanctus", "Tootsie Pop Khorne", "Ateriuz", "Caelon Cai", "Mike The Archmagus", "Rozaalyna", "Tootsie Pop Rocks", "Blancooo Padreee", "Cyclotechnist Farra", "Il Kurai Il", "Arriasa", "No Reserv\u00e9", "Arcanophage Farra", "Ak\u00e1nt\u00f3r", "Gravlyn Isshtail", "Lord Erin The Wise", "Smol Gluvs", "Gavann", "Zaylen Harker", "Xanvias Einzbern", "Grasszanine", "Zadie Miststep", "My Birthday Girl", "Legacy Of Mathus", "Drevarr Moonwillow", "Be\u00eb", "Newtype Khan", "Koralia Danai", "Cat Wigglebooty", "Sygaldry Verdandi", "Rahani Sunray", "Artakama Nahid", "Cyr", "Crusader Siolith", "Tika Fiery", "Regis Hawkesburne", "Johosh The Mighty", "Latedoctor", "Primal Clone", "Bella Sassy", "Ryvalia Fazebringer", "Tegan Parker", "Eibh\u00ebar", "Black Raspberry Pie"];
const professions = ["Reaper", "Druid", "Reaper", "Scrapper", "Soulbeast", "Berserker", "Firebrand", "Reaper", "Berserker", "Reaper", "Weaver", "Reaper", "Scrapper", "Spellbreaker", "Scrapper", "Reaper", "Druid", "Vindicator", "Spellbreaker", "Druid", "Spellbreaker", "Weaver", "Reaper", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Scrapper", "Reaper", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Reaper", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13, 0, 12, 0, 23, 5, 0, 32, 18, 23], [25, 8, 53, 34, 0, 14, 0, 0, 0], [11, 0, 0, 33, 64, 0, 0, 0, 25, 8], [4, 16, 32, 37, 53, 0, 0, 0, 0], [16, 0, 26, 6, 8, 35, 3, 25, 25], [10, 16, 0, 6, 25, 28, 0, 18, 44, 0, 0, 0], [62, 0, 0, 0, 0, 7, 0, 0, 0, 0, 41, 26, 22, 0, 0, 25, 0, 0, 0, 0], [3, 0, 48, 23, 42, 8, 58, 6, 2, 19], [7, 0, 44, 23, 17, 39, 21, 26, 7, 22, 12], [37, 0, 1, 22, 4, 9, 0, 37, 28, 81], [0, 0, 31, 9, 59, 40, 5, 15, 9, 16, 12, 11, 0, 0, 0, 0, 23], [0, 0, 0, 26, 69, 17, 0, 21, 0, 15, 29, 15, 20, 19, 0, 8, 0, 0, 0], [58, 38, 37, 25, 34, 22, 23, 0, 0, 5], [43, 0, 15, 20, 6, 24, 0, 1, 23, 0, 29, 17, 0, 24, 8, 15, 6, 0, 16, 13], [10, 49, 63, 24, 33, 20, 21, 0, 45, 0], [2, 0, 127, 31, 17, 21, 35, 30, 7], [15, 0, 40, 35, 22, 39, 0, 0, 3, 30, 30, 41, 22, 0, 0, 0, 0, 0, 0], [0, 9, 39, 0, 14, 25, 0, 27, 44, 15, 1, 18, 23, 0, 62, 0, 0, 0, 0], [47, 0, 31, 14, 37, 4, 18, 74, 45, 9], [18, 0, 55, 95, 17, 43, 0, 4, 25, 25], [39, 0, 48, 20, 36, 147], [20, 0, 36, 13, 8, 0, 0, 0, 86, 36, 14, 5, 5, 23, 30, 0, 0, 0, 9, 14], [17, 0, 30, 2, 26, 85, 0, 18, 12, 27, 45, 0, 10, 26, 0, 17, 0, 0, 0], [34, 9, 17, 0, 27, 22, 19, 51, 45, 17, 0, 7, 63, 5, 0, 0, 0, 0], [10, 0, 23, 0, 10, 11, 18, 10, 21, 19, 18, 12, 75, 18, 72, 0, 0, 0, 0], [5, 0, 33, 29, 48, 32, 9, 10, 15, 10, 15, 7, 4, 41, 33, 0, 28, 0, 0, 0], [0, 0, 18, 0, 20, 61, 23, 40, 13, 27, 40, 10, 0, 41, 29, 0, 0, 0, 0, 0], [28, 0, 114, 11, 52, 18, 0, 100, 4, 10], [0, 0, 24, 33, 17, 0, 0, 50, 46, 120, 41, 0, 1, 0, 5, 0, 0, 0, 0], [13, 0, 46, 16, 17, 60, 17, 29, 81, 20, 25, 14, 0, 0, 0, 0, 0], [0, 0, 1, 3, 77, 38, 64, 62, 18, 3, 34, 12, 19, 19, 0, 0, 0, 0, 0, 0], [17, 0, 21, 29, 46, 34, 6, 65, 9, 31, 8, 2, 10, 18, 25, 36, 0, 0, 0, 0], [0, 59, 13, 50, 105, 3, 7, 5, 35, 33, 10, 6, 42, 20, 0, 5, 0, 0, 0], [40, 0, 16, 0, 0, 83, 13, 17, 67, 41, 20, 6, 15, 43, 32, 0, 0, 0, 0, 0], [29, 0, 0, 121, 12, 24, 19, 7, 5, 19, 22, 2, 23, 68, 7, 21, 0, 15, 0], [17, 0, 21, 31, 3, 92, 9, 6, 51, 23, 61, 14, 36, 20, 15, 9, 0, 0, 0, 0], [0, 0, 17, 21, 23, 11, 52, 58, 53, 39, 30, 34, 34, 47, 6, 0, 0, 0, 5], [26, 0, 22, 15, 38, 107, 9, 15, 0, 32, 9, 30, 26, 20, 45, 43, 0, 0, 0, 0], [38, 57, 55, 102, 55, 59, 32, 10, 27, 0, 8, 0], [5, 0, 0, 50, 30, 8, 14, 38, 73, 8, 42, 71, 0, 16, 47, 0, 0, 0, 0, 55], [0, 0, 62, 32, 23, 31, 0, 133, 3, 20, 5, 0, 0, 28, 73, 11, 0, 0, 16, 28], [37, 0, 64, 19, 15, 47, 67, 0, 30, 18, 49, 16, 47, 40, 17, 6, 0, 0, 0, 0], [23, 0, 62, 9, 56, 4, 9, 28, 4, 11, 41, 14, 3, 150, 50, 11, 2, 0, 0, 0], [0, 16, 33, 36, 3, 6, 60, 48, 51, 47, 58, 65, 44, 0, 29, 1, 0, 0, 0], [36, 0, 40, 3, 117, 35, 14, 42, 25, 44, 55, 49, 31, 39, 16, 0, 0, 0, 0, 8], [0, 0, 48, 45, 104, 24, 17, 77, 29, 19, 0, 25, 23, 139, 38, 0, 0, 0, 0, 17], [0, 0, 62, 36, 97, 52, 39, 24, 47, 41, 9, 51, 30, 93, 27, 25, 0, 0, 8, 0], [43, 5, 97, 60, 37, 59, 41, 43, 20, 190, 29, 0, 0, 0, 0, 59], [22, 0, 72, 44, 70, 40, 7, 20, 92, 30, 24, 26, 24, 108, 66, 45, 19, 0, 6, 11], [61, 0, 72, 4, 76, 112, 43, 13, 83, 52, 36, 38, 26, 21, 12, 39, 31, 0, 10, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

