created: 20230510220110000
creator: Drevarr
modified: 20230705163529560
modifier: drevarr
tags: ChartData
title: 202305102201_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Demon Sekhmet", "Pyraliis", "Evan Nightroad", "Sumatra Satyricon", "Tootsy Pop Tart", "Smol Gluvs", "Jeckyll Mbs", "River No Hug", "Husky Guard", "Maaaathexxs", "No Reserv\u00e9", "Oops All Beans", "Farra The Bloodless", "Khailerian", "Permanent Dawn", "Lord Erin The Wise", "Be\u00eb", "Kary\u00edna", "Elonith Requiem", "Kosa\u00efr", "Mistwalker Caelon", "Xanvias Einzbern", "Mike The Archmagus", "Dimsnail"];
const professions = ["Scourge", "Spellbreaker", "Berserker", "Vindicator", "Soulbeast", "Scourge", "Scourge", "Berserker", "Scourge", "Dragonhunter", "Scourge", "Herald", "Spellbreaker", "Vindicator", "Vindicator", "Weaver", "Weaver", "Scourge", "Vindicator", "Scourge", "Weaver", "Vindicator", "Berserker", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[307.383, 91.9401, 0.0, 58.8188, 0.0, 2565.641, 41.6552, 0.0, 1341.2, 219.7949], [643.3077, 219.5532, 71.0354, 86.6109, 68.0235, 68.5633, 0.0, 467.4359, 0.0, 0.0, 661.9714, 243.9103, 33.6934, 276.3645, 202.7143, 74.7275], [1560.2308, 1873.617, 536.6104], [461.1489, 124.9319, 66.3481, 159.6, 109.786, 0.0, 710.8462, 122.5862, 0.0, 1478.4857, 315.8205, 43.8066, 235.4766, 384.4048, 40.4663], [695.6538, 271.8085, 137.2943, 128.5461, 149.7412, 80.9672, 17.7101, 464.2308, 317.5862, 0.0, 192.8571, 209.0897, 128.9033, 194.6355, 328.6905, 147.3258], [157.3077, 1187.1277, 64.4469, 85.3413, 113.9529, 114.0961, 0.0, 215.1724, 0.0, 831.2, 356.0513, 118.0071, 221.0654, 428.5952, 116.3989], [420.1538, 583.7872, 92.7684, 41.5256, 45.8353, 35.7489, 0.0, 586.4103, 139.3448, 0.0, 957.3429, 416.5897, 108.9976, 490.7383, 1042.1905, 102.4298], [0.0, 1674.8286, 606.141, 302.7807, 554.4579, 778.6429, 244.25], [715.8846, 445.7234, 126.9755, 230.413, 304.4235, 114.5371, 24.4565, 1116.4359, 0.0, 0.0, 1430.1143, 516.0256, 200.0472, 177.1028], [300.0, 141.7221, 79.9078, 42.7765, 142.3275, 0.0, 1221.4359, 0.0, 608.1429, 250.0385, 148.158, 548.5888, 440.7857, 275.3596], [659.617, 208.5722, 151.0, 247.7882, 110.6354, 76.8768, 1305.0, 281.5517, 0.0, 1227.0286, 485.3846, 103.1958, 664.8879, 391.8571], [598.9231, 356.0851, 128.2589, 217.4334, 258.2706, 248.1594, 0.0, 928.2051, 125.4483, 0.0, 2076.8286, 453.6538, 159.3962, 310.1215, 538.2857, 181.1208], [707.2308, 569.234, 291.951, 149.7065, 364.4941, 162.1834, 0.0, 1761.2564, 0.0, 1820.0286, 526.6282, 102.8514, 318.028, 470.1905, 179.2219], [349.049, 265.5734, 104.2118, 123.5328, 0.0, 1205.6154, 136.9655, 0.0, 2467.8, 833.6538, 212.6651, 469.4112, 1785.9286, 12.4213], [158.2308, 714.8511, 172.6158, 123.1911, 35.2, 187.5044, 0.0, 2123.9231, 408.4483, 0.0, 3541.7143, 1180.859, 248.6792, 946.2336, 563.4762, 87.2584], [367.2766, 325.5041, 600.4676, 278.9176, 177.0284, 0.0, 682.1026, 155.4138, 0.0, 4374.4, 887.2051, 156.5731, 495.1869, 210.1713], [1272.2308, 445.1064, 137.7112, 446.1399, 253.8824, 233.5568, 0.0, 682.3846, 730.0, 0.0, 2169.7714, 731.2564, 345.7146, 283.2897, 1576.4762, 220.2809], [656.2308, 248.9574, 295.1172, 147.942, 183.5059, 203.9476, 2718.359, 1129.4138, 0.0, 1688.4571, 745.0256, 253.3844, 1094.1495, 2127.3095, 208.9438], [1764.9231, 873.1277, 389.4142, 221.587, 135.6, 245.476, 196.3551, 1008.8718, 426.3448, 0.0, 2390.4286, 890.3718, 397.2123, 479.5514, 1299.4524, 316.1994], [1407.5, 1347.1277, 342.9019, 367.471, 556.8235, 380.9956, 42.2319, 2844.6154, 141.2414, 0.0, 3320.5143, 691.0256, 381.717, 837.8505, 1592.6667, 304.4888], [2363.0, 580.0638, 1190.6294, 404.6519, 209.7882, 595.4803, 0.0, 2288.7949, 644.8966, 27.8611, 4110.4857, 680.859, 472.9811, 1051.6449], [1641.0769, 518.5745, 560.1553, 436.7509, 260.8235, 368.1528, 117.5942, 2054.5641, 429.931, 0.0, 5455.9143, 2257.8846, 386.2146, 1590.5794, 568.0952, 428.0871], [1146.4615, 1319.0213, 714.2725, 670.5734, 277.7412, 381.4607, 0.0, 3380.4615, 0.0, 6095.0286, 2598.1795, 361.6604, 845.8318, 3189.619, 405.309], [193.0385, 1215.1277, 788.7657, 633.6519, 325.1647, 526.6747, 0.0, 2517.9744, 0.0, 3474.0, 1564.6282, 434.2264, 2601.7757, 1702.9524, 476.8146], [1520.5, 1690.9787, 794.5368, 449.8328, 365.0118, 576.4061, 0.0, 3266.2308, 318.7407, 5147.6286, 2406.5897, 647.967, 1207.729, 0.0, 917.9551]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

