created: 20230422220129000
creator: Drevarr
modified: 20230705163526411
modifier: drevarr
tags: ChartData
title: 202304222201_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Rey Peltrow", "High Sorcer Baradun", "Tempie Magie", "Miphest\u00f6", "Mac Aaroni", "Tika Sumiko", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[91.3792, 0.0, 160.4806, 75.8313, 58.8555], [0.0, 95.695, 19.8099, 19.9703, 340.3376, 71.148, 0.0, 35.4953, 18.3938, 51.282, 0.0, 20.0897, 19.0688, 0.0, 71.6137, 12.0126, 0.0, 14.7202, 11.0286, 19.9976, 39.9367, 15.0801], [136.488, 179.6735, 96.9228, 0.0, 36.4437, 45.935, 260.0548, 59.6065, 124.2331, 15.926, 92.794], [161.9352, 19.7406, 79.8812, 680.1848, 0.0, 98.3926, 0.0, 0.0, 0.0, 0.0, 113.8376, 39.9634], [75.9696, 0.0, 20.0032, 693.4256, 79.9568, 0.0, 72.1469, 59.9882, 17.4735, 39.935, 37.7598, 152.6889, 36.572, 69.1753, 69.8296, 18.866, 0.0, 27.6438, 37.7996, 77.0474, 39.7109], [20.0394, 205.2512, 19.2159, 60.0096, 674.7904, 127.9696, 149.2654, 52.4345, 59.796, 39.935, 20.0897, 114.9658, 74.8021, 108.704, 19.9416, 20.0542, 4.5646, 40.021, 94.8847, 72.9418, 57.0889], [0.0, 227.1091, 19.8099, 53.3638, 649.2896, 99.5104, 5.4331, 197.0165, 120.0254, 92.466, 99.96, 20.0897, 179.2195, 57.3151, 177.3659, 54.9925, 26.6036, 19.9508, 20.0346, 99.1571, 72.6752, 116.404]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

