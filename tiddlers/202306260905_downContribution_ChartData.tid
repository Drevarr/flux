created: 20230626090515000
creator: Drevarr
modified: 20230705163539102
modifier: drevarr
tags: ChartData
title: 202306260905_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Traidoruns Maximus", "Koralia Danai", "Gamora Titus", "Latedoctor", "Yngvar The Burdened", "Elonith Requiem", "Charr Surethang"];
const professions = ["Scourge", "Firebrand", "Dragonhunter", "Dragonhunter", "Reaper", "Scourge", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[277.7013, 0.0, 766.25, 26.5011, 124.2154, 0.0, 0.0], [0.0, 20.8788, 11.3193, 13.828, 0.0, 50.9615, 0.0, 46.8537, 28.0762, 35.1132, 77.3194, 0.0, 0.0, 3.4439, 64.7383, 33.8182, 0.0, 74.4167, 33.1471, 61.7769, 0.0, 3.3452], [60.4946, 107.9128, 60.3247, 0.0, 342.0833, 34.4861], [0.0, 0.0, 0.0, 52.9244, 189.319, 0.0, 0.5962, 0.0, 58.5333, 170.6604, 260.7639, 172.0365, 20.7012, 0.0, 53.4966, 203.961, 0.0], [11.8476, 60.3645, 118.906, 412.7403, 58.6047, 783.7083, 86.8017, 74.8308, 0.0, 122.2262], [0.0, 163.75, 70.2451, 430.5366, 254.1048, 451.6038, 754.0556, 197.3212, 47.6768, 0.0, 189.1074, 286.4545, 0.0, 1200.4583, 105.5394, 104.8538, 0.0, 167.4762], [195.1792, 57.5082, 389.5962, 0.0, 504.878, 100.1143, 1067.3396, 874.7083, 0.0, 39.5693, 0.0, 66.0748, 562.0235, 642.8571, 75.186, 1812.3333, 212.0426, 315.6846], [0.0, 102.5152, 138.2437, 0.0, 219.4231, 0.0, 656.4878, 307.3143, 1128.566, 1133.1944, 0.0, 63.5255, 0.0, 200.9299, 616.6275, 1355.1818, 0.0, 213.0417, 133.8294, 169.9385, 0.0, 73.5476]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

