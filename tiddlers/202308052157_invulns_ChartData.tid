created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Veio De Fralda", "Melody Phoenixstorm", "Isis Urd", "Masky De Googlieyes", "One Bad King", "Vee Nemesis", "Drevarr Moonwillow", "Sub Train", "Galrath Doomdragon", "Xanvias Einzbern", "Daphne Agla\u00e9", "Vee Usagi", "Rina Of Theros", "Hyde En Sikh", "Thetatia", "One Bad King", "Jimbo One Eye", "Kat From Shadows", "Newtype Khan", "K\u00e1 Otik", "Permanent Dawn", "Civil Rules", "Keypek The Drunk", "Zaedy Zae", "Gabe Malhorn", "Kumengo", "Ryntha Bloodfang", "Blancooo Padreee", "Mistwalker Cael", "Venomina The Sly", "Lucas Might", "Eaffi", "Bella Sassy", "Legacy Of Mathus", "Crabbedmermaid", "Ajja Leu", "Crusader Siolith", "Tegan Parker", "Glorious Gluvs", "Tribal S", "Rahani Sunray", "Konoko K", "Kosair", "Revitiel", "Kisumaiassu", "Koralia Danai", "Tootsie Pop Rocks", "Miphest\u00f6", "Minnie Darley", "Cedryn X"];
const professions = ["Necromancer", "Scrapper", "Untamed", "Mirage", "Guardian", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Berserker", "Scourge", "Reaper", "Reaper", "Chronomancer", "Scourge", "Dragonhunter", "Scrapper", "Reaper", "Spellbreaker", "Vindicator", "Weaver", "Berserker", "Scrapper", "Druid", "Firebrand", "Firebrand", "Berserker", "Berserker", "Vindicator", "Druid", "Tempest", "Tempest", "Firebrand", "Berserker", "Firebrand", "Tempest", "Firebrand", "Tempest", "Berserker", "Druid", "Chronomancer", "Tempest", "Dragonhunter", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31, 0, 0, 25], [25, 0, 0, 0, 0, 0, 0, 34], [4, 3, 13, 2, 0, 17, 0, 0, 7, 14], [60, 0], [0, 21, 0, 0, 0, 25, 0, 0, 13, 5], [0, 14, 0, 1, 0, 0, 0, 0, 13, 0, 0, 37], [0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 11, 13, 14, 0, 0, 0, 0, 0, 10], [0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 26, 20, 3, 4, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 7, 10, 0, 0, 25, 5, 8, 0, 0, 8], [0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 42, 18], [0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 32, 9, 9, 0, 0, 0, 9], [27, 0, 0, 23, 0, 0, 29], [24, 0, 7, 0, 0, 0, 52], [0, 0, 0, 0, 0, 1, 0, 49, 0, 0, 4, 0, 0, 1, 0, 19, 0, 1, 0, 9], [0, 0, 22, 0, 13, 21, 0, 11, 0, 0, 0, 20], [33, 19, 0, 4, 10, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 13, 41], [0, 14, 0, 0, 80], [0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 40, 1, 9, 17, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 0, 7, 30, 13, 6, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 33, 0, 0, 3, 54, 4, 4], [0, 0, 2, 14, 53, 3, 0, 14, 0, 0, 0, 19], [0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 12, 22, 30, 14, 0, 0, 0, 0, 0, 12], [0, 0, 0, 0, 0, 0, 34, 0, 0, 7, 2, 11, 25, 0, 0, 0, 0, 36], [0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 22, 21, 18, 2, 0, 0, 0, 0, 0, 18], [0, 0, 0, 16, 0, 0, 14, 10, 45, 26, 0, 0, 9], [26, 37, 18, 0, 22, 20], [0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 14, 14, 6, 20, 0, 5, 15, 0, 0, 14], [0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 41, 14, 14, 16, 0, 10, 0, 0, 16], [0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 30, 23, 19, 12, 0, 0, 0, 0, 0, 23], [35, 0, 0, 43, 0, 0, 57], [0, 14, 4, 0, 0, 120], [0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 31, 41, 9, 0, 0, 0, 0, 0, 34], [0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 57, 19, 4, 21, 0, 0, 0, 0, 14], [0, 0, 0, 0, 26, 0, 15, 40, 15, 4, 0, 0, 0, 44], [15, 20, 0, 0, 0, 0, 0, 0, 19, 0, 0, 43, 53], [0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 40, 17, 34, 15, 0, 0, 0, 0, 0, 13], [0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 21, 23, 39, 0, 0, 0, 0, 0, 53], [0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 3, 50, 39, 6, 0, 0, 19, 0, 0, 26], [0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 24, 13, 14, 20, 0, 27, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 30, 13, 31, 27, 0, 15, 15, 0, 25], [0, 5, 0, 0, 7, 41, 15, 57, 0, 0, 0, 0, 0, 39], [0, 40, 0, 0, 32, 21, 11, 16, 0, 0, 0, 0, 0, 48], [0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 3, 38, 61, 40, 0, 9, 15, 0, 0, 9], [0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 13, 42, 47, 13, 0, 0, 0, 0, 0, 18], [0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 47, 33, 19, 24, 0, 0, 0, 0, 0, 58], [0, 0, 0, 0, 0, 0, 38, 0, 0, 51, 24, 34, 25, 0, 0, 0, 0, 0, 37], [0, 17, 0, 0, 0, 0, 11, 0, 59, 50, 52, 29], [17, 0, 0, 0, 2, 30, 0, 0, 44, 16, 40, 53, 0, 37, 0], [0, 15, 0, 0, 0, 0, 0, 0, 10, 0, 0, 30, 47, 111, 19, 0, 8, 0, 0, 0, 26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

