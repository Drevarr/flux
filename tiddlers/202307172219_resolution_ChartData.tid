created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Newtype Khan", "Drumina", "Panacea Vandrish", "Tribal S", "Belvyn Brightblade", "Mmathuss", "Sygaldry Verdandi", "Sub Train", "Crusader Siolith", "Solus Sanctus", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Spellbreaker", "Druid", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 173.5315, 181.4938, 244.2806], [0.0, 160.8545, 86.3797, 30.8288, 184.599, 31.9232, 20.6197, 66.6986, 64.3541, 0.0, 0.0, 29.1686, 49.296], [0.0, 264.4022, 81.4531, 46.468, 205.7937, 29.7216, 47.3279, 137.9657, 105.8534, 0.0, 17.1757, 92.7725, 39.1334], [297.7128, 0.0, 76.7942, 338.8829, 361.1501], [0.0, 329.2183, 143.8567, 87.0937, 151.7814, 181.4944, 60.6415, 168.3455, 27.3226, 0.0, 12.5734, 133.8922, 61.2029], [0.0, 795.1826, 216.442, 193.3319, 471.9809], [538.6144, 342.2194, 229.1494, 395.9035, 266.5776], [51.0416, 1480.8893, 288.3703, 0.0, 824.8246, 487.7678, 0.0, 154.4909, 253.3013, 245.5699], [173.4016, 727.9952, 333.5308, 355.4754, 621.4833, 330.1024, 312.0965, 522.625, 205.3488, 0.0, 71.0189, 40.0056, 238.0618], [254.2903, 1842.9109, 444.872, 143.6282, 897.2423, 391.0592, 204.9389, 604.6277, 408.8074, 0.0, 94.7219, 294.1171, 393.5338], [182.6223, 1648.4626, 610.2415, 168.0756, 1128.7887, 733.2704, 358.2067, 1034.5142, 501.1714, 249.273, 366.431, 274.0858], [196.5189, 2375.6674, 920.6173, 458.7475, 1289.4582, 732.1696, 258.7207, 854.9761, 229.4064, 39.5712, 201.3254, 512.4768, 406.5024], [282.8701, 2392.6619, 857.2284, 387.9221, 1149.7555, 904.72, 342.2549, 1169.282, 540.5227, 29.9088, 236.3085, 637.5576, 351.6701]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

