created: 20230701101710000
creator: Drevarr
modified: 20230705163540364
modifier: drevarr
tags: ChartData
title: 202307011017_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00f9gly", "Govinda Ektar", "Trodek", "Sister Elonith", "No Reserv\u00e9", "Elonith Requiem", "Dizzy Bunnyhopper", "Atros Shroudkeeper", "Latedoctor", "Legacy Of Mathus", "Charr Surethang"];
const professions = ["Catalyst", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Scourge", "Holosmith", "Vindicator", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[91.0217, 187.1306], [71.5128, 19.0, 137.9747, 56.1274, 0.0, 0.0, 0.0, 52.0541, 0.0, 44.9762, 1.0, 0.0, 132.0], [0.0, 197.5745, 0.0, 232.5191, 0.0, 75.5952, 124.1852, 62.8837, 0.0, 304.6875, 108.75], [12.0865, 16.7778, 409.8421, 186.9615, 423.6944, 165.5443, 174.2972, 70.4351, 156.9362], [249.9618, 26.5714, 97.9877, 0.0, 325.5, 208.3438, 387.1667], [197.087, 294.3758, 0.0, 214.381, 272.2593, 31.2558, 205.2656, 138.8438, 472.8], [0.0, 394.6529, 0.0, 298.3827, 294.6744, 130.875, 65.875, 405.925], [80.6304, 306.8917, 95.0571, 93.381, 325.9753, 188.093, 65.8438, 475.5781, 388.9583], [17.4519, 0.0, 185.7544, 35.859, 82.9722, 399.2405, 82.5755, 12.8378, 6.4468, 161.8696, 183.4586, 59.7143, 105.9762, 38.8519, 434.3721, 64.7969, 210.8438, 386.15], [53.2222, 12.2278, 205.5142, 49.4432, 149.5319, 63.2609, 433.0987, 0.0, 225.5238, 234.1235, 178.4219, 190.9844, 478.175], [0.0, 0.0, 142.0702, 50.4744, 268.25, 504.2911, 325.2028, 34.5324, 213.8511, 124.8043, 496.1815, 0.0, 98.4524, 157.4321, 566.9219, 210.2188, 973.1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

