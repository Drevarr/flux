created: 20230220220953000
creator: Drevarr
modified: 20230705163519748
modifier: drevarr
tags: ChartData
title: 202302202209_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Aveliad Frostmoon", "Kira Dragonblaze", "Mike The Archmagus", "Ch\u00e4\u00ef\u00ef", "Smol Gluvs", "Sumatra Satyricon", "Skye Nightroad", "Ace Hammers", "Husky Guard", "Veron Blackburn", "Tootsie Pop Bringer", "Dark Sidiuz", "Rina Of Theros", "Jeckyll Mbs", "Smol Daddy Tika", "Demon Sekhmet", "Legacy Of Mathus", "Be\u00eb", "Xyntharos", "Lord Erin The Wise", "Sp\u00edcy Cheese", "My Birthday Girl", "Mistwalker Caelon", "Jupi Jupi Jupi", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scrapper", "Dragonhunter", "Weaver", "Scrapper", "Scourge", "Soulbeast", "Scrapper", "Vindicator", "Dragonhunter", "Herald", "Scrapper", "Scourge", "Scourge", "Berserker", "Berserker", "Berserker", "Berserker", "Scourge", "Vindicator", "Weaver", "Berserker", "Scrapper", "Vindicator", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[58.0, 37.5497, 86.6422, 88.6667, 146.3793, 258.3208, 82.5057, 0.0, 217.4948, 70.6621, 91.4412, 44.2045, 84.75, 0.0, 309.1, 241.1609, 473.8974, 114.963, 132.2051, 63.3854, 81.7975, 77.3122, 22.6556, 102.8017, 0.0, 244.6792, 280.4194, 304.964], [274.0769, 219.6857, 153.3155, 394.3704, 102.7241, 106.2874, 323.3711], [398.3077, 202.7281, 173.3304, 158.963, 86.8966, 290.6792, 185.1839, 904.7429, 335.5979, 176.931], [953.9815, 310.3103, 607.0377, 796.1609, 496.6571, 689.3402, 12.3931, 968.9118, 843.7273, 277.6364, 188.5556, 2516.42], [612.2708, 445.3544, 713.2624, 358.9444, 526.4215, 31.7484, 1064.6226, 2425.4839, 1230.1982], [50.4, 30.6608, 88.2524, 275.6296, 423.431, 303.6792, 116.046, 142.8286, 325.8041, 23.7103, 578.598, 195.4205, 67.1364, 55.4667, 85.74, 324.5287, 899.6667, 272.7407, 1451.1795, 90.2292, 29.2658, 141.5475, 54.9333, 334.4132, 15.1509, 411.1509, 182.9355, 650.9369], [102.7231, 189.6842, 135.8976, 191.7407, 144.2414, 234.0189, 212.5287, 17.9714, 227.9485, 90.2552, 259.3431, 149.9318, 44.5966, 27.5333, 253.1379, 254.2564, 138.7778, 489.7692, 161.4583, 328.1772, 130.6199, 297.6667, 145.8512, 16.2767, 106.1321, 560.1935, 161.2613], [58.8462, 141.2442, 472.954, 843.7778, 711.7241, 246.0943, 338.3563, 0.0], [144.4769, 65.152, 222.0215, 69.4444, 85.3966, 41.9245, 192.7586, 0.0, 308.6495, 7.269, 596.2255, 875.1136, 124.7443, 185.8222, 609.4598, 298.1795, 375.1481, 1074.1026, 50.75, 451.6203, 65.3484, 122.8111, 91.5785, 6.3019, 325.9057, 459.9355, 653.8739], [34.8308, 172.6111, 319.4647, 169.1667, 595.4828, 323.3585, 176.5402, 160.4571, 447.6082, 44.8621, 443.0588, 170.2159, 89.9148, 50.7333, 167.86, 508.3218, 248.8205, 207.3519, 758.4615, 33.6042, 145.0759, 130.5113, 203.0111, 316.5455, 3.2013, 251.7925, 575.129], [321.4308, 105.6988, 316.337, 205.6322, 718.5979, 166.3793, 852.5196, 511.6591, 123.9545, 126.3778, 197.34, 975.7701, 899.5641, 317.6111, 2390.9231, 96.2188, 203.2152, 199.7602], [69.3158, 157.8723, 442.7963, 109.2414, 0.0, 377.0345, 519.7113, 257.269, 530.6471, 255.8636, 258.8352, 0.0, 23.9, 968.4483, 413.9231, 378.3889, 2122.1282, 274.6042, 630.0759, 267.8009, 139.4778, 478.9504, 7.0189, 516.7358, 974.9032, 1041.3514], [216.9846, 275.1754, 504.046, 380.9655, 0.0, 0.0, 131.1429, 457.3402, 128.2966, 435.9706, 585.75, 124.1932, 38.1111, 112.4, 0.0, 199.0256, 200.537, 765.8462, 174.7396, 155.9747, 98.5882, 255.9778, 217.9008, 47.9623, 0.0, 0.0], [62.1846, 104.2061, 275.0653, 1040.0741, 642.5, 288.9811, 238.4368, 210.5714, 778.299, 150.4621, 741.3431, 403.2273, 160.5739, 38.2222, 286.72, 436.6782, 1438.5385, 247.4074, 2151.4103, 140.1562, 401.9114, 173.5928, 126.0444, 48.281, 42.717, 260.6792, 544.0, 974.1351], [144.0923, 177.2939, 570.7706, 456.0, 226.0345, 244.6981, 308.1839, 246.7714, 57.9724, 1196.7647, 21.8295, 294.5966, 109.8222, 398.78, 753.4368, 120.8462, 625.3889, 222.3438, 111.2152, 374.2081, 136.1667, 233.9504, 4.9811, 31.6038, 47.9032, 957.8108], [375.2615, 267.8816, 524.1114, 161.7963, 434.1724, 180.0377, 261.1379, 273.8857, 860.0, 64.4759, 1179.7157, 748.375, 22.4375, 0.0, 314.88, 555.6667, 2135.6923, 527.6146, 564.962, 359.0271, 518.8444, 386.8099, 61.2013, 535.1887, 1180.3874], [155.7538, 256.3567, 587.8226, 492.1296, 167.2759, 64.2642, 0.0, 0.0, 1155.0412, 204.0276, 370.7843, 668.2841, 259.0852, 89.5333, 0.0, 1388.7011, 451.1538, 0.0, 1112.0256, 538.0417, 122.5823, 305.7421, 358.5667, 1119.9421, 20.1635, 1404.9057, 0.0], [64.0923, 206.0058, 497.2888, 656.5, 438.9483, 590.8302, 135.046, 0.0, 1150.7835, 173.6138, 1070.1078, 485.1364, 270.0057, 56.9333, 274.4, 1381.977, 234.7593, 1659.4359, 54.3125, 1206.0506, 441.1222, 493.4111, 544.9339, 0.0, 273.9245, 490.0968, 1699.1171], [227.4635, 593.735, 1066.5556, 802.8966, 210.3396, 416.9885, 0.0, 894.9691, 224.8966, 1088.2745, 633.8068, 376.0511, 195.4222, 230.72, 1009.1494, 553.0256, 896.3333, 189.5128, 205.5625, 676.6203, 464.8552, 364.6444, 695.4298, 51.9119, 725.1509, 937.8065, 1205.6847], [348.7077, 169.1915, 699.0824, 258.6111, 66.7931, 476.7925, 288.0345, 111.4857, 619.7629, 153.7241, 442.4902, 520.1477, 535.9545, 225.4444, 1051.12, 391.7241, 3488.2051, 278.5741, 1264.4615, 564.75, 707.8608, 692.0407, 195.6667, 338.0579, 62.4969, 603.3585, 979.4194, 1401.7477], [190.4769, 393.6886, 702.1106, 502.5741, 647.0862, 295.3962, 478.7011, 110.5143, 992.8351, 140.0966, 730.3725, 458.0227, 88.4943, 192.5333, 49.98, 1545.0805, 350.6481, 333.5128, 1106.8646, 810.1899, 485.9683, 859.2778, 549.9339, 42.9748, 481.6226, 262.5161, 1793.027], [41.0154, 334.8918, 831.7468, 334.463, 561.2414, 222.4717, 249.2989, 594.8571, 874.3196, 169.0621, 1694.2745, 815.3409, 391.5057, 168.9556, 1709.1379, 306.2564, 385.7222, 882.1282, 337.9583, 234.1646, 502.2534, 514.4778, 871.405, 7.2579, 146.8491, 434.3226, 0.0], [337.2308, 681.6784, 608.3504, 156.8889, 1448.6552, 253.0189, 542.8736, 0.0, 725.6598, 565.6897, 861.3824, 487.9886, 364.1705, 416.6, 256.9, 585.2299, 2028.5897, 705.3704, 797.2308, 392.0938, 0.0, 494.6878, 290.5222, 494.6529, 426.3396, 615.7547, 751.8065, 1622.8378], [574.0923, 453.5804, 815.4536, 1549.6296, 626.7586, 347.5862, 295.9714, 1472.0722, 175.7724, 1015.9902, 1247.5227, 304.1193, 114.4444, 640.2, 441.6092, 0.0, 794.0741, 3649.2564, 555.8021, 318.6329, 737.8371, 243.3889, 833.9835, 19.1698, 310.5472, 748.7419, 2042.1532], [396.8923, 447.943, 1102.4944, 774.463, 616.931, 176.8491, 1270.2989, 497.3429, 1835.0206, 573.2759, 1652.2647, 1188.7727, 791.1534, 413.7556, 281.0, 926.9425, 682.7179, 0.0, 2195.0769, 518.4896, 586.3291, 413.543, 335.9222, 635.4793, 9.6604, 424.5849], [237.2462, 411.674, 1028.1114, 1222.3148, 532.431, 1442.6981, 943.3678, 249.1429, 1365.0412, 230.3172, 1250.7647, 673.4886, 457.1591, 208.7778, 1475.8, 1413.6437, 1858.3846, 1565.7037, 2218.359, 683.2188, 323.2911, 815.8054, 237.1889, 994.8595, 47.6352, 1005.9245, 2646.6452, 2887.9459]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

