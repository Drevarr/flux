created: 20230204220933000
creator: Drevarr
modified: 20230705163518682
modifier: drevarr
tags: ChartData
title: 202302042209_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Bubblesparklepuff", "Mike The Archmagus", "Manuel Radiador", "Tootsie Pop Bringer", "Skyra Lightmoon", "Kosa\u00edr", "Mistwalker Caelon", "Aronorf Xideliesi", "Daddys Lil Orchid", "Sofya De Meme", "Lord Erin The Wise", "Cat Wigglebooty", "Domina Flagbringer", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Tempest", "Scrapper", "Scrapper", "Herald", "Scrapper", "Vindicator", "Firebrand", "Vindicator", "Weaver", "Weaver", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[80.5862, 50.8787, 17.346, 558.7161, 599.05], [350.6303, 116.7048, 27.4061, 71.3822, 120.0123, 207.861, 18.1171, 83.8312, 22.2215, 196.148, 183.4001], [1038.4051, 310.4228, 57.3888], [355.1255, 114.1377, 0.0, 320.4765, 46.2336, 25.1757, 21.0945, 289.4989, 303.0959], [881.4796, 176.5382, 98.088, 213.8154, 139.2017, 201.492], [99.0408, 232.4746, 386.4825, 38.1696, 288.4003, 0.0, 445.3615, 435.0754], [0.0, 0.0, 0.0, 0.0, 0.0, 552.366, 71.5008, 262.1701, 14.406, 593.4449, 619.0469], [892.1048, 177.723, 86.2589, 203.3814, 142.9766, 338.136, 46.5024, 0.0, 0.0, 457.586, 646.7569], [883.9316, 271.9162, 82.511, 280.3947, 146.437, 541.944, 90.4243, 0.0, 22.3807, 616.7826, 84.5583], [1121.7717, 338.8585, 82.3354, 280.5603, 404.2353, 593.1855, 59.351, 169.3758, 16.4028, 246.1574], [1100.93, 313.1874, 83.5066, 244.2895, 237.8225, 146.1975, 52.416, 245.0348, 15.3737, 569.5515, 617.9042], [1322.8324, 350.3118, 185.2253, 505.9691, 493.1041, 876.606, 144.6682, 182.0296, 61.3725, 1086.3153, 955.8518], [2294.2172, 916.2608, 197.7571, 715.8096, 937.2911, 1518.138, 147.1411, 642.8374, 86.387, 1430.8245, 1491.4831], [2766.6282, 938.3774, 311.0122, 1011.607, 815.7059, 1679.3895, 289.2288, 653.2504, 19.012, 1663.0904, 1813.7188]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

