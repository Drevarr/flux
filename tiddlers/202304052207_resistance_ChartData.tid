created: 20230405220700000
creator: Drevarr
modified: 20230705163524549
modifier: drevarr
tags: ChartData
title: 202304052207_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ara Icedottir", "Morton Saltbringer", "Zaylen Harker", "Eibh\u00ebar", "Kiloak", "Ryvalia Fazebringer", "Smol Daddy Tika", "Raelyn Sunray", "Sygaldry Verdandi", "Koralia Danai", "Sister Elon\u00edth", "Johosh The Great", "Bella Sassy", "Grasszanine", "Xanvias Tlesel", "Newtype Khan", "Blancooo Padreee", "Solus Sanctus"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.6325, 26.6323, 29.4832, 94.0837, 0.0, 6.376, 3.3327, 28.8204, 24.649, 6.6743], [0.0, 34.1411, 10.2001, 5.537, 20.976, 1.4045, 4.1828, 48.6864, 47.3078, 5.5448, 11.0469, 0.0, 37.7208], [36.9036, 11.9209, 89.3376, 10.0918, 2.5542, 30.3421, 26.9028, 6.4288, 26.8789], [8.262, 0.0, 19.8458, 34.8975, 6.6176, 11.6547, 0.0, 1.6808, 14.1846, 4.9862, 8.2844, 0.0, 43.3363, 33.2644, 6.9326, 22.5492, 4.7124, 6.9206, 74.3904, 83.1519, 6.9649, 17.298, 13.8617, 6.9748, 36.9396], [7.0456, 7.0699, 21.4576, 67.4685, 7.4241, 0.0, 5.8687, 7.6422, 9.6275, 6.3107, 59.4277, 36.8421, 7.7106, 38.6308, 7.7616, 7.6811, 30.8448, 73.3028, 7.7763, 14.0616, 15.4019, 0.0, 51.5592], [11.0848, 7.6877, 15.0774, 45.5063, 7.4655, 5.203, 9.3662, 16.4317, 19.035, 6.0525, 13.4265, 5.5573, 48.7001, 26.1092, 8.7859, 40.7284, 11.0326, 18.7083, 56.2464, 72.0112, 13.7043, 25.1658, 14.7646, 0.0, 30.132], [0.0, 16.9541, 67.7309, 34.9906, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1325, 0.0, 16.898, 36.3548, 100.7829, 0.0, 44.9236, 0.0, 19.2406, 68.4936, 85.2509, 50.2191, 8.5374, 14.9239, 8.475, 87.8292], [20.4944, 0.0, 12.9619, 96.131, 21.776, 0.0, 29.5886, 36.9702, 0.0, 56.9262, 0.0, 138.4376, 30.448, 7.7563, 42.7386, 0.0, 15.21, 63.0504, 69.2663, 0.0, 33.5358, 12.9057, 0.0, 44.64], [23.0647, 10.6163, 16.8572, 92.9669, 42.5388, 3.7651, 11.1298, 22.9811, 30.6534, 7.7146, 29.8136, 0.0, 54.5747, 61.8094, 31.0024, 83.467, 16.133, 7.5289, 64.26, 94.2926, 11.1573, 63.5562, 26.9268, 11.186, 49.7736], [23.5926, 20.2152, 115.4875, 9.2026, 11.598, 19.266, 15.1855, 15.5664, 0.0, 73.1315, 98.3367, 35.9286, 7.619, 127.8662, 11.8457, 11.7878, 117.0288, 64.7455, 5.9731, 22.8222, 31.2818, 0.0, 31.4712], [117.0675, 102.9142, 20.4547, 87.9244, 35.2414, 33.6901, 210.7728, 141.7619, 23.7572, 40.7898, 31.4411, 0.0, 92.4048], [36.9954, 7.3674, 14.8759, 101.9007, 55.5258, 0.0, 0.0, 60.3653, 56.118, 38.9805, 46.9018, 0.0, 130.0939, 60.5915, 7.9851, 72.0176, 26.0568, 32.2452, 111.132, 134.0118, 2.0061, 33.3126, 12.9057, 0.0, 53.3448], [32.9103, 15.3525, 15.8833, 95.9449, 0.0, 0.0, 6.3874, 40.2242, 49.0116, 8.0282, 73.4691, 123.7936, 52.9034, 57.8406, 84.1662, 0.0, 12.7003, 102.06, 157.1006, 0.0, 38.502, 27.8828, 11.8177, 110.7072], [0.0, 0.0, 0.0, 116.5111, 0.0, 0.0, 0.0, 31.0086, 33.3606, 76.5498, 60.614, 0.0, 144.9934, 0.0, 0.0, 128.8276, 0.0, 0.0, 202.9104, 161.7829, 30.3163, 77.9526, 19.6507, 0.0, 35.712], [16.8682, 0.0, 70.3837, 57.8833, 25.4571, 0.0, 0.0, 53.2363, 16.2714, 0.0, 46.1487, 0.0, 163.2985, 71.3244, 35.3725, 57.8588, 19.3301, 0.0, 61.992, 264.7944, 32.142, 67.0158, 29.9009, 0.0, 169.8552], [33.1168, 0.0, 20.9539, 176.1626, 4.5703, 6.9436, 25.8016, 46.7447, 48.2502, 20.5094, 25.139, 14.9345, 138.0119, 37.6794, 20.6149, 71.231, 9.203, 37.1885, 205.7832, 138.2098, 6.8747, 44.3052, 79.8243, 0.0, 69.3036], [68.2533, 120.8293, 0.0, 169.09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 123.7084, 0.0, 0.0, 0.0, 0.0, 97.5721, 141.5232, 156.4547, 95.5921, 146.5866, 66.5999, 21.1876, 143.2944], [53.7719, 84.3586, 15.9505, 270.2462, 19.3358, 0.0, 53.8855, 25.5024, 17.8506, 13.6102, 80.0136, 0.0, 183.9875, 124.5323, 19.4709, 21.5004, 18.7942, 36.8843, 229.9752, 200.8562, 7.7988, 70.8102, 51.676, 23.1353, 74.4372]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

