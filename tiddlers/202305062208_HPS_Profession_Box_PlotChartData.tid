created: 20230506220820000
creator: Drevarr
modified: 20230705163528864
modifier: drevarr
tags: ChartData
title: 202305062208_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Catalyst_Dps', 'Chronomancer_Support', 'Daredevil_Dps', 'Dragonhunter_Dps', 'Druid_Support', 'Firebrand_Dps', 'Firebrand_Support', 'Guardian_Dps', 'Herald_Dps', 'Reaper_Dps', 'Renegade_Dps', 'Scourge_Cele', 'Scourge_Condi', 'Scourge_Dps', 'Scrapper_Cele', 'Scrapper_Dps', 'Scrapper_Support', 'Soulbeast_Dps', 'Spellbreaker_Cele', 'Spellbreaker_Dps', 'Spellbreaker_Support', 'Tempest_Dps', 'Tempest_Support', 'Vindicator_Dps', 'Vindicator_Support', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[15.8618, 2.2561, 0.2769, 2.3025, 3.9085], [12.189, 6.8516, 0.0625, 7.9547, 1.123, 9.0929], [10.4497, 5.1111, 0.7179, 20.541, 0.2745, 28.3833, 8.8236, 5.8228, 21.8974, 7.8701, 4.2569], [3.1991], [5.0676, 54.8808, 56.5533, 17.4063, 78.0773, 11.3011, 6.2674, 33.6947, 4.9924, 1.127, 6.4615, 4.0823, 43.2243, 38.0217, 5.7253, 0.9724, 5.4332, 0.1625, 2.7269, 21.6013, 8.8811, 11.295, 2.8283], [3267.1956, 2161.2206, 789.8274, 923.2508, 3433.4136, 522.6927, 1194.9687, 1709.5044, 276.3772, 571.3299, 1665.7814, 68.2858, 56.8302, 1966.9754, 393.1732], [43.2944], [121.8068, 20.0029, 98.6597, 61.3265, 97.3451, 59.1757, 66.2326, 21.1272, 62.0144, 143.0383, 78.4106, 58.931, 4.2439, 25.7136, 36.2704, 56.5991, 24.7515, 50.106, 2.5141, 4.1136, 9.7862, 10.2808, 14.6824, 37.5669, 10.5876, 10.9382, 15.3085, 27.3111, 106.5787, 66.1165, 54.0499, 230.0183, 119.8077, 227.0213, 22.5995, 92.2077, 392.7164, 14.2207, 2.1473, 13.035, 8.2374, 10.8199, 21.9083, 41.8777, 11.1796, 61.3338, 13.7152, 27.2681, 24.569, 7.1723, 25.4065, 10.427, 24.0054, 17.4841, 12.9434, 175.6191, 22.382, 43.5402, 21.4377, 22.4096, 62.5406, 52.6064, 76.1782, 38.7668, 9.7935, 200.5322, 18.2178, 57.0334, 20.8291, 10.342, 11.0673, 14.1994, 5.5638, 46.1387, 1.283, 18.4925, 60.7328, 29.3757, 11.6843, 35.3416, 85.9577, 45.4371, 84.5487, 29.5083, 31.2887, 234.1243, 10.5312, 2.335, 7.0221, 10.8207, 9.7095, 91.9187, 23.8842, 43.4456, 81.2063, 12.5689, 365.6284, 33.163, 2.1728, 14.0445, 1.5052, 81.5115, 4.1879, 58.1445], [4.2668], [0.7794, 1.9061, 0.7114, 0.0987, 2.8526], [33.7055, 3.1674, 2.4426, 4.6513], [13.908, 16.6823, 10.1799], [0.4464], [84.3049], [0.8061, 12.6506, 16.6885, 0.1248, 0.6875, 0.5676, 1.3702], [21.6506], [33.9313, 199.226, 1.0302, 9.5867, 81.8512, 47.0231, 8.4588, 3.2116, 11.3137, 59.28, 3.0241, 1.2945, 8.4882, 7.8616, 2.8066, 4.3754, 2.2704, 1.3137, 66.3609, 25.6127], [3725.4522, 2002.8543, 1077.6744, 616.1475, 25.3952, 3441.774, 1174.0803, 514.3875, 388.4494, 185.3774, 1140.1627, 810.5484, 406.6436, 37.1076, 1617.079, 1493.0202, 450.0507, 39.916, 277.9728, 86.58, 0.7978, 402.1219, 456.7974, 184.53, 1732.2349, 1655.0315, 659.0874, 30.7935, 255.6547, 67.5676, 330.8974, 1741.5762, 1672.4644, 618.0794, 350.5784], [10.9698], [2.7328, 2.1274, 109.8954, 16.1262, 3.4235, 82.2392, 26.0907, 7.2755, 6.0312, 280.7661, 8.9124, 21.3659, 3.2744, 72.9117, 80.3849, 92.7136, 1.2262, 60.6286, 2.452], [38.4738, 14.9776, 13.6021, 7.7889, 89.3013, 2.1364], [70.2689, 1.2656], [6.3097], [204.2167, 114.003, 1914.8874, 116.7186, 13.2137, 1292.9647, 47.8663, 36.2114, 636.1386, 14.9141, 58.6607, 561.1433, 11.1019, 758.8716, 5.8113, 288.7636, 0.5551, 26.8156, 587.6607, 12.1297, 4.6714, 836.8178, 36.4781, 28.4007, 113.8058, 412.2995, 6.1436, 731.2739, 35.0292, 103.7641, 81.5331, 160.8965, 1041.8262, 71.0157, 230.4172, 11.1555], [0.839, 202.3317, 0.7787], [4026.4219, 3039.0275, 1394.747, 317.0397, 4450.6044, 898.7351, 1587.7123, 2334.7243, 169.5048, 878.8182, 2162.1706, 93.1127, 156.324, 2653.0047], [3.1398, 1.7522, 1.5402, 13.9711, 0.258, 0.4922, 4.0353, 5.9571, 5.8609]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
