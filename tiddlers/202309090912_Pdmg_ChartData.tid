created: 20230909091225000
creator: Drevarr
tags: ChartData
title: 202309090912_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Wren Raveness", "Drevarr Moonwillow", "Govinda Ektar", "Chunky Meat Flapper", "Necrotic Windrunner", "Vesnan", "Aloe Pen", "Serene Azura", "Sister Elonith"];
const professions = ["Chronomancer", "Scrapper", "Vindicator", "Soulbeast", "Reaper", "Reaper", "Herald", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[135.6446, 137.3007, 39.7619, 13.2432, 110.5747, 202.0, 295.2471, 153.0536, 34.0351, 0.0], [65.8718, 18.8667, 227.5114, 297.4286, 215.3333, 272.5417, 138.6154, 112.4333, 170.5372, 94.3814, 0.0, 1.7432, 112.8678, 214.1935, 86.0471, 170.5714, 46.3099, 53.7442], [0.0, 302.6322, 617.6989, 228.3059, 331.5, 115.1579, 66.5814, 305.9796], [486.2051, 103.8, 360.6591, 130.3714, 205.4444, 54.25, 207.6484, 189.4333, 249.9339, 142.5355, 202.4048, 0.0, 153.2471, 365.6989, 213.5294, 353.5402, 27.345, 0.0, 121.2609, 46.3404, 25.3673], [117.2564, 243.7556, 614.3636, 508.3857, 547.7407, 279.3333, 1086.1648, 1072.7, 971.4876, 130.1858, 156.5476, 83.4324, 468.2126, 795.5054, 165.5294, 629.1027, 465.5965, 117.5233, 42.2571, 621.4348, 204.0638, 511.6122], [137.7107, 734.1809, 0.0, 16.0135, 1147.0, 2070.4839, 198.5529, 876.0804, 367.5857, 482.6957, 0.0, 309.3265], [961.8017, 803.4205, 97.8333, 242.473, 940.7414, 402.8495, 186.2353, 1150.692, 229.9591, 497.8605, 0.0, 145.3478, 28.2766, 38.6327], [257.7179, 35.8222, 642.2955, 942.7, 898.6111, 1284.3333, 1045.7802, 1334.6, 1153.5702, 134.599, 132.5, 69.2703, 364.0287, 1332.5376, 849.4235, 759.6161, 189.2398, 327.0349, 22.5429, 1035.0, 1023.617, 251.6122], [454.5111, 2863.7667, 3770.7355, 1609.1125, 391.2857, 12.6216, 840.6379, 4737.2688, 3926.5412, 2059.6696, 0.0, 402.5217, 632.3404, 1747.1224]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

