created: 20230916001624000
creator: Drevarr
tags: ChartData
title: 202309160016_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Kyrillien", "Cat Wigglebooty", "Brace Stonebrow", "Xanvias Einzbern", "Kylo Milan", "Tribal S", "Jimbo The Pleb", "Legendary Sakis", "Necrophagya", "K\u00e2 \u00d4tik R\u00e6j", "Zaedy Zae", "Leafzely", "Ballymoon", "Akira Sparks", "Mike The Archmagus", "Hey Yey Yeah Ah Ah", "Kosa\u00efr", "Air One Com", "Legoh Brave", "Tegan Parker", "Pafema", "Gabe Malhorn", "Ryvalia Fazebringer", "Unbreakable Nemesis", "Do Pie", "Kahlyanne", "Venomina The Fierce", "Amiti\u00e9l", "Arcanophage Farra", "Sub Train", "Koralia Danai", "Drevarr Moonwillow", "Solus Luxes", "Bella Sassy"];
const professions = ["Firebrand", "Vindicator", "Scrapper", "Firebrand", "Berserker", "Chronomancer", "Druid", "Berserker", "Druid", "Scourge", "Berserker", "Druid", "Scrapper", "Soulbeast", "Elementalist", "Weaver", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[689.9229], [23.2811, 17.0878, 17.7086, 8.2496, 0.0, 0.0, 41.0072, 8.2372, 44.7552, 61.3879, 0.0, 49.8511, 0.0, 20.6144, 0.0, 101.2704, 0.0, 0.0, 0.0, 0.0, 0.0, 24.6808, 169.2768, 197.8174], [0.0, 57.9848, 57.5424, 183.253, 2.3289, 61.6308, 0.0, 32.1968, 40.3603, 3.7964, 44.8362, 0.0, 51.133, 113.4374, 0.0, 198.5139], [282.2253, 79.6576, 184.5856, 34.1706, 117.852, 42.7174, 47.9311, 79.9075, 0.0], [64.414, 56.7239, 10.6504, 55.9894, 27.692, 20.9047, 0.6339, 34.6352, 12.3377, 69.7673, 0.0, 90.5335, 0.0, 34.5345, 0.0, 1.4784, 0.0, 0.0, 0.0, 0.0, 99.3137, 0.0, 301.6018], [196.2787, 0.0, 36.9927, 92.8197, 107.226, 0.0, 50.8079, 8.6912, 52.947, 17.3052, 220.2046, 25.4417, 0.0, 0.0, 0.0, 77.9117], [0.0, 0.0, 0.0, 167.382, 0.0, 9.6726, 0.0, 44.3642, 15.8841, 37.4339, 0.0, 64.4846, 9.1577, 31.4884, 0.0, 164.1024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 98.2685, 0.0, 275.1333], [27.698, 0.0, 119.5489, 53.555, 0.0, 20.6283, 0.0, 50.6557, 71.0289, 122.4115, 0.0, 78.3895, 17.6861, 0.0, 0.0, 27.9418, 29.2118, 0.5175, 73.7712, 0.0, 0.0, 0.0, 149.9309, 0.0, 126.0737], [111.5282, 74.2936, 55.3946, 0.0, 0.0, 0.0, 0.0, 0.0, 2.8471, 44.0827, 0.0, 6.5578, 0.0, 258.4243, 0.0, 0.0, 0.0, 0.0, 88.0951, 174.3331, 155.3284], [0.0, 1030.5309], [227.9335, 0.0, 183.9554, 31.2855, 8.855, 21.4771, 51.0517, 51.9529, 74.4755, 0.0, 0.0, 112.5142, 0.0, 133.923, 0.0, 0.0, 0.0, 12.7305, 0.0, 120.688, 64.1933, 0.0], [197.5669, 0.0, 0.0, 23.3064, 0.0, 0.0, 34.6684, 0.0, 0.0, 64.94, 0.0, 0.0, 0.0, 6.8361, 26.6742, 86.3386, 47.9039, 19.872, 0.0, 0.0, 0.0, 269.2452, 276.3389, 0.0, 122.591], [0.0, 6.9379, 0.0, 0.0, 0.0, 0.0, 59.0484, 0.0, 0.0, 58.7466, 17.9709, 6.3149, 13.7945, 20.3311, 5.2722, 169.8682, 0.0, 13.6827, 41.172, 6.9592, 92.9368, 238.0867, 0.0, 532.8531], [114.6569, 27.9123, 10.8394, 27.2283, 48.461, 22.8392, 11.4098, 12.518, 34.4655, 222.1441, 0.0, 15.8479, 0.0, 20.0831, 3.2625, 251.1802, 76.5072, 10.2648, 0.0, 290.6285, 10.0643, 193.2899], [35.7903, 0.0, 0.0, 8.0041, 190.3611, 412.8595, 0.0, 769.3284], [76.3766, 30.0964, 55.9618, 53.0592, 23.6992, 0.0, 27.4519, 162.3446, 117.0828, 65.0311, 19.8827, 103.3454, 29.0131, 10.0239, 77.0211, 149.9098, 72.1022, 0.0, 51.3992, 0.0, 14.2986, 107.9343, 27.0403, 21.7681, 280.3573], [12.3876, 13.5709, 22.455, 0.0, 114.6118, 43.85, 0.0, 146.8051, 46.0782, 0.0, 34.2912, 43.8345, 0.0, 275.6221, 645.2304, 0.0, 349.6631], [197.4749, 95.2037, 116.7761, 104.3151, 40.7008, 88.2556, 91.6472, 38.2118, 80.9701, 94.3734, 238.6296, 27.9367, 202.1065, 0.0, 69.337, 36.8336, 0.0, 0.0, 119.0347, 77.8234, 317.6222], [131.7726, 107.4735, 348.1855, 0.0, 20.3182, 17.766, 78.4061, 53.0555, 13.7363, 217.2258, 0.0, 198.0686, 0.7452, 130.2748, 11.2491, 147.6922, 0.0, 0.0, 0.0, 0.0, 47.1179, 439.0205, 408.869], [207.8763, 142.8071, 382.6271, 0.0, 75.5357, 0.0, 17.3558, 2.1663, 52.631, 52.2675, 0.0, 0.392, 365.9609, 250.1779, 927.7913], [98.0933, 81.4242, 178.5987, 18.9787, 40.1534, 79.0982, 20.1379, 16.215, 6.7932, 133.6144, 118.8792, 113.3642, 71.4398, 0.0, 170.7552, 97.025, 16.5393, 0.0, 118.7985, 224.4566, 0.0, 1061.8752], [160.4333, 51.9363, 68.5448, 5.7375, 47.5893, 415.0863, 909.6979, 1043.7652], [484.5773, 69.4756, 226.998, 160.5299, 44.7902, 13.2455, 77.2358, 330.332, 557.5419, 404.3041, 243.7719, 173.7199], [109.6878, 44.7432, 0.0, 61.0834, 151.7586, 0.0, 49.3939, 0.0, 0.0, 61.1147, 0.0, 208.1482, 0.0, 0.0, 4.3326, 454.4602, 0.0, 59.9265, 630.7776, 0.0, 0.0, 94.1177, 568.0666, 0.0, 302.6466], [642.0691, 18.0545, 17.4708, 118.064, 37.2465, 0.0, 497.3951, 43.0886, 0.0, 1509.4022], [87.327, 1.863, 140.5346, 66.2225, 7.9212, 20.8257, 36.7163, 124.7258, 88.7611, 351.2956, 66.4884, 102.5395, 0.0, 137.4426, 139.4131, 77.004, 87.5328, 0.0, 18.6001, 81.6002, 494.4202, 986.9972], [280.3849, 60.771, 70.3303, 32.7732, 125.1936, 0.0, 35.2535, 11.8694, 115.5843, 116.7646, 71.7446, 93.9338, 18.1994, 102.0804, 127.5768, 456.8256, 66.5671, 95.841, 79.7496, 57.0091, 311.8757, 832.3653], [277.5323, 8.2548, 81.2958, 111.8435, 0.0, 53.377, 144.1346, 207.0331, 17.9321, 301.8391, 138.2058, 99.763, 53.1742, 31.7363, 49.1724, 265.3728, 0.0, 0.0, 421.227, 891.0115, 143.5193, 768.2836], [158.7474, 222.4698, 198.674, 85.9677, 126.8735, 332.1481, 210.6391, 790.119, 135.0774, 218.3491, 128.9693, 125.5993, 108.8109, 686.7168, 0.0, 0.0, 0.0, 0.0, 324.5113, 319.2077, 0.0], [277.2563, 86.0174, 129.4431, 200.5158, 9.6922, 0.0, 89.2796, 292.7132, 71.4784, 338.6354, 4.0322, 107.9602, 38.6345, 78.8095, 125.8803, 494.2291, 230.7967, 310.3504, 171.4667, 1095.023, 26.5271, 1174.3664], [223.7926, 41.6918, 187.0434, 151.8745, 22.4112, 68.2609, 132.0421, 299.1343, 399.55, 263.6766, 112.24, 344.9503, 145.9267, 106.3308, 59.4036, 679.7683, 41.0662, 672.2864, 903.3226, 172.3234, 793.3591], [401.3912, 24.347, 201.601, 18.7082, 30.7188, 36.4203, 86.1589, 268.261, 44.7552, 265.0428, 18.4228, 336.7531, 19.6236, 163.9238, 171.8685, 950.3155, 156.1732, 35.2314, 12.5584, 0.0, 7.917, 618.2011, 1127.5594, 8.0378, 907.5916], [254.1592, 154.0796, 301.9288, 45.7562, 89.5482, 68.7544, 137.8933, 248.8678, 142.2576, 490.739, 84.0149, 216.4061, 80.2994, 102.5409, 45.7533, 338.4058, 85.8677, 82.1997, 32.148, 0.0, 411.6617, 1299.0346, 100.8256, 1386.8111], [502.3372, 98.223, 60.1841, 120.1382, 42.7294, 55.5089, 71.2384, 393.1165, 430.619, 704.777, 126.9435, 177.181, 153.5112, 114.7254, 209.9745, 945.5846, 214.0753, 153.8631, 271.096, 813.6401, 581.4768, 160.9839, 1042.3721], [689.6899, 47.9552, 456.5799, 153.3171, 162.288, 39.934, 265.1569, 309.1228, 440.0595, 654.3187, 501.6911, 453.6998, 71.9035, 329.0164, 215.3511, 894.1363, 289.6841, 39.2679, 317.4192, 159.484, 905.8684, 1567.2394, 185.6893, 2252.6104]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

