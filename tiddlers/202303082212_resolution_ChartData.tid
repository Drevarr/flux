created: 20230308221219000
creator: Drevarr
modified: 20230705163521518
modifier: drevarr
tags: ChartData
title: 202303082212_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupi Jupi Jupi", "Belvyn Brightblade", "Zaylen Harker", "Blanco Padre Guard", "Raelyn Sunray", "Gavann", "Viral Marketing", "Bella Sassy", "Ravioli Fetabringer", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 33.6767, 25.9563, 106.281, 92.003, 39.9801, 30.4104, 84.231, 69.7525, 131.7669, 34.4465, 0.0, 36.8322, 14.8441, 98.9604, 0.0, 0.0, 2.0003, 46.2467, 12.8254, 21.8198, 26.1469, 20.904, 53.9825, 63.9893, 0.0, 16.2864, 55.6512, 39.102, 0.0], [0.0, 0.0, 0.0, 166.8332, 381.1122, 622.9958, 70.7942, 54.7119, 267.293, 15.5898, 385.2164], [38.6318, 46.1784, 0.0, 95.1968, 130.681, 429.093, 451.98, 149.2344, 104.296, 232.9455, 116.0398, 382.0231, 168.9417, 253.9984, 312.6416, 64.5744, 122.3062, 39.1773, 332.7174, 73.9912, 292.4544, 203.2084, 257.2157, 140.1503, 257.076, 0.0, 262.6128, 641.52, 235.5058, 44.3491], [38.6159, 39.6906, 0.0, 68.3829, 125.6164, 269.451, 668.3947, 153.4719, 165.206, 405.7126, 314.6898, 461.1841, 64.9583, 19.4028, 205.8279, 457.1421, 47.7312, 176.0333, 62.9574, 300.297, 172.5671, 212.3722, 187.6367, 197.9126, 268.272, 304.3886, 0.0, 320.328, 714.8064, 170.0378, 202.6426], [0.0, 0.0, 231.2408, 229.8492, 739.6402, 167.8426, 199.8078, 467.0141, 407.0234, 444.7132, 170.7302, 42.2694, 23.7084, 232.1689, 434.0513, 49.3829, 26.3858, 309.9005, 64.499, 357.9139, 203.645, 202.0934, 244.944, 291.9211, 0.0, 175.176, 721.4592, 232.3031, 208.656], [0.0, 122.2884, 0.0, 98.1054, 261.1955, 266.805, 783.2981, 357.4256, 254.2522, 483.2052, 232.5618, 674.8011, 149.3397, 0.0, 0.0, 98.2327, 416.0918, 0.0, 249.2166, 28.544, 0.5449, 30.1007, 428.1715, 242.356, 387.2707, 230.2182, 271.6747, 12.0528, 345.84, 290.7699, 189.4493], [0.0, 60.7848, 194.5888, 474.6924, 619.38, 143.1084, 252.5132, 331.4022, 258.4378, 558.1605, 208.5033, 35.455, 58.0566, 208.2049, 488.4795, 0.0, 63.9007, 80.5129, 376.0353, 76.4784, 317.9299, 147.5674, 370.2259, 283.6539, 228.2515, 30.1325, 238.032, 622.7232, 214.8003, 96.9408], [101.3926, 104.0242, 28.0308, 43.8239, 146.3081, 414.0108, 735.6226, 202.9864, 246.8948, 390.9254, 275.3937, 637.8256, 152.094, 0.0, 263.7489, 535.1192, 17.952, 134.3735, 81.513, 285.9939, 31.522, 414.12, 232.5569, 336.2006, 253.4004, 272.1542, 0.0, 210.6864, 584.496, 145.8691, 212.9587], [0.0, 41.6805, 0.0, 59.7717, 186.2255, 382.5234, 761.2013, 203.1707, 257.9977, 432.7602, 386.2102, 788.4164, 195.6261, 30.4704, 147.3734, 524.2152, 0.0, 22.7607, 77.1308, 374.2645, 63.7207, 408.9221, 163.3817, 264.6125, 213.6699, 218.075, 0.0, 239.976, 693.3696, 325.4776, 112.8816], [49.553, 23.8252, 0.0, 67.6639, 235.5058, 482.013, 738.167, 201.4664, 332.0617, 409.4562, 375.9241, 727.2389, 198.7739, 20.1535, 105.7033, 473.8187, 61.3536, 39.9519, 60.3781, 401.5766, 69.5412, 399.5544, 283.7835, 281.7216, 238.1083, 249.7392, 749.5488, 187.7268, 205.5197], [39.7671, 39.6906, 0.0, 42.7454, 275.1899, 485.8938, 972.2592, 270.971, 303.6133, 480.2103, 360.495, 883.0398, 182.8562, 30.2137, 65.7018, 185.3567, 655.7959, 11.9328, 176.2561, 84.7767, 11.7149, 71.9777, 387.9019, 248.1772, 325.8451, 275.1611, 232.8336, 274.1904, 864.9696, 287.9024, 158.3453]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

