created: 20230503220838000
creator: Drevarr
modified: 20230705163528148
modifier: drevarr
tags: ChartData
title: 202305032208_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Maaaathexxs", "Smol Gluvs", "Smol Daddy Tika", "Skylar Shadowmoon", "Oops All Beans", "Kmpek", "Binkety Bonk", "Mannse Lee", "Husky Guard", "Cedryn X", "Farra The Bloodless", "Tootsie Pop Rocks", "Inedible Plant", "Be\u00eb", "Solus Nex", "Elonith Requiem", "Allie Mistwalker", "Kary\u00edna", "Kosa\u00efr", "Hauzzy", "Lord Erin The Wise", "Slautorn", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Scrapper", "Spellbreaker", "Vindicator", "Scrapper", "Scrapper", "Dragonhunter", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Scourge", "Scourge", "Scourge", "Vindicator", "Vindicator", "Catalyst", "Berserker", "Weaver", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[310.4667, 355.2625, 46.697, 111.9286, 118.1053, 203.1762], [189.828, 114.5139, 32.0303, 180.6974, 212.4381, 0.0, 0.0, 99.6743, 56.8611, 23.2308, 141.3645, 159.0131], [197.2515, 116.4824, 61.6667, 0.0, 156.5789, 201.8667, 0.0, 0.0, 89.4626, 103.7222, 179.4725, 168.5196, 128.728], [329.1772, 239.7209, 198.0909, 298.4737, 212.1571, 0.0, 0.0, 93.5581], [339.8392, 268.4658, 152.1818, 149.9079, 73.3095, 0.0, 0.0, 154.0932, 45.6389], [60.1358, 172.2778, 355.9231, 529.162, 384.1892], [0.0, 560.8771, 496.954], [436.822, 384.5749, 290.4848, 510.3158, 125.0429, 0.0, 116.5753, 348.1876], [277.2135, 268.3013, 175.2727, 0.0, 19.6316, 295.4952, 0.0, 0.0, 187.3556, 0.0, 7.3846, 289.9148, 263.6137], [339.2014, 358.6525, 365.0909, 72.9211, 371.0333, 0.0, 186.5068, 232.8815, 43.3333, 19.8901, 132.831, 375.6465], [354.8634, 244.1627, 307.6061, 374.4737, 141.0667, 2.6029, 136.5753, 195.2716, 201.1111, 95.033, 431.2696, 369.364], [378.6353, 234.0499, 157.8485, 0.0, 194.9868, 231.519, 0.0, 279.0725, 189.0278, 32.5604, 278.9288, 582.0841], [414.5912, 360.6026, 785.6364, 0.0, 42.3289, 203.4286, 0.0, 57.7945, 206.4672, 159.2778, 117.044, 555.6425, 407.6229], [495.8496, 0.0, 270.5152, 0.0, 454.6447, 378.4333, 0.0, 0.0, 330.7445, 423.0833, 95.3187, 590.1075, 365.2431], [571.2429, 182.427, 55.4848, 0.0, 241.2763, 272.3286, 32.1618, 0.0, 339.0967, 294.0278, 115.7253, 411.7444, 372.431], [378.3494, 381.8182, 184.6184, 670.981, 59.5882, 147.1096, 376.2785, 449.5556, 88.0769, 950.0992, 447.7806], [564.3077, 597.2089, 479.3636, 125.0357, 145.0526, 665.3476, 0.0, 0.0, 37.5374, 251.3611, 666.3757, 498.4639], [578.771, 613.7634, 202.6364, 0.0, 210.0395, 718.9429, 60.9706, 245.0137, 330.0598, 174.0833, 139.3626, 617.5335, 578.8975], [498.8712, 516.7246, 210.6667, 150.2895, 453.3905, 0.0, 6.0822, 392.9425, 434.4167, 25.8242, 822.6047, 648.6886], [768.7303, 598.9335, 179.1818, 0.0, 478.5, 669.5333, 0.0, 248.2466, 411.7929, 54.6667, 237.1099, 847.9791, 720.5664], [703.4745, 760.5194, 309.0606, 0.0, 411.6579, 690.1952, 0.0, 31.7397, 474.6087, 0.0, 0.0, 964.6299, 637.9093], [331.0277, 1093.6599, 78.1818, 0.0, 134.3816, 528.4476, 23.6176, 111.4247, 911.4235, 206.5556, 0.0, 966.1355, 773.1813], [894.9404, 876.7967, 190.5152, 247.0132, 821.6952, 41.5, 0.0, 586.5742, 94.0278, 259.5495, 890.0852, 892.3837], [1274.3423, 1301.2662, 351.5455, 394.5789, 842.0333, 0.0, 41.6027, 612.4235, 132.4722, 208.1319, 1044.331, 773.0013]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

