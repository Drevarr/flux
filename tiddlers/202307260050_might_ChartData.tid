created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Atros Aegisshroud", "Charr Surethang", "Koralia Danai", "Norn Name Generator", "Atros Wintersshroud", "Sakis Ranger", "A\u00fcrora Windrunner", "Traidoruns Maximus", "Johosh The Mighty", "Reyga Bannerclaw", "Sister Elon\u00edth", "Kosa\u00edr", "Rosetendril", "Grasszanine", "Scarlet Merc\u00fcry", "Jimbo The Pleb", "Name Is What", "Drevarr Moonwillow", "Newtype Khan", "Jerryatric Reflexes"];
const professions = ["Firebrand", "Berserker", "Firebrand", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Holosmith", "Tempest", "Spellbreaker", "Firebrand", "Berserker", "Scourge", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.1895, 21.06, 18.19, 15.7942, 1.961, 4.9518, 8.8609], [2.4396, 6.7021, 0.0, 0.0, 0.7128, 0.0, 14.8488, 1.2197, 0.0, 0.0, 8.6207, 0.0, 2.903, 8.8339, 0.0, 2.16, 1.1424, 1.0234, 0.0, 3.4409, 0.0, 3.0018, 2.4367, 0.0, 3.7762, 4.0043, 0.0, 0.0, 3.3082, 0.0, 5.805, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8333, 0.0, 3.7062, 0.5096, 4.6807, 0.2349, 1.5444, 1.84, 3.4034, 0.0, 0.0, 1.9786, 5.2229], [7.1323, 8.55, 18.5752, 20.5498, 0.7873, 11.8184, 0.0, 6.5388, 0.0, 0.0, 25.668, 0.0, 2.3474], [5.07, 4.3546, 2.0975, 3.8384, 9.6443, 4.0936, 0.0, 14.0063, 0.0, 0.0, 0.175, 0.0, 0.0, 8.3546, 0.0, 3.8628, 9.3366, 8.8625, 0.0, 3.4538, 4.4631, 10.4468, 2.227, 0.0, 6.0333, 12.5858, 6.0653], [41.676, 0.499, 3.6322, 2.5171, 17.1279, 1.8136, 8.6638, 49.077], [4.6238, 11.0565, 21.0384, 2.4157, 6.4148, 5.8072, 27.2363, 1.9625, 3.8694, 0.0, 0.648, 0.359, 5.5523, 3.1282, 12.4497, 4.732, 4.1342, 0.0, 1.2355, 9.122], [0.0, 5.274, 12.0482, 14.784, 3.3134, 12.1176, 0.0, 0.0, 8.2236, 16.8912, 0.0, 0.0, 0.0, 21.4005, 1.1974, 0.567, 31.8299], [12.6403, 1.1495, 4.2636, 0.0, 5.398, 0.9438, 0.0, 35.052, 0.0, 6.7427, 2.4008, 22.7994, 0.4545, 16.8286, 35.7561], [15.5002, 5.904, 5.3072, 15.2029, 2.0286, 3.0219, 2.415, 6.7425, 3.0624, 1.8431, 23.3496, 0.9055, 1.0916, 2.2162, 17.7329, 2.2374, 8.1648, 25.7304, 12.1565, 1.6584, 1.1928, 3.0492, 2.1301, 3.1142, 8.2231], [14.04, 3.024, 11.1708, 16.3117, 4.2987, 0.0, 5.075, 3.3203, 0.0, 0.0, 8.6112, 0.0, 0.8791, 1.156, 13.0066, 1.0313, 5.4432, 42.3464, 0.0, 0.0, 1.4875, 0.0, 2.012, 8.8986, 1.4719, 3.1635, 1.0005, 1.633, 8.517, 0.0, 1.0175, 0.357, 0.5861, 7.5263, 0.0, 0.0, 0.0, 0.0, 2.9995, 3.9809, 0.0, 0.8613, 6.097, 4.9183, 0.0, 0.8986, 1.3311], [1.309, 0.0, 8.573, 5.3428, 7.3944, 3.3345, 0.676, 14.7307, 30.3181, 3.8532, 5.0434, 5.0218, 5.1415, 9.855, 4.0208, 5.579, 6.2784, 1.511, 6.3904, 5.7702, 5.8464, 6.8796, 5.6549, 0.0, 6.7813, 14.877, 0.819, 3.2634, 0.8467, 4.3366, 19.0162, 9.0347], [6.3461, 7.578, 14.8088, 8.1558, 2.0286, 3.0219, 1.988, 5.4999, 2.9964, 2.3514, 20.3136, 2.9106, 2.7628, 1.8126, 11.948, 2.5608, 15.1049, 23.6271, 4.5587, 3.06, 1.4784, 1.2376, 4.7637, 9.2729, 5.415, 5.598, 8.4787, 4.2318, 8.8792, 9.0891, 8.0738, 1.9278, 3.2856, 2.009, 1.3824, 2.244, 4.6094, 1.8267, 4.8024, 1.729, 5.0134], [2.3026, 11.376, 3.8092, 29.9376, 15.2193, 3.2912, 13.895, 0.0, 0.0, 5.6856, 0.2218, 0.0, 6.4843, 11.6455, 0.6205, 10.3874, 34.4941, 4.468, 0.0, 0.0, 0.0, 0.0, 8.2049, 8.4564, 5.9204, 0.0, 0.228, 4.4346, 4.9669, 2.606, 0.0, 19.4656, 0.0, 0.0, 2.3288, 0.0, 0.2754, 15.9552, 0.0, 18.6997, 12.301, 0.0, 0.0, 1.0217, 0.0, 12.8606, 0.7438, 8.1172, 0.3748, 0.0, 1.929, 17.0376, 3.517], [57.7392, 4.3613, 9.7083, 7.654, 74.3723, 3.8238, 39.8261, 135.2422], [26.9207, 0.0, 20.5027, 62.3278, 19.5275, 3.2256, 1.3356, 0.9544, 1.4696, 1.3793, 11.0808, 11.1008, 13.711, 3.8475, 2.704, 17.9285, 17.0341, 3.1863, 16.0149, 12.9472, 1.1633, 17.4488, 1.0967, 1.4458, 0.154, 5.7744, 4.4261, 0.0, 9.6309, 3.2214, 8.2447, 1.9497, 3.8048, 7.7517, 6.0424, 2.9914, 0.0, 0.0, 20.9947, 4.8227], [0.889, 4.624, 1.9272, 3.1028, 20.7, 1.5154, 6.2597, 3.3653, 22.3079, 1.9927, 51.3906, 21.3872, 2.4576, 2.0034, 2.8908, 1.5292, 4.3513, 9.7686, 7.22, 6.1891, 14.3498, 7.6253, 6.7019, 14.5552, 4.9202, 7.2111, 3.4272, 10.6312, 6.7629, 3.649, 0.924, 1.8936, 1.5858, 6.6261, 2.2814, 9.2655, 7.5894, 9.8604, 3.8445, 3.8189, 12.4106, 11.284, 1.8669, 1.4784, 2.823, 19.291, 12.636], [12.5237, 9.63, 17.441, 17.1741, 5.1488, 6.4777, 6.433, 8.2499, 1.8348, 3.1912, 31.74, 0.4712, 2.4247, 2.4624, 27.7904, 2.9716, 14.0389, 40.8741, 0.0, 7.4784, 0.7896, 2.1424, 1.3209, 7.366, 10.6726, 11.8227, 8.2289, 10.8727, 6.3003, 12.4173, 16.907, 2.5046, 11.8563, 5.6406, 0.4884, 11.7112, 1.9432, 6.885, 3.143, 2.628, 2.6778, 10.6331, 5.4018, 11.745, 6.4974, 12.0226, 1.8244, 5.6581, 6.4206, 12.4124, 7.2397, 3.6893, 2.816, 16.8727, 6.8445], [19.0102, 11.826, 16.3068, 17.3466, 6.2693, 13.4042, 1.764, 17.9867, 6.501, 41.0688, 0.8039, 6.0182, 4.5076, 39.3224, 4.1908, 13.3812, 57.2799, 23.4058, 6.4368, 0.8652, 3.6353, 3.1476, 4.2233, 9.7394, 11.4978, 4.2072, 13.3238, 3.6369, 13.0297, 32.6698, 9.6478, 15.0195, 14.5656, 9.6792, 14.85, 5.0697, 4.5166, 1.603, 2.196, 0.0, 7.5165, 3.8259, 7.5168, 8.736, 19.4594, 5.4653, 9.7157, 15.3077, 11.5024, 7.2691, 4.9594, 6.16, 24.8969, 10.9933], [51.9761, 44.424, 51.9164, 55.095, 5.0473, 30.8625, 10.57, 22.4477, 19.1334, 9.1582, 116.8032, 6.7729, 3.1416, 11.1343, 62.0233, 50.3775, 24.4665, 41.5957, 21.7672, 31.2304, 71.3779, 14.6125, 32.2731, 28.441, 5.8253, 37.6987, 5.8393, 22.2661, 10.416, 12.528, 42.2707, 6.1858, 36.801, 10.4286, 22.2156, 11.4944, 16.1039, 53.7138], [46.0491, 114.6134, 205.553, 42.5038, 78.5039, 55.9062, 12.3432, 111.78, 24.3578, 36.4767, 18.06, 8.7768, 87.1341, 22.3832, 71.8272, 49.2856, 80.3326, 17.8759, 33.7381, 129.4691, 43.8438, 7.2839, 34.6013, 26.2381, 185.9297, 68.782]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

