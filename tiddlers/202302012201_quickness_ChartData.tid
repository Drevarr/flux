created: 20230201220146000
creator: Drevarr
modified: 20230705163518542
modifier: drevarr
tags: ChartData
title: 202302012201_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Koralia Danai", "Ravioli Fetabringer", "Bella Lunabringer", "\u00c9\u00efbhear", "Riann Swordbreak", "Not A Stalker", "Mad X King", "Villainous Black", "Gravlyn Isshtail", "Newtype Khan", "Smol Daddy Tika"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Harbinger", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.1652, 5.8653, 0.0, 0.0, 12.0266, 0.0, 0.0, 0.0, 0.0, 7.6055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.3401, 0.0, 0.0, 0.0, 0.0, 5.3391], [5.3841, 5.6698, 0.0, 0.0, 0.0, 5.4355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.3782, 0.0, 9.1622, 0.0, 5.402, 0.0, 0.0], [0.0, 0.0, 0.0, 11.4893, 11.2622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.3035, 0.0, 5.4243, 0.0, 5.3866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.0], [5.6654, 0.0, 16.4952, 5.9136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.656, 5.5601, 1.9443, 0.0, 0.0, 0.0, 5.6801, 5.5655, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 8.2114, 8.4912, 1.943, 0.0, 0.0, 0.0, 5.364, 0.0, 0.0, 2.9431, 21.6416, 2.7342, 0.0, 0.0, 2.4403, 8.0811, 0.0, 2.7058, 0.0, 5.4268, 2.3345, 5.6998], [23.1072, 23.1898, 7.593, 9.2256, 9.4256, 12.0823], [77.7114, 27.417], [31.8264, 0.0, 0.0, 7.9552, 0.0, 23.3926, 15.7878, 7.891, 7.8566, 0.0, 7.9654, 7.9566, 7.9019], [21.609, 45.7498, 23.1466, 0.0, 0.0, 25.9678, 68.9754], [0.0, 110.8542, 41.2032, 30.455, 30.8818, 10.2724, 9.69], [18.4426, 63.5408, 54.636, 0.0, 0.0, 0.0, 13.5888, 0.0, 13.326, 13.0547, 13.4726, 10.2077, 11.7306, 0.0, 11.6362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.7475], [26.7687, 10.6506, 26.9328, 24.1472, 33.4443, 17.9225, 25.4058, 16.1318, 26.1596, 63.7806]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

