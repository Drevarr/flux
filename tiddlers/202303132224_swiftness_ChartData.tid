created: 20230313222416000
creator: Drevarr
modified: 20230705163521983
modifier: drevarr
tags: ChartData
title: 202303132224_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Heartthrobb", "Smol Daddy Tika", "Primal Clone", "Black Raspberry Pie", "Seren Nightroad", "Mac Chiato", "Smol Gluvs", "Eibh\u00ebar", "Zadie Miststep", "Fribble Bibble", "Tegan Parker", "Etchery Howls", "High Sorcer Baradun", "Ryvalia Fazebringer", "Veron Blackburn", "Venomina The Siren", "Ark Darkness", "Sygaldry Verdandi", "Drevarr Moonwillow", "Ravioli Fetabringer", "Koralia Danai", "Blanco Padre Guard", "Whose Guardian", "Arcanophage Farra", "Bella Sassy", "Johosh The Great"];
const professions = ["Firebrand", "Berserker", "Chronomancer", "Chronomancer", "Scourge", "Tempest", "Scourge", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Druid", "Tempest", "Chronomancer", "Herald", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.8079, 27.2273, 176.645, 128.9014, 28.2196, 7.572, 38.736, 0.0, 132.6168, 72.0286, 99.8404, 256.9913, 2.5661, 59.9352], [0.0, 0.0, 256.0319, 40.5132, 0.0, 0.0, 0.0, 0.0, 0.0, 12.8816, 109.2896, 0.0, 31.6315, 170.9924, 82.2798, 51.4843, 0.0, 0.18, 21.1622, 0.0, 53.4264, 0.0, 0.0, 142.9604, 0.5227, 0.0, 137.6424], [0.0, 7.5905, 233.5144, 48.9534, 80.6883, 10.9206, 112.9075, 16.3979, 0.0, 0.0, 0.0, 24.5284, 54.2626, 42.581, 39.6341, 38.952, 47.4051, 2.0631, 57.7114, 0.0, 0.0, 161.8852, 22.8096, 29.328, 189.0], [10.3441, 80.2995, 247.2751, 27.9177, 0.0, 7.9556, 11.5204, 159.2136, 0.0, 23.1599, 38.8178, 26.2642, 0.0, 520.6485, 0.0, 0.0, 41.1835, 0.0, 0.0, 0.0, 62.3192, 16.8696, 20.6544, 8.8452], [10.0775, 0.0, 685.5316, 48.6937, 0.0, 61.7371, 0.0, 146.7331, 42.4315, 58.5099, 0.0, 46.1815, 11.6081, 136.4317, 90.233], [12.0503, 9.5081, 489.1293, 162.5722, 0.0, 55.0103, 43.1078, 54.7042, 0.0, 23.1937, 45.5151, 50.9355, 82.1652, 96.9529, 3.0581, 60.8506, 21.708, 18.909, 0.0, 3.9053, 0.0, 53.1042, 82.5699, 31.0306, 6.1152, 17.3628], [46.8949, 0.0, 366.9512, 34.67, 0.0, 38.5493, 66.7233, 48.5222, 0.0, 72.7929, 97.0612, 0.0, 0.0, 104.271, 26.4669, 59.3424, 39.984, 0.0, 31.5003, 0.0, 85.1026, 0.0, 88.8546, 190.4532, 36.0677, 22.0896], [31.8587, 16.0599, 299.3988, 51.5505, 0.0, 8.3761, 8.4466, 93.1954, 0.0, 25.2561, 3.6319, 0.0, 16.9579, 63.7941, 0.0, 129.6011, 34.3113, 110.052, 20.1461, 58.2153, 16.7059, 451.4215, 0.0, 112.7049, 49.9435, 82.8672, 13.5324], [0.0, 23.97, 623.817, 65.3145, 37.1686, 73.3795, 0.0, 149.0659, 0.0, 1.9948, 17.3264, 0.0, 29.8204, 137.2784, 101.9362, 16.7614, 10.9956, 86.724, 23.9456, 48.2765, 57.7114, 0.0, 62.0418, 188.5246, 40.0118, 4.212, 0.0], [17.489, 69.1934, 695.5393, 119.5919, 50.8279, 60.4435, 17.518, 331.7242, 0.0, 63.1233, 0.0, 0.0, 76.3724, 181.7929, 140.5844, 95.9621, 8.7215, 40.392, 118.049, 0.0, 5.424, 0.0, 0.0, 10.0048, 50.7038, 43.5552, 18.648], [91.1239, 19.8152, 735.9873, 232.4315, 0.0, 47.6692, 48.1807, 67.4179, 84.7617, 48.4806, 0.0, 51.4088, 90.1394, 66.0564, 50.0133, 21.6164, 76.392, 90.6132, 0.0, 37.5341, 100.2818, 122.7803, 123.0713, 8.4586, 50.232, 36.0612], [0.0, 162.4367, 814.3815, 307.4848, 0.0, 72.3122, 127.7989, 293.1163, 74.4158, 0.0, 0.0, 0.0, 58.1414, 45.7356, 46.6843, 34.5362, 19.548, 5.655, 0.0, 0.0, 66.8375, 8.3045, 114.513, 64.057, 47.6112], [0.0, 69.7527, 696.7903, 274.7626, 37.3527, 23.1657, 142.0675, 25.8647, 47.2478, 0.0, 84.4868, 88.0383, 69.5619, 132.7219, 34.092, 0.0, 75.4556, 29.2896, 50.1579, 78.7626, 167.5506, 54.5054, 30.6696, 156.9708], [0.0, 0.0, 900.6984, 0.0, 0.0, 0.0, 0.6497, 0.0, 0.0, 174.7977, 19.7254, 6.3696, 0.0, 120.9261, 390.2478, 119.3429, 0.0, 26.712, 169.1652, 0.0, 159.0859, 0.0, 83.79, 77.2661, 251.856, 298.9896, 0.0], [489.5463, 278.5283, 134.2255, 269.8126, 78.2187, 402.9912, 105.5135, 150.6235, 129.948, 148.9705, 34.5744, 168.8726, 108.193, 131.614, 110.3059, 84.888, 23.7688, 50.9675, 59.447, 15.9137, 7.9694, 71.1186, 40.0118, 3.432, 9.4248], [20.6941, 882.3508, 269.179, 0.0, 76.4841, 56.8522, 224.9986, 65.7324, 84.1869, 98.6605, 0.0, 34.1011, 215.5069, 76.9643, 87.2523, 66.7983, 98.496, 67.1536, 28.7758, 37.6426, 40.9671, 22.7536, 404.0501, 181.5739, 108.0456, 48.4344], [29.5926, 100.8338, 1594.9868, 420.714, 0.0, 17.2372, 73.1707, 212.868, 20.8153, 113.0606, 108.39, 11.2801, 38.7316, 314.8319, 171.1487, 128.3624, 75.4448, 36.216, 24.3432, 59.881, 0.0, 99.8777, 276.7598], [59.5051, 322.2367, 877.347, 199.0601, 8.3512, 198.1148, 120.3518, 175.7765, 100.179, 141.6433, 38.7228, 43.8148, 188.1522, 291.2462, 110.9042, 63.3247, 104.832, 112.7032, 7.1401, 109.6733, 0.0, 174.3204, 423.3365, 45.6667, 56.0976, 93.1896], [32.22, 81.9262, 195.8349, 1455.2951, 373.3188, 24.8134, 73.3148, 47.0312, 716.6362, 67.358, 48.0778, 75.803, 18.0706, 70.7952, 200.6687, 81.1724, 54.7359, 95.5867, 25.344, 11.045, 22.4071, 76.8581, 44.0478, 116.9336, 313.404, 128.1614, 40.9968, 40.9752], [58.6253, 355.8746, 1678.3847, 399.5485, 0.0, 91.0371, 189.824, 264.4229, 97.0554, 42.8035, 117.7862, 205.5395, 113.0665, 111.8415, 63.1772, 99.4073, 0.0, 55.08, 63.7517, 14.4596, 90.0384, 34.023, 59.2488, 161.8852, 9.2189, 88.92, 121.5396], [10.116, 100.5349, 457.028, 1680.4697, 590.6876, 27.2844, 44.0794, 7.9218, 481.14, 62.3118, 146.608, 148.5216, 36.0562, 189.5653, 80.7295, 76.8393, 108.0318, 59.868, 57.2573, 0.0, 79.7328, 0.5586, 259.6432, 32.6462, 46.488, 45.6372], [41.9095, 753.6967, 1112.9463, 683.92, 131.2511, 94.3681, 88.3646, 427.369, 52.6095, 29.8204, 80.4012, 85.5549, 51.1619, 106.0879, 21.1513, 142.2593, 55.3778, 67.212, 125.1178, 36.7591, 39.4325, 26.3129, 288.3866, 425.6267, 46.1419, 55.1304, 171.7128], [97.7622, 194.3168, 2192.5334, 357.9964, 78.181, 139.3531, 104.7331, 467.1432, 0.0, 104.6081, 36.5187, 202.6493, 22.9879, 106.0879, 157.8045, 168.4659, 156.7873, 25.416, 168.6351, 9.6876, 165.432, 0.0, 331.2498, 565.6942, 53.5075, 95.0664], [148.8694, 551.0703, 1889.3817, 383.9665, 60.1401, 158.8541, 108.8315, 774.4896, 23.7249, 187.3412, 66.54, 152.9551, 77.2367, 385.7927, 253.207, 116.3236, 4.6481, 70.38, 146.9869, 67.8311, 203.2915, 62.5315, 152.535, 286.0414, 135.4795, 118.6224, 163.7748], [331.7837, 469.3326, 2282.1863, 797.1492, 51.3313, 218.0686, 65.3988, 657.0331, 39.1096, 269.6686, 228.1087, 234.75, 90.3668, 163.119, 278.8433, 118.3752, 2.9738, 106.956, 115.354, 27.5379, 246.5208, 28.5936, 208.6185, 364.3924, 94.7074, 0.0, 55.2888], [281.263, 523.345, 2870.5592, 954.5274, 34.1026, 260.337, 109.5312, 741.4805, 165.7446, 181.323, 213.6478, 247.7698, 125.929, 536.2942, 263.7273, 262.5312, 88.6645, 77.292, 173.3181, 55.8652, 143.7902, 57.2893, 269.6921, 470.4676, 185.0904, 108.264, 189.0252]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

