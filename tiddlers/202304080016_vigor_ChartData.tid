created: 20230408001602000
creator: Drevarr
modified: 20230705163524865
modifier: drevarr
tags: ChartData
title: 202304080016_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["N Er Gal", "Arriasa", "Mistwalker Caelon", "Guild Dahddy", "Tegan Parker", "Xyntharos", "Mac Chiato", "Reyga Bannerclaw", "Zadie Miststep", "Arcanophage Farra", "Mike The Archmagus", "Newtype Khan", "Drevarr Moonwillow", "Zenek Tryst"];
const professions = ["Dragonhunter", "Druid", "Vindicator", "Tempest", "Tempest", "Vindicator", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.1513, 118.6848, 0.0, 0.0, 0.0, 33.3749, 0.0, 327.7688], [0.0, 0.0, 55.1931, 0.0, 0.0, 7.594, 0.0, 0.0, 0.0, 21.3615, 26.7312, 124.3008, 0.0, 35.2461, 0.0, 0.0, 0.0, 238.7045], [13.3226, 9.161, 14.2242, 15.3468, 11.8943, 3.9437, 20.5162, 10.5105, 5.9021, 11.9472, 0.0, 11.808, 8.0571, 15.1483, 7.4482, 0.0, 34.6484, 25.8453, 46.5887, 58.1568, 34.7069, 19.2556, 24.7848, 18.8866, 9.3812, 82.9168], [83.6694, 23.7938, 133.0368, 105.3562, 86.2316, 146.1696, 94.248], [0.0, 31.3605, 21.2797, 31.8304, 31.5016, 0.0, 31.0128, 0.0, 0.0, 10.5879, 0.0, 0.0, 31.4257, 0.0, 0.0, 0.0, 126.6631, 51.183, 0.0, 95.3472, 31.7866, 50.9436, 26.1648, 31.5638, 0.0, 95.2119], [14.0757, 20.1302, 23.3549, 29.6136, 29.0345, 29.6914, 19.6982, 8.6362, 6.9046, 7.0467, 0.0, 11.7792, 19.7877, 23.2661, 7.0234, 45.293, 36.9279, 55.1075, 86.3616, 31.1126, 30.5578, 43.9392, 35.2598, 13.9308, 127.5989], [0.0, 30.8181, 23.3549, 0.0, 30.8004, 32.0424, 31.0128, 27.2317, 0.0, 34.1961, 29.2176, 7.4016, 0.0, 55.1573, 0.0, 31.1244, 117.5902, 50.2101, 85.2463, 116.5632, 38.6381, 6.4883, 0.0, 57.3619, 0.0, 184.2763], [32.195, 132.0384, 263.3904, 48.2646, 78.384, 87.8909, 46.6052, 357.0071], [99.6988, 155.7578, 167.408, 124.8775, 62.1981, 0.0, 38.5786, 0.0, 31.1273, 0.0, 0.0, 0.0, 16.2994, 94.369, 0.0, 21.534, 30.6478, 31.5135, 23.5, 125.424, 47.1744, 15.9487, 116.5824, 56.0314, 18.1984, 307.0771], [3.5839, 0.0, 45.5778, 0.0, 0.0, 0.0, 0.0, 65.6355, 0.0, 49.3626, 0.0, 65.2896, 39.2358, 145.105, 0.0, 70.6996, 18.8602, 168.8616, 147.2275, 260.208, 190.607, 0.0, 94.3368, 121.968, 64.39, 276.9392], [92.9986, 170.7449, 151.2973, 90.5461, 180.9849, 213.6034, 395.8051, 52.2585, 121.0001, 166.6882, 64.2096, 69.9264, 19.3555, 87.9182, 45.7934, 32.3084, 27.1472, 78.2127, 107.865, 159.4944, 72.4464, 0.0, 30.084, 46.6066, 19.7212, 231.0575], [119.5659, 86.4874, 54.633, 87.6473, 69.8333, 235.0282, 119.4845, 54.3165, 0.0, 110.7082, 56.2752, 101.6928, 78.0085, 67.6963, 49.3901, 0.0, 156.5965, 254.3499, 155.805, 218.0256, 22.3517, 75.348, 143.8512, 115.1674, 55.9488, 272.441], [59.0558, 60.0691, 97.7584, 80.0307, 85.5712, 89.112, 188.3942, 85.4805, 10.7692, 93.1451, 101.7504, 65.2896, 91.8383, 129.5942, 61.7659, 65.6676, 244.8249, 167.6349, 198.6338, 409.7184, 355.9421, 131.3985, 277.8216, 139.561, 71.158, 751.3493], [59.1856, 72.6053, 79.4216, 87.7041, 127.8503, 89.567, 133.321, 90.8828, 70.954, 133.4936, 58.968, 98.5248, 79.0272, 153.5126, 83.5723, 80.8524, 301.7626, 248.4279, 245.3987, 478.7328, 215.3174, 90.5013, 247.9032, 158.2997, 99.3956, 691.6732]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

