created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "High Sorcer Baradun", "Tootsie Pop Rocks", "Varen Frostwood", "Tegan Parker", "Tribal S", "Klengah", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Tempest", "Tempest", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.7672, 8.1432, 24.3722, 155.5481, 230.6256, 93.3829, 145.8475, 82.6426, 29.1915, 139.1551, 19.8492, 18.7988, 116.4045, 0.0, 1.8251], [158.9209, 85.7385, 41.0647, 141.0599, 93.1776, 280.7296, 339.376, 49.7974, 115.5375, 243.7977, 469.6671, 93.7537, 127.6723, 27.0727, 0.0], [5.1667, 344.1466, 231.7288, 110.9644, 233.921, 279.6432, 156.3159, 217.9922, 18.3696, 37.9665, 304.348, 354.6585], [0.0, 32.4486, 174.1784, 13.7945, 103.8698, 307.1328, 189.3799, 485.2235, 256.932, 403.955, 589.638, 160.0599, 225.1759, 40.6296, 28.5382], [96.9363, 207.2601, 42.1659, 131.4202, 433.6512, 167.6922, 624.994, 46.3905, 342.6678, 1029.8232, 247.4472, 356.7556, 0.0, 0.0], [488.8229, 378.8937, 160.5202, 289.535, 830.76, 412.7437, 1244.5343, 0.0, 97.461, 658.3152, 4136.5149, 618.2576, 151.2986, 0.0, 0.0], [57.7535, 689.0669, 261.013, 771.6215, 339.7302, 484.3248, 370.0944, 1015.6348, 357.9251, 170.235, 1103.9062, 3942.9852, 319.4591, 518.7768, 0.0, 26.6094], [31.3443, 718.0568, 669.5433, 559.0822, 651.739, 1077.8352, 553.0358, 1521.1148, 210.5968, 711.36, 1169.8605, 5353.446, 793.8731, 396.1932, 83.6806, 17.5668], [71.5689, 473.5315, 342.7191, 510.9464, 576.7885, 1221.024, 498.4778, 2550.9292, 110.6029, 911.43, 1355.0731, 5014.5501, 1347.2059, 1726.1665, 208.8662, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

