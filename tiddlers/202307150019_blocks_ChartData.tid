created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "\u00c1rkantor", "Sister Elonith", "Blancooo Padreee", "Arcanophage Farra", "Grim Grooblin", "Lord Erin The Wise", "Daring Deathblade", "Bodger Bloddger", "Oo Dads Mad", "The Fancy Cheese", "Glorious Gluvs", "Daphne Agla\u00e9", "Mememonoko", "Venomina", "\u00c1rkantor", "Arch Payne", "Gavann", "Drumina", "Regis Hawkesburne", "Air One Com", "Gabe Malhorn", "Mike The Archmagus", "Arriasa", "Grasszanine", "Mort\u00e4rion", "Skyew\u00edng", "Mmathuss", "Newtype Khan", "Johosh The Mighty", "Xanvias Einzbern", "Kahlianne", "Duke Silvver", "Zaedy Zae", "Tribal S", "Mister Jekyll", "Be\u00eb", "Bombmaker Caelon", "Artakama Nahid", "Tika Fiery", "Gestern Yesteryear", "Solus Sanctus", "Drevarr Moonwillow", "Bella Sassy", "Black Raspberry Pie", "Aronorf Xideliesi", "Mesmerizing Dark", "Ryvalia Fazebringer", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Tempest", "Herald", "Berserker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Weaver", "Reaper", "Berserker", "Berserker", "Scrapper", "Berserker", "Scourge", "Vindicator", "Scourge", "Vindicator", "Berserker", "Firebrand", "Druid", "Berserker", "Firebrand", "Firebrand", "Weaver", "Druid", "Spellbreaker", "Scrapper", "Druid", "Firebrand", "Spellbreaker", "Berserker", "Berserker", "Scourge", "Vindicator", "Druid", "Druid", "Scourge", "Scourge", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55], [6, 1, 5, 6, 14, 14, 7, 7, 0, 1], [2, 0, 1, 6, 2, 2, 8, 5, 2, 9, 2, 0, 3, 17, 5], [38, 13, 9, 5], [46, 12, 11, 3], [4, 11, 2, 3, 23, 4, 1, 7, 2, 1, 0, 3, 14], [0, 21, 2, 7, 9, 6, 5, 2, 3, 1, 1, 0, 3, 6, 4, 2, 3, 7, 2, 0, 1], [3, 0, 2, 2, 4, 0, 21, 3, 1, 13, 1, 3, 2, 2, 17, 0, 2, 1, 1, 0, 0, 2, 1, 4], [2, 0, 1, 0, 5, 1, 16, 0, 0, 8, 16, 5, 0, 11, 2, 4, 2, 2, 8, 0, 1, 1, 2, 1, 0, 2, 1, 1], [7, 10, 7, 5, 12, 6, 0, 11, 0, 21, 1, 5, 7], [1, 0, 3, 3, 8, 0, 1, 4, 9, 0, 10, 1, 4, 0, 3, 13, 9, 5, 0, 3, 4, 0, 5, 8, 4], [3, 1, 3, 10, 6, 0, 5, 0, 2, 1, 9, 5, 0, 7, 2, 2, 5, 6, 4, 4, 1, 9, 2, 0, 3, 5, 4], [3, 0, 6, 9, 9, 2, 0, 0, 5, 6, 5, 6, 6, 10, 0, 1, 5, 5, 2, 2, 3, 9, 1, 5, 4], [1, 0, 1, 20, 1, 0, 5, 4, 2, 4, 18, 10, 1, 7, 1, 0, 5, 29, 5], [4, 1, 2, 6, 10, 1, 11, 4, 7, 1, 5, 5, 0, 6, 0, 13, 0, 1, 7, 6, 6, 2, 16, 0, 2, 3, 3], [8, 2, 9, 10, 9, 1, 30, 3, 3, 12, 3, 8, 3, 5, 21], [6, 2, 7, 11, 2, 12, 4, 4, 2, 19, 5, 5, 2, 8, 2, 1, 4, 7, 7, 2, 12, 4, 1, 4, 5, 3], [44, 14, 10, 13, 20, 3, 1, 11, 1, 6, 2, 6, 12], [2, 0, 5, 7, 8, 0, 8, 3, 4, 3, 20, 6, 1, 5, 0, 11, 0, 5, 10, 7, 8, 5, 5, 3, 2, 10, 15], [6, 0, 4, 6, 8, 2, 29, 11, 0, 6, 5, 4, 0, 4, 6, 1, 2, 10, 12, 10, 2, 8, 6, 0, 9, 7, 4], [4, 1, 9, 8, 7, 3, 10, 7, 15, 5, 5, 1, 3, 1, 2, 7, 7, 7, 1, 6, 9, 2, 17, 29, 4], [7, 5, 19, 14, 2, 15, 4, 0, 8, 2, 11, 2, 4, 16, 10, 9, 2, 9, 4, 1, 6, 17, 5], [3, 0, 3, 9, 8, 2, 17, 12, 8, 6, 18, 5, 0, 10, 1, 22, 2, 2, 7, 9, 8, 3, 7, 10, 1, 3, 5, 6], [5, 6, 8, 15, 3, 7, 4, 6, 6, 16, 1, 1, 8, 1, 27, 0, 3, 11, 11, 9, 3, 10, 12, 1, 7, 14, 5], [2, 0, 4, 7, 18, 33, 8, 7, 8, 17, 5, 0, 7, 0, 13, 1, 3, 8, 11, 10, 2, 6, 11, 1, 10, 14, 6], [8, 0, 3, 4, 20, 0, 14, 17, 6, 9, 19, 9, 1, 5, 1, 23, 2, 3, 11, 5, 12, 3, 12, 13, 1, 15], [9, 5, 10, 13, 0, 32, 9, 6, 8, 20, 8, 0, 8, 1, 8, 3, 3, 10, 16, 16, 2, 1, 4, 0, 25], [43, 10, 9, 15, 17, 7, 1, 10, 1, 19, 2, 4, 11, 17, 11, 4, 13, 10, 1, 12], [7, 0, 8, 14, 4, 2, 28, 5, 11, 9, 9, 4, 0, 5, 0, 23, 2, 4, 9, 16, 9, 1, 12, 10, 1, 14, 5, 6], [5, 0, 7, 6, 15, 1, 28, 7, 13, 5, 14, 5, 0, 11, 0, 18, 2, 5, 10, 12, 8, 1, 12, 13, 7, 18, 6], [5, 0, 4, 11, 18, 1, 2, 6, 6, 14, 16, 5, 0, 15, 0, 24, 3, 4, 11, 15, 8, 1, 11, 8, 1, 17, 14, 9], [9, 0, 5, 14, 15, 1, 21, 1, 3, 2, 24, 5, 0, 8, 0, 21, 1, 3, 12, 26, 13, 3, 8, 15, 9, 16, 8], [16, 0, 2, 5, 2, 1, 25, 15, 6, 21, 24, 5, 1, 10, 1, 4, 2, 6, 17, 12, 15, 1, 8, 14, 0, 13, 13, 9], [4, 0, 8, 13, 25, 0, 20, 12, 5, 4, 27, 5, 1, 8, 2, 18, 1, 2, 16, 23, 14, 1, 11, 19, 1, 4, 4, 1], [6, 0, 3, 16, 5, 2, 33, 11, 14, 4, 25, 4, 1, 7, 0, 26, 2, 6, 8, 14, 9, 3, 14, 10, 2, 5, 19, 7], [4, 1, 11, 8, 17, 1, 42, 5, 6, 8, 9, 1, 12, 1, 11, 4, 5, 13, 22, 15, 6, 9, 16, 1, 13, 15, 7], [7, 0, 8, 10, 12, 1, 39, 12, 8, 6, 19, 4, 0, 9, 1, 27, 4, 6, 8, 19, 5, 4, 9, 13, 1, 16, 9, 8], [5, 1, 5, 12, 18, 1, 31, 8, 8, 4, 15, 5, 0, 14, 0, 47, 2, 2, 17, 14, 7, 1, 10, 13, 0, 11, 9, 5], [5, 0, 4, 14, 13, 1, 40, 10, 14, 5, 20, 4, 1, 7, 2, 24, 0, 2, 9, 14, 12, 3, 11, 13, 0, 15, 19, 9], [6, 1, 8, 10, 9, 1, 35, 12, 14, 12, 19, 3, 0, 8, 1, 35, 2, 2, 13, 16, 11, 3, 13, 9, 0, 17, 20, 9], [7, 1, 4, 15, 28, 1, 19, 11, 9, 13, 16, 3, 0, 9, 41, 2, 6, 15, 27, 9, 2, 15, 10, 1, 11, 19, 8], [10, 0, 9, 10, 25, 1, 53, 15, 15, 12, 20, 3, 2, 8, 2, 30, 2, 6, 18, 14, 7, 2, 18, 11, 1, 14, 18, 8], [1, 50, 15, 13, 16, 24, 10, 1, 17, 1, 43, 1, 4, 19, 24, 17, 2, 17, 21, 1, 21, 24, 9], [12, 2, 9, 6, 18, 1, 41, 15, 12, 12, 21, 10, 2, 10, 1, 38, 3, 4, 14, 24, 12, 5, 12, 22, 2, 18, 20, 7], [8, 1, 3, 17, 14, 1, 23, 21, 20, 14, 26, 5, 1, 11, 0, 22, 1, 7, 23, 46, 9, 3, 10, 30, 1, 13, 33, 10], [12, 1, 11, 21, 20, 1, 59, 16, 12, 16, 26, 9, 1, 7, 0, 37, 2, 5, 13, 22, 11, 2, 11, 15, 1, 17, 15, 11], [8, 0, 4, 7, 21, 2, 5, 3, 23, 58, 6, 1, 9, 1, 39, 4, 4, 42, 33, 10, 5, 11, 19, 0, 37, 25, 7], [22, 1, 8, 11, 26, 1, 49, 17, 16, 11, 24, 8, 1, 20, 1, 39, 5, 5, 17, 18, 20, 7, 24, 20, 2, 25, 24, 7], [7, 0, 7, 14, 66, 3, 77, 19, 40, 17, 39, 4, 0, 27, 3, 3, 3, 5, 13, 71, 18, 5, 13, 54, 0, 10, 41, 20], [22, 2, 15, 14, 40, 1, 105, 4, 17, 24, 33, 8, 0, 40, 2, 56, 2, 8, 15, 45, 14, 6, 26, 33, 2, 42, 58, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

