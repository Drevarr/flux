created: 20230408001602000
creator: Drevarr
modified: 20230705163524779
modifier: drevarr
tags: ChartData
title: 202304080016_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Air One Com", "Koralia Danai", "Kos\u00e4ir", "Gavann", "Tegan Parker", "Mmathuss", "Zenek Tryst", "Mac Chiato", "Venomina The Siren", "Viral Marketing", "Lucky Leipreach\u00e1n", "Sister Elon\u00edth", "Solus Sanctus", "Aronorf Xideliesi", "Drevarr Moonwillow", "Bella Sassy", "Newtype Khan", "Arcanophage Farra"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Herald", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.4409, 1.6072, 1.8865, 2.4441, 12.8032, 6.181, 18.335, 7.4603, 0.9702, 1.6812, 2.808, 0.0288, 3.087, 7.6104, 13.3387, 0.0, 8.287, 10.8288, 17.155, 17.472, 20.4422], [3.1683, 4.6006, 2.0374, 4.4335, 3.4021, 1.3272, 8.8608, 5.88, 0.8408, 0.2862, 1.0944, 1.1232, 1.9757, 13.5538, 6.1454, 12.2877, 10.8288, 5.2875, 11.232, 21.4531, 1.2139, 6.5136, 5.0266, 5.9032, 38.2347], [0.2597, 3.4153, 1.4337, 6.5934, 4.5707, 12.9307, 13.2912, 4.557, 0.0, 1.86, 0.2016, 2.1888, 1.8831, 14.641, 5.9472, 0.666, 8.3585, 7.1487, 11.3388, 20.3424, 10.7827, 4.1023, 4.692, 3.5112, 10.1896, 33.7365], [14.3338, 17.04, 6.7968, 3.6576, 5.5224, 6.0236, 20.9319, 12.0555, 19.6813, 44.4288, 43.3555, 12.7254], [5.2229, 0.2862, 4.0464, 1.0368, 2.377, 31.0939, 5.3525, 17.6457, 9.6021, 8.9887, 26.9568, 19.4314, 14.5254, 5.6304, 14.8949, 46.1815], [0.0, 4.2993, 2.3393, 0.0, 2.8567, 0.0, 21.1296, 0.0, 0.0, 3.9347, 28.9872, 0.0, 8.9214, 15.8731, 0.0, 0.0, 11.0732, 13.2399, 0.0, 9.4848, 2.9203, 5.693, 0.0, 0.0, 0.0, 84.2663], [3.1164, 6.1074, 4.2258, 7.7302, 4.8304, 6.2947, 10.9738, 0.4778, 1.0672, 0.7154, 1.5984, 4.9536, 3.4883, 22.6138, 11.2714, 3.0044, 13.9308, 10.7019, 5.2287, 22.2144, 28.9786, 0.0, 6.624, 6.2832, 4.136, 26.2395], [0.6233, 0.3415, 1.396, 9.2081, 5.5835, 5.688, 7.7702, 4.263, 3.6221, 7.0467, 5.4, 5.3568, 2.9944, 4.4938, 9.0058, 2.2052, 18.1458, 8.7984, 10.575, 21.5904, 13.2538, 8.372, 16.3944, 6.7637, 3.6096, 44.982], [0.0, 4.8015, 0.0, 0.0, 0.0, 0.0, 9.815, 0.0, 4.5438, 0.0, 0.0, 0.0, 0.0, 8.1902, 0.0, 4.4696, 4.4293, 4.653, 5.64, 45.1776, 38.8627, 0.0, 30.36, 22.2499, 0.6204, 65.6737], [1.74, 0.0, 0.0, 0.0, 0.7791, 5.2709, 3.8851, 2.058, 4.6084, 3.112, 0.0, 0.0, 1.1113, 0.0, 5.4658, 20.0392, 25.2183, 9.6021, 8.9887, 36.5664, 16.511, 19.5486, 16.836, 12.6773, 2.7072, 89.3642], [3.2203, 1.8684, 1.5469, 3.4672, 0.857, 14.22, 22.9699, 6.762, 2.5063, 5.437, 2.7216, 0.7488, 5.5257, 29.5718, 15.2645, 0.0148, 23.0037, 15.4818, 13.63, 41.4336, 24.7104, 9.0836, 11.4264, 13.2317, 4.8316, 46.6313], [0.0, 1.0246, 0.0, 2.3873, 0.0, 0.0, 13.9861, 4.824, 0.0288, 0.0, 0.0, 0.0, 0.0, 24.2802, 29.0812, 63.648, 49.7578, 13.1859, 30.5256, 17.2973, 6.5048, 76.3195], [2.623, 6.2882, 5.3577, 6.6503, 9.9985, 7.0531, 24.3331, 1.6905, 7.2927, 5.4013, 0.9792, 8.8992, 3.6735, 19.4971, 11.1014, 0.9916, 21.7892, 11.6325, 14.6875, 43.1808, 34.9315, 6.3209, 17.7192, 9.7944, 5.9032, 53.0788], [2.1555, 7.6543, 9.6589, 4.8314, 8.1026, 16.116, 25.2192, 9.5183, 8.2305, 3.8632, 2.952, 4.32, 1.0805, 19.0622, 1.0195, 0.0, 15.1453, 20.6424, 22.56, 39.5616, 29.9894, 4.772, 10.4328, 5.8027, 2.9328, 74.0704], [4.1033, 4.4801, 8.3006, 2.1031, 8.5961, 3.2611, 15.1997, 8.4525, 2.9429, 2.182, 4.0464, 14.7456, 8.798, 22.6138, 16.8504, 32.4338, 9.2214, 26.32, 45.4272, 31.8989, 8.2046, 16.3392, 9.0922, 4.6436, 46.4814], [6.1289, 13.3197, 6.8291, 9.1512, 10.2322, 8.0011, 22.0157, 11.7968, 7.4867, 8.6921, 8.3232, 12.24, 10.7119, 19.0622, 11.4413, 4.8248, 31.7194, 18.4851, 30.6675, 38.8128, 21.3408, 16.0742, 20.8656, 10.3488, 6.8996, 65.3738], [5.3498, 3.0336, 9.8853, 15.972, 9.3752, 12.8549, 12.1325, 8.379, 6.8237, 4.7216, 3.6864, 7.8912, 2.0374, 23.0486, 10.7616, 7.992, 41.4352, 10.152, 15.3925, 63.3984, 25.9459, 9.5441, 24.7296, 20.7346, 6.6364, 72.421], [15.5041, 26.4184, 25.3546, 22.8497, 35.8126, 41.3328, 50.8474, 30.3188, 14.1487, 19.8524, 8.0784, 9.1008, 16.2685, 28.992, 14.6981, 11.6476, 38.2918, 27.2412, 39.5975, 78.624, 24.7104, 15.5719, 38.8056, 21.7694, 12.6148, 103.4586], [28.8527, 19.7686, 49.1622, 29.1589, 33.9947, 44.6698, 41.7821, 39.1755, 22.0882, 31.5849, 22.0752, 40.2912, 32.5061, 111.5467, 36.2496, 17.7008, 102.5164, 68.1453, 80.37, 136.9056, 100.4141, 12.0138, 60.4992, 54.0725, 33.9528, 175.7297]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

