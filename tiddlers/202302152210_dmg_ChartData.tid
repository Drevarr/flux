created: 20230215221053000
creator: Drevarr
modified: 20230705163519316
modifier: drevarr
tags: ChartData
title: 202302152210_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Erika Simon", "Kira Dragonblaze", "Veron Blackburn", "K\u00e2 \u00d4tik R\u00e6j", "Smol Gluvs", "Ace Hammers", "Tootsie Pop Bringer", "Skye Nightroad", "Dark Sidiuz", "Rina Of Theros", "Kosair", "Be\u00eb", "Jeckyll Mbs", "Lord Charrior", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Legacy Of Mathus", "Smol Daddy Tika", "Xyntharos", "My Birthday Girl", "Sassy Daddy Demon", "Xanvias Tseli"];
const professions = ["Soulbeast", "Dragonhunter", "Herald", "Berserker", "Scourge", "Vindicator", "Scrapper", "Scrapper", "Scourge", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[314.1909, 989.8714, 552.1042, 623.5085, 385.1778, 60.7538, 703.6066, 104.4286, 285.0704, 885.702, 850.7353, 453.6418, 417.3, 493.75, 1228.9221, 636.12], [387.9299, 464.6611, 681.2796, 252.0894], [354.3971, 373.3003, 180.1935, 423.2073, 180.9909, 468.981, 901.875], [114.3727, 843.1, 1377.2292, 577.3475, 114.4, 1713.1385, 615.7869, 360.4048, 339.0352, 487.8411, 659.9776, 764.22, 107.8611, 512.6104, 11.7179, 310.3604, 0.0, 1411.9487], [225.8336, 283.5864, 142.1398, 239.2602, 128.9182, 302.4286, 786.9792, 316.6864, 0.0, 303.8308, 633.7377, 213.7619, 78.5, 399.351, 365.4104, 62.78, 0.0, 275.3377, 285.36, 530.2707, 0.0, 178.3243, 0.0, 641.1795], [94.219, 290.9539, 386.5591, 326.1707, 44.5591, 357.7048, 1096.0833, 321.2458, 89.2889, 1077.8769, 153.2131, 711.4524, 64.4648, 57.5828, 592.5224, 62.98, 74.3056, 308.7403, 612.84, 245.8872, 188.5405, 0.0, 743.1026], [491.1051, 481.599, 615.2796, 299.0732, 41.05, 662.8476, 1185.25], [531.5051, 58.6804, 845.6344, 174.7398, 328.2227, 693.0762, 1906.6875, 743.7288, 118.9923, 1614.7869, 825.7381, 395.5493, 127.596, 0.0, 806.7612, 488.02, 34.2778, 88.3636, 709.28, 514.9624, 400.7568, 0.0, 686.4359], [139.2204, 317.8448, 416.5914, 608.3659, 291.7409, 528.7095, 2157.7292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 892.3841, 1179.7164, 205.46, 497.3333, 903.3506, 1991.52, 912.4286, 337.7436, 451.8919, 37.0909, 831.1538], [126.5328, 156.5319, 349.3871, 591.6667, 142.2591, 1032.8286, 1453.125, 938.339, 102.2667, 1020.5846, 1231.082, 203.4286, 673.4577, 250.6358, 50.8824, 915.5522, 255.36, 73.0278, 284.6753, 228.2, 1486.7293, 354.5128, 262.5315, 96.5455, 1726.2821], [954.8277, 1014.4287, 2412.4583, 822.5763], [112.7148, 455.8172, 584.0285, 370.7682, 1394.2429, 2332.7083, 939.0847, 80.9111, 1667.2846, 1451.9836, 428.5714, 850.3592, 385.9404, 1445.0896, 353.14, 221.4444, 639.8052, 4247.96, 1381.1053, 183.5405, 86.7576, 1837.5385], [545.3387, 709.6904, 481.4409, 249.4553, 274.5455, 756.7667, 898.5417, 832.1695, 106.4667, 1199.3308, 909.9344, 397.6905, 294.5986, 916.1192, 686.3433, 1242.8797, 3.6923, 131.3874, 246.5641], [1110.8898, 65.7333, 3143.5231, 2496.1967, 26.1429, 768.1338, 1066.3245, 0.0, 3765.6716, 833.24, 93.3333, 1771.2468, 4022.72, 3016.8947, 447.5128, 1841.1622, 34.1515, 4516.8974], [797.6088, 194.1518, 333.1505, 583.5366, 683.8636, 962.8048, 2056.25, 861.9322, 999.8222, 242.7308, 2475.1639, 348.6905, 51.7254, 836.9073, 0.0, 3189.5821, 31.08, 491.3611, 9.5455, 1932.44, 1401.9699], [143.7022, 287.6022, 827.6707, 522.0045, 2115.6762, 2180.625, 1107.0847, 243.2222, 1940.3385, 2746.8361, 295.8095, 935.9437, 919.8146, 189.9706, 2136.3731, 510.6, 230.1667, 397.7532, 1779.28, 1573.0301, 188.9231, 1312.6757, 0.0, 2987.2821], [542.6219, 748.7039, 421.9355, 1157.2154, 128.1455, 1143.0857, 1935.5417, 994.7881, 195.1333, 4.1154, 1710.9016, 69.0476, 390.0211, 306.702, 205.2612, 214.28, 211.2222, 403.0779, 0.0, 2357.1504, 44.1795, 1417.3423, 0.0, 2218.8718], [626.0642, 841.3716, 799.1935, 301.8902, 123.3045, 972.5952, 2733.8333, 731.3475, 307.0, 1093.4385, 914.0984, 256.0476, 403.7535, 517.053, 0.0, 1049.3358, 309.72, 163.8889, 1195.4416, 595.0, 1206.2857, 492.973, 28.7273, 1583.1538], [809.3606, 935.0067, 684.6774, 1177.2114, 319.9045, 1959.7, 3805.2292, 1396.322, 90.6, 2109.6154, 2726.9344, 106.5476, 1202.6767, 0.0, 649.991, 0.0, 1402.1538], [1236.619, 674.1619, 686.0753, 2906.9837, 632.5045, 1155.8619, 2608.9375, 985.6102, 0.2444, 195.9077, 2136.4098, 1069.3095, 549.2183, 407.3974, 560.2164, 312.9, 870.3333, 195.5974, 1473.24, 319.3835, 964.5385, 617.964, 48.4545], [634.7445, 910.9161, 860.2796, 771.8943, 458.1136, 1547.9333, 3342.1875, 947.5424, 0.0, 1542.0923, 2321.7705, 54.4762, 1589.7113, 410.0, 0.0, 1626.1045, 398.02, 228.5556, 1305.013, 1393.68, 1831.1654, 1148.359, 619.0, 662.2727, 1543.9744], [1537.3562, 1798.7013, 2150.7742, 1011.4472, 701.0136, 2829.9095, 2385.4792, 2270.4068, 370.9778, 3772.6769, 5751.3115, 1082.119, 2748.4014, 1131.1523, 5449.3955, 843.2, 77.5556, 4123.7143, 3641.04, 4724.406, 431.1795, 1232.1081, 145.5758, 4953.5641]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

