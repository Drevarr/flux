created: 20230805110022000
creator: Drevarr
tags: ChartData
title: 202308051100_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Grootsmaid", "Drevarr Moonwillow", "Gestern Yesteryear", "Crabbedmermaid", "Brace Stonebrow", "Lord Sahan", "Kisumaiassu", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[76.6935, 14.4981, 39.6724, 0.0, 42.5126, 119.9741, 36.2848, 33.8918, 30.27, 57.6979], [24.5957, 0.0, 1.3583, 12.5215, 56.3894, 5.4317, 14.3539, 14.265, 67.7376, 10.2168, 72.9977, 15.9702, 34.632, 5.5781, 19.92, 38.4934, 79.2792, 6.961, 0.0, 24.6675], [21.1939, 24.8127, 157.585, 7.007, 9.0493, 25.6117, 41.3513, 114.6559, 16.9722, 32.0026, 15.42, 9.5513, 78.745, 3.4808, 105.9345, 13.4418, 33.048, 11.7491, 23.34, 85.3704, 63.023, 26.4869, 0.0, 33.9779, 85.0318, 6.048, 30.4549, 50.6299, 7.8685, 7.681], [63.2281, 41.0989, 201.3125, 51.623, 119.7158, 16.59, 130.153, 2.7086, 116.1562, 16.4346, 41.016, 3.6179, 13.65, 75.2998, 113.0329, 112.5584, 0.0, 75.7988], [10.4213, 44.5127, 116.4804, 278.4276, 35.1514, 58.0378, 58.11, 0.0, 126.7056, 2.1028, 201.3375, 48.9168, 22.584, 0.0, 77.58, 76.4244, 103.2632, 56.9578, 0.3595, 52.0168, 25.9072, 0.0, 0.1179, 13.2489], [296.3329, 5.927, 74.1879, 84.5708, 249.0206, 52.3149, 57.6461, 126.8266, 17.6537, 109.9612, 38.055, 28.92, 2.2264, 28.83, 69.421, 15.3353, 0.0, 12.7449, 95.3557, 78.3243, 37.8624, 52.7827, 11.9676, 1.7152, 25.515], [61.4803, 1.4114, 177.606, 0.0, 3.2458, 51.8027, 196.3853, 43.0854, 42.6701, 8.16, 0.0, 95.0141, 28.6249, 98.707, 42.18, 160.4146, 115.9558, 118.3811, 95.5075, 244.3587, 27.264, 22.8265, 47.5741, 1.2435, 3.1185], [16.8854, 22.9369, 109.9004, 8.1026, 1.1642, 107.2996, 107.5942, 253.0093, 34.1062, 128.6554, 21.075, 0.0, 131.2416, 13.5432, 169.8462, 185.76, 9.744, 28.6286, 69.51, 139.2509, 103.103, 15.2354, 0.0, 72.8134, 137.5275, 15.5584, 120.0886, 19.5611, 11.985, 24.3432]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

