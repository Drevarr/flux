created: 20230710221759000
creator: Drevarr
tags: ChartData
title: 202307102217_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Charr Surethang", "Striptease Hercules", "K\u00e2 \u00d4tik R\u00e6j", "Tika Fiery", "Lord Erin The Wise", "Legacy Of Mathus", "Rozaalyna", "Melli Dragonswrath", "Be\u00eb", "Xanvias Einzbern", "Irin The Undeath", "Il Kurai Il", "Johosh The Mighty", "Ateriuz", "Sister Elonith"];
const professions = ["Tempest", "Berserker", "Berserker", "Berserker", "Firebrand", "Weaver", "Berserker", "Scourge", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.2929, 183.4375, 0.0, 3.4375, 0.0, 36.2264, 16.0889, 8.0758, 1.8036, 21.9302, 0.0, 2.0739, 22.3231, 7.377, 41.5909, 5.6859, 13.25, 0.175, 0.5082, 5.9663, 28.7027], [40.7323, 0.0, 0.0, 42.8188, 0.0, 60.4528, 79.0333], [72.525, 125.4098, 319.382, 0.0, 80.3514], [71.8741, 0.0, 0.0, 0.0, 147.4187], [36.2059, 13.6061, 0.0, 0.0, 48.6, 5.2549, 54.7925, 51.3, 0.0, 0.0, 2.125, 8.3953, 0.0, 7.4965, 2.5538, 50.7049, 57.4091, 11.0577, 66.6, 7.475, 1.5246, 103.0562, 0.0, 78.7027], [27.5584, 85.2727, 0.0, 0.0, 50.9312, 0.0, 36.5283, 67.5778, 0.0, 7.9545, 10.0357, 0.0, 0.0, 23.485, 26.0923, 133.9672, 7.3545, 61.0769, 16.85, 13.225, 0.0, 2.2809], [59.8009, 0.0, 0.0, 0.0, 129.7438, 0.0, 311.4717, 126.35, 0.0, 15.9091, 21.5714, 0.0, 20.0667, 5.7829], [51.6407, 436.9697, 0.0, 0.0, 69.4875, 0.0, 126.2642, 83.9222, 8.0909, 126.5303, 0.0, 0.0, 24.7556, 16.9376, 37.0462, 74.541, 73.6909, 59.7692, 71.15, 38.275, 61.7705, 98.7528, 9.05, 180.7432], [66.3844, 0.0, 0.0, 0.0, 5.7451, 49.1698, 108.7333, 0.0, 45.6061, 54.6071, 52.093, 12.7333, 31.6282, 52.5385, 256.9836, 186.9636, 17.3718, 271.1, 53.725, 86.0492, 57.7978, 0.0, 113.8919], [21.4645, 28.3333, 7.6562, 0.0, 27.475, 15.0392, 59.9434, 67.0944, 54.5455, 169.2273, 80.5357, 29.5814, 1.6, 35.1594, 130.9846, 151.8689, 129.8727, 61.7372, 304.95, 85.925, 96.541, 130.5618, 170.3243], [54.4966, 0.0, 0.0, 0.0, 68.2375, 4.7255, 118.5472, 203.5333, 0.0, 47.7879, 38.6607, 96.2093, 0.0, 53.224, 93.9846, 8.459, 134.1818, 88.5769, 150.55, 82.4, 21.3934, 74.1011, 243.0135], [91.8558, 14.9394, 9.25, 0.0, 56.8312, 10.8824, 141.3962, 121.3111, 93.6364, 102.4394, 49.875, 56.2093, 44.1556, 75.0485, 17.1538, 158.3115, 97.7756, 183.05, 40.525, 183.4918, 81.3371, 0.0, 77.3378], [119.5858, 87.7879, 193.4375, 1.9748, 74.3375, 4.549, 137.6604, 119.5222, 9.2727, 53.3333, 58.4643, 76.3256, 14.2667, 55.806, 90.0727, 88.8462, 274.7, 100.075, 57.2295, 115.6067, 60.15, 125.2838], [74.5149, 99.7273, 0.0, 0.0, 143.3688, 0.0, 156.9623, 185.2667, 0.0, 101.4545, 133.4821, 186.6512, 25.1778, 81.8753, 121.2154, 224.2459, 133.7455, 125.2372, 562.0, 144.4, 154.5082, 199.9326, 0.0, 93.8243], [3.4843, 357.575, 0.0, 252.7736, 109.0333, 0.0, 92.8182, 79.7321, 18.6744, 24.5111, 85.6628, 135.1077, 348.7377, 327.0091, 0.4744, 19.7, 82.2, 406.8689, 363.5281, 0.0, 427.2432], [110.357, 5.9091, 0.0, 4.327, 187.1188, 11.6471, 404.8868, 139.2833, 2.7727, 45.8333, 147.3571, 147.4651, 4.2444, 68.963, 488.4769, 266.3279, 194.0727, 38.7692, 176.35, 241.925, 268.4262, 410.6517, 6.4, 202.4189]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

