created: 20230329220116000
creator: Drevarr
modified: 20230705163523270
modifier: drevarr
tags: ChartData
title: 202303292201_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Redoxone", "Blancooo Padreee", "Baidu Sugiyama", "Oo Dads Mad", "Panther B Me", "Abigail Ryn", "Bee Honeybringer", "Band Aidbringer", "Spicy Gyrosbringer", "Zaylen Harker", "Bork Borkbringer", "Rina Of Theros", "Lord Mac\u00fcmbeiro", "Sp\u00edcy Cheese", "Tootsie Pop Bringer", "Bura Beignetbringer", "Morton Saltbringer", "Arkintor", "Seren Nightroad", "Charred Fishbringer", "Legacy Of Mathus", "Sumatra Satyricon", "Nazhul Naxxremis", "Cinder Flamebringer", "Xanvias Tlesel", "Mort\u00e4rion", "Sister Elon\u00edth", "Ryvalia Fazebringer", "My Birthday Girl", "Pieca Pizzabringer", "Domina Flagbringer", "Iced Coffeebringer", "Gavann", "Johosh The Great", "Avian Nefaris", "Big Macbringer", "Smol Gluvs", "Newtype Khan", "Sizzln Sisigbringer", "Jorja Peachbringer", "Brioche Bunbringer", "Ravioli Fetabringer", "Cael Saladbringer", "Boysto Yardbringer", "\u00c4lplrmagron\u00e4bringer"];
const professions = ["Soulbeast", "Berserker", "Scourge", "Spellbreaker", "Scourge", "Tempest", "Scourge", "Scrapper", "Scrapper", "Firebrand", "Tempest", "Scourge", "Berserker", "Berserker", "Scrapper", "Firebrand", "Chronomancer", "Tempest", "Scourge", "Scrapper", "Berserker", "Soulbeast", "Scourge", "Weaver", "Berserker", "Berserker", "Dragonhunter", "Chronomancer", "Scrapper", "Firebrand", "Spellbreaker", "Scourge", "Firebrand", "Firebrand", "Tempest", "Tempest", "Scourge", "Spellbreaker", "Weaver", "Chronomancer", "Chronomancer", "Firebrand", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29, 3], [1, 1, 11, 1, 19, 0, 0, 0, 0, 0], [0, 0, 11, 1, 19, 1, 0, 1, 0, 0], [2, 4, 5, 27], [0, 2, 16, 0, 18, 2, 0, 0, 0, 1], [1, 0, 18, 1, 22], [0, 0, 16, 0, 24, 3, 0, 0, 0, 0], [0, 0, 14, 4, 25, 1, 0, 0, 0, 0], [1, 2, 19, 4, 15, 3, 0, 0, 0, 0], [1, 0, 11, 1, 22, 6, 0, 2, 0, 1], [0, 1, 19, 0, 25, 0, 0, 0, 0], [0, 0, 15, 1, 28, 3, 0, 1, 0, 0], [0, 13, 0, 33, 2, 0, 2], [48, 2, 0], [1, 0, 28, 0, 23, 1, 0, 1, 0, 0], [0, 1, 16, 1, 32, 5, 0, 0, 0, 0], [0, 3, 21, 0, 27, 3, 0, 2, 0], [0, 1, 26, 1, 28, 1, 0, 1, 0], [17, 2, 39, 1, 0, 0], [1, 1, 26, 3, 22, 5, 1, 2, 3, 2], [0, 0, 27, 3, 32, 2, 1, 1, 1, 0], [0, 1, 22, 1, 43, 4, 0, 0, 0, 0], [1, 1, 45, 3, 22], [3, 1, 39, 2, 35, 3, 0, 0, 0], [1, 1, 30, 2, 43, 6, 0, 1, 0, 0], [0, 0, 30, 1, 51, 4, 1, 0], [5, 72, 10, 3, 0, 1], [2, 4, 33, 8, 35, 7, 4, 3, 3, 1], [3, 49, 1, 48, 5, 3, 0, 0, 0], [28, 7, 60, 8, 0, 4, 0, 2], [3, 1, 35, 7, 55, 6, 0, 2, 1], [3, 0, 59, 2, 58, 3], [4, 2, 46, 6, 63, 3, 1, 2, 1, 2], [2, 0, 46, 2, 75, 9, 2, 3, 3, 2], [0, 6, 116, 12, 2, 2, 1, 5], [0, 0, 54, 5, 79, 6, 0, 0, 0, 1], [4, 3, 59, 5, 60, 7, 3, 4, 2, 1], [3, 2, 58, 7, 62, 8, 1, 4, 0, 4], [4, 2, 65, 12, 48, 7, 4, 3, 3, 2], [4, 3, 81, 9, 83], [1, 0, 78, 8, 81, 8, 2, 4, 2, 0], [5, 4, 64, 8, 90, 11, 2, 2, 2], [3, 2, 72, 10, 94, 15, 2, 1, 0], [6, 1, 22, 12, 190, 23, 1, 3, 3, 3], [8, 3, 100, 11, 141, 16, 5, 5, 6, 5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

