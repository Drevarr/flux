created: 20230222220539000
creator: Drevarr
modified: 20230705163519890
modifier: drevarr
tags: ChartData
title: 202302222205_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Ark Darkness", "Kiloak", "Blanco Padre Guard", "Kosair", "Sygaldry Verdandi", "Zaylen Harker", "Bella Sassy", "Ravioli Fetabringer", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.9514, 125.2343, 24.957, 39.1296, 51.84, 186.7207, 105.1661, 84.875, 56.1688], [24.061, 0.0, 40.435, 23.0714, 169.152, 131.8656, 423.3638, 188.7898, 39.96, 213.6056], [39.5564, 63.8498, 125.2343, 151.184, 209.6256, 94.3104, 393.1616, 222.9638, 334.0656, 165.5227], [64.2394, 92.1596, 63.2848, 66.0256, 190.3876, 210.6371, 97.7664, 0.0, 602.978, 119.7562, 540.7387, 165.566], [83.5997, 17.6564, 87.6784, 63.8498, 128.3777, 194.6646, 100.224, 262.8864, 591.2525, 254.3962, 442.597, 224.7183], [121.6883, 83.842, 0.0, 0.0, 159.2398, 311.297, 318.528, 134.1696, 661.0729, 334.9843, 610.1093, 196.6555], [92.9368, 58.1048, 278.2255, 256.041, 154.8443, 174.0288, 34.176, 836.068, 224.8243, 741.1781, 289.535], [126.9618, 115.8988, 156.9229, 169.6333, 414.8521, 198.5468, 195.8016, 194.4576, 836.6009, 445.4381, 826.213, 314.0089], [180.2207, 202.9376, 156.1745, 233.4831, 353.2708, 289.9449, 292.8384, 223.488, 807.82, 412.6349, 751.248, 301.2963], [154.6297, 122.2924, 102.8412, 253.6587, 437.3557, 311.0197, 287.1168, 244.416, 1012.3067, 379.3421, 801.1181, 332.4724]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

