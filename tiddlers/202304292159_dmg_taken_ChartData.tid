created: 20230429215910000
creator: Drevarr
modified: 20230705163527401
modifier: drevarr
tags: ChartData
title: 202304292159_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Lord Erin The Wise", "Belvyn Brightblade", "Outer Ocean", "Hyde En Sikh", "Mistwalker Caelon", "Hauzzy", "Surethang Jr", "Miphest\u00f6", "Magister Boombottom", "Khailerian", "Zady Stardust", "Tika Fiery", "Fallendruid", "Johosh The Great", "Drevarr Moonwillow", "Misterjiffy", "Jupi Jupi Jupi", "Kenley Ellesmera", "Gabe Malhorn", "Kaotic Reaper Z", "Stark Gandalf", "Yuuka Chou", "Duchess Hazel", "Kira Dragonblaze", "Stark Gandalf", "Pappaa Fooolery", "Fribble Bibble", "Wanguazen", "Skylar Shadowmoon", "Surethang Jr", "V\u00e8\u00e9la", "Sakis Ranger", "Kmpek", "Roynec", "Miphest\u00f6", "Inan Ravensdotter", "Eferes", "Marmacyta", "Mion Dreamcatcher", "Serum Vision", "Chio Slayer", "Kary\u00edna", "Dragotoes", "Zaidy Sagemist", "Rosetendril", "Extol", "Rektin Maul", "Leilani Nepenthes", "Shawn L\u00eb\u00eb"];
const professions = ["Scrapper", "Weaver", "Firebrand", "Berserker", "Chronomancer", "Vindicator", "Berserker", "Chronomancer", "Tempest", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Renegade", "Firebrand", "Druid", "Firebrand", "Tempest", "Weaver", "Tempest", "Vindicator", "Dragonhunter", "Tempest", "Scrapper", "Scrapper", "Guardian", "Scrapper", "Virtuoso", "Scourge", "Druid", "Vindicator", "Reaper", "Catalyst", "Virtuoso", "Chronomancer", "Firebrand", "Dragonhunter", "Tempest", "Weaver", "Renegade", "Firebrand", "Vindicator", "Tempest", "Soulbeast", "Soulbeast", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[403.0714, 228.2097, 2613.7742, 490.2062, 513.8214, 337.8062, 12.3108, 71.125, 40.8533, 3556.3333, 51.9211, 331.6667, 161.6383, 166.1774], [312.6957, 904.7581, 0.0, 53.6405, 66.5, 167.3852, 353.6648, 519.655, 541.4828, 658.4452], [95.449, 180.9565, 168.3333, 1412.1364, 0.0, 275.5833, 78.2761, 461.7841, 218.2425, 1005.7333, 300.2874], [177.2857, 539.1587, 0.0, 4.9662, 141.5625, 276.7259, 487.3556, 275.741, 369.6, 271.124], [70.5443, 12.5, 135.8889, 53.875, 4.3933, 39.8333, 128.0441, 291.7965, 295.6316, 289.3667, 347.0428, 28.8961, 37.5562, 3156.6452, 49.7273, 150.6296, 129.0345, 126.121], [369.0532, 38.9659, 296.1154, 576.9365, 4.6842, 20.4897, 261.5, 116.0758, 984.4148, 0.0, 193.4525, 2522.0, 44.6304, 200.5758, 102.2162, 76.3704], [225.8333, 274.05, 0.0, 3.0, 261.1224, 261.4552, 394.4177, 578.1646, 410.3629], [0.0, 0.0, 244.1667, 263.5373, 580.4125, 613.9698], [88.375, 156.9048, 0.0, 3.5705, 94.2041, 120.9254, 357.8563, 247.5336, 515.7619, 182.7868, 3.6849, 21.2455, 3414.7333, 21.5, 217.1852, 72.0638, 93.3603], [300.0, 277.3443, 0.0, 15.0408, 136.4898, 185.2406, 348.227, 262.541, 16.4341, 55.2877, 0.0, 122.7021, 1179.4737, 0.0, 354.7143, 147.2128, 156.6357], [80.6087, 261.9672, 6.4364, 27.8523, 122.7021, 222.632, 518.7343, 288.7463, 403.3571, 238.0081], [128.0, 114.6667, 2.94, 3.5481, 100.1489, 98.8397, 310.8956, 253.5917, 323.7143, 226.0739, 44.3429, 21.557, 2758.9444, 0.0, 321.2222, 285.931, 108.08], [99.96, 117.5, 0.0, 2.2606, 122.9792, 149.9627, 291.2973, 312.0489, 952.0, 298.2568, 8.4507, 21.8743, 2140.0645, 4.3774, 178.3103, 77.0, 89.1515], [253.8889, 128.127, 0.0, 132.5102, 179.5294, 426.578, 258.4563, 500.4167, 150.9959, 62.0423, 51.2581, 1293.9], [254.2381, 73.5938, 0.0, 0.0, 76.2826, 91.3556, 278.6857, 253.2803, 448.4444, 291.8484, 87.2969, 0.0, 23.034, 2769.7941, 119.5556, 117.1622, 85.386], [0.0, 103.3636, 150.6538, 101.5625, 0.0, 6.6963, 115.6667, 117.3676, 266.4399, 201.1828, 289.0211, 0.0, 56.45, 3073.1724, 0.3556, 139.2069, 297.6071, 124.5565], [2386.4348, 1.1905, 43.6875, 71.9524, 927.707, 16.6743, 508.014, 36.5395, 0.0, 533.7152, 4764.2], [0.0, 222.5102, 41.9845, 335.5781, 211.3475, 297.9231, 244.4959, 7.0972, 0.0, 33.0667, 2697.0857, 0.2308, 219.7037, 87.4043, 171.4696], [68.2545, 8.5405, 159.3571, 418.541, 309.7143, 250.375, 111.25, 0.0, 51.7763, 1875.56, 0.0, 327.6667, 57.8919, 145.2846], [124.84, 114.2419, 72.7414, 0.0, 153.9184, 100.4737, 241.0142, 207.6455, 641.3077, 218.6863, 7.6216, 22.5269, 3022.4516, 0.0, 174.871, 266.1892, 130.0515], [59.1064, 106.3643, 257.7443, 207.4104, 267.8571, 278.7008, 3.3, 0.0, 35.3916, 2972.2083, 6.8077, 258.2222, 220.7297, 75.5294], [10.6207, 16.2754, 151.8125, 326.2815, 548.747, 209.8], [158.5, 137.2712, 18.6644, 187.9592, 95.6761, 363.4226, 680.8114], [84.7826, 279.7097, 0.0, 0.0, 18.7708, 95.4179, 326.1676, 231.9306, 111.2692, 1048.063], [0.0, 212.4167, 304.0952, 332.2258, 0.0, 0.0, 319.3265, 145.4118, 786.8813], [222.2218, 370.5517, 619.4793, 10.7143, 0.0, 20.5708, 1284.1594, 79.5238, 103.5405, 72.0887], [74.881, 13.1136, 34.2889, 142.6614, 1281.7864], [35.8545, 4.374, 317.9583, 122.5118, 202.4086, 205.8632, 775.2105, 176.751], [749.1333, 496.6349, 0.0, 1220.2703, 42.8242, 2019.7368, 173.0541, 124.8295], [348.3077, 258.8226, 0.0, 3.2081, 225.3542, 374.5462, 315.6731], [308.2414, 425.5078, 0.0, 163.0244, 7561.1111], [202.6761, 0.0, 5030.6471, 0.0, 445.303, 341.2727, 264.5693], [67.6232, 0.0, 55.0299, 927.0909, 150.6923, 325.1176, 78.9149, 220.3017], [0.0, 25.4194, 48.1018, 6575.9091, 23.6909, 154.5806, 83.1923, 117.9254], [62.0889, 2117.9189], [0.217, 1861.2286], [13.6909, 448.6667, 17.75, 341.3015], [0.0, 629.0741, 142.617, 204.947], [576.2727, 140.8919, 187.7852], [599.9545, 322.6833], [385.1111, 129.0811, 124.5285], [0.0, 97.1964], [45.5238, 40.8025], [26.6506], [52.4722], [0.0, 11.1909], [92.8182], [15.4918, 0.0], [0.0, 10.4118], [0.0, 2.5221]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

