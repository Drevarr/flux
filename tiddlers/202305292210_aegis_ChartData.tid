created: 20230529221000000
creator: Drevarr
modified: 20230705163532124
modifier: drevarr
tags: ChartData
title: 202305292210_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Ryvalia Fazebringer", "Zadey Starbolt", "Crusader Siolith", "Drevarr Moonwillow", "Gabe Malhorn", "Tika Fiery", "Lucas Ryn", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 149.8543, 0.0, 0.0, 116.8749, 0.0, 38.6154, 0.0, 0.0, 13.5907, 0.0, 15.6407, 0.0, 0.0, 109.71], [0.0, 152.9959, 0.0, 0.0, 24.8216, 0.0, 18.106, 2.1216, 19.8882, 68.108, 21.5499, 0.0, 97.6392, 0.0, 47.38], [0.0, 117.1817, 0.4324, 0.0, 30.5321, 0.0, 24.7822, 38.3136, 38.6019, 42.1621, 0.0, 23.8669, 37.818, 27.2244, 227.93], [188.7813, 88.3397, 0.0, 51.5764, 216.9378, 39.984, 88.32], [26.6175, 202.6332, 11.3721, 0.0, 34.0346, 1.7539, 20.0287, 29.328, 13.9374, 94.2084, 0.0, 40.5359, 122.7366, 6.1152, 356.5], [410.6071, 33.7488, 9.2239, 63.653, 0.0, 19.8685, 55.224, 23.5683, 179.7682, 0.0, 25.4364, 315.6084, 5.2332, 0.0], [0.0, 507.3684, 61.1197, 8.5284, 66.8509, 0.0, 19.6015, 40.8096, 165.2913, 120.4632, 0.0, 27.6553, 216.0783, 40.0134, 289.57], [14.301, 480.6648, 0.0, 0.0, 72.866, 0.0, 36.479, 67.5792, 164.2734, 247.4129, 0.0, 52.9294, 230.6898, 34.8684, 305.21], [0.0, 672.3024, 87.9718, 8.3628, 192.4819, 0.0, 27.3993, 130.0416, 202.2489, 284.324, 26.5826, 149.8583, 329.1885, 107.5746, 420.21], [40.446, 755.5548, 112.251, 17.5039, 142.2295, 0.8909, 37.0665, 119.3088, 174.4524, 335.4437, 39.0698, 96.983, 362.1933, 107.3688, 448.96], [56.6055, 818.0726, 131.9685, 128.0675, 0.0, 51.2736, 74.3808, 206.0856, 299.1503, 15.5712, 102.828, 460.1763, 85.8774, 588.8], [88.389, 849.1745, 50.8286, 47.3119, 274.9415, 41.9827, 114.8315, 176.904, 395.9631, 245.714, 107.6359, 268.0564, 416.8575, 59.535, 724.27]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

