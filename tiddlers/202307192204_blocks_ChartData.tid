created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Kittendoodlez", "Cosmedicz", "F\u00f9gly", "Frosmor", "Lerpsir", "Necrotic Windrunner", "Shaca Booey", "Easily Impressed", "Vee Usagi", "Funky Loot", "Lord Erin The Wise", "K\u00e2 \u00d4tik R\u00e6j", "Guardian Of Glenmor", "Mort\u00e4rion", "Permanent Dawn", "Duke Silvver", "Rina Of Theros", "Daphne Agla\u00e9", "Mike The Archmagus", "Gestalia Yesteryear", "Ateriuz", "Cedryn X", "My Birthday Girl", "Klengah", "Raelyn Sunray", "Sister Elonith", "Cat Wigglebooty", "Black Raspberry Pie", "Tootsie Pop Rocks", "Il Dim Il", "Raziel Umbra", "Jimbo Mann", "Gavann", "Rozaalyna", "Johosh The Mighty", "Morton Saltbringer", "Grasszanine", "Be\u00eb", "Xanvias Einzbern", "Arriasa", "Mistwalker Cael", "Sub Train", "Koralia Danai", "Sygaldry Verdandi", "Newtype Khan", "Bella Sassy", "Primal Clone", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Berserker", "Soulbeast", "Tempest", "Spellbreaker", "Willbender", "Reaper", "Berserker", "Firebrand", "Scourge", "Virtuoso", "Weaver", "Berserker", "Firebrand", "Scrapper", "Weaver", "Vindicator", "Scourge", "Scourge", "Weaver", "Druid", "Berserker", "Berserker", "Scrapper", "Druid", "Firebrand", "Berserker", "Scrapper", "Chronomancer", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Scourge", "Berserker", "Chronomancer", "Spellbreaker", "Scourge", "Berserker", "Druid", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 6, 4, 0, 0, 1, 4, 0, 2, 1, 3, 5, 0, 3], [4, 6, 0, 7, 1, 2, 0, 0, 0, 0, 15, 0, 1, 5, 0, 0, 0], [4, 21, 16], [2, 4, 1, 2, 1, 2, 9, 6, 3, 1, 11], [1, 2, 0, 6, 3, 3, 1, 2, 2, 1, 9, 2, 9, 1], [4, 2, 1, 28, 0, 0, 1, 1, 3, 0, 0, 0, 0, 1, 5, 0, 0, 0, 1, 0, 3], [0, 1, 0, 3, 4, 2, 1, 0, 2, 3, 0, 0, 0, 7, 0, 7, 10, 1, 7, 0, 6], [16, 14, 3, 2, 21], [0, 24, 1, 1, 0, 2, 3, 2, 0, 0, 3, 0, 0, 0, 4, 0, 3, 7, 2, 3, 0, 1], [3, 1, 5, 2, 0, 1, 0, 0, 1, 4, 0, 0, 1, 8, 0, 8, 5, 3, 9, 0, 9], [2, 2, 1, 5, 0, 0, 0, 4, 0, 5, 5, 3, 0, 11, 1, 2, 0, 1, 3, 2, 0, 0, 0, 3, 2, 0, 0, 4, 0, 0, 2, 2, 2], [20, 0, 2, 0, 2, 1, 3, 0, 0, 2, 8, 1, 10, 2, 3, 2, 3, 0, 6], [10, 15, 4, 1, 29, 4, 3, 3, 2], [2, 2, 1, 7, 0, 4, 1, 3, 2, 5, 2, 0, 1, 0, 1, 8, 5, 0, 0, 0, 0, 4, 0, 0, 0, 10, 0, 5, 9, 1], [1, 4, 8, 1, 0, 0, 16, 0, 1, 1, 0, 2, 2, 0, 5, 4, 0, 0, 0, 4, 0, 2, 10, 3, 5, 0, 5], [0, 0, 1, 1, 0, 1, 0, 11, 0, 6, 13, 2, 1, 23, 0, 1, 0, 3, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 6, 0, 2, 4, 0, 2, 0, 7], [5, 3, 0, 6, 1, 1, 1, 9, 0, 4, 8, 3, 0, 25, 0, 1, 1, 5, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 4, 1, 7, 10, 4, 7, 0, 8], [2, 3, 3, 5, 1, 2, 3, 4, 5, 4, 8, 2, 1, 22, 0, 0, 1, 0, 4, 2, 0, 0, 5, 4, 0, 8, 1, 6, 6, 4, 8, 5], [4, 5, 0, 7, 1, 6, 5, 5, 3, 30, 0, 0, 5, 1, 1, 8, 6, 1, 0, 0, 8, 8, 0, 0, 1, 18, 0, 1, 0, 9], [2, 1, 34, 4, 1, 6, 1, 2, 1, 0, 1, 4, 0, 0, 0, 19, 2, 14, 24, 2, 16, 0, 12], [8, 0, 2, 4, 20, 3, 16, 4, 5, 0, 30, 2, 0, 0, 4, 4, 0, 0, 0, 4, 9, 0, 0, 0, 12, 0, 7, 14, 3, 11, 6], [3, 5, 2, 2, 2, 5, 6, 1, 27, 9, 2, 2, 29, 2, 2, 1, 6, 6, 5, 1, 3, 6, 0, 1, 16, 0, 5, 9, 6, 6, 0, 8], [3, 2, 4, 7, 3, 7, 8, 44, 6, 21, 11, 2, 0, 25, 2, 2, 3, 7, 0, 0, 1, 3, 6, 11, 4, 7, 0, 8], [4, 2, 8, 9, 4, 7, 7, 6, 2, 20, 12, 3, 2, 38, 0, 2, 1, 0, 7, 5, 3, 0, 3, 1, 6, 0, 14, 1, 4, 8, 4, 12, 0, 10], [3, 19, 7, 2, 0, 22, 6, 1, 4, 10, 6, 4, 0, 1, 7, 11, 0, 1, 18, 2, 15, 29, 10, 17, 18], [1, 3, 34, 4, 7, 10, 2, 1, 56, 4, 1, 3, 7, 4, 1, 1, 8, 6, 0, 1, 17, 0, 6, 15, 4, 15, 0, 9], [4, 1, 4, 13, 4, 2, 6, 28, 3, 15, 12, 6, 0, 37, 0, 1, 9, 5, 7, 3, 0, 0, 5, 4, 0, 0, 21, 1, 11, 19], [2, 2, 6, 10, 2, 2, 4, 13, 0, 12, 19, 1, 1, 24, 0, 4, 2, 2, 4, 9, 2, 0, 0, 7, 6, 0, 0, 0, 38, 2, 11, 26, 10, 16, 0, 10], [3, 5, 4, 8, 3, 6, 7, 33, 6, 8, 8, 3, 1, 34, 3, 3, 1, 7, 7, 1, 1, 5, 12, 0, 0, 15, 0, 13, 21, 8, 13, 9], [3, 3, 0, 6, 2, 8, 6, 28, 7, 19, 13, 5, 1, 45, 0, 2, 0, 3, 4, 6, 3, 0, 1, 6, 6, 0, 0, 1, 16, 1, 9, 11, 13, 13, 0, 11], [1, 4, 1, 11, 3, 7, 7, 54, 6, 36, 13, 2, 4, 21, 2, 3, 3, 5, 12, 2, 1, 0, 5, 6, 0, 0, 0, 1, 1, 6, 8, 7, 14, 0, 8], [6, 1, 14, 3, 4, 8, 44, 5, 7, 20, 3, 1, 40, 1, 4, 3, 1, 6, 7, 3, 1, 1, 10, 10, 0, 0, 0, 8, 1, 9, 18, 5, 16, 0, 11], [5, 4, 7, 7, 4, 4, 26, 4, 33, 17, 2, 1, 36, 1, 2, 2, 5, 4, 4, 1, 1, 7, 10, 0, 0, 18, 1, 13, 26, 8, 18, 12], [1, 3, 3, 11, 3, 7, 4, 38, 7, 23, 21, 2, 2, 54, 0, 1, 4, 5, 8, 3, 1, 4, 9, 0, 1, 20, 0, 6, 19, 5, 16, 12], [3, 2, 4, 9, 2, 5, 10, 31, 2, 23, 13, 4, 3, 37, 0, 3, 4, 2, 6, 7, 3, 1, 2, 7, 12, 0, 0, 25, 2, 14, 19, 6, 21, 0, 11], [2, 0, 1, 8, 1, 12, 8, 54, 12, 2, 3, 32, 0, 7, 5, 2, 0, 0, 17, 10, 0, 0, 2, 43, 3, 22, 7, 7, 28, 10], [0, 3, 4, 9, 1, 1, 5, 51, 6, 26, 16, 2, 1, 42, 0, 3, 4, 3, 5, 5, 4, 1, 6, 11, 0, 0, 0, 29, 2, 9, 22, 9, 21, 16], [5, 2, 0, 14, 1, 10, 7, 38, 4, 27, 8, 4, 2, 64, 0, 2, 2, 6, 7, 9, 5, 0, 0, 6, 14, 0, 0, 0, 22, 1, 7, 19, 5, 17, 0, 14], [3, 3, 3, 11, 1, 9, 3, 40, 1, 22, 17, 3, 2, 49, 0, 6, 1, 5, 6, 7, 5, 0, 0, 7, 10, 0, 0, 1, 33, 1, 13, 19, 11, 16, 0, 17], [2, 6, 11, 5, 6, 11, 43, 6, 9, 12, 3, 2, 61, 0, 6, 3, 5, 13, 3, 3, 0, 12, 11, 20, 0, 14, 28, 7, 12, 12], [4, 1, 2, 9, 4, 6, 9, 59, 4, 38, 13, 1, 1, 45, 0, 5, 2, 4, 7, 4, 5, 0, 1, 2, 12, 0, 0, 28, 2, 5, 14, 7, 17, 0, 16], [2, 3, 6, 7, 6, 2, 7, 40, 10, 34, 11, 2, 1, 41, 0, 4, 2, 4, 10, 9, 2, 0, 1, 13, 13, 0, 0, 1, 23, 1, 12, 34, 9, 17, 18], [4, 2, 4, 12, 7, 8, 5, 35, 3, 27, 15, 3, 1, 60, 1, 4, 3, 5, 9, 5, 6, 0, 6, 9, 1, 25, 3, 14, 31, 10, 20, 12], [8, 6, 9, 15, 7, 9, 8, 39, 1, 37, 15, 4, 2, 52, 4, 4, 4, 8, 7, 2, 1, 0, 7, 10, 0, 0, 20, 2, 12, 21, 14, 20, 10], [7, 5, 4, 9, 6, 9, 5, 40, 4, 28, 14, 4, 2, 61, 0, 4, 4, 4, 9, 4, 5, 0, 0, 15, 13, 1, 0, 2, 30, 1, 10, 24, 8, 27, 11], [3, 6, 11, 4, 7, 10, 44, 8, 24, 19, 1, 3, 60, 0, 2, 2, 4, 14, 8, 3, 0, 1, 10, 14, 32, 2, 14, 31, 8, 24, 14], [5, 2, 4, 14, 3, 7, 8, 49, 3, 20, 17, 5, 2, 60, 0, 3, 4, 2, 10, 16, 4, 0, 0, 5, 14, 0, 0, 0, 26, 2, 14, 49, 17, 26, 0, 5], [5, 5, 5, 15, 2, 7, 15, 51, 3, 28, 18, 2, 4, 83, 1, 5, 4, 11, 12, 5, 2, 0, 0, 11, 12, 0, 0, 1, 41, 0, 12, 26, 12, 30, 0, 14], [4, 4, 5, 15, 4, 11, 12, 53, 23, 51, 24, 3, 4, 78, 0, 9, 3, 11, 10, 7, 4, 1, 2, 7, 19, 0, 0, 36, 2, 13, 50, 14, 32, 18], [3, 2, 2, 14, 1, 8, 12, 49, 5, 69, 37, 4, 5, 122, 1, 2, 6, 3, 9, 5, 6, 0, 2, 13, 14, 0, 0, 0, 27, 1, 12, 37, 13, 28, 0, 25]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

