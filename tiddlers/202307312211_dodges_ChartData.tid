created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Isis Urd", "Etchery Howls", "Necrotic Windrunner", "Marshall R", "Be\u00eb", "Aira Draugr", "Kisumaiasu", "Drevarr Moonwillow", "Cat Wigglebooty", "Blanco Padre Guard", "Keypek The Drunk", "Bella Sassy", "Bee Nemesis", "Daphne Agla\u00e9", "High Sorcer Baradun", "Ex Warcraft", "Rahani Sunray", "Xanvias Einzbern", "Koralia Danai", "Tootsie Pop Rocks", "Oo Dads Mad", "Arriasa", "Crusader Siolith", "Mort\u00e4rion", "Sub Train", "Mister Jekyll", "Name Is What", "Primal Clone", "Kary\u00edna", "Venomina The Sly", "Zaedy Zae", "Belvyn Brightblade", "My Birthday Girl", "Black Raspberry Pie", "Legacy Of Mathus", "Ryvalia Fazebringer", "Grasszanine", "Klenga", "Eibh\u00ebar", "Rozaalyna", "Tegan Parker", "Audens Silvermarker", "Revitiel", "Arcanophage Farra", "Mike The Archmagus", "Solus Sanctus", "Glorious Gluvs", "Newtype Khan", "Mistwalker Cael"];
const professions = ["Firebrand", "Untamed", "Druid", "Scourge", "Herald", "Scourge", "Herald", "Scourge", "Scrapper", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Scourge", "Tempest", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Berserker", "Druid", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Scourge", "Chronomancer", "Vindicator", "Druid", "Druid", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Scourge", "Tempest", "Firebrand", "Vindicator", "Spellbreaker", "Weaver", "Firebrand", "Berserker", "Spellbreaker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 13, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 3], [1, 8, 4, 11], [0, 4, 14, 0, 1, 1, 0, 1, 0, 0, 2, 3, 1], [0, 8, 1, 0, 0, 0, 17, 1], [2, 13, 10, 0, 3], [0, 13, 7, 0, 0, 0, 1, 0, 0, 0, 0, 6, 2, 0], [1, 12, 16, 0, 0], [1, 11, 13, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 10, 7, 0, 2, 1, 0, 3, 0, 0, 1, 0, 7, 0, 0], [2, 11, 12, 0, 0, 0, 2, 1, 0, 0, 5, 0], [2, 16, 3, 0, 0, 2, 1, 2, 0, 0, 0, 0, 8, 0, 0], [2, 17, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0], [0, 16, 15, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 15, 13, 0, 1, 0, 1, 0, 0, 0, 0, 4, 0, 0], [2, 11, 15, 0, 1, 1, 1, 0, 7], [1, 23, 3, 2, 1, 1, 0, 1, 11, 0, 0], [2, 24, 17], [1, 9, 2, 1, 1, 29, 0], [1, 24, 14, 0, 1, 0, 2, 0, 1, 0, 2, 0], [3, 24, 9, 0, 1, 0, 0, 0, 0, 0, 8, 0], [0, 19, 21, 0, 0, 1, 1, 0, 0, 0, 0, 4, 1], [1, 28, 17, 4], [1, 28, 8, 2, 0, 1, 0, 4, 0, 1, 7, 0], [1, 23, 11, 2, 0, 4, 1, 2, 0, 0, 9, 1, 2], [2, 20, 29, 1, 1, 4, 0, 0], [0, 30, 14, 0, 2, 0, 5, 1, 0, 1, 0, 5, 1, 1], [2, 32, 15, 1, 0, 1, 0, 0, 11, 1, 0], [4, 23, 19, 0, 4, 1, 5, 1, 0, 0, 0, 10, 0, 0], [3, 22, 27, 0, 0, 6, 0, 1, 2, 2, 0, 4, 1], [2, 35, 14, 0, 0, 1, 3, 3, 0, 3, 0, 0, 8, 0, 0], [2, 27, 21, 0, 2, 2, 3, 0, 1, 0, 0, 9, 2], [1, 28, 18, 0, 4, 0, 2, 0, 1, 0, 1, 17, 0, 0], [4, 40, 28, 0, 0], [2, 21, 27, 1, 0, 2, 0, 0, 0, 1, 0, 20, 0, 0], [2, 16, 32, 1, 2, 0, 5, 1, 0, 1, 0, 19, 2], [0, 34, 24, 1, 0, 5, 0, 3, 2, 1, 0, 0, 14, 0, 0], [1, 35, 15, 0, 0, 4, 2, 5, 1, 3, 3, 4, 14, 2], [1, 42, 29, 0, 0, 4, 0, 5, 0, 1, 0, 1, 11, 0], [3, 42, 24, 1, 5, 0, 9, 1, 3, 1, 2, 8, 3, 1], [2, 55, 20, 0, 1, 3, 2, 6, 1, 0, 0, 2, 15, 1, 0], [0, 45, 30, 2, 0, 2, 4, 1, 1, 1, 2, 25, 4, 2], [1, 60, 28, 1, 4, 6, 1, 1, 20, 3, 0], [4, 90, 28, 1, 0, 4, 2, 11, 5], [6, 71, 26, 0, 7, 2, 12, 2, 5, 1, 1, 26, 2, 0], [1, 68, 48, 1, 9, 0, 10, 5, 3, 0, 0, 19, 2, 1], [2, 59, 45, 2, 3, 9, 1, 13, 4, 3, 2, 28, 2, 0], [0, 80, 46, 2, 5, 0, 9, 1, 1, 0, 27, 4, 1], [4, 76, 53, 1, 1, 7, 3, 18, 3, 3, 3, 2, 39, 3, 0], [4, 85, 62, 0, 2, 9, 2, 14, 3, 2, 4, 1, 36, 2, 2], [4, 99, 63, 0, 0, 6, 2, 6, 3, 5, 2, 1, 38, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

