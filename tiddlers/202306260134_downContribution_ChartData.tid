created: 20230626013408000
creator: Drevarr
modified: 20230705163538795
modifier: drevarr
tags: ChartData
title: 202306260134_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Skylar Shadowmoon", "Newtype Khan", "Cedryn X", "Arcanophage Farra", "Lucky Leipreach\u00e1n", "Mistwalker Cael", "Fuuko Kazari", "Mister Jekyll", "Lord Erin The Wise", "Morv\u00e4rth", "Mememonoko", "Melli Dragonswrath", "No Reserv\u00e9", "Kary\u00edna", "Be\u00eb", "Johosh The Mighty", "Xanvias Einzbern"];
const professions = ["Herald", "Scrapper", "Spellbreaker", "Berserker", "Spellbreaker", "Scrapper", "Vindicator", "Berserker", "Reaper", "Weaver", "Reaper", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[113.0963, 36.3146, 0.0, 95.444, 332.597, 0.0, 160.4054, 0.0, 102.0488, 83.1571, 39.4773], [2.4741, 158.7865, 0.0, 154.7059, 350.3134, 0.0, 0.0, 0.0, 164.2439, 111.2, 187.9545], [322.9375, 50.2519, 94.427, 0.0, 107.9848, 205.5821, 204.0256, 79.4865, 3.1864, 17.2195, 15.5, 1.4205, 27.9818, 53.62, 41.4062, 0.0, 17.7206, 63.3333, 0.0, 82.6136, 31.3333, 0.0, 0.0, 0.0, 0.0, 5.3058, 34.1143, 0.0, 0.0, 48.8868, 0.0, 0.0, 0.0], [197.9778, 115.9213, 13.2073, 53.9393, 293.6567, 98.3333, 96.1892, 106.4068, 208.7561, 44.8571, 100.875, 179.8091, 0.0, 0.0, 0.0, 0.0, 168.2222, 86.027, 0.0, 50.4028, 0.0, 0.0, 0.0, 0.0, 0.0, 506.5714, 0.0, 43.6765, 0.0, 0.0, 0.0, 11.9322], [670.5156, 193.8667, 118.0449, 0.0, 86.3795, 182.7313, 100.2564, 39.7658, 42.6102, 68.1951, 0.0, 28.8636, 0.0, 5.66, 49.4896, 23.6538, 23.7255, 54.2222, 149.3243, 0.0, 0.0, 0.0, 7.8636, 0.0, 0.0, 0.0, 303.4571, 0.0, 50.7925, 0.0, 0.0, 0.0], [4.382, 29.7805, 165.7419, 265.3881, 1136.2308, 69.0541, 0.0, 138.2927, 0.0, 115.4773, 219.3636, 192.54, 0.0, 0.0, 61.7598, 170.2963, 184.1892, 33.8636, 0.0, 0.0, 0.0, 0.0, 2.2143], [244.8462, 564.9279, 290.1695, 335.2927, 61.8, 189.4886, 237.5455, 49.6, 224.9792, 210.2885, 68.9706, 62.0, 196.7838, 0.0, 146.6528, 0.0, 48.1818, 67.4783, 0.0, 42.6942, 15.7714, 0.0, 81.9485, 161.2453, 0.0, 0.0, 56.6102], [284.4091, 389.3909, 575.08, 267.0208, 1021.4808, 231.4951, 33.4595, 81.1136, 256.9444, 0.0, 21.9205, 0.0, 0.0, 33.4711, 1158.2286, 0.0, 21.9853, 158.7358, 0.0, 0.0, 153.3559], [948.6406, 221.1037, 440.5506, 0.0, 232.2372, 742.4776, 67.7949, 207.7477, 0.0, 11.9756, 28.8286, 152.8273, 295.22, 31.1667, 4.0, 9.9461], [291.0781, 324.0519, 324.427, 84.6829, 172.4649, 742.791, 528.0721, 56.8814, 158.4146, 35.6, 58.8523, 22.8636, 92.0, 46.4062, 0.0, 40.3922, 0.0, 0.0, 29.0227, 253.5694, 0.0, 32.8409, 0.0, 0.0, 0.0, 60.0286, 0.0, 102.5956, 29.3396, 0.0], [454.6296, 356.7303, 0.0, 314.5636, 758.5373, 328.5385, 65.4865, 0.0, 36.6829, 17.4714, 93.0909, 206.9273, 14.9, 67.8229, 12.9615, 10.701, 0.0, 26.1351, 107.8636, 43.6667, 0.0, 79.6023, 60.2174, 0.0, 13.3554], [23.7812, 120.4382, 0.0, 343.0816, 608.7015, 284.4615, 474.955, 106.6102, 103.0488, 0.0, 338.5227, 254.6727, 156.74, 149.4062, 19.6923, 136.1912, 129.7407, 268.973, 0.0, 255.5139, 3.3636, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0377, 0.0, 0.0, 0.0], [1042.25, 509.7556, 382.2135, 20.8293, 255.8102, 867.5373, 42.4359, 250.7297, 10.678, 139.1951, 0.0, 66.875, 120.0273, 106.62, 123.5104, 16.75, 10.9657, 107.1481, 243.1081, 0.0, 0.0, 0.0, 5.5227, 0.0, 0.0, 0.0, 498.8857, 0.0, 20.4191, 97.2264, 0.0, 0.0, 0.0], [1946.6562, 259.1185, 940.3708, 28.2195, 260.9905, 493.1343, 399.8205, 321.4595, 107.7797, 156.4878, 126.2286, 36.6136, 238.4091, 204.38, 84.8229, 7.1731, 7.3971, 34.0, 36.9459, 35.0909, 19.5278, 0.0, 0.0, 0.0, 0.0, 18.3058], [1277.0938, 199.637, 512.4831, 25.9878, 383.1841, 728.5672, 151.7949, 329.6486, 36.1525, 2.1707, 62.6714, 317.9205, 243.9727, 0.0, 113.0833, 0.0, 117.5441, 46.0, 279.973, 160.5, 53.1111, 0.0, 36.7386, 0.0, 0.0, 60.4298, 309.9714, 0.0, 40.3676, 0.0, 0.0, 0.0, 0.0], [1401.3281, 548.3037, 602.3483, 54.8659, 293.8843, 775.6269, 661.2821, 231.3964, 33.7119, 113.4146, 39.2857, 87.3636, 207.7091, 190.3, 211.1146, 513.3462, 29.0833, 171.2222, 186.8919, 203.25, 261.375, 0.0, 23.2386, 0.0, 17.9464, 97.2066], [1069.2188, 788.7778, 751.1011, 62.7683, 668.6622, 478.0149, 305.7179, 457.5225, 220.5932, 142.7561, 81.8143, 570.8977, 432.8909, 592.7, 230.6667, 392.8269, 184.4951, 565.3243, 131.2955, 49.2917, 0.0, 132.6818, 0.0, 103.5, 32.1653, 1303.0286, 0.0, 12.7941, 16.0755, 0.0, 0.0, 0.0], [1152.2472, 64.9756, 882.9924, 1655.2985, 402.1795, 697.9009, 313.0169, 629.4146, 139.6714, 103.5568, 93.0455, 0.0, 344.5938, 396.1731, 358.4951, 123.4444, 387.0541, 945.9318, 477.2083, 0.0, 171.4318, 193.2935, 254.3929, 21.8843, 545.8, 60.8971, 480.0566, 15.2857, 0.0, 187.8644]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

