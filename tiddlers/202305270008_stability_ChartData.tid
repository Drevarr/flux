created: 20230527000807000
creator: Drevarr
modified: 20230705163531850
modifier: drevarr
tags: ChartData
title: 202305270008_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Gavann", "Primo Pobre", "Melli Dragonswrath", "Duke Silvver", "Xanvias Einzbern", "Smol Bee", "Maw Rev", "Sub Train", "Johosh Of The North", "Ryvalia Fazebringer", "Elonith Primal", "Mistwalker Cael", "Air One Com", "Aronorf Xideliesi", "Blanco Padre Guard", "Daddys Lil Orchid", "Lucas Ryn", "Solus Sanctus", "Tika Fiery", "Koralia Danai", "Bella Sassy"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Berserker", "Vindicator", "Renegade", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.2435, 12.1018, 0.0, 0.0, 0.0, 10.4659, 0.0, 6.3475, 1.6978, 0.0, 0.0, 0.0, 0.0, 1.6307, 1.741, 0.0, 0.0, 2.8487, 0.0, 0.0, 1.7405, 4.6349, 0.0, 1.7602, 3.1029, 0.0], [22.8557, 13.9354, 2.3312, 16.1539, 4.8883, 3.2698, 0.0, 1.1868, 1.1515, 0.0], [3.6387, 0.0, 12.6694, 3.8837, 2.4923, 0.0, 4.715, 2.3678, 0.0, 6.7988, 16.4947, 0.0, 4.677, 7.1225, 3.888], [9.0317, 8.4346, 0.9908, 0.0, 0.0, 8.6458, 2.587, 4.0858, 2.2637, 1.5048, 3.306, 1.4739, 0.9926, 4.6413, 0.7462, 1.1606, 2.0769, 2.0812, 2.7504, 1.9618, 0.0, 3.1546, 5.7254, 0.0, 1.0058, 0.0, 1.0044], [19.3536, 6.2342, 1.9232, 0.0, 0.0, 3.6403, 0.0, 1.3862, 0.0, 0.0, 2.3736, 2.3491, 1.5341, 4.8922, 0.0, 1.5178, 0.0, 0.0, 0.0, 3.0443, 0.0, 5.0039, 6.2707, 0.0, 0.0503, 5.5006, 4.7952], [10.3219, 10.6349, 1.1073, 0.0, 0.0, 12.5136, 2.3147, 3.5021, 2.1379, 0.0, 4.4928, 1.8424, 2.4365, 2.8851, 0.0, 0.9821, 2.3143, 0.0, 5.2062, 1.3259, 0.0, 3.6985, 7.3613, 0.0, 1.0561, 1.5514, 2.1384], [18.0634, 15.2189, 0.0, 0.0, 0.0, 7.9632, 0.0, 9.9226, 5.0933, 0.0, 2.0345, 0.0, 5.0534, 3.7632, 2.857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.272, 3.2717, 0.0, 4.4428, 3.6936], [6.0799, 3.9254, 15.5546, 9.1512, 10.5032, 1.9926, 8.1531, 2.1648, 5.7653, 17.7216, 0.0, 2.2128, 7.1225, 1.1988], [23.04, 19.0694, 0.2331, 0.0, 0.0, 22.297, 0.0, 9.8496, 6.5395, 0.0, 0.0, 3.1781, 0.0451, 8.279, 0.0, 5.1336, 8.4263, 0.0, 5.108, 0.0], [15.1142, 14.6688, 2.9723, 0.0, 0.6048, 19.3392, 2.9274, 4.5235, 4.2758, 3.4756, 4.1915, 2.9779, 9.408, 2.8123, 4.0351, 0.0, 8.1531, 0.9877, 0.4935, 4.46, 10.9056, 0.496, 3.0174, 4.6543, 3.1104], [18.2477, 15.2189, 0.0, 0.0, 0.0, 13.1962, 0.0, 1.4592, 3.4584, 0.0, 3.1365, 3.2242, 1.489, 10.537, 0.0, 2.4552, 2.1956, 0.0, 0.0, 0.0, 2.8952, 6.8531, 13.9046, 0.0, 6.0348, 20.0277, 7.452], [13.0867, 15.4022, 2.4478, 0.5016, 19.3392, 2.8594, 7.1501, 4.2758, 1.3464, 5.3405, 1.566, 2.3914, 9.5334, 0.0, 3.0355, 4.9846, 0.0, 7.9566, 0.3788, 0.0, 3.0458, 11.8598, 1.648, 3.3191, 6.6994, 3.9852], [18.985, 18.336, 6.2942, 0.0, 0.0, 16.3814, 2.7232, 7.9526, 3.0182, 0.2574, 4.4928, 1.6121, 0.8573, 9.9098, 1.2856, 0.1339, 3.4417, 0.2878, 8.546, 0.0, 0.0, 10.2253, 8.4518, 0.0, 3.2186, 9.7318, 0.3888], [20.4595, 19.6195, 0.2914, 0.0, 0.7504, 28.6675, 3.404, 8.3174, 6.0994, 0.0, 3.1365, 3.5006, 3.2035, 8.6554, 3.6605, 10.5032, 1.7491, 8.2513, 1.9483, 1.8259, 5.0583, 13.4957, 1.504, 0.6035, 9.7318, 5.7672], [29.3069, 26.4038, 0.408, 3.5948, 21.8419, 2.9615, 13.7894, 5.9107, 0.0, 5.171, 1.0594, 0.2256, 5.3939, 4.5086, 4.0945, 0.1993, 15.4221, 0.0, 4.8407, 14.7226, 3.5203, 9.1676, 7.4844], [33.9149, 33.5549, 3.4385, 0.0, 43.6838, 5.3443, 3.5021, 4.6531, 0.0, 2.7126, 5.4811, 2.617, 10.4115, 2.9937, 5.7586, 12.5801, 0.2657, 10.2159, 0.0, 9.9534, 26.855, 0.0, 10.1083, 8.3919], [29.8598, 37.0387, 11.5977, 0.0, 0.0, 35.4931, 4.0167, 9.2659, 8.5517, 5.1282, 12.546, 3.823, 6.001, 15.4291, 0.0, 12.6717, 0.0, 0.0, 10.7148, 13.223, 0.0, 11.0135, 10.6485, 7.9056], [24.8832, 26.2205, 2.7974, 0.2508, 0.1568, 32.5354, 3.2338, 15.6864, 9.8722, 0.0, 3.2213, 6.7708, 5.5949, 23.5827, 0.1978, 9.5083, 12.8768, 2.8118, 12.6717, 0.1624, 10.0622, 26.5824, 0.0, 4.6267, 12.0589, 8.4888], [42.025, 43.823, 6.3525, 0.0, 0.7952, 49.1443, 5.0379, 19.5533, 11.3184, 0.0, 11.6135, 9.949, 4.6022, 23.959, 6.9192, 12.3427, 0.3321, 27.2097, 1.5018, 3.3558, 11.0412, 31.6262, 0.176, 3.7717, 15.726, 11.4372], [42.3936, 40.3392, 11.4812, 0.0, 1.6128, 43.4563, 4.6635, 15.6134, 9.935, 3.2076, 13.4784, 9.7647, 5.4595, 21.8266, 2.9937, 12.6331, 4.8065, 3.3431, 23.6734, 4.1943, 0.0, 10.878, 28.8998, 4.608, 8.6499, 22.7074, 6.2208], [49.5821, 47.6736, 6.5856, 3.879, 3.2816, 54.8323, 6.6378, 16.9997, 14.7139, 0.3366, 16.8692, 7.0932, 9.6557, 26.7187, 11.6064, 15.5471, 0.3985, 25.2451, 3.9913, 2.3688, 15.5555, 34.489, 0.0, 9.0522, 23.4832, 12.2796], [45.8957, 41.8061, 13.1713, 6.5877, 0.0, 52.3296, 8.8844, 19.0426, 13.1419, 2.8908, 21.8707, 7.3235, 6.6326, 28.224, 2.4273, 9.9547, 13.9449, 3.7417, 24.0663, 6.7244, 6.2181, 14.359, 32.1715, 2.896, 6.7891, 20.8739, 9.9144]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

