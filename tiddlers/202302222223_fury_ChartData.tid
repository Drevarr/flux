created: 20230222222328000
creator: Drevarr
modified: 20230705163519976
modifier: drevarr
tags: ChartData
title: 202302222223_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Skye Nightroad", "Tootsie Pop Bringer", "My Birthday Girl", "Mistwalker Caelon", "Veron Blackburn", "Lord Erin The Wise", "Etchery", "Cat Wigglebooty", "Fribble Bibble", "Arcanophage Farra", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Tempest", "Scrapper", "Scrapper", "Scrapper", "Vindicator", "Herald", "Weaver", "Scrapper", "Scrapper", "Scrapper", "Spellbreaker", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.5453, 0.0, 1364.0012, 29.2068, 25.133, 30.1764, 25.5321, 25.1411, 14.7434, 143.3587, 51.5993, 116.9185, 29.2078], [8.0034, 18.2412, 2538.9696], [0.0, 29.1889, 1914.4201, 0.0, 30.0089, 63.8568, 89.529, 98.738, 103.6671, 305.5711, 108.7902, 123.956, 137.3203], [20.0727, 15.7605, 3157.9593, 19.4899, 94.3873, 31.9641, 53.5065, 75.6952, 65.6893, 240.117, 166.5697, 420.8106, 64.9983], [40.6033, 32.3232, 3708.3782, 47.1285, 70.6418, 134.5783, 98.3542, 67.0299, 39.869, 297.0336, 142.0453, 327.5637, 79.4278], [5435.6189], [43.8083, 48.2917, 3962.2752, 59.9817, 56.2122, 161.2509, 88.7519, 75.5398, 59.514, 330.2943, 184.914, 358.7526, 75.5044], [150.2706, 122.7865, 8297.0561], [54.4674, 96.3159, 6760.7015, 96.1331, 6.6598, 182.3458, 249.6044, 133.5158, 54.3809, 585.8855, 266.335, 611.4629, 100.0912], [92.8912, 114.0372, 6586.4949, 35.7034, 113.1379, 150.8107, 220.409, 194.6393, 83.4818, 694.7385, 359.2334, 593.2293, 222.5896], [118.7147, 103.5946, 7972.7352, 172.7764, 105.0906, 240.4819, 364.9986, 120.343, 134.0031, 935.0334, 388.2703, 696.8725, 197.0437], [8656.589, 216.1805, 256.2848, 436.1282, 362.5009, 271.6169, 248.2068, 1177.6405, 479.1087, 1231.2428, 352.8477], [136.7728, 112.1953, 10493.1722, 159.7552, 134.3067, 234.3322, 373.1578, 145.212, 137.3609, 749.8765, 500.3959, 965.4172, 233.9676]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

