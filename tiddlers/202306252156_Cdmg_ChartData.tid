created: 20230625215649000
creator: Drevarr
modified: 20230705163536798
modifier: drevarr
tags: ChartData
title: 202306252156_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Inedible Plant", "Drevarr Moonwillow", "Tootsy Pop Star", "Momomeko", "Blancooo Padreee", "Irish Mini Rev", "Primal Clone", "Sumatra Satyricon", "Rozaalyna", "Smol Gluvs", "Mister Jekyll", "Jacob Pine", "Euljian", "Mistwalker Cael", "Hraka Thera", "Eibh\u00ebar", "Shaca Booey", "Elonith Requiem", "Sygaldry Verdandi", "Artakama Nahid", "Solus Sanctus", "Cedryn X", "Rina Of Theros", "High Sorcer Baradun", "Miphest\u00f6", "Lord Erin The Wise", "Tika Fiery", "Cerys Fireblade", "Mammary Mission", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Firebrand", "Vindicator", "Scrapper", "Reaper", "Chronomancer", "Spellbreaker", "Herald", "Chronomancer", "Soulbeast", "Reaper", "Reaper", "Reaper", "Reaper", "Willbender", "Vindicator", "Harbinger", "Chronomancer", "Berserker", "Reaper", "Firebrand", "Tempest", "Firebrand", "Berserker", "Scourge", "Tempest", "Tempest", "Weaver", "Firebrand", "Berserker", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.5849, 0.0, 2.0385, 0.0, 11.6041, 4.449, 1.6552, 23.8158, 0.0, 35.7907, 0.5849, 12.7905, 0.0, 159.6829, 21.381, 0.0, 0.0, 9.8667, 17.9398, 0.4195, 5.5227, 8.496], [7.8113, 0.0, 0.8173, 3.0253, 20.849, 43.1429, 8.5396, 22.7281, 0.0, 4.3721, 15.434, 10.0571, 0.0, 0.0, 3.9762, 0.0, 5.3253, 0.0345, 8.1364, 0.546], [0.0, 7.4072, 12.6442, 0.0, 8.461, 13.5782, 0.5632, 29.1491, 5.425, 17.3023, 18.3679, 19.5048, 27.8214, 5.2683, 4.3095, 0.0, 34.5517, 28.8667, 19.253, 11.0862, 20.0, 5.366], [0.0, 0.0, 1.2067, 0.0, 11.5437, 1.3537, 0.0, 29.3509, 0.0, 27.9767, 15.3396, 82.1905, 22.5366, 6.1429, 0.0, 0.0, 29.1778, 24.5422, 12.4713, 0.0, 3.596], [0.0, 0.0, 8.4177, 7.0032, 0.0, 2.5653, 35.9298, 0.0, 29.8721, 51.4906, 35.2286, 0.0, 0.0, 10.0714, 0.0, 47.6889, 41.8313, 1.6782, 11.3409, 7.32], [8.566, 0.0, 6.9038, 0.0, 16.9221, 2.8163, 1.2484, 2.2632, 0.0, 0.0, 0.0189, 0.0, 0.0, 0.0, 46.381, 8.5862, 0.0, 113.8434, 0.0, 0.0, 15.088], [0.0, 0.0, 0.3029, 0.0, 2.3243, 9.0408, 0.0, 0.7105, 0.0, 30.9186, 13.4623, 35.7333, 0.0, 31.2927, 11.1905, 0.0, 6.1556, 86.5542, 9.9943, 26.3864, 20.822], [2.434, 0.0, 0.0, 8.7089, 2.1558, 6.0884, 1.0964, 26.2807, 0.0, 22.7093, 29.3868, 45.0857, 0.0, 48.3171, 3.1905, 0.0, 6.7586, 149.8222, 36.0964, 7.0402, 12.0909, 8.584], [30.566, 0.0, 0.0, 0.0, 7.7949, 2.2449, 9.3683, 3.6842, 0.0, 30.8721, 15.7075, 78.8952, 132.1786, 0.0, 25.4286, 52.4889, 4.6386, 5.408, 0.0, 4.34], [0.0, 0.0, 0.0, 0.0, 10.3339, 0.1429, 0.0, 45.2807, 0.0, 31.593, 35.217, 48.2571, 2.25, 35.0244, 8.381, 13.1379, 0.0, 61.5542, 8.3333, 0.0455, 11.414], [0.0, 0.0, 2.1827, 0.0, 6.9873, 4.9048, 0.955, 22.2281, 0.0, 24.407, 48.6321, 69.581, 1.4286, 45.7561, 32.0238, 0.0, 51.6552, 36.5556, 7.5422, 14.2586, 12.4773, 16.382], [1.6981, 0.0, 0.0, 8.5533, 0.9728, 0.2013, 0.0, 35.7674, 0.3208, 90.8762, 0.0, 47.2683, 10.6667, 0.0, 0.2069, 114.8222, 86.0843, 18.3851, 4.4545, 11.688], [1.7195, 32.2982, 0.0, 40.3721, 40.7264, 80.7524, 6.75, 42.0244, 39.0714, 4.02, 0.0, 46.1333, 19.8916, 17.7644, 47.9318, 19.066], [0.0, 0.0, 1.2083, 4.9358, 56.2368, 0.0, 121.6395, 91.1038, 39.9524, 0.0, 97.8537, 0.0, 0.0, 0.0, 0.4699, 0.0, 27.6364, 9.23], [11.6604, 0.0, 2.7933, 2.6582, 28.8156, 50.6259, 11.1156, 1.1404, 23.55, 4.7558, 15.3962, 28.8095, 0.0, 0.2439, 0.0476, 0.0, 13.9655, 3.0889, 25.1566, 0.0, 13.4773, 4.904], [40.9811, 1.6886, 1.4663, 8.2152, 8.2893, 0.0, 26.8565, 54.1053, 11.55, 69.907, 107.1132], [10.503, 5.1442, 0.9873, 8.8378, 2.5034, 2.7645, 39.1053, 14.1625, 41.8721, 38.4717, 41.6476, 16.2857, 13.4146, 32.9286, 0.0, 45.5172, 25.7333, 27.0361, 13.2069, 14.9091, 15.856], [21.6415, 0.0, 2.649, 66.3688, 48.8503, 7.4347], [65.7982, 0.6125, 86.0233, 48.5, 24.1619, 1.2857, 58.1707, 25.9762, 0.0, 17.069, 74.5333, 83.6867, 18.2586, 20.5, 38.202], [0.0, 0.0, 0.0, 0.0, 13.9253, 28.2109, 13.3191, 14.4649, 6.25, 73.686, 69.1981, 21.5048, 10.0714, 161.6341, 15.1905, 23.8966, 137.9111, 28.4819, 1.2529, 3.4545, 30.216], [0.0, 0.0, 11.2452, 0.0, 21.1558, 3.6259, 0.3148, 46.9035, 0.0, 11.3837, 71.6038, 92.9238, 0.0, 4.3902, 0.0, 0.0, 221.6, 104.5904, 12.6552, 2.6591, 16.73], [41.717, 6.8683, 35.2019, 0.0, 26.8633, 35.7823, 2.4754, 14.8421, 19.4125, 19.4419, 8.5377, 45.181, 126.4286, 14.1707, 50.3095, 0.0, 96.6552, 3.0667, 59.241, 23.2586, 49.4091, 12.996], [36.3208, 0.0, 5.226, 0.0, 47.5707, 44.9932, 2.5375, 0.0, 0.0, 58.0698, 18.9245, 2.4286, 0.0, 0.0, 5.1667, 0.0, 25.2889, 266.3735, 21.7931, 40.3182, 13.444], [3.1509, 8.3533, 2.75, 0.0, 23.3657, 6.2109, 2.9272, 61.9912, 11.95, 473.0698, 184.7547, 131.6, 3.1429], [71.3208, 0.0, 0.8894, 0.0, 27.434, 12.4422, 7.4882, 85.4298, 4.6625, 24.4767, 51.4245, 228.3143, 13.6829, 88.2143, 1.48, 34.6444, 61.2892, 66.6322, 178.9091, 45.078], [1.0377, 0.0, 0.0, 0.0, 53.0286, 15.8639, 1.4839, 97.2719, 24.45, 91.3837, 94.4528, 3.1524, 0.0, 0.4146, 95.8095, 0.34, 1.3793, 5.2667, 182.9639, 26.6609, 30.4091, 66.288], [11.434, 0.0, 0.0, 0.0, 70.8585, 6.6599, 7.0407, 127.4649, 4.075, 83.1395, 100.3868, 168.2857, 27.3659, 100.0, 4.26, 0.0, 246.5111, 104.0723, 62.1034, 105.8182, 1.144], [7.1887, 2.4072, 0.3846, 29.9114, 87.5326, 4.5578, 14.6788, 0.0, 5.8875, 87.7209, 124.1132, 130.419, 8.8214, 38.9268, 23.3571, 0.0, 99.8966, 1.2, 179.747, 18.3391, 13.8864, 38.706], [37.5283, 10.7425, 0.6442, 0.0, 31.5787, 26.4898, 15.242, 66.7456, 8.7125, 66.9767, 50.8962, 48.381, 77.2143, 222.9512, 246.2143, 0.0, 4.1379, 89.5778, 373.4458, 14.431, 76.2273, 76.924], [17.0985, 276.2456, 97.5875, 395.1163, 229.5472, 503.8571, 70.0, 792.6341, 307.4048, 62.3448, 277.7333, 133.3253, 90.2356, 388.5227], [10.0189, 0.0, 4.7019, 21.0506, 104.4245, 117.1224, 1.6681, 231.1754, 38.6125, 92.6163, 35.0755, 275.2095, 0.0, 102.8537, 145.381, 66.931, 135.5111, 143.2048, 128.3161, 418.6591, 76.626], [0.4528, 0.0, 8.101, 8.7975, 115.8728, 77.1156, 13.0343, 197.8684, 1.075, 151.1395, 14.5, 388.3619, 65.9286, 509.4634, 170.2381, 0.0, 0.0, 258.7778, 244.2771, 71.9713, 203.6136, 99.878]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

