created: 20230531221142000
creator: Drevarr
modified: 20230705163532630
modifier: drevarr
tags: ChartData
title: 202305312211_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Of Ascalon", "Tootsie Pop Rocks", "Newtype Khan", "Tegan Parker", "Miphest\u00f6", "Zayde Sunsabre", "My Birthday Girl", "Artakama Nahid", "Jeckyll Mbs", "Cyclotechnist Farra", "Venomina The Siren", "Grasszanine", "Xanvias Einzbern", "Johosh Of The North", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Scrapper", "Tempest", "Berserker", "Scrapper", "Tempest", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.33, 0.264, 0.834, 0.245, 0.053, 0, 0.266, 0.271, 0], [0.351, 0.078, 0.588, 0.195, 0.161, 0, 0.046, 0.094, 0, 0.158, 0.448, 0.151, 0.112], [0.375, 0.441, 0, 0.205, 0.179, 0, 0, 0.224, 0.373, 0, 0.38, 0, 0.527, 0, 0], [0.266, 0.115, 0.557, 0.277, 0.161, 0, 0.016, 0.135, 0.356, 0.298, 0.365, 0.209, 0.244, 0.212, 0], [0.371, 0.175, 0.281, 0.378, 0.268, 0.476, 0.653, 0.406, 0.204, 0.277, 0.365, 0.105, 0.356, 0], [0.318, 0.735, 0, 0.487, 0.216, 0, 0.444, 0.225, 0.341, 0, 0.606, 0.131, 0.297, 0, 0], [0.553, 0.177, 0.137, 0.57, 0.161, 0, 0.2, 0, 0.316, 0.149, 0.69, 0.508], [0.297, 0, 0.558, 0.479, 0.376, 0, 0.77, 0.547, 0.448, 0.448, 0.364, 0.524, 0.261, 0.854, 0], [0.188, 0.294, 0.468, 0.463, 0.347, 0.791, 0.571, 0.507, 0.536, 0, 0.303, 0.947, 0.77, 0.708, 0], [0.53, 0.044, 0.243, 0.531, 0.463, 0, 0.939, 0.519, 0.52, 0.355, 0.342, 0.371, 0.713, 0.427, 0], [0.527, 0.238, 0.278, 0.603, 0.59, 0, 0.531, 0.54, 0.437, 0.149, 0.319, 0.437, 0.377, 0.63, 0.223], [0.475, 0.625, 0.465, 0.495, 0.612, 0, 0.884, 0.225, 0.681, 0, 0.606, 0.524, 0.754, 0, 0], [0.868, 0.882, 1.057, 0.805, 0.716, 0.794, 0, 0.45, 0.681, 0.747, 0.735, 1.078, 1.2, 0.728, 0.373], [1.175, 1.454, 0.459, 1.278, 0, 0.951, 0.8, 1.08, 1.058, 1.313, 1.003, 1.527, 1.294, 0.836, 0], [1.289, 1.119, 0.278, 1.133, 1.126, 1.427, 0.93, 1.082, 1.085, 1.27, 1.002, 1.132, 1.135, 1.067, 0], [1.164, 1.232, 1.117, 1.332, 1.289, 1.673, 1.266, 1.759, 1.47, 1.487, 1.476, 1.703, 1.558, 1.708, 0.56]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

