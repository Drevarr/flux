created: 20230527000807000
creator: Drevarr
modified: 20230705163531617
modifier: drevarr
tags: ChartData
title: 202305270008_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Gavann", "Air One Com", "Drevarr Moonwillow", "Primo Pobre", "Tika Fiery", "Lucas Ryn", "Solus Sanctus", "Aronorf Xideliesi", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[157.7779, 69.1267, 13.7541, 0.0, 0.0, 97.8336, 0.0, 200.2022, 14.3995, 0.0, 0.0, 11.6992, 0.0, 22.5792, 0.0, 2.857, 0.7121, 0.0, 3.0451, 0.0], [143.9539, 124.5014, 147.9729, 136.057, 8.1715, 60.6163, 0.0, 77.6493, 10.5477, 0.0], [143.401, 106.7155, 0.0, 0.0, 0.0, 96.241, 11.6076, 45.8918, 43.0728, 0.0, 0.0, 8.2447, 7.535, 41.3952, 14.8205, 49.1929, 0.0, 37.5239, 9.9445, 0.0, 11.6938, 85.7453, 0.0, 0.0, 20.1687, 19.4724], [138.6086, 84.3456, 0.0, 0.0, 0.0, 41.1811, 41.665, 26.5574, 59.4845, 0.0, 0.0, 66.4185, 5.5046, 58.9568, 0.0, 35.3549, 33.2304, 5.69, 15.815, 11.5682, 5.5107, 29.9689, 90.1075, 2.784, 9.8568, 11.0716, 36.774], [62.5955, 88.5254, 175.7414, 62.1835, 90.6122, 0.0, 39.0955, 0.0, 0.0, 90.0698, 123.6422, 0.0, 36.1585, 75.3154, 57.6396], [312.0538, 141.7373, 203.4555, 0.0, 0.0, 194.9846, 13.8543, 80.183, 137.5814, 0.0, 146.5673, 23.767, 85.5475, 68.3648, 2.0048, 13.9723, 57.4411, 0.0, 89.5858, 9.3357, 0.0, 0.0, 106.7386, 0.0, 54.0617, 241.9541, 25.9524], [354.0787, 368.1869, 67.1386, 0.0, 21.28, 286.6752, 62.7698, 219.9014, 232.9075, 98.01, 162.9279, 42.2831, 68.7629, 257.0266, 0.0, 79.236, 152.3258, 0.0, 81.138, 11.257, 93.714, 128.6861, 0.0, 37.969, 71.1547, 35.8344], [498.7699, 605.088, 259.4626, 57.801, 13.832, 510.5549, 75.0242, 207.4982, 120.9811, 29.6208, 285.5054, 36.1571, 96.0605, 221.6525, 77.4504, 145.205, 15.4759, 334.1785, 93.357, 51.6037, 130.2097, 371.063, 0.0, 51.4467, 304.7874, 103.032], [314.6342, 663.2131, 314.2458, 23.1906, 224.5622, 105.7963, 159.4176, 99.7277, 0.0, 302.6289, 23.03, 59.4682, 94.4563, 137.268, 425.8832, 116.7664, 670.0268, 26.7148, 130.3184, 452.0371, 56.7774, 315.8591, 135.918], [444.2112, 523.3094, 166.3894, 16.8203, 30.7776, 470.7389, 139.3257, 195.8976, 213.9178, 28.8486, 271.1792, 92.1661, 104.9942, 413.8266, 11.9747, 136.152, 220.8041, 31.9037, 278.3838, 73.1161, 76.0483, 120.4738, 327.0317, 65.072, 88.3092, 313.6024, 112.6548], [616.1818, 664.4966, 167.6133, 29.9121, 9.4192, 464.3683, 159.4774, 165.7651, 214.1693, 11.781, 352.728, 56.055, 187.1578, 363.1488, 109.9483, 219.4987, 27.52, 223.6697, 21.2692, 23.8196, 272.5483, 495.1142, 0.0, 154.8932, 322.9816, 69.3684]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

