created: 20230417215912000
creator: Drevarr
modified: 20230705163525744
modifier: drevarr
tags: ChartData
title: 202304172159_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Grasszanine", "Rozaalyna", "Arcanophage Farra", "Krelkit", "Nazhul Naxxremis", "Blancooo Padreee", "Kelida", "Smol Gluvs", "Rina Of Theros", "Smol Daddy Tika", "Lord Erin The Wise", "Skye Nightroad", "Jeckyll Mbs", "Inedible Plant", "Elonith Requiem", "Xyntharos", "Sp\u00edcy Cheese", "Be\u00eb", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Spellbreaker", "Reaper", "Spellbreaker", "Scrapper", "Reaper", "Berserker", "Scrapper", "Reaper", "Reaper", "Berserker", "Weaver", "Scrapper", "Berserker", "Vindicator", "Reaper", "Vindicator", "Berserker", "Reaper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 15019.0, 32563.0, 550.0, 16594.0, 9246.0, 8466.0, 9509.0, 4216.0, 29247.0], [2214.0, 0.0, 13445.0, 42000.0, 19745.0, 2595.0, 8019.0, 0.0, 16010.0, 16083.0, 0.0, 10293.0, 4035.0, 0.0, 7474.0, 977.0, 36.0, 9936.0, 464.0, 0.0, 0.0, 1693.0, 0.0, 2133.0, 0.0, 0.0, 0.0, 3053.0, 0.0, 322.0], [0.0, 0.0, 16152.0, 33675.0, 0.0, 16134.0, 2289.0, 43616.0, 2291.0, 0.0, 18009.0, 7186.0, 0.0, 13966.0, 5236.0, 402.0, 6384.0, 0.0, 45.0, 0.0, 10941.0, 2517.0, 4903.0], [0.0, 11589.0, 13146.0, 0.0, 24850.0, 0.0, 14457.0, 13781.0, 22120.0, 28091.0, 0.0, 27862.0, 227.0, 0.0, 6213.0, 0.0, 2905.0, 6223.0, 0.0, 6072.0, 0.0, 721.0, 2019.0, 5320.0, 0.0, 0.0, 0.0, 0.0, 0.0, 155.0], [4301.0, 0.0, 6202.0, 9736.0, 32198.0, 4774.0, 21405.0, 10009.0, 26703.0, 10824.0, 12152.0, 6598.0, 0.0, 37014.0, 4133.0, 4382.0, 8546.0, 8.0, 4794.0, 0.0], [31400.0, 65906.0, 0.0, 35217.0, 106.0, 11070.0, 280.0, 3524.0, 0.0, 2669.0, 9996.0, 19769.0, 22178.0, 0.0, 7606.0], [0.0, 0.0, 2921.0, 5104.0, 67092.0, 0.0, 24531.0, 1546.0, 30461.0, 42599.0, 1608.0, 27661.0, 0.0, 7553.0, 0.0, 2295.0, 0.0, 0.0, 0.0, 536.0, 0.0, 3308.0, 6043.0, 1467.0, 4514.0, 12840.0, 0.0, 0.0, 0.0, 1357.0, 0.0, 0.0], [1863.0, 1763.0, 12834.0, 129037.0, 0.0, 77727.0, 4497.0, 10153.0, 5472.0, 2899.0], [1188.0, 0.0, 2365.0, 25900.0, 53969.0, 0.0, 34556.0, 8173.0, 5560.0, 67079.0, 15224.0, 12896.0, 0.0, 21752.0, 4153.0, 794.0, 9246.0, 3210.0, 2074.0, 3134.0, 10383.0, 7673.0, 6955.0, 5112.0, 0.0, 528.0], [1602.0, 0.0, 434.0, 3804.0, 52294.0, 2724.0, 34430.0, 3413.0, 73907.0, 47205.0, 27324.0, 3667.0, 0.0, 9279.0, 993.0, 0.0, 18955.0, 664.0, 786.0, 416.0, 4546.0, 1263.0, 991.0, 9713.0, 1224.0, 11283.0], [0.0, 0.0, 2822.0, 11818.0, 57308.0, 2728.0, 70703.0, 6138.0, 45452.0, 40225.0, 326.0, 35295.0, 0.0, 42254.0, 13963.0], [5826.0, 9424.0, 24215.0, 37848.0, 2822.0, 43023.0, 0.0, 1013.0, 17706.0, 25528.0, 47461.0, 0.0, 29013.0, 9154.0, 0.0, 6844.0, 1062.0, 0.0, 0.0, 7323.0, 3999.0, 21841.0, 18936.0, 6473.0, 7806.0, 3530.0, 0.0, 0.0, 12948.0, 781.0], [828.0, 0.0, 6870.0, 92378.0, 49798.0, 2129.0, 47813.0, 46364.0, 26182.0, 54965.0, 27394.0, 0.0, 12501.0, 6467.0, 2911.0], [8605.0, 0.0, 8550.0, 9212.0, 127907.0, 7957.0, 72005.0, 11746.0, 43225.0, 10844.0, 17018.0, 11511.0, 0.0, 1943.0, 2132.0, 10955.0, 4020.0, 6404.0, 0.0, 4531.0, 6219.0, 1689.0, 5903.0, 620.0, 14080.0, 5708.0, 0.0, 0.0, 6470.0, 2375.0, 0.0], [14.0, 0.0, 13971.0, 26725.0, 53844.0, 3271.0, 63650.0, 0.0, 59849.0, 25555.0, 75924.0, 54179.0, 0.0, 36406.0, 2458.0, 3009.0, 9884.0, 5720.0, 0.0, 0.0, 3092.0, 5884.0, 11557.0, 11593.0, 7805.0, 3598.0, 9750.0, 4845.0, 7534.0, 0.0, 0.0, 4547.0], [62215.0, 0.0, 67857.0, 12043.0, 66560.0, 36532.0, 23771.0, 79971.0, 0.0, 74069.0, 5261.0, 100.0, 16733.0, 9285.0, 2664.0, 12391.0, 5855.0, 21304.0, 8112.0, 15396.0, 0.0, 20627.0], [2044.0, 4804.0, 10077.0, 103869.0, 2178.0, 58082.0, 0.0, 53698.0, 31449.0, 51824.0, 49889.0, 0.0, 61591.0, 1951.0, 3397.0, 16701.0, 3194.0, 14868.0, 18772.0, 2695.0, 7022.0, 14115.0, 12604.0, 0.0, 32061.0, 6840.0, 8087.0, 9800.0, 3204.0, 0.0, 1129.0], [1661.0, 0.0, 5060.0, 30643.0, 64212.0, 3559.0, 72197.0, 0.0, 90573.0, 31375.0, 101629.0, 61421.0, 0.0, 55201.0, 796.0, 6250.0, 3652.0, 6152.0, 7512.0, 4269.0, 11198.0, 12057.0, 3989.0, 895.0, 6728.0, 32164.0, 0.0, 0.0, 0.0, 13935.0, 0.0, 12720.0], [2815.0, 6017.0, 26827.0, 141232.0, 0.0, 94660.0, 16249.0, 54651.0, 31151.0, 65854.0, 26832.0, 0.0, 54349.0, 2866.0, 9266.0, 23747.0, 2991.0, 4690.0, 42702.0, 16422.0, 5186.0, 7580.0, 14803.0, 15012.0, 23524.0], [5883.0, 0.0, 6535.0, 79330.0, 149652.0, 0.0, 86380.0, 19307.0, 97250.0, 34441.0, 97655.0, 58491.0, 0.0, 74055.0, 10803.0, 0.0, 25682.0, 15195.0, 6541.0, 14665.0, 14511.0, 17313.0, 8805.0, 12591.0, 5528.0, 76171.0, 4861.0, 10184.0, 6201.0, 20795.0, 0.0, 902.0], [5252.0, 0.0, 15148.0, 64479.0, 137802.0, 4699.0, 108680.0, 9635.0, 85796.0, 86957.0, 121936.0, 78054.0, 0.0, 82448.0, 15899.0, 4168.0, 55228.0, 8219.0, 11285.0, 17828.0, 14481.0, 27187.0, 15304.0, 22340.0, 2991.0, 28319.0, 35718.0, 14614.0, 0.0, 30104.0, 2974.0, 784.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

