created: 20230310230833000
creator: Drevarr
modified: 20230705163521652
modifier: drevarr
tags: ChartData
title: 202303102308_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaylen Harker", "Kiloak", "Rayge Storm", "Zefirokai", "Viral Marketing", "Cat Wigglebooty", "Alatreon", "Tegan Parker", "Mac Chiato", "Zadie Miststep", "\u00c1rkantor", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Tempest", "Firebrand", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55.9845, 98.9667, 116.2788, 46.851, 35.3119, 884.5, 26.7435, 210.1478, 83.3055, 72.5015, 88.9645, 9.7022, 47.6467, 87.9925, 75.9497, 21.2784, 21.0726, 37.3894, 83.6527, 138.788, 102.1002, 21.1147, 95.3024, 22.2111, 65.124, 81.6408, 27.9531, 29.2692, 198.6634], [57.123, 164.7513, 79.0372, 59.1675, 21.0795, 980.575, 0.0, 232.0775, 61.8879, 62.6644, 21.1595, 41.4723, 90.9619, 42.9937, 114.5719, 22.9944, 0.0, 40.4294, 11.3818, 89.9222, 16.9139, 97.324, 163.5124, 72.0474, 86.2934, 104.0085, 37.8, 62.8452, 35.9213, 11.6216, 88.7645], [386.9888, 459.816, 70.0258, 2495.6625], [158.697, 282.1203, 216.2644, 222.985, 31.3352, 1040.8125, 25.2315, 295.2526, 133.9492, 68.0644, 34.6628, 67.4163, 154.0397, 44.4911, 124.0824, 20.0772, 20.2756, 58.3796, 35.3126, 61.8921, 35.1335, 125.8914, 247.7209, 46.6946, 100.9008, 68.904, 78.084], [57.519, 347.76, 187.6248, 137.5745, 36.6275, 1675.2125, 0.0, 296.9953, 99.7703, 73.4224, 28.8944, 22.0916, 138.7891, 22.8928, 86.6656, 47.3616, 23.391, 15.572, 17.4101, 87.8809, 28.7258, 142.1621, 128.0743, 109.3198, 105.727, 45.414, 134.082, 57.4218, 22.5553, 32.7518, 184.1801], [2414.8375, 9.45, 237.1606, 190.929, 112.8127, 78.7911, 35.0755, 325.4506, 43.7297, 78.7626, 161.9218, 0.1449, 14.9103, 87.0426, 76.5546, 317.8371, 212.623, 260.5532, 217.2042, 51.894, 0.0], [395.802, 985.8996, 455.1976, 596.7465, 159.965, 2435.425], [125.3835, 391.3749, 168.3968, 285.775, 71.2816, 2144.9125, 71.631, 198.8199, 104.0985, 104.064, 20.8973, 25.7775, 230.2022, 70.5056, 139.308, 50.5877, 0.0, 107.6394, 38.5411, 63.3501, 15.7291, 246.9091, 351.8935, 131.1534, 176.3834, 54.7578, 263.196, 156.285, 68.8653, 194.7891, 244.8482], [0.0, 230.3312, 168.728, 38.7504, 2301.9875, 178.3215, 991.4852, 232.7825, 253.4204, 52.6498, 75.4302, 278.7514, 144.2599, 164.9371, 173.7622, 80.7761, 0.0, 159.9061, 63.1944, 371.3759, 389.0586, 127.3694, 354.1181, 97.1964, 206.766, 134.3844, 127.4918, 238.0278, 328.8886], [34.0065, 451.0737, 166.6764, 210.266, 31.0362, 3327.55, 0.0, 695.0708, 171.7424, 157.268, 27.5834, 42.3997, 203.3558, 97.51, 162.6599, 151.008, 24.9435, 90.6404, 12.385, 42.1727, 19.4407, 285.8987, 293.0374, 241.3057, 232.2391, 136.3203, 223.722, 170.2782, 80.9462, 110.8162, 406.1534], [127.611, 622.6353, 572.1848, 588.8575, 168.636, 5650.125, 0.0, 373.9673, 381.5902, 588.8028, 59.2048, 156.2584, 336.4598, 150.7826, 227.9383, 218.6527, 0.0, 164.406, 115.3133, 275.562, 49.5085, 675.2699, 656.1909, 396.5632, 699.8706, 144.4374, 497.502, 468.1098, 208.181, 226.4062, 457.3111], [476.7345, 1569.1221, 1137.8928, 915.0435, 223.054, 9753.9, 204.7185, 1636.7421, 626.8218, 434.3394, 271.5868, 285.8356, 676.7098, 311.1334, 475.7904, 511.1621, 118.2384, 246.671, 112.0027, 531.5504, 142.6136, 679.3938, 907.0895, 510.0832, 882.882, 392.4918, 740.232, 438.7572, 303.35, 714.9051, 914.933]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

