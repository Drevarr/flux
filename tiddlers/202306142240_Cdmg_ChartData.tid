created: 20230614224052000
creator: Drevarr
modified: 20230705163535353
modifier: drevarr
tags: ChartData
title: 202306142240_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Momomeko", "Black Raspberry Pie", "Crusader Siolith", "Mistwalker Cael", "Johosh The Mighty", "Artakama Nahid", "Venomina The Siren", "Tika Fiery", "Permanent Dawn", "Be\u00eb", "Xanvias Einzbern", "Shaca Booey", "Morton Saltbringer", "Rina Of Theros", "Elonith Requiem", "Smol Gluvs"];
const professions = ["Chronomancer", "Chronomancer", "Firebrand", "Vindicator", "Berserker", "Tempest", "Tempest", "Firebrand", "Weaver", "Scourge", "Berserker", "Berserker", "Chronomancer", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 7.3191, 15.3455, 21.8655, 3.425, 30.2239, 15.5079, 42.8049, 0.0], [16.6327, 1.6596, 30.0727, 20.1637, 17.475, 39.0299, 6.4286, 29.0244, 0.0], [8.3265, 31.617, 2.1455, 19.538, 85.6875, 10.4328, 0.0, 31.1951, 0.0], [7.6122, 22.4681, 25.2545, 6.7612, 4.1587, 162.4268, 0.0], [251.2239, 37.4762], [13.3878, 1.1702, 0.0, 63.1637, 31.85, 28.8955, 15.0159, 33.9634, 34.7383], [140.1633, 63.9362, 8.5091, 35.8596, 17.4, 0.0, 0.127, 68.2317, 1.7664], [75.9796, 24.9149, 36.3091, 29.0702, 104.475, 3.8955, 11.2857, 197.9024, 9.9813], [123.9796, 10.9362, 0.0364, 55.9298, 69.0875, 97.403, 99.8254, 105.7805, 1.8598], [237.5918, 100.7447, 82.3091, 144.7602], [174.6531, 231.1489, 0.0, 156.1194, 73.1587, 100.939, 36.0841], [201.1837, 53.4681, 51.3818, 95.4444, 46.05, 48.8507, 72.0952, 48.6098, 34.1308], [209.8955, 64.5556, 319.4756, 157.6168], [361.2653, 94.4043, 206.3636, 131.9181, 220.625], [278.3918, 342.2625], [118.5918, 373.0426, 0.2545, 399.6725, 172.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

