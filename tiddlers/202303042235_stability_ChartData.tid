created: 20230304223548000
creator: Drevarr
modified: 20230705163521259
modifier: drevarr
tags: ChartData
title: 202303042235_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Kmpek", "Pinky Aldar", "Xanvias Tseli", "Husky Guard", "Cerys Fireblade", "Venomina The Fierce", "Aronorf Xideliesi", "Blanco Padre Guard", "Sygaldry Verdandi", "Ace Hammers", "Gabe Malhorn", "Koralia Danai", "Bella Sassy"];
const professions = ["Vindicator", "Scrapper", "Berserker", "Dragonhunter", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.6496, 2.366, 3.0433, 0.0, 7.44, 2.146, 1.694, 1.3863], [1.4797, 5.4404, 7.5712, 3.619, 1.4465], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.9254, 0.0, 1.3165, 3.1668, 8.3993, 1.316, 0.0, 3.162, 2.146, 0.364, 1.0639], [3.6774, 0.9217, 1.6272, 0.6786, 1.2662, 1.6524, 0.0, 2.4552, 10.1672, 0.0, 0.0, 3.8164, 3.9039, 2.632, 1.4129, 2.418, 1.218], [5.6243, 1.7117, 0.648, 0.0, 0.5353, 0.7997, 1.0098, 0.5009, 1.485, 0.5347, 0.9821, 5.1573, 0.0, 0.2502, 2.2736, 4.732, 4.606, 0.0, 3.627, 2.494, 0.7, 0.4191], [2.2714, 1.0534, 0.288, 1.5985, 3.6985, 0.765, 1.4458, 1.1583, 0.0, 1.2276, 8.1043, 0.0, 1.5776, 1.3804, 4.6137, 2.1385, 2.604, 1.131, 1.302, 2.4502], [8.0038, 2.414, 3.6864, 2.8988, 4.2228, 0.2173, 0.297, 0.0, 3.9079, 16.7979, 0.0, 0.1632, 3.7352, 7.2163, 4.8527, 0.471, 9.858, 6.757, 3.08, 4.7232], [10.4915, 7.4174, 2.3184, 0.0, 1.9755, 3.2654, 1.5912, 1.1907, 5.4648, 3.7442, 23.576, 0.5331, 4.6284, 15.379, 5.593, 2.6239, 17.67, 7.134, 5.642, 0.0], [15.6832, 3.204, 1.368, 0.2785, 0.3167, 4.4316, 6.3342, 0.0297, 5.5242, 27.2598, 1.056, 0.2394, 17.052, 13.3679, 7.4848, 1.0092, 14.973, 4.872, 4.858, 2.7243], [27.4726, 3.994, 0.6912, 0.0, 2.081, 1.3661, 1.377, 0.7749, 8.9991, 1.78, 11.6406, 0.534, 3.3075, 11.774, 34.1887, 7.7315, 2.1193, 13.392, 1.363, 0.0, 0.8705], [21.4157, 6.364, 2.16, 1.5943, 0.2187, 10.5291, 3.4578, 1.7226, 0.1092, 4.8081, 24.3128, 0.372, 2.7309, 9.1756, 18.2182, 5.922, 1.1774, 11.718, 6.438, 5.32, 1.0156], [21.9565, 5.3107, 2.0016, 2.2168, 6.9639, 4.0392, 2.3909, 5.4054, 1.4778, 7.1815, 26.2283, 4.176, 3.1226, 11.8552, 27.6822, 6.6623, 3.734, 17.484, 8.671, 3.934, 2.95], [14.169, 6.7591, 2.4624, 2.8228, 1.3949, 3.0321, 3.978, 0.4441, 0.7722, 0.0, 6.0562, 36.8375, 0.012, 0.185, 12.992, 32.4142, 15.2163, 4.7432, 25.203, 7.076, 3.92, 4.1428]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

