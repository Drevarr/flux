created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mother Ship", "Ain Sof Aur", "Gestern Yesteryear", "Bae Ken", "My Heel Your Sack", "Luke The Knight", "Free H\u00e4nd", "Aronorf Xideliesi", "Legacy Of Mathus", "Elonith Requiem", "Synomi\u00f1 Spyce", "Charr Surethang", "Legoh Brave", "Shaca Booey", "Ateriuz"];
const professions = ["Tempest", "Guardian", "Firebrand", "Reaper", "Dragonhunter", "Berserker", "Renegade", "Firebrand", "Berserker", "Scourge", "Scourge", "Berserker", "Tempest", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.0468, 2.9193, 31.4362, 84.3103, 54.5556, 1.9677, 0.5773, 4.5445, 10.0108, 41.1273, 21.6703, 0.0, 27.2727, 61.8387, 18.4729, 11.0612, 0.9483, 3.8739], [24.4388, 6.8602, 1.1602, 87.7778, 28.0645, 34.9794, 2.5836, 12.0323, 59.7855, 11.0769, 0.0, 14.7879, 21.2581, 31.168, 0.0, 17.4483, 14.8824], [5.4784, 14.354, 24.546, 9.3276, 3.7407, 6.9355, 32.5567, 12.3701, 6.0645, 87.1382, 23.6154, 0.0, 4.4848, 23.129, 2.6744, 7.3673, 3.931, 15.437], [41.5576, 24.6335, 17.5371, 0.0, 5.5185, 22.7258, 19.5155, 13.8292, 20.2473, 54.4945, 25.6154, 0.2923, 22.1515, 13.5806, 20.3695, 22.6122, 11.5259, 25.4874], [88.5647, 25.264, 55.4273, 27.5862, 320.037, 51.2742, 40.6082], [33.3489, 0.0, 15.6172, 127.8276, 0.0, 194.5484, 56.4124, 1.8007, 10.6882, 163.0582, 140.0659, 0.0, 157.0909, 33.6774, 0.5323], [152.2482, 89.4037, 270.1111, 264.5645, 174.3711], [29.003, 16.4138, 27.9259, 36.7903, 34.4227, 22.7794, 28.4624, 219.7455, 58.4286, 0.0, 14.7273, 115.1613, 25.3876, 82.3878, 22.2414, 10.4958], [46.9388, 68.3758, 61.9347, 355.3448, 268.0741, 145.6613, 118.4021, 75.0178, 57.9462], [25.8968, 67.1505, 234.1236, 235.0, 110.9091, 229.5806, 105.416, 53.2245, 99.319, 60.437], [73.2633, 126.7419, 178.0218, 270.5275, 0.0, 273.2424, 109.9355, 163.4134, 144.5102, 260.5345, 25.2437], [9.7554, 9.441, 178.5282, 1.2931, 224.7778, 155.6935, 155.5567, 104.7972, 195.6218, 283.3626, 197.2121, 608.4516, 89.6408, 18.449, 0.0, 0.0], [314.3828, 262.1897, 358.1852, 349.5968, 202.4536, 173.0178, 81.1505, 391.0873], [99.7122, 154.146, 440.1039, 202.569, 170.2963, 0.4516, 117.2371, 4.3025, 96.8172, 166.9018, 322.5604, 0.0, 26.8485, 201.7442, 0.9184, 6.2586, 267.4286], [61.8237, 21.3385, 165.9792, 149.9483, 307.963, 294.9839, 169.5773, 162.726, 95.0108, 399.4655, 819.3956, 0.0, 436.4545, 3.3226, 90.1499, 0.5918, 245.3966, 343.7395]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

