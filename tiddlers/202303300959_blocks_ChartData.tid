created: 20230330095927000
creator: Drevarr
modified: 20230705163523396
modifier: drevarr
tags: ChartData
title: 202303300959_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["X E R E C A R D", "Isla Miststorm", "Seren Nightroad", "Gavann", "Rafaellagabriela", "Dynacaster Amazoni", "Legacy Of Mathus", "Flanneryflame", "Rina Of Theros", "Sumatra Satyricon", "Sofya De Nova", "Belvyn Brightblade", "Solus Sanctus", "Lord Erin The Wise", "Oo Dads Mad", "Einar Xxl", "Fungus", "Aira Draugr", "Grasszanine", "Venomina The Siren", "River No Hug", "Khailerian", "Tootsie Pop Rocks", "Ark Darkness", "Sassy Daddy Demon", "Xyntharos", "Smol Gluvs", "Jeckyll Mbs", "Smol Daddy Tika", "Rozaalyna", "Be\u00eb", "Mac Chiato", "Arcanophage Farra", "Mistwalker Caelon", "Zadie Miststep", "Xanvias Einzbern", "Zaylen Harker", "Newtype Khan", "Sygaldry Verdandi", "Koralia Danai", "Fribble Bibble", "\u00c1rkantor", "Drevarr Moonwillow", "Johosh The Great", "Primal Clone", "Bella Sassy", "Eibh\u00ebar", "Sister Elon\u00edth", "Ryvalia Fazebringer", "Black Raspberry Pie"];
const professions = ["Chronomancer", "Willbender", "Scourge", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Weaver", "Scourge", "Soulbeast", "Weaver", "Firebrand", "Firebrand", "Weaver", "Spellbreaker", "Firebrand", "Scourge", "Herald", "Spellbreaker", "Tempest", "Scourge", "Herald", "Scrapper", "Firebrand", "Vindicator", "Vindicator", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Tempest", "Spellbreaker", "Vindicator", "Tempest", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19, 2, 0, 44, 0, 14], [1, 2, 3, 13, 67], [0, 1, 0, 5, 99], [60, 5, 12, 0, 16, 6, 1, 6, 1, 14], [55, 6, 8, 1, 11, 7, 2, 0, 18, 0, 17], [0, 1, 0, 8, 130], [6, 0, 4, 130], [117, 4, 0, 5, 7, 0, 0, 11, 0, 8], [0, 3, 0, 7, 152], [3, 0, 1, 129, 5, 8, 0, 13, 3, 0, 0], [0, 2, 138, 1, 9, 0, 12, 3, 0, 0, 4, 0, 8], [0, 7, 2, 11, 160], [0, 9, 2, 15, 66, 5, 21, 0, 19, 8, 1, 0, 14, 1, 22], [0, 2, 0, 14, 149, 3, 5, 0, 12, 2, 0, 0, 9], [0, 2, 0, 6, 238], [187, 5, 12, 0, 16, 11, 16], [0, 0, 0, 4, 196, 7, 8, 0, 14, 9, 0, 0, 8, 1, 13], [0, 3, 0, 3, 261], [0, 5, 0, 6, 217, 7, 10, 0, 11, 5, 9, 0, 14], [3, 223, 7, 10, 0, 10, 6, 0, 10, 16], [0, 4, 0, 7, 230, 3, 15, 0, 14, 4, 0, 3, 0, 13], [0, 4, 220, 6, 7, 0, 19, 9, 0, 0, 17, 0, 15], [0, 2, 1, 9, 236, 3, 10, 2, 15, 10, 0, 12, 0, 2], [2, 9, 295], [2, 0, 9, 269, 6, 8, 0, 14, 4, 0, 18, 1, 15], [0, 2, 0, 9, 292, 5, 6, 0, 11, 2, 1, 0, 7, 0, 12], [0, 3, 1, 9, 291, 5, 3, 0, 10, 8, 0, 0, 16, 0, 13], [0, 5, 0, 7, 323, 3, 9, 0, 14, 3, 0, 0, 11, 0, 17], [0, 10, 0, 7, 319, 3, 6, 0, 11, 5, 0, 0, 20, 0, 13], [0, 5, 0, 13, 358, 8, 11, 0, 10, 2, 0], [0, 9, 0, 7, 326, 8, 11, 0, 9, 7, 0, 0, 16, 0, 14], [0, 4, 0, 7, 369, 7, 6, 1, 11, 5, 0, 8, 0, 9], [0, 6, 0, 4, 366, 5, 3, 0, 12, 9, 0, 9, 0, 16], [0, 12, 1, 5, 375, 4, 7, 0, 14, 8, 0, 17, 0, 21], [0, 11, 0, 4, 385, 7, 12, 0, 21, 5, 0, 11, 13], [0, 4, 0, 14, 402, 4, 5, 0, 13, 5, 0, 0, 16, 0, 16], [0, 8, 0, 10, 395, 6, 9, 0, 17, 7, 18, 0, 18], [0, 4, 0, 4, 432, 2, 14, 0, 15, 5, 0, 7, 0, 10], [7, 1, 18, 402, 3, 10, 0, 21, 10, 0, 0, 20, 2, 20], [0, 6, 1, 15, 431, 8, 6, 0, 19, 9, 0, 15, 0, 22], [5, 0, 7, 471, 0, 5, 1, 13, 6, 11, 0, 13], [0, 5, 0, 6, 438, 38, 8, 0, 47, 5, 0, 12, 0, 19], [0, 9, 1, 9, 482, 3, 9, 0, 25, 16, 15, 0, 23], [0, 12, 2, 10, 522, 5, 9, 0, 18, 4, 1, 4, 2, 25], [0, 4, 0, 10, 486, 9, 13, 0, 25, 5, 0, 0, 20, 0, 50], [1, 7, 2, 17, 499, 6, 14, 0, 28, 10, 0, 19, 0, 23], [0, 6, 0, 20, 512, 7, 14, 0, 23, 10, 0, 0, 26, 0, 31], [1, 18, 551, 5, 17, 0, 13, 8, 2, 19, 0, 25], [0, 6, 1, 14, 533, 7, 16, 0, 24, 17, 1, 0, 22, 1, 27], [0, 9, 0, 13, 493, 8, 22, 1, 60, 12, 0, 0, 67, 0, 19]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

