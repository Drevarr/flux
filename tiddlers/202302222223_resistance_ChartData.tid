created: 20230222222328000
creator: Drevarr
modified: 20230705163520017
modifier: drevarr
tags: ChartData
title: 202302222223_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Primal Clone", "Eibh\u00ebar", "Sp\u00edcy Cheese", "One Whole Keg", "Koralia Danai", "Black Raspberry Pie", "Ryvalia Fazebringer", "Kosair", "Kiloak", "Sygaldry Verdandi", "Smol Daddy Tika", "Blanco Padre Guard", "Zaylen Harker", "Ravioli Fetabringer", "Newtype Khan", "Bella Sassy", "Jeckyll Mbs", "Arcanophage Farra", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Chronomancer", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Chronomancer", "Chronomancer", "Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.0474, 4.6049, 646.7886], [6.5566, 6.5508, 863.6203, 6.5526, 6.5409, 31.3206, 19.9817, 12.8231, 16.7504, 75.2367, 22.072, 70.2151, 19.6608], [13.0949, 6.5508, 878.4464, 6.5246, 6.5409, 25.4569, 19.6486, 19.8175, 23.8133, 52.6479, 32.6665, 61.5781, 18.7889], [0.0, 44.3849, 1013.7346, 0.0, 20.812, 0.0, 21.3138, 0.0, 40.2936, 30.9484, 34.0399, 0.0], [33.9368, 27.8371, 1156.4358, 25.8465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [14.7432, 14.7653, 959.99, 7.8407, 7.8491, 29.8904, 23.9225, 21.605, 25.5115, 81.2841, 26.9768, 82.0509, 30.5156], [9.7067, 6.9964, 985.9356, 7.0007, 11.7736, 33.3943, 25.8097, 21.1776, 21.0345, 81.2841, 30.9988, 73.5739, 34.7006], [14.9996, 7.5015, 974.8161, 14.9534, 9.7915, 37.6848, 22.4239, 22.693, 26.3606, 64.5648, 43.7515, 81.2511, 29.9053], [1427.0121], [943.3106, 32.7631, 7.6509, 62.2836, 54.1725, 28.444, 50.2898, 102.8057, 52.5803, 97.5654, 55.3205], [15.1461, 7.7391, 1237.9793, 37.3275, 0.0, 25.0994, 54.5056, 43.3654, 65.1104, 145.3153, 64.5482, 75.4932, 37.2726], [8.5346, 53.5947, 1575.2731, 12.7972, 0.0, 54.2747, 31.9707, 27.7057, 27.7115, 67.0549, 58.0738, 116.5986, 10.6805], [36.5741, 12.953, 1528.9415, 7.8407, 7.6905, 57.6356, 48.5111, 37.731, 0.0, 133.3983, 24.2301, 131.7932, 52.9228], [21.9957, 21.4795, 1599.3655, 6.8184, 55.7048, 68.8813, 34.1561, 12.3119, 139.8015, 58.7605, 120.2773, 65.9573], [17.8383, 23.2323, 1688.3221, 11.6211, 7.7698, 25.1709, 72.156, 39.1688, 30.9535, 118.4577, 61.7034, 76.7727, 43.7681], [0.0, 24.6434, 1666.083, 18.6218, 18.6317, 49.1261, 56.4482, 57.6652, 35.8165, 128.596, 68.7664, 111.8003, 74.5017], [15.897, 15.8942, 1712.4145, 7.9528, 15.8964, 23.9552, 47.6785, 47.7175, 27.7887, 158.833, 30.3122, 132.7529, 83.4384], [17.9482, 34.0017, 1527.0883, 50.9795, 80.5897, 61.4992, 33.9618, 48.9389, 150.4733, 84.5601, 203.2878, 72.758], [0.0, 0.0, 3215.4104, 0.0, 75.8349, 0.0, 110.7873, 82.3399, 140.8345, 331.5393, 267.316, 324.3648, 56.4539], [23.9554, 46.8508, 4673.928, 39.5118, 51.693, 149.2375, 107.235, 20.9833, 93.6709, 207.3899, 119.3848, 233.837, 82.1306]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

