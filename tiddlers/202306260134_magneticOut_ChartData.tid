created: 20230626013408000
creator: Drevarr
modified: 20230705163538896
modifier: drevarr
tags: ChartData
title: 202306260134_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Venomina The Siren", "Artakama Nahid", "Miphest\u00f6", "Elon The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.9989, 0.0, 19.1585, 0.0, 19.9408, 16.1304, 19.9125, 19.9152, 20.0304, 19.943, 0.0, 19.8735, 39.8974, 19.9529, 19.191, 0.0, 0.0, 17.4216, 0.0, 0.0, 0.0, 0.0, 16.6604, 17.0306, 0.0], [22.0035, 20.0423, 8.9298, 15.9852, 19.9795, 17.8882, 16.065, 15.8976, 15.5142, 39.982, 0.0, 0.0, 15.6002, 0.0, 19.9769, 0.0, 19.0579, 7.5698, 0.0, 0.0, 19.943, 15.4325, 19.9653, 20.1369, 19.0275], [20.2003, 0.0, 19.7366, 0.0, 133.7737, 19.9352, 0.0, 19.8557, 0.0, 0.0, 11.6424, 34.7318, 0.0, 15.8625, 19.9584, 20.0304, 0.0, 19.7469, 11.6015, 0.0, 0.0, 20.0182, 0.0, 19.9181, 0.0, 19.9157, 17.5141, 0.0, 15.2517, 16.1095, 11.3911], [40.1414, 60.048, 19.8968, 0.0, 219.0844, 19.9352, 0.0, 38.5181, 18.2157, 18.4188, 47.6784, 60.2483, 54.9571, 27.5175, 65.88, 34.7022, 0.0, 39.2274, 16.2545, 19.661, 15.3098, 56.8286, 34.8947, 26.5574, 59.8902, 0.0, 0.0, 19.943, 0.0], [20.1139, 60.2208, 59.9789, 20.1917, 314.8087, 39.8449, 19.7426, 39.95, 20.0423, 19.9522, 54.1464, 68.6506, 34.639, 39.825, 58.752, 36.3636, 37.8726, 15.7529, 19.7469, 18.55, 39.965, 27.2732, 20.0182, 39.997, 20.4826, 38.3497, 40.3788, 11.8482, 36.9458, 20.016, 69.4588, 20.1188, 20.1184]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

