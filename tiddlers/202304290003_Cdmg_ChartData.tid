created: 20230429000309000
creator: Drevarr
modified: 20230705163527135
modifier: drevarr
tags: ChartData
title: 202304290003_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Maaaathexxs", "Cyclotechnist Farra", "Morv\u00e4rth", "Da Omichli", "Xyntharos", "Aronorf Xideliesi", "Lord Erin The Wise", "Jupi Jupi Jupi", "Mistwalker Caelon", "Permanent Dawn", "Johosh The Great", "Xanvias Tsoli", "Smol Gluvs", "Panther B Me", "Rina Of Theros", "Rhongobojango", "Be\u00eb"];
const professions = ["Tempest", "Scourge", "Scrapper", "Reaper", "Renegade", "Vindicator", "Firebrand", "Weaver", "Dragonhunter", "Vindicator", "Weaver", "Firebrand", "Holosmith", "Scourge", "Scourge", "Scourge", "Tempest", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.1854, 19.6684, 53.831, 13.7968, 7.7956, 60.2178, 9.7113, 0.0, 0.0, 18.0423, 1.9747, 0.0, 8.7053], [33.7528, 3.0207, 74.7887, 0.0, 14.5552, 14.8905, 1.1188, 71.169, 0.0, 47.2394, 1.1139, 7.7879], [7.6348, 24.3731, 26.3944, 0.2857, 10.5884, 3.562, 23.7723, 12.7113, 4.2843, 0.0, 31.338, 0.0, 0.0, 23.0847], [18.8933, 41.5907, 11.9155, 31.1786, 27.007, 22.4015, 47.9703, 15.3028, 3.9902, 0.0], [442.0282, 0.0, 18.8354], [25.236, 9.9534, 20.338, 21.0179, 14.387, 10.1314, 15.396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.7757], [47.1348, 0.0, 43.7183, 0.0, 14.7426, 11.7883, 105.0297, 14.7958, 19.9412, 1.5823, 10.6056, 0.0, 13.0303, 8.6545], [86.191, 49.3782, 81.2817, 0.0, 18.6235, 26.5766, 28.1188, 29.8592, 0.0, 0.0], [21.3427, 44.3679, 69.169, 0.0, 24.8827, 8.3723, 40.6268, 2.4902, 0.0, 22.1831, 1.6582, 0.5455, 16.94], [27.2809, 14.1969, 1.9859, 0.0, 17.5149, 2.5474, 16.9307, 14.0141, 0.0, 15.1646, 0.0, 0.0, 1.6288, 37.9635], [10.236, 24.6114, 84.7183, 64.2504, 1.0657, 0.0, 0.0, 0.0, 5.4302], [51.1348, 29.3109, 51.662, 0.0, 29.2925, 0.0, 0.0, 2.3239, 2.0392, 0.0, 0.0, 0.0, 2.3864, 23.6793], [27.7303, 82.1408, 53.4956, 4.7664, 31.0297, 31.338, 0.0, 0.0, 3.6197, 3.4051, 11.8636, 38.9439], [67.8933, 63.0415, 284.0423, 0.0, 22.8546, 5.927, 38.5941, 50.4014, 0.0, 0.0, 27.7887, 1.7722, 1.5833, 52.1395], [26.8258, 47.1969, 45.493, 25.8393, 98.6427, 23.9854, 121.4851, 54.7042, 12.2059, 0.0, 19.493, 20.5949, 2.7045, 75.2021], [109.6461, 121.9326, 136.5634, 39.8929, 55.1716, 25.1168, 30.1683, 135.1127, 1.5588, 5.0316, 74.662, 98.5063, 5.5, 48.1173], [72.3371, 343.5233, 175.9014, 186.7846], [85.2584, 93.2902, 456.6338, 48.3214, 170.7373, 27.0803, 56.1683, 57.1408, 42.0294, 0.0, 53.5634, 2.9367, 5.1667, 133.7666]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

