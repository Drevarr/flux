created: 20230603215001000
creator: Drevarr
modified: 20230705163533354
modifier: drevarr
tags: ChartData
title: 202306032150_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Black Raspberry Pie", "Arriasa", "Pamtastic", "Tegan Parker", "Artakama Nahid", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Chronomancer", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0043, 0.0758, 0.0702, 0.0, 0.1042, 0.0541, 0.0943, 0.0, 0.2294, 0.3396, 0.129, 0.2353, 0.2872, 0.2542, 0.2838, 0.0357, 0.4103], [0.0, 0.1009, 0.2075, 0.0, 0.5851, 0.4492, 0.5405, 0.4821, 1.1795], [0.5321, 1.1887, 0.2258, 1.3824, 1.4787, 1.7119, 1.6486, 1.4464, 0.0256], [0.1121, 0.5687, 0.5614, 0.0, 0.5833, 0.2703, 0.3774, 0.0685, 0.5413, 1.2264, 0.1613, 0.3235, 1.4894, 1.3898, 1.6081, 0.2321, 0.2051], [0.0733, 0.5782, 0.6667, 0.0682, 0.4792, 0.566, 0.1233, 0.4862, 0.1698, 2.1471, 1.883, 1.4915, 0.5676, 1.0, 1.1026], [0.194, 0.6967, 2.0702, 0.0682, 1.75, 0.1081, 1.4528, 0.0548, 1.578, 1.2264, 0.7647, 1.6596, 1.4237, 1.0811, 1.3214, 2.359], [0.3405, 0.6682, 1.9298, 0.1477, 2.0625, 0.3514, 1.7547, 0.0685, 1.0917, 1.6792, 0.3226, 1.7941, 1.5851, 1.4576, 2.027, 1.0536, 1.0513], [0.1379, 0.6209, 1.6491, 0.0795, 1.0625, 0.1081, 1.566, 0.0274, 1.2477, 2.4906, 2.3824, 2.6915, 2.3898, 2.0, 1.6607, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

