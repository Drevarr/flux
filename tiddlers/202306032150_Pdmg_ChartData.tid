created: 20230603215001000
creator: Drevarr
modified: 20230705163533569
modifier: drevarr
tags: ChartData
title: 202306032150_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Feberhinizer", "Tacitus Tacitus", "High Sorcer Baradun", "Blackout Angel", "Kira Dragonblaze", "Axunar", "Yngvar The Burdened", "Sygaldry Verdandi", "Smol Gluvs", "Tootsie Pop Rocks", "Kary\u00edna", "Duke Silvver", "Be\u00eb", "Zadey Starbolt", "Mistwalker Cael", "Lord Erin The Wise", "Jo Hosh", "Xanvias Einzbern"];
const professions = ["Scrapper", "Soulbeast", "Reaper", "Weaver", "Reaper", "Dragonhunter", "Dragonhunter", "Scourge", "Dragonhunter", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Weaver", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[50.1853, 223.5213, 1677.2982, 2016.5833, 220.8108, 951.1887, 109.0685, 136.4954, 493.4906, 0.0], [105.1897, 67.7204, 658.4737, 0.0, 74.2703, 179.9245, 11.9452, 25.2202, 914.0189, 924.9412, 248.9787, 596.3644, 1065.6622, 734.2679, 26.2051], [144.7671, 198.1927, 483.4528, 0.0, 317.2353, 1545.4681, 1176.9068, 278.6486, 519.0], [477.2941, 1687.2553, 624.6017, 1672.0135, 196.3214, 1525.2308], [484.9266, 975.717, 0.0, 1444.7553, 1126.7373, 162.3243, 716.6786, 925.4872], [188.3147, 386.0853, 775.8772, 64.3295, 1638.7292, 777.0541, 1389.3962, 162.9315, 732.2294, 286.5094, 23.7419], [36.9397, 351.9858, 379.7018, 0.0, 832.2917, 625.5946, 632.6038, 219.6712, 510.9725, 399.5283, 0.0, 625.1176, 615.7128, 581.4661, 302.9595, 133.4107, 130.3077], [94.3243, 1014.1698, 12.2055, 532.3486, 992.2453, 292.2059, 1188.3298, 872.7119, 860.4459, 172.0714, 381.0769], [72.681, 534.4929, 999.0351, 0.0, 1319.0208, 223.4865, 656.3396, 56.863, 1405.7982, 1540.4906], [96.9871, 160.8626, 1359.5614, 0.0, 1605.25, 147.3514, 989.4717, 97.8219, 428.1835, 0.0, 266.0, 1071.0957, 816.2119, 771.5811, 276.7321, 1269.2051], [321.8147, 711.4218, 3471.1404, 0.0, 3019.1875, 1087.8491, 208.4658, 808.1468, 824.5849, 0.0, 984.0882, 1733.6809, 628.3051, 102.3649, 121.2679, 0.0], [336.0216, 759.6588, 3351.5088, 11.25, 3123.9583, 837.0811, 1505.7736, 251.9863, 487.7248, 683.434, 452.3235, 1638.1702, 1580.4322, 361.5, 1931.8462], [94.9052, 300.4834, 3256.2632, 0.0, 2282.5, 1174.2703, 1291.3962, 624.4658, 651.8532, 552.0377, 767.9706, 1947.7021, 2393.1356, 524.4459, 999.6607, 1505.1538], [394.6767, 546.9716, 2792.8772, 23.0, 3139.25, 1149.7297, 1653.6792, 192.0411, 1183.7248, 0.0, 1277.8824, 2242.1383, 1221.5763, 471.6622, 799.7143, 1800.6923], [208.8578, 803.1137, 4506.4211, 3440.1042, 1619.1622, 1950.2453, 215.4247, 1125.0092, 3232.5472, 0.0, 1128.1765, 1867.4149, 182.7881, 1565.473, 0.0, 0.0], [244.5819, 723.6351, 5899.2105, 18.7727, 8486.5417, 501.2162, 2962.8868, 228.863, 1183.2385, 2106.4906, 415.6471, 2684.0745, 2955.9746, 1973.4459, 385.1964, 0.0], [305.8233, 763.9242, 4675.5088, 54.6705, 4137.6458, 1492.3514, 1685.7925, 506.8219, 1194.3394, 1821.7358, 733.9032, 1093.8529, 4280.5638, 2474.7881, 963.9595, 4042.5714, 2860.8205], [378.1336, 831.0047, 4243.193, 53.8182, 5920.7083, 2862.5405, 3130.7925, 40.5479, 1372.7523, 1828.566, 636.0, 3132.7021, 3144.7373, 2243.6622, 1574.5536, 2974.6667], [99.2155, 1242.0948, 8345.2105, 0.0, 8937.6042, 2119.5676, 5657.3396, 218.8493, 982.1284, 135.3774, 119.7647, 4454.0, 4401.8475, 4993.7432, 3360.4643, 4222.359]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

