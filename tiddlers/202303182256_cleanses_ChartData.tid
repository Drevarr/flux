created: 20230318225613000
creator: Drevarr
modified: 20230705163522460
modifier: drevarr
tags: ChartData
title: 202303182256_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Zaylen Harker", "Newtype Khan", "Johosh The Great", "Primal Clone", "Boysto Yardbringer", "\u00c1rkantor", "High Sorcer Baradun", "Tegan Parker", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Vindicator", "Vindicator", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0094, 0.125, 0.0, 0.1235, 0.151, 0.1176, 0.0339, 0.0, 0.3333, 0.225, 0.1691, 0.1628, 0.0179, 0.1591, 0.2841, 0.0, 0.0278, 0.3947, 0.2581, 0.1556, 0.0882, 0.125, 0.0463], [0.0, 0.2143, 0.0, 0.2222, 0.151, 0.1275, 0.0, 0.2396, 0.225, 0.0966, 0.186, 0.0625, 0.3182, 0.2727, 0.0, 0.0, 0.3684, 0.0161, 0.2148, 0.1912, 0.3523, 0.1944], [0.0472, 0.006, 0.0, 0.321, 0.3047, 0.2353, 0.0, 0.0, 0.5625, 0.25, 0.1594, 0.7093, 0.0982, 0.0, 0.0227, 0.0833, 0.0], [0.0755, 0.1488, 0.0, 0.2222, 0.2031, 0.1471, 0.0, 0.1923, 0.2396, 0.2, 0.2077, 0.4884, 0.1161, 0.2727, 0.375, 0.0556, 0.125, 0.4211, 0.2742, 0.2222, 0.1324, 0.2045, 0.2407], [0.0755, 0.2738, 0.0, 0.642, 0.2656, 0.1373, 0.0, 0.0, 0.4062, 0.6667, 0.3092, 0.8023, 0.125, 1.0, 0.1136, 0.0, 0.0278, 0.3684, 0.0968, 0.5259, 0.0515, 0.2045, 0.2407], [0.066, 0.494, 0.0847, 0.4321, 0.6719, 0.5049, 0.0, 0.0769, 0.6667, 1.2333, 0.6618, 0.2209, 0.3214, 0.4773, 0.0, 0.0833, 0.9211, 0.0, 0.6667, 0.4706, 0.5568, 0.213], [0.1038, 0.3393, 0.0169, 0.7531, 0.6562, 0.4902, 0.0, 0.625, 0.7, 0.43, 0.5581, 0.2857, 0.9091, 1.375, 0.2222, 0.0694, 0.9211, 0.6774, 0.4667, 0.4559, 0.5682, 0.4259], [0.1604, 0.2798, 1.4198, 0.8255, 0.3578, 0.1525, 0.1146, 0.8417, 0.7633, 1.2558, 0.5179, 1.4091, 0.1477, 0.6389, 0.0417, 0.7632, 1.1935, 0.5852, 0.5588, 0.5909, 0.1481], [0.0, 0.1695, 2.0123, 1.0573, 0.8873, 0.0, 0.5385, 1.2917, 1.5417, 0.6618, 1.5116, 0.4821, 1.7273, 1.5795, 0.4861, 1.6316, 1.0161, 0.8741, 1.1544, 1.0568, 0.4352], [0.2075, 0.9048, 0.1186, 1.7778, 0.9479, 1.0, 0.1356, 0.7692, 1.6562, 1.55, 0.9372, 2.0116, 0.9286, 2.2955, 2.6364, 0.0278, 0.375, 1.3421, 1.2258, 0.5704, 0.9265, 1.4659, 1.0833], [0.1415, 0.9048, 0.0678, 2.1728, 1.2708, 0.8186, 0.0169, 0.6146, 1.7833, 1.1787, 2.186, 0.7054, 2.3182, 2.3636, 0.6944, 0.3056, 2.5526, 1.5968, 1.2, 1.3162, 1.6477, 0.9537]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

