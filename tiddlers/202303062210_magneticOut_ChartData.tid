created: 20230306221045000
creator: Drevarr
modified: 20230705163521362
modifier: drevarr
tags: ChartData
title: 202303062210_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Klee Flamepumpkin", "Zadie Miststep", "Mac Aaroni", "Mike The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.9543, 0.0, 13.3868, 36.1179, 0.0, 15.6885, 39.6887, 20.0655, 0.0, 40.0208, 0.0, 38.1024, 32.7, 59.0528, 40.0095, 19.8406, 59.0911, 30.675, 0.0, 96.2438, 78.3163, 19.7851, 20.0003, 0.0, 15.2381, 19.9066, 59.7307, 60.0284, 19.9263, 39.4717, 0.0, 0.0], [126.4063, 74.3129, 37.6438, 0.0, 39.9017, 89.4226, 18.6125, 170.473, 98.5968, 20.101, 59.4762, 0.0, 53.352, 18.144, 83.2138, 59.9555], [99.912, 40.227, 0.0, 48.1572, 20.1155, 19.888, 40.0795, 32.9946, 39.8429, 19.9758, 59.8976, 36.121, 39.7836, 79.8176, 39.7782, 19.895, 48.0058, 19.0032, 80.015, 60.12, 0.0, 79.5932, 0.0, 39.7238, 79.6262, 99.5837, 79.4793, 59.8345, 76.7151, 60.1236, 59.7485], [99.5166, 77.8747, 0.0, 56.0114, 0.0, 41.3934, 0.0, 48.0024, 58.5192, 40.0139, 71.736, 34.4259, 60.5351, 79.8176, 59.5218, 37.6619, 7.7778, 19.8778, 19.8557, 151.4218, 0.0, 0.0, 76.7131, 40.1794, 59.6511, 0.0, 46.2384, 39.8131, 137.0981, 117.9441, 39.9082, 61.5949, 34.2, 47.7085], [139.8504, 77.765, 35.086, 27.489, 38.3269, 108.7505, 46.5108, 19.8862, 60.0015, 40.0139, 59.8976, 7.0578, 111.9395, 93.445, 37.6923, 59.5365, 18.6145, 99.666, 89.7946, 77.4749, 8.0489, 75.7512, 20.101, 79.5348, 7.3994, 59.6794, 22.0147, 139.4366, 106.2882, 60.6694, 96.8489, 89.8776, 39.9578]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

