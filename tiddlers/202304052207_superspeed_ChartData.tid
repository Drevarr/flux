created: 20230405220700000
creator: Drevarr
modified: 20230705163524583
modifier: drevarr
tags: ChartData
title: 202304052207_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Blancooo Padreee", "Zenek Tryst", "Tootsie Pop Rocks", "Venomina The Siren", "Grasszanine", "Smol Daddy Tika", "Mike The Archmagus", "Xanvias Tlesel", "Drevarr Moonwillow"];
const professions = ["Tempest", "Spellbreaker", "Weaver", "Scrapper", "Tempest", "Spellbreaker", "Berserker", "Weaver", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.442, 0, 0, 0.322, 0.576, 0, 0.991, 0.095, 0, 0, 0.453, 0.315, 0, 0.275, 0, 0, 0.079, 0.211, 1.073, 0.215, 0, 0.452, 0.214], [1.08, 0.869, 0, 0.428, 0, 0, 0, 0, 0, 0, 0, 0.43, 0, 0, 0, 0, 0.263, 0.132, 0.124, 1.117, 0.358, 0.375, 0.754, 0.18], [0, 0, 0, 0.642, 0.576, 0, 0, 0.104, 0, 0.382, 0.459, 0.747, 0.507, 0.021, 1.05, 0.55, 0, 0.631, 0.079, 0, 0, 0.431, 0, 0], [0.516, 0, 0, 0.225, 0.491, 0, 0, 0.637, 0.475, 0, 0.23, 0, 0.581, 0.079, 0.748, 0.396, 0.327, 0.07, 0.329, 0.314, 0, 0.431, 0.113, 0.226, 0.404], [0.387, 0, 0.359, 0.798, 0.577, 0.159, 0.618, 0.415, 0.739, 0.095, 0.46, 0.899, 0.315, 0.526, 0.428, 0.157, 0.328, 0.222, 0.536, 0.215, 0.221, 0, 0.107], [0, 0, 0, 0.714, 0, 0, 0, 0.692, 0.704, 0.733, 0.765, 0, 0.724, 0, 0, 0.458, 0, 0, 0.357, 0.495, 0.958, 0.359, 0.469, 0, 0.179], [0, 0.958, 1.197, 0.231, 0, 0, 0, 0, 0, 0, 0, 1.656, 0.47, 0.527, 0, 0.229, 0, 0.263, 0.512, 0.495, 0, 0.359, 0.376, 0.753, 0.359], [0.998, 0.737, 0.631, 0.525, 0.276, 0.163, 0.631, 0.298, 0.668, 0, 0.592, 1.048, 0.905, 0.215], [0.978, 0, 1.195, 0.643, 0.962, 0, 0, 0.519, 0.899, 0, 0.763, 0, 1.143, 0.526, 0.871, 0.459, 1.09, 0, 0.265, 0.878, 0.894, 0.716, 0.375, 0, 0.717], [1.557, 1.472, 1.303, 2.307, 0.288, 0.792, 2.814, 0.931, 2.076, 0.906, 1.49, 0.745, 2.207, 0.869, 2.531, 1.532, 1.962, 1.305, 1.45, 1.578, 2.079, 1.157, 1.131, 0.565, 1.143]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

