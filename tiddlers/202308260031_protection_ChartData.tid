created: 20230826003133000
creator: Drevarr
tags: ChartData
title: 202308260031_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Jinxi Greenphene", "Mistwalker Cael", "Mike The Archmagus", "Luceif", "Keypek The Drunk", "Venomina The Sly", "Air One Com", "High Sorcer Baradun", "Sub Train", "J\u00e2sm\u00eene", "Budget Chicken", "Greg The Knight", "Adrinz", "Wall Knot", "Drevarr Moonwillow", "Mmathuss", "Darks Na", "Tribal S", "Zaedy Zae", "Solus Luxes", "Bella Sassy", "Koralia Danai"];
const professions = ["Tempest", "Vindicator", "Herald", "Tempest", "Herald", "Scrapper", "Druid", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Guardian", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 4.9937, 0.0, 0.0, 0.0, 0.0, 63.0458, 19.0962, 0.0, 55.9654, 10.5908, 160.8251, 0.0], [9.9441, 65.5442, 41.3526, 10.8049, 35.6143, 0.0, 3.1027, 228.6963], [20.8264, 8.8452, 0.0, 4.4309, 13.8875, 0.0, 0.0, 0.0, 17.6579, 20.3062, 78.302, 6.6882, 16.0033, 6.6477, 61.4293, 13.2463, 0.0, 17.6575, 6.722, 0.0, 194.7607, 17.6854], [12.7973, 45.7125, 45.9905, 17.148, 10.6798, 16.9854, 0.0, 33.8153, 235.3055, 69.6634, 0.0, 33.489], [319.6, 0.0, 68.6039, 19.0228, 0.0, 127.1204], [10.0368, 10.01, 0.0, 23.6898, 11.5571, 11.088, 5.2962, 25.8826, 10.9623, 0.0, 76.704, 0.0, 12.9791, 0.0, 16.6073, 9.175, 44.235, 8.9429, 0.0, 40.7021, 20.9882, 11.9194, 210.499, 16.9013], [190.7612, 9.7343, 0.0, 0.0, 46.232, 58.4901, 49.4214, 19.4532, 0.0, 0.0, 338.864, 18.8615], [0.0, 0.0, 70.7024, 0.0, 70.1986, 0.0, 0.0, 4.1177, 0.0, 96.0797, 0.0, 0.0, 0.0, 39.7216, 4.1149, 60.1126, 0.0, 46.8373, 0.0, 0.0, 340.3394, 0.0], [36.2579, 20.2748, 17.2745, 40.6236, 13.6497, 20.46, 58.0616, 0.0, 0.0, 28.5143, 243.0958, 20.3295, 0.0, 14.9877, 19.3389, 119.0376, 0.0, 7.8364, 81.9279], [115.6323, 127.2908, 125.6228, 0.0, 50.699, 0.0, 35.5118, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 56.2999, 46.3968, 120.9481, 32.9476, 0.0, 41.8244, 0.0, 0.0, 151.4806], [18.6099, 18.5276, 10.5214, 0.0, 18.596, 0.0, 13.7046, 0.0, 13.509, 137.2283, 18.6078, 0.0, 18.7209, 32.5245, 141.6694, 18.5582, 0.0, 69.1337, 0.0, 462.8026, 0.0], [104.8427, 93.2932, 59.5468, 43.6945, 135.546, 0.0, 86.9996, 0.0, 39.2445, 150.4118, 0.0, 58.4959, 89.6621, 179.1442, 54.9351, 0.0, 0.0, 6.0934, 0.0, 56.0675, 0.0], [58.637, 144.1626, 0.0, 168.4198, 0.0, 0.0, 1018.5592, 82.5026], [92.5464, 61.2823, 14.9273, 11.9062, 92.7768, 3.0225, 1239.8782, 20.9524], [0.0, 107.4164, 16.006, 0.0, 91.6006, 0.0, 0.0, 0.0, 0.0, 24.966, 145.6178, 0.0, 89.6619, 0.0, 57.8793, 280.5466, 126.344, 0.0, 89.9336, 2.3938, 0.0, 732.8118], [125.1673, 74.6928, 44.175, 115.3342, 151.431, 25.956, 47.8733, 134.3393, 16.8429, 130.1737, 562.2962, 4.3575, 224.8169, 44.0572, 112.2149, 294.9487], [68.0411, 33.8884, 96.5583, 0.0, 85.8934, 36.72, 35.9159, 28.0149, 0.0, 35.5252, 303.4202, 123.9638, 0.0, 85.2048, 120.0663, 72.8209, 0.0, 210.3938, 46.3531, 0.0, 977.2463], [86.0656, 120.2656, 97.0806, 87.3452, 136.0216, 0.0, 85.8858, 0.0, 56.943, 264.469, 0.0, 95.2244, 31.707, 12.7917, 109.4954, 215.2964, 9.0774, 0.0, 50.728, 38.422, 0.0, 991.0173, 0.0], [67.2047, 55.1824, 45.4063, 37.1579, 68.5815, 38.508, 35.2716, 0.0, 0.0, 103.1557, 405.093, 9.2708, 38.7594, 58.0991, 572.8501, 76.1829, 0.0, 165.5767, 53.3653, 1239.3864, 76.0122], [43.0328, 56.3836, 55.0696, 56.9433, 78.046, 0.0, 23.3797, 14.1913, 23.4697, 387.1155, 37.9441, 43.5906, 66.4499, 509.8042, 50.7662, 0.0, 90.0833, 33.4893, 1649.0725, 73.66], [0.0, 43.8615, 510.7608, 0.0, 79.9938, 132.2816, 136.471, 477.9139, 113.5684, 0.0, 133.3292, 40.3322, 0.0, 2642.057, 91.9552], [105.3446, 81.6452, 84.0594, 39.9217, 49.6526, 9.96, 7.1198, 133.8246, 39.8003, 532.933, 0.0, 191.9718, 60.0881, 49.0889, 460.8666, 152.971, 41.7514, 218.624, 54.4292, 0.0, 2088.2677, 193.145], [212.4038, 127.6912, 104.1695, 202.7233, 121.5158, 0.0, 0.0, 44.7798, 0.0, 66.4762, 688.3385, 239.8488, 0.0, 127.2582, 165.0398, 471.4477, 195.8701, 39.884, 408.8913, 40.3322, 2211.2227, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

