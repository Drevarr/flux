created: 20230304223548000
creator: Drevarr
modified: 20230705163521196
modifier: drevarr
tags: ChartData
title: 202303042235_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["I Make Tools", "Tootsie Pop Bringer", "Lucky Leipreach\u00e1n", "Nimplet", "Govinda Ektar", "Lord Erin The Wise", "Aronorf Xideliesi", "Sofya De Nova", "Venomina The Fierce", "Tribal S", "Cat Wigglebooty", "Pinky Aldar", "Your Devoted Buffer", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Scrapper", "Scrapper", "Scrapper", "Renegade", "Weaver", "Firebrand", "Weaver", "Spellbreaker", "Druid", "Scrapper", "Scrapper", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 22.5736, 123.7418, 17.8483, 62.705, 179.304, 68.237, 12.418, 54.4856], [109.8906, 32.4786, 4.5936, 0.0, 0.0, 21.1915, 16.8606, 0.0, 0.0, 0.0, 12.8284, 214.5416, 0.0, 0.0, 22.4112, 20.111, 7.4848, 0.0, 137.268, 53.621, 78.624, 24.712], [426.0422, 17.0928, 0.0, 42.7593, 41.6167, 10.5264, 100.3563, 4.9853, 89.1851, 44.7944], [102.4082, 11.562, 9.5309, 64.4728, 175.9121, 82.8257, 31.7225, 223.293, 56.869, 53.914, 28.7742], [191.1187, 0.0, 342.5888, 0.0, 73.7009, 29.281, 0.0, 129.177, 88.537, 0.0], [277.5386, 0.0, 24.1344, 1.0756, 29.8509, 32.9535, 14.7186, 9.6012, 59.7564, 4.0595, 40.0198, 318.276, 0.0, 40.6694, 178.3964, 331.3583, 0.0], [365.689, 43.9339, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.0483, 372.3535, 0.0, 0.0, 115.71, 197.6793, 44.9907, 0.0, 194.928, 67.773, 2.534, 32.643], [0.0, 20.1024, 19.1428, 32.701, 19.5922, 60.7104, 33.6987, 63.6471, 8.6825, 12.808, 328.8852, 31.986, 30.4096, 189.4396, 429.5473, 191.3957, 34.952, 215.481, 25.201, 33.838, 22.2295], [175.0029, 32.8736, 38.1168, 38.5822, 37.6183, 24.2352, 0.0, 102.2571, 0.0, 59.5795, 374.5637, 28.188, 0.0, 103.0428, 288.7703, 90.2283, 408.456, 199.404, 84.882, 117.6115], [383.5354, 91.9934, 33.3216, 14.7693, 99.8267, 49.2966, 17.9456, 99.6435, 13.248, 63.1805, 471.2253, 23.328, 24.1536, 310.4276, 464.4458, 191.8893, 75.2863, 309.039, 142.767, 67.102, 21.6008], [566.0013, 33.1808, 62.3376, 13.3988, 0.3921, 175.2299, 76.194, 128.6307, 32.7974, 562.877, 3.288, 75.6051, 223.9496, 341.7687, 303.338, 67.2127, 381.765, 137.634, 26.908, 18.006], [105.1552, 887.6784, 1405.404, 676.6708, 292.197], [46.9479, 9.5166, 24.5417, 307.098, 106.628, 96.2643, 1104.6829, 42.714, 117.8522, 656.0148, 973.9639, 0.0], [761.3382, 86.7705, 56.6784, 0.0, 0.0, 64.7741, 76.9896, 43.8291, 76.2102, 106.5966, 775.3557, 54.216, 24.2624, 377.4988, 757.2383, 433.5398, 22.0342, 548.235, 292.465, 117.936, 32.8364]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

