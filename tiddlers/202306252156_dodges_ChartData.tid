created: 20230625215649000
creator: Drevarr
modified: 20230705163536863
modifier: drevarr
tags: ChartData
title: 202306252156_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Euljian", "Rina Of Theros", "Mammary Mission", "Artakama Nahid", "Bella Sassy", "Cedryn X", "Sygaldry Verdandi", "Tribal S", "Tika Fiery", "Sumatra Satyricon", "Pale Pam", "Grasszanine", "Xanvias Einzbern", "Miphest\u00f6", "Etchery Howls", "Primal Clone", "Belvyn Brightblade", "Elonith Requiem", "Raelyn Sunray", "Black Raspberry Pie", "Zayde Sunsabre", "High Sorcer Baradun", "Shaca Booey", "Koralia Danai", "Raziel Umbra", "Drevarr Moonwillow", "Blancooo Padreee", "Demon Staph", "Irish Mini Rev", "Jacob Pine", "Tootsy Pop Star", "Imalou", "Mister Jekyll", "Cerys Fireblade", "Crusader Siolith", "Lord Erin The Wise", "Rozaalyna", "Johosh The Mighty", "Momomeko", "Tegan Parker", "Ryvalia Fazebringer", "Mmathuss", "Arcanophage Farra", "Inedible Plant", "Newtype Khan", "Eibh\u00ebar", "Solus Sanctus", "Smol Gluvs", "Elon The Mender", "Mistwalker Cael"];
const professions = ["Willbender", "Scourge", "Scourge", "Tempest", "Firebrand", "Berserker", "Firebrand", "Druid", "Firebrand", "Soulbeast", "Druid", "Spellbreaker", "Berserker", "Tempest", "Druid", "Chronomancer", "Firebrand", "Reaper", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Scrapper", "Spellbreaker", "Druid", "Herald", "Reaper", "Reaper", "Firebrand", "Reaper", "Berserker", "Firebrand", "Weaver", "Reaper", "Berserker", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Vindicator", "Spellbreaker", "Chronomancer", "Firebrand", "Reaper", "Druid", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 9, 0, 6, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 5], [0, 0, 2, 2, 15, 1, 3, 3, 0, 0, 2, 3, 0], [1, 4, 0, 2, 2, 6, 0, 3, 0, 0, 1, 4, 7, 1], [0, 1, 1, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 2, 0, 0, 1, 3, 7, 0, 10], [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 1, 2, 0, 2, 0, 0, 0, 4, 5, 7, 2, 9], [0, 0, 0, 2, 16, 2, 1, 0, 0, 0, 3, 0, 0, 0, 0, 2, 1, 1, 3, 2, 6], [0, 0, 0, 3, 7, 0, 2, 2, 1, 3, 1, 4, 0, 2, 1, 0, 3, 7, 4, 1, 6], [0, 0, 2, 4, 6, 0, 2, 3, 0, 0, 3, 5, 9, 3, 10], [0, 0, 1, 1, 7, 1, 1, 0, 0, 1, 1, 7, 0, 3, 3, 0, 0, 2, 7, 6, 3, 11], [0, 0, 1, 1, 14, 1, 0, 1, 1, 5, 3, 4, 0, 1, 3, 4, 4, 4, 2, 6], [10, 3, 3, 8, 8, 5, 2, 4, 5, 1, 0, 4, 5], [2, 6, 0, 3, 4, 4, 0, 4, 6, 0, 0, 5, 9, 5, 3, 8], [0, 0, 2, 3, 13, 0, 2, 2, 0, 3, 1, 4, 0, 3, 2, 0, 3, 3, 9, 3, 9], [0, 0, 0, 0, 22, 2, 1, 4, 0, 1, 3, 2, 1, 1, 1, 2, 0, 1, 6, 5, 2, 8], [15, 2, 4, 1, 0, 2, 3, 7, 0, 3, 2, 0, 3, 2, 4, 1, 14], [0, 0, 0, 1, 8, 1, 2, 4, 0, 4, 5, 3, 1, 3, 2, 1, 0, 3, 11, 7, 4, 4], [2, 1, 3, 3, 41, 7, 10], [5, 0, 5, 5, 2, 0, 5, 3, 0, 1, 3, 7, 9, 4, 18], [9, 0, 4, 4, 2, 5, 7, 13, 2, 22], [0, 2, 1, 1, 18, 5, 3, 6, 2, 3, 1, 2, 1, 2, 2, 0, 0, 4, 5, 4, 2, 6], [1, 0, 2, 4, 21, 5, 2, 1, 2, 2, 2, 2, 2, 4, 0, 2, 3, 4, 1, 10], [1, 0, 3, 0, 16, 4, 3, 7, 4, 4, 1, 3, 0, 4, 4, 1, 2, 5, 0, 8], [1, 2, 5, 40, 8, 15], [1, 0, 1, 2, 13, 0, 2, 5, 0, 3, 4, 1, 1, 2, 4, 0, 3, 5, 7, 3, 17], [1, 7, 0, 2, 18, 4, 2, 0, 0, 3, 5, 4, 0, 1, 4, 1, 5, 4, 8, 0, 9], [0, 2, 2, 2, 17, 1, 10, 6, 0, 3, 0, 3, 0, 1, 2, 1, 0, 4, 5, 6, 4, 22], [1, 0, 3, 1, 22, 1, 5, 3, 0, 3, 5, 3, 0, 2, 3, 1, 4, 9, 4, 0, 22], [1, 0, 2, 1, 16, 5, 4, 4, 1, 3, 4, 7, 0, 2, 4, 1, 4, 7, 7, 3, 19], [2, 0, 5, 3, 26, 3, 7, 2, 3, 4, 2, 4, 0, 1, 1, 0, 0, 6, 8, 3, 17], [10, 9, 3, 7, 9, 9, 1, 4, 1, 2, 1, 6, 0, 10, 4, 25], [0, 1, 5, 5, 26, 2, 3, 9, 0, 6, 7, 8, 0, 1, 1, 1, 1, 5, 6, 3, 12], [2, 1, 4, 4, 41, 11, 4, 13, 5, 9, 7, 2], [0, 0, 3, 18, 3, 10, 1, 7, 1, 9, 0, 3, 1, 0, 0, 5, 7, 13, 5, 20], [0, 1, 2, 3, 19, 1, 2, 9, 2, 5, 6, 6, 1, 4, 4, 1, 0, 6, 7, 7, 2, 20], [0, 2, 2, 2, 23, 4, 5, 7, 0, 4, 7, 5, 0, 2, 2, 0, 1, 5, 7, 9, 2, 23], [2, 3, 1, 4, 29, 5, 7, 6, 3, 5, 6, 5, 4, 3, 2, 0, 5, 2, 17, 3, 5], [1, 4, 7, 4, 37, 6, 5, 7, 3, 3, 6, 4, 0, 2, 4, 2, 0, 10, 6, 3, 10], [0, 0, 1, 1, 31, 4, 2, 7, 0, 1, 6, 11, 0, 4, 3, 0, 0, 5, 12, 6, 6, 24], [0, 4, 3, 33, 2, 8, 6, 0, 6, 7, 3, 1, 2, 4, 0, 5, 10, 12, 2, 17], [3, 1, 3, 1, 34, 3, 9, 8, 2, 4, 3, 3, 0, 2, 1, 0, 2, 2, 9, 11, 1, 24], [2, 2, 9, 5, 15, 3, 7, 6, 4, 4, 2, 6, 1, 4, 4, 1, 1, 4, 10, 14, 3, 26], [1, 3, 3, 5, 40, 5, 7, 10, 2, 9, 9, 11, 1, 4, 3, 4, 1, 4, 9, 8, 3, 8], [2, 3, 6, 4, 26, 5, 14, 8, 4, 5, 6, 8, 2, 2, 6, 4, 2, 3, 9, 8, 5, 29], [1, 4, 4, 1, 34, 4, 12, 8, 2, 8, 10, 13, 3, 3, 5, 6, 10, 7, 6, 25], [6, 7, 8, 4, 30, 12, 25, 6, 4, 6, 6, 4, 1, 2, 3, 0, 1, 1, 4, 17, 4, 24], [4, 4, 7, 48, 9, 13, 6, 4, 7, 6, 7, 0, 5, 3, 1, 1, 3, 7, 12, 3, 26], [4, 3, 6, 0, 56, 10, 17, 7, 5, 5, 5, 4, 1, 1, 6, 2, 2, 4, 7, 12, 6, 21], [5, 2, 8, 4, 50, 12, 14, 9, 5, 7, 8, 11, 3, 4, 5, 0, 3, 5, 1, 12, 3, 32], [5, 10, 15, 8, 46, 14, 26, 13, 2, 8, 12, 9, 3, 2, 3, 1, 4, 7, 10, 3, 39], [4, 13, 11, 5, 59, 11, 28, 8, 4, 10, 9, 15, 2, 5, 5, 2, 3, 6, 10, 6, 4, 32]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

