created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Mistwalker Cael", "Latedoctor", "Sakis Ranger", "Gabe Malhorn", "Arriasa", "Crusader Siolith", "Aronorf Xideliesi", "High Sorcer Baradun", "Kary\u00edna", "Venomina The Siren", "Chocolate Teapot", "Tegan Parker", "Primal Clone", "Black Raspberry Pie", "Klenga", "Tika Fiery", "Rahani Sunray", "Sygaldry Verdandi", "Newtype Khan", "Koralia Danai", "Artakama Nahid", "Xanvias Einzbern", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Reaper", "Vindicator", "Reaper", "Druid", "Firebrand", "Druid", "Willbender", "Firebrand", "Weaver", "Vindicator", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[575, 249, 2102, 987, 355, 413, 496, 985, 6305, 3102, 7573, 7613, 315, 169, 800, 259], [639, 2000, 1665, 5851, 2102, 460, 267, 452, 967, 630, 306, 17918, 1076, 282, 287, 2459], [728, 261, 3345, 2071, 482, 1119, 743, 1090, 389, 723, 21257, 1177, 1343, 241, 1269, 246], [755, 336, 2135, 806, 354, 463, 653, 563, 650, 461, 3285, 430, 462, 971, 1649], [5732, 4697, 1085, 1198, 997, 348, 445, 367, 8213, 3995, 543, 1120, 3201, 162, 3272], [653, 15202, 1848, 1288, 352, 251, 431, 330, 8757, 8714, 3476, 1150, 343, 170, 4314], [3354, 14340, 4707, 2814, 6585, 636, 268, 375, 5598, 3396, 2270, 430, 4893, 4451, 257], [524, 743, 576, 43339, 3202, 499, 429, 330, 2789, 4424, 51228, 5669, 628, 132, 9528], [20406, 40266, 3678, 2008, 1767, 1025, 2376, 1115, 10164, 449, 33131, 6827, 492, 5869, 1064], [4904, 13789, 2050, 1163, 534, 469, 347, 381, 2611, 1206, 21732, 371, 284, 252], [12805, 4022, 3586, 311, 1383, 543, 852, 9895, 18619, 9591, 229, 373, 1285], [370, 739, 7651, 2188, 2834, 383, 695, 20001, 0, 0, 0, 1332], [521, 2525, 334, 838, 322, 320, 4748, 385, 39787, 1086, 197, 2739], [963, 297, 814, 3851, 1499, 1602, 468, 1493, 295, 639, 5121, 19198, 11109, 237, 173, 4818], [662, 1059, 318, 510, 574, 921, 2720, 407, 40349, 218, 291, 214, 9357, 233], [417, 646, 195, 2049, 786, 2141, 308, 2796, 988, 5179, 394, 612], [917, 696, 270, 4185, 1416, 11122, 335, 295, 277, 361, 309, 3551, 1088, 310, 190, 8502, 404], [739, 750, 1061, 1282, 273, 291, 490, 333, 6293, 0, 0, 1054, 265, 142, 0, 0], [1473, 659, 270, 2157, 265, 483, 833, 307, 491, 196, 1021, 337, 228, 7900], [517, 621, 223, 2038, 1225, 2144, 597, 272, 299, 5644, 313, 660, 1660, 189, 165, 3080], [351, 764, 388, 1986, 736, 297, 249, 437, 431, 6096, 319, 538, 7688, 280, 193, 3804], [373, 356, 347, 2769, 1119, 415, 336, 455, 334, 416, 321, 418, 1099, 226, 167, 1031, 241], [547, 626, 9165, 600, 2163, 242, 204, 326, 396, 288, 297, 22430, 979, 255, 123, 2921], [382, 503, 182, 2032, 1008, 472, 342, 432, 188, 210, 317, 373, 994, 229, 131, 431, 251], [3062, 3677, 4751, 3304, 225, 246, 246, 306, 198, 3355, 2878, 995, 358, 215, 161, 329, 197]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

