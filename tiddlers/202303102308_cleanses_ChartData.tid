created: 20230310230833000
creator: Drevarr
modified: 20230705163521567
modifier: drevarr
tags: ChartData
title: 202303102308_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["R\u00fana Bierdna", "Rayge Storm", "Riann Swordbreak", "Black Raspberry Pie", "Cat Wigglebooty", "Primal Clone", "Zefirokai", "Alatreon", "High Sorcer Baradun", "\u00c1rkantor", "Venomina The Siren", "Tegan Parker", "Mac Chiato", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Spellbreaker", "Tempest", "Spellbreaker", "Chronomancer", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Tempest", "Vindicator", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2545, 0.2381, 0.2227, 0.1029, 0.5385, 0.1725, 0.1197, 0.3093, 0.0549, 0.614, 0.4483, 0.0, 0.037, 0.7895, 0.1154, 0.0, 0.1364], [0.6591, 0.32, 0.0615, 0.3403], [0.4091, 0.1968, 0.1091, 0.2171, 0.0923, 0.2072, 0.0714, 0.1456, 0.2062, 0.0549, 0.193, 0.2586, 0.1771, 0.1852, 0.1895, 0.0513, 0.1739, 0.0909, 0.0, 0.2716, 0.0645, 0.1288, 0.2166, 0.1512, 0.0769, 0.1207, 0.2167, 0.1196, 0.1373, 0.2198, 0.4595], [0.2273, 0.2476, 0.2045, 0.2057, 0.6154, 0.1757, 0.0286, 0.2265, 0.6289, 0.022, 0.3158, 0.431, 0.2708, 0.2778, 0.1263, 0.0128, 0.0, 0.0227, 0.2917, 0.3827, 0.0, 0.411, 0.2293, 0.2674, 0.3776, 0.8621, 0.2333, 0.1196, 0.0, 0.0, 0.0], [0.3266, 0.0571, 0.1489, 0.7423, 0.1868, 0.5789, 0.3103, 0.7917, 0.1481, 0.3789, 0.1026, 0.0, 0.1591, 0.2346, 0.0859, 0.3694, 0.7558, 0.3147, 0.7414, 0.1083, 0.0], [0.2818, 0.1397, 0.2909, 0.04, 0.3692, 0.2472, 0.0143, 0.0712, 0.5773, 0.3626, 0.4912, 0.5172, 0.2188, 0.0185, 0.1895, 0.141, 0.2174, 0.0, 0.0417, 0.284, 0.0, 0.5828, 0.3631, 0.6628, 0.2098, 0.5862, 0.3333, 0.1196, 0.0, 0.0549, 0.2635], [0.3636, 0.4857, 0.2409, 0.3371, 0.3538, 0.4072, 0.0571, 0.1877, 0.4948, 0.0879, 1.0, 0.931, 0.4375, 0.0185, 0.6421, 0.0897, 0.0, 0.6136, 0.0, 0.5926, 0.0, 0.5092, 0.465, 0.4767, 0.1888, 0.4138, 0.1583], [1.2909, 1.1968, 0.9227, 0.8229, 1.9385, 0.5751], [0.2909, 0.6286, 0.2045, 0.3371, 0.7231, 0.6564, 0.0429, 0.2718, 0.1031, 0.0, 0.2456, 0.6458, 0.0556, 0.5263, 0.0769, 0.0, 0.1136, 0.9259, 0.1104, 0.0, 0.0, 0.275, 0.2391, 0.0784, 0.1319, 0.7568], [0.4818, 0.4984, 0.4682, 0.3314, 1.0154, 0.5548, 0.0, 0.1715, 0.6598, 0.1429, 0.4561, 1.1034, 0.2917, 0.2037, 0.3579, 0.1282, 0.0, 0.1591, 0.3333, 0.8642, 0.2903, 0.4049, 0.2102, 0.7209, 0.1748, 0.6379, 0.1167, 0.7391, 0.8824, 0.5275, 0.6689], [0.7727, 0.8857, 0.6636, 0.48, 0.9692, 0.2564, 0.0, 0.3722, 0.4948, 0.1978, 1.1053, 0.7069, 0.6667, 0.1296, 0.8105, 0.0256, 0.1304, 0.25, 0.0833, 1.4074, 0.0323, 0.6319, 0.3822, 1.1744, 0.2797, 1.2931, 0.0917, 0.5109, 0.8824, 0.1758, 0.7027], [1.3364, 0.927, 0.4364, 0.6114, 1.3077, 1.1908, 0.2286, 0.2718, 1.299, 0.6374, 1.2632, 1.3793, 1.5312, 0.5741, 1.1053, 0.3846, 0.2174, 1.25, 1.0, 1.5432, 0.0323, 0.8405, 1.0, 1.6395, 0.7343, 1.4655, 0.55, 1.0, 0.7451, 0.6813, 1.5473], [0.0032, 0.9364, 1.0229, 1.5077, 1.5725, 0.3, 0.7282, 1.5052, 0.7253, 1.1053, 1.2586, 1.7188, 0.2593, 1.1263, 0.5641, 1.3409, 0.0417, 2.2593, 0.0, 0.9325, 1.2803, 2.0233, 0.7622, 1.5517, 0.3, 0.8696, 1.6471, 0.7473, 1.6554], [0.8545, 0.9556, 0.9273, 0.8457, 1.2, 1.4315, 0.3571, 0.6343, 1.4021, 0.7363, 1.1579, 0.7586, 1.7396, 0.8333, 1.2316, 1.0, 0.6087, 1.0227, 0.5833, 1.7407, 0.0645, 0.9509, 1.1656, 1.3488, 0.9371, 1.5, 0.9083, 0.9674, 1.6863, 0.956, 1.5541], [0.8545, 1.1429, 0.8591, 0.9714, 1.1692, 1.581, 0.0714, 0.4887, 1.3608, 0.7582, 1.4386, 1.7759, 1.5625, 0.7037, 1.5053, 0.5641, 0.3913, 0.8864, 0.4167, 1.2469, 0.0323, 1.0552, 1.2611, 1.3837, 0.7413, 1.569, 0.75, 1.1304, 1.4118, 0.7033, 1.777]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

