created: 20230626012458000
creator: Drevarr
modified: 20230705163538112
modifier: drevarr
tags: ChartData
title: 202306260124_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Mammary Mission", "Proteccdebussy", "Night Of The Wabbit", "Smol Daddy Tika", "Be\u00eb", "No Reserv\u00e9", "Shaca Booey", "Lord Erin The Wise", "Naosiva", "Cyclotechnist Farra", "Versimon", "Smol Daddy Tika", "Tribal S", "Momomeko", "Johosh The Mighty", "Venomina The Siren", "Kary\u00edna", "Elon The Mender", "Rozaalyna", "Charr Surethang", "Be\u00eb", "Elon The Archmagus", "Zayde Sunsabre", "Smol Gluvs", "Regis Hawkesburne", "Mememonoko", "Elonith Requiem", "Tootsy Pop Star", "Miphest\u00f6", "Belvyn Brightblade", "Arcanophage Farra", "My Birthday Girl", "Blanco Padre Guard", "Kira Dragonblaze", "Crusader Siolith", "Arriasa", "Newtype Khan", "Morton Saltbringer", "Xanvias Einzbern", "Artakama Nahid", "Bender Ale Devourer", "Drevarr Moonwillow", "Raelyn Sunray", "Tegan Parker", "Koralia Danai", "Bella Sassy", "Sygaldry Verdandi", "Solus Sanctus", "Mistwalker Cael", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer"];
const professions = ["Scourge", "Firebrand", "Vindicator", "Spellbreaker", "Reaper", "Vindicator", "Berserker", "Weaver", "Catalyst", "Scrapper", "Chronomancer", "Berserker", "Druid", "Chronomancer", "Berserker", "Tempest", "Vindicator", "Druid", "Scourge", "Berserker", "Scourge", "Tempest", "Spellbreaker", "Scourge", "Berserker", "Vindicator", "Reaper", "Scourge", "Tempest", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Dragonhunter", "Firebrand", "Druid", "Spellbreaker", "Chronomancer", "Berserker", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 4, 4, 1, 2, 0, 1, 5, 3, 3, 4, 0], [4, 7, 4, 7, 0, 1, 5], [8, 2, 3, 0, 2, 3, 2, 3, 5, 0], [2, 0, 2, 3, 5, 7, 8, 3], [2, 6, 9, 14], [0, 5, 8, 8, 5, 5], [0, 2, 4, 13, 4, 0, 0, 3, 0, 0, 2, 3], [0, 5, 6, 8, 2, 4, 1, 3, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 16, 0, 4, 3, 4, 0, 1, 1], [3, 0, 0, 5, 6, 9, 5, 3], [2, 0, 4, 8, 17, 5, 1], [0, 3, 5, 7, 7, 6, 8, 3], [1, 5, 6, 4, 2, 1, 5, 0, 3, 1, 1, 4, 5, 1], [4, 0, 4, 0, 3, 2, 10, 2, 14, 0], [1, 2, 3, 8, 3, 4, 5, 1, 6, 0, 2, 5], [1, 2, 3, 8, 6, 2, 6, 4, 0, 0, 4, 1, 2, 0, 0, 1], [0, 3, 2, 7, 4, 3, 2, 1, 1, 0, 4, 3, 3, 1, 1, 6], [1, 8, 2, 14, 6, 2, 7, 3], [3, 6, 2, 4, 5, 0, 2, 0, 5, 8, 2, 6], [0, 8, 4, 7, 3, 2, 1, 1, 5, 0, 3, 4, 3, 1, 1, 2], [8, 4, 5, 5, 2, 0, 3, 5, 5, 2, 3, 4], [5, 0, 5, 6, 7, 11, 6, 6], [0, 2, 3, 8, 9, 4, 2, 2, 2, 0, 2, 1, 3, 3, 2, 5], [5, 6, 3, 2, 2, 0, 8, 2, 5, 8, 6, 3], [1, 2, 2, 5, 3, 3, 7, 4, 10, 0, 3, 2, 4, 1, 3, 1], [0, 6, 5, 28, 10, 3], [0, 4, 8, 15, 5, 0, 2, 2, 2, 5, 5, 4], [3, 4, 12, 2, 7, 0, 5, 6, 2, 3, 4, 4], [0, 4, 5, 3, 5, 9, 7, 1, 4, 0, 8, 0, 2, 3, 4, 1], [2, 5, 7, 24, 7, 12], [1, 5, 6, 17, 9, 7, 11, 3], [1, 7, 2, 8, 4, 6, 3, 5, 2, 0, 3, 3, 7, 8, 4, 1], [4, 4, 3, 14, 3, 10, 2, 2, 4, 0, 2, 3, 2, 6, 6, 1], [2, 19, 9, 21, 6, 9], [2, 5, 4, 10, 10, 10, 5, 1, 2, 0, 4, 6, 2, 3, 2, 5], [1, 6, 5, 15, 5, 4, 7, 2, 2, 2, 3, 3, 9, 5, 3], [0, 4, 5, 9, 6, 3, 9, 2, 3, 0, 3, 4, 7, 6, 5, 8], [0, 4, 6, 11, 6, 8, 3, 4, 8, 0, 5, 6, 4, 4, 5, 2], [0, 7, 3, 14, 3, 7, 6, 8, 6, 0, 6, 3, 4, 10, 7], [1, 5, 8, 13, 7, 6, 9, 1, 9, 8, 2, 5, 10, 4, 5], [0, 5, 4, 13, 6, 4, 11, 1, 10, 0, 6, 2, 12, 12, 6, 9], [1, 3, 10, 23, 7, 8, 7, 3, 8, 0, 9, 3, 7, 5, 11, 5], [2, 7, 10, 12, 8, 10, 8, 6, 3, 1, 8, 4, 5, 12, 9, 7], [1, 7, 11, 11, 10, 9, 9, 10, 10, 0, 4, 9, 8, 3, 7, 4], [0, 11, 9, 18, 7, 11, 8, 6, 6, 3, 6, 7, 11, 8, 6], [2, 8, 12, 21, 7, 6, 10, 8, 6, 3, 11, 6, 11, 9, 6], [2, 6, 7, 20, 9, 12, 10, 2, 7, 11, 6, 10, 10, 8, 6], [1, 8, 8, 13, 9, 11, 10, 10, 9, 0, 8, 6, 8, 10, 12, 7], [0, 10, 4, 15, 25, 9, 3, 18, 3, 0, 1, 11, 8, 11, 23, 4], [0, 3, 9, 12, 36, 11, 7, 16, 31, 17, 8, 23, 3, 6, 7], [0, 16, 18, 25, 68, 8, 6, 6, 20, 8, 5, 2, 20, 7, 0], [0, 14, 12, 21, 36, 11, 19, 25, 8, 0, 20, 5, 37, 9, 10, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

