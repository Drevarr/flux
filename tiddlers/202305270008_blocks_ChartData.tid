created: 20230527000807000
creator: Drevarr
modified: 20230705163531633
modifier: drevarr
tags: ChartData
title: 202305270008_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Maw Rev", "Hauzzy", "Zefirokai", "Primo Pobre", "Cedryn X", "Sofya De Nova", "Arriasa", "Smol Gluvs", "Oo Dads Mad", "Artakama Nahid", "Lord Erin The Wise", "Kary\u00edna", "High Sorcer Baradun", "Sumatra Satyricon", "Duke Silvver", "Gavann", "Cyclotechnist Farra", "Legacy Of Mathus", "Blanco Padre Guard", "Demon Sekhmet", "Miphest\u00f6", "Sub Train", "Melli Dragonswrath", "Kosair", "Daddys Lil Orchid", "The Fancy Cheese", "Smol Bee", "Venomina The Siren", "Elonith Primal", "Zaedy Sagemist", "Johosh Of The North", "Chrozz", "Air One Com", "Rozaalyna", "Tika Fiery", "Panther B Me", "Tegan Parker", "Primal Clone", "Mistwalker Cael", "Lucas Ryn", "Aronorf Xideliesi", "Newtype Khan", "Black Raspberry Pie", "Xanvias Einzbern", "Drevarr Moonwillow", "Eibh\u00ebar", "Solus Sanctus", "Koralia Danai", "Bella Sassy", "Ryvalia Fazebringer"];
const professions = ["Renegade", "Berserker", "Tempest", "Firebrand", "Berserker", "Weaver", "Druid", "Scourge", "Spellbreaker", "Tempest", "Weaver", "Vindicator", "Weaver", "Soulbeast", "Vindicator", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Dragonhunter", "Vindicator", "Scrapper", "Vindicator", "Tempest", "Tempest", "Vindicator", "Tempest", "Willbender", "Firebrand", "Scourge", "Firebrand", "Scourge", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Berserker", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 3, 7, 3, 2, 0, 2, 0, 2, 13, 0, 0, 0, 1], [21, 10, 0, 0, 0, 16, 1, 8, 4, 0, 1], [21, 12, 0, 0, 0, 7, 3, 17, 10, 0, 2], [6, 2, 12, 10, 2, 0, 5, 0, 0, 7, 14, 1, 2, 8, 4], [0, 11, 0, 0, 0, 13, 2, 2, 3, 0, 2, 0, 0, 3, 3, 1, 0, 3, 1, 3, 17, 0, 2, 3, 5], [20, 10, 0, 0, 0, 17, 2, 5, 3, 0, 1, 4, 0, 8, 0, 1, 0, 0, 1, 0, 0, 1, 6, 0, 3, 1, 0], [24, 18, 0, 0, 30, 1, 5, 0, 2, 7, 1], [21, 10, 1, 0, 0, 11, 3, 8, 4, 0, 1, 6, 1, 3, 0, 4, 2, 0, 1, 0, 1, 2, 8, 0, 4], [20, 10, 1, 15, 1, 4, 5, 0, 3, 3, 2, 5, 1, 3, 3, 0, 2, 0, 3, 11, 0], [19, 9, 0, 0, 0, 19, 1, 7, 3, 0, 1, 4, 2, 4, 2, 1, 0, 4, 1, 5, 15, 0, 2], [29, 22, 1, 0, 0, 30, 3, 8, 5, 0, 1], [9, 10, 0, 0, 0, 22, 1, 12, 4, 0, 0, 0, 0, 2, 0, 4, 3, 0, 2, 0, 0, 5, 19, 0, 1, 4, 2], [12, 14, 0, 0, 21, 2, 4, 8, 6, 3, 0, 7, 0, 4, 1, 0, 5, 1, 3, 6, 0, 2, 1], [24, 3, 0, 0, 0, 35, 0, 2, 0, 0, 2, 4, 1, 6, 0, 3, 2, 0, 0, 1, 7, 0, 2, 4, 4], [20, 17, 1, 0, 0, 18, 1, 5, 0, 0, 1, 5, 0, 5, 1, 4, 3, 0, 7, 1, 0, 5, 12, 0, 1, 4, 0], [29, 24, 4, 41, 10, 11, 0, 4, 7, 1], [23, 10, 1, 0, 28, 4, 7, 4, 0, 3, 4, 10, 5, 5, 0, 7, 0, 0, 2, 12, 0, 3, 2, 2], [30, 8, 3, 0, 0, 24, 1, 9, 6, 0, 1, 6, 4, 5, 1, 7, 4, 0, 2, 1, 3, 10, 1, 4, 2, 2], [23, 14, 1, 0, 29, 3, 5, 4, 0, 2, 7, 3, 6, 1, 6, 1, 1, 5, 0, 4, 12, 1, 3, 5], [22, 15, 0, 0, 0, 39, 3, 9, 6, 0, 1, 9, 1, 6, 0, 9, 4, 0, 1, 0, 1, 10, 0, 2], [25, 13, 0, 36, 2, 9, 11, 0, 2, 6, 1, 7, 0, 5, 1, 5, 0, 2, 4, 9], [26, 19, 1, 0, 0, 33, 0, 23, 6, 0, 2, 2, 2, 9, 0, 5, 4, 1, 6, 0], [19, 14, 0, 0, 2, 44, 1, 7, 6, 0, 0, 8, 0, 10, 0, 9, 2, 0, 3, 0, 0, 5, 9, 0, 1, 0, 1], [22, 20, 1, 0, 1, 48, 2, 16, 8, 0, 1, 6, 1, 11, 1, 5], [30, 12, 2, 0, 1, 33, 2, 4, 9, 0, 0, 4, 2, 8, 0, 2, 1, 0, 3, 14, 0, 3, 7, 7], [27, 22, 1, 0, 0, 35, 1, 3, 5, 3, 4, 1, 10, 0, 11, 7, 0, 6, 1, 2, 7, 0, 1, 1, 2], [29, 9, 0, 0, 0, 35, 2, 13, 5, 1, 1, 9, 1, 8, 7, 5, 0, 2, 0, 1, 1, 17, 3, 2, 2], [21, 19, 1, 0, 22, 0, 8, 7, 0, 3, 6, 0, 8, 8, 5, 0, 7, 1, 5, 23, 0, 3, 1, 5], [21, 19, 0, 0, 38, 3, 10, 5, 0, 2, 4, 2, 11, 0, 7, 5, 0, 1, 0, 0, 3, 14, 0, 4, 2, 3], [35, 19, 0, 1, 58, 4, 16, 6, 0, 4, 11, 1, 1], [25, 16, 1, 0, 0, 34, 1, 9, 10, 4, 7, 2, 11, 4, 3, 0, 2, 0, 0, 1, 18, 1, 4, 6, 1], [27, 10, 0, 1, 1, 29, 3, 14, 14, 0, 2, 3, 2, 7, 3, 2, 0, 5, 0, 1, 6, 23, 1, 3, 5, 2], [27, 16, 0, 0, 1, 38, 5, 27, 8, 0, 8, 4, 1, 6, 2, 8, 0, 11, 1, 2, 6, 16, 1, 4, 4, 1], [29, 26, 0, 0, 62, 3, 14, 8, 0, 1, 11, 1, 8, 0, 7, 6, 0, 0, 7, 21], [29, 19, 1, 0, 0, 38, 3, 18, 10, 0, 5, 6, 2, 11, 0, 8, 2, 1, 7, 1, 1, 6, 16, 1, 5, 8, 6], [31, 28, 2, 1, 0, 39, 2, 15, 13, 0, 1, 8, 1, 9, 0, 7, 5, 0, 9, 1, 1, 7, 20, 1, 5, 3, 2], [45, 22, 0, 0, 0, 41, 2, 15, 10, 0, 8, 10, 2, 11, 0, 5, 2, 0, 9, 0, 6, 21, 0, 4, 4, 2], [35, 17, 0, 1, 0, 47, 4, 18, 9, 0, 3, 8, 1, 15, 1, 4, 1, 0, 7, 1, 0, 9, 28, 0, 4, 2, 4], [34, 26, 0, 0, 1, 49, 4, 15, 6, 0, 4, 6, 2, 13, 0, 9, 5, 0, 4, 1, 0, 8, 22, 1, 5, 4, 3], [35, 21, 1, 0, 0, 55, 6, 19, 10, 0, 5, 12, 1, 15, 1, 6, 3, 0, 7, 1, 9, 16, 3, 3, 3, 9], [34, 28, 3, 2, 33, 4, 21, 11, 0, 7, 7, 1, 16, 9, 9, 1, 14, 0, 6, 21, 3, 7, 5], [47, 32, 1, 0, 0, 60, 2, 18, 10, 0, 1, 6, 3, 12, 7, 6, 0, 10, 0, 0, 4, 18, 0, 4, 9, 6], [43, 24, 2, 0, 0, 60, 1, 15, 9, 0, 1, 9, 2, 25, 6, 3, 0, 18, 1, 0, 6, 17, 0, 4, 5, 6], [46, 28, 1, 0, 0, 49, 4, 20, 13, 0, 6, 10, 2, 15, 0, 9, 4, 0, 7, 0, 0, 8, 17, 1, 5, 7, 5], [35, 39, 1, 1, 1, 58, 5, 19, 13, 0, 2, 10, 2, 16, 0, 17, 4, 0, 8, 1, 0, 8, 20, 1, 2, 8, 5], [43, 28, 1, 1, 1, 65, 4, 21, 18, 0, 2, 10, 3, 16, 7, 3, 0, 7, 0, 0, 9, 25, 1, 2, 7, 5], [49, 29, 1, 0, 0, 58, 2, 22, 16, 0, 6, 7, 2, 14, 9, 4, 0, 10, 1, 2, 10, 29, 1, 6, 3, 5], [44, 31, 0, 0, 1, 63, 4, 15, 9, 0, 2, 9, 3, 21, 8, 5, 2, 11, 1, 1, 8, 27, 3, 5, 8, 7], [35, 32, 1, 0, 0, 58, 8, 21, 9, 1, 4, 14, 4, 12, 1, 10, 6, 1, 12, 1, 3, 10, 34, 4, 3, 7, 5], [47, 42, 1, 1, 0, 53, 5, 24, 13, 0, 5, 17, 3, 12, 1, 9, 5, 0, 7, 1, 3, 5, 35, 0, 7, 12, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

