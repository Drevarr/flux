created: 20230625214748000
creator: Drevarr
modified: 20230705163536193
modifier: drevarr
tags: ChartData
title: 202306252147_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Drevarr Moonwillow", "Traidoruns Maximus", "Tika Fiery", "Bellatrix Astra", "Aronorf Xideliesi", "Gestern Yesteryear", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[176.1178, 5.3328, 12.5894, 0.0, 84.1714, 55.9796, 133.0722, 60.5341, 35.2061, 0.0, 0.0, 0.0, 102.661, 0.0], [123.1776, 46.7347, 137.687, 22.2048, 155.2354, 154.8547, 286.9675, 32.5953, 15.8323, 0.0, 24.3576, 11.011, 233.9155, 5.7164, 11.3445], [362.7187, 67.1933, 162.1488, 0.9936, 239.0909, 261.514, 505.2841, 244.0538, 195.8208], [442.9152, 121.0546, 89.64, 16.956, 392.4312, 216.1341, 363.4271, 265.9666, 27.2899, 0.0, 0.0, 49.247, 320.7295, 28.9476, 0.0], [347.3434, 108.6922, 6.6931, 0.0, 385.7986, 233.8554, 413.8579, 304.314, 164.9894, 0.0, 231.0912, 0.0, 339.677, 29.6932, 0.0], [302.0909, 103.5533, 68.2858, 93.7656, 379.4818, 318.156, 516.997, 408.1259, 118.9507, 104.0349, 72.5832, 65.6062, 544.999, 2.4922], [475.7626, 131.1384, 150.0374, 11.4696, 413.7504, 400.6348, 718.0695, 444.5559, 186.5506, 36.9679, 95.7168, 28.9916, 469.5535, 21.7984, 23.4159], [549.8438, 125.4178, 168.9216, 32.616, 617.4672, 446.8428, 780.864, 531.9332, 257.0669, 11.8215, 111.6288, 26.9588, 577.382, 16.9592, 104.4111], [527.305, 142.4342, 261.191, 12.6792, 436.0171, 379.4354, 759.3902, 663.9578, 199.3622, 0.0, 243.0864, 0.0, 726.206, 35.7605, 15.8875], [417.7555, 166.5288, 166.9296, 78.5808, 659.6318, 355.9174, 749.6294, 640.6755, 362.581, 140.9439, 222.2784, 83.8046, 955.643, 12.6024, 193.8433]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

