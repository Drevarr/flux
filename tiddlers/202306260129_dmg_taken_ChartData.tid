created: 20230626012920000
creator: Drevarr
modified: 20230705163538481
modifier: drevarr
tags: ChartData
title: 202306260129_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Mighty", "Reaper Madnesss", "Tribal S", "Traidoruns Maximus", "Drevarr Moonwillow", "Sl\u00e4ngin", "Tootsie Pop Rocks", "Alarics Clone", "Astraea Lumena", "Nbezerkzz", "Xanvias", "Vipares", "Palm Sauce", "Alarics Bane", "Vesnan", "Fablegodx", "Synomi\u00f1 Spyce", "Ygyn", "Charr Surethang", "Kosair", "Toushay", "Mammary Mission", "Necrotic Windrunner", "High Sorcer Baradun", "N\u00e8yp\u00e4", "Sofya De Nova", "Imalou", "Stark Wall", "Free H\u00e4nd", "Grim Grooblin", "Ylsgavor", "Kosair", "Kosair", "Free H\u00e4nd", "Kosair"];
const professions = ["Berserker", "Reaper", "Druid", "Firebrand", "Scrapper", "Berserker", "Scrapper", "Chronomancer", "Firebrand", "Scourge", "Reaper", "Renegade", "Vindicator", "Reaper", "Scourge", "Berserker", "Scourge", "Firebrand", "Berserker", "Firebrand", "Reaper", "Scourge", "Scourge", "Weaver", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Druid", "Guardian", "Dragonhunter", "Renegade", "Willbender"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[110.9118, 4687.7917, 5818.2727, 472.9815, 0.0, 3668.6452, 421.7059, 415.8125, 25.55, 2306.4894, 554.4762, 9.6538, 2872.6667, 605.0606, 958.0, 331.3306, 1934.2667, 467.871, 1337.5385, 1360.4019, 262.1538, 242.5556], [59.4194, 16451.6667, 8158.7143, 503.2545, 15.8936, 2842.8039, 230.2581, 251.1158, 15.8158, 2915.9677, 770.3889, 237.5484, 931.65, 569.0784, 4464.625, 386.6102, 2002.1884, 503.6833, 1141.4211], [70.2059, 12610.4286, 4100.4783, 155.0, 0.0, 2410.5227, 526.8788, 467.6042, 5.0732, 2219.1875, 10.7647, 180.619, 3340.8333, 20603.75, 531.1562, 214.4701, 1886.7215, 197.8644, 1257.3243, 1041.4915, 109.6296, 27.76], [154.4412, 2385.0357, 5982.8462, 159.1296, 3.0444, 891.6452, 272.871, 445.7684, 67.1463, 2189.4167, 548.0667, 0.0, 658.3968, 1377.8846, 6514.3077, 206.1969, 1867.0862, 355.6034, 2024.2143, 900.6571, 285.7222, 11.2], [225.4865, 1265.125, 3855.0741, 241.5294, 5.4889, 920.8814, 148.7059, 334.2947, 14.6667, 2339.8548, 793.0476, 13.7778, 619.0164, 1993.5778, 672.2963, 384.1818, 1769.589, 325.4355, 509.0897, 990.6887, 220.5833, 166.1923], [123.2059, 1064.6667, 1560.7812, 251.9216, 15.8333, 2476.7941, 588.3824, 315.5464, 177.0769, 1595.3115, 747.9524, 361.0, 461.1746, 547.7059, 283.9688, 622.3889, 2216.1571, 237.9483, 1278.6351, 2021.0323, 295.75, 65.1154], [110.4375, 4579.05, 9428.25, 96.5102, 2690.4194, 70.0968, 307.7742, 22.0256, 2172.6552, 630.0667, 77.5714, 548.7, 283.0, 801.2735, 2232.1364, 359.2951, 2239.1026], [235.6765, 3430.2857, 7372.25, 283.4909, 20.0238, 1701.9153, 325.5, 432.3646, 26.3415, 2003.6271, 1117.5714, 165.1739, 1274.5079, 531.3208, 7321.2857], [92.4706, 3210.3913, 6618.6923, 224.4909, 0.0, 1692.1017, 828.7273, 361.4632, 35.3158, 2279.4839, 266.5625, 156.1538, 746.7619, 608.84, 508.0667, 184.4741, 1943.971], [33.4, 4243.9167, 6045.875, 11041.5, 0.0, 4796.2174, 437.9091, 2712.5, 56.0, 3580.5], [737.9211, 4443.4583, 395.2, 0.0, 5260.6552, 304.1471, 330.0204, 47.1463, 658.7667, 174.381, 18.3333, 161.4603, 264.12, 4744.5263, 1802.2105], [255.129, 4150.3846, 11794.0, 18.1633, 0.0, 2245.0, 209.8621, 500.1684, 19.925, 508.5345, 0.0, 0.0, 211.4516, 1262.6304, 581.1525, 1336.5455, 319.9833, 1392.2708], [193.4571, 12474.5, 4282.1111, 4.0667, 1008.5424, 368.2424, 530.1458, 75.5714, 2546.4878, 0.0, 390.7143, 671.0577, 372.3583, 2030.9516], [615.8455, 1620.0395, 702.1875, 2716.4576, 1162.9252, 80.5556, 320.2222], [376.5758, 3608.4348, 0.0, 889.1724, 0.0, 3395.339, 190.0769, 0.0, 230.9487, 1874.1333], [139.1471, 3658.6667, 1539.5556, 904.0185, 30.4375, 1228.3871, 890.3333, 507.125, 40.725, 877.7119, 207.4118, 0.0, 570.6032, 133.5], [0.0, 3173.1176, 681.6061, 417.6277, 33.359, 7407.25, 0.0, 373.25, 5434.5833], [4.6, 965.0526, 0.0, 218.1667, 179.4762, 142.4706, 1008.9545, 278.5133, 1874.9565, 128.8667, 1254.6623], [28.8824, 4380.0526, 5941.7692, 285.1455, 0.0, 2891.8, 527.8182, 567.0435], [0.0, 3505.1176, 266.8065, 640.4, 4.575, 1563.4667, 230.8824, 367.2542, 377.7763, 709.1596, 0.0, 197.7273], [86.871, 11.3333, 800.6071, 0.0, 769.2222, 81.075, 345.0149, 252.6129, 0.0, 0.0, 93.6695, 2159.5373, 417.8879, 202.5, 55.037], [278.2373, 4894.4, 649.2923, 2010.4386], [274.0342, 1062.141, 558.95, 1958.7609, 351.9537, 225.48, 351.3], [2900.6923, 5824.3333, 252.4222, 2366.8, 1.8571], [0.0, 6687.7273, 921.9118, 1545.5769, 5.4681, 3297.45], [1645.7761, 167.9206, 129.5926, 512.2952, 190.6154, 0.0], [195.2812, 1274.0, 2.5091, 1.6667, 706.3725, 395.2424, 341.6277, 728.7419, 665.5333, 309.5667, 156.7736, 10.8261], [254.3913, 1509.2262], [0.0, 5414.7, 12718.2], [1852.5849, 588.2105, 145.0345], [849.9375, 742.0, 533.1146], [918.84], [142.7308, 351.0, 73.9808, 55.1364, 252.4103], [45.2059, 360.0833, 174.0976, 662.5], [1337.8261, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

