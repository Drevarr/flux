created: 20230625215204000
creator: Drevarr
modified: 20230705163536688
modifier: drevarr
tags: ChartData
title: 202306252152_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Cersei Crownguard", "Rafaellagabriela", "Traidoruns Maximus", "Gavann", "Blancooo Padreee", "Newtype Khan", "Grasszanine", "Arcanophage Farra"];
const professions = ["Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 21.0312, 9.9687, 18.4202, 12.4051, 10.6833, 9.8888, 0.0, 8.7671, 28.896, 10.4203], [20.2008, 39.0584, 0.0, 12.8978, 88.7145, 69.6326, 34.9747], [0.0, 0.0, 180.5054, 95.6155], [50.6557, 31.2749, 6.4136, 18.988, 6.4032, 18.769, 62.88, 19.2913, 38.8056, 25.7422, 6.548, 32.192, 43.7658, 32.377, 24.5088], [16.6548, 23.5152, 24.7737, 81.6587, 18.5203, 11.7124, 0.0, 27.783, 40.416, 32.2028, 11.8104, 64.607, 8.5954, 6.711, 74.1723, 6.8006, 0.0], [0.0, 40.4616, 42.3752, 94.1119, 43.2869, 0.0, 27.1347, 112.896, 21.6306, 21.5688, 21.6002, 0.0, 14.4183, 59.4909, 22.2499, 0.0], [21.6393, 41.4552, 39.809, 139.7733, 36.0797, 21.1423, 38.7092, 0.0, 57.7886, 42.528, 21.1749, 21.5688, 21.6389, 0.0, 0.0, 53.7158, 64.3104, 0.0], [15.6262, 58.4568, 83.7963, 108.5108, 70.3685, 41.0019, 54.6516, 11.029, 77.2985, 166.464, 29.1952, 65.6184, 51.4456, 22.0637, 27.3685, 125.8702, 36.5904, 76.9046], [45.3358, 118.6248, 64.484, 158.8421, 84.5208, 0.0, 47.188, 0.0, 77.2059, 152.064, 47.4232, 49.8408, 56.2843, 38.4253, 72.5631, 151.0582, 68.6717]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

