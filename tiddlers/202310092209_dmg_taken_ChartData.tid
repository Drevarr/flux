created: 20231009220917000
creator: Drevarr
tags: ChartData
title: 202310092209_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Daray Darkblood", "Elonith Requiem", "Eibh\u00ebar", "Black Raspberry Pie", "K\u00e9ld\u00e1", "Fang Shiyu", "Kalisha Lafay", "Glorious Gluvs", "Momomeko", "High Sorcer Baradun", "Mistwalker Cael", "Lhea Firehands", "Necrotic Windrunner", "Atria Ruinheart", "Zaedy Zae", "Klengah", "Venomina The Sly", "Ka Otik Praetor", "Sub Train", "Tegan Parker", "Jmbrage Warrior", "Xanvias Einzbern", "Newtype Khan", "Morv\u00e4rth", "Tootsie Pop Rocks", "Apogeal", "Cat Wigglebooty", "Xattu Ashfur", "Drevarr Moonwillow", "Oo Dads Mad", "Tribal S", "Amiti\u00e9l", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Skyra Lightmoon", "Solus Luxes", "Lord Erin The Wise", "Bella Bitty", "No Reserv\u00e9", "Tidalblade", "Belvyn Brightblade", "Aira Draugr", "Zefirokai", "Jmbrage Warrior", "Mythical Moonz", "Hayuf", "Joe In The Box", "Allucinating", "Hayuf", "Nickhia"];
const professions = ["Reaper", "Reaper", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Chronomancer", "Tempest", "Herald", "Tempest", "Reaper", "Firebrand", "Druid", "Druid", "Druid", "Firebrand", "Firebrand", "Tempest", "Berserker", "Berserker", "Spellbreaker", "Reaper", "Scrapper", "Scrapper", "Scrapper", "Reaper", "Scrapper", "Berserker", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Herald", "Firebrand", "Weaver", "Firebrand", "Vindicator", "Renegade", "Firebrand", "Herald", "Catalyst", "Spellbreaker", "Firebrand", "Firebrand", "Warrior", "Chronomancer", "Dragonhunter", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[70.7525, 174.2292, 546.473, 0.0, 613.7978, 1239.0909, 640.7455, 1581.7744, 727.7155, 0.0, 0.0, 136.0, 112.8773, 141.0, 0.0], [811.9281, 596.2412, 0.0, 180.5929, 699.8146, 662.9222, 1261.6793, 20.9167, 412.28, 301.4545, 118.6418, 98.5294, 366.7188], [145.5385, 186.5894, 734.7391, 5.873, 772.136, 0.0, 212.5519, 517.0817, 661.0727, 617.7608, 111.7273, 0.0, 397.5, 178.1585, 0.0, 17.5789], [222.9381, 264.4903, 536.4446, 0.0, 716.9606, 0.0, 361.1316, 638.5683, 721.1471, 1053.5665, 39.5385, 4.2308, 2134.36, 91.4407, 110.1304, 0.0], [120.3125, 66.8747, 684.4653, 0.0, 679.8378, 0.0, 256.9075, 693.1506, 998.3964, 756.4109, 0.0, 0.0, 52.8502, 112.1739, 0.0], [46.3818, 153.6899, 540.6143, 2.2951, 466.8438, 0.0, 314.4664, 436.0855, 1034.6529, 897.0903, 0.0, 54.6852, 0.0, 88.9188, 83.4615, 0.0], [40.4479, 91.8425, 555.7279, 0.0, 447.6382, 0.0, 170.1608, 527.8961, 893.0289, 793.2779, 199.6667, 0.0, 750.1395, 65.8144, 171.44, 0.0], [39.2477, 126.1253, 557.0829, 21.0833, 475.2141, 0.0, 113.1924, 423.582, 1032.9529, 748.3676, 0.0, 0.0, 0.0, 155.7807, 98.04, 31.2632], [657.2233, 0.0, 482.6222, 0.0, 112.8924, 570.9375, 684.7765, 770.6433, 9.22, 0.0, 61.8617, 86.9615, 0.0], [75.4416, 118.3743, 546.3396, 0.0, 477.5452, 0.0, 533.7057, 335.2282, 907.8882, 554.5667, 12.2, 0.0, 102.8699, 382.625], [156.5155, 86.8771, 481.4274, 3.4068, 554.9716, 0.0, 121.761, 493.9635, 480.3195, 609.3218, 0.0, 28.22, 67.0513, 393.9627, 21.6207], [456.0889, 66.9224, 548.3597, 13.4, 466.8778, 171.7893, 435.9164, 516.8813, 578.2954, 0.0, 27.7692, 105.3571, 50.9778, 0.0, 19.5806], [147.7033, 148.1042, 670.8357, 111.8438, 397.9091, 0.0, 147.902, 616.997, 919.6824, 157.878], [110.2273, 41.9407, 532.0583, 383.2965, 0.0, 211.4834, 568.5015, 655.2485, 591.5551, 0.0, 14.72, 32.0861, 56.5417, 0.0], [197.0658, 99.0919, 495.4881, 0.0, 457.1818, 0.0, 137.213, 451.3792, 561.0898, 625.0153, 0.0, 6.2885, 58.7741, 402.0, 0.0], [79.75, 58.5226, 543.6471, 12.1935, 380.9574, 381.2222, 143.1352, 394.0, 733.6726, 558.7841, 154.3333, 16.44, 0.0, 24.5793, 37.3333, 0.2222], [164.5495, 58.5518, 724.5504, 0.0, 325.4058, 0.0, 110.5707, 339.5137, 574.0577, 434.4092, 2.4, 12.66, 107.0988, 105.32], [74.7179, 88.4167, 478.7647, 0.0, 442.4538, 0.0, 107.9398, 423.3305, 710.7089, 568.8337, 0.0, 2.9184, 0.0, 49.7529, 20.6957], [47.8829, 71.9377, 511.5847, 0.0, 383.2143, 0.0, 109.0757, 405.1471, 641.0539, 503.2044, 0.0, 31.6, 85.0519, 79.375, 0.0], [127.4545, 127.6577, 436.4527, 59.8529, 143.2457, 1299.1212, 501.283, 848.0122, 507.7691, 40.3, 29.9, 347.4524, 40.2016, 103.6087], [84.0549, 93.4028, 787.6855, 0.0, 0.0, 224.0752, 799.6332], [122.5135, 109.1243, 473.31, 0.0, 131.6241, 508.5329, 814.9341, 568.6586, 0.0, 2.74, 0.0, 52.1984, 0.0, 0.0], [149.1091, 79.6389, 462.433, 0.0, 334.6045, 0.0, 151.5616, 363.7416, 535.6753, 550.2832, 33.0, 0.0, 66.0, 70.437, 0.0, 17.6667], [844.0798, 1380.8919, 1212.7093, 303.0, 50.0926, 0.0, 108.3704, 39.5833, 322.9722], [123.5227, 117.918, 472.6882, 31.8966, 352.1217, 0.0, 78.8821, 344.7678, 854.5833, 500.2599, 0.0, 47.74, 0.0, 65.6], [108.75, 601.0358, 0.0, 498.6057, 0.0, 236.9085, 546.5361], [104.9342, 31.6471, 509.6773, 336.4, 0.0, 184.9698, 336.622, 413.6432, 505.4845, 9.8462, 6.102, 189.4, 112.0457, 0.0], [154.9239, 128.2479, 761.6837, 0.0, 557.9231, 0.0, 129.6071], [47.8818, 74.0, 377.6937, 29.3704, 360.4631, 32.2222, 82.3759, 372.1558, 636.5705, 447.6848, 0.0, 0.0, 53.6974, 0.0, 553.3636], [66.703, 148.8399, 697.0162, 9.6271, 484.3343, 0.0, 301.1081], [22.0326, 90.5763, 314.858, 287.8448, 0.0, 83.9475, 419.5123, 576.3512, 459.2183, 0.0, 320.7317, 74.8571, 145.6548, 485.0], [47.74, 48.9137, 377.8904, 0.0, 277.9104, 0.0, 123.847, 426.284, 741.0359, 355.8943, 0.0, 11.72, 11.3571, 79.4239, 55.6957, 0.0], [55.134, 63.1922, 320.3241, 0.0, 375.1538, 97.5614, 278.2926, 410.716, 393.0788, 5641.2, 4.1837, 4.5333, 17.5655, 60.2273, 36.6923], [175.7949, 45.2821, 372.9393, 0.0, 215.8555, 0.0, 66.6565, 276.3769, 752.756, 429.3195, 0.0, 25.3902, 99.5294, 52.0871, 0.0, 0.0], [253.2821, 165.0226, 882.1709], [53.0101, 42.8314, 315.0356, 0.0, 341.2188, 14.08, 135.3039, 205.0519, 609.4731, 319.3283, 131.4706, 30.5455, 34.2564, 53.4461, 469.0294], [438.8644, 611.4246, 1286.1779, 617.9774, 0.0, 46.5968, 0.0, 148.1212, 27.3], [88.6234, 39.2389, 344.4236, 0.0, 236.5385, 0.0, 72.8772, 242.8298, 652.236, 343.0196, 4.1373, 0.0, 21.0669, 262.6667, 0.0], [498.436, 1348.4706, 1304.6401, 293.7, 0.0, 19.6667, 110.5538, 21.0323], [90.7475, 118.5922, 551.3816, 99.1356, 343.3077, 0.0, 147.3584], [70.8036, 86.1879, 533.8241, 0.0, 340.5994, 219.8333, 161.87], [53.9467, 110.7821, 485.6411, 0.0, 453.5257, 0.0, 235.9607], [640.6784, 895.4536, 1.9667, 22.9423, 0.0, 89.8044, 0.0, 0.0], [703.0888, 754.1302, 152.3, 0.0, 48.1667, 53.8874, 172.8261, 51.5789], [384.3982, 370.4201, 532.6492, 0.0, 0.0, 0.0, 36.3182, 56.08], [344.4884, 499.6098, 870.8007], [389.3617, 661.2722, 375.3704, 0.0, 108.2308, 49.5709, 154.3478], [232.2595, 71.0833, 60.0526], [110.8537], [0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

