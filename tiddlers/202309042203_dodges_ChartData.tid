created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Melody Phoenixstorm", "Lupusena", "Kosa\u00edr", "Daphne Agla\u00e9", "Darkened Sword", "Zefirokai", "Tootsie Pop Rocks", "K\u00e2 \u00d4tik R\u00e6j", "Hyde En Sikh", "Xanvias Einzbern", "Zaedy Zae", "Darks Na", "Be\u00eb", "Belvyn Brightblade", "Elementsofmathus", "Smol Gluvs", "Jmbrage Warrior", "Pope On Cope", "Demons Vengence", "Selandir", "Rhaevynn", "Rina Of Theros", "Jimbo The Pleb", "A \u00da R A", "Sub Train", "Mort\u00e4rion", "Rafaellagabriela", "Crusader Siolith", "Koralia Danai", "Lord Erin The Wise", "Morv\u00e4rth", "Lucky Luprac\u00e1n", "Drevarr Moonwillow", "Necrotic Windrunner", "Black Raspberry Pie", "Gamora Titus", "Mistwalker Cael", "Dancing In The Mist", "Sonja Wintersong", "Kylo Milan", "Venomina The Fierce", "Glass Tingle", "Tegan Parker", "Darth Sammy", "Glorious Gluvs", "Blaize Harlot", "Glizzy Gobbl\u00e9r", "Air One Com", "Newtype Khan", "Nose Llama"];
const professions = ["Firebrand", "Scrapper", "Soulbeast", "Holosmith", "Reaper", "Spellbreaker", "Catalyst", "Scrapper", "Berserker", "Chronomancer", "Berserker", "Druid", "Dragonhunter", "Reaper", "Firebrand", "Tempest", "Reaper", "Berserker", "Renegade", "Druid", "Weaver", "Reaper", "Reaper", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Weaver", "Reaper", "Scrapper", "Scrapper", "Reaper", "Chronomancer", "Firebrand", "Herald", "Herald", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer", "Tempest", "Reaper", "Berserker", "Scourge", "Reaper", "Firebrand", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 3, 0, 2, 0, 0, 4], [1, 4, 4, 4, 3, 2], [1, 2, 15], [1, 8, 3, 3, 3, 0, 2], [1, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2, 0, 0, 3, 1, 0, 0, 3, 3], [0, 0, 0, 3, 3, 0, 0, 2, 1, 1, 1, 1, 3, 0, 2, 5], [0, 3, 3, 1, 1, 1, 1, 3, 0, 12, 1], [1, 5, 0, 0, 0, 1, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 2, 1, 2, 0, 1, 6], [2, 12, 6, 5, 4, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 4, 1, 1, 1, 2, 0, 0, 3, 1, 1, 3, 9], [0, 5, 2, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0, 0, 10, 0, 2, 2, 5], [2, 4, 4, 1, 3, 0, 0, 0, 1, 1, 0, 0, 0, 3, 0, 0, 5, 0, 1, 0, 6], [1, 5, 1, 2, 1, 0, 0, 0, 3, 5, 0, 0, 1, 0, 1, 0, 3, 1, 0, 1, 1, 7], [0, 4, 2, 1, 4, 1, 0, 0, 1, 3, 0, 1, 2, 1, 0, 5, 1, 1, 0, 1, 11], [3, 16, 6, 5, 6, 2, 1], [1, 2, 4, 3, 1, 2, 3, 1, 0, 10, 1, 2, 0, 2, 9], [3, 18, 5, 4, 8, 2, 3], [1, 5, 3, 1, 3, 1, 1, 1, 0, 4, 0, 0, 3, 3, 1, 0, 7, 2, 2, 0, 0, 5], [1, 3, 7, 4, 3, 2, 1, 8, 3, 0, 0, 2, 10], [3, 0, 4, 3, 3, 2, 0, 10, 1, 1, 4, 13], [1, 5, 4, 3, 2, 1, 0, 0, 2, 4, 0, 1, 2, 1, 1, 0, 6, 2, 1, 0, 1, 10], [4, 6, 3, 3, 1, 0, 0, 2, 3, 3, 1, 1, 0, 0, 0, 4, 1, 3, 0, 2, 13], [1, 10, 4, 1, 1, 0, 0, 0, 0, 4, 2, 0, 3, 2, 1, 0, 7, 2, 1, 2, 3, 7], [1, 1, 4, 2, 1, 2, 0, 0, 4, 1, 2, 0, 2, 1, 2, 0, 9, 3, 4, 0, 5, 7], [0, 2, 3, 1, 1, 3, 4, 3, 0, 9, 1, 4, 4, 16], [1, 7, 2, 2, 2, 1, 1, 0, 3, 3, 0, 0, 1, 1, 2, 2, 9, 1, 2, 0, 2, 11], [4, 13, 5, 2, 2, 1, 0, 1, 1, 2, 0, 1, 0, 0, 2, 1, 17, 2], [2, 5, 1, 2, 2, 2, 0, 1, 1, 4, 0, 0, 1, 2, 4, 0, 6, 2, 0, 0, 3, 17], [3, 11, 3, 2, 1, 0, 2, 0, 3, 4, 1, 1, 3, 4, 2, 0, 4, 0, 3, 0, 3, 8], [1, 10, 4, 5, 3, 1, 0, 0, 2, 5, 0, 2, 1, 2, 2, 0, 7, 1, 0, 1, 2, 10], [0, 16, 6, 1, 0, 1, 0, 0, 3, 4, 0, 2, 2, 3, 1, 0, 8, 1, 2, 2, 3, 5], [0, 1, 4, 5, 2, 2, 1, 3, 3, 2, 17, 3, 4, 2, 13], [3, 9, 5, 4, 1, 1, 0, 0, 3, 4, 1, 1, 3, 1, 0, 0, 14, 0, 1, 0, 1, 15], [1, 6, 2, 4, 3, 0, 0, 0, 4, 4, 3, 1, 2, 1, 2, 2, 15, 1, 2, 0, 4, 11], [2, 13, 4, 1, 6, 3, 0, 0, 2, 6, 0, 2, 0, 3, 2, 1, 9, 2, 0, 3, 4, 8], [3, 10, 6, 4, 5, 1, 0, 0, 0, 5, 1, 1, 2, 4, 4, 0, 6, 1, 0, 0, 4, 17], [5, 4, 1, 3, 5, 4, 1, 15, 4, 3, 0, 9, 23], [3, 10, 6, 4, 3, 2, 2, 2, 3, 5, 2, 2, 4, 2, 0, 9, 2, 4, 1, 1, 11], [3, 13, 5, 5, 3, 2, 1, 0, 2, 5, 2, 1, 1, 4, 3, 0, 10, 3, 3, 0, 3, 15], [2, 20, 5, 2, 4, 4, 0, 4, 4, 2, 2, 2, 2, 2, 7, 1, 0, 2, 5, 17], [5, 6, 2, 2, 3, 2, 6, 2, 3, 4, 5, 6, 1, 27, 4, 6, 3, 2], [2, 10, 8, 6, 5, 4, 2, 0, 1, 6, 0, 2, 3, 3, 3, 0, 4, 2, 5, 0, 6, 19], [0, 8, 8, 6, 4, 4, 3, 2, 4, 4, 4, 2, 5, 4, 2, 1, 9, 3, 2, 2, 7, 20], [5, 13, 5, 5, 6, 4, 1, 1, 4, 4, 0, 0, 3, 3, 4, 13, 2, 6, 1, 5, 23], [1, 15, 3, 4, 7, 2, 3, 4, 6, 1, 3, 2, 4, 5, 3, 15, 3, 3, 2, 10, 13], [3, 5, 11, 4, 2, 3, 5, 10, 2, 25, 3, 5, 1, 10, 28], [2, 14, 5, 8, 8, 2, 4, 3, 5, 4, 5, 3, 4, 6, 2, 2, 15, 3, 4, 2, 4, 21], [4, 17, 7, 8, 7, 3, 3, 2, 7, 7, 5, 3, 4, 5, 3, 0, 13, 1, 4, 0, 7, 21], [17, 3, 5, 8, 2, 1, 2, 4, 4, 2, 5, 6, 5, 3, 13, 3, 5, 5, 6, 34], [5, 19, 7, 5, 8, 4, 2, 2, 5, 7, 6, 2, 5, 6, 5, 1, 22, 3, 4, 6, 3, 26], [26, 15, 12, 16, 4, 0, 5, 8, 7, 5, 4, 5, 10, 12, 5, 34, 5, 9, 3, 10, 41]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

