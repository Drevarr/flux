created: 20230213220222000
creator: Drevarr
modified: 20230705163519177
modifier: drevarr
tags: ChartData
title: 202302132202_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Isla Miststorm", "High Sorcer Baradun", "Rina Of Theros", "Nelliel T", "Etchery Howls", "Lord Erin The Wise", "Abigail Ryn", "Blanco Padre Guard", "Dark Sidiuz", "Belvyn Brightblade", "Uneeta Healah", "Ace Hammers", "Primal Clone", "Tegan Parker", "Skye Nightroad", "Black Raspberry Pie", "Oo Dads Mad", "Xyntharos", "Legacy Of Mathus", "Jupi Jupi Jupi", "Kira Dragonblaze", "Joh Oshi", "Arriasa", "Sassy Daddy Demon", "Jeckyll Mbs", "Zady Stardust", "Grasszanine", "Mike The Archmagus", "Elonith Tenebris", "Arcanophage Farra", "Xanvias Tseli", "Gavann", "Mac Chiato", "Smol Daddy Tika", "Newtype Khan", "Zaylen Harker", "Smol Gluvs", "Sygaldry Verdandi", "Tootsie Pop Bringer", "Be\u00eb", "Arka\u00f1", "Koralia Danai", "Whose Guardian", "Raziel Umbra", "Drevarr Moonwillow", "Mistwalker Caelon", "Ravioli Fetabringer", "Bella Sassy", "Ryvalia Fazebringer", "\u00c9\u00efbhear"];
const professions = ["Willbender", "Tempest", "Scourge", "Scourge", "Druid", "Weaver", "Tempest", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Vindicator", "Chronomancer", "Tempest", "Scrapper", "Chronomancer", "Spellbreaker", "Vindicator", "Berserker", "Firebrand", "Dragonhunter", "Druid", "Druid", "Vindicator", "Berserker", "Firebrand", "Spellbreaker", "Tempest", "Scourge", "Spellbreaker", "Berserker", "Firebrand", "Tempest", "Berserker", "Spellbreaker", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Dragonhunter", "Chronomancer", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 25, 8, 4], [3, 4, 38, 2, 1], [1, 8, 0, 0, 1, 7, 5, 0, 3, 24, 0, 2], [7, 13, 1, 2, 12, 4, 0, 3, 14, 2, 0], [10, 18, 4, 0, 4, 18, 5], [0, 9, 5, 0, 4, 0, 2, 0, 4, 34, 1, 1], [5, 16, 4, 1, 15, 4, 2, 14], [8, 1, 3, 13, 7, 0, 2, 29, 1, 3], [5, 9, 5, 4, 18, 4, 0, 4, 20, 1, 0], [11, 33, 5, 0, 2, 20], [4, 6, 4, 15, 1, 0, 1, 37, 1, 3], [7, 25, 2, 2, 15, 12, 0, 5, 5, 1, 0], [12, 0, 6, 58, 0, 2], [2, 10, 7, 3, 23, 5, 0, 5, 21, 3, 1], [3, 17, 5, 0, 7, 13, 11, 0, 7, 19], [13, 1, 0, 6, 14, 8, 0, 2, 45, 2, 2], [11, 30, 4, 10, 12, 7, 0, 7, 14], [9, 17, 5, 0, 2, 22, 3, 0, 2, 32, 4, 2], [9, 19, 5, 0, 2, 2, 19, 0, 2, 42, 1, 0], [4, 4, 21, 12, 0, 4, 57], [14, 31, 36, 0, 14, 10], [7, 32, 2, 1, 2, 19, 7, 1, 35, 1, 2], [4, 12, 7, 0, 9, 15, 7, 6, 46, 1, 3], [9, 32, 6, 0, 3, 4, 6, 0, 6, 44, 1, 4], [7, 38, 6, 0, 2, 20, 0, 0, 5, 35, 1, 2], [7, 0, 5, 22, 16, 6, 56, 1, 3], [3, 11, 4, 12, 17, 15, 0, 7, 42, 2, 5], [2, 21, 5, 1, 18, 14, 0, 5, 50, 3, 0], [1, 5, 0, 2, 20, 17, 0, 7, 62, 2, 5], [7, 40, 5, 3, 25, 6, 0, 3, 33, 0, 2], [6, 35, 5, 0, 2, 16, 8, 0, 4, 43, 1, 4], [7, 31, 3, 2, 28, 9, 0, 3, 39, 5], [11, 34, 5, 0, 7, 11, 8, 3, 46, 1, 3], [14, 38, 7, 0, 9, 2, 8, 0, 6, 43, 2, 3], [11, 40, 6, 0, 3, 16, 11, 0, 4, 34, 2, 5], [10, 30, 3, 3, 15, 5, 5, 56, 4, 2], [11, 37, 3, 0, 7, 20, 12, 0, 5, 38, 3, 3], [17, 32, 4, 0, 5, 4, 13, 0, 9, 50, 2, 5], [11, 34, 3, 0, 5, 29, 7, 0, 9, 40, 2, 2], [10, 46, 4, 0, 5, 20, 10, 0, 5, 43, 0, 1], [12, 45, 7, 0, 3, 20, 11, 0, 3, 43, 0, 2], [13, 39, 5, 6, 18, 7, 5, 50, 3, 4], [11, 30, 7, 3, 43, 10, 0, 11, 34, 8, 2], [8, 37, 5, 0, 2, 25, 9, 0, 20, 56, 1, 7], [16, 40, 8, 0, 4, 42, 11, 7, 41, 2, 5], [16, 40, 8, 0, 9, 26, 14, 0, 6, 51, 1, 6], [13, 37, 6, 0, 8, 24, 14, 0, 4, 65, 7, 4], [20, 49, 5, 6, 27, 14, 0, 7, 68, 1, 4], [16, 54, 7, 0, 9, 32, 15, 0, 10, 70, 3, 4], [15, 62, 10, 11, 39, 17, 0, 9, 77, 3, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

