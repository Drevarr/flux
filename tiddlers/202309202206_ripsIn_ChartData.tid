created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mellody Moon", "Necrotic Windrunner", "Narnia Honeyspark", "Jmbrage Warrior", "Mar\u00eda Callas", "Squishy Jellyfish", "Dark Sidiuz", "Oo Dads Mad", "Belvyn Brightblade", "Meme Soulmessor", "N\u00edcki M\u00edraj", "Rafaellagabriela", "Dugup", "Jimbo The Pleb", "Mike The Archmagus", "Jmbrage Rev", "Morton Saltbringer", "Solus Luxes", "Aira Draugr", "Latedoctor", "Mistwalker Cael", "Venomina", "Drevarr Moonwillow", "Xanvias Einzbern", "Raelyn Sunray", "Cedryn X", "Daphne Agla\u00e9", "Eibh\u00ebar", "Sister Elon\u00edth", "Koralia Danai", "Leafzel", "Etchery Howls", "Black Raspberry Pie", "Alhana Lafay", "Be\u00eb", "Grasszanine", "Glorious Gluvs", "Cat Wigglebooty", "Klengah", "Lord Erin The Wise", "Rina Of Theros", "Sub Train", "Primal Clone", "Arcanophage Farra", "Tegan Parker", "Bella Sassy", "Tootsie Pop Rocks", "Kurn The Drunk", "Ryvalia Fazebringer", "Arriasa", "Zaedy Zae"];
const professions = ["Dragonhunter", "Reaper", "Druid", "Berserker", "Dragonhunter", "Firebrand", "Reaper", "Berserker", "Firebrand", "Reaper", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Weaver", "Vindicator", "Chronomancer", "Firebrand", "Herald", "Reaper", "Herald", "Reaper", "Scrapper", "Berserker", "Firebrand", "Berserker", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Reaper", "Reaper", "Spellbreaker", "Berserker", "Scrapper", "Druid", "Tempest", "Reaper", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand", "Scrapper", "Reaper", "Chronomancer", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0238, 0.0, 0.027, 0.2647, 0.2, 0.0, 0.2754], [0.0043, 0.0294, 0.05, 0.058, 0.1544, 0.0351, 0.0769, 0.1429, 0.093, 0.082, 0.0135], [0.0879, 0.0, 0.2, 0.6047, 0.2131, 0.0946, 0.0625], [0.0, 0.3286, 0.3023, 0.2459, 0.0676, 0.2656], [0.2353, 0.0333, 0.0, 0.2174, 0.0735, 0.2281, 0.1648, 0.0, 0.1571], [0.4419, 0.4754, 0.5, 0.1562], [0.0065, 0.0, 0.0, 0.2353, 0.3667, 0.0662, 0.2632, 0.1758, 0.0, 0.3286], [0.026, 0.0, 0.1618, 0.15, 0.0, 0.1594, 0.1397, 0.2807, 0.2418, 0.0, 0.2143], [0.0216, 0.0, 0.0, 0.2059, 0.0, 0.0, 0.1739, 0.4485, 0.3509], [0.0152, 0.04, 0.0, 0.1176, 0.0667, 0.1884, 0.3824, 0.4386, 0.1209], [0.0195, 0.0, 0.1471, 0.2333, 0.1739, 0.1544, 0.2105, 0.0989, 0.0714, 0.4419, 0.1892, 0.0469], [0.1324, 0.05, 0.0, 0.058, 0.2206, 0.2807, 0.2088, 0.0, 0.0571, 0.4419, 0.2131, 0.0541, 0.1562], [0.1618, 0.2, 0.0, 0.087, 0.375, 0.4912, 0.0879, 0.0, 0.2571], [0.1691, 0.2632, 0.1209, 0.0, 0.2143, 0.5116, 0.2787, 0.3108, 0.125], [0.0108, 0.04, 0.0, 0.0294, 0.1333, 0.0, 0.1449, 0.2132, 0.1754, 0.1429, 0.0, 0.1, 0.2791, 0.2951, 0.0811, 0.2656], [0.0173, 0.0, 0.0, 0.1618, 0.0333, 0.0435, 0.375, 0.4386, 0.4176], [0.0216, 0.0, 0.0, 0.2059, 0.1, 0.0, 0.0435, 0.2574, 0.4386, 0.1978, 0.0, 0.0857, 0.1163, 0.1311, 0.0676, 0.1406], [0.0216, 0.0, 0.0, 0.1324, 0.2333, 0.0, 0.1014, 0.1544, 0.2807, 0.1978, 0.0, 0.1571, 0.1163, 0.3115, 0.0946, 0.2031], [0.0108, 0.0, 0.0, 0.2353, 0.0833, 0.5217, 0.5221, 0.2982], [0.1471, 0.0333, 0.0, 0.4493, 0.4853, 0.193, 0.2637, 0.0, 0.1714], [0.0346, 0.08, 0.0, 0.2059, 0.15, 0.0, 0.058, 0.2206, 0.1754, 0.0989, 0.0, 0.3, 0.2093, 0.3443, 0.0811, 0.1875], [0.0216, 0.0, 0.0, 0.1029, 0.1333, 0.2464, 0.3309, 0.3333, 0.1648, 0.0, 0.1, 0.093, 0.1311, 0.2297, 0.1094], [0.0173, 0.0, 0.0, 0.1324, 0.0667, 0.0, 0.1449, 0.2868, 0.2105, 0.1209, 0.0, 0.2714, 0.3023, 0.2623, 0.2568, 0.1406], [0.013, 0.0, 0.0, 0.25, 0.1667, 0.0, 0.058, 0.1397, 0.2982, 0.2308, 0.0, 0.1714, 0.1628, 0.377, 0.3649, 0.125], [0.25, 0.2456, 0.2967, 0.2857, 0.5581, 0.2787, 0.2838, 0.3594], [0.0238, 0.0, 0.0735, 0.1167, 0.1594, 0.3309, 0.1579, 0.3077, 0.0, 0.0429, 0.5349, 0.1639, 0.2297, 0.2031], [0.0152, 0.0, 0.1324, 0.2, 0.1014, 0.1324, 0.4211, 0.1758, 0.0, 0.3857, 0.4884, 0.0984, 0.3649, 0.1562], [0.1912, 0.3333, 0.0, 0.1304, 0.2279, 0.3684, 0.1648, 0.0, 0.1571, 0.2326, 0.2295, 0.1892, 0.4219], [0.1029, 0.0833, 0.0, 0.1594, 0.3971, 0.2105, 0.1319, 0.0, 0.1286, 0.5814, 0.5246, 0.1892, 0.0625], [0.026, 0.0, 0.0, 0.2794, 0.1, 0.0, 0.1739, 0.2426, 0.5263, 0.0769, 0.2286, 0.2791, 0.1803, 0.1486, 0.2812], [0.0152, 0.08, 0.0, 0.2941, 0.0667, 0.0, 0.058, 0.1838, 0.3158, 0.1868, 0.2857, 0.3953, 0.5738, 0.1757, 0.2031], [0.0147, 0.1, 0.058, 0.25, 0.3333, 0.3956, 0.2429, 0.5581, 0.2295, 0.3378, 0.3125], [0.0152, 0.08, 0.0, 0.2206, 0.1667, 0.0, 0.2464, 0.4853, 0.2456, 0.2747, 0.0, 0.0429, 0.4419, 0.1148, 0.1486, 0.0781], [0.0238, 0.2941, 0.1333, 0.0, 0.5652, 0.5147, 0.2632, 0.3297, 0.0, 0.2], [0.0216, 0.0, 0.0, 0.2647, 0.05, 0.0725, 0.2647, 0.3158, 0.1868, 0.0, 0.4, 0.2791, 0.5246, 0.1892, 0.2812], [0.2647, 0.0833, 0.0, 0.0435, 0.2941, 0.6667, 0.3187, 0.1714, 0.5349, 0.0984, 0.1622, 0.4062], [0.0216, 0.0, 0.0, 0.1324, 0.0167, 0.0, 0.2319, 0.3676, 0.3333, 0.2198, 0.0, 0.3429, 0.4651, 0.1475, 0.0946, 0.4688], [0.013, 0.0, 0.0, 0.2206, 0.0333, 0.1159, 0.4926, 0.3143, 0.6744, 0.2131, 0.2297, 0.5625], [0.0281, 0.0, 0.0, 0.2059, 0.0333, 0.0, 0.2029, 0.3971, 0.1404, 0.4066, 0.0, 0.2286, 0.4419, 0.4262, 0.0135, 0.2188], [0.1912, 0.05, 0.2174, 0.4559, 0.2807, 0.2747, 0.0, 0.3571, 0.2558, 0.0328, 0.4054, 0.2656], [0.013, 0.0, 0.1324, 0.0667, 0.0, 0.2609, 0.3162, 0.5263, 0.3956, 0.0, 0.2286, 0.1628, 0.1803, 0.2568, 0.3438], [0.039, 0.08, 0.0, 0.1471, 0.0833, 0.0, 0.058, 0.4706, 0.1754, 0.4176, 0.0, 0.3571, 0.3953, 0.1639, 0.3108, 0.3125], [0.0346, 0.0, 0.2647, 0.1333, 0.0, 0.1159, 0.5074, 0.614, 0.3407, 0.0, 0.1857, 0.186, 0.2951, 0.2973, 0.1094], [0.0216, 0.04, 0.0, 0.1765, 0.1833, 0.0, 0.1159, 0.4044, 0.5614, 0.3846, 0.3, 0.5116, 0.2787, 0.2027, 0.2188], [0.0441, 0.0667, 0.0, 0.5368, 0.3684, 0.3077, 0.0, 0.4857, 0.5814, 0.4262, 0.2027, 0.5], [0.0588, 0.1333, 0.0, 0.2609, 0.5441, 0.3509, 0.2967, 0.2714, 0.6512, 0.2295, 0.3108, 0.4219], [0.026, 0.04, 0.0, 0.2647, 0.1, 0.3478, 0.3971, 0.4737, 0.2308, 0.0, 0.4, 0.4419, 0.2131, 0.2297, 0.3906], [0.026, 0.1176, 0.3667, 0.0, 0.2609, 0.2647, 0.4386, 0.4725, 0.0, 0.4, 0.3721, 0.2623, 0.2432, 0.375], [0.0325, 0.0, 0.0, 0.1324, 0.1833, 0.0, 0.2754, 0.4412, 0.6842, 0.3187, 0.0, 0.2571, 0.2791, 0.3443, 0.2162, 0.5469], [0.3529, 0.1333, 0.2754, 0.6765, 0.4912, 0.1868, 0.1857, 0.6512, 0.6066, 0.2568, 0.2031], [0.0173, 0.0, 0.0, 0.1176, 0.3, 0.2464, 0.7206, 0.614, 0.3846, 0.2857, 0.093, 0.2623, 0.2297, 0.4531]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

