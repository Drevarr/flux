created: 20230628220723000
creator: Drevarr
modified: 20230705163539632
modifier: drevarr
tags: ChartData
title: 202306282207_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Vopiscus Zergherdus", "Blanco Padre Guard", "Ryvalia Fazebringer", "My Birthday Girl", "Fribble Bibble", "Drevarr Moonwillow", "Belvyn Brightblade", "Sub Train", "Gavann", "Crusader Siolith", "Tika Fiery", "Sygaldry Verdandi", "Solus Sanctus", "Bella Sassy", "Koralia Danai"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 12.7689, 40.6455, 21.609, 8.7259, 12.8806, 0.5875, 6.7645, 11.7043, 0.0, 6.6477, 8.4499, 4.0793, 1.8943, 0.8726, 0.0, 4.9046, 30.085, 13.5322, 0.0, 8.4785, 7.1663, 0.0, 1.728], [33.1588, 15.0969, 8.5995, 19.208, 11.7874, 9.6768, 10.2141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0061, 25.9573, 20.7571, 1.1693, 49.5664, 3.2193, 4.6656], [0.0, 19.9861, 27.7938, 25.0047, 6.86, 3.4222, 5.7024, 9.3516, 12.503, 0.0, 78.3659, 6.2208, 12.6053, 3.3617, 3.3955, 7.7792, 6.7088, 0.0, 33.3803, 3.7265, 11.4394], [0.0, 0.0, 29.8278, 2.5549, 7.1001, 0.0, 0.9506, 0.8294, 22.8536, 19.0771, 5.3218, 7.3508, 20.9952, 55.4558, 5.0025, 3.539, 19.171, 12.3245, 14.9234, 20.1263, 2.4518, 15.1782, 0.0, 11.736, 2.3846], [0.0, 0.0, 23.3171, 56.7489, 19.3158, 44.4528, 14.8294, 5.184, 10.6992, 16.0358, 0.0, 15.6604, 3.9398, 8.0482, 5.7495, 23.7552, 7.7971, 14.8441, 32.6265, 1.9614, 40.2579, 27.1877, 0.0, 20.5632], [50.0158, 22.7615, 29.7234, 48.1846, 10.5992, 9.4003, 0.3503, 33.024, 0.0, 17.2584, 4.6138, 22.5645, 5.3493, 31.9483, 0.0, 24.8376, 32.7046, 30.5049, 0.0, 8.3006, 9.1508, 0.0, 4.009], [13.5324, 0.0, 24.0237, 29.5744, 37.6614, 23.4338, 12.4053, 9.9878, 9.0013, 11.1821, 0.0, 37.0736, 4.2509, 10.6207, 8.4175, 28.4093, 0.0, 50.4926, 45.4054, 21.7319, 3.772, 15.8304, 12.0173, 0.0, 11.1629], [0.0, 0.0, 8.3275, 93.3685, 3.2634, 33.6414, 2.4716, 0.2419, 8.1389, 9.7075, 0.0, 32.8549, 34.4736, 2.5358, 8.0974, 11.3443, 0.0, 4.4645, 88.0324, 21.1011, 0.4526, 50.1, 19.6907, 0.0, 12.6144], [0.0, 64.4502, 45.9875, 23.9904, 39.6234, 23.5749, 10.2298, 8.2197, 22.7021, 0.0, 34.1333, 11.975, 11.0985, 12.2461, 23.9006, 0.3809, 7.1683, 53.6609, 33.3719, 0.0, 44.5861, 11.7527, 0.0, 31.0349], [14.9896, 41.0326, 69.1488, 79.3016, 51.4275, 13.6166, 10.5914, 17.2032, 0.0, 54.6516, 15.552, 8.2688, 12.7664, 44.2622, 23.1914, 9.3691, 60.4082, 34.3467, 4.1492, 36.997, 2.8004, 0.0, 8.2253], [0.0, 0.3533, 21.9873, 34.3539, 27.1656, 15.5423, 1.6243, 4.3929, 33.024, 4.3771, 65.0066, 22.032, 7.791, 6.75, 35.3419, 0.0, 66.9672, 149.2344, 40.5394, 7.4686, 63.2624, 4.41, 0.0, 32.1754], [0.0, 24.9322, 31.1228, 68.8842, 37.5379, 58.1292, 2.2118, 12.397, 23.2858, 10.7696, 88.4653, 42.6125, 73.1325, 9.3914, 20.8949, 0.0, 132.6768, 88.0324, 17.9474, 0.0, 92.611, 35.4123, 143.3603, 27.337], [0.0, 168.3175, 119.8462, 39.4695, 77.7101, 59.5551, 9.2966, 21.7217, 43.561, 14.6743, 47.173, 11.353, 77.322, 16.8751, 37.1842, 21.9641, 137.5186, 67.8699, 49.9431, 0.0, 106.4256, 9.3492, 133.3099, 31.7952], [51.6046, 0.0, 47.139, 94.375, 96.6231, 76.9418, 112.1708, 33.5578, 13.448, 66.9696, 12.6905, 92.684, 28.8749, 50.9355, 31.7625, 59.1456, 16.9068, 88.8494, 143.5984, 52.6955, 19.0486, 97.6506, 22.1382, 15.8868, 30.8275], [88.1147, 25.1341, 85.8588, 80.5707, 107.5648, 89.499, 0.0, 8.8396, 11.305, 69.1205, 59.3817, 59.0976, 41.16, 20.5303, 38.1538, 53.4502, 73.2552, 167.0949, 54.301, 84.9832, 85.7333, 17.3313, 26.6746, 69.431], [26.3164, 0.0, 81.9633, 89.4975, 85.7304, 75.2405, 45.9615, 34.3526, 48.3213, 43.4074, 37.0008, 119.1469, 48.8333, 59.976, 39.393, 55.0733, 0.0, 140.3482, 153.4415, 85.666, 35.6831, 155.5177, 19.3819, 77.76]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

