created: 20230605220452000
creator: Drevarr
modified: 20230705163533701
modifier: drevarr
tags: ChartData
title: 202306052204_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Sumatra Satyricon", "Crusader Siolith", "Zaylen Harker", "Zayde Sunsabre", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Solus Sanctus", "Newtype Khan", "Miphest\u00f6", "Arriasa", "Primal Clone", "Tegan Parker", "Eibh\u00ebar", "Cat Wigglebooty", "Venomina The Siren", "Etchery", "Artakama Nahid", "Ak\u00e1nt\u00f3r", "Johosh Of The North", "Drevarr Moonwillow", "Stoic Rapidfire"];
const professions = ["Firebrand", "Soulbeast", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Druid", "Chronomancer", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Scrapper", "Tempest", "Druid", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 41.8614, 0.9808, 39.8909, 0.0, 0.0, 0.96, 7.0303, 1.9903, 4.9718, 0.0, 5.0, 17.2277, 9.008, 0.0, 0.0], [0.0, 65.2664, 7.1346, 11.0716, 0.0, 0.0, 0.0, 11.0606, 11.9612, 4.0423, 0.0, 5.0, 0.0, 6.016, 0.0, 0.0], [0.0, 34.6337, 3.9615, 51.424, 0.0, 1.0, 0.0, 4.0, 4.9806, 6.9718, 0.0, 5.0, 35.1692, 9.008, 0.0, 1.0], [0.0, 48.0849, 0.0, 51.6297, 0.0, 0.0, 0.0, 9.9612, 1.9859, 0.0, 2.0, 28.0062, 4.0027, 0.0, 0.0], [0.0, 56.0569, 4.9615, 27.1038, 0.0, 0.0, 0.0, 0.0, 12.9515, 0.9859, 0.0, 0.0, 55.5385, 8.0053, 0.9831, 3.0222], [0.0, 76.2943, 0.0, 26.0501, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.0031, 2.0, 0.0, 0.0], [0.0, 57.2814, 0.0, 69.5081, 0.0, 0.0, 0.0, 0.0, 4.9806, 9.9577, 0.0, 5.0, 23.04, 1.0, 0.0, 0.0], [0.0, 61.42, 0.0, 56.6726, 0.0, 2.0, 0.0, 0.0, 11.9612, 1.9859, 0.0, 9.0, 37.2246, 3.0027, 0.0, 12.0889], [0.0, 60.2363, 6.9423, 57.0608, 0.0, 0.0, 0.0, 6.0303, 0.0, 6.9718, 0.0, 3.0, 61.1538, 1.0, 0.0, 0.0], [0.0, 0.0, 148.1413, 0.0, 0.0, 0.0, 0.0, 20.932, 20.9718, 0.0, 0.0, 87.7169, 20.0878, 3.9831, 0.0], [2.0, 0.0, 5.0303, 89.7961, 56.7746, 7.4186, 39.1667, 264.2277, 110.4202, 30.8475, 26.2667], [0.0, 162.1224, 9.9231, 135.6726, 0.0, 0.0, 0.0, 0.0, 18.932, 21.9718, 0.0, 8.0833, 89.6154, 2.008, 0.0, 2.0], [0.0, 277.4687, 0.0, 4.0541, 0.0, 16.7576, 94.4951, 67.4225, 11.1395, 15.8958, 245.4615, 62.1356, 19.8814, 16.1556], [0.0, 163.3598, 20.5192, 187.9893, 0.0, 0.0, 0.0, 1.0, 37.932, 11.9859, 0.0, 2.0, 135.6246, 17.016, 6.9492, 0.0], [0.0, 209.1901, 0.0, 96.2236, 0.0, 0.0, 0.0, 0.0, 39.9709, 22.0282, 0.0, 0.0, 169.5138, 75.2846, 0.9831, 17.2222], [0.0, 289.0118, 20.8462, 303.6208, 0.0, 1.0, 4.92, 0.0, 58.3204, 44.1268, 0.0, 13.0208, 231.7631, 41.0612, 3.9661, 6.0667], [9.7778, 313.9055, 28.7885, 317.0089, 0.0, 0.0, 0.0, 17.3939, 81.7864, 93.0704, 19.2558, 24.5417, 257.4123, 97.4282, 7.9831, 6.0444], [0.0, 301.2052, 28.0769, 311.0912, 9.1, 12.3784, 4.92, 33.8788, 103.0971, 81.507, 10.4884, 28.6667, 284.4646, 124.5957, 27.9322, 23.6], [0.0, 306.6498, 35.1346, 328.4758, 1.0, 0.0, 0.0, 15.1818, 107.0, 76.4366, 10.6512, 30.5, 265.2185, 116.3484, 16.2373, 18.1556], [9.0278, 313.9613, 53.0962, 333.0054, 3.0, 14.8108, 0.96, 21.8788, 106.0, 77.831, 11.1628, 48.5833, 283.0923, 103.4415, 20.2881, 16.1333], [0.0, 328.0537, 40.5, 342.9088, 2.0, 21.0811, 2.96, 38.7879, 121.7184, 103.9014, 8.1628, 36.8542, 273.4185, 142.0505, 34.8305], [0.0, 336.9184, 42.0962, 359.0787, 3.0, 0.0, 0.0, 20.1212, 127.1845, 71.2394, 21.2326, 38.6042, 301.3662, 120.7633, 31.2881, 5.0444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

