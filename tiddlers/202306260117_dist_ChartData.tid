created: 20230626011754000
creator: Drevarr
modified: 20230705163537868
modifier: drevarr
tags: ChartData
title: 202306260117_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Elonith Requiem", "Blancooo Padreee", "Primal Clone", "Air One Com", "Etchery Of Ascalon", "Solus Sanctus", "Koralia Danai", "Smol Gluvs", "Tribal S", "Gabe Malhorn", "Grasszanine", "Tika Fiery", "Johosh The Mighty", "Sakis Ranger", "Elon The Archmagus", "Newtype Khan", "Xanvias Einzbern", "Eibh\u00ebar", "Daddy Demon", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Reaper", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Druid", "Tempest", "Spellbreaker", "Berserker", "Chronomancer", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[523, 434, 14071, 372, 392, 2264, 216, 270, 386, 510, 441, 289, 1590, 272, 397, 433, 632, 343], [631, 2744, 6284, 610, 412, 335, 379, 233, 350, 346, 435, 467, 490, 1409, 281, 847, 370], [325, 524, 373, 321, 2376, 4636, 1491, 460, 340, 1912, 6957, 566, 352, 303, 2903, 249, 424, 330, 401, 835, 345, 1564, 287, 360, 2071, 599], [269, 387, 267, 311, 17718, 3609, 4173, 279, 261, 5950, 266, 2559, 344, 3358, 184, 242, 244, 569, 260, 366, 1667, 330, 959, 367, 275, 450], [533, 398, 241, 249, 2287, 1178, 22133, 428, 388, 2190, 9645, 592, 351, 3595, 395, 256, 612, 410, 331, 804, 344, 335, 281, 960, 833], [204, 386, 246, 255, 2217, 16258, 11787, 347, 451, 2103, 1479, 810, 259, 350, 435, 342, 488, 517, 515, 283], [378, 346, 336, 322, 2551, 1697, 7428, 376, 417, 1984, 236, 414, 234, 419, 318, 238, 287, 815, 410, 373, 531, 827, 260, 564, 276, 220, 450], [500, 431, 244, 340, 2429, 23958, 4238, 333, 2053, 371, 396, 295, 247, 289, 192, 306, 291, 298, 284, 322, 559, 251, 291, 270, 382], [272, 326, 256, 2457, 1768, 8653, 236, 296, 9955, 254, 327, 3055, 398, 3605, 281, 239, 928, 310, 372, 702, 304, 368, 319, 596, 584], [322, 356, 249, 1190, 809, 361, 2050, 258, 372, 285, 303, 2558, 218, 238, 354, 276, 243, 266, 516, 294, 931, 271, 182, 883], [303, 402, 274, 386, 2466, 9247, 11659, 235, 3090, 229, 274, 3620, 214, 247, 261, 315, 380, 221, 1985, 261, 398, 361, 332, 1028], [614, 427, 240, 259, 752, 363, 237, 3121, 1287, 700, 420, 285, 1888, 384, 323, 1243, 394, 284, 325, 676, 743], [353, 624, 283, 373, 2569, 0, 0, 319, 413, 6283, 0, 0, 233, 325, 4292, 182, 202, 297, 362, 289, 363, 547, 214, 421, 234, 510, 545], [522, 533, 437, 345, 2322, 17024, 10006, 231, 341, 5954, 5867, 529, 345, 293, 2420, 257, 227, 210, 408, 250, 299, 940, 344, 236, 269, 247, 467], [269, 327, 228, 431, 2320, 24156, 11645, 363, 316, 1980, 296, 574, 427, 1579, 23532, 146, 235, 246, 397, 344, 315, 638, 299, 242, 270, 411, 1541], [573, 569, 6124, 238, 482, 256, 405, 4008, 145, 290, 308, 407, 302, 413, 626, 210, 441, 238, 273, 641], [433, 479, 349, 332, 2359, 861, 23737, 709, 340, 356, 466, 333, 3983, 264, 362, 246, 496, 328, 302, 794, 258, 436, 237, 213, 269], [260, 361, 343, 206, 2419, 3078, 11287, 236, 306, 4161, 222, 421, 3651, 244, 2614, 193, 237, 195, 250, 280, 284, 499, 252, 352, 248, 434, 1132], [270, 559, 633, 368, 2056, 12104, 11480, 605, 272, 1284, 19292, 145, 233, 225, 269, 256, 308, 436, 210, 654, 382, 322, 941], [291, 350, 218, 238, 2600, 10325, 15477, 244, 355, 1872, 219, 472, 267, 266, 3946, 208, 224, 228, 245, 229, 255, 489, 234, 435, 295, 316, 696], [220, 249, 287, 264, 2508, 23867, 11392, 152, 227, 2135, 214, 434, 174, 300, 218, 168, 242, 246, 285, 194, 191, 509, 170, 316, 244, 180, 356], [212, 275, 219, 319, 2099, 3341, 8085, 208, 399, 2093, 237, 279, 1739, 25098, 4080, 239, 203, 262, 180, 211, 263, 453, 193, 293, 180, 172, 211]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

