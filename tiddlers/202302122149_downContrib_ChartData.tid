created: 20230212214943000
creator: Drevarr
modified: 20230705163519086
modifier: drevarr
tags: ChartData
title: 202302122149_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Venomina The Fierce", "Koisx", "Newtype Khan", "Sizklea", "Daring Deathblade", "Ace Hammers", "Smol Gluvs", "Tootsie Pop Bringer", "Ez Mode Mathus", "Rina Of Theros", "Morv\u00e4rth", "Minka Bringer", "Lord Erin The Wise", "Whose Guardian", "Be\u00eb", "Reverve Mk V", "Kosa\u00edr", "Harry Callahann", "Xanvias Tseli"];
const professions = ["Reaper", "Spellbreaker", "Dragonhunter", "Spellbreaker", "Dragonhunter", "Scourge", "Vindicator", "Scourge", "Scrapper", "Scourge", "Scourge", "Scourge", "Scrapper", "Weaver", "Willbender", "Scourge", "Herald", "Scrapper", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33102.0, 30445.0], [0.0, 17306.0, 34939.0, 0.0, 1507.0, 0.0, 0.0, 14924.0], [70268.0], [9914.0, 22158.0, 19114.0, 0.0, 0.0, 0.0, 4317.0, 19641.0], [18124.0, 36342.0, 21703.0, 0.0, 18142.0], [22061.0, 33102.0, 9228.0, 0.0, 18362.0, 0.0, 952.0, 18101.0], [12747.0, 42592.0, 24482.0, 0.0, 18664.0, 0.0, 8432.0, 23549.0], [42184.0, 45544.0, 39934.0, 0.0, 6484.0, 0.0, 3258.0, 24543.0], [19517.0, 101136.0, 0.0, 34846.0, 0.0, 0.0, 35031.0], [63329.0, 62989.0, 0.0, 5525.0, 0.0, 1627.0, 59645.0], [44124.0, 73440.0, 51190.0, 0.0, 6411.0, 0.0, 31.0, 38111.0], [47440.0, 57851.0, 44010.0, 0.0, 23805.0, 0.0, 10816.0, 30963.0], [49148.0, 102632.0, 49376.0, 0.0, 0.0, 6337.0, 20340.0], [32507.0, 85951.0, 63917.0, 0.0, 3265.0, 0.0, 0.0, 49577.0], [42949.0, 52872.0, 70246.0, 0.0, 40494.0, 0.0, 0.0, 36616.0], [48164.0, 99921.0, 100879.0, 0.0, 44591.0, 0.0], [69925.0, 83430.0, 111115.0, 0.0, 2129.0, 0.0, 5143.0, 54154.0], [124709.0, 126935.0, 0.0, 44210.0, 0.0, 12470.0, 106869.0], [152046.0, 126617.0, 101681.0, 0.0, 38925.0, 0.0, 26477.0, 82398.0], [135948.0, 195668.0, 166546.0, 0.0, 21720.0, 0.0, 3842.0, 100987.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

