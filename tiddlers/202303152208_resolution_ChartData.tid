created: 20230315220824000
creator: Drevarr
modified: 20230705163522254
modifier: drevarr
tags: ChartData
title: 202303152208_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Belvyn Brightblade", "Blanco Padre Guard", "Whose Guardian", "Sygaldry Verdandi", "Zaylen Harker", "Bella Sassy", "Ravioli Fetabringer", "Koralia Danai", "Johosh The Great"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 257.0408, 21.2196, 41.0141, 76.7026, 0.0, 44.7494, 0.0, 23.6582, 253.1866, 0.0, 248.7542], [121.3323, 83.9056, 189.7417, 0.0, 192.1234, 0.0, 0.0, 402.2145, 23.6318, 163.8144], [177.4937, 390.3752, 253.3045, 80.4888, 306.6466, 84.7053, 36.9646, 617.0203, 23.6439, 201.2688, 347.3537, 68.6614, 125.8688, 61.4986, 182.2937, 91.3104, 0.0, 182.4787, 248.6578, 82.5216, 174.355, 293.233], [202.6968, 320.2483, 488.5545, 28.4886, 277.897, 17.8074, 44.1386, 607.2188, 51.8441, 310.5864, 404.3064, 57.6464, 260.4644, 81.3965, 87.9648, 0.0, 89.6213, 0.0, 343.8686, 214.825, 0.0, 64.1306, 443.7763], [244.5698, 400.4554, 502.8223, 27.1026, 248.7672, 22.56, 30.4222, 742.1957, 22.9756, 211.9608, 326.1048, 40.1512, 327.393, 155.4835, 181.2941, 74.3544, 156.5006, 397.7784, 287.0194, 20.7917, 113.9242, 403.7299], [166.4995, 519.0982, 373.3976, 214.5053, 50.2637, 63.089, 676.3014, 45.0279, 306.0504, 538.3042, 39.5928, 335.4486, 23.9364, 38.1114, 124.6834, 5.1612, 119.8296, 278.857, 264.8549, 35.1859, 249.1226, 490.0435], [167.0155, 369.2718, 387.7331, 29.2824, 191.6482, 39.0739, 34.7424, 618.7916, 41.5287, 364.1112, 687.3352, 64.2114, 379.6873, 32.2431, 36.6374, 176.4294, 47.5088, 127.2226, 0.0, 293.1101, 339.7666, 28.5466, 196.6311, 408.3955], [287.3953, 399.0776, 368.3938, 16.7706, 224.1043, 17.8374, 52.3618, 626.8217, 29.9984, 495.4608, 824.6578, 24.0941, 333.4347, 24.2606, 141.2707, 156.3708, 0.0, 229.9896, 27.4123, 363.6, 307.5322, 48.2093, 223.4549, 474.2582], [346.7715, 458.1088, 516.1435, 59.661, 218.8771, 99.4445, 55.8134, 818.5999, 60.3247, 417.5712, 833.4753, 67.6462, 401.0346, 64.6651, 108.8896, 187.8915, 186.5376, 256.7986, 297.1958, 48.3974, 361.274, 468.5818], [360.0677, 465.1433, 496.5337, 411.9034, 77.7117, 40.4614, 780.8111, 92.1213, 454.3128, 825.9587, 40.0835, 462.3914, 35.5077, 94.2256, 114.854, 20.24, 115.8149, 38.1584, 314.5867, 321.8645, 308.1658, 652.873]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

