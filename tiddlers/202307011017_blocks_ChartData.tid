created: 20230701101710000
creator: Drevarr
modified: 20230705163540286
modifier: drevarr
tags: ChartData
title: 202307011017_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Atros Shroudkeeper", "Gamora Titus", "Dizzy Bunnyhopper", "No Reserv\u00e9", "Trodek", "Govinda Ektar", "Valkren Sothur", "Elonith Requiem", "Sister Elonith", "Legacy Of Mathus", "F\u00f9gly", "Sakis Ranger", "Violet Stab", "Drumina", "Latedoctor", "Charr Surethang", "Wall Knot", "Ryvalia Fazebringer", "Bella Sassy", "Drevarr Moonwillow", "Gestern Yesteryear"];
const professions = ["Vindicator", "Dragonhunter", "Holosmith", "Vindicator", "Scrapper", "Vindicator", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Tempest", "Druid", "Firebrand", "Druid", "Reaper", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 10, 0, 1, 4, 0, 4, 1, 6], [5, 2, 13, 9, 0], [2, 22, 0, 5, 0, 2, 2, 2], [15, 2, 3, 1, 2, 5, 8], [0, 6, 3, 24, 0, 4, 1, 0, 0, 0, 1], [3, 0, 6, 2, 2, 4, 2, 16, 0, 3, 3, 0, 0], [25, 19], [3, 20, 0, 5, 3, 0, 1, 5, 7], [0, 0, 8, 8, 0, 12, 13, 7, 6], [0, 2, 12, 14, 3, 2, 17, 0, 2, 2, 3, 0, 7], [30, 37], [0, 0, 4, 9, 0, 9, 18, 37], [35, 43, 6], [4, 0, 5, 15, 17, 6, 3, 22, 1, 4, 0, 4, 3, 8], [1, 0, 4, 9, 0, 12, 27, 17, 3, 2, 11, 0, 1, 6, 0, 4, 3, 7], [1, 1, 2, 3, 1, 10, 14, 22, 7, 2, 26, 0, 3, 4, 2, 4, 5], [29, 29, 3, 24, 7, 2, 0, 2, 5, 12], [27, 29, 8, 8, 34, 0, 4, 11, 1, 5, 13], [2, 0, 13, 10, 1, 16, 37, 35, 12, 6, 39, 0, 3, 9, 1, 6], [2, 22, 24, 31, 8, 9, 45, 1, 8, 7, 0, 0, 3, 44], [3, 1, 8, 19, 3, 23, 26, 41, 10, 6, 46, 0, 4, 6, 3, 6, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

