created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Lady Fluffs", "Fyshaye", "Latedoctor", "Necrotic Windrunner", "Aloepen", "Aezlenne", "Luke The Ghastly", "Smol Gluvs", "Elvezio Figone", "St\u00e1rless", "Drac Tepes", "Grasszanine", "Vee Usagi"];
const professions = ["Druid", "Druid", "Reaper", "Scourge", "Reaper", "Chronomancer", "Scourge", "Reaper", "Virtuoso", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0435, 0.0, 0.0351, 0.0, 0.1852, 0.0625, 0.0192, 0.05, 0.0891, 0.0303, 0.0303, 0.0538, 0.0714, 0.0571, 0.0331, 0.0538, 0.0714, 0.1], [0.0386, 0.0922, 0.0822, 0.0821, 0.0, 0.0377, 0.125, 0.0923, 0.125, 0.1119, 0.2353], [0.0143, 0.0338, 0.0263, 0.2105, 0.5556, 0.0, 0.0769, 0.03, 0.0, 0.0, 0.0, 0.075, 0.0, 0.375, 0.1493, 0.2647], [0.0, 0.0094, 0.55, 0.5385, 0.5, 0.2537, 0.5], [0.0, 0.4, 0.0242, 0.1773, 0.1217, 0.1333, 0.0, 0.1045, 0.0566, 0.275, 0.0, 0.2188, 0.1343, 0.2941], [0.0286, 0.0992, 0.0215, 0.1429, 0.0625, 0.2, 0.058, 0.0922, 0.1414, 0.0, 0.1716, 0.0172, 0.0189, 0.05, 0.2615, 0.0312, 0.2612, 0.0588], [0.2574, 0.4462, 0.2879, 0.0, 0.957, 0.2411], [0.1505, 0.1518, 0.1857, 0.314, 0.0108, 0.0357, 0.0938, 0.3, 0.2899, 0.2624, 0.2533, 0.0, 0.3284], [0.5797, 0.6028, 0.3947, 0.0667, 0.0, 0.9403, 0.0345], [0.3385, 0.303, 0.0, 0.3763, 0.2321, 0.3571, 0.2479, 0.0108, 0.1429, 0.125, 0.75, 0.3237, 0.4043, 0.0, 0.0, 0.0, 0.6194, 0.0345, 0.0094, 0.0, 0.8308, 0.8125, 0.1418, 0.4412], [0.1188, 0.0923, 0.5758, 0.0, 0.5914, 0.1339, 0.2857, 0.3967, 0.0, 1.1429, 0.0, 0.75, 0.3333, 0.2979, 0.3289, 0.0, 0.3881, 0.0, 0.0, 0.6, 0.6154, 0.7812, 0.4627, 0.8235], [0.0, 0.0913, 0.145, 0.1782, 0.4385, 0.1515, 0.0, 0.8387, 0.4732, 0.1429, 0.3554, 0.0, 0.3929, 0.0, 0.825, 0.2415, 0.539, 0.3454, 0.0, 0.5672, 0.0, 0.0, 0.05, 1.0923], [0.1643, 0.1053, 0.1053, 0.08, 0.0, 0.8906, 0.226, 0.18, 0.3762, 0.3385, 0.8333, 0.0606, 0.7957, 0.5268, 0.7143, 0.5124, 0.1505, 1.8571, 0.0938, 0.875, 0.5121, 0.5816, 0.2763, 0.3833, 0.0, 1.2015, 0.0862, 0.0377, 0.25, 0.8308, 0.4688, 0.709, 1.0294]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

