created: 20230625214748000
creator: Drevarr
modified: 20230705163536263
modifier: drevarr
tags: ChartData
title: 202306252147_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Caelon Cai", "Duke Silvver", "Tika Fiery", "Newtype Khan", "Grasszanine", "Irish Necroman", "Blancooo Padreee", "Tribal S", "Lord Erin The Wise", "Primal Clone", "Riann Swordbreak", "Xyntharos", "Be\u00eb", "Morton Saltbringer", "Sakis Ranger", "Xanvias Tsolice", "Smol Gluvs", "Gestern Yesteryear", "Drevarr Moonwillow", "Tacitus Kilgore I", "Bella Sassy"];
const professions = ["Reaper", "Vindicator", "Firebrand", "Spellbreaker", "Spellbreaker", "Reaper", "Spellbreaker", "Druid", "Weaver", "Chronomancer", "Berserker", "Vindicator", "Reaper", "Chronomancer", "Druid", "Weaver", "Reaper", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[316, 438, 329, 549, 1289, 220, 241, 243, 240, 1421, 360, 595, 263, 625, 370], [336, 346, 373, 611, 1136, 295, 384, 273, 276, 562, 552, 790, 298, 266, 1168], [366, 308, 411, 505, 1405, 224, 307, 253, 290, 1099, 725, 301, 260, 502, 344], [503, 321, 363, 230, 1223, 287, 263, 204, 288, 2969, 479, 304, 262, 291, 533], [361, 450, 290, 654, 2041, 233, 356, 239, 332, 1439, 394, 384, 279, 257, 625], [303, 362, 633, 689, 2246, 326, 270, 324, 602, 1926, 1519, 465, 391, 230, 523], [305, 390, 775, 602, 2185, 335, 251, 244, 8949, 396, 817, 1274, 424, 591, 2138], [392, 303, 406, 337, 2233, 328, 244, 258, 256, 1844, 400, 476, 301, 483], [372, 698, 1284, 1114, 659, 386, 341, 366, 1869, 6990, 514, 1106, 763], [236, 389, 250, 284, 640, 477, 812, 345, 207, 2145], [375, 491, 560, 578, 667, 314, 369, 292, 265], [406, 415, 394, 488, 1441, 257, 282, 244, 394, 442, 361, 276, 320, 349, 562], [328, 699, 387, 235, 1899, 213, 309, 264, 246, 1349, 810, 633, 240, 627, 5340], [260, 486, 454, 270, 852, 217, 273, 198, 2162, 1307, 1147, 306, 541, 4267], [342, 367, 330, 323, 1865, 217, 223, 211, 199, 471, 320, 674, 292, 398, 685], [357, 436, 454, 680, 1091, 243, 269, 203, 222, 474, 361, 266, 212, 275, 281], [477, 346, 269, 716, 732, 216, 296, 206, 244, 576, 266, 266, 721, 448], [217, 255, 221, 296, 919, 198, 186, 184, 204, 466, 247, 336, 188, 324, 669], [165, 259, 243, 402, 2045, 182, 160, 180, 212, 442, 508, 313, 181, 343, 323], [148, 201, 586, 260, 216, 204, 330, 1349], [241, 190, 239, 234, 1192, 192, 171, 176, 172, 260, 321, 295, 194, 323, 600]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

