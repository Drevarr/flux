created: 20230527000807000
creator: Drevarr
modified: 20230705163531791
modifier: drevarr
tags: ChartData
title: 202305270008_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Maw Rev", "Venomina The Siren", "Oo Dads Mad", "Primo Pobre", "Zefirokai", "Eibh\u00ebar", "Ryvalia Fazebringer", "Air One Com", "Primal Clone", "Black Raspberry Pie", "Newtype Khan", "Arriasa", "Gavann", "Sub Train", "Zaedy Sagemist", "Blanco Padre Guard", "Miphest\u00f6", "Tika Fiery", "Johosh Of The North", "Bella Sassy", "Aronorf Xideliesi", "Lucas Ryn", "Elonith Primal", "Drevarr Moonwillow", "Solus Sanctus", "Koralia Danai"];
const professions = ["Renegade", "Tempest", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.2165, 35.5094, 131.0848, 60.3086, 76.8453, 14.9888, 126.8149, 17.819, 48.8422, 157.177, 0.0, 17.8529, 44.9918, 42.5412], [77.4144, 139.1702, 36.7164, 39.6933, 39.816, 0.0, 51.145, 68.8536, 0.0, 0.0, 0.0, 0.0, 58.7059, 67.3618, 19.0481, 0.0, 18.5655, 0.0, 59.7202, 103.6032, 0.0, 9.8065, 103.5234, 57.024], [137.687, 167.041, 17.076, 145.6128, 10.3141, 21.6691, 41.8152, 7.1082, 63.408, 36.2953, 13.7616, 104.7424, 12.9636, 36.6048, 25.3382, 20.723, 103.0433, 0.0, 37.1484, 86.6995, 0.0], [91.6133, 77.1101, 234.071, 109.6358, 51.6851, 0.0, 27.2097, 0.0, 0.0, 113.5119, 175.4438, 0.0, 81.8218, 71.9304, 77.8896], [389.0995, 359.3856, 79.0277, 0.0, 0.0, 209.5459, 19.9474, 138.697, 57.3466, 0.0, 88.2456], [159.8054, 198.7622, 36.2502, 24.0768, 0.0, 227.7475, 33.223, 64.3507, 45.3994, 0.0, 103.4194, 63.1483, 41.7811, 121.175, 60.264, 40.1138, 0.0, 40.3725, 5.1955, 0.0, 59.829, 137.2742, 20.912, 30.0231, 36.4588, 41.2776], [197.0381, 208.6637, 20.7477, 0.0, 0.0, 290.9981, 36.8994, 55.0118, 42.7584, 0.0, 86.2959, 46.797, 49.4966, 51.5558, 0.0, 54.8626, 55.4236, 17.1806, 73.9672, 14.193, 22.3885, 51.2354, 158.5402, 17.536, 48.1275, 83.1431, 50.5764], [295.8336, 179.3261, 0.0, 0.0, 3.7632, 397.705, 25.9044, 94.6291, 89.9813, 0.0, 14.4957, 102.069, 0.0, 56.1971, 25.4448, 73.2849, 0.0, 216.3025, 14.9101, 14.8544, 55.7497, 122.279, 3.776, 54.7155, 38.786, 8.0676], [195.5635, 192.3446, 0.0, 24.7456, 0.0, 247.0867, 39.146, 64.7885, 43.8902, 0.0, 84.8548, 54.3969, 44.1725, 148.1446, 14.5998, 42.1402, 54.3554, 13.7932, 121.3141, 25.3417, 15.1669, 80.9323, 179.8061, 15.584, 82.1739, 53.7362, 52.3908], [204.2266, 240.935, 42.4861, 0.0, 21.2912, 279.167, 42.1415, 62.8186, 84.2592, 0.0, 74.5128, 63.1483, 51.4819, 138.9875, 82.4501, 60.6455, 3.8524, 93.2203, 0.0, 0.0, 57.5446, 151.1789, 19.568, 79.7599, 48.1652, 51.7752], [201.0931, 192.1613, 21.855, 0.0, 0.0, 321.2582, 47.5879, 73.1789, 60.4277, 21.5424, 90.9582, 37.7692, 33.84, 154.0403, 60.889, 38.0369, 25.0625, 127.6008, 0.0, 15.792, 74.2967, 209.1149, 21.44, 58.1855, 78.1362, 36.9684], [453.0586, 504.0566, 188.0696, 15.3824, 490.3056, 40.055, 136.261, 39.4416, 175.7282, 111.9258, 119.929], [480.3379, 480.2198, 176.5884, 642.744, 140.2291, 106.8331, 0.0, 152.586, 110.6822, 20.3942], [478.3104, 352.7846, 23.1954, 0.0, 0.0, 464.8234, 0.0, 331.0195, 51.5616, 0.0, 87.6522, 91.2449, 22.7405, 158.3053, 0.0, 70.4866, 74.4717, 0.0, 216.9901, 0.0], [490.1069, 519.8256, 144.0099, 4.0128, 675.0518, 84.6234, 222.455, 243.5971, 0.0, 150.2972, 106.5368, 78.8246, 98.345], [480.8909, 416.7773, 0.0, 0.0, 443.8915, 74.6838, 60.4838, 61.5595, 0.0, 61.1192, 126.8492, 24.5453, 164.7027, 10.8509, 154.9454, 50.6764, 12.1549, 139.8795, 0.0, 103.0691, 289.68, 0.0, 132.7656, 105.2158], [533.7907, 786.0643, 0.0, 869.809, 127.616, 152.5594, 130.0987, 5.4648, 79.4295, 181.2922, 45.4358, 226.4192, 20.659, 78.0754, 245.2522, 347.1448, 0.0, 10.0016, 164.3666, 189.3485], [666.6854, 462.984, 100.533, 0.0, 0.0, 630.2304, 79.2451, 299.3549, 217.439, 0.0, 186.4092, 135.094, 178.9008, 336.5555, 18.0969, 140.8392, 191.4902, 0.0, 223.0803, 58.0978, 0.0, 74.0792, 437.9962, 0.0, 169.2259, 287.2985, 108.702], [555.9091, 626.1744, 127.5166, 0.0, 11.648, 808.151, 119.106, 170.6534, 167.9525, 218.6218, 153.4719, 113.7024, 358.2566, 106.5557, 150.961, 0.0, 314.9254, 18.5632, 0.0, 213.6983, 455.1725, 10.624, 112.9513, 212.1947, 113.6916], [372.8794, 514.5082, 108.9253, 0.0, 21.3136, 686.2003, 140.0406, 207.3523, 202.6622, 0.0, 141.3964, 196.9065, 77.3808, 486.5818, 0.0, 192.1752, 221.0415, 0.0, 440.9545, 32.9726, 47.9517, 148.1584, 556.8672, 52.88, 132.5644, 182.6468, 125.2584], [643.8298, 583.8182, 162.4846, 36.7673, 596.5574, 105.6602, 243.5405, 155.3765, 0.0, 237.7799, 172.3105, 61.3181, 257.9046, 163.8734, 176.0618, 69.1875, 364.1386, 33.3935, 220.2795, 612.7584, 154.692, 264.45, 150.984], [757.9238, 694.9344, 53.9673, 0.0, 21.7168, 753.5462, 120.5016, 341.2339, 211.9685, 65.736, 267.958, 202.4798, 100.9334, 382.0902, 0.0, 110.7072, 191.6089, 0.0, 207.2653, 0.0, 223.271, 367.3824, 15.184, 99.0713, 110.3638, 167.4432], [520.704, 581.2512, 117.609, 15.6666, 832.0406, 104.4347, 274.6214, 162.6077, 80.3682, 265.7539, 75.4463, 111.2208, 385.9789, 20.0117, 144.1872, 205.2571, 34.7377, 317.9705, 18.7932, 18.276, 98.6091, 452.7187, 69.952, 144.4832, 300.4152, 125.55], [590.377, 553.1971, 137.9488, 55.6776, 35.3024, 709.1798, 99.3628, 253.7549, 204.1714, 80.7246, 273.7223, 93.3636, 158.8224, 363.0234, 13.7996, 97.9402, 145.7984, 70.8259, 406.7704, 22.3921, 16.5158, 164.3666, 389.0573, 70.288, 160.4251, 315.8591, 95.2884], [604.9382, 788.9981, 128.4491, 0.0, 0.0, 814.2941, 66.0376, 337.0752, 212.2829, 0.0, 222.6908, 163.2366, 107.8819, 244.608, 188.113, 161.2268, 0.0, 468.5571, 29.0489, 37.8843, 208.912, 547.3248, 5.952, 111.0906, 269.5274, 77.4684], [870.359, 922.6675, 157.8805, 51.6815, 13.5856, 1021.3373, 170.234, 328.5389, 285.2866, 0.0, 291.9479, 181.937, 161.3491, 705.0982, 139.009, 289.4012, 22.0736, 350.3864, 76.661, 23.6715, 335.967, 641.5219, 24.032, 177.0208, 314.2371, 164.9484]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

