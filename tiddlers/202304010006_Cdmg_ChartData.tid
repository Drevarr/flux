created: 20230401000636000
creator: Drevarr
modified: 20230705163523567
modifier: drevarr
tags: ChartData
title: 202304010006_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Jeckyll Mbs", "Abigail Ryn", "Sister Elon\u00edth", "Aronorf Xideliesi", "Arkintor", "Fungus", "Legacy Of Mathus", "Brioche Bunbringer", "Smol Daddy Tika", "Lord Erin The Wise", "Il Kurai Il", "Dark Sidiuz", "Estryl", "Ateriuz", "Panther B Me", "Rozaalyna", "Sp\u00edcy Cheese", "Xanvias Tlesel", "Rina Of Theros", "Nazhul Naxxremis", "Smol Gluvs", "Be\u00eb"];
const professions = ["Tempest", "Berserker", "Tempest", "Dragonhunter", "Firebrand", "Tempest", "Scourge", "Berserker", "Chronomancer", "Berserker", "Weaver", "Scourge", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[81.6176, 0.0, 43.75, 20.9138, 32.4831, 14.9815, 5.8095, 121.6512, 94.3727, 0.0, 5.4157, 0.0, 29.7857, 81.3392], [91.3309, 36.7037, 41.5476, 66.2586, 103.7753, 43.5926, 0.0, 0.0, 50.9909, 0.0, 0.0, 7.3567, 0.0, 0.0, 28.4667, 2.8022, 67.1299, 0.0, 2.1111], [6.9779, 2.7778, 19.2857, 34.1207, 122.191, 61.7315, 119.3333, 5.0698, 147.3364, 0.0606, 124.0449, 6.8182, 8.2321, 42.3977], [129.618, 42.4907, 41.2024, 65.6512, 68.3455, 0.0, 7.0506, 38.75, 67.4094, 78.5333, 197.5926, 71.637, 23.2088, 0.0, 16.4815, 35.3232, 7.1176, 57.2, 19.213, 38.8667, 40.3472, 11.6875, 2.713, 11.0, 15.8264], [43.8382, 40.9074, 53.9167, 19.6897, 41.618, 50.4352, 5.4643, 22.2093, 36.2455, 0.0, 43.7921, 0.0, 27.7321, 47.1871, 57.7333, 21.7259, 13.3297, 113.6883, 0.0, 46.6768, 32.1471, 0.0, 3.7037, 68.8667, 6.8958, 0.0, 80.9487, 41.4711], [35.7132, 0.0, 40.881, 42.7759, 2.4719, 65.75, 33.9524, 164.4884, 19.1182, 1.3535, 78.5393, 0.0, 79.8393, 40.4386, 75.2222, 25.9333, 37.8022, 154.6234, 8.0505, 29.1765, 0.0, 1.9907, 14.28, 0.0, 0.3333, 11.0522, 0.0, 42.719], [327.0222, 29.037, 152.7852, 148.6044, 102.026, 107.5152, 1.5441, 37.9333, 71.5833, 154.7733, 0.3472, 56.125], [118.7426, 12.0833, 75.5952, 67.6552, 144.0674, 59.7778, 0.0, 21.5814, 123.9727, 0.5556, 14.9831, 31.4091, 112.4643, 31.5263, 0.0, 0.0, 229.0933, 0.0, 10.5625, 0.0, 27.2564, 0.0], [27.7868, 8.3148, 2.5119, 79.2414, 23.8652, 119.4352, 120.131, 88.3256, 58.4364, 0.6061, 102.8315, 9.0909, 37.625, 55.4737, 94.7111, 66.8519, 15.978, 123.8182, 0.0, 79.0707, 28.0882, 58.4333, 12.9907, 8.8533, 3.2917, 6.4583, 0.0609, 15.7179, 57.5289], [196.8603, 63.1944, 25.4881, 23.8621, 86.0787, 14.7593, 46.1548, 131.3953, 31.5273, 1.0202, 16.1854, 0.0, 41.1071, 39.9649, 12.7778, 0.0, 85.4889, 1.3736, 75.5325, 0.0, 14.404, 69.5147, 0.0, 63.6019, 169.2933, 0.0, 55.9375, 4.3826, 15.359, 46.7603], [36.0882, 60.6574, 0.0, 88.3793, 106.8764, 54.1944, 120.2262, 120.6279, 78.0273, 0.0, 98.3315, 0.0, 51.2857, 82.4327, 9.0222, 97.4074, 106.6074, 21.3516, 147.8961, 2.6667, 79.5657, 13.5294, 0.0, 5.3796, 271.6, 0.0, 33.2708, 2.7304, 56.2066], [70.625, 42.4722, 273.2143, 163.5345, 278.8989, 258.6111, 279.369, 224.7674, 273.9455, 2.2828], [65.7059, 36.963, 8.0714, 74.7191, 165.0833, 93.9167, 159.5814, 279.6455, 0.0, 144.1573, 6.7273, 57.1071, 63.7076, 19.6593, 1.9121, 118.4416, 86.3704, 79.0404, 69.0441, 0.0, 42.963, 168.1467, 0.0, 15.0625], [142.3971, 13.4815, 225.1429, 24.0345, 283.3034, 147.5278, 68.631, 0.0, 99.2636, 0.0, 49.7416, 0.0, 144.8363, 99.0, 0.0, 204.4148, 78.7253, 46.7532, 0.0, 11.0707, 59.4853, 9.2667, 65.4352, 121.3867, 0.0, 31.7708, 10.9739, 79.5897, 146.7355], [40.4537, 130.0714, 0.0, 188.4607, 174.213, 57.2262, 175.093, 175.4182, 1.4848, 195.9888, 19.0909, 178.8929, 98.1579, 116.2667, 0.0, 173.6222, 36.1209, 159.9091, 15.5185, 112.6162, 21.8529, 13.4, 0.0, 235.36, 0.0, 18.9583, 2.9043, 0.0, 102.5537], [123.9118, 30.9444, 156.9405, 139.1897, 182.7865, 313.287, 94.2619, 211.3953, 125.7909, 0.0, 49.6685, 0.0, 118.5357, 113.9649, 103.9778, 19.0741, 155.7704, 1.8681, 13.1169, 2.5926, 66.404, 0.0, 55.5, 69.3241, 478.24, 1.1389, 75.9583, 2.4348, 86.8205, 64.8017], [234.1838, 2.5926, 285.0, 249.1207, 25.3933, 220.9907, 164.0595, 101.907, 44.7636, 64.6348, 3.8182, 98.3036, 95.9766, 82.3333, 195.7704, 126.7253, 8.7778, 16.9899, 168.3382, 3.5, 126.4259, 293.04, 10.0208, 0.0, 42.7949, 132.157], [41.7353, 43.4259, 213.5238, 153.7069, 48.9101, 176.7593, 97.7262, 6.7209, 30.6455, 0.0, 365.6236, 22.875, 223.0234, 13.8444, 174.5704, 0.0, 158.6753, 0.0, 125.7879, 161.8235, 3.4, 53.6111, 120.4133, 0.0, 52.6875, 0.0, 153.7686], [211.0147, 28.6389, 126.0952, 63.9655, 211.7416, 120.8704, 46.1071, 200.3488, 135.2636, 3.6768, 61.4438, 8.0, 170.875, 171.883, 0.0, 166.1926, 86.5495, 281.7403, 0.0, 142.0909, 47.6176, 52.9333, 106.3519, 212.04, 4.375, 253.0208, 0.0, 40.2051, 168.3884], [217.4632, 66.5741, 341.9762, 191.2241, 108.2022, 399.8889, 100.5238, 389.2558, 55.3636, 1.6364, 184.6011, 34.9545, 166.0536, 92.2982, 75.4444, 102.1926, 22.9011, 254.6104, 21.3333, 163.1111, 67.2647, 88.4667, 79.7593, 303.9067, 8.1111, 22.9792, 8.3043, 82.359, 90.0579], [244.4706, 50.3333, 233.5595, 220.2414, 448.2022, 179.0, 321.4524, 264.9302, 325.8, 2.303, 69.736, 5.7273, 136.5893, 161.0585, 90.0667, 7.4444, 333.9481, 102.1319, 308.6104, 3.2222, 239.2323, 85.9706, 28.8, 125.9167, 314.5067, 20.25, 0.0, 18.3077], [132.3235, 50.5185, 284.3571, 3.2241, 134.2135, 381.8519, 232.3929, 445.3256, 359.2455, 4.8384, 19.8483, 0.0, 268.2857, 212.6316, 94.3778, 53.963, 131.6444, 59.5604, 208.013, 2.0, 120.798, 145.2794, 128.6333, 238.8611, 271.2133, 1.2639, 46.0625, 1.0174, 51.2308, 413.405], [297.1985, 138.6667, 195.7619, 296.0, 374.4607, 352.4074, 253.7976, 369.8605, 277.9364, 2.8586, 195.1854, 3.0909, 238.1429, 264.1462, 113.0, 285.0741, 194.4176, 195.7662, 8.5556, 240.8182, 106.6324, 27.4667, 228.9352, 308.1733, 0.0833, 229.25, 0.0435, 107.4103, 313.7851]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

