created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "My Birthday Girl", "Name Is What", "Kisumaiasu", "Be\u00eb", "Oo Dads Mad", "Glorious Gluvs", "Marshall R", "Rozaalyna", "Arcanophage Farra", "Venomina The Sly", "Cedryn X", "Grasszanine", "Primal Clone", "Xanvias Einzbern", "Mistwalker Cael", "Zaedy Zae", "Newtype Khan", "Ex Warcraft", "High Sorcer Baradun", "Tribal S", "Sub Train", "Blanco Padre Guard", "Aira Draugr", "Etchery Howls", "Audens Silvermarker", "Rayla Shadowmoon", "Crusader Siolith", "Klenga", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Arriasa", "Cat Wigglebooty", "Ryvalia Fazebringer", "Tegan Parker", "Drevarr Moonwillow", "Solus Sanctus", "Belvyn Brightblade", "Bella Sassy", "Koralia Danai", "Rahani Sunray", "Darkandshadow", "Necrotic Windrunner", "K\u00e2 \u00d4tik R\u00e6j", "Lord Sahan", "Klikkin", "Luke The Ghastly", "Isis Urd", "Funkertron", "Smythe The Noble"];
const professions = ["Vindicator", "Scrapper", "Scourge", "Scourge", "Scourge", "Berserker", "Berserker", "Herald", "Scourge", "Spellbreaker", "Druid", "Berserker", "Spellbreaker", "Chronomancer", "Berserker", "Vindicator", "Druid", "Spellbreaker", "Tempest", "Tempest", "Druid", "Firebrand", "Firebrand", "Herald", "Druid", "Firebrand", "Herald", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Druid", "Scrapper", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Virtuoso", "Scourge", "Berserker", "Firebrand", "Holosmith", "Scourge", "Untamed", "Herald", "Mechanist"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[297.6094, 522.066, 205.2759, 0.0, 0.0, 180.3167, 19.7551, 294.7855, 14.1875, 23.1228, 18.0638, 0.0, 431.2857, 120.7436, 0.0], [391.9841, 550.1243, 317.7708, 0.0, 7.5926, 173.8205, 80.033, 77.381, 68.9464, 0.0833, 0.0, 222.4354, 0.0, 0.0], [337.9688, 547.3417, 238.3171, 0.0, 20.8957, 0.0, 211.4891, 326.6774, 0.0, 55.7778, 0.0, 369.6372, 9.0909, 0.0], [90.8095, 556.2362, 448.0, 0.0, 24.7333, 58.4123, 12.0435, 106.3913, 11.9123, 25.7544, 0.0, 0.0, 496.9615, 30.1316, 0.0], [123.4603, 491.5387, 196.9623, 15.6825, 85.7107, 0.0, 100.9498, 51.9167, 27.7407, 114.6, 5.3617, 461.3341, 157.878, 0.0], [146.0476, 594.4456, 457.2721, 0.0], [179.4062, 494.4508, 182.7847, 0.0, 10.9, 55.1333, 0.0, 223.8989, 41.9365, 160.3333, 8.5676, 0.0, 371.4819, 9.3478, 0.0], [242.7143, 513.2419, 379.351, 0.0, 58.0339], [146.2656, 499.466, 250.9578, 0.0, 0.0, 44.9825, 39.9, 12.6379, 7.4286, 3.9722, 0.0, 326.0979, 33.3429, 0.0], [168.5, 393.938, 207.5052, 7.1163, 312.453, 0.0, 164.6882, 192.6721, 11.5926, 0.0, 17.0851, 239.7068, 197.88, 19.5758], [66.375, 471.6378, 279.4734, 0.0, 289.1176, 26.2759, 91.3784, 35.7586, 0.0, 0.0, 0.0, 275.6538, 27.3514], [95.8095, 468.7491, 274.716, 0.0, 0.0, 91.3431, 0.0, 101.403, 666.2778, 0.0], [56.619, 399.9616, 234.1477, 0.0, 16.1, 104.469, 0.0, 95.6065, 76.0952, 12.9057, 6.3409, 0.0, 294.1406, 0.0], [68.9844, 374.8664, 294.3417, 0.0, 0.0, 44.8814, 0.0, 149.7107, 23.0154, 0.0, 0.0, 437.7149, 68.3333], [104.4688, 362.0469, 221.9543, 0.0, 71.3158, 0.0, 213.09, 51.4516, 52.7358, 92.5333, 276.8118, 43.8947], [169.6885, 326.8665, 191.3399, 0.0, 6.3, 47.3846, 0.0, 271.4011, 16.4194, 310.8727, 3.825, 0.0, 357.2789, 106.44], [129.7258, 376.669, 173.0051, 17.6774, 22.2696, 54.6087, 158.6818, 9.7049, 113.5455, 0.0, 3.2766, 279.6233, 20.9118, 0.0], [134.1613, 413.1212, 189.4381, 0.0, 17.4483, 34.5043, 0.0, 225.3965, 25.0984, 92.3704, 7.5106, 6.0455, 176.4707, 110.625, 0.0], [70.7188, 456.0747, 298.2069], [73.9062, 440.7388, 347.0722, 0.0, 58.973, 271.1019, 17.5893, 0.0, 189.851, 16.2632, 0.0], [155.0635, 330.5521, 200.4907, 16.5439, 0.0, 182.8495, 52.9194, 25.4035, 2.3409, 288.7211, 7.5652], [111.6935, 361.8518, 157.6672, 0.0, 33.5, 0.0, 134.3946, 5.15, 0.0, 0.0, 8.5556, 270.9613, 15.84, 0.0], [90.4127, 380.1833, 135.9805, 0.0, 0.0, 20.0261, 0.0, 154.9841, 10.871, 0.0, 0.0, 0.0, 200.4989, 7.1, 0.0], [215.2295, 544.6153, 417.7755, 0.0, 0.0], [68.8095, 330.698, 166.0772, 5.2143, 35.3158, 6.8511, 83.4963, 13.0164, 33.8, 34.3143, 12.1042, 300.8269, 0.0], [190.9385, 493.9401, 115.3844, 0.0, 0.0, 216.6034, 0.0, 88.6581, 40.9153], [161.0333, 533.9376, 146.6593], [36.7458, 359.591, 184.9862, 49.3981, 0.0, 85.4964, 5.15, 5.4889, 0.0, 0.0, 218.1284, 31.7083, 0.0], [47.0938, 313.7143, 273.5339, 0.0, 44.6271, 9.2414, 47.1434, 4.6885, 25.463, 0.0, 0.0, 172.1111, 12.0541, 0.0], [113.3016, 296.6125, 234.6225, 0.0, 0.0, 40.9407, 54.9926, 16.3158, 62.0, 0.0, 0.0, 186.631, 18.0811], [23.1207, 339.3825, 157.6775, 0.0, 0.0, 71.7, 0.0, 59.1752, 4.2105, 0.0, 0.0, 0.0, 194.6953, 0.0, 654.2941], [48.1406, 284.9388, 154.6284, 34.4324, 0.0, 103.5801, 14.0, 6.7255, 97.6889, 5.1042, 256.4059, 0.0], [134.625, 435.4379, 195.5651, 55.5128, 8.7273, 0.0, 68.463, 39.0645, 0.0, 0.0, 229.918, 53.3889], [170.8871, 263.2205, 186.9348, 0.0, 3.0606, 84.9646, 0.0, 56.2431, 24.0159, 8.2909, 7.4894, 0.0, 177.3982, 50.1538], [84.7903, 262.6832, 157.2633, 23.0, 27.7589, 49.6377, 330.6842, 5.8868, 201.4374, 8.1739, 0.0], [215.7619, 236.0801, 129.5766, 0.0, 6.3548, 16.4348, 0.0, 134.856, 0.0, 0.0, 2.4762, 0.0, 184.2217, 43.8974, 0.0], [22.9661, 248.9145, 116.4895, 0.0, 42.5517, 0.0, 53.3232, 0.0, 0.0, 0.0, 222.5383, 27.56, 0.0], [98.7937, 470.1312, 209.8126, 0.0, 0.0], [157.9538, 243.9704, 144.8838, 0.0, 10.5556, 0.0, 27.4084, 22.0984, 16.898, 2.2222, 0.0, 164.2523, 2.1892], [133.7869, 212.3142, 125.9329, 0.0, 9.2655, 0.0, 73.7183, 9.9516, 0.0, 0.0, 163.224, 0.0], [0.0, 37.6803, 16.7705, 0.0, 12.2727, 536.4867, 63.96], [543.2096, 67.8611, 22.2353], [0.0, 63.9164, 136.1719, 18.7636, 62.2051, 0.0, 329.4817, 11.9615], [21.3958, 261.5831, 14.8636], [238.381], [117.7288, 47.3061, 224.0324, 185.5833], [1680.6944, 151.24, 0.0], [37.4921, 87.0278, 0.0, 154.06], [188.2143, 0.0], [10.3235, 6.2353]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

