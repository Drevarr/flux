created: 20230626090515000
creator: Drevarr
modified: 20230705163539049
modifier: drevarr
tags: ChartData
title: 202306260905_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Vesnan", "Necrotic Windrunner", "Smol Gluvs", "Drev Of The Dead", "Vesnan", "Geradenil", "Necrotic Windrunner", "C H A R C O A L", "Govinda Ektar", "Koralia Danai", "Koralia Danai", "Latedoctor", "Urilstormwalker", "Gamora Titus", "Louie Runesoldier", "Yngvar The Burdened", "Brace Stonebrow", "Utopia Skye", "Elonith Requiem", "Charr Surethang", "Drevarr Moonwillow", "Traidoruns Maximus", "Gestern Yesteryear", "Illusive Heart"];
const professions = ["Reaper", "Scourge", "Reaper", "Reaper", "Scourge", "Vindicator", "Reaper", "Scourge", "Vindicator", "Firebrand", "Dragonhunter", "Reaper", "Firebrand", "Dragonhunter", "Tempest", "Scourge", "Firebrand", "Tempest", "Reaper", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.3654, 0.2451, 0.1905, 0.1825], [0.1429, 0.0233, 0.0833, 0.0832, 0.0462, 0.2941, 0.25], [0.0656, 0.3269, 0.1961, 0.4634, 0.1905, 0.3699], [0.0727, 0.0698, 0.6364, 0.3109, 0.2509], [0.0183, 0.3785, 0.2148], [0.1039, 0.0, 0.2917, 0.2068, 0.0615, 0.0588, 0.4167], [0.0122, 0.3785, 0.2919], [0.3208, 0.5833, 0.1606, 0.0833, 0.0917, 0.1154, 0.0, 0.3929], [0.0328, 0.6154, 0.098, 0.1463, 0.1238, 0.3774, 0.1679, 0.039, 0.0233, 0.1667, 0.1087, 0.0308, 0.0294, 0.0833], [0.0, 0.5192, 0.2059, 0.3902, 0.1905, 0.2192, 0.1387, 0.0427, 0.3738], [0.2222, 0.2483, 0.0909, 0.0, 0.1667, 0.1855], [0.0183, 0.3645, 0.2114, 0.1169, 0.0233, 0.25, 0.2026, 0.0769, 0.1471, 0.3095], [0.4295, 0.1688, 0.0, 0.29, 0.0846, 0.0, 0.2143], [0.0182, 0.093, 0.6061, 0.3361, 0.19, 0.0656, 0.4808, 0.1569, 0.2476, 0.2642, 0.4028, 0.1825, 0.1037, 0.028, 0.0872, 0.2078, 0.0], [0.2264, 0.375, 0.1314, 0.0305, 0.257, 0.3758, 0.1429, 0.0, 0.1667, 0.2729, 0.0692], [0.0656, 0.2308, 0.2451, 0.4146, 0.2667, 0.5283, 0.4028, 0.2044, 0.0122, 0.229, 0.3054, 0.2208, 0.0, 0.125, 0.162, 0.1077, 0.1765, 0.2619], [0.2466, 0.1825, 0.0183, 0.4206, 0.4463, 0.0779, 0.0233, 0.2917, 0.29, 0.1077, 0.1471, 0.2381], [0.0427, 0.4673, 0.5168, 0.2208, 0.0233, 0.125, 0.4136], [0.0896, 0.0164, 0.5962, 0.1176, 0.2927, 0.2571, 0.283, 0.4861, 0.2877, 0.1606, 0.0305, 0.3271, 0.4195, 0.1169, 0.0, 0.375, 0.3049, 0.2], [0.0, 0.6364, 0.3277, 0.0164, 0.4808, 0.1373, 0.3902, 0.2571, 0.3774, 0.5417, 0.3836, 0.1533, 0.0366, 0.3832, 0.3456, 0.1558, 0.0, 0.2083, 0.2772, 0.0615, 0.1176, 0.2619], [0.0492, 0.4038, 0.3333, 0.3415, 0.4095, 0.2075, 0.5694, 0.5342, 0.2774, 0.0183, 0.4626, 0.4195, 0.2078, 0.0233, 0.375, 0.3539], [0.0182, 0.7879, 0.2605, 0.3513, 0.0164, 0.5, 0.2647, 0.2683, 0.3619, 0.283, 0.6806, 0.1898, 0.0793, 0.3505, 0.3389, 0.1169, 0.0233, 0.4583, 0.2878, 0.2077, 0.2353, 0.3452], [0.0364, 0.093, 0.9091, 0.3361, 0.3047, 0.0328, 0.7885, 0.1373, 0.3659, 0.2952, 0.3585, 0.5833, 0.3836, 0.3066, 0.061, 0.3645, 0.3725, 0.1039, 0.0233, 0.375, 0.2559, 0.1615, 0.2059, 0.3214], [0.0182, 0.0465, 0.7273, 0.3193, 0.3154, 0.0164, 0.4615, 0.1961, 0.1951, 0.2857, 0.5094, 0.3889, 0.2603, 0.2263, 0.0244, 0.4579, 0.4866, 0.1039, 0.0, 0.2083, 0.3497, 0.1, 0.1471, 0.6667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

