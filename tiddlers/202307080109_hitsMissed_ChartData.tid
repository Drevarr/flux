created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Daring Deathblade", "Lord Erin The Wise", "Pale Pam", "Umbrigatina", "Mistwalker Cael", "Xyntharos", "Urilstormwalker", "Tybalt Returns", "Mort\u00e4rion", "Etchery Howls", "Bella Sassy", "Legacy Of Mathus", "Drumina", "Gamora Titus", "Tribal S", "Cedryn X", "Ephuras", "Duke Silvver", "Solus Sanctus", "Xanvias Einzbern", "The Fancy Cheese", "Mike The Archmagus", "Mother Ship", "Aronorf Xideliesi", "Shaca Booey", "Gestern Yesteryear", "Venomina The Siren", "Johosh The Mighty", "Air One Com", "Rahani Sunray", "Koralia Danai", "Kary\u00edna", "Ateriuz", "Tegan Parker", "Drevarr Moonwillow", "Melli Dragonswrath", "Be\u00eb", "Glorious Gluvs", "Newtype Khan", "Arcanophage Farra", "Zaedy Zae", "Elonith Requiem", "Ryvalia Fazebringer", "Morton Saltbringer", "Black Raspberry Pie", "K\u00f4sair", "Grasszanine", "Arriasa", "Eibh\u00ebar", "Tika Fiery"];
const professions = ["Reaper", "Weaver", "Druid", "Scourge", "Vindicator", "Vindicator", "Firebrand", "Mechanist", "Scrapper", "Druid", "Firebrand", "Berserker", "Druid", "Firebrand", "Druid", "Berserker", "Reaper", "Vindicator", "Firebrand", "Berserker", "Scrapper", "Weaver", "Tempest", "Firebrand", "Berserker", "Firebrand", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Berserker", "Tempest", "Scrapper", "Berserker", "Reaper", "Berserker", "Spellbreaker", "Spellbreaker", "Druid", "Reaper", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Druid", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 1, 1, 0, 0, 2, 1, 6, 0, 0], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 1, 4, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 1, 3, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 2, 3], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 1, 3, 0, 0, 3, 5, 0, 0], [2, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 4, 2, 3, 1, 0, 0, 0], [0, 0, 10, 0, 0, 1, 0, 0, 1, 2, 3, 4], [15, 1, 1, 4], [5, 0, 1, 0, 0, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0, 2, 0, 0, 0, 4, 0, 2, 4], [3, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 4, 2, 2, 0, 2, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 3, 0, 2, 0, 0, 1, 0, 19, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 3, 1, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 0, 1, 1, 0, 2, 2], [4, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 2, 0, 0, 1, 5, 6, 1, 0, 3, 0, 1, 1], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 3, 3, 6, 0, 2, 0, 0, 0, 1, 2, 0, 2, 0, 1, 2], [2, 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 0, 0, 3, 1, 1, 0, 1, 3, 4, 0, 0, 2, 0, 1, 0, 2, 1, 0, 3, 0], [0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 3, 2, 7, 0, 2, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [23, 0, 3, 7], [3, 0, 0, 0, 0, 1, 3, 0, 0, 0, 4, 4, 0, 1, 0, 1, 0, 0, 0, 3, 0, 1, 2, 0, 0, 1, 0, 5, 2, 0, 2, 1, 0], [2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 3, 0, 2, 0, 0, 2, 1, 3, 0, 1, 3, 0, 0, 1, 0, 0, 0, 1, 0, 1, 15, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 1, 3, 5, 0, 1, 0, 0, 0, 0, 1, 5, 2, 0, 0, 1, 14], [0, 1, 0, 0, 0, 2, 5, 3, 0, 1, 4, 0, 0, 0, 0, 2, 2, 0, 0, 18, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 2, 1, 0, 1, 0, 0, 0, 3, 1, 2, 0, 1, 2, 0, 0, 2, 3, 0, 0, 0, 0, 3, 17, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 3, 1, 0, 0, 2, 2, 0, 0, 2, 0, 0, 3, 1, 0, 2, 19, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 2, 2, 1, 2, 2, 0, 0, 3, 1, 1, 0, 0, 1, 0, 13, 0, 1, 2, 7], [1, 0, 3, 0, 1, 0, 1, 4, 1, 0, 4, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 17, 0, 0, 4, 6], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0, 3, 1, 0, 0, 1, 2, 3, 2, 0, 0, 0, 24, 1, 0, 3], [2, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 6, 4, 6, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 3, 18, 0], [2, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 1, 0, 1, 3, 0, 2, 8, 5, 0, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 14, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 2, 0, 1, 0, 0, 1, 1, 1, 4, 3, 5, 0, 2, 6, 0, 0, 1, 2, 2, 0, 0, 1, 1, 10, 0, 1, 1], [2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 3, 1, 5, 0, 4, 3, 0, 0, 5, 3, 2, 1, 0, 2, 2, 11, 0, 2, 2], [1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 1, 2, 0, 0, 3, 5, 0, 2, 0, 0, 0, 0, 6, 3, 2, 0, 0, 2, 2, 17, 0, 2, 1], [3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 3, 3, 2, 0, 2, 1, 0, 0, 5, 1, 1, 1, 1, 3, 0, 23], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 3, 0, 1, 3, 0, 0, 3, 2, 1, 0, 1, 3, 0, 0, 1, 4, 3, 0, 0, 0, 1, 19, 0, 3, 2], [1, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 1, 0, 1, 1, 0, 3, 1, 4, 0, 3, 3, 0, 0, 1, 0, 2, 2, 0, 2, 0, 23, 0, 0, 2, 1], [3, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 1, 1, 0, 1, 1, 4, 4, 0, 3, 4, 0, 1, 5, 2, 1, 0, 1, 0, 13, 1, 1, 2, 3], [2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 2, 0, 1, 2, 0, 7, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 3, 0, 28, 0, 0, 0, 2], [0, 0, 0, 0, 0, 2, 2, 0, 1, 4, 0, 0, 0, 1, 1, 2, 0, 1, 6, 2, 0, 2, 2, 0, 0, 0, 6, 3, 0, 1, 3, 0, 16, 0, 0, 2, 2], [2, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 4, 7, 2, 0, 0, 0, 0, 4, 1, 0, 0, 1, 0, 27, 0, 2, 3], [0, 0, 0, 0, 0, 2, 3, 0, 1, 0, 2, 2, 0, 4, 1, 2, 0, 0, 3, 9, 0, 3, 2, 0, 0, 1, 0, 0, 1, 0, 1, 0, 19, 1, 1, 2, 0], [1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 2, 5, 3, 2, 0, 1, 4, 1, 0, 2, 2, 0, 0, 2, 0, 8, 1, 0, 0, 2, 21], [4, 0, 0, 0, 0, 0, 2, 0, 2, 1, 1, 0, 2, 0, 4, 1, 0, 4, 2, 5, 0, 1, 2, 0, 0, 4, 0, 3, 0, 0, 0, 0, 22, 0, 0, 1, 1], [0, 2, 2, 1, 0, 1, 1, 1, 0, 0, 0, 4, 1, 0, 1, 0, 0, 0, 2, 4, 1, 0, 1, 0, 1, 31, 0, 0, 5, 5], [2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 3, 1, 2, 2, 0, 1, 3, 5, 0, 2, 4, 0, 0, 2, 2, 4, 0, 1, 2, 0, 21, 0, 0, 1, 2], [1, 0, 0, 0, 0, 1, 3, 0, 3, 0, 0, 6, 3, 0, 2, 0, 6, 2, 5, 0, 4, 2, 0, 0, 1, 4, 0, 0, 0, 2, 24], [2, 0, 0, 0, 0, 1, 2, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 4, 6, 4, 0, 5, 0, 0, 0, 1, 2, 2, 1, 0, 2, 0, 23, 2, 0, 1, 2], [0, 0, 0, 0, 0, 0, 4, 0, 1, 3, 0, 1, 2, 2, 1, 0, 5, 5, 5, 0, 0, 2, 0, 0, 3, 1, 2, 1, 0, 1, 0, 22, 0, 5, 3], [0, 2, 2, 0, 7, 8, 3, 0, 2, 3, 0, 0, 1, 0, 1, 2, 0, 0, 1, 33, 0, 0, 4], [4, 0, 0, 0, 0, 0, 2, 0, 4, 2, 1, 1, 3, 2, 0, 1, 0, 3, 0, 8, 0, 3, 2, 0, 0, 2, 1, 1, 2, 0, 5, 3, 18, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 1, 1, 3, 0, 0, 1, 1, 5, 0, 2, 4, 0, 0, 4, 1, 4, 0, 1, 1, 0, 27, 0, 4, 8], [1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 2, 2, 1, 2, 2, 3, 2, 7, 0, 2, 2, 0, 0, 3, 4, 1, 1, 1, 1, 2, 23, 1, 0, 2, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

