created: 20230303232222000
creator: Drevarr
modified: 20230705163521095
modifier: drevarr
tags: ChartData
title: 202303032322_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Guardian Angel L\u00e0la", "Grasszanine", "Newtype Khan", "Arcanophage Farra", "Blanco Padre Guard", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 163.863, 0.0, 0.0, 17.3943, 7.7876, 63.7488, 24.1488, 0.0], [30.3688, 249.237], [0.0, 15.2847, 0.0, 0.0, 0.0, 0.0, 1.6535, 13.2924, 26.7804, 53.6546, 13.415, 26.8125, 129.4144, 0.0, 0.0, 13.3463, 82.1696, 66.5717, 25.657, 0.0, 0.0, 77.1437, 13.4676, 13.3848, 0.0], [0.0, 78.2136, 0.0, 0.0, 0.0, 0.0, 27.2034, 10.9212, 13.6224, 68.2206, 24.7248, 25.8863, 80.3584, 0.0, 0.0, 10.0204, 77.6528, 0.0, 64.5075, 68.0064, 22.2741, 0.0, 201.1853, 41.8734, 41.6592, 13.9212], [0.0, 49.2966, 0.0, 0.0, 0.0, 15.0419, 0.0, 0.0, 71.9082, 15.2021, 30.1275, 210.24, 14.994, 15.1249, 1.8975, 144.0139, 0.0, 163.333, 59.1965, 14.9187, 0.0, 279.0086, 44.3502, 57.9744, 29.1153], [7.5249, 108.2322, 7.9458, 0.0, 11.981, 20.1201, 23.7896, 40.0824, 20.1756, 169.9984, 26.5363, 49.3837, 306.016, 50.7297, 7.6949, 7.6112, 170.593, 7.1234, 293.8962, 90.804, 0.0, 7.6104, 324.5472, 45.9756, 85.14, 89.4937], [22.9636, 130.4019, 7.0676, 6.8547, 16.2188, 7.0917, 36.5912, 4.56, 12.384, 267.5354, 17.5766, 19.0613, 407.8656, 90.9136, 1.7843, 6.9077, 249.4619, 0.0, 289.7677, 79.3666, 10.5214, 0.0, 496.1664, 21.2076, 75.7152, 71.7541]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

