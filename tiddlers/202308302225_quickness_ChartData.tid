created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Pr\u00e6tor Lightbringer", "Darks Na", "Newtype Khan", "Arcanophage Farra", "Sygaldry Verdandi", "Crusader Siolith", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.3541, 65.1596, 25.7731, 153.6157, 60.4422, 411.9723, 119.2485, 77.952, 17.3971, 93.2861, 41.2672, 0.0, 29.3388, 8.6676, 31.0542], [45.2182, 47.1016, 0.0, 65.4238, 64.2827, 83.9614, 214.6612, 63.0035, 32.3568, 21.9402, 88.396, 109.6452, 55.4743, 0.0, 340.3516, 23.2686, 51.5592, 69.8611], [17.5594, 49.4327, 108.8502, 51.1812, 544.045, 97.0347, 74.832, 49.633, 105.2371, 53.9152, 20.3964, 19.0464, 132.6143, 62.328, 77.8734, 29.4258, 28.7752, 64.141, 11.1896, 9.5753, 54.2959, 0.0, 50.2712, 43.6706, 0.0, 0.0, 103.3355, 80.3785, 50.5981, 0.0, 34.4342, 202.4582], [0.0, 61.6871, 44.3027, 96.2013, 15.1578, 492.8439, 46.6662, 100.416, 24.0883, 159.8947, 0.0, 0.0, 63.6732, 0.0, 41.9074, 40.131, 141.3126, 65.5637, 0.0, 72.8589, 66.7894, 84.9593, 142.4934, 31.7814, 35.3257, 0.0, 23.8313, 82.6206, 101.8647, 15.9831, 0.0, 0.0, 313.7029, 20.9686, 41.6156, 82.6896], [33.8723, 136.8385, 32.36, 95.5095, 54.243, 769.3301, 153.6024, 109.968, 42.0365, 134.0102, 136.2016, 3.9767, 72.4224, 15.9216, 153.8452, 52.1556, 139.7534, 7.1644, 81.6031, 22.572, 111.767, 201.658, 43.3293, 15.2055, 22.5644, 39.1863, 77.9846, 31.605, 59.1629, 17.665, 530.8268, 45.6669, 49.45, 23.3128], [24.1129, 85.7329, 24.0084, 156.0368, 63.4284, 771.6932, 103.2339, 136.128, 16.0195, 165.2755, 133.5728, 80.3712, 33.5916, 113.9976, 72.0006, 69.9435, 51.7754, 9.0593, 61.2874, 17.7008, 34.3094, 97.4786, 247.2775, 68.1688, 39.8592, 7.9101, 25.8509, 100.0898, 93.4258, 47.8891, 12.0472, 558.7274, 28.2828, 84.3194, 18.0062], [42.1043, 93.2677, 49.0018, 150.997, 87.8472, 733.358, 175.3857, 157.92, 53.4509, 124.2682, 137.2928, 0.0, 103.1688, 17.577, 160.6582, 87.906, 79.6109, 45.9077, 48.8357, 85.6348, 33.062, 111.1774, 252.5872, 91.1659, 54.7237, 8.0289, 43.4581, 115.0293, 123.5304, 47.4075, 57.7344, 0.0, 528.5018, 98.7515, 52.1618, 63.9621], [102.6043, 71.9431, 191.9578, 99.225, 723.6429, 162.2985, 163.248, 55.2221, 176.7168, 130.1504, 7.7142, 117.9348, 72.3726, 120.0183, 106.1634, 122.557, 50.5232, 19.6141, 74.7701, 10.0038, 43.956, 124.105, 281.4109, 60.9308, 73.3394, 7.8507, 58.5133, 103.3832, 179.0114, 94.4839, 51.7427, 22.1129, 593.0666, 73.5146, 54.4217, 66.0486]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

