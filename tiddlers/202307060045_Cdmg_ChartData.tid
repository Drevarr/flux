created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Sygaldry Verdandi", "Eibh\u00ebar", "Solus Sanctus", "River No Hug", "Tika Fiery", "Grasszanine", "Legacy Of Mathus", "Johosh The Mighty"];
const professions = ["Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Firebrand", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 20.6765, 71.1132, 82.6, 64.1125, 3.0118, 39.8205, 0.0, 35.5221, 2.7733, 0.0], [37.8659, 112.7885, 46.6471, 34.4717, 118.7077, 23.85, 2.8235, 0.0, 0.0, 50.6283, 21.08, 0.0], [22.2439, 56.8077, 55.7206, 73.0943, 29.1538, 37.1125, 28.9059, 64.8718, 15.3103, 54.0885, 17.6933, 0.0], [17.6951, 48.9808, 54.5441, 2.8679, 157.9846, 58.0625, 16.9294, 54.8077, 7.9828, 47.6991, 66.9867, 0.0], [9.2073, 53.3269, 76.0735, 138.4906, 25.9231, 63.8875, 57.0471, 21.5513, 33.931, 110.885, 34.9867], [34.7561, 17.4615, 8.3971, 6.0566, 281.0769, 27.5875, 7.6353, 16.1667, 1.931, 164.5929, 185.2267, 0.0], [26.0, 138.4423, 175.9853, 185.9623, 151.5231, 60.775, 40.8235, 155.7308, 80.8793, 111.8496, 116.8667], [112.7073, 315.9231, 344.6471, 232.1887, 45.5692, 185.025, 42.6588, 131.3718, 218.1724, 98.7788, 158.76, 0.0], [185.8902, 231.5962, 249.6324, 49.1698, 279.5846, 194.975, 269.7412, 102.0256, 344.4828, 275.8496, 535.28]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

