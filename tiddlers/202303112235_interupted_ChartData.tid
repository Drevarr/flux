created: 20230311223557000
creator: Drevarr
modified: 20230705163521775
modifier: drevarr
tags: ChartData
title: 202303112235_interupted_ChartData
type: text/vnd.tiddlywiki


const names = ["Minnie Marshmallow", "Raimaru Hanzo", "Johosh The Great", "Zadie Miststep", "Koralia Danai", "Black Raspberry Pie", "Sp\u00edcy Cheese", "Xyntharos", "Zaylen Harker", "Legendary Hacker", "Mom You Never Had", "Blanco Padre Guard", "My Birthday Girl", "Morton Saltbringer", "\u00c1rkantor", "Misaki Amakase", "Harry Callahann", "Dark Sidiuz", "Kmpek", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Demon Sekhmet", "Xanvias Tseli", "High Sorcer Baradun", "Be\u00eb", "K\u00f4sair", "Primal Clone", "Mac Chiato", "Slautorn", "Seren Nightroad", "Drevarr Moonwillow", "Newtype Khan", "Tootsie Pop Rock", "Venomina The Fierce", "Bella Sassy", "Smol Gluvs", "Panther B Me", "Vopiscus Zergherdus", "Mistwalker Caelon", "Aronorf Xideliesi", "Husky Guard", "Rina Of Theros", "Lechen", "Tegan Parker", "Sofya De Nova", "Sheep Paws", "Lord Erin The Wise", "Smol Daddy Tika", "Tribal S"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Berserker", "Vindicator", "Firebrand", "Herald", "Tempest", "Firebrand", "Scrapper", "Chronomancer", "Vindicator", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Chronomancer", "Firebrand", "Spellbreaker", "Berserker", "Tempest", "Scourge", "Spellbreaker", "Chronomancer", "Tempest", "Weaver", "Scourge", "Scrapper", "Spellbreaker", "Scrapper", "Spellbreaker", "Firebrand", "Scourge", "Scourge", "Scrapper", "Vindicator", "Firebrand", "Dragonhunter", "Scourge", "Soulbeast", "Tempest", "Weaver", "Berserker", "Weaver", "Berserker", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Interupted per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [3, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 0, 0, 0, 2, 0, 0, 2, 1], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [4, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 3, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 4], [0, 0, 0, 0, 0, 0, 4, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [10, 0, 0], [1, 0, 0, 0, 0, 1, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0], [3, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [6, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [4, 0, 0, 0, 0, 1, 0, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 2], [7, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 2, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0], [4, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [4, 0, 0, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [3, 0, 0, 0, 0, 0, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1], [7, 0, 0, 0, 0, 0, 3, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [8, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [4, 0, 1, 0, 0, 2, 1, 0, 2, 3, 0, 0, 1, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 3], [3, 0, 0, 0, 0, 1, 2, 0, 3, 0, 0, 0, 0, 0, 0, 1, 4], [2, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [8, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [5, 2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1], [13, 0, 0, 0, 0, 1, 2], [3, 0, 0, 1, 0, 0, 2, 0, 2, 0, 1, 0, 1, 0, 0, 0, 1, 0, 2, 0, 2, 2], [4, 0, 0, 0, 0, 0, 1, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 3, 1], [5, 0, 1, 0, 0, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 4], [14, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [8, 0, 0, 1, 0, 0, 1, 1, 3, 3, 1, 0, 0, 0, 0, 1, 0, 3, 0], [7, 0, 1, 0, 2, 0, 1, 5, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1], [7, 0, 0, 0, 1, 0, 3, 0, 2, 3, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 2, 1, 1], [15, 0, 0, 0, 1, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [13, 0, 0, 0, 0, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 3], [9, 0, 0, 0, 0, 0, 2, 0, 2, 4, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 1, 2], [8, 0, 0, 0, 0, 0, 3, 2, 1, 3, 4, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

