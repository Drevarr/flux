created: 20230401000636000
creator: Drevarr
modified: 20230705163523575
modifier: drevarr
tags: ChartData
title: 202304010006_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Newtype Khan", "Etcherii", "Cat Wigglebooty", "High Sorcer Baradun", "Arriasa", "Raziel Umbra", "Primal Clone", "Brioche Bunbringer", "Abigail Ryn", "Tegan Parker", "Arkintor", "Zadie Miststep", "Mac Chiato", "Drevarr Moonwillow", "Mike The Archmagus"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Tempest", "Druid", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2132, 0.1111, 0.2143, 0.3966, 0.1461, 0.287, 0.6071, 0.3023, 0.3455, 0.0, 0.118, 0.0, 0.1429, 0.193, 0.0222, 0.0, 0.2593, 0.1319, 0.2208, 0.1616, 0.25, 0.1574, 0.0267, 0.0, 0.2292, 0.0261, 0.0, 0.3306], [0.1912, 0.037, 0.5476, 0.2759, 0.1348, 0.4907, 0.2619, 0.1628, 0.4727, 0.0303, 0.2191, 0.0, 0.1607, 0.2865, 0.2, 0.4963, 0.1648, 0.1688, 0.0707, 0.1618, 0.0, 0.2685, 0.12, 0.0, 0.0625, 0.0174, 0.0, 0.0744], [0.2941, 0.0741, 0.4286, 0.4138, 0.4944, 0.2963, 0.2619, 0.2558, 0.6, 0.0, 0.3933, 0.0, 0.1607, 0.2281, 0.4222, 0.0, 0.5926, 0.2747, 0.2727, 0.0, 0.2222], [0.7868, 0.1481, 0.2143, 0.8621, 0.573, 0.3056, 0.4643, 0.186, 1.4273, 0.0909, 0.6854, 0.0, 0.0179, 0.1287], [0.7279, 0.0093, 1.0595, 1.6552, 0.1011, 0.8426, 0.0476, 0.2558, 1.3273, 0.0, 0.4101, 0.0, 0.2321, 0.9942], [0.4, 0.0, 1.5333, 0.6813, 1.1948, 0.0, 1.0, 0.4853, 0.9074, 1.2667, 0.0, 0.5208, 0.0609, 0.0, 0.6777], [0.1397, 0.1759, 0.4048, 0.0, 0.2247, 0.7315, 0.4643, 0.8605, 0.5727, 0.0, 0.7697, 0.0, 0.4643, 0.5673, 0.6, 0.0, 0.6667, 0.0659, 0.3247, 0.0, 0.0202, 0.0, 0.0, 0.0093, 0.76, 0.0, 0.6042, 0.0, 0.0256, 0.2397], [0.5588, 0.0278, 0.7976, 0.8793, 0.8539, 0.8241, 0.2381, 0.7442, 1.0182, 0.0, 0.927, 0.7679, 0.7135, 0.7556, 0.0, 0.0963, 0.6154, 0.3896, 0.1481, 0.1313, 0.0, 0.0, 0.3519, 0.56, 0.0, 0.625, 0.0, 0.0256, 0.562], [0.3015, 0.1204, 0.0595, 0.931, 0.1573, 1.2315, 0.8214, 0.6279, 0.8091, 0.0, 0.7865, 0.0, 0.4643, 0.5906, 0.7778, 0.8222, 0.6593, 0.7403, 0.0, 0.2828, 0.1618, 0.0, 0.4259, 0.68, 0.0, 1.2708, 0.0087, 0.0256, 0.4876], [0.0956, 0.4815, 1.4643, 1.1379, 1.1461, 1.5741, 0.9762, 1.093, 1.6455, 0.0606, 1.5056, 0.0, 0.6964, 1.1345], [1.2868, 0.3426, 0.2262, 1.6379, 1.2022, 2.1204, 1.8095, 0.0, 1.6636, 0.0, 1.6011, 0.1364, 0.8036, 1.4094, 1.0, 0.1852, 1.0148, 0.989, 1.1818, 0.0741, 0.8586, 0.7353, 0.0, 0.8981, 1.1333, 0.0, 1.1458, 0.0087, 0.0, 1.8595], [1.0735, 0.2037, 1.2024, 1.1379, 0.8427, 1.463, 0.75, 1.1628, 1.5273, 0.0202, 1.6124, 0.0, 0.3571, 1.4503, 0.7111, 2.2667, 0.6044, 1.0779, 0.697, 1.6471, 0.1, 1.2593, 1.3733, 0.0278, 0.8958, 0.0435, 0.2564, 1.6364], [1.7426, 0.6759, 0.7619, 0.5862, 1.3258, 2.9074, 1.9286, 1.3953, 2.6182, 0.1818, 0.7921, 0.2273, 1.2679, 2.3275, 1.3778, 0.0, 2.4074, 0.9011, 0.0, 0.0, 1.5354, 0.1176, 0.0, 1.3333, 1.6667, 1.6875, 0.0609, 0.0, 1.6777], [1.6471, 0.4167, 1.3333, 0.4828, 2.1798, 2.3056, 2.5595, 1.3953, 1.7636, 0.1414, 1.9831, 0.0, 0.5893, 1.7018, 0.3778, 0.0, 2.3556, 1.6374, 0.9221, 0.0, 1.1414, 1.4412, 0.2, 1.3796, 1.5733, 0.0, 1.8333, 0.0174, 0.0513, 1.3884], [1.8235, 0.287, 1.5714, 2.6207, 1.8652, 2.7037, 2.4405, 0.9535, 2.2727, 0.1414, 1.7809, 0.2273, 0.6429, 1.8889, 1.0, 0.0, 2.5556, 0.8901, 1.6883, 1.2121, 1.2941, 0.5667, 1.4352, 1.4533, 0.0, 0.9583, 0.0609, 0.0, 1.8347], [1.9338, 0.6296, 1.9048, 3.3793, 1.9888, 3.1759, 2.7976, 2.2558, 0.7, 0.0808, 2.427, 0.1364, 1.1607, 2.0877, 1.3778, 0.1481, 2.6963, 1.1648, 2.2078, 0.4444, 1.6667, 1.2941, 1.4907, 1.5733, 1.6458, 0.3217, 0.1795, 1.8264]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

