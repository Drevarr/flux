created: 20230201220146000
creator: Drevarr
modified: 20230705163518519
modifier: drevarr
tags: ChartData
title: 202302012201_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Drevarr In A Teacup", "Mac Aaroni", "Demon Sekhmet", "Tootsie Pop Bringer", "Kmpek", "Smol Daddy Tika", "Konztantin\u00eb", "Etchery Howls", "Phrosennx", "Sumatra Satyricon", "Lord Erin The Wise", "Veron Blackburn", "Cat Wigglebooty", "Tribal S", "Arriasa", "\u00c9\u00efbhear"];
const professions = ["Berserker", "Tempest", "Tempest", "Berserker", "Scrapper", "Herald", "Spellbreaker", "Herald", "Druid", "Weaver", "Ranger", "Weaver", "Herald", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 169.8982, 71.8968, 127.5648, 41.2776, 0.0, 0.0, 0.0, 0.0, 0.0, 81.5046, 0.0, 34.7547], [0.0, 78.204, 31.9464, 47.7312, 47.2399, 0.0, 0.0, 57.9312, 0.0, 0.0, 23.0497, 17.1508, 30.7446, 19.5363, 29.0198, 25.0282, 0.0, 30.6871, 30.5406, 0.0, 23.3428, 15.7661, 43.3621], [16.4738, 90.3256, 29.232, 63.9936, 29.9135, 0.0, 21.2285, 42.2683, 0.0, 0.0, 30.801, 30.7516, 25.7622, 0.0, 21.4953, 30.2064, 22.7478, 18.1263, 30.4067, 30.8154, 0.0, 30.6368, 48.2684], [38.4121, 78.0085, 59.856, 20.2752, 82.9119, 0.0, 30.7536, 0.0, 0.0, 41.1748, 77.9269, 0.0, 5.9535, 0.0, 14.6419, 0.0, 59.8934, 0.0, 34.0998, 0.0, 23.3454, 78.5713], [15.8309, 153.0843, 145.6728, 71.639, 31.901, 0.0, 31.8264, 0.0, 34.7802, 23.8657, 11.9328, 52.0713, 16.7139, 3.8808, 48.5683, 28.0711], [299.1605, 11.8948, 116.3644, 52.9301, 112.1219, 104.0403], [126.126, 143.2446, 40.0867, 39.0471, 194.4875, 33.5143, 42.9484, 82.3192, 76.9759, 271.284], [60.5513, 178.3848, 114.5971, 49.5331, 0.0, 164.5675, 37.2298, 49.049, 100.2125, 70.1856, 144.305, 83.0403], [73.0472, 146.1082, 89.0781, 64.9255, 0.0, 0.0, 17.4096, 78.2491, 79.6979, 54.7456, 57.0536, 6.8796, 68.1727, 0.0, 0.0, 84.5043, 0.0, 6.82, 0.0, 77.8393, 163.7084], [36.2424, 231.2883, 143.9328, 94.9555, 112.5197, 0.0, 63.2237, 0.0, 42.1439, 47.877, 40.4604, 105.2971, 49.7448, 27.144, 25.0877, 31.7892, 47.4858, 30.5674, 40.6493, 42.572], [36.8852, 320.2454, 129.7344, 106.3603, 8.969, 55.5482, 9.9225, 75.3106, 62.6746, 102.1493, 34.5892, 53.548, 115.5655, 56.448, 34.5391, 59.2819, 17.9046], [13.8621, 331.7805, 157.992, 97.3632, 8.0007, 39.6989, 7.7736, 154.9838, 31.8283, 47.1635, 34.0647, 47.1325, 59.1802, 30.2526, 19.7058, 51.336, 35.4388, 55.5022, 31.3175, 34.0225, 24.1357], [198.8106, 706.5731, 176.436, 111.0067, 0.0, 46.9171, 338.9515, 72.4906, 12.1805, 183.4833, 13.8533, 207.8874, 114.6776, 88.8336, 0.0, 19.3007, 8.037, 12.0557], [52.1135, 635.212, 306.8664, 168.1997, 171.0727, 136.9427, 29.7051, 105.2059, 53.1662, 52.4378, 91.4413, 124.2041, 148.0721, 19.8891, 25.2683, 82.9411, 0.0, 129.2329, 145.0411, 72.0829, 13.6042, 0.0, 70.8513], [115.5577, 431.2951, 245.4096, 127.1846, 151.9627, 63.4935, 19.1079, 218.4221, 13.6598, 35.9013, 18.7079, 82.931, 143.0898, 86.6565, 37.2988, 51.9907, 45.8797, 158.9498, 60.1168, 46.2134, 13.6538, 58.4594, 444.0111], [156.702, 672.5544, 315.2184, 148.8538, 85.7147, 92.5469, 84.9499, 119.119, 89.8969, 70.8699, 133.4897, 56.5362, 71.7732, 107.9098, 34.6567, 147.1549, 69.9487, 95.4988, 27.481, 94.7887, 164.1413], [93.8203, 1103.8495, 211.6536, 270.7584, 235.1294, 123.8749, 37.7225, 501.9989, 0.0, 135.095, 100.4747, 195.7583, 270.0174, 227.0709, 127.6352, 181.6253, 55.7444, 237.3779, 146.1395, 82.7476, 110.9153, 128.1758, 554.9778]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

