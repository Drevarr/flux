created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Kisumaiasu", "Newtype Khan", "Oo Dads Mad", "Aira Draugr", "Black Raspberry Pie", "Daphne Agla\u00e9", "Primal Clone", "Grasszanine", "Audens Silvermarker", "Name Is What", "Glorious Gluvs", "Arcanophage Farra", "Rozaalyna", "Cedryn X", "Mort\u00e4rion", "Mister Jekyll", "Revitiel", "Bee Nemesis", "Eibh\u00ebar", "Marshall R", "Legacy Of Mathus", "Kary\u00edna", "Be\u00eb", "My Birthday Girl", "Keypek The Drunk", "Mike The Archmagus", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Berserker", "Herald", "Chronomancer", "Scourge", "Chronomancer", "Spellbreaker", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Scourge", "Berserker", "Scrapper", "Scourge", "Vindicator", "Berserker", "Chronomancer", "Herald", "Berserker", "Vindicator", "Scourge", "Scrapper", "Scrapper", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 68.6223, 31.6429, 189.9821, 0.0, 0.0, 49.3392, 116.65], [88.127, 16.5534, 59.1929, 0.0, 53.8611, 56.9167, 167.717, 57.723, 0.0, 65.7321, 57.1111, 0.0, 19.9097, 0.0, 0.0], [46.9524, 52.6438, 51.246, 0.0, 0.0, 24.1667, 32.6226, 49.9317, 38.6571, 59.8929, 0.0, 56.7255, 12.7093, 111.55, 31.6061], [198.0476, 66.0825, 76.0916, 0.0], [79.0794, 64.8671, 91.3923, 0.0, 136.0833], [28.8095, 41.6447, 58.6736, 0.0, 43.25, 3.1132, 67.1583, 174.2143, 0.0, 167.9778, 0.0, 28.6211, 0.0], [23.3968, 74.4839, 47.0772, 0.0, 56.075, 69.1547, 0.0, 48.4286, 9.63], [135.9206, 18.0573, 93.0, 0.0, 80.7778, 93.55, 0.0, 45.1043, 0.0, 87.2321, 57.3111, 79.826, 23.825], [142.2381, 57.2711, 63.008, 0.0, 8.75, 106.6417, 50.9434, 34.4065, 36.3143, 0.0, 0.0, 35.3725, 56.5198, 0.0], [291.4444, 50.7246, 32.7235, 0.0, 0.0, 259.2833, 0.0, 155.7014, 18.8571], [323.6508, 75.0721, 66.8006, 0.0, 8.0, 0.0, 14.9784, 9.4571, 76.125, 94.5778, 0.0, 46.9824, 0.0, 0.0], [161.381, 57.8367, 56.4469, 0.0, 99.3333, 134.0583, 25.0189, 80.2482, 59.5143, 46.1071, 2.6, 0.0, 31.7687, 171.65, 235.9697], [251.3968, 59.1147, 53.0563, 0.0, 277.4, 40.0943, 52.705, 66.7714, 88.25, 0.0, 0.0, 104.0661, 254.2, 0.0], [426.254, 72.3293, 113.8907, 0.0, 0.0, 45.7417, 81.7734, 81.0, 225.2857, 0.0, 66.9412, 58.5066, 52.075, 31.6364], [668.0317, 148.9348, 130.1817, 0.0, 0.0, 0.0, 0.0, 35.0935, 0.0, 0.0], [138.0159, 136.4865, 144.4421, 0.0, 473.6667, 166.7122, 155.6, 193.8214], [531.0, 131.8071, 170.074, 219.1417, 10.1887, 67.3597, 0.0, 53.4286, 183.4295, 109.7, 0.0], [1297.5079, 125.7437, 105.6077, 0.0, 189.5417, 0.1887, 225.7374, 293.4, 139.2321, 0.0, 0.0, 93.8855, 4.425, 267.5758], [399.6825, 88.7376, 205.6013, 0.0, 751.0667, 0.0, 231.3345, 59.4, 175.0714, 46.3778, 157.2157, 161.2907, 229.225, 54.4242], [479.1587, 222.1694, 136.6061, 0.0, 301.3333, 137.1583, 265.6038, 107.7194, 96.3286, 94.4821, 0.0, 99.8824, 109.5705, 270.9, 106.6667], [916.619, 237.7767, 286.6704, 0.0, 464.225], [914.1111, 261.8045, 189.1785, 0.0, 0.0, 0.0, 28.717, 84.9317, 35.7286, 124.3214, 0.0, 0.0, 112.7159, 0.0, 129.7576], [1314.5397, 227.9983, 219.5997, 0.0, 125.0556, 248.9417, 158.4528, 85.4784, 243.9429, 43.6786, 0.0, 0.0, 173.3238, 116.975, 192.4545], [747.0635, 220.2815, 218.6318, 0.0, 242.55, 147.7736, 141.6007, 226.8714, 263.7321, 81.9111, 29.4902, 217.6784, 858.7, 5.6667], [604.1587, 256.0452, 147.4518, 0.0, 0.0, 725.0667, 192.3669, 136.6857, 377.6607, 264.9778, 35.3725, 177.9449, 100.75, 0.0], [673.6349, 348.2667, 316.7476, 100.4098, 0.0, 612.4833, 149.3774, 204.0468, 161.1571, 296.7857, 111.6, 0.0, 408.5573, 525.925, 51.3333], [1108.4603, 335.119, 357.7347, 0.0, 0.0, 171.9417, 0.0, 223.6727, 73.1, 397.9286, 0.0, 409.3238, 2101.275, 0.0], [1636.2698, 361.8332, 352.2685, 0.0, 153.8611, 687.6333, 496.3019, 0.0, 258.7857, 505.1607, 296.5556, 157.2745, 455.1784, 162.1], [1793.8571, 512.1851, 319.8135, 0.0, 763.35, 0.0, 235.2914, 0.0, 55.2857, 181.1333, 213.4758, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

