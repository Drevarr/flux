created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Legoh Brave", "Yngvar The Burdened", "Latedoctor", "Elonith Requiem", "Anti Jimbo", "Charr Surethang", "Danaeryn", "Erinthal", "Chocolate Teapot", "Drevarr Moonwillow", "Mirhayna", "Notorious H U D"];
const professions = ["Vindicator", "Tempest", "Scourge", "Reaper", "Reaper", "Weaver", "Berserker", "Tempest", "Druid", "Chronomancer", "Scrapper", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[741, 1924, 1963, 632, 728, 1107, 649, 2706, 557, 1240, 1528, 750, 702, 1130, 1231, 187], [320, 318, 1022, 340, 583, 6366, 357, 1452, 909, 1151, 977, 775, 1151, 1494], [14636, 1728, 441, 2300, 6514, 335, 680, 1053, 1069, 1887, 137, 402, 925], [6332, 505, 452, 5554, 829, 4290, 3753, 938, 3109, 693, 239, 771, 495, 729, 2305, 2615, 7848, 455, 1231, 2767, 1149, 67, 384, 697], [1280, 680, 563, 842, 362, 433, 345, 551, 6784, 458, 6005, 696, 1061, 2043, 493, 342, 2349], [672, 7386, 2729, 818, 588, 1233, 409, 1176, 375, 655, 1054, 551, 656, 879], [7224, 519, 554, 11731, 571, 3801, 2784, 3862, 1032, 244, 654, 339, 435, 3166, 460, 5094, 573, 7349, 532, 10898, 0, 113, 1086], [598, 962, 1118, 656, 225, 863, 280, 635, 289, 740, 2219, 1169, 2086, 962, 1255, 4360, 186, 4233, 1387], [5595, 369, 1013, 11187, 4614, 8602, 3226, 559, 1323, 568, 212, 411, 316, 383, 201, 530, 4253, 451, 860, 660, 1157, 18507, 116, 278, 1317], [5133, 546, 367, 665, 426, 2617, 262, 864, 882, 547, 195, 766, 504, 776], [406, 426, 1011, 1284, 689, 1777, 3124, 2838, 1058, 506, 693, 614, 195, 3721, 304, 510, 6589, 246, 291, 373, 1003, 283], [359, 188, 472, 291, 534, 3269, 533, 5481, 334, 7840, 443, 1078, 1374, 90], [5026, 214, 882, 3514, 419, 168, 349, 307, 838, 210, 644, 1162, 310, 4995, 482, 1205, 545, 197, 237, 1458]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

