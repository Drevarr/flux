created: 20230603000934000
creator: Drevarr
modified: 20230705163532970
modifier: drevarr
tags: ChartData
title: 202306030009_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Vdddzz", "N\u00f3b\u00fa", "Sumatra Satyricon", "Latedoctor", "A Girl Named Jeff", "Axunar", "Dargon Spiritwalker", "Grasszanine", "Proteccdebussy", "Cyclotechnist Farra", "Lord Erin The Wise", "Dusknant", "Morv\u00e4rth", "Morv\u00e4rth", "Grilo Gringo", "Husky Guard", "Pu Ella", "Newtype Khan", "Kary\u00edna", "Melli Dragonswrath", "The Fancy Cheese", "Pamtastic", "Johosh Of The North", "Sureting", "Wild Doggy", "Xyntharos", "Sakis Ranger", "Blanco Padre Guard", "Xanvias Tsoli", "Tegan Parker", "Cat Wigglebooty", "Duke Silvver", "Air One Com", "Miphest\u00f6", "Mistwalker Cael", "Be\u00eb", "Aronorf Xideliesi", "Tika Fiery", "Black Raspberry Pie", "Smol Gluvs", "Zadey Starbolt", "Venomina The Siren", "Bella Sassy", "Drevarr Moonwillow", "Hyde En Sikh", "Arriasa", "Koralia Danai", "Primal Clone", "Sister Elon\u00edth"];
const professions = ["Tempest", "Soulbeast", "Druid", "Soulbeast", "Reaper", "Spellbreaker", "Dragonhunter", "Scourge", "Spellbreaker", "Firebrand", "Scrapper", "Weaver", "Vindicator", "Scourge", "Reaper", "Dragonhunter", "Dragonhunter", "Firebrand", "Spellbreaker", "Vindicator", "Berserker", "Scrapper", "Tempest", "Tempest", "Reaper", "Dragonhunter", "Vindicator", "Druid", "Firebrand", "Holosmith", "Tempest", "Scrapper", "Vindicator", "Firebrand", "Tempest", "Vindicator", "Scourge", "Firebrand", "Firebrand", "Chronomancer", "Scourge", "Scrapper", "Tempest", "Firebrand", "Scrapper", "Chronomancer", "Druid", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 0, 23, 1, 0, 1, 1, 1, 2, 4], [0, 14, 1, 0, 4, 0, 8, 8], [1, 0, 0, 0, 5, 8, 2, 0, 3, 0, 0, 6, 1, 2, 0, 5, 0, 3, 9], [0, 3, 0, 15, 0, 0, 1, 12, 5, 8, 1, 1, 0, 1], [5, 5, 7, 5, 1, 10, 0, 8, 12], [0, 14, 11, 12, 3, 1, 9, 0, 6, 9], [4, 4, 28, 5, 1, 9, 1, 6, 8], [0, 4, 0, 34, 2, 0, 0, 2, 13, 14, 6], [1, 5, 9, 6, 0, 11, 7, 9, 5, 1, 4, 0, 8, 10], [0, 9, 13, 14, 7, 2, 11, 1, 8, 13], [1, 2, 0, 4, 1, 0, 0, 1, 6, 7, 9, 1, 5, 0, 10, 5, 7, 8, 1, 3, 0, 4, 6], [0, 3, 0, 23, 0, 0, 0, 3, 19, 3, 7, 2, 2, 0, 9, 10, 2, 4], [0, 6, 0, 41, 1, 1, 40], [20, 11, 2, 7, 0, 9, 11, 15, 6, 1, 8], [1, 5, 0, 50, 4, 2, 15, 0, 7, 7], [57, 5, 8, 2, 8, 0, 15], [1, 9, 1, 39, 4, 0, 1, 5, 26, 4, 1, 3, 8, 0], [6, 2, 21, 1, 0, 1, 1, 19, 14, 12, 1, 3, 0, 8, 9, 4], [0, 3, 1, 22, 2, 0, 0, 2, 17, 6, 6, 1, 1, 0, 9, 6, 5, 5, 0, 5, 0, 6, 7], [1, 4, 0, 35, 0, 0, 0, 2, 10, 7, 10, 1, 2, 0, 6, 6, 4, 3, 0, 4, 0, 4, 5], [1, 8, 0, 18, 1, 0, 1, 6, 16, 2, 4, 2, 2, 0, 6, 11, 5, 1, 2, 8, 0, 4, 10], [1, 7, 0, 5, 0, 0, 0, 1, 27, 7, 4, 0, 7, 11, 11, 8, 0, 4, 0, 5, 11], [0, 2, 0, 17, 1, 0, 0, 2, 20, 7, 8, 0, 5, 0, 9, 7, 12, 7, 1, 5, 0, 5, 8], [2, 4, 0, 22, 1, 1, 0, 2, 24, 7, 13, 0, 5, 0, 8, 4, 7, 3, 1, 4, 0, 3, 6], [0, 4, 0, 11, 0, 0, 25, 5, 8, 5, 0, 16, 15, 11, 4, 0, 6, 0, 4, 7], [1, 1, 0, 2, 34, 7, 4, 1, 1, 12, 22, 6, 4, 5, 6, 0, 6, 9], [1, 5, 0, 5, 1, 0, 0, 5, 38, 4, 12, 2, 7, 0, 14, 10, 13, 8], [0, 4, 1, 17, 3, 0, 0, 4, 34, 14, 9, 0, 4, 0, 4, 8, 5, 4, 0, 7, 0, 7, 7], [1, 2, 1, 36, 1, 0, 1, 3, 18, 12, 8, 1, 1, 0, 7, 7, 8, 3, 1, 11, 0, 7, 6], [1, 3, 0, 15, 2, 0, 1, 4, 18, 9, 14, 1, 5, 0, 6, 15, 11, 4, 2, 5, 0, 9, 11], [1, 1, 0, 26, 0, 0, 0, 5, 37, 4, 8, 3, 5, 3, 9, 10, 2, 1, 8, 0, 6, 9], [1, 5, 0, 20, 1, 0, 0, 4, 22, 5, 12, 1, 7, 0, 17, 13, 14, 1, 1, 8, 0, 6, 7], [0, 3, 1, 17, 1, 1, 1, 5, 21, 21, 12, 3, 4, 0, 9, 12, 13, 3, 2, 3, 1, 4, 10], [1, 4, 0, 29, 1, 0, 4, 20, 14, 11, 1, 10, 11, 8, 15, 7, 2, 2, 0, 8, 5], [45, 32, 11, 14, 0, 9, 0, 22, 11, 11], [1, 5, 0, 27, 1, 0, 1, 3, 19, 17, 13, 1, 4, 0, 6, 12, 13, 4, 0, 8, 2, 10, 11], [2, 6, 0, 42, 2, 0, 0, 3, 41, 13, 11, 1, 7, 0, 8, 13, 6, 2, 8, 0, 9, 7], [1, 6, 1, 44, 2, 0, 4, 21, 9, 12, 1, 9, 0, 10, 13, 13, 7, 1, 9, 1, 6, 12], [2, 8, 1, 23, 1, 1, 1, 6, 37, 15, 18, 1, 2, 0, 13, 13, 12, 5, 2, 5, 1, 6, 14], [0, 1, 0, 48, 0, 0, 13, 6, 2, 19, 0, 16, 47, 18, 2, 0, 3, 2, 8, 4], [0, 6, 1, 36, 3, 0, 0, 5, 38, 6, 8, 0, 2, 0, 12, 13, 17, 4, 1, 7, 0, 10, 21], [1, 7, 53, 1, 0, 0, 7, 35, 7, 18, 2, 9, 0, 6, 18, 13, 8, 1, 7, 0, 12, 9], [0, 5, 59, 2, 1, 0, 3, 23, 18, 7, 3, 9, 22, 13, 14, 9, 9, 0, 8, 14], [1, 5, 1, 58, 1, 0, 1, 5, 46, 10, 11, 1, 7, 0, 13, 12, 12, 11, 2, 10, 1, 3, 11], [1, 10, 0, 51, 2, 0, 0, 5, 38, 13, 9, 1, 8, 0, 18, 15, 11, 6, 2, 11, 0, 8, 13], [1, 7, 0, 39, 2, 0, 6, 40, 24, 11, 1, 10, 1, 17, 8, 18, 5, 2, 8, 0, 5, 18], [0, 7, 0, 66, 2, 1, 3, 36, 16, 12, 1, 10, 0, 17, 19, 4, 1, 7, 1, 11, 15], [1, 6, 3, 53, 1, 1, 0, 7, 41, 11, 13, 1, 10, 9, 14, 13, 13, 2, 10, 0, 7, 15], [2, 15, 0, 38, 2, 0, 0, 3, 38, 43, 7, 27, 0, 19, 17, 20, 3, 4, 5, 0, 8, 13], [5, 2, 77, 6, 0, 4, 48, 22, 19, 4, 10, 0, 21, 22, 29, 14, 0, 21, 1, 12, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

