created: 20230626011254000
creator: Drevarr
modified: 20230705163537593
modifier: drevarr
tags: ChartData
title: 202306260112_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Eerie C\u00fachulainn", "Tegan Parker", "Sakis Ranger", "Ateriuz", "Dargon Spiritwalker", "Eoooeee", "Newtype Khan", "Primal Clone", "Sumatra Satyricon", "Rina Of Theros", "Oo Dads Mad", "Raziel Umbra", "Tootsie Pop Rocks", "Lucky Leipreach\u00e1n", "Belvyn Brightblade", "Be\u00eb", "Crusader Siolith", "Good Sir Ragnarok", "Imalou", "Hyde En Sikh", "Permanent Dawn", "Tribal S", "Zayde Sunsabre", "Duke Silvver", "Momomeko", "Xanvias Einzbern", "Drevarr Moonwillow", "Lord Erin The Wise", "Fribble Bibble", "Smol Daddy Tika", "Yummy Kiwi", "Miphest\u00f6", "Johosh The Mighty", "Fuuko Kazari", "Mmathuss", "Sygaldry Verdandi", "Black Raspberry Pie", "Smol Gluvs", "Gestern Yesteryear", "Blancooo Padreee", "Warrior Constantine", "Demon Staph", "Artakama Nahid", "Mistwalker Cael", "Grasszanine", "Arcanophage Farra", "Traidoruns Maximus", "Freyja Asgrimrkin", "Ryvalia Fazebringer", "Sub Train"];
const professions = ["Daredevil", "Tempest", "Druid", "Berserker", "Reaper", "Firebrand", "Spellbreaker", "Chronomancer", "Soulbeast", "Scourge", "Spellbreaker", "Chronomancer", "Scrapper", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Weaver", "Druid", "Berserker", "Vindicator", "Chronomancer", "Berserker", "Scrapper", "Weaver", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Berserker", "Berserker", "Firebrand", "Firebrand", "Chronomancer", "Reaper", "Firebrand", "Spellbreaker", "Spellbreaker", "Druid", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Firebrand", "Vindicator", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79], [26, 0, 8, 14, 25, 3, 3], [27, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 2, 3, 3, 42], [26, 40, 19], [3, 2, 0, 4, 32, 0, 0, 0, 0, 5, 3, 6, 5, 0, 10, 0, 4, 0, 0, 0, 6, 0, 0, 0, 5, 0, 5], [0, 0, 33, 60, 0, 0, 0], [2, 1, 0, 1, 11, 3, 0, 2, 0, 4, 0, 6, 10, 1, 6, 1, 0, 5, 1, 0, 1, 8, 15, 6, 7, 0, 16], [4, 0, 0, 7, 61, 3, 0, 0, 11, 8, 14], [12, 2, 0, 0, 58, 2, 0, 1, 0, 2, 10, 0, 15, 0, 0, 0, 0, 1, 0, 6, 1], [2, 1, 0, 8, 19, 0, 0, 0, 0, 5, 9, 0, 12, 9, 0, 0, 3, 0, 0, 1, 13, 20, 5, 6, 0, 0], [4, 0, 0, 2, 3, 1, 0, 1, 2, 0, 0, 8, 1, 14, 1, 1, 3, 0, 1, 30, 7, 0, 0, 5, 22, 7], [1, 0, 2, 3, 8, 4, 43, 2, 17, 16, 19], [0, 5, 0, 2, 5, 9, 0, 3, 2, 17, 9, 23, 0, 2, 8, 1, 3, 1, 0, 2, 1, 4, 0, 15, 5, 0, 6], [20, 0, 0, 16, 30, 5, 1, 5, 0, 4, 7, 0, 1, 1, 12, 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 5, 15], [5, 0, 1, 12, 67, 2, 4, 0, 9, 11, 21], [8, 0, 0, 4, 44, 8, 0, 0, 0, 1, 2, 9, 7, 2, 31, 5, 3, 0, 10, 0, 0], [19, 2, 6, 2, 0, 0, 8, 24, 19, 25, 2, 0, 27], [14, 19, 9, 0, 0, 1, 0, 0, 21, 14, 18, 5, 17, 18], [22, 0, 1, 4, 15, 4, 0, 2, 0, 4, 0, 8, 6, 3, 15, 16, 0, 0, 0, 5, 0, 3, 0, 16, 12, 3], [9, 1, 0, 1, 59, 9, 0, 0, 6, 1, 11, 10, 17, 16], [7, 0, 0, 10, 36, 10, 0, 7, 0, 0, 0, 3, 19, 0, 0, 13, 0, 0, 15, 3, 3, 14, 3], [0, 0, 0, 0, 7, 0, 0, 0, 0, 1, 22, 0, 10, 2, 6, 18, 0, 0, 0, 0, 5, 33, 8, 20, 13], [13, 2, 0, 7, 14, 3, 0, 1, 0, 1, 1, 3, 16, 13, 1, 2, 3, 0, 0, 0, 4, 3, 1, 23, 20, 17], [40, 26, 0, 14, 1, 0, 2, 16, 0, 1, 9, 14, 0, 26], [2, 1, 0, 11, 34, 0, 0, 5, 1, 1, 0, 3, 6, 31, 9, 1, 0, 0, 0, 1, 21, 18, 15, 3], [2, 1, 0, 1, 29, 0, 0, 0, 0, 7, 5, 9, 9, 6, 14, 0, 2, 2, 0, 0, 3, 12, 20, 21, 5, 0, 20], [4, 0, 0, 1, 20, 1, 1, 1, 0, 4, 7, 17, 2, 4, 6, 0, 3, 6, 0, 0, 12, 12, 6, 3, 39, 4, 29], [7, 1, 0, 21, 6, 2, 0, 9, 0, 14, 13, 37, 0, 0, 4, 0, 0, 8, 8, 13, 15, 26, 0], [0, 2, 1, 8, 36, 1, 1, 0, 6, 2, 18, 5, 18, 4, 1, 0, 0, 0, 8, 9, 1, 5, 12, 33, 17], [10, 0, 2, 2, 36, 1, 0, 0, 1, 0, 0, 13, 21, 2, 15, 0, 1, 1, 0, 0, 5, 0, 0, 12, 6, 23, 42], [0, 2, 0, 2, 11, 49, 18, 0, 15, 0, 22, 0, 0, 0, 6, 2, 20, 2, 8, 0, 36], [1, 2, 39, 2, 0, 2, 0, 14, 5, 13, 0, 15, 6, 0, 25, 0, 0, 0, 6, 26, 24, 5, 2, 2, 11], [7, 3, 0, 9, 58, 7, 0, 8, 2, 6, 1, 8, 7, 0, 0, 1, 7, 0, 0, 19, 18, 10, 10, 8, 10, 10], [1, 0, 0, 1, 24, 4, 0, 1, 5, 10, 21, 16, 7, 11, 2, 2, 0, 0, 0, 23, 5, 20, 25, 26, 7], [3, 4, 1, 13, 4, 37, 10, 13, 12, 2, 6, 4, 0, 0, 5, 18, 21, 4, 33, 22, 13], [1, 0, 0, 2, 53, 0, 0, 3, 0, 2, 4, 22, 3, 9, 35, 1, 0, 0, 0, 0, 14, 2, 4, 13, 33, 7, 21], [2, 0, 2, 0, 11, 3, 0, 4, 1, 4, 3, 1, 7, 0, 5, 0, 8, 0, 0, 0, 9, 26, 33, 23, 32, 58, 6], [13, 0, 0, 8, 48, 2, 2, 1, 1, 12, 7, 13, 3, 16, 0, 2, 7, 0, 2, 6, 2, 49, 41, 5, 1, 0], [2, 0, 1, 5, 39, 2, 0, 1, 1, 5, 4, 15, 19, 14, 15, 3, 1, 4, 1, 28, 14, 12, 38, 0, 0, 18], [3, 1, 1, 3, 56, 20, 2, 1, 0, 23, 9, 13, 0, 33, 0, 1, 3, 0, 0, 16, 8, 0, 4, 29, 22, 1], [1, 0, 0, 2, 6, 24, 12, 36, 48, 3, 1, 18, 0, 0, 2, 2, 9, 39, 52], [3, 1, 1, 2, 53, 1, 0, 0, 1, 5, 6, 28, 7, 6, 0, 3, 0, 0, 0, 49, 6, 36, 0, 24, 33], [0, 0, 0, 0, 8, 0, 0, 0, 4, 9, 21, 15, 4, 14, 0, 2, 0, 0, 0, 50, 0, 17, 22, 14, 61, 24], [4, 3, 0, 22, 25, 0, 0, 9, 1, 32, 29, 13, 34, 11, 13, 3, 7, 4, 1, 0, 39, 20, 0, 0, 7, 17], [0, 32, 9, 4, 7, 52, 19, 0, 0, 2, 0, 0, 15, 4, 9, 25, 51, 14, 55], [6, 3, 1, 12, 42, 3, 0, 2, 0, 14, 13, 15, 19, 9, 16, 0, 18, 3, 2, 0, 41, 3, 9, 52, 7, 14, 0], [11, 2, 1, 5, 61, 2, 1, 2, 3, 10, 2, 40, 11, 15, 47, 7, 2, 38, 0, 1, 9, 0, 27, 11], [14, 0, 0, 8, 29, 16, 1, 9, 2, 22, 23, 42, 6, 55, 56, 8, 3, 0, 1, 3, 0, 19, 4], [5, 4, 3, 11, 52, 8, 0, 2, 0, 9, 8, 27, 4, 23, 27, 0, 0, 16, 0, 0, 12, 20, 8, 27, 22, 16, 29], [0, 0, 0, 20, 75, 12, 0, 8, 0, 0, 13, 47, 19, 0, 14, 2, 0, 2, 0, 0, 3, 22, 45, 6, 18, 18, 19]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

