created: 20230506003334000
creator: Drevarr
modified: 20230705163528693
modifier: drevarr
tags: ChartData
title: 202305060033_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Kmpek", "Viral Marketing", "Mistwalker Caelon", "Xanvias Einzbern", "Zaylen Harker", "Smol Daddy Tika", "Aronorf Xideliesi", "Blancooo Padreee", "Ark Darkness", "Kos\u00e4ir", "Khailerian", "Air One Com", "Lucas Ryn", "Solus Sanctus", "Bella Sassy", "Koralia Danai", "Jupi Jupi Jupi"];
const professions = ["Vindicator", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.7553, 13.8478, 1.2739, 0.0, 0.0, 0.0, 4.4546, 2.2109, 6.1641, 1.386, 0.0, 2.1638, 7.4844, 0.0, 6.204, 23.5656], [8.7991, 30.5698, 0.8046, 1.6317, 0.0, 0.0, 65.7059], [4.8884, 16.4606, 2.682, 0.0, 0.0, 0.0, 6.6325, 10.9134, 0.9148, 0.2477, 1.1696, 14.742, 3.6808, 11.844, 33.3846], [3.1997, 12.5414, 3.6207, 0.0, 0.0, 0.0, 20.7883, 7.4128, 6.7704, 1.5523, 2.6006, 1.1696, 12.9276, 1.9784, 13.536, 29.9479], [17.1538, 38.6694, 11.5996, 3.2301, 0.0, 67.562], [8.3547, 16.9832, 7.3755, 0.0, 0.0, 0.0, 19.3034, 8.3232, 10.8124, 1.0811, 0.0, 3.5088, 19.278, 2.3465, 18.612, 36.3303], [2.6128, 0.3352, 0.0, 0.0, 41.5766, 13.3951, 10.5092, 4.4629, 0.2477, 0.4094, 19.0512, 2.4385, 19.74, 51.5497], [8.7102, 13.5866, 8.9847, 0.4662, 0.0, 0.0, 30.44, 7.933, 9.5998, 2.4948, 0.0, 0.4386, 19.7316, 3.7268, 17.202, 47.6222], [11.4655, 27.6957, 2.2127, 0.9657, 0.0, 0.0, 44.5464, 11.1843, 9.5998, 2.6888, 0.0413, 0.0, 19.0512, 2.8066, 24.816, 66.7692], [17.1538, 28.4795, 7.1743, 1.6983, 0.0, 1.2659, 44.9176, 19.1173, 10.5092, 3.6313, 3.0547, 2.8655, 26.9892, 7.5917, 23.97, 56.4593], [2.3109, 19.596, 0.0, 0.0, 0.0, 0.0, 50.8571, 12.8749, 16.2691, 2.5502, 1.3622, 1.6667, 31.752, 5.3372, 46.812, 78.0611], [12.7098, 33.1826, 5.0288, 0.0333, 0.0, 0.0, 49.3723, 11.9646, 14.8543, 6.2093, 1.6512, 1.8714, 30.1644, 7.0855, 40.326, 65.2964], [16.265, 34.7502, 11.3985, 1.7316, 0.0, 0.178, 59.7664, 21.3282, 15.3596, 6.736, 2.7245, 0.4386, 32.886, 3.7728, 41.736, 63.3326], [13.5098, 45.9853, 2.3468, 1.1655, 0.0, 0.3956, 76.8425, 15.2158, 22.13, 4.7124, 1.5686, 1.6959, 43.092, 3.2667, 27.354, 67.2602], [19.8202, 52.5173, 15.1533, 3.5631, 3.3444, 0.8505, 78.3274, 26.01, 22.8373, 7.4012, 4.3757, 41.5044, 11.0884, 59.502, 95.7353], [27.1084, 66.1038, 9.9234, 3.7629, 0.0, 0.0, 81.6684, 28.3509, 23.8478, 7.817, 3.0134, 2.8363, 52.3908, 5.9813, 65.706, 120.7737], [29.3304, 60.8782, 16.5613, 0.0, 0.0, 0.0, 87.6079, 33.5529, 24.1509, 8.9536, 9.3293, 6.8129, 56.4732, 12.1466, 59.502, 106.5361]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

