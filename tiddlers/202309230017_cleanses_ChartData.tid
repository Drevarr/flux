created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Darkandshadow", "Air One Com", "Ice Jasminie", "Mort\u00e4rion", "Mimbsi", "Black Raspberry Pie", "Elon Illusionblade", "Anita Strips", "Grasszanine", "Klavde\u00efa", "Varen Frostwood", "Revenant Brandorf", "High Sorcer Baradun", "Seiker Novus Terra", "Leafzely", "Arriasa", "Tegan Parker", "Venomina The Sly", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Virtuoso", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Chronomancer", "Tempest", "Vindicator", "Tempest", "Tempest", "Scrapper", "Druid", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1469, 0.1891, 0.3487, 0.1975, 0.0, 0.3109, 0.2105, 0.0, 0.1625, 0.0, 0.0238, 0.0, 0.0], [0.0, 0.0644, 0.0, 0.0588, 0.1382, 0.0, 0.0123, 0.0102, 0.0756, 0.0, 0.0875, 0.0, 0.0357, 0.3636, 0.2913, 0.0476, 0.0957, 0.0, 0.0897, 0.0328, 0.175, 0.0787, 0.0556, 0.0833, 0.0135, 0.0], [0.0787, 0.2011, 0.377, 0.3, 0.5169, 0.4444, 0.3611, 0.1892], [0.0, 0.1495, 0.1622, 0.1597, 0.2829, 0.2222, 0.3265, 0.1429, 0.0, 0.0, 0.425, 0.0, 0.0], [0.0168, 0.0, 0.325, 0.0, 0.131, 0.2424, 0.5906, 0.2857, 0.2249, 0.0, 0.1114, 0.0, 0.2375, 0.2697, 0.2037, 0.3472, 0.1216], [0.0, 0.1753, 0.0541, 0.0042, 0.1974, 0.1975, 0.0612, 0.0588, 0.0263, 0.0, 0.275, 0.0, 0.0476, 0.0606, 0.0, 0.1667, 0.2201, 0.0337, 0.2174, 0.0492, 0.025, 0.2809, 0.2222, 0.0, 0.5541, 0.0], [0.0, 0.2738, 0.1818, 0.5197, 0.1667, 0.3014, 0.0674, 0.2092, 0.082, 0.1, 0.2247, 0.7407, 0.5833, 0.1892, 0.1061], [0.0, 0.1031, 0.0811, 0.1429, 0.1645, 0.0, 0.358, 0.1633, 0.0084, 0.0263, 0.0, 0.1125, 0.0, 0.2619, 0.2879, 0.2047, 0.2976, 0.1244, 0.1348, 0.1549, 0.0, 0.1875, 0.1348, 0.2963, 0.1389, 0.0541], [0.0, 0.1082, 0.0, 0.1345, 0.3355, 0.0123, 0.0, 0.0252, 0.0, 0.1625, 0.2619, 0.3485, 0.5984, 0.1548, 0.2057, 0.0, 0.144, 0.0164, 0.2125, 0.2135, 0.1852, 0.2083, 0.0405, 0.0758], [0.4388, 0.3193, 0.0, 0.0, 0.2875, 0.131, 0.2424, 0.7323, 0.1786, 0.2967, 0.191, 0.1168, 0.2459, 0.45, 0.191, 0.4259, 0.5833], [0.0, 0.1134, 0.0541, 0.2689, 0.4539, 0.2963, 0.0102, 0.3613, 0.0, 0.475, 0.0, 0.2024, 0.5455, 0.0945, 0.2381, 0.445, 0.0112, 0.3207, 0.0164, 0.4625, 0.618, 0.2222, 0.1944, 0.0811, 0.0], [0.0, 0.2887, 0.0811, 0.2437, 0.6118, 0.0, 0.2551, 0.2353, 0.2105, 0.0, 0.3875, 0.131, 0.4848, 0.6378, 0.131, 0.3445, 0.1124, 0.2065, 0.1311, 0.25, 0.4157, 0.3704, 0.1389, 0.2432, 0.0], [0.1111, 0.6031, 0.4324, 0.2017, 0.8816, 0.8272, 0.9388, 0.437, 0.3421, 0.0, 0.7375, 0.8504], [0.0444, 0.4691, 0.3784, 0.7143, 0.8487, 0.4198, 0.398, 0.3866, 0.2632, 1.1625, 0.0, 0.5357, 0.6818, 1.7323, 0.8571, 0.8278, 0.3258], [0.0889, 0.4536, 0.4324, 0.5462, 0.8684, 0.0, 0.4198, 0.4184, 0.2689, 0.0, 0.0, 0.8, 0.0, 0.7024, 1.5303, 0.4961, 0.6071, 0.5837, 0.3258, 0.4701, 0.2131, 0.5625, 0.809, 0.8333, 0.7778, 0.3919, 0.0], [0.0, 0.8299, 0.6757, 0.9664, 1.3421, 0.7654, 0.6735, 0.5798, 0.5, 1.5125, 0.0, 0.5595, 1.2424, 0.0899, 0.8424, 0.082, 1.1, 0.9551, 0.1667], [0.0444, 0.8299, 0.4595, 0.6008, 1.2039, 0.0, 0.5802, 0.5918, 0.5714, 0.3947, 2.3625, 0.0, 1.5, 1.5606, 1.748, 0.3452, 1.11, 0.191, 0.5679, 0.1148, 0.9125, 1.3146, 1.5185, 0.5972, 0.5541], [0.0, 0.8634, 0.6757, 0.8319, 2.2961, 0.321, 1.449, 0.8655, 0.2105, 0.0, 1.325, 0.0, 1.2976, 1.3333, 2.0472, 0.369, 1.378, 0.1461, 0.5652, 0.2623, 1.25, 1.6854, 0.8889, 0.6944, 0.6622, 0.0303], [0.0889, 1.1057, 0.4324, 1.1555, 1.8947, 0.0, 0.4815, 1.3571, 0.8908, 0.5526, 0.0, 2.0875, 0.0, 1.1071, 1.9848, 2.6142, 1.0357, 1.2727, 0.3596, 1.0299, 0.2459, 1.4125, 2.236, 1.4444, 0.8472, 0.7027], [0.1778, 0.9871, 1.4324, 0.958, 1.8092, 0.0, 0.5309, 1.2041, 0.7983, 0.9474, 2.25, 0.0833, 1.131, 1.7727, 3.0551, 1.2024, 1.5981, 0.427, 0.7663, 0.6557, 1.5875, 2.3933, 1.1111, 1.25, 0.9054, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

