created: 20230419215809000
creator: Drevarr
modified: 20230705163525956
modifier: drevarr
tags: ChartData
title: 202304192158_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Bella Sassy", "Sumatra Satyricon", "Aira Draugr", "Rina Of Theros", "Oo Dads Mad", "Fecund Algorithm", "Jupi Jupi Jupi", "Nazhul Naxxremis", "High Sorcer Baradun", "Panther B Me", "Tootsie Pop Rocks", "Belvyn Brightblade", "Gabe Malhorn", "Smol Daddy Tika", "My Birthday Girl", "Elonith Requiem", "Tegan Parker", "Ark Darkness", "Be\u00eb", "Koralia Danai", "Zadie Miststep", "Drevarr Moonwillow", "Sygaldry Verdandi", "Etchery Howls", "Newtype Khan", "Miphest\u00f6", "Skye Nightroad", "Tribal S", "Sp\u00edcy Cheese", "Xanvias Einzbern", "Smol Gluvs", "Johosh The Great", "Mac Chiato", "Solus Sanctus", "Lord Erin The Wise", "Abigail Ryn", "Venomina The Siren", "Anita Strips", "Arcanophage Farra", "Eibh\u00ebar", "Mike The Archmagus", "Grasszanine", "Daddys Lil Orchid", "Kos\u00e4ir", "Corlyss Velaryonn", "Mistwalker Caelon", "Ryvalia Fazebringer", "Xyntharos", "Kmpek"];
const professions = ["Dragonhunter", "Firebrand", "Soulbeast", "Herald", "Scourge", "Spellbreaker", "Mechanist", "Firebrand", "Scourge", "Tempest", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Scourge", "Tempest", "Firebrand", "Scourge", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Tempest", "Scrapper", "Druid", "Berserker", "Berserker", "Scourge", "Firebrand", "Tempest", "Firebrand", "Weaver", "Tempest", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Weaver", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 34, 0, 8, 4, 0, 0, 0, 0, 3, 3, 28, 9], [0, 0, 16, 0, 10, 3, 30, 0, 0, 2, 0, 1, 13, 8, 0, 7, 3, 8, 0, 1, 0], [0, 1, 19, 2, 15, 7, 20, 10, 0, 0, 13, 0, 14, 4], [0, 18, 16, 20, 46, 5], [0, 0, 5, 0, 2, 2, 18, 12, 0, 0, 0, 0, 19, 2, 4, 11, 0, 5, 17, 0, 8, 2], [0, 49, 8, 5, 25, 0, 0, 0, 2, 0, 18], [18, 24, 29, 32, 2, 2], [0, 0, 9, 0, 5, 1, 21, 0, 0, 0, 2, 0, 21, 17, 0, 12, 2, 3, 1, 14, 0], [1, 10, 7, 25, 16, 0, 4, 2, 16, 23, 0, 6, 5, 1, 2], [5, 13, 33, 4, 41, 23], [0, 0, 16, 0, 5, 6, 5, 0, 0, 0, 6, 0, 8, 33, 13, 7, 6, 9, 4, 1, 4, 1], [0, 8, 0, 1, 0, 21, 2, 0, 0, 3, 0, 10, 4, 17, 5, 9, 3, 7, 1, 16, 19], [0, 70, 5, 17, 6, 41], [4, 6, 5, 25, 0, 0, 3, 0, 9, 32, 15, 6, 1, 16, 4, 0, 12, 1], [0, 19, 3, 20, 10, 15, 1, 0, 2, 1, 0, 1, 28, 2, 6, 6, 4, 15, 0, 6, 1], [0, 0, 36, 0, 2, 0, 8, 9, 0, 0, 3, 0, 2, 11, 10, 6, 10, 20, 4, 0, 4, 20], [8, 25, 15, 0, 1, 11, 2, 0, 26, 29, 9, 0, 9, 2, 0, 3, 9], [1, 15, 1, 5, 3, 22, 2, 0, 0, 0, 0, 2, 35, 36, 6, 6, 5, 7, 4, 3], [0, 19, 9, 3, 2, 31, 0, 0, 0, 8, 0, 11, 35, 3, 5, 25, 4], [0, 15, 1, 6, 1, 20, 0, 0, 0, 0, 0, 10, 26, 3, 11, 24, 2, 4, 0, 6, 27], [0, 16, 2, 9, 0, 14, 2, 0, 0, 1, 0, 19, 33, 3, 18, 5, 4, 0, 22, 9], [0, 5, 1, 0, 0, 7, 8, 0, 0, 0, 0, 10, 7, 18, 0, 38, 15, 9, 0, 15, 25], [0, 0, 36, 6, 1, 8, 9, 7, 0, 0, 5, 0, 11, 16, 3, 9, 6, 28, 4, 0, 2, 8], [6, 0, 40, 16, 5, 0, 3, 7, 0, 0, 0, 0, 3, 24, 12, 5, 3, 11, 13, 1, 3, 7], [0, 1, 3, 2, 16, 5, 21, 6, 0, 0, 3, 0, 12, 15, 8, 7, 9, 10, 15, 0, 6, 29], [0, 39, 4, 11, 5, 8, 6, 0, 0, 1, 2, 14, 20, 14, 3, 14, 15, 12, 1, 11, 3], [0, 13, 1, 1, 2, 14, 3, 0, 0, 0, 5, 72, 8, 21, 11, 26, 14, 2, 5, 3], [0, 20, 0, 5, 8, 8, 17, 0, 5, 0, 15, 14, 30, 20, 3, 27, 3, 0, 14, 12], [0, 2, 2, 4, 5, 35, 1, 0, 0, 0, 0, 7, 46, 26, 23, 14, 8, 12, 0, 0, 17], [0, 0, 27, 1, 6, 5, 9, 9, 0, 0, 6, 0, 9, 31, 27, 12, 22, 6, 7, 0, 5, 24], [0, 0, 37, 2, 1, 4, 21, 6, 0, 1, 0, 4, 25, 14, 11, 8, 20, 16, 0, 25, 34], [0, 0, 15, 0, 3, 17, 45, 20, 0, 1, 10, 0, 7, 32, 9, 19, 19, 7, 10, 0, 8, 16], [0, 0, 49, 0, 1, 0, 21, 5, 0, 2, 0, 24, 57, 29, 7, 3, 10, 11, 0, 5, 26], [0, 7, 7, 24, 11, 41, 9, 0, 0, 4, 3, 14, 39, 20, 7, 35, 7, 18, 0, 5, 4], [0, 0, 24, 5, 8, 4, 34, 23, 0, 0, 8, 1, 7, 26, 28, 9, 8, 13, 21, 0, 17, 25], [0, 31, 4, 29, 24, 35, 20, 0, 0, 4, 0, 22, 26, 9, 29, 17, 5, 20, 1, 3], [0, 0, 26, 6, 21, 6, 7, 3, 0, 0, 2, 0, 4, 79, 30, 9, 21, 16, 41, 0, 18, 0], [0, 50, 2, 10, 6, 17, 19, 0, 7, 0, 9, 48, 21, 19, 26, 8, 26, 0, 19, 12], [0, 0, 6, 5, 17, 7, 14, 29, 0, 1, 8, 2, 24, 56, 18, 47, 32, 22, 10, 0, 7, 1], [0, 30, 10, 18, 9, 42, 31, 0, 0, 3, 0, 14, 65, 43, 9, 4, 21, 2, 2, 19, 7], [0, 34, 4, 14, 9, 23, 12, 0, 0, 5, 0, 15, 64, 35, 24, 26, 9, 24, 0, 22, 20], [0, 0, 59, 4, 18, 6, 36, 9, 0, 4, 7, 0, 25, 60, 54, 9, 3, 16, 9, 3, 28, 2], [0, 0, 15, 0, 14, 19, 50, 34, 0, 8, 2, 12, 32, 13, 27, 32, 21, 13, 0, 15, 62], [0, 0, 33, 1, 28, 25, 42, 18, 0, 3, 8, 5, 12, 38, 22, 37, 54, 14, 2, 15, 40], [0, 0, 30, 4, 32, 38, 23, 45, 0, 2, 2, 0, 31, 101, 17, 1, 63, 13], [1, 8, 31, 31, 17, 59, 0, 0, 18, 2, 13, 4, 33, 24, 43, 97, 52, 4, 20, 24], [0, 0, 44, 6, 22, 49, 82, 46, 0, 0, 12, 0, 27, 94, 27, 24, 21, 32, 17, 0, 17, 15], [0, 0, 48, 11, 21, 28, 32, 18, 0, 0, 17, 0, 51, 108, 34, 50, 35, 40, 31, 0, 40, 11], [0, 0, 70, 12, 52, 46, 26, 43, 0, 3, 9, 1, 26, 69, 31, 54, 29, 55, 18, 1, 49, 33], [0, 4, 41, 17, 42, 59, 51, 71, 0, 1, 19, 0, 19, 20, 38, 44, 61, 95, 12, 1, 45, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

