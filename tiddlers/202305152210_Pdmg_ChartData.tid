created: 20230515221048000
creator: Drevarr
modified: 20230705163530289
modifier: drevarr
tags: ChartData
title: 202305152210_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Farra The Bloodless", "Panther B Me", "Cyclotechnist Farra", "Rozaalyna", "River No Hug", "Rozaalyna", "River No Hug", "Panther B Me", "Lagmeloves", "Elonith Requiem", "Blancooo Padreee", "Husky Guard", "No Reserv\u00e9", "Elonith Requiem", "Be\u00eb", "Be\u00eb", "Demon Sekhmet", "Domitia Gravestorm", "Jeckyll Mbs", "Kyllarian", "Lord Erin The Wise", "Kary\u00edna", "Hauzzy", "Mistwalker Caelon", "Mike The Archmagus", "Xanvias Einzbern"];
const professions = ["Vindicator", "Reaper", "Scrapper", "Reaper", "Scourge", "Scourge", "Reaper", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Dragonhunter", "Vindicator", "Reaper", "Scourge", "Reaper", "Berserker", "Spellbreaker", "Berserker", "Reaper", "Weaver", "Vindicator", "Berserker", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[250.7826, 67.2219, 0.0, 71.2708, 49.3443, 96.1844, 317.83, 387.9057, 206.3636, 56.0207, 473.339, 641.0222, 4.2564, 1012.4767, 68.0725, 290.8571, 242.9154, 0.0], [958.9588, 941.9507, 570.5238, 1015.0242, 117.6291, 323.2406, 160.0217, 231.5556], [1126.2176, 685.3451, 488.0, 1181.5887, 17.2649, 472.6241, 499.3696, 56.719], [1326.6882, 548.831, 43.7619, 1098.621, 35.5166, 300.8346, 0.8261, 462.2549], [47.3278, 19.8947, 69.4375, 53.6368, 98.6127, 273.3947, 0.0, 194.3636, 100.1746, 779.1695, 814.3111, 207.0256, 662.0233, 107.029, 297.6786, 802.1692, 361.086], [17.7285, 0.0, 0.0, 31.4858, 7.3033, 248.2976, 70.7879, 8.3728, 1250.8136, 413.5111, 0.0, 1354.8256, 101.3043, 783.3214, 972.9923, 813.5376], [1162.9706, 1160.2042, 0.7143, 1204.1694, 158.7351, 325.218, 223.7609, 202.0327], [428.4203, 19.1358, 42.7895, 8.1042, 106.1651, 37.8934, 237.3482, 94.0943, 197.2727, 35.6124, 1036.339, 749.1778, 32.2051, 842.6628, 157.4058, 800.2679, 1024.7, 595.0753], [134.8462, 24.6667, 114.7811, 546.2203, 675.3333, 140.7436, 162.9302, 176.0536, 12.0154, 730.914, 509.1353, 715.5493, 298.0952, 915.379, 0.0, 212.3609, 35.4348, 220.8301], [238.6415, 102.7273, 264.4734, 1378.7627, 1204.9556, 0.0, 1286.6744, 172.7391, 812.5179, 1227.5231, 1140.3226], [315.1594, 29.0927, 118.5304, 85.0606, 120.1805, 519.4746, 253.5556, 371.0769, 410.6163, 158.6087, 0.0, 811.6385, 175.129, 823.9176, 285.5423, 784.4762, 828.6855, 240.9073, 82.0301, 274.5217, 13.366], [37.245, 0.0, 28.0833, 16.9434, 54.2992, 184.2611, 289.5152, 126.568, 510.339, 354.8222, 36.5897, 627.0698, 81.029, 311.2857, 780.8538, 490.3118, 406.0235, 735.2465, 200.2857, 813.3548, 177.0927, 229.4737, 58.1957, 239.3399], [255.5507, 57.0596, 178.0702, 150.8542, 36.7217, 107.0471, 212.1437, 0.0, 106.697, 88.0533, 817.1525, 483.9778, 162.7179, 658.0233, 223.971, 282.8571, 411.0769, 284.3656, 619.4235, 546.9225, 68.0476, 419.5726, 8.3709, 225.4737, 103.3261, 471.281], [1230.3882, 1325.2254, 1407.8571, 1237.25, 78.947, 571.2256, 273.913, 1067.9935], [1038.3768, 125.3642, 67.4035, 74.9167, 174.25, 225.0553, 115.753, 260.717, 134.5152, 255.5444, 1448.4068, 666.0667, 158.1026, 981.5581, 280.4928, 843.6071, 1366.8538, 748.8065], [1280.8706, 1170.5352, 791.9048, 1750.5726, 80.8675, 1183.0075, 112.9348, 1461.7908], [1418.3353, 2505.5986, 1453.9524, 2233.3226, 26.0397, 224.8496, 124.9783, 1039.1438], [565.029, 27.2947, 0.0, 47.1875, 17.9906, 135.7889, 353.7024, 0.0, 58.4848, 133.4231, 1323.322, 583.3556, 139.359, 567.5349, 209.2319, 295.8214, 1040.0231, 586.5591, 747.9941, 309.5352, 406.4762, 1166.2016, 45.9404, 66.7895, 24.4565, 434.7843], [519.6667, 23.9073, 56.0175, 0.0, 57.6792, 180.3197, 349.1822, 48.6415, 158.8485, 131.0533, 1156.8305, 1366.6889, 164.0769, 909.093, 308.5217, 0.0, 746.2366, 642.0176, 287.8239, 165.8095, 1287.9758, 286.8477, 386.188, 101.5435, 448.0784], [382.164, 132.9245, 28.0909, 18.6302, 1688.6441, 1521.6667, 139.5641, 1189.407, 420.1304, 512.3214, 544.9538, 720.3118, 1219.5765, 860.0634, 233.1905, 1553.6613, 65.3907, 555.5414, 341.3261, 1026.8301], [52.9106, 0.0, 0.0, 124.5094, 118.0143, 581.5709, 27.4717, 344.0, 80.6775, 1592.6271, 1123.2889, 126.8205, 1572.5581, 697.6232, 830.7143, 1928.7154, 1033.5269, 1274.1, 1201.1901, 491.7619, 1303.3548, 7.2053, 583.9925], [776.3478, 95.2947, 24.5965, 170.0, 140.6085, 192.5164, 431.1316, 72.0566, 208.9091, 153.8166, 1500.0678, 1186.4, 134.0513, 992.9767, 361.1739, 472.6786, 2290.3769, 973.6022, 1196.0118, 1131.6127, 148.7619, 1305.2016, 151.0596, 289.2632, 106.9348, 438.4641], [158.0132, 145.5263, 89.2917, 59.8019, 190.3504, 239.3522, 360.1509, 220.0606, 175.929, 1826.3051, 3768.3333, 326.4615, 2497.186, 127.2609, 612.625, 3448.7462, 744.2903, 1694.8353, 2575.4507, 1330.7143, 3731.9839, 192.3642, 1248.2857, 24.6522, 1810.5098], [1790.9275, 184.2947, 0.0, 116.125, 214.316, 506.832, 383.7348, 1135.7358, 339.7576, 252.7041, 2760.4576, 1335.9111, 185.7179, 2712.0, 437.913, 919.0536, 1999.5923, 1716.7204, 2070.8706, 1840.6901, 1360.8095, 2307.4194, 334.3113, 759.5338, 198.6957, 1544.915], [470.3333, 279.7881, 0.0, 76.8542, 300.8443, 451.209, 1362.4899, 102.0, 331.284, 1456.1695, 1145.9333, 18.4615, 1207.8372, 246.8551, 1300.5536, 2114.7385, 1758.5806, 1099.3412, 2212.3521, 921.8571, 2457.6532, 43.3907, 1218.985, 299.8913, 2005.2026], [1367.6812, 114.553, 196.4737, 83.3125, 83.4009, 231.6906, 842.9008, 128.4528, 361.6364, 301.9172, 3455.5424, 714.0667, 278.2821, 3086.8605, 302.5217, 2602.75, 3447.9538, 2719.2258, 2382.1529, 2321.6479, 128.4286, 4194.9839, 325.0596, 1408.5113, 93.5652, 2042.8105]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

