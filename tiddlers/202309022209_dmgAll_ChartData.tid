created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Willowshaven", "Leriel Nova", "Drevarr Moonwillow", "Serene Azura", "Scarlet Redwitch", "Sygaldry Verdandi", "Agent Pickpocket", "Melmyr", "Zatoshin", "Puppy Sky", "Fqa Necr", "Melody Phoenixstorm", "Newtype Khan", "Aira Draugr", "Scuba Steves", "Kandy Land", "Leyviathan", "Daphne Agla\u00e9", "Tootsie Pop Rocks", "Sight Beyond Sights", "Glorious Gluvs", "Elfina Lightborn", "Val Haden", "Rina Of Theros", "Mistwalker Cael", "Mistwalker Cael", "Sub Train", "Jamaass", "Lord Erin The Wise", "Legacy Of Mathus", "Mort\u00e4rion", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Catalyst", "Tempest", "Scrapper", "Dragonhunter", "Harbinger", "Willbender", "Thief", "Willbender", "Herald", "Reaper", "Scourge", "Scrapper", "Spellbreaker", "Herald", "Spellbreaker", "Soulbeast", "Herald", "Reaper", "Scrapper", "Vindicator", "Berserker", "Berserker", "Reaper", "Reaper", "Vindicator", "Herald", "Dragonhunter", "Reaper", "Weaver", "Berserker", "Scrapper", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[212.4917, 276.8423, 0.0, 369.3178, 89.9913, 0.0, 0.0, 438.6577, 19.1724, 437.5877, 487.4565, 442.8313, 417.75], [75.0714, 187.3686, 354.8904, 271.9167, 458.7368, 15.0968, 1122.9043, 166.5045, 374.53, 178.4009, 207.9535, 47.3645, 247.5913, 22.4, 126.7656, 174.973, 34.7126], [10.7853, 44.381, 160.9215, 134.9726, 338.625, 332.0395, 5.4516, 15.2, 61.5586, 257.3983, 229.4324, 483.6744, 219.7944, 416.5043, 0.0, 122.4593, 321.1712, 131.1494, 187.5794, 262.3406, 230.825, 164.3611], [283.7471, 799.6936, 923.6739, 726.8312, 1093.4325], [978.2957, 188.8153, 659.3533, 1097.464, 24.0233, 529.7009], [77.4915, 399.4524, 592.901, 388.5616, 286.625, 1531.2632, 210.2087, 224.2297, 296.3417, 436.6892, 708.6512], [95.2793, 764.49, 215.464, 76.2326, 0.0, 732.6609, 295.5182, 524.1148, 742.0721, 519.954, 0.0, 1069.8986, 139.6562], [92.4642, 2599.3425, 52.5833, 0.0, 1497.0609, 119.2252, 90.2367, 1215.2326, 225.2056, 770.3913, 654.9192, 388.2029, 157.0312, 372.1429], [3.34, 796.8468, 29.2558, 311.6636, 1159.0087, 297.3182, 859.2632, 1034.2703, 482.6437, 826.7131, 678.4565], [131.7571, 376.7857, 596.1502, 454.0548, 188.5, 1177.3553, 43.2258, 1240.0696, 38.0901, 782.0383, 501.4955], [366.1727, 1285.8421, 898.964, 942.3448, 1026.5125, 791.7174, 856.3188, 596.5079], [115.1977, 627.9215, 1067.8904, 2683.375, 1569.3026, 130.0087, 151.8198, 826.355, 621.4414], [45.2994, 287.5239, 396.1096, 635.7083, 681.3158, 116.7742, 427.0957, 117.1351, 434.81, 347.8378, 127.6047, 475.4953, 440.5826, 11.2455, 438.4737, 473.0721, 351.5747, 486.4429, 244.0362, 366.6875, 638.3968], [188.5424, 378.4524, 711.6195, 1205.7671, 3251.125, 1297.25, 217.5161, 150.8348, 287.482, 766.6133, 765.536], [370.5836, 643.6986, 854.1667, 328.3816, 0.0, 240.8435, 73.0811, 651.7267, 391.4414, 239.3953, 155.5607, 707.4609, 0.0, 436.0526, 1462.991, 0.0, 474.3955, 125.7246, 174.6062, 746.0397], [480.6949, 371.8464, 898.6027, 234.4167, 734.0, 337.7419, 1782.7739, 216.3468, 173.7917, 725.2748, 1027.7442, 740.271, 83.5913, 440.6182, 739.1962, 1614.5856, 591.5862, 505.3343, 1035.5797, 560.9125, 1138.8849], [109.1751, 92.2857, 520.9812, 655.411, 3105.125, 1564.5132, 65.0522, 343.9685, 919.3017, 0.0, 464.713, 12.9909, 726.6077, 1053.5045, 509.7011, 842.8914, 1093.3043, 605.225, 1208.4881], [319.0791, 246.881, 827.9659, 1055.0548, 1075.0417, 1966.3026, 0.0, 226.9414, 803.2517, 951.7703, 2224.3721, 772.2804, 781.6609, 117.0545, 712.1675, 341.8378, 217.6552, 360.6657, 214.3116, 583.2812, 1142.8968], [242.4124, 1528.5461, 1380.9452, 837.125, 1978.6184, 133.8065, 1985.3826, 352.7342, 1841.65, 609.6802, 94.2326, 60.0374, 56.2783, 83.8818, 39.9426, 51.2162, 21.046, 58.4763, 70.0435, 113.0312, 118.873], [615.9048, 755.2338, 148.3548, 586.5652, 932.036, 1288.7967, 2741.3604, 2364.6279, 1133.4766, 1001.8435, 1265.0, 466.4054, 175.5632, 1041.4819, 483.913, 422.35], [28.8588, 155.881, 801.6962, 1289.5479, 1869.4167, 1877.1316, 65.8065, 70.4957, 169.8829, 908.97, 1062.2432, 474.4186, 771.1028, 3126.9304, 125.6, 1251.8708, 2324.8378, 1146.8966, 722.61, 783.2464, 1121.2438, 877.6508], [70.129, 233.4348, 286.4685, 1460.765, 1367.5586, 3590.6512, 735.6075, 1684.8522, 292.0091, 1587.6124, 3181.5495, 1248.1494, 1272.5655, 1610.6594, 1720.1625, 1686.4841], [1481.1184, 60.2258, 188.7826, 250.2072, 1385.2783, 1458.4189, 2107.2093, 1616.9813, 2132.8, 717.9636, 1194.6077, 1493.3153, 1435.0575, 1839.7298, 746.4275, 1251.975, 2130.7897], [120.3446, 286.6429, 831.2543, 1897.5205, 1814.5417, 2491.0395, 220.7419, 229.0783, 317.5135, 1107.0217, 641.955, 1318.907, 429.9159, 1591.4435, 525.8727, 1377.0766, 1781.5586, 1162.2759, 1362.6435, 1480.8333, 1189.0187, 1752.3373], [640.4972, 113.5952, 2123.7099, 2211.9178, 487.7083, 5797.4474, 391.6957, 643.3378, 2523.17, 2043.3964], [2641.6744, 2593.1308, 4062.6174, 665.2545, 2108.3254, 3241.3694, 2560.6322, 2420.7799, 3063.4928, 2203.1312, 3659.6389], [411.3333, 487.1429, 1538.3771, 2136.1781, 118.7083, 2861.75, 3.129, 2927.8087, 379.5676, 759.4683, 2798.7973, 5220.2326, 4019.028, 2869.9391, 844.6909, 2095.2105, 3204.0901, 1278.8391], [974.9737, 152.2581, 3668.9043, 308.4324, 2723.7667, 1894.1171, 2209.5349, 1247.7383, 918.7273, 1162.4641, 1283.8378, 1926.0345, 1207.8802, 1879.4275, 976.5688, 2875.6111], [3033.9605, 0.0, 1038.2957, 270.7613, 1142.5033, 2179.0225, 741.5581, 497.9346, 3954.7478, 802.8, 4563.2201, 1503.6126, 907.3563, 2220.571, 4053.8043, 2830.775, 2267.9008], [556.1186, 59.0238, 1844.3003, 2544.4795, 1649.75, 2442.9474, 397.1935, 985.7739, 472.6036, 904.2467, 681.473, 4176.9302, 1484.1682, 4861.3043, 382.2636, 1999.3397, 2498.4595, 420.5747, 1882.7465, 1103.7609, 2596.1687, 2076.9524], [735.1017, 781.619, 1834.3652, 5572.6849, 77.1667, 1854.3026, 2363.6261, 619.5405, 1942.8083, 1915.2477, 2413.7442, 2565.0654, 835.2174, 473.8909, 2084.0813, 1436.5495, 1194.2299, 1908.0669, 1943.2681, 1213.3875, 1545.7341], [230.6158, 146.2857, 1876.302, 2044.0137, 5894.625, 3762.2237, 174.129, 267.0261, 104.509, 2665.8317, 2436.2342, 2097.3023, 1944.9159, 2576.9826, 569.5727, 1663.4641, 2746.8919, 2805.0345, 2497.9916, 2515.2319, 1416.7, 2953.9524], [623.7401, 391.4524, 3665.5683, 4523.5342, 842.8333, 6978.6053, 1077.6522, 481.9279, 3795.825, 3784.4144, 9172.1163, 6152.1121, 9997.0435, 760.0364, 4509.488, 3811.6577, 4871.9655, 1370.9944, 4183.6522, 5274.6938, 4006.369]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

