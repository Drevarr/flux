created: 20230426221022000
creator: Drevarr
modified: 20230705163526860
modifier: drevarr
tags: ChartData
title: 202304262210_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Freylk Nasferatu", "Long Poke", "Panther B Me", "Oo Dads Mad", "Tootsie Poppa", "Seren Nightroad", "Newtype Khan", "Blancooo Padreee", "Tika Rucola", "Rozaalyna", "Primal Clone", "Smol Gluvs", "Solo Bloodborn", "Grasszanine", "Black Raspberry Pie", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Scourge", "Reaper", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0462, 0.0641, 0.1653, 0.0, 0.1364, 0.025, 0.1227, 0.0211], [0.1821, 0.1229, 0.0], [0.0923, 0.0833, 0.1398, 0.0, 0.0076, 0.0, 0.184, 0.0042, 0.0, 0.0, 0.0, 0.0805, 0.0308, 0.0, 0.0, 0.0188], [0.1077, 0.1282, 0.161, 0.0, 0.0, 0.0, 0.1902, 0.0063], [0.0, 0.1308, 0.1949, 0.0, 0.0303, 0.0, 0.0429, 0.0169, 0.0, 0.0099, 0.0, 0.0575, 0.0115, 0.0667, 0.0101, 0.0106], [0.0615, 0.109, 0.411, 0.0075, 0.0227, 0.0, 0.184, 0.0274, 0.0, 0.0049], [0.109, 0.2331, 0.0075, 0.0, 0.0, 0.0429, 0.0179, 0.0, 0.0665, 0.0, 0.0575, 0.0692, 0.1556, 0.0202, 0.04], [0.0462, 0.1013, 0.2839, 0.0, 0.0, 0.0, 0.2331, 0.0095, 0.0, 0.0887, 0.0465, 0.1149, 0.0308, 0.0667, 0.0, 0.0177], [0.0462, 0.1256, 0.2585, 0.0224, 0.0227, 0.1625, 0.0368, 0.0359, 0.0049, 0.0567, 0.0233, 0.0862, 0.1154, 0.2, 0.0202, 0.0648], [0.0923, 0.1205, 0.2966, 0.0149, 0.0379, 0.1, 0.0552, 0.0369, 0.0, 0.0591, 0.0233, 0.1609, 0.0308, 0.0, 0.0606, 0.0754], [0.0923, 0.159, 0.2034, 0.0299, 0.053, 0.0125, 0.1779, 0.0443, 0.0148, 0.0837, 0.0, 0.092, 0.0577, 0.1778, 0.0707, 0.0813], [0.1603, 0.3814, 0.0299, 0.0455, 0.025, 0.2761, 0.0264, 0.0148, 0.069, 0.0, 0.1494, 0.0692, 0.0222, 0.0, 0.0683], [0.1077, 0.1487, 0.339, 0.0, 0.0, 0.025, 0.1902, 0.0432, 0.0, 0.1158, 0.0, 0.1724, 0.0462, 0.0, 0.0, 0.0872], [0.2333, 0.2924, 0.0149, 0.0, 0.0, 0.1718, 0.0686, 0.0, 0.0837, 0.0, 0.1264, 0.0385, 0.0889, 0.0101, 0.1166], [0.1538, 0.3026, 0.4364, 0.0373, 0.0455, 0.075, 0.2515, 0.0728, 0.0246, 0.0616, 0.0233, 0.046, 0.0462, 0.0444, 0.0404, 0.1802], [0.3115, 0.572, 0.0299, 0.0227, 0.025, 0.4172, 0.0665, 0.0099, 0.1872, 0.1163, 0.2816, 0.1192, 0.4444, 0.101, 0.1154], [0.2462, 0.3936, 0.6017, 0.0672, 0.1667, 0.1125, 0.3988, 0.1171, 0.0197, 0.1675, 0.1163, 0.1954, 0.1423, 0.2667, 0.1111, 0.212]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

