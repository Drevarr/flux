created: 20230405220700000
creator: Drevarr
modified: 20230705163524593
modifier: drevarr
tags: ChartData
title: 202304052207_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Mac Chiato", "Xyntharos", "Grasszanine", "Yuuka Chou", "Newtype Khan", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Druid", "Tempest", "Vindicator", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.2532, 79.7214, 0.0, 0.0, 0.0, 164.4053, 0.0, 70.173, 87.2252, 0.0, 0.0, 65.772, 0.0, 72.2407, 0.0, 0.0, 0.0, 82.9188], [0.0, 0.0, 52.1833, 87.1972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78.9248, 0.0, 0.0, 62.3162, 0.0, 22.2827, 185.8248, 114.3137, 0.0676, 27.4536, 0.0, 0.0, 58.3668], [15.4913, 25.0078, 20.3495, 78.9149, 11.2499, 4.9949, 14.7163, 16.9823, 9.8982, 9.8157, 18.6984, 0.0, 83.948, 61.0482, 15.9702, 66.9484, 17.0755, 32.7015, 104.9328, 84.605, 22.9232, 39.1716, 23.3153, 6.9222, 58.2552], [0.0, 66.3749, 0.0, 167.0427, 0.0, 0.0, 0.0, 0.0, 0.0, 49.1098, 0.0, 0.0, 65.8132, 32.8838, 62.165, 160.2916, 0.0, 0.0, 171.3096, 125.4544, 0.0, 57.4182, 97.2444, 0.0, 57.9204], [52.5697, 52.9596, 57.3574, 55.2122, 177.6872, 66.9856, 106.6666, 191.0564, 59.561, 24.6402, 206.0856, 152.5797, 63.2923, 102.951, 0.0, 19.2926, 147.9816], [84.0429, 0.0, 0.0, 419.3284, 0.0, 0.0, 69.1798, 110.153, 56.1744, 4.4845, 112.4501, 47.5405, 248.0128, 59.3736, 44.799, 148.0556, 0.0, 75.7458, 474.9192, 233.6326, 5.7026, 51.2802, 161.9324, 0.0, 52.2288], [0.0, 0.0, 0.0, 170.9512, 67.4788, 0.0, 0.0, 44.861, 93.1164, 65.1974, 0.0, 324.8091, 89.2126, 54.9806, 187.8226, 0.0, 71.1828, 645.9264, 668.4444, 42.9838, 192.231, 124.5961, 80.6182, 137.1564], [83.7675, 83.2832, 172.9034, 278.1563, 64.2941, 0.0, 74.3519, 103.4296, 87.8712, 128.2624, 100.0884, 22.1816, 475.9326, 317.7249, 77.8149, 299.1702, 87.5398, 243.7403, 798.4872, 658.9183, 73.3677, 247.5846, 155.3468, 109.3859, 535.2336]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

