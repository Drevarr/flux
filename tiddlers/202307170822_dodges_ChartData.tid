created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Lei Hemlock", "Mechcem", "Flick Embermage", "Fluffernaut", "Tirluka", "Sakis Ranger", "Mmathuss", "Big Boy Belkins", "Surethang Smarts", "Tridogen", "Warrior W Warrior", "Drac Tepes", "Levente Tangnu", "The C\u00fcre", "Elonith Primal", "Reina Armitage", "Magix Shot", "Vesnan", "Alfir Strom", "Charr Surethang", "Tridoren", "Violet Stab", "Wreakit Herm", "Luke The Ghastly", "Dizzy Bunnyhopper", "Unbound Serenity", "Necrotic Windrunner", "Wren Duskbloom", "Elonith Requiem", "Flick Embermage", "Tegan Parker", "Gamora Titus", "Mierin Farshaw", "Latedoctor", "Big Boy Belkins", "Drevarr Moonwillow", "Xanvias Tsolice", "Legoh Brave", "Thought Bound", "Gestern Yesteryear"];
const professions = ["Necromancer", "Scrapper", "Tempest", "Firebrand", "Tempest", "Druid", "Firebrand", "Scrapper", "Holosmith", "Scrapper", "Spellbreaker", "Scourge", "Spellbreaker", "Firebrand", "Tempest", "Druid", "Druid", "Reaper", "Druid", "Berserker", "Reaper", "Firebrand", "Scrapper", "Scourge", "Holosmith", "Reaper", "Reaper", "Reaper", "Reaper", "Weaver", "Tempest", "Firebrand", "Chronomancer", "Reaper", "Holosmith", "Scrapper", "Weaver", "Tempest", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 3, 2, 3], [8, 8], [13, 2, 2], [4, 8, 3, 2], [0, 1, 3, 0, 3, 2, 6, 4], [2, 3, 1, 1, 0, 6, 1, 6], [2, 10, 10, 0], [7, 18], [2, 1, 0, 1, 4, 5, 5, 7, 1, 3], [1, 1, 0, 4, 3, 1, 3, 5, 0, 0, 0, 1, 5, 2, 1, 2], [7, 1, 3, 0, 4, 6, 5, 3], [3, 0, 8, 8, 4, 0, 0, 1, 1, 2, 2, 3], [0, 7, 6, 0, 5, 0, 0, 1, 2, 0, 3, 9], [1, 3, 1, 16, 12], [0, 3, 6, 9, 17], [7, 0, 0, 1, 1, 4, 0, 2, 0, 0, 1, 4, 0, 5, 0, 3, 8], [2, 6, 6, 5, 5, 6, 2, 4, 0, 5], [1, 5, 2, 1, 0, 1, 1, 2, 0, 2, 4, 6, 4, 1, 0, 0, 0, 1, 10], [2, 0, 3, 3, 1, 2, 0, 3, 0, 2, 5, 1, 2, 5, 0, 9, 1, 5, 0, 0, 1, 2], [2, 6, 3, 0, 1, 3, 0, 2, 1, 0, 0, 12, 11, 3, 0, 0, 2, 6], [4, 7, 4, 1, 3, 0, 4, 6, 11, 13], [3, 2, 11, 13, 3, 1, 1, 0, 3, 2, 1, 15], [4, 4, 4, 1, 3, 8, 16, 16], [3, 0, 2, 2, 3, 2, 5, 14, 1, 6, 2, 9, 10, 2], [2, 4, 1, 3, 1, 3, 3, 0, 3, 1, 3, 10, 3, 0, 0, 1, 4, 7, 12], [2, 7, 2, 3, 2, 2, 2, 4, 0, 6, 1, 2, 10, 9, 5, 1, 1, 1, 5], [7, 13, 11, 4, 1, 3, 0, 1, 7, 2, 17], [2, 10, 2, 3, 1, 2, 2, 4, 1, 3, 1, 9, 13, 7, 0, 0, 2, 6], [1, 2, 3, 8, 8, 1, 2, 3, 1, 0, 4, 0, 5, 2, 0, 10, 11, 6, 2, 1], [2, 7, 7, 3, 4, 2, 2, 3, 3, 0, 2, 2, 19, 14], [3, 4, 1, 11, 10, 3, 1, 7, 1, 1, 6, 2, 5, 1, 0, 8, 8, 8, 0], [4, 6, 5, 0, 4, 5, 3, 9, 2, 20, 15, 8, 2, 3], [5, 1, 4, 1, 1, 6, 2, 6, 6, 0, 1, 4, 2, 5, 0, 1, 12, 12, 4, 1, 0, 0, 6, 5, 8, 8], [3, 1, 1, 1, 2, 3, 6, 7, 0, 6, 1, 5, 8, 1, 3, 3, 0, 2, 6, 0, 4, 2, 8, 10, 6, 3, 1, 2, 2, 9], [16, 0, 5, 3, 11, 3, 1, 9, 0, 5, 2, 1, 16, 5, 3, 5, 1, 4, 16], [4, 3, 3, 2, 4, 1, 12, 4, 0, 4, 1, 6, 7, 3, 5, 4, 1, 2, 3, 0, 3, 0, 0, 9, 9, 6, 2, 0, 1, 5, 7], [2, 1, 1, 1, 0, 5, 5, 8, 1, 2, 1, 5, 3, 2, 7, 4, 1, 1, 2, 0, 3, 0, 0, 5, 10, 5, 0, 0, 0, 2, 7, 8, 23], [12, 1, 7, 1, 14, 10, 2, 3, 3, 2, 3, 6, 1, 8, 3, 0, 20, 11, 8, 0], [2, 7, 9, 1, 6, 3, 0, 4, 5, 3, 2, 3, 3, 12, 17, 8, 1, 1, 0, 1, 8, 10, 19], [3, 1, 0, 2, 3, 5, 6, 11, 1, 4, 2, 7, 4, 3, 4, 6, 0, 2, 4, 4, 5, 3, 2, 16, 16, 5, 0, 1, 0, 4, 8, 14, 20]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

