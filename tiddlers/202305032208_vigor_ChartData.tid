created: 20230503220838000
creator: Drevarr
modified: 20230705163528219
modifier: drevarr
tags: ChartData
title: 202305032208_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Allie Mistwalker", "Tegan Parker", "Smol Daddy Tika", "Mac Adaymia", "Arriasa", "Blancooo Padreee", "Zadie Miststep", "Venomina The Fierce", "Artakama Nahid", "Newtype Khan", "Skye Nightroad", "\u00c1rkantor", "Drevarr Moonwillow"];
const professions = ["Tempest", "Vindicator", "Tempest", "Spellbreaker", "Vindicator", "Druid", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[364.8715, 366.6195, 4.5276, 0.0, 68.8568, 69.7662, 0.0, 0.0, 462.6904, 0.0, 0.0, 0.0], [419.2968, 274.8983, 3.9616, 4.9216, 15.7153, 61.2255, 5.9446, 0.0, 27.921, 0.0, 357.4272, 315.8378], [0.0, 688.7173, 0.0, 0.0, 595.5974, 419.1284], [885.7992, 280.7303, 0.0, 0.0, 0.0, 40.7484, 0.0, 0.0, 499.4751, 22.9392, 0.0, 425.4758, 372.5171], [692.5339, 416.7215, 12.8228, 1.5971, 33.2181, 72.3387, 25.6958, 12.4545, 628.4434, 24.961, 3.3069, 535.7971, 238.2767], [915.7886, 165.4162, 44.9849, 0.0, 0.0, 171.2256, 0.0, 77.1289, 497.7024, 90.1664, 364.9882, 467.9769], [1620.5405, 986.3999, 37.7893, 30.3134, 69.8691, 0.0, 0.6519, 74.8991, 47.0578, 0.0, 187.3056, 110.7483], [748.0699, 420.9629, 0.0, 0.0, 62.8984, 104.3406, 31.2249, 0.0, 727.718, 0.0, 668.4576, 626.8281], [791.9434, 343.8217, 1.6817, 87.4395, 112.7784, 16.4914, 45.3235, 1076.5085, 0.0, 681.1738, 445.6035], [883.5778, 521.432, 30.6907, 85.2424, 148.5876, 30.0104, 0.0, 737.025, 5.5598, 54.1668, 554.6995, 665.2358], [1430.052, 644.4338, 37.6114, 0.0, 36.8676, 130.8888, 33.8776, 22.0956, 951.9721, 20.749, 0.0, 1125.2083, 947.5135], [1700.5123, 1251.4899, 7.891, 12.8898, 78.6136, 360.9732, 20.3905, 78.4327, 1395.6053, 67.3946, 1382.6246, 1262.2326], [2641.2922, 860.217, 19.7274, 11.5184, 22.7909, 212.7972, 4.9538, 12.3859, 1246.6935, 0.0, 18.251, 1068.5011, 1628.4106], [2718.4872, 1890.6219, 70.7761, 0.0, 167.2076, 403.368, 149.2212, 0.0, 2243.871, 43.5067, 133.1567, 2030.1178, 1991.9784]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

