created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Lhew Silverhead", "Soft And Chewy", "High Sorcer Baradun", "Drell The Silent", "Tegan Parker", "Venomina The Sly", "Revenant Brandorf", "Cat Wigglebooty", "Tootsie Pop Rocks", "Tribal S", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Druid", "Tempest", "Druid", "Tempest", "Druid", "Vindicator", "Scrapper", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.5658, 111.0793, 1166.0752, 121.0433, 19.5481, 0.0], [0.0, 147.9617, 60.3273, 1051.33, 86.1049, 0.0, 623.0263], [59.2431, 85.5558, 84.8252, 50.752, 292.2697, 181.374, 184.0509, 71.2954, 474.7821, 298.6614, 127.2544, 160.9939, 33.3318], [0.0, 44.837, 361.3571, 0.0, 61.5817, 282.3986, 376.4663, 138.9494, 55.5864, 88.3396, 52.1752, 25.6592, 109.9207, 326.1694, 34.1874, 34.236, 97.0083, 0.0, 25.7108, 35.1155], [98.3141, 97.5885, 154.8705, 0.0, 14.927, 1014.984, 99.2358, 27.6782, 33.2856, 347.4877, 60.7867, 188.6912, 137.3803, 102.789, 53.595, 85.7736, 21.7743, 76.5355, 0.0], [97.4243, 161.7774, 244.8437, 405.5436, 329.6481, 329.0122, 291.9362, 174.8916, 102.519, 245.1883, 34.239, 243.6817, 289.476], [84.1235, 88.334, 154.2489, 251.7184, 222.4854, 197.0829, 340.032, 826.2842, 180.9309, 41.4276, 103.1504, 115.9066, 2.703, 376.5496, 289.7476, 4.3992, 90.234, 80.3871, 41.9796, 545.8798], [10.1755, 97.2557, 1574.2916, 77.8317, 4.6467, 7.4888, 647.8364, 519.5203, 233.3143, 265.3688, 61.9634, 335.7774, 126.3413, 15.2085, 48.4146, 74.736, 74.308, 23.1176], [86.8704, 65.2976, 130.8344, 301.2442, 0.0, 0.0, 1933.8464, 239.6046, 121.7748, 32.4346, 147.3196, 671.1326, 326.9634, 441.4067, 224.9139, 72.7898, 99.7234, 166.5642, 67.392, 89.559, 80.3101, 50.4526, 50.544, 250.3494], [4.2952, 37.3434, 162.3039, 727.4568, 122.9339, 5059.3003, 371.8485, 361.1584, 190.1042, 1508.7931, 1238.6806, 213.2997, 588.6395, 220.1276, 145.3132, 176.8778, 242.8312, 105.3936, 84.51, 176.0873, 0.0, 79.6244, 419.7213], [191.8574, 234.4794, 110.6807, 451.899, 5149.4143, 416.0147, 786.5157, 297.6798, 2462.6721, 1783.1845, 438.2236, 991.9697, 83.4803, 366.8044, 6.1484, 969.473, 147.2796, 83.079, 408.1684, 173.7256, 256.7038, 1004.0466], [511.7731, 275.5405, 167.4356, 495.004, 60.0014, 61.534, 5504.7639, 514.7203, 617.2594, 465.267, 1461.1762, 1711.9986, 515.7911, 946.5462, 500.8819, 489.8086, 540.6808, 663.6751, 322.9668, 383.94, 428.9706, 461.8834, 317.2514, 667.9517]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

