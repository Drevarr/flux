created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Vee Usagi", "Drevarr Moonwillow", "Luke The Ghastly", "Venomina The Sly", "Tegan Parker", "Mike The Archmagus", "Zaedy Zae"];
const professions = ["Weaver", "Scourge", "Scrapper", "Scourge", "Druid", "Tempest", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[384.9276], [87.4358, 19.7169, 31.968, 18.6566, 50.976, 34.3728, 0.0, 20.5068, 12.4992, 38.9762, 27.5184, 31.0959, 11.415, 2.1773, 12.6781, 15.9565], [19.5771, 19.6232, 11.2039, 69.0258, 0.0, 230.799, 34.0095, 11.952, 7.5571, 24.5251, 24.9984, 0.0, 9.9912, 9.9882, 12.9129, 24.108, 31.675, 9.6533, 0.0, 26.5203, 2.5661, 37.5581, 119.5211, 15.2985, 20.5214, 0.0, 5.0674, 22.4808, 41.2965, 20.3777, 0.0, 7.7153, 203.7102, 15.3121, 18.9832, 2.5502], [8.7318, 222.9219, 40.3809, 37.824, 20.9002, 55.847, 27.28, 6.7096, 47.0856, 20.3856, 66.3864, 0.0, 41.3869, 9.8862, 8.7304, 33.8769, 0.0, 16.038, 30.2551, 105.4343, 14.2128, 0.0, 12.4114, 17.4215, 35.8501, 11.2273, 4.1001, 143.2588, 14.3797, 44.8967, 33.8744], [0.0, 171.828, 219.7692, 0.0, 0.0, 0.0, 626.1539, 108.4899, 201.6166, 134.493], [44.4246, 19.0663, 45.9032, 133.6046, 89.775, 668.7658, 101.8563, 45.024, 0.0, 43.8394, 18.4512, 0.0, 0.0, 0.0, 0.0, 44.3718, 0.0, 0.0, 54.1141, 45.833, 0.0, 186.0541, 55.4694, 49.829, 0.0, 0.0, 50.4029, 152.019, 51.5011, 81.0266, 0.0, 192.0849, 0.0, 50.8896, 40.7008], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 179.1801, 35.4536, 0.0, 118.0456, 0.0, 45.5479, 126.6451, 367.0153, 85.7374, 78.3544, 40.5702, 41.8424, 136.1737, 116.3484, 39.5213, 112.4928, 0.0, 618.1056, 77.4306, 79.3643, 82.0971], [0.0, 153.6772, 0.0, 316.471, 0.0, 1401.3361, 68.7939, 222.624, 0.0, 246.3274, 227.0192, 0.0, 153.732, 0.0, 270.5363, 123.5976, 0.0, 123.0757, 0.0, 161.9495, 50.3831, 264.4942, 694.8043, 25.8923, 175.2241, 0.7326, 110.2151, 212.303, 243.769, 96.9521, 0.0, 0.0, 1110.3008, 87.5834, 169.3921, 149.5368]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

