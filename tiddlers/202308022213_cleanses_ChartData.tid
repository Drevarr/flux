created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rk\u00e1ntor", "Black Raspberry Pie", "Arcanophage Farra", "Imalou", "Newtype Khan", "Primal Clone", "Rahani Sunray", "Eibh\u00ebar", "Tirluka", "High Sorcer Baradun", "Inedible Plant", "Tootsie Pop Rocks", "Cat Wigglebooty", "Tegan Parker", "Elementsofmathus", "Venomina The Sly", "Drevarr Moonwillow", "Zaedy Zae", "Tribal S"];
const professions = ["Scourge", "Chronomancer", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Vindicator", "Scrapper", "Scrapper", "Tempest", "Tempest", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1429, 0.1021, 0.0335, 0.0196, 0.0816, 0.0132, 0.0267, 0.0, 0.0233, 0.0508, 0.1842, 0.0, 0.0682, 0.0517, 0.097], [0.0, 0.0571, 0.017, 0.0239, 0.0294, 0.0496, 0.0, 0.1467, 0.0, 0.0698, 0.1829, 0.5921, 0.0, 0.0966, 0.0037, 0.0422], [0.0278, 0.0286, 0.0638, 0.0909, 0.0098, 0.039, 0.0329, 0.04, 0.1429, 0.0, 0.0671, 0.0395, 0.0, 0.0398, 0.1107, 0.1674], [0.0098, 0.0496, 0.0, 0.04, 0.0, 0.1159, 0.1579, 0.0137, 0.1023, 0.0738, 0.2025], [0.0, 0.0929, 0.1021, 0.0191, 0.0, 0.078, 0.0197, 0.04, 0.0, 0.1341, 0.2105, 0.0, 0.0682, 0.0517, 0.2152], [0.0, 0.1857, 0.0213, 0.0239, 0.0098, 0.0426, 0.0329, 0.0533, 0.3256, 0.0976, 0.4211, 0.0, 0.2386, 0.0886, 0.1688], [0.0, 0.0143, 0.017, 0.0383, 0.0686, 0.1064, 0.0132, 0.0533, 0.0, 0.2791, 0.128, 0.7105, 0.0, 0.2727, 0.0074, 0.2489], [0.0139, 0.1929, 0.034, 0.0, 0.0784, 0.0177, 0.0132, 0.1067, 0.0857, 0.0, 0.1565, 0.6711, 0.0, 0.3409, 0.1181, 0.1969], [0.5921, 0.0959, 0.6705, 0.7454, 0.2377], [0.5658, 0.0, 0.392, 0.3321, 0.8354], [0.0, 0.2786, 0.2128, 0.134, 0.1176, 0.1418, 0.0461, 0.0267, 0.1163, 0.3455, 0.1974, 0.0685, 0.2898, 0.2694, 0.5541], [0.0, 0.3, 0.3957, 0.1579, 0.0, 0.2447, 0.0197, 0.0133, 0.0, 0.0, 0.4695, 0.6842, 0.0, 0.3352, 0.3432, 0.6132], [0.0139, 0.4214, 0.5234, 0.3206, 0.1667, 0.383, 0.1447, 0.1867, 0.1429, 0.0233, 0.2398, 0.3684, 0.2192, 0.2216, 0.3801, 0.6329], [0.2222, 0.8, 0.6979, 0.2679, 0.1765, 0.2943, 0.0461, 0.0533, 0.1429, 0.0, 0.5366, 0.9737, 0.137, 0.4886, 0.4871, 1.3263], [0.0, 0.4643, 0.7957, 0.3349, 0.1569, 0.5709, 0.0921, 0.2667, 0.0, 0.685, 1.0658, 0.0, 0.5114, 0.5904, 1.301], [0.0, 0.2286, 0.966, 0.5837, 0.0, 0.0177, 0.0066, 0.5067, 0.1714, 0.7209, 0.8049, 1.6579, 0.0, 0.4886, 0.3653, 1.4262], [0.3194, 1.5071, 1.3404, 0.5837, 0.3824, 0.7872, 0.1842, 0.5333, 0.3143, 0.9302, 1.1524, 1.5263, 0.2603, 1.1193, 1.0295, 1.6793], [0.125, 1.35, 1.7021, 1.1196, 0.402, 1.156, 0.0592, 0.4133, 0.0, 0.3953, 1.3923, 1.8421, 0.2877, 1.2273, 1.2399, 1.6512], [0.3194, 1.5071, 1.817, 0.9474, 0.3333, 0.8191, 0.4013, 0.5067, 0.4884, 1.565, 2.5658, 0.0959, 1.0625, 1.1365, 2.1533]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

