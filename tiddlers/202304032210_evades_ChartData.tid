created: 20230403221011000
creator: Drevarr
modified: 20230705163524300
modifier: drevarr
tags: ChartData
title: 202304032210_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Slingsshot", "Sister Elon\u00edth", "Ateriuz", "Be\u00eb", "Black Raspberry Pie", "Drevarr Moonwillow", "Ak\u00e1nt\u00f3r", "Your Boy Sheep", "Azar Fletcher", "Etch\u00e9ry", "Zenek Tryst", "Tika Sumiko", "Riazera", "Jeckyll Mbs", "Tegan Parker", "Your Arch Nemesis", "Xanvias Tlesel", "Zaylen Harker", "Tootsie Pop Rocks", "Cat Wigglebooty", "Viral Marketing", "Solus Sanctus", "Smol Gluvs", "Zenek Tryst", "Johosh The Great", "Koralia Danai", "Fribble Bibble", "Sumatra Satyricon", "Tribal S", "My Birthday Girl", "High Sorcer Baradun", "Newtype Khan", "Blancooo Padreee", "Mac Chiato", "Il Dim Snail Il", "Eibh\u00ebar", "Venomina The Siren", "Lagertha Scorned", "Primal Clone", "Lord Erin The Wise", "Ryvalia Fazebringer", "Legacy Of Mathus", "Xyntharos", "Mistwalker Caelon"];
const professions = ["Untamed", "Dragonhunter", "Berserker", "Scourge", "Chronomancer", "Scrapper", "Druid", "Harbinger", "Soulbeast", "Berserker", "Tempest", "Tempest", "Soulbeast", "Berserker", "Tempest", "Scrapper", "Berserker", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Weaver", "Firebrand", "Firebrand", "Scrapper", "Soulbeast", "Druid", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Dragonhunter", "Chronomancer", "Tempest", "Scrapper", "Chronomancer", "Weaver", "Chronomancer", "Spellbreaker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 24, 1, 5, 4, 0, 0], [1, 0, 5, 14, 6, 1, 0, 0, 18, 0, 2, 0, 0, 0], [12, 0, 0, 2, 12, 11, 0, 0, 0, 7, 0, 5, 0, 0, 0], [4, 2, 9, 8, 0, 1, 2, 8, 0, 0, 0, 0, 12, 0, 4, 0, 0], [9, 10, 2, 0, 0, 0, 5, 11, 3, 0, 0, 0, 7, 0, 3, 0, 0, 0], [3, 8, 1, 3, 0, 0, 1, 13, 13, 0, 0, 10, 0, 0, 0, 0, 0], [4, 18, 4, 9, 0, 1, 2, 9, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 8, 41, 4], [4, 1, 17, 2, 0, 3, 7, 6, 3, 0, 12], [6, 13, 2, 13, 2, 0, 2, 9, 2, 0, 0, 9, 0], [3, 1, 9, 22, 5, 4, 0, 12, 0, 3, 0, 0, 0], [15, 9, 6, 3, 1, 0, 1, 18, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0], [8, 4, 15, 7, 1, 0, 8, 13, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0], [2, 28, 18, 7, 0, 3, 2, 3, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [2, 21, 3, 1, 11, 1, 0, 10, 1, 1, 16, 1, 0, 0, 0], [16, 9, 9, 0, 0, 4, 7, 1, 2, 0, 0, 15, 7, 0, 0], [2, 28, 0, 8, 0, 0, 1, 23, 3, 1, 0, 0, 8, 0, 0, 0, 0, 0], [5, 21, 3, 9, 1, 0, 17, 5, 1, 0, 15, 0, 0, 0, 0], [16, 29, 4, 7, 2, 0, 2, 3, 2, 5, 0, 7, 0, 2, 0, 0, 0], [1, 19, 9, 15, 0, 1, 7, 10, 3, 1, 0, 14, 0, 1, 0, 0], [6, 31, 1, 30, 0, 0, 10, 4, 3], [5, 20, 2, 2, 5, 0, 6, 17, 1, 2, 0, 0, 21, 0, 7, 0, 0, 0], [16, 17, 21, 5, 4, 0, 7, 11, 4, 0, 0, 0, 4], [22, 42, 15, 10], [5, 22, 4, 7, 4, 0, 4, 15, 1, 0, 0, 27, 0, 0, 0, 0, 1], [9, 24, 7, 7, 1, 0, 1, 10, 10, 0, 11, 0, 9, 2, 0, 0], [18, 2, 0, 31, 0, 1, 3, 22, 0, 1, 0, 0, 8, 0, 7, 0, 0, 0], [19, 17, 9, 3, 0, 0, 7, 12, 6, 0, 0, 0, 14, 0, 8, 2, 0, 0], [12, 20, 5, 14, 0, 0, 1, 24, 3, 0, 0, 0, 12, 7], [10, 13, 4, 15, 3, 0, 6, 7, 6, 3, 0, 0, 29, 0, 4, 1, 0, 0], [24, 15, 1, 21, 1, 0, 12, 19, 0, 3, 0, 0, 7, 3, 0, 0], [24, 25, 0, 2, 3, 0, 5, 15, 5, 2, 0, 0, 28, 0, 5, 0, 0, 0], [14, 36, 23, 7, 0, 0, 1, 17, 3, 0, 0, 0, 19, 0, 9, 0, 0, 0], [7, 17, 2, 11, 2, 3, 21, 23, 1, 3, 0, 0, 36, 0, 5, 0, 0, 0], [12, 32, 9, 7, 0, 0, 6, 14, 0, 1, 0, 0, 41, 1, 7, 2, 0, 0], [22, 31, 7, 24, 2, 0, 7, 20, 2, 2, 0, 0, 28, 0, 3, 2, 0, 0], [24, 17, 15, 30, 2, 1, 12, 10, 10, 0, 0, 28, 5, 0, 0, 1], [44, 14, 32, 3, 2, 4, 19, 4, 0, 0, 0, 31, 0, 3], [3, 28, 20, 17, 3, 0, 6, 34, 7, 4, 0, 34, 1, 18, 3, 0, 0], [21, 41, 12, 23, 0, 0, 22, 31, 3, 2, 0, 21, 0, 10, 0], [21, 49, 20, 21, 4, 0, 6, 17, 14, 12, 0, 43, 0, 15, 7, 0, 0], [12, 56, 6, 68, 2, 3, 6, 36, 17, 8, 0, 0, 31, 0, 5], [34, 61, 32, 15, 4, 0, 27, 52, 16, 6, 1, 0, 58, 0, 14, 2, 0, 0], [29, 82, 19, 40, 6, 1, 19, 36, 18, 12, 0, 0, 53, 1, 11, 4, 0, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

