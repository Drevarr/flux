created: 20230607221050000
creator: Drevarr
modified: 20230705163534144
modifier: drevarr
tags: ChartData
title: 202306072210_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Xanvias Einzbern", "Uneeta Healah", "Rafaellagabriela", "Mister Jekyll", "Smol Gluvs", "Skye Nightroad", "Venomina The Siren", "Kary\u00edna", "Crusader Siolith", "Belvyn Brightblade", "Cyclotechnist Farra", "Chrozz", "Grasszanine", "Demon Sekhmet", "Ryvalia Fazebringer", "Etcherii", "Sub Train", "Oo Dads Mad", "Tegan Parker", "Newtype Khan", "Koralia Danai", "Gabe Malhorn", "Sygaldry Verdandi", "Eibh\u00ebar", "Inedible Plant", "Solus Sanctus", "Sumatra Satyricon", "Primal Clone"];
const professions = ["Reaper", "Berserker", "Scrapper", "Firebrand", "Reaper", "Reaper", "Scrapper", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Willbender", "Spellbreaker", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Soulbeast", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 10255.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.6], [0.0, 0.0, 3418.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 389.76], [0.0, 0.0, 4558.0, 0.0, 549.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 97.44], [9116.0, 0.0, 329.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 13674.0], [0.0, 0.0, 12534.5, 0.0, 0.0, 43.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 13674.0, 0.0], [0.0, 18232.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 75.9, 146.16], [0.0, 0.0, 11395.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 161.0, 101.2, 146.16], [0.0, 0.0, 28487.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 29627.0], [0.0, 0.0, 29627.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.6, 0.0], [0.0, 0.0, 19371.5, 0.0, 0.0, 172.96, 0.0, 0.0, 0.0, 0.0, 46.0, 0.0, 243.6], [0.0, 0.0, 29627.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.3, 97.44], [0.0, 0.0, 37603.5], [0.0, 0.0, 42161.5, 0.0, 329.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 35324.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 384.93, 0.0, 0.0], [39882.5, 0.0, 439.68, 43.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 46719.5], [0.0, 0.0, 41022.0, 0.0, 329.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 146.16], [0.0, 0.0, 47859.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 46.0, 0.0, 97.44], [0.0, 0.0, 52417.0, 0.0, 0.0, 43.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [39882.5, 0.0, 989.28, 0.0, 0.0, 0.0, 0.0, 171.08, 0.0, 50.6, 0.0], [0.0, 0.0, 33045.5, 0.0, 1538.88, 216.2, 0.0, 0.0, 0.0, 0.0, 23.0, 0.0, 97.44], [0.0, 0.0, 59254.0, 0.0, 0.0, 43.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 97.44], [0.0, 0.0, 62672.5, 0.0, 219.84, 0.0, 0.0, 0.0, 0.0, 213.85, 0.0, 0.0, 0.0], [0.0, 0.0, 58114.5, 0.0, 329.76, 86.48, 0.0, 0.0, 0.0, 0.0, 0.0, 75.9, 194.88], [0.0, 0.0, 51277.5, 0.0, 1978.56, 43.24], [0.0, 0.0, 101415.5, 0.0, 659.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.3, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

