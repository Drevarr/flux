created: 20230401000636000
creator: Drevarr
modified: 20230705163523704
modifier: drevarr
tags: ChartData
title: 202304010006_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Nazhul Naxxremis", "Smol Daddy Tika", "Arcanophage Farra", "Smol Gluvs", "Grasszanine", "Sister Elon\u00edth", "Be\u00eb", "Gavann", "Mistwalker Caelon", "Sassy Daddy Demon", "Xyntharos", "Air One Com", "Ark Darkness", "Aronorf Xideliesi", "Ju\u00e7", "Ryvalia Fazebringer", "Etcherii", "Whose Guardian", "Zaylen Harker", "Koralia Danai", "Bella Lunabringer", "Johosh The Great"];
const professions = ["Scourge", "Berserker", "Spellbreaker", "Scourge", "Spellbreaker", "Firebrand", "Scourge", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.9584, 0.0, 1.1936, 1.4993, 1.7444, 1.0584, 0.782, 0.7637, 2.2704, 0.0, 2.0506, 0.0, 1.2107, 0.6703, 0.6912, 0.0, 2.4476, 1.5288, 1.3552, 0.0, 0.9029, 1.1016, 0.0, 0.6318, 2.7, 0.0, 0.0, 0.0], [0.9139, 2.8577, 2.0168, 0.1908, 0.785, 0.0, 0.5351, 1.1765, 0.6336, 0.0, 0.6835, 0.0, 1.5714, 2.4299, 0.9504, 1.0692, 0.5292, 0.0, 2.8798, 0.121, 1.093, 0.9486, 0.0, 1.8468, 1.08, 0.0, 1.056, 0.0, 0.0, 1.3068], [3.1987, 0.0, 2.5108, 0.0, 1.8752, 3.0164, 2.305, 2.0846, 2.4816, 0.0, 5.7245, 0.0, 1.7517, 2.8489], [3.8515, 0.688, 0.1646, 0.0, 1.8752, 1.2172, 1.276, 0.9907, 0.5808, 0.0, 0.5126, 0.0, 2.5245, 3.0164, 0.9288, 0.0, 1.8522, 0.5242, 1.7956, 0.0, 2.1384, 1.4382, 0.0, 2.1384, 1.2488, 0.0, 0.4013, 0.0, 0.0, 1.5488], [4.0474, 0.0, 2.1815, 1.6083, 1.0466, 1.8522, 0.6997, 1.6925, 3.0096, 0.0, 2.4778, 0.0, 4.4409, 0.0, 0.0, 1.0584, 1.0046, 0.9825, 0.0, 1.5912, 0.0, 1.5552, 0.0, 0.0, 1.5418, 0.0, 0.0, 0.0], [9.6614, 7.7792, 10.2488, 3.6256], [1.175, 0.0, 0.6586, 0.7088, 1.0466, 2.4872, 0.8644, 2.1672, 1.056, 0.0, 1.7088, 0.0, 2.7048, 4.0219, 0.7344, 3.0429, 2.1403, 1.2197, 0.0, 1.1405, 0.3672, 0.0, 0.9234, 2.5987, 0.0, 0.6758, 0.0, 0.0, 1.694], [0.0, 13.8253, 5.3726, 6.2, 4.847, 1.0098, 2.028, 4.8114, 6.2438, 0.0, 2.8301, 2.1689, 0.1825, 5.4692], [3.3946, 1.6405, 1.3994, 1.254, 3.4016, 5.5566, 0.8644, 2.2291, 6.6528, 0.0, 2.7341, 0.0, 2.6018, 7.7925, 2.5704, 0.0, 4.1013, 2.4898, 1.5924, 0.0, 5.845, 0.8262, 0.0, 1.0692, 4.8937, 0.0, 1.1616, 0.0, 1.1408, 2.178], [1.5667, 2.9106, 0.2881, 2.6987, 1.4827, 6.1916, 1.7287, 4.6027, 1.0032, 2.8512, 1.1962, 0.0, 4.9974, 7.3735, 2.5056, 0.0, 3.0429, 2.5334, 1.694, 0.0, 2.376, 0.0, 0.0, 5.6862, 3.375, 0.0, 1.056, 6.8367, 1.5058, 1.3068], [3.6557, 2.6989, 0.5351, 2.7533, 0.3489, 7.1971, 1.8522, 3.9835, 4.3296, 6.9379, 0.769, 0.0, 5.152, 10.3062, 2.1384, 0.0, 3.7044, 1.092, 2.6765, 0.0, 3.0888, 1.3464, 0.408, 2.7216, 5.6363, 0.0, 1.2883, 3.772, 1.5058, 6.3888], [3.4598, 2.2226, 5.1038, 3.462, 4.2738, 8.6789, 2.305, 5.0568, 7.2864, 0.1426, 2.0506, 0.0, 2.3957, 8.798, 2.2032, 9.3933, 3.8875, 4.6754, 5.0846, 4.8654, 1.215, 6.5813, 0.0, 3.1046, 0.6601, 0.0, 2.7104], [8.5517, 2.2756, 7.5734, 0.1908, 7.2829, 10.5311, 6.0917, 5.5934, 7.2336, 0.0, 4.6138, 0.0, 4.7141, 10.1386, 2.3112, 13.23, 4.0186, 0.0, 6.8429, 3.0294, 7.3913, 0.0], [7.8336, 2.1168, 7.9439, 1.4993, 5.6693, 11.1132, 7.0384, 5.0362, 7.9728, 1.3781, 13.1578, 0.0, 0.0, 11.4792, 3.1752, 10.5179, 5.6347, 1.8295, 0.0, 5.4173, 2.9376, 1.272, 7.4844, 5.8725, 4.1184, 0.4715, 0.0608, 8.1796], [10.7717, 15.4526, 8.8082, 3.8184, 10.032, 1.4256, 3.503, 1.9034, 6.0021, 14.3281, 5.076, 14.7515, 7.3382, 2.9137, 4.9421, 2.5398, 0.0, 11.178, 7.29, 0.0, 2.4077, 4.7622, 2.7682, 11.1804], [3.0682, 3.281, 5.1038, 9.3502, 4.9715, 12.2774, 10.1254, 0.0, 9.3984, 1.8058, 11.5344, 0.0, 4.3792, 11.982, 3.9312, 0.6885, 17.6621, 3.276, 0.0, 4.9896, 8.109, 0.0, 8.7966, 6.0412, 0.0, 4.6042, 0.0, 0.0, 9.6316], [12.4032, 5.8741, 6.421, 6.3516, 6.4107, 11.8541, 9.8372, 4.7885, 9.24, 0.3326, 12.3034, 1.6355, 5.3066, 22.5395, 5.8752, 0.1539, 15.2807, 9.959, 7.2842, 1.9008, 5.5123], [7.7683, 3.1752, 9.1787, 5.5065, 6.1054, 8.7318, 9.7961, 3.3024, 9.9264, 2.1384, 3.503, 3.1786, 6.337, 15.5849, 4.9032, 2.8998, 14.2884, 6.9888, 2.9137, 0.0, 9.3139, 4.2228, 1.668, 8.1162, 7.2563, 4.9421], [10.9018, 5.927, 5.6801, 5.6428, 6.1926, 9.3139, 3.9514, 3.6946, 8.0784, 5.0846, 14.6957, 2.9845, 4.6368, 15.5849, 5.4432, 1.9278, 9.7241, 4.5427, 3.8623, 4.7995, 2.3868, 0.0, 8.0676, 6.6487, 2.3654, 5.045, 1.521, 6.6308], [8.7475, 8.2555, 9.8784, 7.2512, 8.5039, 14.6588, 7.5323, 4.0042, 13.7808, 6.6053, 7.0061, 2.735, 4.9717, 19.5231, 6.0048, 15.6775, 7.0762, 9.588, 9.2664, 2.3562, 3.36, 9.5742, 9.2812, 0.0, 8.3635, 10.9388, 0.0, 13.8908], [13.7741, 6.7208, 10.8662, 6.7332, 10.6408, 16.8815, 8.7671, 3.8597, 12.7776, 3.564, 13.7558, 4.0933, 6.9037, 19.0203, 7.7112, 0.0891, 17.8605, 7.1635, 12.0274, 7.7933, 2.8764, 2.82, 9.477, 8.1675, 0.0, 4.9632, 4.5264, 1.8708, 10.5028], [13.1213, 10.5311, 9.8372, 6.1335, 11.3822, 17.199, 8.479, 5.1187, 13.2528, 5.1322, 6.8352, 3.7607, 9.9176, 18.5176, 4.8816, 1.62, 17.7944, 8.5613, 5.8274, 12.973, 7.7418, 12.393, 10.1925, 0.0, 8.5536, 2.4518, 6.8749, 16.2624]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

