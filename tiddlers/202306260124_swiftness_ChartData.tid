created: 20230626012458000
creator: Drevarr
modified: 20230705163538388
modifier: drevarr
tags: ChartData
title: 202306260124_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Proteccdebussy", "Johosh The Mighty", "Belvyn Brightblade", "Mammary Mission", "Liyo Morgaine", "Primal Clone", "Ryvalia Fazebringer", "Elon The Archmagus", "Mememonoko", "Momomeko", "Tegan Parker", "Ganbaatar Bloodwine", "Venomina The Siren", "Eibh\u00ebar", "Smol Daddy Tika", "Zorryeh", "Artakama Nahid", "Elon The Mender", "Miphest\u00f6", "Orunnii", "Arcanophage Farra", "Zayde Sunsabre", "Crusader Siolith", "Raelyn Sunray", "Sygaldry Verdandi", "Blanco Padre Guard", "Drevarr Moonwillow", "Bender Ale Devourer", "Koralia Danai", "Solus Sanctus", "Bella Sassy"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Herald", "Chronomancer", "Chronomancer", "Tempest", "Vindicator", "Chronomancer", "Tempest", "Berserker", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Tempest", "Druid", "Tempest", "Herald", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.5273, 206.4497, 0.887, 37.1448, 0.7286, 33.594, 4.4352], [174.685, 91.8298, 4.8461, 80.593], [138.73, 13.7117, 62.6661, 98.7958, 26.2816, 58.507], [33.2676, 90.7245, 44.3117, 11.3904, 51.5117, 0.0, 0.0403, 72.4402, 15.433, 6.8006, 26.2111, 48.24], [0.0, 15.6816, 84.766, 47.9405, 10.7386, 2.0658, 14.0448, 113.5252, 125.4562], [0.0, 34.1107, 11.8188, 0.0, 29.5019, 25.3874, 9.1526, 0.0, 17.2973, 0.0, 82.0507, 0.0, 197.8733, 5.1411, 10.7414], [0.0, 0.0, 0.0, 69.9955, 106.2952, 57.2183, 43.223, 25.3848, 0.0, 0.0, 11.1485, 3.2035, 0.0, 42.8525, 82.6787, 0.0], [167.904, 106.766, 15.6038, 55.3397, 21.7825, 43.5706, 19.8901, 13.057], [91.7548, 7.5686, 40.1751, 159.4342, 0.0, 208.7694], [19.656, 0.0, 8.2051, 0.0, 0.0, 0.0, 53.1346, 0.0, 54.782, 381.8678], [0.0, 45.6192, 59.094, 127.353, 28.6709, 31.8309, 15.9062, 0.0, 50.593, 0.0, 34.5744, 64.093, 38.2788, 18.7123, 49.9359, 2.8944], [126.782, 12.8563, 7.938, 119.5757, 59.2376, 226.6823, 20.1398], [69.1863, 14.7226, 28.2681, 224.9335, 10.1802, 75.1312, 0.1613, 12.6672, 49.896, 0.0, 25.2605, 8.4374, 11.6659, 2.0486, 21.7021, 19.0066], [0.0, 24.8573, 10.584, 476.3584, 10.3101, 0.0, 0.0, 0.0, 0.1584, 35.8646, 18.3864, 0.0, 14.7418, 0.0, 0.0], [94.6282, 109.142, 24.8774, 49.7222, 94.0565, 27.815, 116.6857, 111.1128], [679.4183], [13.1224, 88.465, 75.4992, 109.125, 0.3116, 222.8162, 21.7526, 0.0, 58.8298, 13.8902, 1.6469, 79.0184, 18.5434, 16.266, 16.1443], [143.6828, 0.0, 3.3075, 216.6702, 0.0, 417.1522, 15.1402, 0.0], [42.7883, 29.0563, 101.2095, 229.9158, 10.7775, 88.1471, 33.4656, 0.0, 21.289, 0.0, 47.255, 20.8229, 30.5623, 44.6477, 143.0232, 1.0613], [272.7625, 50.6995, 201.537, 420.5807], [82.564, 60.601, 91.0665, 377.0766, 62.0164, 362.769, 12.1968, 40.068], [228.7999, 49.0925, 19.8009, 268.4377, 49.8884, 308.5148, 3.1046, 6.468, 14.256, 51.436, 11.3702, 34.9003, 16.4052, 8.1523, 24.8205, 25.0848], [0.0, 9.0979, 65.709, 166.1178, 49.5248, 418.4409, 32.7802, 92.9544, 0.0, 12.76, 35.8848, 44.5109, 0.0, 57.9955, 137.3764, 132.2741], [305.4409, 71.6947, 48.1131, 344.9953, 17.9193, 315.9892, 23.184, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 141.5483, 45.5707], [352.2629, 62.7264, 134.505, 447.8012, 76.7413, 440.8643, 31.9133, 33.4824, 54.2362, 21.3091, 5.7979, 0.0, 23.76, 39.9487, 68.0506], [387.2901, 40.2797, 44.7174, 338.0686, 11.2969, 511.2273, 32.0141, 50.4504, 21.3523, 166.628, 11.8138, 36.1186, 73.155, 15.1642, 65.2327, 15.6298], [138.73, 49.7405, 54.684, 603.2253, 43.8893, 391.6359, 24.5146, 53.1048, 108.0922, 53.57, 15.8054, 24.1166, 22.9065, 50.9837, 164.8517, 22.5442], [152.312, 17.4182, 119.9079, 265.0351, 34.2025, 625.2772, 46.9728, 12.7344, 53.0006, 107.558, 31.3488, 11.4605, 144.3354, 24.0979, 179.8114, 47.2109], [246.1603, 44.0899, 92.5659, 587.4277, 11.1931, 764.0702, 24.6355, 7.1232, 11.2464, 73.7453, 3.1358, 0.0, 9.5885, 184.826, 39.7176], [566.8681, 44.8934, 94.5063, 642.5978, 84.7401, 681.5934, 44.8762, 99.8592, 172.8144, 149.754, 26.6717, 45.481, 87.1906, 55.3555, 18.2045, 85.5134], [239.5225, 116.2512, 146.1033, 717.5756, 74.0924, 1106.6067, 62.8992, 85.2768, 26.5795, 37.0742, 26.9141, 234.1994, 51.3005, 134.0052, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

