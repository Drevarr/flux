created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Glorious Gluvs", "K\u00e2 \u00d4tik R\u00e6j", "Milvia Rosalyn", "Pr\u00e6tor Lightbringer", "Klengah", "Hyde En Sikh", "Jimbo The Pleb", "Darks Na", "Mmathuss", "Zaedy Zae", "Sub Train", "Bee Nemesis", "Crusader Siolith", "Gabe Malhorn", "Koralia Danai", "Newtype Khan", "Blancooo Padreee"];
const professions = ["Vindicator", "Berserker", "Berserker", "Druid", "Firebrand", "Druid", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.8852, 4.5965, 17.8542, 4.5279, 28.9604, 13.7342, 35.2731, 9.1945], [64.2855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 37.4923, 18.433, 0.0, 57.6669, 0.0], [58.1655, 0.0, 0.0, 0.0, 0.0, 0.0, 9.6535, 32.3357, 0.0, 110.317, 2.4442], [0.0, 0.0, 81.884, 72.1886, 17.9985, 0.0, 21.7753, 89.9232, 19.425], [24.794, 208.738, 80.8598], [26.3415, 26.593, 26.4451, 0.0, 28.9107, 0.0, 51.3336, 54.4696, 0.0, 0.0, 0.0, 0.0, 122.1796, 0.0], [20.757, 0.0, 54.0345, 6.9596, 39.9672, 0.0, 65.8706, 47.9666, 0.0, 34.2802, 27.344, 5.4337, 61.96, 26.3921], [24.4109, 0.0, 107.5347, 14.4682, 247.0147], [42.381, 0.0, 58.3573, 6.3445, 36.1179, 0.0, 116.1821, 38.1824, 45.91, 88.1425, 7.3658, 132.3902, 32.9966], [20.037, 25.7166, 0.0, 121.8606, 50.89, 0.0, 59.9212, 119.1528, 3.5017, 168.7076, 77.7259], [52.734, 0.0, 141.634, 0.0, 52.1703, 12.5518, 126.6305, 101.422, 76.9782, 75.0561, 0.0, 132.9704, 56.7728], [62.577, 19.372, 107.4333, 4.985, 19.1646, 3.854, 91.1967, 50.1741, 0.0, 124.7158, 116.1485, 4.991, 182.1671, 70.7329], [6.0208, 21.4578, 0.0, 217.2594, 38.6, 0.0, 248.8777, 241.3099, 151.4192], [40.29, 0.0, 166.2991, 7.9954, 135.954, 0.0, 59.8514, 66.7595, 0.0, 117.5164, 124.143, 21.574, 203.7487, 67.9357], [22.134, 0.0, 119.2573, 0.0, 69.7788, 7.729, 190.2298, 90.1463, 0.0, 150.0244, 121.2405, 203.7487, 86.1693], [56.763, 0.0, 127.7757, 0.0, 50.2047, 7.7922, 116.5228, 104.8226, 0.0, 143.0465, 173.0771, 263.9683, 49.3395], [121.941, 0.0, 106.7976, 0.0, 85.8312, 402.7192, 43.0745, 0.0, 307.2482, 320.2868, 91.5285, 251.7851, 110.2304], [231.6675, 0.0, 370.486, 0.0, 208.7631, 0.0, 531.8483, 117.9478, 0.0, 236.5743, 0.0, 363.9861, 35.8456]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

