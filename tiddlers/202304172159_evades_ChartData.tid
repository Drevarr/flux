created: 20230417215912000
creator: Drevarr
modified: 20230705163525762
modifier: drevarr
tags: ChartData
title: 202304172159_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Skye Nightroad", "Rina Of Theros", "Be\u00eb", "Nazhul Naxxremis", "Aira Draugr", "Miphest\u00f6", "Belvyn Brightblade", "Fribble Bibble", "Cat Wigglebooty", "Krelkit", "Tootsie Pop Rocks", "Sumatra Satyricon", "Sygaldry Verdandi", "Tribal S", "Sp\u00edcy Cheese", "Elonith Requiem", "Smol Daddy Tika", "Ark Darkness", "Mettrik Milliohm", "Jeckyll Mbs", "Etchery Howls", "Rozaalyna", "Tegan Parker", "Xanvias Einzbern", "Arriasa", "Blancooo Padreee", "Gavann", "Sheep Paw", "Drevarr Moonwillow", "Koralia Danai", "Smol Gluvs", "Johosh The Great", "Mike The Archmagus", "Solus Sanctus", "Sub Train", "Venomina The Siren", "Zadie Miststep", "Black Raspberry Pie", "Lord Erin The Wise", "Grasszanine", "Eibh\u00ebar", "Newtype Khan", "Arcanophage Farra", "Primal Clone", "Mac Chiato", "Kmpek", "Ryvalia Fazebringer", "Inedible Plant", "Mistwalker Caelon", "Xyntharos"];
const professions = ["Scrapper", "Reaper", "Reaper", "Reaper", "Herald", "Tempest", "Firebrand", "Scrapper", "Scrapper", "Scrapper", "Scrapper", "Soulbeast", "Firebrand", "Druid", "Berserker", "Reaper", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Druid", "Reaper", "Tempest", "Berserker", "Druid", "Berserker", "Firebrand", "Vindicator", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Catalyst", "Firebrand", "Firebrand", "Tempest", "Tempest", "Chronomancer", "Weaver", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Chronomancer", "Tempest", "Vindicator", "Chronomancer", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 27, 14, 0, 1, 1, 6, 0, 7, 1, 11, 0, 5], [0, 0, 0, 0, 18, 0, 3, 0, 5, 0, 16, 0, 0, 1, 3, 0, 2, 0, 4, 4, 1, 0, 0, 2, 1, 19], [0, 0, 0, 8, 0, 5, 0, 0, 0, 16, 0, 0, 2, 9, 0, 14, 0, 9, 5, 0, 0, 0, 9, 0, 4], [32, 0, 0, 13, 2, 5, 0, 6, 5, 0, 0, 0, 11, 0, 7], [0, 1, 0, 0, 26, 0, 13, 0, 37, 1, 7, 0], [13, 1, 6, 0, 18, 0, 4, 4, 6, 5, 0, 5, 1, 2, 7, 0, 0, 0, 0, 0, 5, 0, 0, 3, 5, 4], [0, 0, 0, 0, 33, 0, 15, 0, 16, 0, 26, 0], [1, 0, 11, 2, 0, 13, 0, 13, 0, 16, 14, 0, 3, 0, 17], [0, 0, 11, 9, 0, 2, 1, 13, 0, 6, 3, 0, 5, 0, 2, 13, 0, 0, 6, 0, 4, 0, 1, 0, 4, 8, 7], [0, 0, 0, 0, 11, 0, 6, 1, 23, 0, 9, 0, 0, 28, 1, 0, 13, 0, 12, 3], [0, 0, 0, 1, 6, 0, 0, 0, 0, 0, 28, 0, 0, 2, 14, 4, 2, 2, 14, 0, 0, 0, 5, 0, 6, 2, 7, 1, 3, 5, 7], [0, 0, 0, 0, 32, 0, 6, 3, 0, 3, 0, 0, 16, 9, 3, 0, 9, 2, 0, 0, 6, 0, 3, 1, 6, 0, 0, 13, 0, 3], [0, 0, 0, 4, 0, 4, 1, 0, 0, 5, 0, 0, 1, 14, 0, 5, 0, 26, 5, 0, 0, 0, 21, 0, 4, 0, 1, 0, 21, 0, 4], [13, 0, 0, 0, 0, 0, 5, 0, 0, 0, 3, 0, 15, 0, 15, 13, 0, 0, 0, 6, 0, 11, 0, 2, 0, 17, 10, 12], [0, 1, 0, 3, 14, 0, 1, 0, 2, 0, 14, 0, 0, 11, 5, 0, 12, 0, 15, 6, 0, 0, 0, 1, 0, 13, 0, 7, 0, 1, 11, 6], [21, 1, 8, 2, 6, 1, 4, 0, 0, 12, 6, 0, 24, 2, 2, 22, 0, 0, 2, 2, 0, 11], [0, 29, 0, 14, 38, 0, 0, 0, 0, 0, 20, 0, 13, 7, 7], [9, 0, 7, 0, 3, 0, 17, 0, 3, 10, 0, 9, 0, 15, 7, 0, 0, 0, 9, 0, 4, 0, 1, 0, 26, 4, 6], [0, 0, 18, 0, 9, 0, 18, 0, 4, 0, 0, 13, 8, 22, 2, 13, 16, 0, 0, 0, 0, 0, 13], [0, 0, 0, 0, 16, 0, 6, 2, 0, 6, 7, 16, 0, 22, 0, 12, 3, 7, 5, 0, 0, 0, 9, 0, 12, 0, 0, 2, 14, 4, 3], [17, 0, 8, 0, 7, 0, 26, 0, 0, 14, 24, 0, 12, 0, 16, 4, 0, 0, 0, 0, 0, 19], [0, 2, 16, 9, 1, 11, 0, 0, 3, 0, 10, 5, 0, 34, 5, 13, 22, 0, 0, 0, 7, 0, 11], [0, 4, 44, 0, 22, 0, 2, 12, 0, 0, 1, 0, 0, 16, 1, 10, 0, 20, 0, 18], [0, 0, 0, 0, 8, 0, 1, 0, 11, 0, 30, 0, 0, 15, 5, 0, 8, 0, 2, 25, 0, 0, 0, 3, 0, 7, 0, 3, 0, 22, 1, 11], [0, 0, 0, 0, 7, 0, 1, 0, 4, 0, 15, 0, 0, 16, 5, 1, 20, 12, 5, 12, 0, 0, 0, 0, 0, 33, 0, 3, 0, 11, 5, 4], [0, 0, 0, 0, 12, 0, 19, 0, 12, 6, 0, 3, 0, 5, 16, 0, 11, 2, 0, 13, 0, 0, 1, 9, 0, 14, 14, 5, 3, 3, 0, 9], [5, 0, 17, 0, 2, 3, 7, 0, 1, 10, 7, 0, 11, 0, 14, 8, 0, 0, 1, 6, 0, 26, 1, 6, 0, 24, 4, 5], [53, 0, 1, 15, 8, 0, 14, 19, 20, 7, 26], [0, 0, 0, 0, 5, 1, 0, 23, 0, 3, 0, 0, 7, 1, 5, 3, 6, 30, 0, 0, 2, 3, 0, 17, 1, 0, 0, 29, 10, 19], [0, 0, 0, 3, 0, 27, 0, 8, 4, 6, 1, 0, 2, 8, 0, 11, 0, 17, 22, 0, 0, 0, 5, 0, 25, 11, 7, 0, 10, 1, 7], [0, 0, 1, 1, 35, 0, 10, 0, 1, 0, 28, 0, 0, 7, 6, 0, 9, 0, 5, 15, 0, 0, 2, 7, 0, 53], [0, 2, 0, 14, 0, 4, 0, 4, 0, 13, 0, 0, 12, 20, 22, 0, 5, 13, 0, 0, 0, 6, 0, 6, 3, 14, 0, 12, 9, 22], [0, 38, 1, 23, 27, 0, 0, 5, 6, 0, 20, 3, 14, 0, 49, 1], [0, 0, 15, 0, 1, 0, 4, 8, 13, 1, 0, 14, 17, 0, 36, 3, 8, 3, 0, 0, 1, 3, 0, 18, 2, 2, 0, 12, 13, 14], [0, 0, 23, 0, 5, 0, 1, 0, 30, 0, 3, 11, 0, 14, 0, 18, 6, 0, 0, 0, 11, 0, 19, 3, 0, 0, 25, 1, 20], [23, 5, 2, 0, 0, 9, 3, 9, 11, 10, 0, 3, 10, 0, 0, 3, 0, 16, 7, 0, 0, 23, 54, 4], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 21, 10, 65, 1, 9, 3, 0, 0, 0, 0, 0, 16, 7, 5, 0, 47, 0, 0], [0, 0, 0, 16, 0, 0, 0, 0, 0, 46, 0, 0, 15, 0, 0, 24, 0, 25, 23, 0, 0, 1, 10, 0, 7, 1, 1, 0, 8, 30, 26], [0, 0, 0, 18, 0, 18, 0, 3, 0, 45, 4, 0, 13, 38, 0, 31, 2, 12, 3, 0, 0, 5, 5, 0, 24, 3, 3, 0, 9, 7], [0, 0, 1, 22, 6, 1, 6, 0, 34, 4, 0, 15, 12, 0, 40, 0, 13, 12, 0, 0, 0, 13, 0, 20, 2, 1, 0, 19, 14, 19], [0, 0, 1, 12, 0, 14, 2, 12, 2, 27, 1, 0, 16, 14, 0, 20, 0, 19, 10, 0, 0, 0, 7, 0, 53, 2, 1, 3, 10, 29, 6], [0, 1, 3, 36, 0, 5, 0, 9, 0, 21, 1, 0, 6, 49, 0, 28, 11, 20, 36, 0, 0, 2, 8, 16, 1, 5, 2, 9, 1, 2], [0, 0, 10, 0, 3, 0, 4, 0, 19, 0, 0, 70, 26, 0, 14, 22, 27, 41, 0, 0, 6, 5, 0, 51, 2, 13, 0, 17, 3, 3], [0, 0, 0, 30, 0, 20, 1, 21, 3, 67, 3, 0, 23, 20, 0, 36, 0, 20, 9, 0, 0, 0, 0, 0, 16, 3, 1, 0, 7, 27, 30], [0, 0, 0, 0, 16, 0, 3, 0, 13, 0, 51, 0, 1, 28, 4, 0, 14, 5, 26, 61, 0, 0, 2, 6, 34, 0, 5, 16, 12, 46, 2], [51, 2, 22, 10, 35, 27, 0, 1, 11, 22, 0, 36, 21, 18, 1, 70, 9, 29], [0, 1, 0, 19, 30, 0, 25, 1, 55, 11, 0, 90, 43, 78, 0, 28, 23, 0, 0, 0, 3, 0, 14, 7, 17, 0, 20, 9, 3], [0, 0, 0, 1, 37, 0, 37, 0, 15, 5, 89, 11, 1, 43, 27, 0, 58, 15, 10, 29, 0, 1, 4, 19, 0, 20, 17, 50, 6, 4, 28, 28], [0, 0, 1, 9, 46, 0, 16, 0, 6, 0, 43, 0, 0, 47, 37, 0, 24, 22, 31, 34, 0, 5, 9, 10, 0, 25, 16, 29, 4, 88, 34, 39], [0, 0, 0, 46, 0, 69, 0, 14, 1, 11, 2, 2, 80, 25, 0, 11, 9, 22, 39, 0, 0, 20, 33, 0, 24, 42, 21, 2, 44, 25, 42]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

