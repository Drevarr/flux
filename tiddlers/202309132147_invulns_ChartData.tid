created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Rafaellagabriela", "Elisha Raskae", "Blaize Harlot", "Bella Sassy", "Itacolomi", "Clean And Green", "Oo Dads Mad", "Elonith Requiem", "Charr Surethang", "Revenant Brandorf", "Victoria Raskae", "Cura Ativos", "Mort\u00e4rion", "Melody Phoenixstorm", "Xanvias Einzbern", "Solus Luxes", "Z\u00e9 Chamin\u00e9", "Tequilasaurous", "Lord Erin The Wise", "Cat Wigglebooty", "Keypek The Drunk", "Tribal S", "Rina Of Theros", "Ka Otik Nightm\u00e6r", "Glorious Gluvs", "Darks Na", "Drevarr Moonwillow", "Ryzen Grimsaw", "Jimbo The Pleb", "Morton Saltbringer", "Zaedy Zae", "Mistwalker Cael", "Tootsie Pop Rocks", "Morv\u00e4rth", "Sub Train", "Sygaldry Verdandi", "Jmbrage Rev", "Lucky Luprac\u00e1n", "Etchery Howls", "Koralia Danai", "Blaize Harlot", "Zanos Engine", "Venomina The Fierce", "Primal Clone", "Nebula Davar", "Rahani Sunray", "Daphne Agla\u00e9", "Eibh\u00ebar", "Arcanophage Farra", "Tegan Parker"];
const professions = ["Firebrand", "Virtuoso", "Reaper", "Firebrand", "Firebrand", "Druid", "Berserker", "Reaper", "Berserker", "Vindicator", "Renegade", "Dragonhunter", "Scrapper", "Scrapper", "Berserker", "Firebrand", "Spellbreaker", "Dragonhunter", "Weaver", "Scrapper", "Scrapper", "Druid", "Reaper", "Reaper", "Berserker", "Firebrand", "Scrapper", "Vindicator", "Berserker", "Chronomancer", "Druid", "Herald", "Scrapper", "Reaper", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Druid", "Firebrand", "Scourge", "Scrapper", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer", "Reaper", "Chronomancer", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 11], [2, 0, 21], [18, 0, 0, 0, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0], [10, 5, 5, 0, 0, 0, 6], [0, 0, 0, 0, 0, 33], [3, 0, 0, 0, 0, 0, 14, 19], [0, 0, 0, 0, 8, 0, 19, 0, 0, 11], [0, 0, 18, 7, 0, 0, 20], [0, 0, 0, 0, 0, 0, 8, 21, 27, 0, 0, 0, 0], [2, 34, 25], [0, 25, 0, 30, 0, 8], [42, 0, 0, 0, 0, 0, 12, 18], [81], [0, 31, 0, 0, 0, 0, 0, 1, 13, 8, 0, 0, 0, 0, 33], [46, 0, 0, 0, 0, 0, 0, 4, 0, 24, 0, 0, 0, 0, 15], [0, 89], [11, 19, 0, 0, 36, 34], [7, 0, 0, 13, 10, 25, 33, 14, 0, 0, 0, 0], [13, 0, 0, 0, 0, 0, 0, 16, 8, 34, 25, 0, 0, 0, 10], [18, 6, 0, 4, 0, 0, 0, 3, 18, 16, 30, 0, 0, 0, 17], [0, 0, 0, 0, 0, 0, 23, 17, 35, 8, 0, 0, 0, 33], [0, 45, 0, 0, 0, 0, 0, 0, 1, 0, 49, 0, 0, 0, 22], [15, 0, 0, 0, 0, 0, 14, 13, 12, 43, 0, 0, 22], [19, 0, 0, 0, 0, 0, 0, 41, 11, 11, 0, 0, 0, 0, 43], [103, 0, 0, 0, 0, 0, 0, 22], [0, 39, 0, 0, 0, 0, 0, 49, 22, 5, 0, 0, 0, 0, 25], [0, 0, 11, 0, 0, 18, 20, 12, 26, 0, 0, 0, 54], [39, 42, 0, 0, 0, 0, 0, 0, 16, 23, 8, 0, 0, 0, 15], [20, 9, 0, 0, 0, 0, 0, 36, 14, 15, 28, 0, 0, 0, 23], [0, 0, 0, 0, 0, 0, 0, 58, 18, 6, 30, 0, 0, 0, 34], [1, 25, 0, 0, 0, 0, 0, 16, 25, 27, 16, 0, 0, 0, 36], [0, 19, 0, 0, 0, 0, 0, 14, 28, 23, 37, 0, 0, 0, 25], [38, 0, 0, 0, 0, 0, 77, 35], [0, 0, 0, 0, 0, 0, 23, 25, 37, 63, 0, 0, 0, 21], [11, 22, 0, 0, 0, 0, 29, 15, 34, 43, 0, 0, 0, 16], [0, 0, 0, 0, 0, 0, 0, 23, 21, 18, 56, 0, 0, 0, 53], [42, 2, 0, 0, 0, 0, 0, 37, 27, 23, 46, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 34, 20, 62, 0, 0, 0, 73], [49, 0, 0, 0, 0, 0, 8, 78, 22, 5, 0, 0, 0, 28], [37, 8, 0, 0, 0, 0, 82, 22, 31, 11], [114, 33, 0, 0, 0, 0, 0, 7, 0, 0, 50, 0, 0, 0, 0], [30, 131, 41, 0, 0, 0, 9], [14, 0, 0, 7, 0, 0, 0, 63, 20, 24, 61, 0, 0, 0, 31], [121, 45, 52, 0, 0, 0, 11], [85, 20, 31, 52, 0, 0, 0, 48], [20, 43, 0, 0, 0, 0, 0, 138, 20, 0, 0, 0, 0, 0, 19], [43, 10, 16, 5, 5, 0, 7, 45, 22, 29, 33, 10, 9, 0, 11], [27, 1, 0, 3, 0, 0, 0, 6, 19, 97, 93, 0, 0, 0, 28], [5, 27, 0, 0, 0, 35, 18, 45, 30, 129, 0, 0, 0, 45]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

