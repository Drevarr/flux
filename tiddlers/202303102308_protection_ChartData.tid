created: 20230310230833000
creator: Drevarr
modified: 20230705163521648
modifier: drevarr
tags: ChartData
title: 202303102308_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "High Sorcer Baradun", "Air One Com", "Morton Saltbringer", "Ark Darkness", "Cat Wigglebooty", "Zadie Miststep", "Rayge Storm", "Mac Chiato", "Sub Train", "Riann Swordbreak", "Black Raspberry Pie", "Primal Clone", "Ryvalia Fazebringer", "Blanco Padre Guard", "Raelyn Sunray", "\u00c1rkantor", "Zaylen Harker", "Aronorf Xideliesi", "Drevarr Moonwillow", "Zefirokai", "Kiloak", "Bella Sassy", "Koralia Danai", "Viral Marketing"];
const professions = ["Tempest", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[44.8965, 88.389, 93.61, 66.332, 11.4218, 343.125, 9.45, 90.7688, 0.0, 20.5951, 0.0, 9.3693, 15.4762, 0.0, 14.7345, 0.0, 0.0, 0.0, 35.5954, 15.8558, 0.0, 18.5201, 18.5825, 29.4395, 13.8996, 14.4855, 18.63, 0.0, 0.0, 0.0, 42.8904], [21.8295, 74.3337, 18.5196, 58.765, 13.9633, 443.0125, 0.0, 111.9723, 5.6221, 0.0, 6.7385, 50.6698, 17.5122, 18.4851, 36.7567, 0.0, 18.3638, 33.862, 0.0, 0.0, 12.1626, 4.806, 10.6812, 0.0, 18.4302, 49.1686], [140.382, 377.6094, 135.9116, 145.222, 52.8931, 561.9625], [38.214, 74.6235, 47.7664, 96.6, 13.6045, 413.275, 16.569, 115.6031, 26.4597, 33.195, 17.1217, 46.8346, 40.5572, 38.6669, 37.0656, 20.5655, 13.5247, 0.0, 16.7306, 28.8346, 53.2358, 65.1424, 29.0611, 60.682, 24.8472, 41.688, 35.2314, 8.0325, 38.4648, 54.8873], [450.6375, 0.0, 95.8518, 98.3425, 53.7482, 62.2463, 45.0631, 30.9072, 0.0, 126.7613, 34.3886, 0.0, 40.4294, 71.9523, 0.0, 103.8473, 137.262, 25.9961, 0.0, 21.6891, 26.028, 17.3052, 66.8304, 41.2039, 118.2905], [549.7625, 16.632, 226.1231, 65.5914, 76.2689, 36.5245, 10.3443, 67.8154, 49.3895, 52.5977, 75.9158, 32.499, 27.1735, 32.7321, 30.5169, 72.1886, 68.4904, 122.265, 15.9471, 73.98, 1.656], [30.393, 110.9934, 53.4336, 109.0775, 10.6444, 616.1, 0.0, 105.1465, 30.1631, 45.9204, 2.5696, 14.5058, 51.2563, 23.5273, 43.2658, 42.0077, 10.4121, 14.0831, 0.0, 35.2471, 11.1953, 55.7851, 54.6423, 18.1254, 59.2664, 14.1201, 36.72, 9.4806, 14.6084, 49.069, 59.052], [240.0464, 235.221, 36.478, 1238.3], [34.4862, 20.3412, 80.7415, 4.9933, 782.325, 52.2585, 104.4204, 21.5515, 22.0184, 20.8187, 35.5511, 27.6586, 9.5175, 19.1102, 75.6413, 0.0, 0.0, 22.2345, 0.0, 62.8332, 41.5171, 30.499, 30.6306, 17.9307, 82.782, 87.1056, 9.2749, 29.3866, 107.8476], [41.4855, 236.2892, 129.9781, 22.7718, 73.6782, 56.2873, 66.7776, 28.5017, 145.4697, 0.0, 0.0, 36.9758, 18.1306, 120.686, 8.2091, 198.847, 191.697, 133.2346, 92.7927, 188.964, 112.374, 90.459, 27.0963, 45.7038, 119.1607], [52.7175, 135.0468, 86.02, 102.9595, 32.2621, 726.6625, 17.892, 148.8607, 62.7357, 36.0415, 18.3016, 30.0817, 61.5437, 18.9842, 51.5261, 30.7164, 17.9573, 12.6768, 0.0, 45.5625, 11.0503, 60.134, 63.2773, 56.4951, 63.5778, 8.352, 63.342, 40.6134, 20.9916, 31.6562, 78.073], [63.9045, 203.4396, 93.5088, 103.04, 58.7834, 631.35, 20.349, 187.3467, 78.085, 32.0229, 15.6533, 34.4572, 36.9984, 24.2887, 88.1391, 55.9416, 11.209, 38.0305, 20.748, 64.9175, 21.496, 46.0377, 106.245, 58.2736, 48.3269, 15.7644, 53.46, 45.7056, 23.7976, 0.0, 0.0], [51.1335, 121.5711, 117.5944, 102.7985, 39.4979, 773.175, 20.6325, 111.5366, 46.494, 32.9857, 24.6206, 14.054, 53.6928, 29.2124, 43.3105, 39.0218, 26.5995, 15.3239, 9.649, 34.5181, 7.2419, 73.0305, 91.8073, 37.8022, 75.8687, 39.5415, 61.938, 57.132, 24.4188, 39.9909, 78.881], [71.874, 152.5797, 108.5876, 77.924, 5.1129, 712.175, 25.641, 176.8901, 76.1663, 45.5018, 17.7247, 15.9564, 60.0096, 62.0541, 43.3105, 56.1475, 43.2423, 22.3344, 15.8232, 22.2709, 23.4667, 87.5017, 94.3633, 38.1049, 98.5842, 28.0314, 70.254, 45.0846, 19.5779, 44.9212, 73.9082], [40.293, 317.4759, 178.112, 169.05, 26.2522, 1250.5, 16.065, 158.1555, 91.6941, 39.6833, 21.6053, 8.4895, 112.9354, 69.2113, 99.5249, 10.5706, 22.356, 33.8738, 0.0, 75.6702, 19.8639, 134.814, 186.5851, 114.8444, 149.9355, 101.1114, 95.094, 156.6162, 114.9397, 81.3904, 226.4489], [164.5875, 380.3625, 217.074, 111.412, 88.1452, 1588.2875, 18.9315, 211.8906, 68.4025, 56.5947, 39.3562, 61.4083, 50.024, 131.0924, 109.7897, 36.8563, 89.2962, 47.3875, 24.5673, 187.9749, 160.4038, 64.7064, 135.135, 85.5297, 43.632, 114.0156, 82.1671, 128.5812, 186.7908], [176.22, 401.0832, 237.5164, 232.8865, 71.1321, 1594.3875, 29.925, 228.4468, 127.6132, 50.525, 102.2056, 83.8483, 87.4426, 22.842, 90.952, 89.6782, 37.8085, 38.5475, 11.8742, 138.182, 45.3375, 135.1889, 146.2424, 121.0502, 82.4967, 66.7377, 59.616, 147.177, 68.7796, 131.7116, 298.6166], [145.431, 211.554, 242.88, 188.209, 82.3745, 2210.4875, 35.5635, 307.8876, 88.883, 137.5101, 61.3548, 47.7265, 145.9181, 66.1403, 111.4017, 24.0583, 24.3949, 77.2398, 131.6938, 227.7892, 240.5366, 110.9469, 110.682, 81.6408, 91.314, 108.7992, 55.7991, 90.2729, 255.2911], [136.0755, 353.1213, 225.0688, 234.255, 125.0119, 2060.275, 17.5455, 394.8804, 102.9383, 109.6732, 105.7715, 61.8042, 134.593, 51.0899, 126.1809, 42.8314, 13.6206, 44.7308, 38.9424, 131.4022, 26.8761, 248.5587, 126.2092, 141.1432, 153.4104, 65.7198, 61.128, 71.7048, 95.576, 82.1339, 193.2554], [150.9255, 320.3739, 270.3052, 179.5955, 16.2656, 2089.25, 45.5175, 415.6483, 152.6004, 96.3199, 38.7269, 29.3683, 89.6986, 43.5775, 80.6379, 107.4902, 12.3269, 45.4753, 32.6861, 92.5466, 9.4302, 149.5851, 255.7342, 112.5362, 292.0203, 103.8258, 121.716, 88.5546, 44.6821, 94.812, 209.7278], [137.808, 443.8287, 368.7728, 209.944, 44.9696, 2060.275, 86.5305, 444.2586, 183.879, 163.9656, 34.0073, 46.7277, 123.4032, 71.7746, 147.4343, 20.0772, 47.403, 59.6825, 21.7877, 68.5625, 29.8623, 146.211, 204.0623, 86.4644, 269.9482, 93.8295, 209.628], [157.4595, 353.7009, 216.2644, 192.1535, 110.4805, 2151.0125, 40.4775, 536.9153, 143.9887, 158.4401, 54.826, 123.3231, 170.1926, 50.3285, 174.2243, 93.6936, 0.0, 103.979, 51.2726, 161.3641, 26.7673, 328.6373, 249.7933, 198.0924, 202.3164, 106.1748, 234.576, 190.854, 62.525, 29.3084, 226.6354], [115.533, 296.6103, 216.062, 285.131, 58.2751, 2731.275, 36.729, 502.0601, 144.6134, 152.3285, 106.1648, 103.871, 134.7734, 73.9573, 116.4472, 56.6623, 34.124, 87.9934, 30.7274, 55.9163, 262.355, 241.4346, 121.2394, 133.9767, 108.9153, 239.004, 142.7886, 54.2783, 147.1679, 141.5383], [239.283, 235.7523, 438.4996, 327.7155, 101.5105, 2871.575, 13.419, 392.2662, 203.5564, 163.0866, 91.8224, 100.1851, 261.0192, 150.808, 220.0352, 54.5688, 57.0389, 67.8097, 201.4956, 55.4206, 219.7664, 320.1167, 186.5134, 198.9702, 83.5722, 232.362, 188.6598, 89.557, 131.0855, 315.089], [177.9525, 611.478, 321.2088, 170.2575, 81.9559, 2958.5, 67.2525, 343.469, 247.6856, 160.1982, 174.9661, 157.3285, 285.4291, 23.4004, 281.295, 115.4868, 24.0741, 15.572, 17.4101, 231.1295, 36.9833, 251.183, 317.768, 272.448, 217.8247, 75.3246, 195.426, 66.4884, 62.1394, 96.6902, 331.375]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

