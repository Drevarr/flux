created: 20230610101822000
creator: Drevarr
modified: 20230705163534572
modifier: drevarr
tags: ChartData
title: 202306101018_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Grootyoda", "Vesnan", "Cat Noises", "F\u00e2ble", "Drevarr Moonwillow", "Elonith Requiem", "F\u00e2ble", "Slang\u00efn", "Alarics Bane", "Xanvias", "Charr Surethang"];
const professions = ["Berserker", "Scourge", "Virtuoso", "Herald", "Scrapper", "Reaper", "Vindicator", "Herald", "Reaper", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 24.5714, 0.0, 117.1404, 0.0, 184.5294, 82.3151, 257.0, 66.219, 0.0], [190.2055, 266.7644, 289.4095, 145.3036, 49.2889], [0.0, 0.0, 39.0, 84.4941, 79.5179, 144.2817, 50.5175, 18.0723, 25.0118, 99.6301, 265.1152, 55.7143, 243.9107, 95.5111], [0.0, 108.2603, 150.2824, 851.1309, 487.2095], [0.0, 315.7333, 0.0, 0.0, 0.0, 324.3519, 0.0, 567.3298, 37.0, 76.8375, 0.0, 236.4247, 105.4353, 647.875, 678.7042, 480.5, 0.0241, 28.2353, 41.8493, 90.3613, 17.8952, 36.9107], [0.0, 646.3333, 0.0, 0.0, 55.3333, 146.2778, 0.0, 265.2553, 249.2258, 0.0, 0.6667, 111.4932, 37.9529, 361.4464, 161.2254, 273.0702, 92.506, 14.6706, 155.6164, 713.9319, 259.1333, 176.5778], [0.0, 425.0667, 0.0, 0.0, 0.0, 242.537, 67.4483, 544.4362, 250.1613, 69.2, 176.1964, 563.5493, 630.4211, 239.3133, 665.1647, 609.1918, 20.8929, 21.8, 0.0], [0.0, 664.7, 0.0, 0.0, 0.0, 413.3148, 14.8103, 501.2447, 0.0, 100.4625, 0.0, 134.1096, 71.5412, 570.625, 206.9577, 274.4035, 0.0, 368.2941, 374.1781, 1224.7277, 487.1905, 119.0179, 760.4667, 326.4821], [0.0, 798.5, 0.0, 0.0, 54.193, 265.537, 51.5517, 651.8404, 0.0, 11.8625, 0.0, 70.5068, 67.5294, 674.875, 81.6056, 937.1491, 160.5422, 704.7529, 537.8082, 874.5969, 199.3429, 54.5714, 775.2333, 152.7143], [327.8333, 15.9483, 672.7128, 74.8387, 57.0125, 0.0, 21.0548, 65.0, 870.0536, 353.0282, 788.2105, 67.5542, 863.3529, 725.3014, 1322.4136, 617.2381, 227.2321, 354.9111, 0.0], [372.3333, 0.0, 0.0, 0.0, 269.037, 234.4138, 939.5638, 0.0, 0.0, 0.0, 275.4932, 94.6353, 1065.1786, 409.6667, 0.0, 669.5529, 824.9315, 1440.2618, 415.7238, 0.0, 1370.7556, 226.2321]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

