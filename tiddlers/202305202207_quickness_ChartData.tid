created: 20230520220730000
creator: Drevarr
modified: 20230705163531040
modifier: drevarr
tags: ChartData
title: 202305202207_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "La Morte Vivante", "Newtype Khan", "Grasszanine", "Aronorf Xideliesi"];
const professions = ["Catalyst", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[176.8592, 0.0, 0.0, 32.0901, 0.0, 9.4435, 0.0, 0.0, 0.0, 28.7154, 64.4239, 32.2157, 10.2748, 0.0, 0.0, 54.4304, 38.6784, 60.819, 0.0, 0.0, 136.8997, 68.9913, 4.2622, 0.0], [276.6758, 33.637, 27.6285, 88.5843, 19.4555, 32.146, 201.7597, 0.0, 235.128, 50.0103, 9.7816, 138.5748, 2.015, 28.8909, 17.6747, 73.7477, 35.1864, 11.3553, 32.2077, 48.6288, 109.926], [186.4463, 23.8241, 0.0, 20.7161, 20.7788, 18.6329, 0.0, 21.0064, 0.0, 0.0, 13.9165, 21.012, 230.112, 95.8386, 21.0522, 41.6799, 0.0, 20.7623, 104.3915, 17.8092, 224.361, 0.0, 0.0, 148.0162, 62.3925, 0.0, 69.9924, 42.8544, 0.0, 20.827, 0.0, 81.9126], [165.412, 80.1667, 13.4954, 33.2548, 0.0, 0.0, 33.626, 13.3567, 35.3701, 80.3799, 17.1564, 281.5488, 53.8592, 22.3758, 59.4432, 19.21, 118.5977, 25.7346, 238.329, 9.6767, 12.987, 86.6473, 0.0, 32.0634, 14.4239, 73.5879, 14.9256, 13.4865, 13.4182, 48.1536, 80.3169], [173.282, 81.0566, 38.9029, 29.3395, 14.0712, 18.4931, 7.0737, 31.7667, 6.7317, 37.011, 100.1749, 30.0696, 317.0131, 35.0385, 15.7582, 81.0958, 7.1359, 22.9937, 181.9668, 27.2034, 287.217, 5.0886, 14.021, 189.1318, 1.703, 27.9603, 15.6761, 81.4181, 24.0624, 31.4019, 14.0356, 75.7944, 138.0281]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

