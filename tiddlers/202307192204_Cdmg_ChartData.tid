created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Permanent Dawn", "Raelyn Sunray", "Drevarr Moonwillow", "Duke Silvver", "Vivian Vivisection", "Sungjinwoooooooooo", "Krozo Stormleaf", "Koralia Danai", "Bella Sassy", "Mistwalker Cael", "Easily Impressed", "Gavann", "Ggclaudx", "Sygaldry Verdandi", "Daphne Agla\u00e9", "K\u00e2 \u00d4tik R\u00e6j", "Sub Train", "Lord Erin The Wise", "Kittendoodlez", "Mike The Archmagus", "Vee Usagi", "Shaca Booey", "Rina Of Theros", "Jimbo Mann", "Rozaalyna", "Cedryn X", "Xanvias Einzbern", "Sister Elonith", "Ateriuz", "Il Dim Il", "Be\u00eb", "Johosh The Mighty"];
const professions = ["Weaver", "Firebrand", "Scrapper", "Vindicator", "Reaper", "Renegade", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Holosmith", "Firebrand", "Scourge", "Berserker", "Firebrand", "Weaver", "Berserker", "Weaver", "Scourge", "Berserker", "Scourge", "Firebrand", "Scourge", "Berserker", "Berserker", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 4.9227, 19.2565, 11.6319, 0.0, 0.0, 23.4434, 0.0, 2.1522, 0.0, 0.0, 8.3203, 4.2571, 0.0, 6.5319, 5.2437, 0.0, 0.0, 0.0, 9.8323, 0.0, 0.1171, 27.5469, 4.02, 0.5362, 0.0, 11.75], [8.3137, 1.9522, 28.1154, 10.6, 0.0, 7.3129, 0.0, 1.236, 0.0, 3.1953, 6.3714, 27.6875, 0.0, 0.0, 3.1915, 3.1269, 18.3448, 117.6034, 6.1018, 0.0, 10.1802, 2.3594, 6.5, 14.417, 41.1667], [13.7463, 0.0, 0.0, 3.2124, 0.6975, 15.025, 4.0522, 41.4278, 16.0392, 15.4391, 4.4176, 2.9455, 0.0, 9.8157, 0.0, 13.1522, 5.1573, 10.7273, 15.5391, 6.2143, 2.7679, 0.0, 3.625, 3.6809, 3.6142, 0.0, 0.0, 1.0517, 3.7485, 9.5849, 3.5946, 20.125, 15.64, 2.5404, 0.0, 9.8021], [0.0, 5.8136, 0.0, 0.0, 0.9832, 37.5583, 0.8522, 25.7577, 0.0, 1.6739, 18.0055, 22.1818, 0.0, 4.4894, 0.0, 16.8696, 0.0, 0.0, 21.0078, 0.8429, 37.625, 0.0, 8.375, 0.0, 15.9239, 0.0, 0.0, 0.0, 15.2754, 0.0, 0.0, 3.1094, 3.82, 0.5447, 0.0, 43.6875], [21.6607, 217.975, 19.7766, 6.0203, 10.9138, 90.3054, 0.0, 55.7188, 14.07], [14.0345, 11.6562, 59.4565, 54.8636, 43.9453, 118.5857, 0.0, 101.25, 1.2979, 41.1726], [45.3109, 0.0, 221.3478, 19.809, 131.4697, 15.2656], [6.3433, 0.8644, 0.0, 7.3894, 0.0, 10.0083, 1.8087, 51.5258, 17.8235, 64.4565, 3.9725, 1.0182, 0.0, 2.7562, 0.0, 0.0, 7.1461, 5.9394, 8.125, 13.9571, 14.7411, 3.2857, 2.9043, 8.2335, 0.0, 9.8323, 0.0, 3.4955, 10.3047, 0.93, 10.4383, 63.125], [80.8305, 0.0, 0.646, 0.0, 5.6917, 4.4435, 54.7784, 6.1569, 30.6826, 3.9176, 0.0, 0.0, 14.8599, 6.2812, 0.0, 15.0337, 7.5606, 11.9453, 0.0, 0.0, 5.7013, 6.675, 0.0, 2.9442, 25.9222, 0.0, 1.2342, 14.0391, 0.0, 16.766, 36.4062], [49.5224, 0.0, 0.0, 4.3363, 4.0336, 7.9333, 19.8087, 56.3918, 19.1961, 33.6478, 7.0165, 10.7273, 36.25, 16.1094, 0.0, 28.6522, 5.6966, 2.4242, 5.6797, 8.6286, 2.5625, 0.0, 33.175, 11.9255, 2.4213, 0.0, 0.0, 7.1976, 8.3962, 0.0, 4.9531, 4.22, 16.0596, 6.8571, 4.2292], [91.4217, 122.5824, 32.0364, 0.0, 14.8868], [29.5373, 4.1864, 0.0, 4.6283, 2.3193, 11.4609, 43.1598, 14.1569, 43.9826, 34.6044, 1.3636, 0.0, 8.4952, 0.0, 0.0, 3.3483, 2.7727, 5.6094, 3.6429, 1.7857, 3.9, 2.0745, 0.0, 14.4483, 0.0, 29.8743, 0.0377, 35.7297, 61.5078, 67.02, 3.9106, 6.9896], [0.0, 0.0, 6.3298, 31.2944, 11.3793, 0.0, 20.4138, 76.8323, 76.9434, 56.0721, 67.75, 48.96, 109.4, 57.5714, 73.5833], [90.194, 81.6102, 0.0, 22.1327, 24.5462, 38.7917, 12.8783, 66.6598, 193.3137, 13.4174, 2.3681, 0.0, 0.0, 14.0096, 0.0, 31.3258, 0.8485, 32.5859, 31.7857, 20.0536, 0.0, 0.0, 36.7128, 0.0, 0.0, 4.9667, 37.9162, 98.2642, 0.7748, 0.0, 28.14, 5.6468, 8.7812], [48.3284, 18.8305, 0.0, 0.5133, 0.0, 89.7417, 4.487, 8.8866, 120.9608, 0.713, 57.4341, 172.1455, 0.0, 1.5931, 3.1087, 1.0899, 25.197, 5.7969, 83.2286, 5.2857, 0.3247, 1.9, 2.4787, 17.0, 21.6897, 17.8263, 5.7736, 16.3874, 125.3906, 31.78, 26.2979, 20.5417], [57.6622, 45.2609, 0.0, 0.0, 67.8984, 60.2714, 70.2768, 0.0, 0.0, 20.9787, 6.6802, 0.0, 62.9042, 51.4595, 24.4375, 38.85, 16.7149, 35.619, 83.0], [61.4925, 13.2881, 0.0, 6.9823, 4.0336, 3.4583, 11.2609, 79.0928, 130.8431, 10.213, 46.8132, 5.5273, 0.0, 38.2706, 0.0, 66.4565, 1.0787, 1.8182, 7.8984, 5.6143, 14.8393, 0.0, 14.325, 26.5106, 9.2487, 0.0, 0.0, 10.5862, 16.2994, 1.3208, 10.2432, 108.6328, 3.21, 20.9532, 11.4479], [115.791, 43.1356, 0.0, 9.7699, 0.0, 76.9083, 0.8609, 18.5206, 189.9804, 14.0217, 55.967, 119.8909, 0.0, 12.0902, 0.0, 50.6087, 21.0, 31.3788, 34.0078, 16.9286, 18.6071, 0.0, 6.4, 36.3191, 13.1218, 2.4828, 0.0, 27.4072, 18.283, 7.4595, 63.7734, 23.35, 0.4809], [18.325, 29.1809, 33.1827, 0.0, 2.2, 5.4655, 102.9401, 3.283, 34.9189, 240.5391, 38.66, 53.1489, 0.0, 244.7708], [86.2985, 38.9322, 6.6735, 35.5487, 8.9832, 60.4583, 65.4696, 10.7938, 117.1765, 79.413, 23.0165, 0.0, 40.7609, 25.6854, 77.2879, 65.1875, 27.2, 60.7857, 0.0, 0.0, 2.1702, 36.2234, 0.0, 0.0, 0.9138, 29.4072, 35.0078, 0.0, 19.1429, 35.7917], [6.4583, 62.5374, 31.0435, 21.618, 135.0303, 37.25, 112.0714, 58.4464, 0.0, 8.85, 83.4213, 32.2069, 5.6667, 0.0, 48.9401, 73.9811, 113.5946, 48.2969, 91.08, 13.9234, 0.0, 23.9792], [0.0, 10.6957, 95.2921, 204.2424, 120.1953, 9.6286, 31.9554, 9.625, 40.2766, 64.9289, 30.3448, 0.0, 2.2069, 185.0599, 38.2642, 11.0541, 176.7344, 33.94, 97.0596, 0.0, 311.0104], [166.209, 107.339, 1.2449, 15.3805, 1.3697, 122.8083, 28.8609, 107.7784, 196.2353, 1.0696, 126.5659, 115.9818, 1.3542, 38.2092, 2.5938, 4.2174, 5.4944, 126.7879, 33.5156, 24.4571, 59.3214, 0.0, 28.35, 3.1702, 23.0964, 17.6207, 3.9667, 1.3621, 11.5389, 20.7547, 39.009, 75.8906, 6.93, 19.0298, 0.0, 98.0625], [73.3559, 0.0, 1.9646, 2.2857, 31.425, 39.2696, 120.8969, 169.6471, 11.1348, 132.5989, 263.2545, 26.2917, 82.2226, 12.6875, 80.6957, 0.0, 127.2576, 31.2188, 56.4, 12.5714, 0.0, 58.275, 71.1702, 14.4162, 13.8966, 5.2, 0.0, 69.479, 58.7925, 13.2162, 39.0156, 6.05, 8.9489, 0.0, 101.5104], [92.6567, 14.2542, 1.6327, 10.2124, 1.1933, 141.9917, 8.8609, 116.8969, 239.2549, 95.0609, 136.4451, 70.9636, 0.0, 36.1017, 1.625, 2.1461, 93.303, 28.6094, 2.4857, 2.0536, 0.6, 82.2872, 21.4264, 0.0, 2.1552, 29.1018, 3.1321, 26.4234, 173.6016, 10.29, 32.0511, 154.6875], [279.3134, 126.9492, 0.0, 0.0, 122.6417, 97.5565, 64.7268, 307.6078, 94.9957, 191.6923, 68.0182, 90.6875, 50.4338, 108.5217, 1.9888, 92.5606, 120.9531, 67.4857, 53.6875, 0.0, 53.6915, 28.3807, 0.2667, 5.8793, 36.1377, 9.434, 21.3243, 280.8906, 21.83, 50.6, 0.8095, 353.1354], [5.3134, 86.2712, 0.0, 203.6991, 1.4034, 96.6, 126.3043, 72.5567, 0.0, 69.9522, 183.1593, 55.4909, 12.2708, 83.2092, 7.0312, 94.3261, 51.1461, 108.3485, 71.7109, 44.7714, 158.6786, 0.0, 0.0, 137.8617, 69.9594, 0.0, 6.3667, 0.0, 147.0299, 11.717, 77.1532, 107.0781, 61.79, 27.8851, 0.0, 231.7917], [3.2333, 44.8957, 221.268, 257.7059, 66.3, 239.6648, 68.8182, 0.0, 116.499, 156.0652, 19.3258, 133.5455, 88.5547, 77.9714, 20.5179, 0.0, 61.0106, 36.5533, 8.6552, 14.3966, 174.4012, 7.3396, 84.6937, 196.0703, 68.05, 112.9532, 0.0, 230.2812], [71.5133, 0.0, 243.325, 224.7826, 223.8505, 78.0, 171.3783, 95.5879, 0.0, 0.0, 66.3532, 35.3913, 2.2247, 0.9394, 233.1406, 12.4571, 91.25, 0.0, 0.0, 196.2447, 37.1624, 5.7586, 0.0, 0.0, 51.5389, 41.7547, 61.5045, 78.2188, 43.73, 176.2213, 603.6875], [216.0746, 201.9153, 0.4898, 92.1416, 104.6555, 245.1, 115.4348, 187.8299, 304.3725, 84.7174, 305.4615, 128.4364, 6.6042, 80.0979, 8.25, 93.1739, 18.0899, 87.8939, 41.9844, 128.4143, 125.0357, 0.0, 0.0, 123.1702, 46.599, 0.0, 0.0, 9.2931, 62.6647, 139.7358, 68.4144, 70.4375, 166.72, 79.4979, 255.1429, 239.0], [274.8358, 55.9661, 0.0, 53.0, 57.2101, 233.9167, 77.713, 291.0722, 368.3922, 176.9913, 124.7418, 246.8727, 0.2083, 137.2169, 1.4688, 56.3913, 71.6629, 263.7424, 53.3359, 274.3143, 66.3214, 0.0, 0.375, 89.883, 73.5178, 0.0, 0.0, 0.0, 155.8563, 6.0566, 15.4054, 83.8281, 126.72, 46.5362, 55.2857, 189.4271], [293.0299, 117.8983, 0.0, 36.5841, 0.0, 154.2917, 264.887, 231.1856, 176.6667, 196.3087, 292.467, 314.1455, 0.0, 105.7063, 10.0625, 220.8261, 27.1236, 35.3333, 89.3984, 96.4, 157.9464, 0.0, 0.0, 85.1596, 76.0711, 2.9655, 0.0, 232.7186, 44.3585, 131.8108, 238.5547, 37.38, 245.3489, 0.0, 349.375]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

