created: 20230217231312000
creator: Drevarr
modified: 20230705163519497
modifier: drevarr
tags: ChartData
title: 202302172313_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Arka\u00f1", "Ark Darkness", "Primal Clone", "Zadie Miststep", "Bambiae", "Cat Wigglebooty", "Ryvalia Fazebringer", "Tyrisai", "Venomina The Siren", "Air One Com", "Zaylen Harker", "Blanco Padre Guard", "Aronorf Xideliesi", "\u00c9\u00efbhear", "Drevarr Moonwillow", "Bella Sassy", "Ravioli Fetabringer", "Koralia Danai", "Johosh The Great"];
const professions = ["Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.7139, 15.4584, 19.1296, 50.9286, 22.6302, 12.4656, 16.9906, 0.0, 15.4958, 16.0358, 47.2618, 20.2814, 0.0, 33.6384, 5.3222, 46.0781, 42.4965, 0.0, 34.9762, 19.344, 26.783, 24.012, 19.3037, 19.2994], [71.4067, 0.0, 39.1373, 34.5313, 9.8426, 10.9714, 46.1693, 0.0, 145.367, 0.0, 0.0, 28.1856, 33.815, 80.7485, 53.6063, 16.1784], [22.3229, 9.275, 19.3648, 81.5987, 14.651, 16.5689, 19.453, 19.633, 19.5533, 59.3174, 14.2203, 0.0, 19.4688, 5.9405, 103.452, 23.3656, 39.4958, 0.0, 8.7878, 25.2043, 19.5525, 6.1904, 3.8295, 0.0, 34.0557, 23.122], [18.0173, 0.0, 18.1888, 40.0154, 16.0485, 9.7387, 0.0, 0.0, 17.8704, 0.0, 69.1891, 18.533, 0.0, 34.56, 12.2304, 91.3733, 35.5217, 23.1634, 36.624, 8.4346, 17.2224, 18.486, 18.4855, 0.0, 53.031, 35.697, 35.464], [33.1862, 35.5406, 17.6204, 59.0822, 26.5972, 14.7769, 21.5597, 11.8238, 0.0, 57.8323, 9.6162, 0.0, 29.8752, 7.5264, 72.696, 42.6459, 49.7678, 34.512, 9.936, 31.464, 20.1568, 21.5914, 18.2505, 27.0551, 31.3203, 10.868], [23.0184, 16.6349, 14.1316, 87.8707, 21.0524, 16.2572, 0.0, 80.9554, 4.1472, 29.353, 16.6098, 16.6198, 56.5248, 0.0, 123.4714, 53.3074, 8.0486, 9.9638, 16.224, 13.9104, 42.1618, 48.3836, 37.4422, 18.0205, 49.7937, 21.4729, 0.0], [42.8904, 22.4352, 22.1676, 63.2218, 35.9288, 8.7519, 8.4542, 0.0, 22.4726, 19.1078, 91.8154, 38.9893, 0.0, 44.6592, 25.6435, 93.3864, 54.4533, 32.1514, 44.928, 28.1962, 21.9254, 22.3965, 16.0436, 5.543, 22.4303, 29.4511, 33.154], [35.7696, 16.8538, 27.244, 224.5376, 20.872, 0.0, 4.2955, 50.5022, 35.5277, 103.2595, 33.8024, 0.0, 95.3088, 0.0, 189.6806, 74.182, 21.3144], [0.0, 18.5227, 50.7052, 27.6595, 24.2981, 14.4393, 18.4133, 46.2427, 0.0, 131.5642, 42.7192, 0.0, 59.6736, 41.1533, 74.5973, 46.781, 41.2934, 40.752, 21.5059, 42.0624, 0.0, 65.0954, 0.0, 58.5808, 56.5316, 50.028], [128.8037, 74.4739, 70.952, 95.209, 48.2356, 7.6871, 11.1082, 0.0, 88.789, 13.4093, 213.071, 43.8266, 11.1586, 75.4176, 44.9165, 213.167, 0.0, 0.0, 124.7021, 45.6, 61.7136, 102.2746, 14.8599, 116.0536, 11.0285, 0.0, 95.6478, 35.442], [84.3566, 71.9842, 48.3728, 204.7808, 99.0858, 23.5548, 15.7867, 24.4998, 87.9077, 53.8829, 105.6182, 49.3632, 25.3282, 98.9568, 43.3306, 143.8262, 146.1221, 0.0, 95.1187, 31.248, 78.649, 39.8765, 20.4413, 56.7202, 13.363, 62.1265, 94.2801], [76.8715, 76.991, 73.6176, 163.8874, 104.27, 11.4008, 36.7445, 0.0, 93.073, 22.3181, 149.6477, 16.7846, 120.6144, 21.9072, 294.8102, 138.7487, 166.5605, 97.344, 22.1683, 62.5306, 22.5387, 68.6939, 28.5085, 0.0, 29.8159, 52.844], [108.7661, 55.787, 54.5272, 216.6349, 169.9516, 69.6775, 30.3422, 0.0, 48.4704, 55.6339, 75.7411, 53.0931, 0.0, 105.0624, 66.528, 205.2264, 152.3496, 135.8472, 16.128, 60.8525, 65.7763, 21.0811, 76.3195, 30.2795, 0.0, 65.2393, 80.41], [50.0774, 67.6339, 63.7784, 193.6794, 130.732, 46.9538, 20.3285, 30.2573, 41.5949, 165.8966, 56.4733, 0.0, 84.1344, 61.0714, 299.3957, 149.5098, 2.7648, 86.747, 21.072, 32.303, 104.5598, 47.8148, 97.9751, 6.21, 93.1126, 60.9538, 53.9], [80.2166, 71.3549, 46.0208, 177.9366, 42.9612, 10.6217, 40.2739, 45.8755, 72.96, 221.6323, 50.7036, 73.5744, 104.8858, 350.7302, 166.7475, 14.1005, 187.5667, 78.288, 10.8634, 61.9675, 56.7022, 93.8196, 15.6975, 144.1396, 74.0838, 44.308], [103.9637, 55.2946, 24.6568, 215.7568, 125.7281, 44.6165, 40.3013, 34.0751, 83.1096, 51.5328, 136.4563, 110.8486, 58.5086, 39.9744, 50.8032, 277.2514, 169.6869, 8.2944, 107.0856, 209.568, 11.5478, 139.4683, 26.0226, 73.1279, 24.1845, 116.4679, 66.5614, 109.208], [148.1789, 41.5325, 51.1756, 274.4, 178.8324, 75.4169, 54.0907, 17.2622, 42.9134, 17.7562, 358.0013, 125.5351, 43.5715, 114.8928, 64.2432, 302.5272, 194.0489, 0.0, 189.0562, 121.968, 73.2173, 97.6378, 22.2188, 45.1319, 58.903, 37.3838, 86.8945, 117.392], [185.3726, 92.6683, 91.7476, 260.6643, 138.3054, 62.4838, 57.4013, 76.8672, 58.2605, 334.2394, 102.5145, 185.5872, 46.0723, 450.9389, 185.8784, 164.8142, 101.664, 68.5584, 112.0781, 36.652, 95.1262, 22.7585, 0.0, 80.8767, 97.746], [109.6934, 58.8514, 121.9904, 345.9635, 209.5769, 107.8274, 19.5898, 0.0, 72.9014, 111.6672, 398.3616, 107.1186, 0.0, 167.8464, 66.1786, 360.4603, 274.2591, 204.7723, 118.896, 74.1888, 140.495, 59.3685, 152.2748, 39.2265, 0.0, 97.6538, 115.522]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

