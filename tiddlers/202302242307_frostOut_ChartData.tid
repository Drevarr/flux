created: 20230224230708000
creator: Drevarr
modified: 20230705163520104
modifier: drevarr
tags: ChartData
title: 202302242307_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Venomina The Siren", "Tegan Parker", "Zadie Miststep", "Mike The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89.3407, 104.0645, 98.2195, 75.409, 39.2112, 48.1606, 17.7978, 39.884, 29.9268, 0.0, 19.8274], [46.2433, 173.2286, 84.5779, 52.6762, 46.3008, 112.6138, 83.2015, 139.259, 64.1223, 19.4832, 36.6442, 40.4358, 229.8211, 0.0, 38.484, 19.7203, 146.1067, 145.574, 85.3282, 151.3434, 55.5954, 19.9861, 161.112, 93.1392, 155.3158, 173.4982], [243.6946, 211.9478, 101.3933, 119.7379, 48.4176, 107.4002, 107.3468, 233.9417, 51.3162, 29.4624, 49.2038, 27.2371, 261.8203, 15.5441, 63.396, 56.0898, 124.8134, 60.18, 181.3862, 97.3071, 28.8904, 40.0426, 227.752, 173.664, 195.8172, 132.5029, 37.4007], [388.6112, 59.8291, 100.2019, 86.4528, 115.8071, 126.7625, 124.2606, 59.1881, 0.0, 19.8274, 17.0166, 0.0, 168.2107, 19.7284, 14.04, 31.7885, 201.5496, 213.7776, 120.983, 189.289, 134.7353, 53.1023, 80.8738, 249.5472, 88.0848, 223.5414, 117.8617, 104.0726], [401.8235, 239.6347, 255.2371, 174.3322, 89.2416, 211.0856, 219.8586, 266.9549, 42.3428, 70.7454, 103.2058, 55.2483, 45.184, 405.8645, 39.4886, 102.204, 77.9927, 212.4418, 253.5838, 135.0581, 218.391, 112.2237, 76.6027, 146.9923, 361.5024, 205.1136, 244.7565, 202.2926, 109.2313]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

