created: 20230306221045000
creator: Drevarr
modified: 20230705163521314
modifier: drevarr
tags: ChartData
title: 202303062210_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Baidu Leohunt", "Estryl", "Husky Guard", "Arcanophage Farra", "Smol Gluvs", "King Squid", "Ace Hammers", "Dark Sidiuz", "Rozaalyna", "Lord Erin The Wise", "Cerys Fireblade", "Smol Daddy Tika", "My Birthday Girl", "Be\u00eb", "Legacy Of Mathus", "Xyntharos", "Sofya De Nova", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Dragonhunter", "Spellbreaker", "Dragonhunter", "Spellbreaker", "Scourge", "Reaper", "Vindicator", "Scourge", "Scourge", "Weaver", "Berserker", "Berserker", "Scrapper", "Scourge", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15251.0, 31297.0, 1129.0, 2066.0, 0.0, 3624.0, 525.0, 0.0, 2145.0, 11987.0, 3908.0, 1407.0, 6845.0, 223.0, 1030.0, 0.0, 30992.0, 1720.0, 27567.0, 3717.0, 13536.0, 0.0, 14608.0, 21380.0, 10855.0, 11865.0, 20336.0, 49644.0], [18062.0, 6518.0, 0.0, 1624.0, 3995.0, 45799.0, 25720.0, 2385.0, 19423.0, 0.0, 21309.0, 4284.0, 32806.0, 0.0, 23411.0, 0.0, 14163.0, 0.0, 4151.0, 10842.0, 17089.0, 7285.0, 3907.0, 13539.0, 5916.0, 8581.0], [29338.0, 10742.0, 0.0, 2144.0, 0.0, 2341.0, 25319.0, 0.0, 7407.0, 11186.0, 9030.0, 11712.0, 1720.0, 25813.0, 34613.0, 5082.0, 15182.0, 0.0, 5401.0, 1769.0, 17445.0, 0.0, 19598.0, 3611.0, 4704.0, 0.0, 13694.0, 5034.0, 9974.0, 10549.0, 7892.0, 37233.0, 11639.0, 20460.0], [17470.0, 3119.0, 1363.0, 0.0, 0.0, 9945.0, 0.0, 6253.0, 7300.0, 1646.0, 5135.0, 7608.0, 26340.0, 34761.0, 1114.0, 13637.0, 1175.0, 3000.0, 21512.0, 0.0, 13819.0, 0.0, 31369.0, 0.0, 28057.0, 11109.0, 36220.0, 18590.0, 12730.0, 33752.0, 4509.0, 21331.0], [24525.0, 2780.0, 0.0, 0.0, 0.0, 0.0, 7133.0, 0.0, 1591.0, 12086.0, 2700.0, 7931.0, 3243.0, 32642.0, 35204.0, 3074.0, 13446.0, 1556.0, 21199.0, 6985.0, 5201.0, 237.0, 0.0, 30923.0, 2158.0, 21993.0, 2003.0, 23415.0, 13939.0, 29490.0, 25117.0, 3491.0, 21229.0, 9453.0, 30056.0], [26632.0, 17910.0, 954.0, 16630.0, 0.0, 2383.0, 5047.0, 17114.0, 22833.0, 8465.0, 23203.0, 22214.0, 64373.0, 61932.0, 7524.0, 13074.0, 1268.0, 6892.0, 18685.0, 2713.0, 0.0, 0.0, 622.0, 34596.0, 8368.0, 11090.0, 5634.0, 3340.0], [23506.0, 7133.0, 1013.0, 5989.0, 1205.0, 4382.0, 16438.0, 0.0, 4745.0, 3946.0, 7723.0, 17778.0, 3352.0, 30455.0, 11992.0, 4739.0, 27953.0, 0.0, 18988.0, 3638.0, 16966.0, 0.0, 0.0, 0.0, 0.0, 26464.0, 10843.0, 20420.0, 32357.0, 12928.0, 23511.0, 2738.0, 35914.0, 2116.0, 33514.0], [1274.0, 9127.0, 11063.0, 6115.0, 9626.0, 8270.0, 18044.0, 28015.0, 19324.0, 9374.0, 0.0, 31270.0, 9842.0, 60734.0, 1600.0, 0.0, 60867.0, 1072.0, 19391.0, 4709.0, 2736.0, 7547.0, 20919.0, 21355.0, 5129.0, 12751.0, 10030.0, 32013.0], [40299.0, 4490.0, 0.0, 4946.0, 0.0, 405.0, 2388.0, 0.0, 24623.0, 12022.0, 2469.0, 11197.0, 20421.0, 30289.0, 22975.0, 6602.0, 9628.0, 7454.0, 0.0, 49819.0, 2685.0, 21705.0, 0.0, 45123.0, 0.0, 25017.0, 12170.0, 31456.0, 11648.0, 1381.0, 54415.0, 0.0], [29484.0, 35102.0, 3776.0, 0.0, 0.0, 10008.0, 4192.0, 0.0, 41869.0, 8538.0, 12429.0, 8767.0, 31951.0, 29406.0, 3931.0, 41901.0, 0.0, 18842.0, 30413.0, 33333.0, 0.0, 0.0, 38252.0, 1616.0, 48932.0, 9731.0, 19018.0, 8422.0, 73641.0, 0.0, 91.0, 6895.0], [22665.0, 14459.0, 2676.0, 33487.0, 0.0, 0.0, 0.0, 0.0, 23664.0, 8683.0, 14357.0, 20982.0, 6239.0, 27052.0, 50307.0, 14597.0, 2371.0, 33179.0, 21090.0, 116356.0, 0.0, 79341.0, 0.0, 6022.0, 823.0, 19216.0, 30389.0, 28918.0, 6566.0, 11951.0, 9844.0, 70583.0, 21628.0], [18631.0, 0.0, 0.0, 16381.0, 2419.0, 0.0, 2183.0, 0.0, 77385.0, 13031.0, 4636.0, 16111.0, 56822.0, 0.0, 76428.0, 2422.0, 20027.0, 20906.0, 0.0, 121599.0, 1060.0, 0.0, 33490.0, 8199.0, 45685.0, 0.0, 16997.0, 24884.0, 78943.0, 61943.0, 32130.0, 106281.0, 12345.0, 42255.0], [92242.0, 19077.0, 0.0, 0.0, 0.0, 14827.0, 6699.0, 23540.0, 26441.0, 16118.0, 2684.0, 32216.0, 71678.0, 42802.0, 0.0, 48809.0, 3809.0, 53945.0, 9561.0, 173117.0, 9589.0, 73250.0, 1095.0, 25362.0, 0.0, 19097.0, 23406.0, 78010.0, 21246.0, 22187.0, 0.0, 43280.0, 17877.0], [34281.0, 22387.0, 2231.0, 21536.0, 4780.0, 4060.0, 25865.0, 0.0, 24401.0, 57234.0, 20072.0, 19903.0, 29823.0, 80102.0, 62929.0, 3169.0, 12502.0, 0.0, 61467.0, 4660.0, 101887.0, 0.0, 0.0, 65747.0, 12343.0, 43589.0, 404.0, 25872.0, 22694.0, 77877.0, 68830.0, 28142.0, 88788.0, 46920.0, 53500.0], [119562.0, 4244.0, 1662.0, 3203.0, 1062.0, 3530.0, 41912.0, 0.0, 32598.0, 58129.0, 6121.0, 63715.0, 30255.0, 118834.0, 92709.0, 21136.0, 50863.0, 0.0, 40802.0, 7091.0, 36570.0, 0.0, 38660.0, 0.0, 111460.0, 0.0, 14279.0, 72133.0, 98119.0, 56813.0, 19952.0, 9051.0, 59665.0, 30155.0], [64862.0, 12974.0, 0.0, 6647.0, 3459.0, 5857.0, 24807.0, 0.0, 30877.0, 38498.0, 13593.0, 26555.0, 12933.0, 140040.0, 80312.0, 20012.0, 6519.0, 51316.0, 0.0, 118288.0, 0.0, 99811.0, 3384.0, 84520.0, 6769.0, 76156.0, 16032.0, 132184.0, 3127.0, 10634.0, 124777.0, 39586.0, 93829.0], [0.0, 3765.0, 5673.0, 0.0, 6596.0, 52592.0, 4407.0, 59064.0, 49609.0, 5683.0, 15384.0, 70047.0, 55194.0, 168623.0, 34799.0, 81007.0, 38.0, 51917.0, 44152.0, 232009.0, 0.0, 0.0, 89032.0, 1688.0, 33355.0, 0.0, 40019.0, 10916.0, 167291.0, 102566.0, 38924.0, 88661.0, 93480.0, 74463.0], [75561.0, 11193.0, 10687.0, 26547.0, 0.0, 7630.0, 4252.0, 37.0, 57905.0, 53079.0, 7953.0, 23947.0, 25057.0, 112200.0, 135022.0, 9204.0, 55389.0, 0.0, 38802.0, 3468.0, 141370.0, 0.0, 0.0, 161230.0, 0.0, 149201.0, 0.0, 85683.0, 22015.0, 156026.0, 115732.0, 38311.0, 199254.0, 44971.0, 82989.0], [87272.0, 20446.0, 13243.0, 42641.0, 2980.0, 0.0, 0.0, 0.0, 11980.0, 55899.0, 3845.0, 29059.0, 21260.0, 174371.0, 191253.0, 5661.0, 147099.0, 0.0, 143557.0, 16882.0, 294008.0, 3496.0, 0.0, 148699.0, 0.0, 101909.0, 113682.0, 38713.0, 128057.0, 192468.0, 92196.0, 199217.0, 105915.0, 67757.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

