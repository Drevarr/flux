created: 20230812001414000
creator: Drevarr
tags: ChartData
title: 202308120014_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Emily Melia", "Cesare Pirane", "Venomina The Sly", "Ryvalia Fazebringer", "Zaedy Zae", "Tribal S", "Daphne Agla\u00e9", "Arcanophage Farra", "Blancooo Padreee", "Rozaalyna", "Name Is What", "\u00c1rk\u00e1ntor", "Newtype Khan", "Black Raspberry Pie", "Be\u00eb", "Morton Saltbringer", "Rina Of Theros", "Eibh\u00ebar"];
const professions = ["Druid", "Spellbreaker", "Druid", "Chronomancer", "Druid", "Druid", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0066, 0.0, 0.0102, 0.0085, 0.0139, 0.026, 0.1522, 0.0, 0.0428, 0.0, 0.0486, 0.0106, 0.0568, 0.0323, 0.0, 0.0, 0.0087, 0.0324], [0.0875, 0.0, 0.0, 0.0208], [0.0495, 0.0, 0.0, 0.0, 0.0208, 0.0118, 0.0101, 0.0263, 0.0, 0.0, 0.051, 0.0254, 0.0772, 0.0376, 0.0652, 0.0, 0.0428, 0.0, 0.0347, 0.0106, 0.0114, 0.0, 0.0417, 0.0, 0.0218, 0.0567], [0.0, 0.0513, 0.0, 0.0, 0.0, 0.0235, 0.0101, 0.0658, 0.0256, 0.0, 0.1224, 0.0424, 0.0417, 0.0399, 0.0491, 0.1087, 0.0099, 0.0459, 0.0, 0.1042, 0.0053, 0.0455, 0.0, 0.1458, 0.0, 0.0393, 0.0243], [0.0495, 0.0, 0.0323, 0.0208, 0.0471, 0.0202, 0.0263, 0.0, 0.0, 0.0204, 0.0508, 0.0, 0.0734, 0.0347, 0.1087, 0.0, 0.0673, 0.0, 0.0417, 0.0, 0.0455, 0.0, 0.0417, 0.0, 0.0175, 0.0526], [0.0099, 0.0172, 0.0323, 0.0, 0.0, 0.0, 0.0197, 0.0, 0.0204, 0.0339, 0.0, 0.0849, 0.0405, 0.1087, 0.0, 0.0703, 0.0417, 0.0106, 0.0682, 0.0, 0.0625, 0.0, 0.0262, 0.1134], [0.099, 0.0, 0.0, 0.0, 0.0, 0.0118, 0.0101, 0.0658, 0.0, 0.1327, 0.1186, 0.0139, 0.1081, 0.0896, 0.413, 0.0297, 0.0887], [0.1881, 0.1795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0855, 0.0, 0.0, 0.1939, 0.0254, 0.1667, 0.0721, 0.0607, 0.587, 0.0, 0.107, 0.0, 0.0972, 0.0, 0.0227, 0.0, 0.1042, 0.0, 0.0, 0.0], [0.0594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0395, 0.0256, 0.1224, 0.1186, 0.1389, 0.0644, 0.0578, 0.4783, 0.0, 0.1254, 0.0, 0.2083, 0.0106, 0.0682, 0.0, 0.4167, 0.0, 0.0218, 0.0567], [0.1089, 0.0, 0.069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306, 0.1525, 0.0139, 0.1081, 0.1329, 0.6739, 0.0, 0.0795, 0.0, 0.2361, 0.0053, 0.0227], [0.1683, 0.0, 0.0172, 0.0, 0.0, 0.0353, 0.0101, 0.0, 0.0, 0.0, 0.0, 0.1356, 0.1111, 0.0862, 0.0347, 0.7826, 0.0099, 0.0795, 0.027, 0.1458, 0.037, 0.1364, 0.0645, 0.4792, 0.0784, 0.1048, 0.1012], [0.2871, 0.0256, 0.0172, 0.0, 0.0, 0.0824, 0.0101, 0.0329, 0.0256, 0.0312, 0.3776, 0.178, 0.0, 0.2625], [0.2376, 0.0256, 0.0345, 0.129, 0.0, 0.0706, 0.0, 0.0724, 0.0513, 0.0, 0.1429, 0.1525, 0.1667, 0.1171, 0.0751, 0.7174, 0.0, 0.1713, 0.0, 0.1458, 0.0106, 0.1136, 0.0968, 0.4167, 0.0, 0.0349, 0.0526], [0.0594, 0.0769, 0.0517, 0.0, 0.0, 0.0471, 0.0202, 0.0987, 0.0513, 0.0, 0.0306, 0.1441, 0.2083, 0.1995, 0.0954, 1.2826, 0.0, 0.263, 0.0, 0.1458, 0.0265, 0.2614, 0.0645, 0.25, 0.0, 0.0742, 0.1336], [0.2376, 0.0, 0.0172, 0.0, 0.0625, 0.0, 0.0, 0.0658, 0.0, 0.0, 0.449, 0.1356, 0.2083, 0.166, 0.1329, 0.9348, 0.1188, 0.1927, 0.0, 0.3472, 0.0212, 0.1364, 0.0, 0.5625, 0.0588, 0.0393, 0.166], [0.0693, 0.0, 0.1034, 0.0, 0.0, 0.0471, 0.0, 0.0987, 0.1026, 0.0156, 0.5, 0.322, 0.125, 0.1828, 0.1156, 0.3696, 0.0891, 0.2477, 0.0, 0.1667, 0.0106, 0.1818, 0.0968, 0.625, 0.0196, 0.1354, 0.1457], [0.3366, 0.1282, 0.069, 0.0968, 0.0, 0.0824, 0.0, 0.0789, 0.0513, 0.0, 0.2347, 0.1949, 0.3194, 0.1815, 0.1127, 1.2826, 0.0099, 0.2355, 0.0, 0.2361, 0.0794, 0.2841, 0.0, 1.1458, 0.0784, 0.1485, 0.1741], [0.3366, 0.0, 0.0345, 0.0323, 0.0, 0.1294, 0.0606, 0.0658, 0.0769, 0.0625, 0.4388, 0.3136, 0.4028, 0.3127, 0.2861, 1.5217, 0.0, 0.5199, 0.0541, 0.5556, 0.0847, 0.3864, 0.0323, 1.125, 0.1373, 0.1223, 0.5263]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

