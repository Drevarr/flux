created: 20230503220838000
creator: Drevarr
modified: 20230705163528096
modifier: drevarr
tags: ChartData
title: 202305032208_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Mannse Lee", "Tuandha Lan", "Tootsie Pop Rocks", "Binkety Bonk", "Slautorn", "Lord Erin The Wise", "Skye Nightroad", "Johosh The Great", "Tribal S", "Smol Daddy Tika", "Arriasa", "Blancooo Padreee", "Venomina The Fierce", "Kosa\u00efr", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Renegade", "Scrapper", "Scrapper", "Weaver", "Weaver", "Scrapper", "Willbender", "Druid", "Spellbreaker", "Druid", "Spellbreaker", "Spellbreaker", "Catalyst", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[363.2054, 186.3583, 0.0, 1.3367, 1.1172, 102.7971, 0.0, 0.0, 327.9606, 0.0, 226.4851, 174.8854], [955.2192, 251.5704, 9.6535, 39.0275, 34.0599, 53.1175, 45.598, 425.4624], [55.6738, 883.2576, 941.1744], [803.6059, 172.3085, 27.8933, 0.0, 35.4152, 64.4154, 34.1333, 439.2013, 14.1005, 32.3578, 493.5245, 539.5718], [0.0, 1474.7309, 1240.2321], [896.351, 424.9393, 33.1485, 7.8901, 33.8139, 214.3407, 51.6154, 39.9368, 868.6524, 12.0269, 15.9905, 601.0963, 521.3002], [1219.0152, 516.3953, 7.0663, 7.9075, 78.0178, 195.7158, 29.3712, 40.7946, 724.1725, 0.0, 15.9905, 774.311, 749.136], [1221.2366, 757.8923, 20.4227, 63.8501, 28.0045, 110.6175, 52.766, 54.3813, 1088.0315, 50.8599, 753.0029, 884.1222], [1541.124, 703.5489, 0.0, 0.0, 24.1315, 413.9667, 0.0, 45.7009, 1057.4513, 0.0, 721.728, 764.7974], [1752.1608, 1513.1337, 44.6939, 18.3929, 74.5917, 528.1857, 27.7413, 72.6, 1309.6264], [1537.2365, 787.8475, 44.9849, 10.4594, 46.8852, 272.2734, 95.4965, 56.2684, 1162.9306, 21.9413, 23.8183, 841.3286, 947.8864], [1983.1906, 1077.5909, 33.0838, 0.0, 126.5043, 236.7729, 20.5503, 15.0278, 1592.8249, 43.4088, 994.9536, 1096.2966], [2318.628, 1279.0593, 106.2046, 132.7606, 454.2006, 125.9544, 0.0, 64.7057, 26.6717, 60.9482, 1152.7027, 1506.1027], [2453.0251, 1204.3039, 65.4238, 150.5986, 570.1689, 95.912, 163.8303, 2053.2993, 12.7138, 1242.0595, 1469.5595], [2731.8158, 1336.8489, 58.7294, 164.0422, 415.8189, 152.2894, 54.7244, 2226.1434, 97.9387, 71.0783, 1736.9587, 1704.8531], [3416.0194, 1855.0998, 117.5882, 24.6078, 215.1727, 614.9304, 79.2608, 146.6066, 2764.6192, 26.8272, 88.5339, 2224.9843, 1951.3334]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

