created: 20230626010646000
creator: Drevarr
modified: 20230705163537402
modifier: drevarr
tags: ChartData
title: 202306260106_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Rednuii", "Drevarr Moonwillow", "Iskalla"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.4293, 56.4631, 0.0, 29.121, 70.518, 19.0845, 0.0, 34.8514, 73.0831, 19.7453, 195.104, 124.2696, 44.8227, 35.7961, 23.5856, 78.8154, 112.3584, 224.6706, 60.1942, 68.3066, 19.302, 32.0797, 79.8831, 28.0372, 57.9895, 0.0, 21.1882, 32.5134, 35.6551, 0.0, 44.9412, 41.2842, 48.4394, 76.3023, 24.6658, 52.2672, 2.6688, 28.8511, 13.433, 0.0, 14.6265], [150.9271, 33.346, 59.4001, 62.4551, 128.5739, 218.3552, 67.8132, 66.6958, 0.0, 30.5282, 117.4784, 66.528, 85.4053, 83.5427, 73.5816, 66.99, 68.8292, 65.8845, 43.6711, 0.0, 0.0, 0.0, 13.7052, 73.7215, 21.0584, 117.7896, 7.0616, 34.3274, 98.1539, 18.5674, 46.2528, 0.0, 61.9469, 12.1759, 16.4506, 94.167], [0.0, 0.0, 0.0, 0.0, 30.5055, 0.0, 51.7319, 40.6281, 71.4771, 20.5632, 354.592, 94.5818, 5.0544, 86.7204, 63.0505, 47.8234, 70.4748, 147.415, 60.1708, 56.7002, 12.948, 37.3584, 30.1802, 72.558, 15.276, 51.3681, 0.0, 18.1776, 43.3318, 88.2871, 91.476, 140.199, 64.7599, 51.3912, 81.4787, 108.0173, 36.1008, 24.876, 163.1611, 9.0169, 9.0394], [226.2253, 26.5975, 90.2538, 270.9179, 371.9136, 60.7162, 900.48, 89.1436, 116.1752, 156.8268, 90.0804, 173.3805, 134.178, 516.0632, 112.6476, 184.1177, 124.626, 206.8799, 163.2015, 62.2978, 25.2122, 140.5088, 0.0, 27.5722, 201.9233, 274.1882, 50.3624, 156.8046, 412.4336, 342.0514, 148.6577, 224.2397, 112.6848, 72.12, 162.4507, 33.8839, 210.8083, 375.1484]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

