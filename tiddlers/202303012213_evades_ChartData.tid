created: 20230301221309000
creator: Drevarr
modified: 20230705163520914
modifier: drevarr
tags: ChartData
title: 202303012213_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "B\u00efnkx", "Flanneryflame", "Demon Sekhmet", "Arduran Illl", "Jeckyll Mbs", "Oo Dads Mad", "Bella Sassy", "Kahless The Drunk", "Abigail Ryn", "Ark Darkness", "Skye Nightroad", "Etchery Howls", "Kiloak", "Sp\u00edcy Cheese", "Ezaff", "Lord Erin The Wise", "Jupi Jupi Jupi", "Smol Daddy Tika", "Arriasa", "Whose Guardian", "Fribble Bibble", "Panther B Me", "Black Raspberry Pie", "Sygaldry Verdandi", "Xanvias Tseli", "Zadie Miststep", "Tegan Parker", "Drevarr Moonwillow", "Tribal S", "Legacy Of Mathus", "What Charr U Saying", "Smol Gluvs", "Gavann", "Be\u00eb", "Mac Aaroni", "Raziel Umbra", "Newtype Khan", "Sakura Shanks", "Grasszanine", "Ravioli Fetabringer", "Koralia Danai", "Demon Sekhmet", "Ace Hammers", "Mike The Archmagus", "Arcanophage Farra", "Eibh\u00ebar", "Mistwalker Caelon", "Ryvalia Fazebringer", "Xyntharos"];
const professions = ["Firebrand", "Chronomancer", "Tempest", "Berserker", "Weaver", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Druid", "Firebrand", "Berserker", "Tempest", "Weaver", "Dragonhunter", "Berserker", "Druid", "Dragonhunter", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Berserker", "Tempest", "Tempest", "Scrapper", "Druid", "Berserker", "Berserker", "Scourge", "Firebrand", "Scourge", "Tempest", "Chronomancer", "Spellbreaker", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator", "Weaver", "Spellbreaker", "Chronomancer", "Vindicator", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 25, 5, 0, 5, 0, 0, 1, 0, 3, 4, 13, 0, 6, 0, 0, 8, 0, 8, 0, 0, 0, 0, 2, 7, 1, 0, 1, 0, 4, 2, 0, 0, 14, 2, 0, 3, 0, 2, 4], [15, 11, 43, 6, 42, 6, 8], [2, 0, 7, 13, 0, 13, 13, 2, 17, 16, 5, 52], [20, 59, 16, 0, 5, 16, 15, 11], [3, 1, 15, 2, 42, 48, 2, 17, 3, 9, 1, 0, 0, 5], [11, 0, 12, 3, 14, 0, 0, 1, 0, 2, 0, 2, 13, 4, 10, 4, 7, 6, 3, 1, 0, 29, 14, 23], [11, 35, 15, 0, 3, 2, 4, 29, 0, 20, 6, 17, 0, 20, 0, 0, 2], [0, 24, 15, 0, 15, 10, 5, 5, 0, 3, 9, 8, 4, 0, 0, 10, 0, 0, 7, 0, 0, 0, 7, 0, 0, 7, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 7, 12, 1, 0, 0, 0, 12], [2, 7, 28, 0, 3, 0, 2, 3, 0, 4, 1, 3, 0, 0, 0, 8, 0, 0, 0, 0, 2, 0, 7, 0, 0, 11, 0, 16, 0, 0, 0, 0, 0, 0, 11, 4, 0, 0, 5, 16, 7, 18, 1, 7], [15, 16, 1, 0, 36, 0, 10, 8, 0, 12, 22, 11, 0, 0, 0, 29, 1, 0, 2, 0, 3, 0, 1], [4, 0, 12, 6, 17, 0, 5, 1, 13, 3, 0, 23, 0, 0, 2, 1, 8, 0, 0, 0, 29, 0, 4, 12, 7, 9, 11], [1, 10, 15, 0, 7, 17, 14, 1, 0, 13, 6, 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0, 0, 3, 0, 0, 5, 4, 0, 18, 7, 3, 2, 11, 0, 6, 1, 0, 18, 4, 0, 6], [28, 12, 5, 0, 20, 8, 7, 2, 0, 13, 0, 8, 0, 0, 0, 18, 0, 2, 0, 6, 0, 0, 12, 0, 8, 16, 6, 7, 2], [2, 23, 31, 20, 1, 0, 9, 3, 3, 0, 0, 22, 0, 0, 7, 0, 1, 0, 17, 0, 0, 4, 0, 0, 7, 6, 13, 5, 9], [4, 10, 0, 0, 0, 16, 0, 0, 4, 0, 0, 1, 6, 0, 0, 19, 0, 5, 10, 3, 11, 0, 0, 34, 3, 12, 0, 6, 10, 1, 19, 7, 0, 4], [1, 23, 8, 0, 11, 24, 6, 1, 0, 0, 1, 8, 0, 15, 0, 1, 12, 0, 9, 7, 24, 0, 0, 2, 0, 34, 0, 1, 0, 1, 0, 0, 2, 2, 11], [10, 6, 13, 0, 4, 5, 5, 16, 4, 13, 17, 6, 0, 0, 0, 18, 0, 0, 5, 1, 1, 4, 18, 1, 0, 1, 6, 19, 3, 16, 5, 1, 4, 0, 8, 3], [3, 2, 14, 0, 5, 9, 1, 4, 1, 10, 2, 25, 0, 0, 0, 8, 0, 0, 12, 0, 2, 0, 1, 0, 0, 7, 0, 9, 0, 6, 3, 4, 0, 23, 2, 5, 1, 12, 8, 12, 1, 9, 9, 7], [4, 9, 6, 0, 13, 5, 25, 8, 0, 18, 9, 5, 0, 0, 0, 18, 0, 0, 7, 0, 10, 0, 9, 0, 0, 10, 4, 2, 1, 0, 1, 6, 1, 19, 0, 2, 2, 9, 16], [27, 19, 14, 4, 0, 11, 5, 0, 8, 10, 18, 0, 0, 0, 6, 0, 0, 16, 0, 6, 0, 0, 0, 0, 11, 0, 5, 5, 20, 8, 0, 6, 21, 5], [4, 8, 0, 0, 3, 0, 10, 5, 0, 3, 7, 17, 0, 0, 0, 8, 0, 0, 2, 0, 7, 2, 25, 0, 0, 4, 0, 8, 3, 4, 0, 4, 10, 12, 11, 5, 0, 18, 19, 3, 12, 21, 14], [6, 18, 9, 0, 8, 18, 17, 0, 0, 5, 4, 21, 0, 0, 0, 32, 0, 0, 14, 0, 10, 0, 4, 0, 0, 2, 0, 9, 0, 0, 1, 1, 1, 8, 1, 23, 1, 13, 20, 4, 0], [10, 21, 23, 0, 18, 0, 13, 0, 0, 4, 10, 9, 0, 0, 0, 2, 0, 0, 13, 0, 0, 0, 11, 0, 0, 17, 0, 4, 37, 10, 3, 13, 2, 1, 0, 3, 2, 1, 13, 7, 13, 3, 6, 6], [18, 8, 3, 0, 14, 0, 1, 9, 0, 7, 9, 22, 0, 0, 0, 29, 0, 0, 0, 0, 5, 0, 25, 0, 0, 6, 0, 0, 0, 14, 11, 3, 12, 0, 14, 1, 0, 37, 9, 3, 0, 1, 4, 32], [17, 25, 30, 0, 9, 7, 28, 3, 1, 2, 4, 14, 0, 0, 21, 0, 0, 0, 0, 3, 0, 2, 7, 0, 17, 10, 8, 14, 5, 0, 9, 1, 4, 0, 4, 31, 18, 13, 6, 2, 5], [3, 23, 10, 0, 0, 6, 10, 10, 0, 2, 2, 12, 2, 0, 0, 20, 0, 0, 0, 0, 0, 1, 0, 0, 0, 10, 0, 28, 3, 18, 8, 16, 0, 6, 2, 19, 0, 14, 13, 10, 24, 33, 13, 4], [5, 15, 9, 0, 13, 13, 14, 0, 0, 3, 3, 10, 0, 0, 0, 16, 1, 4, 3, 0, 0, 0, 21, 0, 3, 0, 18, 9, 0, 0, 0, 0, 0, 0, 15, 0, 18, 33, 57, 31, 1, 0, 8], [4, 4, 18, 0, 34, 7, 17, 5, 0, 6, 3, 12, 0, 0, 39, 0, 8, 3, 1, 8, 1, 1, 15, 5, 0, 6, 12, 6, 3, 16, 13, 0, 0, 6, 21, 19, 27, 1, 0, 4], [5, 17, 15, 0, 1, 7, 28, 12, 1, 3, 5, 7, 0, 0, 0, 8, 0, 0, 23, 0, 8, 1, 9, 0, 0, 13, 0, 2, 30, 5, 1, 1, 1, 15, 3, 5, 0, 14, 0, 17, 13, 22, 8, 28], [0, 37, 11, 0, 3, 1, 20, 2, 0, 4, 3, 7, 0, 0, 0, 30, 0, 8, 0, 3, 3, 20, 0, 0, 11, 0, 5, 1, 5, 7, 0, 1, 12, 1, 5, 0, 19, 15, 25, 22, 10, 29, 14], [23, 28, 23, 0, 10, 2, 9, 8, 0, 5, 1, 12, 0, 0, 0, 17, 0, 1, 1, 1, 6, 3, 12, 13, 0, 15, 7, 16, 10, 2, 5, 0, 3, 3, 0, 24, 13, 14, 16, 16, 11, 9], [17, 22, 29, 0, 7, 2, 3, 0, 0, 0, 9, 0, 0, 27, 0, 2, 4, 11, 0, 15, 0, 15, 19, 10, 1, 4, 1, 14, 8, 16, 0, 20, 2, 28, 30, 0, 12, 23], [4, 21, 8, 0, 1, 12, 4, 7, 1, 7, 22, 33, 0, 0, 1, 3, 0, 5, 0, 13, 3, 11, 0, 0, 24, 0, 3, 23, 5, 4, 4, 15, 11, 11, 6, 0, 33, 13, 19, 8, 0, 6, 12], [36, 32, 2, 13, 0, 10, 3, 0, 8, 8, 11, 0, 0, 0, 33, 0, 0, 6, 0, 9, 0, 10, 0, 0, 11, 0, 7, 1, 18, 0, 12, 12, 14, 3, 2, 1, 9, 23, 3, 32, 6, 12, 10], [6, 43, 10, 0, 12, 3, 16, 18, 0, 18, 5, 13, 0, 0, 0, 8, 0, 0, 0, 0, 4, 1, 20, 0, 0, 6, 0, 10, 4, 38, 2, 7, 3, 19, 16, 5, 0, 10, 34, 1, 16, 0, 14, 9], [26, 5, 0, 2, 4, 9, 10, 0, 6, 4, 10, 0, 0, 0, 21, 0, 0, 3, 1, 0, 20, 0, 0, 17, 0, 18, 31, 23, 36, 2, 3, 3, 15, 3, 0, 19, 6, 6, 48, 2, 3, 25], [41, 4, 0, 4, 15, 23, 0, 1, 2, 38, 0, 0, 13, 0, 2, 0, 15, 0, 23, 21, 9, 14, 0, 10, 8, 20, 6, 0, 2, 22, 35, 14, 3, 5, 9, 26], [28, 30, 1, 0, 4, 18, 3, 24, 2, 16, 14, 22, 0, 0, 0, 7, 0, 0, 0, 0, 3, 1, 14, 0, 0, 17, 0, 29, 12, 0, 24, 12, 19, 0, 2, 23, 0, 8, 11, 0, 2, 21, 17, 11], [49, 1, 27, 2, 15, 17, 22, 1, 41, 14, 28, 1, 46, 20, 0, 28, 31, 4, 55], [15, 0, 15, 7, 31, 14, 25, 0, 2, 13, 23, 1, 15, 63, 51, 94, 15, 5, 52], [14, 46, 16, 1, 16, 18, 15, 9, 0, 4, 8, 18, 0, 0, 0, 12, 0, 1, 7, 0, 2, 1, 14, 1, 0, 7, 0, 18, 10, 27, 10, 19, 1, 33, 5, 5, 1, 25, 22, 15, 10, 20, 16, 6], [14, 52, 15, 0, 10, 18, 10, 3, 0, 7, 19, 12, 0, 0, 13, 0, 0, 7, 0, 1, 0, 31, 0, 0, 13, 0, 3, 10, 18, 15, 7, 9, 0, 13, 9, 0, 13, 43, 9, 16, 32, 4, 31], [32, 0, 4, 23, 13, 0, 0, 0, 7, 0, 0, 9, 11, 7, 0, 20, 0, 56, 5, 11, 13, 6, 13, 1, 18, 7, 1, 25, 41, 43, 13, 29, 23, 44], [14, 0, 11, 1, 8, 20, 7, 34, 2, 10, 13, 4, 0, 3, 9, 7, 0, 22, 0, 12, 0, 4, 1, 2, 19, 0, 10, 7, 42, 11, 4, 2, 11, 26, 55, 0, 16, 43, 7, 22, 40, 32, 58], [18, 19, 28, 1, 35, 20, 33, 1, 14, 16, 7, 0, 2, 0, 8, 0, 0, 10, 11, 4, 13, 22, 0, 0, 30, 8, 11, 22, 11, 14, 26, 33, 32, 23, 1, 24, 31, 13, 29, 3, 5, 14], [8, 64, 25, 0, 7, 9, 4, 29, 0, 6, 11, 14, 0, 0, 0, 46, 1, 0, 25, 0, 13, 1, 4, 1, 0, 24, 0, 47, 19, 1, 4, 0, 12, 27, 72, 0, 29, 10, 9, 62, 0, 16, 26], [44, 15, 47, 2, 25, 34, 13, 4, 0, 19, 10, 19, 0, 2, 0, 57, 8, 0, 35, 0, 8, 1, 16, 0, 21, 0, 3, 7, 4, 23, 7, 1, 16, 4, 26, 0, 22, 27, 20, 22, 18, 24, 34], [30, 38, 37, 2, 8, 6, 22, 38, 9, 13, 15, 37, 1, 0, 2, 24, 10, 0, 24, 4, 1, 4, 11, 1, 0, 49, 4, 15, 22, 38, 12, 4, 15, 22, 13, 23, 0, 14, 25, 0, 50, 16, 15], [8, 44, 13, 2, 38, 20, 39, 31, 0, 8, 13, 29, 0, 0, 0, 34, 5, 0, 21, 0, 11, 2, 33, 0, 0, 9, 0, 28, 32, 23, 2, 9, 5, 28, 17, 34, 0, 16, 33, 46, 37, 1, 10, 46], [10, 31, 37, 0, 2, 31, 17, 7, 2, 27, 24, 57, 1, 0, 0, 17, 8, 0, 9, 0, 13, 1, 51, 1, 41, 0, 29, 5, 29, 12, 35, 25, 52, 31, 27, 1, 45, 34, 15, 62, 22, 35, 60]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

