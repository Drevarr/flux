created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Forever Dreaming", "Meryndah", "Crabbedmermaid", "Newtype Khan", "Surethang Blind", "Kisumaiassu", "Govinda Ektar", "Revitiel", "Palm Sauce", "Liza Hexx", "Hawaiian Supreme", "A\u00fcrora Windrunner", "Jerryatric Reflexes", "Aloe Pen", "Brace Stonebrow", "Squishy Jellyfish", "Raghnaid", "Roderik Manloy", "Dragon Deezz", "Unbreakable Nemesis", "Gestern Yesteryear"];
const professions = ["Harbinger", "Druid", "Dragonhunter", "Spellbreaker", "Vindicator", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Scourge", "Berserker", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Renegade", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5912, 0.0, 0.0, 1.1914, 0.0, 1.1867, 1.1707, 0.8085, 1.1817, 1.3371, 1.6228, 0.0, 0.0, 1.3178], [0.6793, 0.8748, 1.862, 0.0, 2.4752, 0.0, 0.0, 0.9872, 0.8228, 0.8184, 1.0771, 1.0897, 1.0181, 0.8265, 0.9246], [0.0, 0.0, 0.5011, 0.5029, 0.0, 0.3528, 0.2948, 0.6324, 0.5007, 0.4942, 0.0, 0.2332, 0.0, 0.3947, 0.4984, 0.0, 0.0, 0.0, 0.5148, 0.9576, 0.0, 0.4032, 1.5157, 0.4795, 0.4968, 1.078, 0.0, 0.442, 0.2503, 0.0, 0.2042, 0.0, 0.491, 0.7961, 0.0, 0.5095, 0.0, 0.4637, 0.0, 0.3315, 0.5318], [0.0, 1.6166, 1.9232, 2.8098, 0.0703, 1.3817, 1.4343, 1.0567, 0.0, 1.7646, 0.0, 1.8299, 0.4393], [0.0, 0.0, 0.3315, 0.0, 0.0, 0.0632, 4.3292, 1.4244, 0.0538, 0.253, 1.8645, 0.0, 0.0, 0.0, 0.429, 1.596, 0.0, 0.887, 0.141, 0.0, 0.0, 4.655, 0.0, 2.9172], [3.8167, 7.2193, 1.8843, 2.2012, 4.6726, 4.7385], [12.6034, 3.3718, 4.6749, 3.3997, 1.7017, 0.0, 0.0, 0.0], [0.2438, 0.9508, 1.5079, 0.2031, 0.0, 0.7661, 0.0, 0.2002, 1.9152, 0.0, 2.961, 0.3996, 0.9504, 7.987, 1.3712, 8.0444, 0.0], [0.0, 0.378, 3.962, 1.052, 1.9625, 1.8189, 0.3791, 1.4651, 2.68, 6.0175, 1.5455, 2.1518, 2.7448, 2.2871, 3.9874, 0.0, 0.0, 0.0, 1.2298], [0.0, 0.6148, 1.2917, 0.5667, 1.1999, 0.0, 0.5198, 0.0, 2.002, 0.9257, 1.395, 0.7258, 2.2912, 1.2388, 0.9396, 2.401, 1.7181, 3.8012, 0.5005, 0.0, 1.2935, 0.7647, 0.6956, 3.0439, 2.1441, 0.8545, 2.0663, 0.283, 0.0, 0.5989, 0.4838, 0.5039, 0.2774], [1.0224, 3.3279, 3.5175, 1.5844, 0.5936, 1.0046, 0.0, 0.9968, 0.0, 1.7237, 0.0, 0.9152, 0.6703, 0.0, 1.833, 1.8382, 0.9936, 3.528, 1.0738, 3.3592, 1.1082, 1.3009, 2.1105, 0.0, 0.0, 2.0137, 3.4095, 1.0544, 2.1879, 1.4341, 0.0, 0.0, 1.2518, 1.1138, 1.2485], [2.3953, 0.0, 5.2762, 0.0, 1.2276, 12.1758, 9.2796, 4.145, 7.6333, 1.6794, 0.0515, 2.2118, 4.9858, 6.751], [4.6922, 4.3155, 3.5078, 6.6623, 2.9171, 1.1772, 2.205, 0.0, 12.818, 0.8223, 0.0, 4.1188, 0.7647, 5.4424, 4.2615, 5.7295, 3.4178], [1.9228, 4.7996, 0.0, 1.2038, 0.0, 1.0868, 1.7237, 1.998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.89, 5.3625, 1.0514, 4.4592, 0.0, 6.9564, 1.92, 6.0107, 1.0181, 1.6531, 2.5474, 0.5335, 0.1803, 0.6758, 1.989, 1.8958], [0.0, 7.6108, 1.9132, 5.7018, 0.7056, 2.794, 2.1607, 7.3036, 10.4652, 0.0389, 4.0598, 6.584, 4.1492, 6.9963, 0.0, 1.1218, 0.0, 8.6086], [6.0099, 3.0866, 6.5718, 0.0, 3.1464, 0.0, 7.436, 8.363, 1.422, 8.064, 13.677, 7.6324, 3.5748, 14.455, 4.5595], [3.4074, 7.693, 15.4539, 18.6647, 10.8716, 10.6964, 6.7743, 3.3166, 2.8032, 6.4974, 2.2889], [0.126, 2.3647, 0.7687, 2.3603, 2.0619, 0.4001, 1.8867, 2.0909, 5.9303, 0.0, 1.0388, 4.4491, 3.9266, 2.9536, 0.0, 1.5912, 0.4004, 7.4374, 0.0, 2.3587, 5.781, 0.0, 1.2744, 4.41, 1.5364, 11.2268, 6.6495, 0.0, 6.0591, 0.0, 6.0971, 5.3855], [3.8837, 0.0, 4.8546, 2.6761, 4.0576, 2.791, 3.3626, 2.6245, 8.5994, 8.2849, 0.0, 2.3744, 3.2485, 4.5227, 2.0312, 2.0794, 0.0, 5.1194, 7.3735, 0.5805, 3.7699, 6.627, 4.1958, 0.0, 8.82, 1.8998, 10.5196, 3.4678, 0.0, 5.5826, 1.3939, 1.8414, 8.1484], [0.4576, 1.3136, 5.6376, 2.3351, 3.2354, 3.1909, 0.0, 3.6995, 11.6033, 7.8489, 0.0, 2.703, 1.9734, 5.7411, 0.0, 5.4446, 0.0, 8.723, 10.4698, 2.0385, 7.0358, 12.7957, 8.991, 13.034, 2.2137, 12.7296], [5.9706, 0.0, 6.8591, 5.2598, 3.6332, 1.0584, 3.847, 3.7417, 12.3985, 8.6047, 0.0, 3.4556, 4.7182, 5.4648, 7.2917, 0.2125, 3.6662, 0.1958, 10.6392, 3.9581, 4.788, 6.552, 8.0017, 5.7542, 2.3544, 10.143, 4.5926, 14.7628, 3.8968, 0.2138, 5.7187, 2.391, 4.1738, 13.6275, 13.3921, 7.2902, 9.5052, 7.3216, 4.4114, 4.4237, 3.8056, 2.2426]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

