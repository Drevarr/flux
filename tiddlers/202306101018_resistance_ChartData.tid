created: 20230610101822000
creator: Drevarr
modified: 20230705163534693
modifier: drevarr
tags: ChartData
title: 202306101018_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Grootyoda", "Charr Surethang", "Gamora Titus", "Hit The Gas", "Ryvalia Fazebringer", "Gestern Yesteryear", "Aronorf Xideliesi"];
const professions = ["Berserker", "Berserker", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.1555, 1.2376, 27.9286, 0.0, 27.888, 16.1976, 0.0, 87.096, 19.8314, 5.9942], [0.0, 0.0, 0.0, 0.0, 46.4584, 9.8925, 0.0, 12.9484, 0.0, 0.0, 0.0, 15.0611, 9.2165, 7.5491, 15.8497, 8.0376, 0.0, 100.0172, 19.0102, 0.0, 0.0, 0.0], [20.5854, 4.6904, 5.1691, 16.9917, 4.3875, 22.5898, 35.9512, 16.7688, 6.504, 29.6496, 11.3223, 9.7129, 12.9366, 13.615, 46.3319, 25.7615], [139.6114, 75.5412, 19.3088, 66.1257], [2.2721, 5.9796, 1.9906, 19.2991, 5.6511, 15.1403, 16.3748, 11.0906, 16.752, 11.7072, 16.852, 17.3264, 20.7698, 5.1205, 29.8931, 27.0514, 22.593, 7.4591, 60.3656, 32.1657, 15.0259, 25.2054, 10.9486], [13.7569, 18.5988, 0.0, 15.6024, 15.9572, 33.1976, 21.1572, 40.0327, 14.3186, 35.088, 21.4128, 30.3424, 21.7574, 21.6434, 16.4521, 17.5241, 0.0, 21.7362, 18.2493, 84.7754, 22.4196, 0.0, 36.0981, 26.0786], [38.2028, 81.0852, 115.8456, 30.5595, 102.312, 31.4784, 66.0942, 64.079, 53.2969, 36.4656, 159.9352, 14.0834, 38.1072, 31.4783, 168.7485, 57.5305, 0.0, 108.3114, 66.7554]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

