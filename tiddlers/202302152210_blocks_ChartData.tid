created: 20230215221053000
creator: Drevarr
modified: 20230705163519293
modifier: drevarr
tags: ChartData
title: 202302152210_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Daring Deathblade", "Dark Sidiuz", "Cat Wigglebooty", "Tootsie Pop Bringer", "Skye Nightroad", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Zaylen Harker", "Ace Hammers", "Abigail Ryn", "Kosair", "Legacy Of Mathus", "Etchery Howls", "Rina Of Theros", "Kosair", "Fribble Bibble", "Husky Guard", "Arka\u00f1", "Newtype Khan", "Grasszanine", "Black Raspberry Pie", "Mac Chiato", "Kira Dragonblaze", "Xyntharos", "Rozaalyna", "Smol Daddy Tika", "Be\u00eb", "Oo Dads Mad", "Blanco Padre Guard", "Tribal S", "Smol Gluvs", "Sister Elon\u00edth", "Domina Flagbringer", "Raziel Umbra", "Xanvias Tseli", "Zadie Miststep", "Ark Darkness", "Sygaldry Verdandi", "Drevarr Moonwillow", "Ravioli Fetabringer", "Jeckyll Mbs", "Primal Clone", "Bella Sassy", "Sassy Daddy Demon", "Bambiae", "Johosh The Great", "Ryvalia Fazebringer", "Tegan Parker", "\u00c9\u00efbhear"];
const professions = ["Firebrand", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Berserker", "Weaver", "Firebrand", "Vindicator", "Tempest", "Firebrand", "Berserker", "Druid", "Scourge", "Dragonhunter", "Scrapper", "Dragonhunter", "Chronomancer", "Spellbreaker", "Spellbreaker", "Chronomancer", "Tempest", "Dragonhunter", "Vindicator", "Scourge", "Berserker", "Scourge", "Spellbreaker", "Firebrand", "Druid", "Scourge", "Firebrand", "Spellbreaker", "Chronomancer", "Berserker", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48, 64, 2, 8], [3, 1, 8, 10, 0, 15, 15, 0, 18, 0, 3, 11, 5, 22, 0, 3, 2, 9], [7, 20, 4, 19, 8, 7, 3, 0, 0, 0, 0, 0, 0, 19, 15, 0, 1, 3, 3, 9, 2, 7, 0, 1], [53, 66, 0, 4, 3, 4], [56, 63, 0, 5, 2, 2, 3], [32, 1, 1, 8, 4, 6, 5, 10, 3, 5, 0, 12, 11, 1, 14, 1, 1, 6, 3, 12, 4, 1, 3], [0, 0, 9, 3, 4, 4, 9, 1, 12, 5, 0, 17, 14, 1, 22, 1, 1, 8, 9, 14, 0, 8, 1, 9], [15, 12, 2, 7, 18, 11, 1, 12, 1, 8, 6, 1, 1, 14, 0, 26, 0, 4, 0, 4, 10], [57, 91, 1, 6], [4, 45, 1, 8, 5, 6, 1, 4, 0, 6, 3, 0, 8, 6, 23, 3, 1, 10, 4, 6, 7, 1, 4], [10, 11, 8, 11, 20, 11, 0, 14, 21, 0, 13, 3, 3, 11, 7, 9, 2, 0, 3], [26, 7, 0, 21, 14, 0, 16, 2, 2, 8, 7, 26, 1, 11, 0, 16], [29, 50, 3, 9, 3, 2, 1, 9, 0, 1, 2, 0, 9, 8, 6, 1, 2, 11, 2, 11, 0, 4, 0, 2], [35, 43, 1, 2, 1, 4, 3, 4, 0, 11, 5, 0, 5, 9, 0, 13, 0, 1, 4, 4, 9, 12, 0, 1], [8, 24, 0, 11, 10, 9, 6, 8, 0, 15, 7, 0, 16, 12, 0, 9, 1, 3, 4, 1, 17, 1, 4, 0, 6], [77, 80, 4, 15], [8, 0, 11, 9, 9, 9, 13, 0, 23, 9, 0, 15, 11, 14, 2, 1, 8, 10, 8, 4, 12], [14, 9, 11, 10, 2, 48, 6, 0, 10, 9, 15, 1, 4, 9, 20, 8, 6, 2], [99, 81, 0, 6], [28, 53, 0, 4, 6, 7, 3, 4, 6, 2, 0, 8, 5, 0, 17, 2, 3, 10, 9, 13, 1, 6, 2, 3], [33, 56, 1, 6, 2, 8, 2, 5, 0, 6, 2, 0, 8, 14, 14, 2, 1, 4, 5, 12, 1, 2, 0, 8], [18, 1, 10, 4, 3, 5, 3, 0, 36, 6, 0, 6, 27, 15, 1, 3, 3, 6, 31, 6, 7, 0, 6], [31, 67, 0, 8, 0, 3, 1, 10, 6, 9, 0, 12, 9, 18, 1, 1, 8, 8, 10], [102, 101, 1, 5], [56, 67, 2, 10, 5, 6, 4, 6, 1, 28, 4, 0, 5, 0, 10, 0, 6], [84, 117, 4, 12], [37, 55, 0, 10, 4, 4, 1, 4, 0, 11, 5, 0, 6, 8, 0, 23, 0, 4, 5, 5, 20, 8, 2, 8], [10, 2, 13, 15, 11, 6, 14, 1, 21, 8, 0, 21, 15, 17, 2, 1, 10, 6, 22, 8, 2, 16], [71, 131, 3, 22], [55, 60, 3, 8, 5, 6, 4, 6, 1, 4, 3, 0, 14, 10, 2, 7, 1, 2, 5, 5, 20, 1, 3, 5], [39, 50, 0, 8, 2, 3, 4, 4, 1, 10, 6, 0, 11, 6, 0, 26, 1, 4, 14, 6, 22, 1, 12, 1, 6], [44, 69, 2, 8, 5, 1, 4, 7, 1, 10, 9, 0, 2, 18, 12, 4, 1, 10, 5, 17, 0, 3, 2, 6], [4, 19, 15, 16, 4, 16, 1, 22, 4, 0, 15, 22, 27, 4, 3, 16, 9, 29, 0, 11, 1, 8], [58, 58, 2, 9, 8, 8, 4, 9, 1, 17, 3, 0, 10, 13, 16, 1, 0, 14, 6, 12, 1, 11, 3], [3, 9, 3, 7, 3, 12, 1, 38, 10, 0, 47, 14, 0, 17, 1, 2, 6, 4, 52, 14, 2, 0, 27], [54, 75, 3, 11, 8, 5, 4, 9, 0, 15, 4, 0, 16, 12, 20, 1, 0, 8, 6, 14, 0, 2, 0, 7], [70, 76, 2, 11, 9, 4, 6, 10, 1, 14, 7, 0, 19, 18, 0, 24, 2, 3, 12, 4, 12, 0, 4, 0, 6], [61, 69, 1, 6, 7, 11, 6, 7, 0, 22, 6, 0, 18, 19, 1, 20, 3, 2, 10, 11, 22, 9, 0, 6], [69, 98, 4, 11, 10, 8, 5, 9, 0, 16, 5, 0, 12, 12, 4, 25, 1, 4, 16, 9, 22, 1, 10, 7], [82, 105, 1, 11, 7, 11, 5, 8, 1, 26, 8, 0, 21, 18, 1, 22, 2, 3, 10, 7, 21, 2, 11, 11], [76, 112, 4, 11, 7, 19, 4, 8, 0, 28, 10, 2, 17, 16, 0, 23, 4, 4, 3, 4, 26, 1, 7, 12], [95, 139, 3, 12, 18, 17, 6, 13, 0, 23, 9, 0, 29, 21, 28, 21, 0, 11, 11], [81, 77, 1, 10, 4, 7, 2, 28, 0, 17, 8, 0, 94, 23, 1, 28, 3, 3, 9, 35, 36, 0, 5, 0, 1], [92, 127, 6, 20, 15, 8, 7, 15, 1, 24, 6, 22, 23, 23, 5, 4, 15, 4, 27, 16, 0, 15], [84, 138, 3, 17, 21, 16, 10, 14, 1, 20, 11, 0, 25, 16, 0, 35, 2, 7, 17, 9, 25, 2, 16, 0, 15], [95, 107, 2, 14, 9, 11, 5, 17, 1, 65, 9, 0, 16, 33, 0, 23, 3, 4, 19, 4, 41, 1, 13, 1, 15], [102, 132, 2, 17, 22, 15, 4, 16, 0, 30, 7, 1, 24, 18, 30, 3, 3, 14, 9, 34, 1, 16, 1, 13], [86, 122, 3, 15, 8, 7, 6, 16, 0, 32, 7, 0, 22, 28, 22, 4, 5, 15, 15, 69, 1, 19, 0, 23], [97, 152, 4, 17, 20, 22, 5, 16, 21, 12, 1, 22, 18, 0, 33, 2, 4, 22, 5, 26, 4, 9, 13], [115, 141, 4, 18, 11, 12, 6, 14, 2, 29, 11, 1, 27, 21, 48, 9, 8, 22, 7, 111, 3, 38, 0, 40]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

