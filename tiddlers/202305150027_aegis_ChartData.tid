created: 20230515002743000
creator: Drevarr
modified: 20230705163529882
modifier: drevarr
tags: ChartData
title: 202305150027_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Drogo Discourteous", "Crusader Siolith", "Sub Train", "Ark Darkness", "Cuscuszera", "Gabe Malhorn", "Lucas Ryn", "Aronorf Xideliesi", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.1298, 48.4567, 86.6506, 87.3779, 1.0746, 86.8842, 4.8735], [88.2086, 130.8872, 102.1621, 13.6633, 17.2302, 13.7655], [3.875, 40.9126, 133.8694, 24.735, 10.4394, 64.0633, 20.349, 4.9318, 0.0, 51.1408, 3.0554, 9.5357], [80.0234, 10.709, 32.623, 44.5419, 21.6315, 0.0, 36.465, 88.334, 141.4059, 25.0219, 71.5167, 0.0], [76.7473, 178.2717, 120.0736, 7.4457, 53.3403, 33.5445, 38.45, 82.836], [50.4348, 100.6434, 179.7447, 177.8792, 42.9475, 103.805, 31.57], [12.1867, 305.3482, 109.7437, 75.6854, 83.4015, 46.911, 0.231, 57.1428, 13.4589, 52.6449, 111.1387, 27.5352, 111.5325, 4.4], [90.3053, 174.8214, 246.6975, 124.0539, 81.2121, 290.2555, 29.526, 0.6121, 16.0524, 83.5049, 139.4064, 114.2896, 28.0526, 107.2996, 38.962], [52.9589, 173.5157, 313.6322, 314.7312, 172.4797, 119.8782, 48.108, 25.3638, 8.2836, 177.684, 157.9347, 130.9031, 73.5134, 88.0546, 30.14], [169.7717, 324.544, 427.2887, 263.7449, 168.2579, 197.3225, 79.686, 5.544, 47.8764, 114.1023, 180.0866, 291.023, 93.3979, 153.2711, 142.362]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

