created: 20230208220141000
creator: Drevarr
modified: 20230705163518860
modifier: drevarr
tags: ChartData
title: 202302082201_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "K\u00e2 \u00d4tik R\u00e6j", "Veron Blackburn", "Arcanophage Farra", "Newtype Khan", "Rina Of Theros", "Kira Dragonblaze", "Ace Rages", "Nelliel T", "Legacy Of Mathus", "Smol Gluvs", "Jupi Jupi Jupi", "Fungus", "Panther B Me", "Daddys Lil Orchid", "Tootsie Pop Bringer", "Kosa\u00edr", "Skye Nightroad", "Lord Erin The Wise", "Smol Daddy Tika", "Sp\u00edcy Cheese", "Xyntharos", "Be\u00eb", "Demon Sekhmet", "Xanvias Einzbern", "Mistwalker Caelon"];
const professions = ["Scourge", "Berserker", "Herald", "Spellbreaker", "Spellbreaker", "Scourge", "Dragonhunter", "Berserker", "Scourge", "Berserker", "Scourge", "Dragonhunter", "Scourge", "Scourge", "Vindicator", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Berserker", "Berserker", "Vindicator", "Scourge", "Berserker", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[138266.0, 0.0, 4952.0, 0.0, 0.0, 17570.0], [47249.0, 15599.0, 20174.0, 86928.0], [124234.0, 2303.0, 25325.0, 5653.0, 0.0, 22098.0], [77668.0, 1469.0, 6422.0, 2647.0, 0.0, 6059.0, 0.0, 46377.0, 21869.0, 4038.0, 20427.0], [45425.0, 0.0, 18558.0, 0.0, 2432.0, 7694.0, 1099.0, 47019.0, 17185.0, 9962.0, 43294.0], [151879.0, 1350.0, 9468.0, 2524.0, 12662.0, 17245.0, 418.0], [178247.0, 0.0, 14607.0, 0.0, 4651.0], [88332.0, 0.0, 3789.0, 0.0, 8506.0, 0.0, 56470.0, 30060.0, 13287.0, 30578.0], [114202.0, 4520.0, 12095.0, 0.0, 0.0, 9752.0, 0.0, 63946.0, 18492.0, 7695.0, 11397.0], [244322.0, 0.0, 17699.0, 0.0], [123138.0, 1384.0, 4685.0, 127.0, 6778.0, 14714.0, 0.0, 51881.0, 8833.0, 25053.0, 41883.0], [271929.0, 0.0, 32435.0, 726.0, 1657.0, 35779.0], [145323.0, 0.0, 5680.0, 0.0, 1482.0, 18906.0, 0.0, 47083.0, 33442.0, 10933.0, 93847.0], [146808.0, 11154.0, 34678.0, 20902.0, 16551.0, 21260.0, 9662.0, 101218.0, 33540.0, 8041.0, 70211.0], [257397.0, 3909.0, 27291.0, 0.0, 746.0, 11084.0, 5476.0, 64999.0, 22330.0, 12823.0, 90272.0], [234140.0, 3980.0, 40703.0, 0.0, 0.0, 13477.0, 1653.0, 143992.0, 48291.0, 28499.0, 0.0], [415068.0, 0.0, 32638.0, 10388.0, 1606.0, 85020.0, 0.0], [116174.0, 0.0, 27231.0, 0.0, 0.0, 16654.0, 0.0, 183549.0, 68235.0, 44996.0, 110131.0], [249387.0, 0.0, 16191.0, 0.0, 0.0, 28930.0, 1616.0, 151828.0, 18287.0, 13542.0, 116667.0], [237782.0, 9679.0, 16278.0, 12728.0, 0.0, 21175.0, 4766.0, 183027.0, 37106.0, 35573.0, 98172.0], [236732.0, 2402.0, 11903.0, 4992.0, 5638.0, 21704.0, 2574.0, 256801.0, 66600.0, 57840.0, 124102.0], [312530.0, 11856.0, 9803.0, 5779.0, 0.0, 74679.0, 0.0, 200611.0, 72027.0, 18300.0, 120628.0], [360279.0, 2981.0, 44524.0, 834.0, 4525.0, 30183.0, 22302.0, 177585.0, 28555.0, 25202.0, 137615.0], [354099.0, 3029.0, 22179.0, 24685.0, 4138.0, 55750.0, 9636.0, 227993.0, 62712.0, 28202.0, 85399.0], [399491.0, 6630.0, 45052.0, 0.0, 7157.0, 99037.0, 0.0, 325994.0, 71795.0, 58837.0, 128433.0], [457201.0, 0.0, 52711.0, 20573.0, 30316.0, 65922.0, 5148.0, 230492.0, 78246.0, 59776.0, 211097.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

