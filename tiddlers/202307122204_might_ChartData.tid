created: 20230712220412000
creator: Drevarr
tags: ChartData
title: 202307122204_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Klengah", "Black Raspberry Pie", "Tuandha Lan", "Tika Fiery", "Gestern Yesteryear", "Rina Of Theros", "Mike The Archmagus", "Legacy Of Mathus", "Be\u00eb", "Koralia Danai", "Sister Elon\u00edth", "Xanvias Einzbern", "Tegan Parker", "Rozaalyna", "Primal Clone", "Lord Of Bones", "Eibh\u00ebar", "Il Dim Il", "Zaedy Zae", "Arriasa", "Sygaldry Verdandi", "Sub Train", "Venomina The Siren", "Tribal S", "Solus Sanctus", "Drevarr Moonwillow", "Crusader Siolith", "Artakama Nahid", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Scrapper", "Druid", "Chronomancer", "Herald", "Firebrand", "Firebrand", "Scourge", "Weaver", "Berserker", "Scourge", "Firebrand", "Firebrand", "Berserker", "Tempest", "Scourge", "Chronomancer", "Scourge", "Chronomancer", "Scourge", "Druid", "Druid", "Firebrand", "Firebrand", "Tempest", "Druid", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0768, 1.332, 1.881, 15.4734, 3.5178, 0.8782, 4.4208, 4.1757, 2.7562, 1.5655, 5.9598, 7.755, 0.0, 1.3814, 0.9954, 0.5016, 0.0, 1.7062, 8.8236, 4.6913, 0.0, 6.9386, 10.465], [4.7595, 1.4652, 4.7196, 15.3688, 0.0, 0.0, 3.234, 3.3192, 7.2987, 5.5912, 5.418, 7.191, 0.0, 0.0, 9.9185, 1.7054, 0.0, 2.8621, 6.0952, 6.9431, 0.0, 4.3757, 7.084], [0.0, 0.0, 4.5372, 1.2546, 1.353, 0.0, 1.6615, 7.3521, 7.1456, 8.4987, 8.514, 3.0667, 0.0, 4.2279, 2.3819, 0.0, 0.0, 2.2291, 12.2485, 6.255, 3.8874, 13.2521, 10.787], [7.5317, 5.1194, 6.023, 8.6727, 13.8829, 9.4572, 9.4428, 3.6307, 1.3156, 5.1069, 3.9816, 0.7691, 1.1232, 2.2016, 3.1927, 15.1371, 1.2791, 2.7504, 4.991], [11.2324, 13.3733, 1.2084, 8.8868, 11.3652, 3.4915, 4.2428, 5.4963, 5.104, 6.358, 8.2818, 4.5473, 1.2012, 3.9348, 0.8177, 1.5717, 6.16, 0.6054, 6.3275, 7.6936, 0.0, 7.7512, 4.186], [0.0, 9.168, 3.105, 7.4518, 8.6265, 14.1642, 9.87, 5.7486, 14.3998, 10.3806, 2.4411, 0.4914, 9.1917, 11.61, 7.3809, 3.8372, 6.8761, 6.5205], [8.5671, 2.2378, 0.9804, 19.5509, 6.4493, 6.169, 2.6703, 6.567, 7.2987, 4.3772, 14.3964, 8.2837, 2.5168, 7.7022, 2.8085, 3.3273, 1.8252, 0.0, 10.8211, 5.2919, 12.377, 4.5885], [14.5958, 1.3853, 1.5732, 5.7503, 5.9081, 1.328, 7.1208, 8.3871, 8.2174, 0.4473, 13.3128, 6.204, 3.8324, 4.8976, 7.0033, 1.6386, 3.4223, 4.3206, 7.9529, 7.3809, 1.7054, 12.0644, 10.626], [10.7247, 3.6497, 2.394, 15.9962, 9.0651, 2.8274, 7.7439, 2.3555, 2.679, 15.9302, 6.279, 3.0217, 2.9427, 3.4924, 5.2288, 14.0481, 11.259, 2.3575, 8.6889, 9.9015], [11.169, 3.703, 1.5276, 26.7648, 9.7867, 5.0765, 9.2274, 9.4935, 8.6258, 7.8277, 21.1302, 10.6455, 0.0, 0.0, 0.2489, 0.0, 0.0, 0.633, 6.966, 5.0666, 0.0, 5.1883, 9.982], [20.1803, 10.283, 1.7898, 13.0688, 8.2533, 2.7632, 4.4802, 5.9602, 0.5104, 9.5531, 8.8236, 3.9128, 4.3758, 16.6603, 4.7281, 2.4746, 0.3334, 2.9446, 9.346, 16.826, 0.0, 7.8138, 8.211], [0.9425, 6.6164, 15.2039, 5.6144, 12.9717, 8.4366, 17.484, 9.009, 8.7906, 16.6019, 3.4109, 2.8255, 6.1094, 14.8608, 12.9478, 0.0, 12.377, 11.6725], [16.8804, 3.2501, 1.3908, 24.4647, 5.5022, 1.5208, 7.8329, 6.2101, 8.881, 3.9618, 13.3128, 9.0945, 3.4606, 2.8883, 5.0836, 1.2373, 2.9309, 3.3574, 10.2748, 6.1299, 2.6083, 15.3775, 12.4775], [30.9685, 25.974, 0.4218, 7.9458, 21.2421, 7.3164, 3.828, 0.0, 10.2942, 4.8645, 0.0, 0.0, 4.5504, 0.2675, 0.0, 7.4579, 33.9012, 3.8781, 0.0, 4.3132, 10.787], [9.7728, 2.394, 22.2691, 11.1848, 8.2467, 7.0911, 1.8559, 10.8715, 6.0066, 17.028, 12.408, 3.4606, 5.2744, 6.4701, 2.6585, 3.3872, 2.9997, 9.0558, 12.9478, 10.5017, 16.1805], [13.1362, 4.6087, 1.7442, 26.5557, 4.7806, 1.4994, 8.3669, 10.6713, 10.6163, 7.1888, 11.997, 8.4953, 4.29, 3.6837, 5.9013, 1.4881, 2.5272, 5.8342, 10.2168, 9.5701, 5.016, 13.6897, 16.261], [9.8363, 3.5165, 2.4396, 20.8054, 9.6063, 4.7338, 7.3582, 11.278, 13.0152, 5.6551, 14.0094, 14.5583, 1.9448, 6.1534, 4.6215, 2.5916, 1.9831, 3.4675, 10.7973, 10.8211, 3.2855, 12.0019, 18.4345], [9.7728, 1.6517, 1.8468, 21.0146, 10.5985, 3.0202, 8.4856, 13.0625, 8.7278, 6.2622, 14.6286, 10.2577, 3.1174, 5.7767, 4.3726, 2.8424, 4.6156, 6.3571, 11.8422, 14.1988, 5.5427, 10.4392, 15.456], [19.3418, 11.5456, 3.1059, 9.4944, 13.2767, 13.985, 11.1505, 18.0342, 10.6455, 1.6588, 6.4046, 3.9461, 2.7027, 3.495, 11.0295, 10.5709, 10.6339, 14.5648, 21.413], [21.7033, 12.3876, 2.8956, 25.4056, 4.5551, 1.5637, 3.145, 3.4976, 6.9414, 10.7033, 28.9476, 14.805, 0.0, 1.3814, 2.7373, 4.2803, 0.0, 9.2192, 12.0744, 6.8805, 1.7556, 7.6887, 16.583], [15.2304, 2.1578, 1.3452, 21.6418, 3.5178, 2.9345, 2.0176, 8.4585, 15.7203, 4.6647, 21.672, 7.755, 6.5208, 5.8185, 8.9586, 3.7787, 4.1593, 3.6051, 16.4281, 12.7602, 0.0, 11.6269, 19.481], [28.3666, 2.291, 3.6822, 22.5828, 10.9593, 0.664, 2.5813, 2.7124, 5.2571, 8.4348, 17.028, 8.178, 12.441, 17.3719, 10.345, 5.551, 2.1235, 12.6351, 5.6179, 12.0644, 15.617], [17.4515, 14.0393, 2.4168, 24.0465, 11.2299, 0.9211, 5.845, 4.7468, 9.5955, 8.4668, 28.0188, 5.6753, 0.0, 18.544, 13.3668, 6.9388, 6.2829, 9.2742, 8.3592, 15.1996, 0.0, 5.0633], [6.7957, 10.2828, 0.0, 4.1835, 2.3198, 0.3062, 0.0, 23.22, 13.8533, 25.025, 30.7252, 10.4162, 10.45, 6.5988, 0.0, 21.7107, 5.7546, 13.5181, 25.5666, 19.803], [34.5857, 7.1129, 6.4296, 37.4289, 6.7199, 3.8984, 5.3109, 10.2787, 9.6466, 10.2879, 25.2324, 10.011, 5.8058, 1.7581, 6.1146, 1.5382, 1.0004, 4.9811, 9.5783, 12.51, 1.8559, 8.6889, 18.7565], [34.7126, 5.1682, 6.4182, 22.2691, 14.3418, 0.3213, 3.8571, 6.0316, 5.8696, 15.5916, 31.1922, 13.1482, 3.0888, 28.2555, 16.8507, 3.8623, 8.0028, 7.2378, 11.8422, 7.5685, 1.8058, 25.3166, 24.2305], [33.4434, 8.3383, 8.8464, 49.9749, 5.1865, 3.9627, 13.3218, 12.5272, 11.9434, 8.1792, 27.3996, 12.8662, 11.0682, 13.6882, 11.4471, 4.3639, 7.1604, 13.9802, 27.5738, 19.4531, 4.8906, 28.7546, 24.3915], [32.1742, 13.693, 6.099, 26.6603, 13.5751, 7.2828, 10.5625, 4.7111, 13.8318, 13.6107, 25.929, 13.6418, 6.006, 18.4184, 14.7177, 9.8146, 6.8445, 10.4301, 24.1488, 24.0817, 3.3356, 32.5052, 31.717], [47.9123, 19.1009, 0.5472, 47.5703, 1.7589, 0.0, 9.9691, 23.0914, 18.8848, 31.0554, 35.5266, 4.3005, 10.5248, 26.7067, 34.6613, 0.0, 0.0, 31.9782, 23.8005, 29.5236, 0.0, 27.3169, 44.275], [70.7579, 27.0929, 16.872, 14.9506, 31.7053, 13.9444, 26.2876, 34.084, 37.055, 28.0521, 66.3318, 30.5265, 20.3632, 40.8972, 12.9757, 13.2422, 1.8778, 22.1811, 43.7117, 35.1531, 8.7529, 56.4465, 70.357], [82.498, 26.1871, 14.763, 86.3583, 24.8952, 13.2376, 23.3503, 36.9748, 24.9586, 15.4957, 77.3226, 31.0553, 28.9146, 30.7671, 33.3103, 17.4222, 17.5149, 21.383, 56.6568, 50.3527, 26.4092, 62.0099, 64.561]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

