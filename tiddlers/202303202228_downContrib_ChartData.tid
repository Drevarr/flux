created: 20230320222849000
creator: Drevarr
modified: 20230705163522642
modifier: drevarr
tags: ChartData
title: 202303202228_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Seren Nightroad", "Physis Windrunner", "Dark Sidiuz", "The X E N", "Mac Chiato", "Sheep Paws", "Rozaalyna", "Smol Gluvs", "Sister Elon\u00edth", "Tootsie Pop Rocks", "Cerys Fireblade", "Nazhul Naxxremis", "Whose Guardian", "Rina Of Theros", "Legacy Of Mathus", "Demon Sekhmet", "Lord Erin The Wise", "Smol Daddy Tika", "Be\u00eb", "Xyntharos", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Scourge", "Weaver", "Scourge", "Scrapper", "Weaver", "Berserker", "Scourge", "Scourge", "Dragonhunter", "Scrapper", "Berserker", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Weaver", "Berserker", "Scourge", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55336.0, 30321.0, 43776.0, 28269.0, 16491.0, 31070.0, 44500.0, 37094.0, 3024.0], [6737.0, 50361.0, 45882.0, 0.0, 7709.0, 0.0, 0.0, 82541.0, 86570.0, 3278.0, 36323.0, 20022.0], [0.0, 16195.0, 8888.0, 38293.0, 25868.0, 5517.0, 13076.0, 3956.0, 24969.0, 0.0, 27080.0, 84930.0, 0.0, 0.0, 31498.0, 27125.0, 8156.0, 19845.0, 6653.0, 7418.0], [45925.0, 12556.0, 62666.0, 27485.0, 138933.0, 10711.0, 45178.0, 0.0, 9069.0], [45286.0, 66338.0, 45824.0, 60257.0, 54796.0, 70822.0, 66589.0], [0.0, 139920.0, 194445.0, 4674.0, 53080.0, 30269.0, 43591.0, 3925.0, 34913.0, 19203.0], [1361.0, 23820.0, 17401.0, 27190.0, 43870.0, 31247.0, 24709.0, 131692.0, 6053.0, 8381.0, 11129.0, 40331.0, 86495.0, 5280.0, 14482.0, 5160.0, 68088.0, 3836.0, 75535.0, 20269.0], [20045.0, 38169.0, 37380.0, 27310.0, 45491.0, 62886.0, 83516.0, 19834.0, 16624.0, 8631.0, 640.0, 34615.0, 62317.0, 3288.0, 30929.0, 12976.0, 44084.0, 20035.0, 63369.0, 10530.0, 15134.0, 0.0, 4122.0, 8369.0], [22283.0, 43126.0, 15292.0, 6858.0, 84152.0, 120787.0, 7797.0, 12904.0, 67368.0, 49972.0, 38857.0, 119434.0, 45129.0, 23963.0, 8938.0, 14202.0, 25036.0], [17888.0, 25831.0, 28760.0, 48314.0, 23348.0, 48897.0, 209540.0, 6294.0, 20830.0, 2307.0, 0.0, 78879.0, 77770.0, 0.0, 41331.0, 19738.0, 31652.0, 21221.0, 65467.0, 2590.0, 0.0], [14971.0, 16562.0, 54624.0, 41707.0, 41407.0, 172240.0, 15138.0, 12690.0, 5826.0, 0.0, 48066.0, 118572.0, 0.0, 30720.0, 17419.0, 85516.0, 28141.0, 64493.0, 6557.0, 33333.0, 0.0, 4523.0, 14639.0], [44595.0, 66533.0, 42190.0, 37117.0, 62928.0, 47576.0, 64400.0, 24335.0, 6164.0, 0.0, 61888.0, 108555.0, 10246.0, 47151.0, 14277.0, 57809.0, 20599.0, 78042.0, 16964.0, 3775.0, 2473.0, 9155.0, 16131.0], [839.0, 15951.0, 19030.0, 45057.0, 35082.0, 58451.0, 67271.0, 226866.0, 4324.0, 23106.0, 3730.0, 0.0, 44082.0, 99279.0, 15076.0, 31289.0, 31831.0, 25814.0, 6783.0, 51220.0, 0.0, 13171.0, 654.0, 28440.0, 5849.0], [29058.0, 46569.0, 32422.0, 35280.0, 42066.0, 26328.0, 47822.0, 145350.0, 18985.0, 13831.0, 9968.0, 0.0, 49107.0, 108183.0, 3892.0, 55097.0, 12631.0, 43438.0, 2901.0, 85752.0, 11029.0, 14848.0, 0.0, 10743.0, 23590.0], [40979.0, 103799.0, 110215.0, 32465.0, 53005.0, 88258.0, 88324.0, 186268.0, 26525.0, 1621.0, 159526.0, 10929.0, 30530.0, 0.0, 9008.0, 28370.0], [0.0, 112311.0, 260488.0, 2452.0, 93930.0, 45715.0, 64437.0, 57540.0, 178044.0, 59625.0, 51516.0, 221.0, 52057.0], [86345.0, 31290.0, 104057.0, 37242.0, 24113.0, 37356.0, 27774.0, 185079.0, 28125.0, 21566.0, 28738.0, 0.0, 92431.0, 143042.0, 5717.0, 19409.0, 47366.0, 46471.0, 9251.0, 93885.0, 11519.0], [93328.0, 19706.0, 68175.0, 43598.0, 26617.0, 9251.0, 76653.0, 203574.0, 23669.0, 12568.0, 6423.0, 0.0, 58466.0, 184163.0, 0.0, 16488.0, 19823.0, 93851.0, 5112.0, 178354.0, 10928.0, 0.0, 2547.0, 0.0, 12858.0], [76589.0, 39501.0, 58854.0, 54761.0, 108036.0, 96805.0, 246954.0, 14121.0, 16030.0, 12046.0, 4437.0, 88391.0, 140320.0, 2368.0, 51207.0, 20699.0, 63698.0, 10016.0, 35435.0, 10750.0, 8071.0, 0.0, 13418.0, 15912.0], [80550.0, 61022.0, 81986.0, 66884.0, 60956.0, 60741.0, 88012.0, 195184.0, 41388.0, 8210.0, 0.0, 103128.0, 149618.0, 0.0, 40068.0, 57978.0, 50354.0, 18512.0, 139326.0, 82463.0, 26589.0, 0.0, 4918.0, 15147.0], [138132.0, 73801.0, 97703.0, 62974.0, 53021.0, 55503.0, 80183.0, 373712.0, 31735.0, 21562.0, 10242.0, 0.0, 100726.0, 242660.0, 0.0, 59310.0, 78232.0, 73748.0, 37151.0, 217654.0, 36816.0, 17893.0, 0.0, 11981.0, 32222.0], [105136.0, 90149.0, 113589.0, 125668.0, 121144.0, 164275.0, 73398.0, 439919.0, 61603.0, 13770.0, 17870.0, 0.0, 121243.0, 327355.0, 0.0, 233618.0, 18276.0, 91749.0, 65721.0, 234778.0, 39718.0, 26385.0, 10485.0, 14919.0, 51792.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

