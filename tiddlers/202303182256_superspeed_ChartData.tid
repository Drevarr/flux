created: 20230318225613000
creator: Drevarr
modified: 20230705163522585
modifier: drevarr
tags: ChartData
title: 202303182256_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Tootsie Pop Rocks", "Demon Sekhmet", "Flower Redrose", "Tegan Parker", "High Sorcer Baradun", "Xanvias Tseli", "Zadie Miststep", "Venomina The Fierce", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scrapper", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Berserker", "Tempest", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0.409, 0, 0, 0, 0.597, 0.897, 0, 0.614, 0, 0, 0, 0.46, 0], [0.162, 0.219, 0, 0.842, 0.41, 0.367, 0, 0, 0, 0.247, 0.537, 0.768, 0.705, 1.453, 0, 0.412, 0], [0, 0.577, 0.823, 1.182, 0.696, 0.63, 0, 0, 1.028, 0.508, 0, 0, 0, 0, 0], [0, 0.099, 0.247, 0, 0.39, 0.348, 0.782, 0, 0.808, 0.824, 0.305, 0.168, 0, 0, 0.509, 1.479, 1.033, 0.484, 0.44, 0], [0, 0.657, 0.659, 0.328, 0.413, 0, 0, 0.357, 0.595, 0.256, 0.726, 0.564, 0.768, 0.832, 0.581, 0.428, 0.591, 0.544, 0.552, 0.94, 0.355], [0.648, 0.396, 0.39, 0.329, 0.161, 0.568, 0, 0.538, 0.762, 0.586, 0.844, 0.924, 0, 0, 0.488, 0.954, 1.108, 0.27, 0.846, 0.117, 0.715], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.985, 1.316, 1.719, 1.386, 0.795, 1.651, 1.654, 0.967, 1.38, 1.508, 1.933], [0.324, 0.395, 0, 1.072, 0.64, 0.581, 0.569, 0.357, 1.076, 0.889, 0.645, 0.469, 1.554, 1.154, 0.982, 0.59, 0.999, 1.182, 0.402, 0.552, 1.054, 0.779], [0.46, 0.869, 1.142, 0.5, 0.431, 0.581, 0.948, 1.245, 1.379, 0.825, 0.643, 0.851, 1.265, 0.619, 1.752, 0.812, 1.697, 1.231, 0.794, 0.461, 1.246, 0.894], [1.217, 1.584, 1.893, 1.907, 1.528, 1.508, 1.496, 1.796, 1.832, 2.397, 1.712, 1.597, 2.241, 3.745, 1.953, 0, 1.315, 2.482, 1.773, 1.185, 1.933, 2.572, 2.143]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

