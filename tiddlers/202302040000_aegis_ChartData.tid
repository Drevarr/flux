created: 20230204000024000
creator: Drevarr
modified: 20230705163518567
modifier: drevarr
tags: ChartData
title: 202302040000_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Etchery", "Air One Com", "\u00c2 R K", "Palatine Of Ruin", "Kahless The Drunk", "Raven The Guard", "Tyrisai", "Zady Stardust", "Ravioli Fetabringer", "Koralia Danai", "Johosh The Great"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.4124, 12.6059, 8.7864, 17.8038, 9.9029, 3.6691, 11.4761, 9.067, 19.5908, 1.818, 4.2574, 19.5804, 5.2288, 18.8496, 27.918, 34.2985, 45.0736, 23.3926, 10.9383, 10.1226, 15.4955, 1.8189, 17.6154, 31.5955, 4.9068, 7.0099, 4.6699, 0.0, 21.9402], [3.3382, 17.0667, 3.7464, 0.0, 2.5263, 48.8804, 18.9239, 6.3857, 21.8715, 0.0, 5.2699, 14.6853, 0.0, 14.454, 56.6397, 21.7503, 4.2557, 10.1618, 18.3778, 23.7463, 38.1982, 1.6774, 14.3167, 18.0173, 24.5067, 1.961, 10.6596, 10.8317, 26.6679], [11.316, 8.0728, 5.4264, 0.0, 21.9278, 22.3675, 12.7222, 26.213, 4.0936, 24.089, 3.219, 36.2502, 0.0, 23.364, 66.8763, 39.0604, 51.2512, 136.6046, 19.9064, 20.0169, 39.7426, 10.974, 15.9324, 32.2483, 16.3833, 15.1694, 16.3701, 18.9567], [23.9522, 52.1031, 14.7672, 0.0, 22.6352, 63.7862, 13.041, 75.5854, 69.2803, 26.2975, 31.6197, 29.0268, 67.3416, 30.9524, 41.367, 36.6234, 20.3141, 26.8726, 18.4517, 44.678, 35.904, 23.3346], [16.6925, 68.1257, 38.5383, 74.6695, 37.1488, 39.2049, 0.0, 42.966, 100.7163, 63.5778, 54.0883, 106.1874, 33.7662, 10.7315, 24.0412, 29.8502, 17.9744, 96.0922, 21.4536, 15.8682, 10.3804, 37.7076, 64.3977], [5.9975, 4.0635, 1.68, 0.0, 55.5775, 44.9996, 16.9823, 13.1594, 78.0123, 92.5253, 32.6317, 32.3253, 0.0, 50.49, 34.1784, 64.2857, 99.2992, 138.8552, 30.8448, 32.3468, 39.2278, 5.8205, 14.8553, 101.184, 22.435, 14.4031, 4.3907, 0.0, 59.1651], [54.5517, 6.8096, 125.4528, 107.9073, 109.0089, 155.0349, 58.1064, 53.1291, 43.7379, 51.4285, 36.7418, 56.302, 243.7555], [11.5989, 11.6668, 1.3944, 20.5816, 52.4854, 95.9616, 10.201, 29.7058, 1.0819, 202.8413, 8.6447, 43.218, 22.3344, 23.688, 142.5996, 21.553, 143.9702, 44.0251, 0.2283, 125.1479, 31.6489, 1.2791, 0.9139, 13.9026, 2.0737, 6.4465, 0.0, 36.8118], [31.0436, 76.5925, 2.2176, 79.2636, 47.875, 13.9394, 43.6061, 46.8717, 92.2006, 10.2542, 45.423, 55.9056, 1.1088, 37.5201, 123.6163, 64.6589, 61.5164, 54.9635, 24.6089, 75.2638, 24.9391, 22.1034, 225.9994, 20.7449, 13.4338, 37.5878, 54.2626, 50.5359], [86.6285, 71.4861, 47.5912, 1.4652, 65.0574, 177.4129, 148.4454, 126.3746, 61.4178, 32.8541, 76.9111, 49.1103, 46.4284, 268.4314, 35.9014, 37.6193, 70.861, 10.5006, 63.2961], [36.6261, 23.9837, 33.3648, 73.2612, 92.5747, 96.5324, 55.813, 59.7373, 268.9401, 97.6875, 186.4989, 22.1768, 63.8748, 128.3805, 107.014, 79.7597, 126.852, 62.9464, 35.5941, 111.6086, 19.1389, 31.7526, 307.0771, 15.1838, 25.8985, 16.6747, 28.4746, 101.7603], [46.6596, 23.2613, 19.7232, 57.4682, 57.9219, 69.4134, 18.0835, 107.9568, 149.1532, 201.4778, 24.662, 84.0105, 17.3888, 91.6344, 140.0976, 181.8531, 204.5472, 154.473, 83.0566, 51.7041, 211.0165, 42.3197, 36.0835, 263.7312, 67.6321, 42.1047, 87.6371, 74.2799, 96.8949]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

