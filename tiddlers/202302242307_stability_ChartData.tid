created: 20230224230708000
creator: Drevarr
modified: 20230705163520176
modifier: drevarr
tags: ChartData
title: 202302242307_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Dark Sidiuz", "Burnhard Riemann", "Nazhul Naxxremis", "Smol Gluvs", "Ez Mode Mathus", "Jeckyll Mbs", "Smol Daddy Tika", "Arcanophage Farra", "Viral Marketing", "Whose Guardian", "Sassy Daddy Demon", "Xanvias Tseli", "Kosair", "Air One Com", "Mistwalker Caelon", "Gavann", "Kahless The Drunk", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Blanco Padre Guard", "Ace Hammers", "Zaylen Harker", "Ravioli Fetabringer", "Bella Sassy", "Koralia Danai"];
const professions = ["Dragonhunter", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Berserker", "Spellbreaker", "Willbender", "Dragonhunter", "Vindicator", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.5912, 1.5034, 1.5629, 0.4704, 1.4989, 0.809, 2.2623, 0.8721, 0.0, 0.0, 0.4854, 0.0, 1.1462, 0.0, 0.0, 0.0, 1.3392, 1.943, 0.9346, 1.8189, 1.2152, 0.0, 0.0, 2.6656, 1.2528, 2.8327, 1.1794, 0.0], [1.3632, 2.1216, 0.0, 0.5683, 0.4032, 0.5214, 0.3734, 1.0055, 0.2524, 0.0, 0.8938, 0.0, 4.2029, 0.0, 1.152, 0.0, 1.8433, 0.623, 2.3834, 0.2127, 2.8244, 0.0, 1.96, 0.9504, 3.134, 1.3014, 1.0824], [1.7826, 2.5459, 0.8352, 0.0, 0.9744, 2.281, 1.2446, 1.3406, 0.0, 0.9878, 0.9709, 0.0, 1.9104, 0.0, 1.008, 0.0, 1.9195, 1.943, 0.708, 0.2509, 0.9418, 0.9486, 0.9158, 1.0192, 1.944, 0.904, 1.2608, 0.9673], [1.1535, 2.4398, 0.4454, 1.0301, 0.4368, 2.3461, 0.3112, 0.3352, 0.0, 1.084, 0.0, 0.0, 3.5342, 0.0, 0.0, 0.0, 2.232, 0.8968, 0.1699, 0.8154, 1.1241, 0.0, 3.18, 2.4304, 2.376, 2.23, 0.9354, 1.0133], [1.0486, 1.9094, 0.5011, 0.2486, 1.2096, 1.1079, 1.3691, 1.0055, 0.0, 0.5494, 0.0, 0.1443, 0.0, 5.7312, 0.0, 1.728, 1.269, 2.0088, 1.7437, 1.416, 1.4426, 0.8506, 0.0, 0.0, 2.744, 0.432, 1.8081, 1.5455, 0.0], [1.468, 3.6067, 0.3898, 0.4262, 0.7728, 0.782, 2.3025, 0.4189, 1.6335, 0.3998, 0.0, 1.5283, 0.0, 1.188, 0.7233, 2.4106, 2.1921, 0.5098, 1.1917, 0.4253, 0.0, 1.8062, 3.8416, 1.9008, 1.3862, 1.5861, 1.2206], [1.8875, 0.7426, 3.7306, 1.1722, 0.0, 0.0, 0.7468, 2.6813, 1.4688, 0.0, 0.8938, 0.0, 0.0, 2.8656, 0.0, 0.792, 0.9517, 1.4285, 1.7437, 0.5664, 2.2579, 0.8506, 1.0133, 0.9922, 1.8032, 1.2096, 1.8081, 1.9928, 0.9442], [1.5729, 4.5614, 1.2806, 2.1312, 0.0, 2.0203, 2.1158, 1.2569, 0.9868, 0.8019, 0.9878, 0.6822, 0.0, 3.7253, 0.0, 0.0, 0.0, 0.0, 1.5942, 2.1523, 1.8189, 0.881, 0.8624, 1.3229, 3.2928, 1.9872, 0.9643, 2.3995, 1.3357], [3.2507, 1.273, 0.0, 1.5984, 0.0, 2.9978, 1.5557, 3.184, 1.6753, 0.0, 0.0, 1.4432, 0.928, 4.8715, 0.0, 0.0, 0.0, 3.7051, 3.7863, 1.7842, 3.9514, 0.0, 0.0, 0.0, 2.6656, 0.0, 3.4569], [0.0, 2.3338, 2.2272, 2.3798, 1.2096, 1.6944, 1.1201, 3.2678, 1.0327, 0.0, 1.1054, 0.9578, 3.7253, 1.152, 1.1929, 2.3659, 2.3914, 1.0762, 1.6934, 1.2152, 0.0, 1.1448, 2.1168, 2.1168, 3.3751, 2.3182, 2.3721], [1.1535, 1.4851, 1.4477, 2.6995, 1.6464, 1.9551, 1.0579, 2.7651, 2.6622, 0.0, 0.0, 1.207, 0.0, 3.5342, 0.0, 0.0, 0.0, 2.723, 4.0354, 0.793, 2.9478, 1.5798, 0.0, 0.0, 4.0768, 3.024, 3.6162, 2.0335, 1.2206], [2.6215, 5.4101, 3.3408, 0.4262, 1.8816, 4.5619, 1.1201, 0.8379, 0.5508, 2.6433, 0.0, 0.0, 2.2925, 0.0, 3.42, 2.741, 6.0264, 0.4982, 3.2002, 2.3206, 1.3063, 0.0, 0.0, 4.9392, 3.5856, 2.6519, 0.5287, 0.2764], [6.1867, 2.652, 2.951, 1.4563, 0.9744, 2.2158, 1.8047, 3.9381, 1.4688, 0.0, 0.9878, 0.9446, 0.0, 4.0118, 0.0, 1.008, 1.0025, 2.9016, 2.9394, 1.6992, 3.2614, 1.8836, 0.9055, 2.0098, 2.9792, 2.8944, 2.7724, 2.0335, 0.8982], [9.7843, 3.7975, 2.3069, 2.6966, 14.112, 9.2448, 9.161, 8.2153, 2.0036], [1.9923, 1.379, 1.7261, 1.8826, 1.8816, 2.6068, 3.796, 1.6758, 1.6294, 1.9602, 0.3058, 1.4694, 5.7312, 0.0, 1.584, 0.0381, 4.3747, 6.6261, 2.917, 5.4566, 1.6101, 1.8973, 4.5538, 5.096, 2.16, 3.5559, 5.2464, 1.8885], [6.711, 0.9547, 3.8419, 3.4099, 2.2848, 3.3888, 4.1694, 4.1895, 0.023, 2.569, 0.9408, 0.0, 0.488, 5.0626, 0.0, 2.808, 0.0, 5.8032, 4.8325, 1.5293, 5.5821, 0.9722, 1.2289, 1.8317, 9.6432, 3.3696, 5.2435, 3.1723, 0.1842], [8.1791, 12.5174, 9.4099, 3.6941, 3.2928, 6.6473, 1.8047, 8.798, 1.2393, 0.0149, 0.0, 1.745, 12.7042, 2.88, 0.0, 6.4282, 4.2347, 2.5771, 6.0211, 2.1266, 0.0, 3.409, 6.0368, 3.4957, 4.8804, 1.0824], [4.9284, 6.7891, 5.3453, 5.1859, 2.0496, 4.0405, 3.5471, 6.787, 4.0392, 2.48, 2.1403, 1.64, 0.728, 8.4058, 0.0, 1.98, 1.9923, 7.8566, 4.7329, 4.5878, 6.711, 1.8836, 3.0831, 0.3562, 6.272, 3.0672, 6.3886, 4.9617, 3.1551], [4.509, 8.4864, 5.2896, 6.9264, 3.2928, 7.9507, 3.2982, 9.3007, 3.5113, 1.7226, 1.6464, 2.4666, 0.936, 11.3669, 1.8, 0.1903, 6.0264, 7.0744, 2.8037, 5.5194, 3.8583, 2.8028, 0.407, 8.7808, 5.6592, 4.5202, 6.1818, 1.6582], [5.0333, 8.9107, 9.2986, 0.0, 3.6624, 4.3664, 1.4935, 9.6358, 2.754, 0.0, 1.3877, 4.3821, 0.0, 16.716, 0.0, 1.764, 0.0, 7.7227, 8.569, 2.917, 11.8541, 3.8583, 3.7299, 6.3346, 17.3264, 4.4496, 9.4624, 10.0862, 0.9212], [9.3325, 10.7141, 8.185, 2.5574, 3.5952, 7.9507, 9.8323, 10.6413, 3.1442, 2.3463, 0.1411, 0.0, 5.0626, 0.0, 5.328, 2.7157, 5.9818, 4.4838, 4.0781, 10.4742, 4.3747, 2.35, 4.5792, 13.4848, 7.776, 9.5227, 8.4187, 3.3163], [25.3761, 12.5174, 9.6326, 5.5056, 2.7552, 4.3664, 3.1115, 5.1112, 1.4458, 3.3869, 0.4986, 0.0, 21.7786, 0.0, 1.26, 1.8781, 4.0176, 3.9358, 3.9931, 6.8992, 3.6456, 4.7648, 9.1075, 11.2896, 7.4736, 3.9175, 4.0263, 0.76], [12.1638, 12.1992, 8.7974, 3.2323, 3.2928, 5.3439, 7.032, 9.2169, 4.0621, 0.635, 0.0, 13.8504, 0.0, 5.076, 4.1877, 9.1512, 7.8716, 3.2568, 9.0317, 4.7697, 3.6436, 4.0958, 11.0544, 4.536, 7.4735, 6.3445, 2.6484], [4.4041, 7.0013, 1.2806, 3.481, 4.5024, 10.4272, 6.3475, 12.4009, 6.2424, 4.9005, 3.1752, 5.248, 2.264, 13.0862, 0.2227, 2.628, 0.0, 13.4366, 12.6543, 4.3046, 10.9133, 5.8937, 1.6601, 2.8238, 14.6608, 8.2944, 10.5472, 6.8326, 1.8194], [14.3658, 11.881, 13.8643, 6.5712, 5.8128, 7.1035, 7.9032, 15.6687, 5.3244, 2.8363, 1.3877, 1.8499, 1.688, 19.6771, 1.9728, 2.664, 2.2207, 12.2314, 14.946, 7.8446, 11.1014, 5.1646, 4.5276, 3.5107, 17.5616, 7.9056, 13.9826, 10.4929, 5.7575], [16.8825, 16.2302, 12.8064, 8.7734, 5.6784, 6.3215, 11.5748, 16.1715, 2.0655, 4.2336, 3.4243, 22.8293, 0.2227, 2.376, 2.4238, 13.3027, 15.9424, 10.1102, 16.4326, 5.7722, 6.1446, 3.3581, 17.9536, 10.8864, 15.3689, 11.0622, 5.8957]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

