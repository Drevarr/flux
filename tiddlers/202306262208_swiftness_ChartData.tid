created: 20230626220846000
creator: Drevarr
modified: 20230705163539622
modifier: drevarr
tags: ChartData
title: 202306262208_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Cat Wigglebooty", "Shaca Booey", "Zadey Starbolt", "Ateriuz", "Mike The Archmagus", "Eibh\u00ebar", "Caelon Cai", "Irish Necroman", "Rahani Sunray", "Artakama Nahid", "Black Raspberry Pie", "Rozaalyna", "Gravlyn Isshtail", "Cyr", "Mike The Archmagus", "Zadie Miststep", "My Birthday Girl", "Blancooo Padreee", "Regis Hawkesburne", "Grasszanine", "Tegan Parker", "Primal Clone", "Johosh The Mighty", "Tika Fiery", "Xanvias Einzbern", "Arcanophage Farra", "Newtype Khan", "Gavann", "Koralia Danai", "Zaylen Harker", "Ryvalia Fazebringer", "Solus Sanctus", "Drevarr Moonwillow", "Sygaldry Verdandi", "Sub Train", "Crusader Siolith", "Bella Sassy"];
const professions = ["Berserker", "Scrapper", "Berserker", "Scrapper", "Spellbreaker", "Tempest", "Chronomancer", "Reaper", "Reaper", "Chronomancer", "Tempest", "Chronomancer", "Reaper", "Spellbreaker", "Tempest", "Weaver", "Tempest", "Scrapper", "Spellbreaker", "Berserker", "Spellbreaker", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.737, 0.0, 0.0, 0.0, 41.7833, 26.2734, 0.0, 15.5218, 0.0, 7.7873, 58.063, 0.0, 63.331, 48.0371, 0.0, 15.6087, 82.3037], [354.9151, 0.0, 8.3186, 0.0, 16.9893, 5.0016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [32.5441, 0.0, 8.7322, 0.0, 7.7969, 25.1258, 0.0, 18.5196, 58.6076, 0.0, 170.4411, 91.2483], [29.7422, 83.9302, 35.2135, 59.3961, 0.23, 86.4046, 83.8201, 5.3561, 8.0073, 87.4517], [54.3648, 81.391, 12.2223, 67.1531, 22.1021, 100.224, 36.8631, 108.7515], [476.495, 66.2055], [206.3174, 0.0, 12.9637, 0.0, 0.0, 17.6562, 63.9158, 0.0, 16.8672, 0.0, 24.3311, 12.0474, 0.0, 58.5074, 8.602, 47.9081, 0.0, 0.0, 39.0771, 40.7979], [246.8441, 63.6867, 36.0373, 55.9562, 17.2264, 47.6054, 7.0686, 0.0, 60.0096, 50.3093], [361.0555, 9.4479, 35.8248, 47.8851, 19.2746, 30.4916, 25.5892, 12.1081, 17.64, 53.8726], [0.0, 8.1365, 8.1852, 0.0, 11.4494, 32.6349, 0.0, 23.7888, 0.0, 14.5684, 44.263, 102.8611, 220.0323, 8.326, 10.9903, 9.0437, 0.0, 42.1398, 85.6498], [289.5199, 0.0, 0.759, 0.0, 20.7838, 0.0, 4.9802, 1.5088, 31.5504, 0.2117, 22.0229, 22.1761, 0.1311, 33.5492, 78.062, 52.8264, 16.169, 22.5853, 25.3872, 70.7206], [196.7998, 58.5123, 16.9712, 0.0, 0.0, 28.1414, 28.1367, 0.0, 8.8368, 0.0, 8.9302, 29.8954, 0.0, 60.6551, 134.872, 88.2262, 18.6745, 1.8112, 32.9886, 61.969], [380.0908, 20.0046, 8.7133, 55.2147, 0.0, 64.4179, 34.6315, 0.0, 42.2352, 4.5158, 22.8932, 18.6958, 0.0, 49.398, 36.662, 9.3509, 20.7495, 1.6873, 52.3242], [673.6019, 0.0, 59.6878, 18.9658, 0.0, 81.2305], [43.9824, 114.8717, 30.2342, 97.5839, 29.9432, 67.3946, 31.556, 100.7345, 110.4422, 40.9291, 98.9658, 138.9316], [45.8535, 23.1343, 20.3918, 1.5523, 40.1332, 32.3595, 23.9899, 78.4896, 32.8451, 83.7517, 63.3954, 84.502, 149.0676, 88.2441, 12.6626, 30.4794, 130.8879], [750.9709, 11.6886, 0.0911, 4.991, 22.2499, 138.7788, 24.6942, 0.0, 0.0, 0.0], [101.9403, 0.5161, 30.659, 6.813, 39.5908, 48.8376, 44.6605, 102.144, 37.2204, 63.8739, 123.2404, 41.716, 44.436, 63.48, 262.2497, 69.0215, 0.0, 39.1878, 28.7001], [410.7928, 4.62, 6.6488, 28.1492, 0.0, 32.4801, 44.4542, 37.3805, 78.6912, 24.1315, 94.7892, 6.6038, 75.0416, 123.9764, 29.624, 88.3476, 46.5102, 14.5512, 9.594, 54.1183], [438.7316, 55.1397, 29.2063, 65.9097, 22.3793, 85.75, 39.474, 1.4522, 13.6752, 2.5402, 43.1754, 19.142, 38.4647, 123.7543, 49.864, 88.6512, 62.8357, 34.0096, 79.7409, 92.7927], [513.3374, 3.2571, 0.0, 4.278, 22.6811, 247.8494, 20.4255, 8.5813, 0.0, 0.0, 97.9299, 8.3439, 31.9884, 51.2495, 0.0, 208.8161, 85.2296, 0.0, 29.0403, 82.368], [419.0823, 7.9543, 41.9067, 20.9157, 62.2272, 14.3942, 37.9914, 64.1189, 99.8458, 107.7573, 49.772, 161.8795, 96.5439, 64.6135, 94.0581, 91.0553], [357.3713, 0.0, 76.993, 28.3774, 19.1237, 301.3603, 0.8492, 0.0, 44.8224, 7.2677, 44.7269, 0.0, 10.2782, 92.1306, 13.846, 97.3949, 101.9466, 0.0, 52.6932, 336.2931], [360.4415, 25.9413, 39.7109, 38.9868, 62.9768, 29.2864, 0.0, 59.4844, 46.4688, 53.6256, 111.9307, 109.8991, 105.7977, 145.676, 45.264, 113.4857, 94.9779, 25.0776, 5.0922, 136.2933], [345.3975, 37.5144, 64.8793, 7.13, 106.1614, 113.1683, 29.9497, 56.9006, 30.6096, 23.8493, 39.959, 49.3943, 7.5251, 171.4489, 35.466, 172.6877, 133.7755, 43.4059, 28.413, 189.3177], [512.1094, 54.2157, 124.3849, 66.252, 37.5575, 94.8492, 15.4454, 28.7049, 64.2432, 31.7167, 0.0, 127.5686, 54.5376, 96.278, 196.742, 117.3718, 169.1671, 22.9723, 71.7336, 71.4285], [1187.8604, 37.3527, 118.404, 101.5882, 14.208, 224.7095, 75.735, 85.7753, 71.9712, 152.6213], [954.8322, 7.59, 113.0818, 18.2182, 168.1254, 30.2251, 61.5213, 87.3936, 34.6097, 57.8195, 14.5907, 52.3613, 22.218, 97.566, 55.8624, 130.0172, 10.7896, 54.7596, 193.5648], [980.9289, 84.8866, 69.9881, 43.0122, 147.1549, 0.0, 17.1437, 33.9696, 100.1625, 21.8638, 69.719, 44.0657, 76.038, 156.1718, 40.0113, 31.2851, 41.7708, 242.5995], [938.5601, 165.0495, 46.1472, 24.242, 0.0, 4.5195, 70.3188, 21.8776, 84.9408, 81.2498, 8.5518, 38.1947, 60.6469, 160.0437, 59.294, 120.5899, 46.7843, 30.7897, 66.9366, 202.8956], [789.3484, 27.324, 63.0007, 33.0946, 129.9808, 29.5825, 7.4686, 22.512, 67.3495, 83.6264, 60.1478, 39.2776, 230.6228, 118.956, 123.383, 161.6503, 128.8091, 65.4606, 83.7837], [129.2554, 0.0, 66.5491, 59.6924, 0.0, 164.6906, 5.2555, 0.0, 135.8784, 0.0, 0.0, 252.3261, 0.0, 189.0011, 67.206, 533.911, 186.2365, 0.0, 406.4166, 292.2134], [734.6989, 49.3647, 89.7138, 110.8858, 59.7212, 178.3093, 13.0586, 85.6998, 53.8608, 167.0508, 86.9942, 59.6569, 43.5514, 99.6107, 196.466, 189.8714, 52.2652, 103.5148, 98.2647, 189.7681], [1311.5894, 0.0, 51.946, 68.5621, 73.9292, 77.7957, 41.5165, 34.4572, 37.8672, 98.7487, 127.1424, 51.9823, 93.3694, 198.1105, 92.322, 65.4562, 47.5673, 48.5917, 92.2869, 137.709], [1211.8079, 82.4208, 41.1074, 41.354, 16.5365, 113.3491, 33.4611, 23.3298, 94.3824, 0.0, 56.7978, 90.3109, 54.8785, 126.8648, 197.11, 72.3782, 208.7087, 106.9513, 109.8513, 97.1685], [901.4107, 106.4448, 43.2934, 79.0004, 75.1797, 145.2869, 92.3278, 69.3105, 29.6016, 2.011, 105.725, 91.7833, 125.3578, 264.4683, 197.846, 160.4222, 70.4308, 76.27, 123.246, 237.7089], [1290.098, 126.9114, 94.0856, 65.1967, 75.8265, 143.5996, 59.9454, 25.8571, 137.5248, 188.995, 61.4143, 167.6373, 61.5383, 101.7584, 84.088, 210.2126, 156.1694, 66.7962, 47.3796, 158.5584], [1890.6292, 84.5229, 78.8753, 99.7915, 77.7885, 244.4146, 16.8682, 45.9995, 65.688, 199.8612, 54.7166, 86.8751, 17.0692, 123.6802, 85.146, 124.5367, 77.6345, 151.1622, 52.5825, 19.3694]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

