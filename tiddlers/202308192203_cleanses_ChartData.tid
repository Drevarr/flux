created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Rahani Sunray", "Mmathuss", "Xanvias Tsolice", "Be\u00eb", "Bonewings", "Bee Nemesis", "Darks Na", "Vini Boy", "Newtype Khan", "Milvia Rosalyn", "Vini Boy", "Grand Magus Karen", "High Sorcer Baradun", "Tootsie Pop Rocks", "Klengah", "Tegan Parker", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Spellbreaker", "Chronomancer", "Firebrand", "Weaver", "Scourge", "Scourge", "Spellbreaker", "Firebrand", "Weaver", "Spellbreaker", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0196, 0.0, 0.0, 0.0, 0.0256, 0.0926, 0.083, 0.0637, 0.0352, 0.2985, 0.0174, 0.0848, 0.1622], [0.1465, 0.0, 0.4296, 0.0821, 0.106, 0.1486], [0.0, 0.0051, 0.0, 0.0866, 0.0637, 0.0, 0.1197, 0.2388, 0.0, 0.212, 0.0405], [0.0686, 0.0, 0.0153, 0.0, 0.0, 0.0542, 0.0637, 0.0, 0.1901, 0.3358, 0.0, 0.1449, 0.0811], [0.0294, 0.0, 0.0031, 0.0, 0.0051, 0.0, 0.0505, 0.0191, 0.3944, 0.2537, 0.0, 0.1908, 0.0811], [0.0644, 0.0, 0.0308, 0.0, 0.1083, 0.2484, 0.169, 0.0224, 0.0, 0.1131, 0.3378], [0.0, 0.041, 0.0185, 0.1444, 0.1083, 0.0, 0.4296, 0.3433, 0.1484], [0.0588, 0.0, 0.0092, 0.0241, 0.0769, 0.0741, 0.0758, 0.1274, 0.1549, 0.209, 0.0087, 0.2544, 0.5135], [0.0, 0.0, 0.8809], [0.2745, 0.0, 0.0123, 0.0, 0.0615, 0.1191, 0.0127, 0.0, 0.5, 0.3284, 0.0087, 0.2473, 0.527], [0.0051, 0.0, 0.2708, 0.758, 0.2465, 0.0, 0.0, 0.2615, 0.9865], [1.293, 0.0, 0.0493, 1.4851, 0.0087, 0.9117, 0.6486], [0.0, 0.0513, 0.0, 0.6354, 0.7389, 0.0, 1.1056, 1.0746, 0.0, 0.7208], [0.4706, 0.2209, 0.0482, 0.0, 0.2593, 0.3177, 0.0701, 0.0, 1.7746, 1.5672, 0.0087, 0.3251, 0.473], [0.3725, 0.0345, 0.1166, 0.0, 0.0615, 0.0, 0.5235, 0.3057, 0.0, 0.9859, 1.1716, 0.0, 0.629, 1.2703], [0.2745, 0.0, 0.4571, 0.0, 0.2103, 0.1111, 0.7942, 1.2611, 0.0, 0.4366, 0.3881, 0.0, 0.9329, 0.2297], [0.2791, 0.4308, 0.2407, 0.6643, 1.1019, 0.0, 2.2958, 1.7836, 1.2473, 2.5541], [1.1667, 0.0862, 0.8589, 0.2771, 0.4821, 0.8148, 1.4549, 1.7643, 0.0, 2.2676, 1.4552, 0.0, 1.477, 2.0811], [0.5098, 0.0, 0.4509, 0.0241, 0.1846, 0.6852, 1.4874, 1.6497, 3.2183, 2.7015, 0.0, 1.7067, 2.9054]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

