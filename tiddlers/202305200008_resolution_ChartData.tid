created: 20230520000848000
creator: Drevarr
modified: 20230705163530809
modifier: drevarr
tags: ChartData
title: 202305200008_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Soxxdodendron", "Spreadflamesoflight", "Aronorf Xideliesi", "Air One Com", "Zaylen Harker", "Blanco Padre Guard", "Solus Sanctus", "Tika Fiery", "Bella Sassy", "Jupi Jupi Jupi", "Koralia Danai"];
const professions = ["Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 572.2227, 0.0, 113.52, 0.0, 27.496, 55.3872, 0.0, 92.5954, 0.0, 25.0668, 27.2448, 93.8443, 25.1712, 30.7145, 59.9113, 173.3615, 0.0, 0.0, 0.0, 0.0, 0.0, 112.4992, 0.0, 45.827, 0.0, 39.9593], [101.8395, 574.9128, 36.3283, 174.1397, 0.0, 51.0281, 0.0, 116.204, 107.4314, 161.4488, 44.2728, 82.8202, 31.6186, 0.0, 77.1544, 155.3467, 0.0, 0.0, 0.0, 58.0518, 69.604, 316.5798, 72.3264, 319.8619, 0.0, 24.6992], [81.7578, 1108.7055, 66.402, 173.6856, 0.0, 82.7398, 0.0, 53.3062, 35.5802, 0.0, 197.9349, 268.5672, 122.748, 80.7245, 0.0, 57.0037, 254.8054, 47.5452, 0.0, 0.0, 91.8262, 24.2506, 225.5257, 0.0, 290.1864, 33.7239, 63.2426], [131.3181, 1555.2621, 17.6287, 342.4898, 0.0, 136.3476, 20.328, 55.4528, 140.0467, 62.2507, 206.2905, 278.2296, 117.097, 46.7654, 0.0, 181.0864, 169.8423, 106.8498, 0.0, 106.2389, 33.726, 105.468, 24.2223, 245.8277, 35.3489, 60.4109], [258.1047, 2586.339, 62.3108, 389.1466, 149.6641, 177.8748, 20.8956, 62.4291, 133.0578, 29.3328, 384.6361, 602.6328, 511.2802, 167.0352, 160.129, 63.2247, 479.195], [43.0254, 2243.9277, 126.3352, 300.601, 51.2858, 194.4228, 28.8156, 103.1243, 85.7736, 93.1724, 480.6327, 348.48, 346.0104, 49.7683, 0.0, 331.2704, 208.0506, 114.8445, 0.0, 0.0, 79.721, 36.2635, 155.6532, 48.6149, 509.8162, 140.9503, 190.8292], [75.6522, 2795.3982, 38.9844, 620.2733, 0.0, 297.1082, 0.0, 180.4005, 88.9504, 161.6563, 442.0112, 531.2736, 302.2843, 95.231, 6.016, 134.1581, 528.5473, 86.4612, 0.0, 0.0, 155.3288, 48.1158, 311.57, 107.3048, 457.9613, 193.8846, 75.0416], [114.5277, 2282.3577, 37.9991, 563.8538, 24.3407, 267.1583, 78.144, 282.049, 170.7112, 40.2104, 550.077, 523.9872, 470.6112, 146.9424, 73.884, 269.7362, 391.2155, 132.0606, 38.8395, 0.0, 201.3422, 30.0643, 601.9586, 173.0329, 432.3816, 261.3769, 123.234], [258.9633, 2823.0678, 92.3202, 689.0664, 233.6607, 211.7887, 39.798, 174.3186, 261.5008, 231.1995, 486.853, 437.5008, 780.7699, 65.2022, 69.1135, 424.9241, 427.2452, 165.0969, 54.0918, 132.9574, 109.754, 525.4943, 79.691, 396.4464, 96.4971, 205.8794], [328.8438, 2822.2992, 71.3286, 852.6487, 48.321, 282.1962, 59.5056, 96.148, 151.0485, 190.7447, 388.164, 494.0496, 785.2166, 61.7798, 0.0, 391.3846, 439.5623, 287.9361, 0.0, 0.0, 128.443, 53.4798, 592.3786, 97.3576, 616.9262, 67.893, 295.6043], [255.7197, 2929.1346, 100.5241, 675.3305, 19.3612, 228.3367, 17.1468, 90.6922, 203.8502, 205.3296, 731.9506, 652.9248, 810.3221, 96.1142, 51.4415, 281.2316, 469.9781, 267.0822, 0.0, 0.0, 165.0598, 133.8762, 572.7791, 82.231, 534.7776, 90.665, 310.1302]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

