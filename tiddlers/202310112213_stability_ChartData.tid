created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Legendary Sakis", "Jimbo The Pleb", "Sanskuy", "Zaedy Zae", "Newtype Khan", "Sub Train", "Xanvias Einzbern", "Belvyn Brightblade", "Aira Draugr", "No Reserv\u00e9", "Mistwalker Cael", "Atria Ruinheart", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Zaylen Harker", "Crusader Siolith", "Jmbrage Gaurdian", "Solus Luxes", "Bella Bitty"];
const professions = ["Scrapper", "Druid", "Berserker", "Herald", "Druid", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Herald", "Vindicator", "Herald", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.3107, 0.0, 1.2312, 0.0, 0.0, 0.0, 4.0733, 0.0, 0.0, 0.0], [21.3107, 0.9324, 0.342, 0.8193, 0.5187, 0.0, 2.3276, 1.0543], [23.2481, 1.049, 1.2312, 1.4661, 0.0, 0.0, 0.0, 3.375, 2.8994, 0.0, 0.0, 3.296, 0.0, 0.0], [35.8408, 1.049], [24.2167, 0.8892, 1.7679, 1.6758, 0.8269, 0.0, 3.4914, 2.1965, 0.7632, 0.8051, 3.0134, 0.7738], [29.0601, 0.0, 1.9836, 1.811, 0.9177, 0.0, 1.9728, 5.1207, 0.0, 0.0, 1.8488, 1.7892, 0.0, 0.0], [3.7529, 2.394, 6.8561, 6.9027, 0.0, 3.441, 0.4655, 6.8531, 0.0, 6.2324, 10.1704], [46.4962, 1.0723, 0.0, 1.2936, 0.9576, 0.0, 0.2753, 3.6078, 1.0543, 1.06, 1.2524, 3.3901, 0.0, 0.0], [61.9949, 0.3496, 0.2052, 3.3202, 0.1995, 0.6688], [55.2142, 1.1422, 5.3352, 0.0, 5.3865, 0.0], [101.7104, 0.6061, 2.6676, 2.3285, 1.8753, 0.0, 0.0, 3.9569, 0.615, 0.0, 1.2524, 4.991, 0.0, 0.0], [124.9584, 0.0, 1.9835, 1.197, 0.2918, 1.8581, 8.8449, 2.3722, 0.0, 3.2504, 9.5112, 0.0, 4.0275], [143.3632, 2.1678, 0.8892, 5.8643, 7.0224, 1.751, 3.0051, 21.0648, 9.6646, 0.0, 2.5943, 10.6412], [161.7679, 0.0, 0.0, 10.2194, 3.3516, 0.0, 0.4473, 14.082, 6.1502, 0.0, 3.5188, 14.5022, 0.0, 1.7459], [201.4834, 1.2996, 7.5891, 8.3391, 0.0, 5.0009, 19.7846, 7.3802, 2.2896, 3.7573, 12.5246], [207.2954, 0.0, 13.4064, 6.7267, 2.3142, 2.1793, 21.6467, 13.0911, 4.0493, 0.0], [193.734, 2.4476, 9.234, 7.3735, 6.0249, 2.505, 1.1929, 21.0648, 15.9905, 0.0, 7.1568, 15.6322, 0.0, 2.7082], [218.9194, 0.0, 2.8728, 8.5378, 10.8528, 0.0, 29.7933, 7.8195, 0.0, 6.7393, 18.4573, 0.0, 4.9898], [255.7289, 0.0, 3.5568, 2.156, 11.97, 0.0, 26.1855, 12.8276, 3.9432, 7.3954, 22.2241, 0.0, 3.9085], [235.3868, 5.8275, 6.6348, 10.6938, 10.4139, 1.289, 4.3242, 25.2545, 15.1119, 8.3528, 7.1866, 21.3766, 3.7674, 4.1366]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

