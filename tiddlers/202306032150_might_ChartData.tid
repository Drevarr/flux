created: 20230603215001000
creator: Drevarr
modified: 20230705163533565
modifier: drevarr
tags: ChartData
title: 202306032150_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "High Sorcer Baradun", "Belvyn Brightblade", "Tika Fiery", "Blanco Padre Guard", "Pocket Stabbs", "Tegan Parker", "Drevarr Moonwillow", "Koralia Danai", "Aronorf Xideliesi", "Newtype Khan", "Zadey Starbolt", "Crusader Siolith", "Artakama Nahid", "Pamtastic", "Grasszanine"];
const professions = ["Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Tempest", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 11.8195, 2.1001, 21.5297, 4.1325, 2.1004], [3.4637, 13.4093, 24.9333, 10.5468, 4.1287], [10.9666, 9.4233, 4.6512, 6.6458, 7.8278, 0.0, 7.8143, 5.6991, 6.0332, 0.0, 0.0], [16.82, 5.9354, 4.8336, 6.2515, 0.6912, 1.5629, 10.1304, 0.0, 10.1893, 1.7601, 2.1461, 0.0, 2.3829, 3.8232, 4.0352, 1.9874, 1.1232], [7.4054, 11.9398, 0.0, 5.8852, 5.4579, 5.6991, 7.1057, 6.0409, 0.0, 0.9017, 8.9084, 10.4312, 3.5801, 1.9874, 2.6676], [9.1066, 2.1245, 11.4395, 18.6909, 6.9269, 2.1513, 0.9017, 8.1019, 21.948, 5.2792, 0.0, 4.4366], [30.276, 18.7241, 2.9002, 0.0, 2.1946, 9.345, 0.3781, 6.0332, 0.3911, 0.0, 9.9349, 11.092, 2.4272, 1.092, 0.0], [11.5722, 28.8205, 9.6854, 2.8723, 8.0352, 6.5446, 11.4597, 6.9956, 5.3628, 2.3251, 2.8092, 1.3872, 9.4216, 10.5256, 7.6153, 2.7737, 0.9126], [42.2518, 17.9899, 2.0611, 5.0688, 3.9053, 2.1856, 6.1427, 7.4007, 7.0163, 0.6519, 0.8271, 11.4379, 12.8384, 7.676, 0.0, 4.577], [18.2329, 40.263, 6.1834, 0.0, 9.4176, 0.0, 6.4851, 0.0, 6.9716, 7.7793, 0.0, 0.4277, 18.9899, 19.588, 0.8192, 1.0046, 2.5693], [15.5417, 35.1842, 6.384, 4.3366, 6.7565, 8.5226, 10.3922, 4.2946, 5.6309, 2.1078, 5.595, 8.8351, 10.0536, 6.3411, 5.8094, 4.0435], [12.1777, 42.1599, 15.7958, 6.8602, 6.8986, 9.0227, 7.9679, 13.0048, 1.6732, 2.3957, 2.7744, 13.4909, 0.0, 5.2792, 0.1529, 0.8564], [25.9701, 25.761, 6.1651, 0.0, 4.4582, 2.3443, 10.0096, 4.7538, 11.1278, 3.5203, 0.867, 10.3015, 25.488, 12.3787, 0.0, 2.12], [27.1138, 93.8043, 11.929, 0.0, 8.4326, 3.6996, 18.7302, 5.2399, 18.0995, 0.3694, 0.0, 18.8432, 23.5528, 2.943, 1.1138, 0.0], [87.1949, 36.408, 25.4813, 25.2314, 17.1936, 28.9621, 8.8817, 22.1482, 9.1168, 0.6084, 0.0, 0.0, 17.2302, 22.1368, 4.8544, 0.0, 0.0], [37.5197, 23.232, 24.3302, 17.3504, 24.4097, 15.4227, 18.1441, 8.3226, 9.3902, 9.2018, 54.88, 58.3864, 18.295, 12.143, 5.0123]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

