created: 20230429000309000
creator: Drevarr
modified: 20230705163527152
modifier: drevarr
tags: ChartData
title: 202304290003_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Aronorf Xideliesi", "Puny Tinker", "Bella Sassy", "Air One Com", "High Sorcer Baradun", "Demon Sekhmet", "Newtype Khan", "Johosh The Great", "Cat Wigglebooty", "Khailerian", "Primal Clone", "Miphest\u00f6", "Tika Rucola", "Venomina The Siren", "Tegan Parker", "Zadie Miststep", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Scourge", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Vindicator", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[91079.04, 104528.8, 17341.04, 0.0, 6487473.6, 0.0, 0.0, 44485.76, 0.0, 0.0, 1915.58, 0.0, 0.0, 10438946.7], [313230.16, 0.0, 41337.62, 0.0, 7219781.1, 90165.18, 0.0, 106778.32, 29457.6, 0.0, 0.0, 34075.86, 35665.08, 7675951.92], [20570249.7], [78453.5, 134559.6, 15173.41, 0.0, 6073527.15, 15708.42, 4242.0, 53357.92, 0.0, 0.0, 5773.72, 2433.99, 14233.56, 12896230.62], [182158.08, 285254.0, 43841.08, 8620158.6, 15708.42, 0.0, 62230.08, 0.0, 0.0, 0.0, 0.0, 0.0, 18603907.14], [1248395.88, 763508.0, 104992.67, 18125509.95, 8526.42, 0.0], [356799.22, 358439.6, 20424.57, 0.0, 12803304.6, 15708.42, 0.0, 151451.52, 0.0, 0.0, 0.0, 4867.98, 35665.08, 16087027.32], [247767.1, 477868.0, 19508.67, 0.0, 16071965.55, 62948.76, 0.0, 106778.32, 0.0, 0.0, 0.0, 21967.53, 57096.6, 20336376.06], [237914.8, 392098.8, 35445.33, 0.0, 18007826.85, 78714.72, 0.0, 226989.84, 0.0, 0.0, 0.0, 0.0, 85617.84, 24420144.84], [886561.04, 901464.4, 59167.14, 35370195.3, 62948.76, 0.0, 215056.16, 29172.0, 30640.94, 0.0, 0.0, 0.0, 2479511.58], [267179.78, 0.0, 75348.04, 0.0, 28830817.8, 31474.38, 0.0, 195749.84, 0.0, 0.0, 0.0, 0.0, 0.0, 17810154.18], [683749.62, 818011.2, 87590.57, 19144830.6, 0.0, 25579.26, 133457.28, 0.0, 10170.46, 0.0, 9735.96, 0.0, 24818309.88], [339211.04, 553755.6, 13005.78, 18302805.45, 15708.42, 0.0, 215493.52, 0.0, 10170.46, 0.0, 0.0, 0.0, 31346799.12], [455833.08, 748608.4, 28179.19, 0.0, 17392174.65, 102306.12, 0.0, 267726.8, 0.0, 0.0, 32780.7, 4867.98, 114193.2, 32081600.46], [864667.04, 1441324.0, 200398.92, 0.0, 35909790.3, 103341.84, 8526.42, 447669.2, 107222.4, 10170.46, 19263.72, 4867.98, 49952.76, 19538113.14], [2114741.46, 1403418.8, 132500.2, 32458694.85, 326827.2, 0.0, 764005.44, 0.0, 0.0, 9631.86, 50115.12, 76613589.78], [1985566.86, 2425083.6, 213710.0, 0.0, 47918348.55, 387416.82, 4242.0, 962192.0, 0.0, 10364.8, 0.0, 0.0, 100338.48, 73230153.36], [1688538.26, 2654908.0, 166663.27, 0.0, 50891260.05, 347081.28, 108213.42, 1039417.28, 4120.8, 0.0, 53933.02, 56074.2, 273360.12, 75491576.16], [2346452.96, 2394589.6, 101939.67, 55495033.2, 190457.4, 51200.94, 940886.32, 4120.8, 81817.14, 3831.16, 38974.65, 185577.48, 74671085.58]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

