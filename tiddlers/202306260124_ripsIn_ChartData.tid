created: 20230626012458000
creator: Drevarr
modified: 20230705163538343
modifier: drevarr
tags: ChartData
title: 202306260124_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Shaca Booey", "Mememonoko", "Night Of The Wabbit", "Ganbaatar Bloodwine", "Cyclotechnist Farra", "Johosh The Mighty", "Momomeko", "Elon The Mender", "Morton Saltbringer", "Rozaalyna", "Naosiva", "Arcanophage Farra", "Shaca Booey", "Brad Bellick", "Smol Gluvs", "Smol Daddy Tika", "Elon The Archmagus", "Charr Surethang", "Be\u00eb", "Solus Sanctus", "My Birthday Girl", "Elonith Requiem", "Johosh The Mighty", "Kary\u00edna", "Xanvias Einzbern", "Venomina The Siren", "Mammary Mission", "Smol Daddy Tika", "Tribal S", "Tootsy Pop Star", "Artakama Nahid", "Mistwalker Cael", "Bender Ale Devourer", "Blanco Padre Guard", "Regis Hawkesburne", "Koralia Danai", "Arriasa", "Miphest\u00f6", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Raelyn Sunray", "Bella Sassy", "Drevarr Moonwillow", "Crusader Siolith", "Zayde Sunsabre", "Tegan Parker", "Primal Clone", "Eibh\u00ebar", "Newtype Khan"];
const professions = ["Reaper", "Spellbreaker", "Vindicator", "Vindicator", "Berserker", "Scrapper", "Spellbreaker", "Chronomancer", "Druid", "Chronomancer", "Scourge", "Catalyst", "Spellbreaker", "Berserker", "Scrapper", "Scourge", "Berserker", "Tempest", "Berserker", "Scourge", "Firebrand", "Scrapper", "Reaper", "Berserker", "Vindicator", "Berserker", "Tempest", "Scourge", "Spellbreaker", "Druid", "Scourge", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Druid", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.8333, 0.5, 0.1613], [0.6774, 0.2273, 0.3256, 0.7761], [0.0, 0.537, 0.2889, 0.129, 0.5094, 0.076], [0.4524, 0.5143, 0.2879, 0.0, 0.3333, 0.1042, 0.1129, 0.1818, 0.3488, 0.2388], [0.0, 0.2593, 0.3444, 0.0524, 0.7358, 0.0684, 0.5238], [0.5152, 0.0, 0.0714, 0.375, 0.4677, 0.6591, 0.1163, 0.209], [0.5323, 0.8182, 0.4651, 0.4328], [0.4286, 0.2857, 0.3939, 0.0, 0.2381, 0.5417, 0.1613, 0.4318, 0.1744, 0.1791], [0.0, 0.7037, 0.1667, 0.1613, 0.1887, 0.0342, 0.4762, 0.4571], [0.0, 0.3519, 0.0333, 0.0605, 0.0755, 0.1027, 0.2143, 0.0571, 0.0758, 0.0, 0.5714, 0.2708, 0.4194, 0.2273, 0.0116, 0.0597], [0.4528, 0.0798, 0.2619, 0.4857, 0.2121, 0.0, 0.5, 0.25, 0.0968, 0.2273, 0.1512, 0.2537], [0.2143, 0.5429, 0.3939, 0.0, 0.5238, 0.4375, 0.3871, 0.2273, 0.2558, 0.194], [0.0, 0.2963, 0.2667, 0.0847, 0.5472, 0.0456, 0.9048, 0.8286], [0.0, 0.2407, 0.2444, 0.1008, 0.2075, 0.0076, 0.3571, 0.7714, 0.1818, 0.0, 0.7381, 0.2292], [0.5476, 0.4286, 0.1061, 0.0, 0.381, 0.3125, 0.371, 0.9318, 0.2326, 0.194], [0.3585, 0.0456, 0.4286, 0.2571, 0.3485, 0.0, 0.4286, 0.2917, 0.4355, 0.3409, 0.1047, 0.1642], [0.0, 0.5185, 0.2222, 0.0726, 0.5283, 0.0875, 0.8095, 0.9143], [0.3333, 0.0, 0.381, 0.5625, 0.4194, 0.8864, 0.407, 0.3881], [0.0, 0.0556, 0.1333, 0.0685, 0.1509, 0.0266, 0.2143, 0.4571, 0.4394, 0.0, 0.4762, 0.3542, 0.3226, 0.2955, 0.1512, 0.1493], [0.5849, 0.0608, 0.4524, 0.5143, 0.2121, 0.0, 0.5, 0.5208, 0.0323, 0.5909, 0.2209, 0.1493], [0.0, 0.3148, 0.0667, 0.0847, 0.2264, 0.0266, 0.2857, 0.6286, 0.1818, 0.0, 0.4286, 0.4167, 0.2258, 0.2955, 0.186, 0.209], [0.0, 0.463, 0.1667, 0.0202, 0.3585, 0.076, 0.0238, 0.4, 0.2424, 0.0, 0.3095, 0.25, 0.3226, 0.4545, 0.2209, 0.0746], [0.018, 0.6111, 0.2333, 0.0726, 0.1212, 0.0, 0.7381, 0.5, 0.4677, 0.7273, 0.0581, 0.0597], [0.0, 0.7407, 0.1778, 0.0565, 0.4906, 0.076, 0.4762, 0.2857, 0.2727, 0.0, 0.4762, 0.5417], [0.0, 0.2963, 0.0889, 0.0565, 0.3396, 0.0532, 0.8095, 0.3714, 0.1818, 0.0, 0.3571, 0.2292, 0.2581, 0.0, 0.2791, 0.2836], [0.0, 0.2222, 0.1111, 0.0403, 0.434, 0.038, 0.4762, 0.2857, 0.2879, 0.0, 0.5476, 0.3542, 0.2581, 0.7955, 0.2093], [0.0, 0.2593, 0.2889, 0.0847, 0.2453, 0.0266, 0.4048, 0.3429, 0.1515, 0.0, 0.5238, 0.6667, 0.1613, 0.2727, 0.186, 0.2239], [0.434, 0.0798, 0.6429, 0.2, 0.303, 0.0, 0.1905, 0.625, 0.6774, 0.4773, 0.2209, 0.2687], [0.4697, 0.0182, 0.6429, 0.4375, 0.4516, 1.4091, 0.4302, 0.4328], [0.1778, 0.1008, 0.6038, 0.0646, 0.7619, 0.3143, 0.2727, 0.0, 0.5714, 0.1667, 0.0161, 0.2727, 0.4767, 0.0597], [0.5849, 0.0304, 0.5952, 0.5714, 0.4394, 0.0, 0.381, 0.4167, 0.4355, 0.5455, 0.2558, 0.3134], [0.0, 0.1667, 0.1222, 0.0484, 0.5849, 0.0342, 0.6667, 0.3429, 0.2879, 0.5476, 0.5208, 0.2581, 0.3864, 0.2093, 0.209], [0.0, 0.1667, 0.1667, 0.0403, 0.3208, 0.0837, 0.5952, 0.4286, 0.1667, 0.0, 0.6667, 0.3542, 0.2258, 0.9318, 0.0581, 0.3582], [0.0, 0.2222, 0.2, 0.0766, 0.5472, 0.0608, 0.4762, 0.1429, 0.3333, 0.0, 0.2619, 0.1875, 0.5645, 0.1591, 0.5349, 0.209], [0.0, 0.2593, 0.3333, 0.0524, 0.1509, 0.0646, 0.7619, 0.0286, 0.0455, 0.0, 0.5714, 0.3125, 0.0806, 1.1136, 0.3256, 0.4478], [0.0, 0.2963, 0.3, 0.0565, 0.4717, 0.1103, 0.7857, 0.4, 0.4697, 0.0, 0.8095, 0.3125, 0.2419, 0.1364, 0.2093, 0.0299], [0.0, 0.3704, 0.0444, 0.0685, 0.4528, 0.1635, 0.5714, 0.5429, 0.3939, 0.5238, 0.4792, 0.4355, 0.25, 0.093, 0.3731], [0.0, 0.7963, 0.3778, 0.0847, 0.283, 0.0646, 0.6667, 0.5143, 0.4394, 0.7857, 0.4375, 0.2097, 0.5455, 0.093, 0.0746], [0.027, 0.7037, 0.4778, 0.0847, 0.4151, 0.0837, 0.5476, 0.4857, 0.5152, 0.0182, 0.619, 0.125, 0.0161, 0.1591, 0.3721, 0.3582], [0.0, 0.4259, 0.0778, 0.0645, 0.4151, 0.0418, 0.5952, 0.4, 0.4091, 0.0, 0.4286, 0.6458, 0.5645, 1.0455, 0.2093, 0.4179], [0.0, 0.2963, 0.2667, 0.0605, 0.2642, 0.057, 0.4762, 0.5143, 0.5606, 0.6667, 0.3958, 0.4677, 0.7727, 0.2558, 0.4627], [0.0, 0.1667, 0.2, 0.0645, 0.4528, 0.0913, 0.5, 0.7714, 0.1818, 0.0, 0.4762, 0.6875, 0.4677, 0.7045, 0.4186, 0.403], [0.0, 0.5741, 0.4889, 0.0766, 0.4906, 0.0913, 0.5476, 0.4857, 0.2121, 0.4048, 0.6667, 0.2258, 0.2727, 0.4302, 0.4776], [0.0, 0.6852, 0.0778, 0.0565, 0.5094, 0.076, 0.5238, 0.4571, 0.4848, 0.0, 0.5, 0.3958, 0.6774, 1.0227, 0.2442, 0.4328], [0.0, 0.6296, 0.2889, 0.0524, 0.717, 0.1141, 0.5714, 0.3429, 0.4242, 0.0, 0.619, 0.6458, 0.2903, 0.4091, 0.314, 0.5821], [0.0, 0.2407, 0.3, 0.0847, 0.8679, 0.1597, 0.3333, 0.4571, 0.2576, 0.0, 0.5, 0.7708, 0.5161, 0.75, 0.407, 0.4179], [0.0, 0.8889, 0.2444, 0.0726, 0.6226, 0.1369, 0.7381, 0.8857, 0.5152, 0.0, 0.6905, 0.4792, 0.4839, 0.5227, 0.4535, 0.2836], [0.0, 0.5556, 0.3333, 0.1008, 0.9811, 0.0875, 0.7857, 1.0, 0.6515, 0.6429, 0.3333, 0.9032, 0.7273, 0.3721, 0.3284], [0.0, 0.9815, 0.4889, 0.0565, 0.8113, 0.1483, 0.6667, 0.6857, 0.7879, 0.6429, 0.5833, 0.5806, 0.9545, 0.3256, 0.403], [0.0, 0.7963, 0.3556, 0.0968, 0.3962, 0.1103, 0.9286, 0.7429, 0.3939, 0.0, 0.9048, 0.6458, 0.4194, 1.3409, 0.7209, 0.6269]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

