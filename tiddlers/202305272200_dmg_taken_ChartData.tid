created: 20230527220043000
creator: Drevarr
modified: 20230705163531940
modifier: drevarr
tags: ChartData
title: 202305272200_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Lucas Ryn", "Tootsie Pop Rocks", "Lord Erin The Wise", "Bella Sassy", "Splitting Hairs", "Koralia Danai", "Black Raspberry Pie", "Legacy Of Mathus", "K U S A T T A", "Blanco Padre Guard", "Johosh Of The North", "Grilo Gringo", "Mistwalker Cael", "Gravlyn Isshtail", "Mammary Mission", "Permanent Dawn", "Rx Medic", "Nickzinzx", "Aira Draugr", "Tegan Parker", "Kaehln Lao", "Sygaldry Verdandi", "Daddy Demon", "Foxy Latina", "Tribal S", "Zaylen Harker", "No Reserv\u00e9", "Anita Strips", "Scarlet Nighttshade", "Bravatska", "Elaundo Yn Bashir", "Hypotenusa", "Sygaldry Verdandi", "Big T Rock", "Grimm Stroke", "Up The Dumper", "Gorekree", "Morv\u00e4rth", "Grimm Stroke", "Mochi Pudding", "Duke Silvver", "Egideontv", "Mae Mori", "Luna The Tuna", "Lyn Rilve", "Aaimiliya", "Absern", "Heeloz", "Miphest\u00f6"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Weaver", "Firebrand", "Reaper", "Firebrand", "Chronomancer", "Berserker", "Reaper", "Firebrand", "Tempest", "Dragonhunter", "Vindicator", "Spellbreaker", "Scourge", "Weaver", "Firebrand", "Chronomancer", "Herald", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scourge", "Druid", "Firebrand", "Vindicator", "Chronomancer", "Willbender", "Guardian", "Herald", "Tempest", "Dragonhunter", "Druid", "Scourge", "Scrapper", "Herald", "Scourge", "Harbinger", "Reaper", "Vindicator", "Harbinger", "Renegade", "Herald", "Daredevil", "Weaver", "Dragonhunter", "Mirage", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[189.0568, 0.0, 62.0508, 0.0, 65.2647, 112.75, 881.1161, 28.6981, 4064.2083, 1789.0889, 736.0248, 97.8065, 253.0566, 33.6792, 889.2308, 613.8288, 768.6941, 1757.1735, 0.0, 346.0635, 164.0667, 1393.5699, 20.2143, 987.767], [140.8736, 10.7, 36.8, 10.25, 130.6154, 146.1667, 638.8941, 2.0625, 1516.6053, 1339.1, 1044.2727, 107.2796, 210.0711, 284.1667, 902.4632, 171.1867, 365.4118, 733.8895, 2.75, 287.4615, 116.1154, 0.0, 1450.8617, 13.5882, 1117.4595], [124.809, 110.4103, 84.8621, 5.9062, 154.0, 82.6765, 901.6413, 82.4082, 1898.5357, 1471.8042, 1412.5474, 118.9018, 281.0103, 245.2, 878.6696, 479.9902, 404.7596, 963.4953, 0.0, 662.0606, 0.0, 24.5, 654.0741, 53.0, 1269.4474], [671.1236, 24.4103, 33.0656, 41.7222, 134.069, 56.9412, 867.7179, 46.4634, 1580.7258, 1943.775, 956.3197, 204.0864, 364.4528, 569.6038, 1011.1288, 484.1282, 1285.1636, 1101.9424, 0.0, 878.3671], [18.3494, 6.7027, 61.3529, 2.2647, 41.1429, 88.5897, 652.634, 80.6481, 1742.9851, 1161.4844, 1313.0738, 133.1706, 273.605, 99.6038, 811.3423, 141.316, 310.14, 579.767, 0.0, 805.4179, 238.9231, 1.5714, 327.6381, 19.9091, 1028.0086], [286.6, 1967.08, 2363.3143, 477.8718, 1079.7944, 1673.1562, 806.5065, 133.871, 0.0, 2198.3718, 102.9464, 1807.8421], [0.0, 13.6111, 33.193, 12.4412, 16.2647, 183.1351, 887.6792, 33.1304, 2753.1481, 1178.9005, 1107.4435, 115.6449, 171.5907, 88.5962, 1105.3725, 164.9138, 236.1485, 707.7906, 0.0, 396.32, 44.8621, 385.7404, 4.0926, 1186.9224], [1555.7683, 166.0431, 450.6439, 92.6792, 1526.2143, 940.2639, 713.2727, 959.8, 0.0, 727.4026, 132.7241, 2449.9552, 46.4259, 1402.5098], [946.0, 1319.7907, 211.7346, 1882.587, 930.595, 538.3617, 1939.1837, 1102.5044, 12.4737, 784.7895, 389.6667, 52.2308, 990.3981, 32.6866, 973.2111], [1732.3733, 210.3232, 686.5074, 247.1639, 1448.1515, 458.911, 517.3333, 1712.569, 0.0, 635.7647, 540.3, 0.0, 2342.082, 50.3704, 1412.2185], [43.1579, 100.5556, 0.0, 40.2903, 36.0857, 852.8833, 44.0755, 1956.0635, 1385.8395, 1029.6303, 237.7673, 450.7438, 8.6327, 823.713, 621.381, 1481.8205, 816.7207], [169.3708, 0.0, 2.05, 0.0, 100.2432, 99.1842, 708.668, 12.5455, 1533.831, 1028.3553, 967.3211, 59.6182, 266.9563, 99.9074, 814.4079, 200.2964, 153.9709, 505.3469, 0.0, 517.5224, 153.2593, 284.6952, 9.6182, 668.9597], [241.1875, 19.7681, 704.9087, 414.359, 1739.5366, 406.3867, 596.5273, 26.9753, 795.3377, 1198.7624, 1011.7407, 0.0, 970.2203, 382.4516, 0.0, 1726.614, 108.7576, 984.9444], [252.4086, 22.6875, 134.7705, 35.6364, 142.2857, 0.0, 474.7237, 141.6304, 1543.1304, 915.0269, 1938.3333, 277.3919, 4222.5882, 309.9025, 343.8879, 752.822, 0.0, 308.7105, 94.3548, 0.0, 431.7745, 37.5536, 807.3238], [227.0, 35.25, 7.1017, 0.0, 77.8387, 10.3235, 1008.7315, 4.1364, 1920.7763, 933.9364, 1621.3481, 126.7524, 530.6598, 48.1833, 846.6211], [3969.6667, 412.6368, 421.9689, 208.9623, 1150.9439, 424.0214, 519.0096, 1137.8776, 0.0, 399.6184, 58.8333, 218.6818, 1552.7176, 0.0, 1219.0795], [1620.3065, 495.7109, 756.1478, 250.5532, 615.2, 637.1957, 412.2996, 304.5943, 585.276, 9.3, 437.6986, 26.4667, 11.1053, 1396.4507, 856.0357], [1380.6282, 261.2558, 373.8372, 151.8491, 732.1053, 503.8832, 651.5, 1043.3907, 0.0, 557.8182, 215.5517, 0.0, 1129.4839, 68.3636, 988.3895], [787.0451, 218.5785, 796.9756, 0.0, 966.2237, 549.9006, 2244.3448, 1114.3235, 0.0, 471.3421, 586.4333, 8.8421, 1982.0, 45.1364, 1466.2192], [0.0, 24.2, 0.0, 0.0, 31.8889, 33.5484, 639.49, 4.2407, 2331.2973, 1187.5744, 999.5495, 205.5868, 307.5502, 128.8197, 1100.1462], [1235.8468, 78.805, 248.4404, 61.5161, 736.5241, 472.0684, 464.5306, 839.2671, 12.65, 778.7612, 238.4615, 0.0, 794.9367, 11.7429, 1039.0727], [4063.1333, 45.5484, 946.4762, 664.7719, 1004.5743, 1495.8511, 56.9643, 977.1739], [1145.3168, 336.1472, 242.1471, 133.4259, 1008.1973, 510.636, 278.6311, 566.5534, 0.0, 454.4848, 177.7692, 11.1538, 317.2, 18.0735, 726.1743], [118.2682, 268.8491, 77.4259, 829.1338, 298.6626, 553.1839, 972.6, 0.0, 805.7237, 521.9259, 8.3077, 688.1373], [176.4, 3.6176, 947.3362, 81.5319, 2117.7143, 1547.2158], [1579.9394, 1230.0727, 727.7582, 2226.66, 970.6336], [75.1389, 14.3333, 0.0, 64.6333, 114.8438, 790.6957, 29.8269, 1720.6027, 1600.5399], [145.3146, 24.4865, 0.0, 0.0, 108.7692, 2.8, 596.3263, 35.4783, 2115.9487, 1911.181, 1397.9808], [310.5506, 39.5122, 0.0, 0.0, 55.0938, 4.5286, 657.6375, 110.0435, 1929.8235, 972.5781], [469.0674, 0.0, 115.3514, 76.4524, 66.5152, 1124.6602, 0.0, 2475.25, 1361.7516, 842.404, 111.9955], [1189.8, 1165.2239, 834.2313, 0.0, 549.1104, 2034.2923], [2082.2941, 1888.8356], [21.0323, 36.5942, 618.7638, 0.0, 1374.0, 2132.3019], [124.0833, 6.2703, 26.9459, 53.1429, 690.1667, 0.0, 1935.5, 1063.2025], [89.5, 82.3729, 0.0, 67.5714, 15.3871, 565.2161, 0.0, 2936.15, 977.7826, 678.7667, 3517.0], [740.3492, 303.9286, 0.0, 3356.1613, 227.7419, 1467.6867], [1596.3293, 587.9815, 2710.8205], [3779.56, 491.9, 44.75, 1331.9077, 131.1132, 2321.4182], [1551.5641, 447.3351], [32.9175, 1904.6063], [104.6667, 0.0, 642.6608, 43.1222, 14603.8333], [280.2903, 0.0, 1528.6125, 28.3582, 1019.8846], [1381.8118], [143.6053, 416.2692, 0.0, 1271.8871], [1085.6623], [788.7347], [0.0, 779.9897], [75.625, 186.8689, 23.1111, 0.0], [101.0811, 113.1525], [11.8718, 78.8033, 10.7714]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

