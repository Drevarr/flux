created: 20230227222028000
creator: Drevarr
modified: 20230705163520369
modifier: drevarr
tags: ChartData
title: 202302272220_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Smol Gluvs", "Eibh\u00ebar", "High Sorcer Baradun", "Zaylen Harker", "Koralia Danai", "Bella Sassy", "Be\u00eb", "\u00c1rk\u00e1ntor", "Dark Sidiuz", "Blanco Padre Guard", "Zadie Miststep", "Tegan Parker", "Jupi Jupi Jupi", "Gavann", "Ravioli Fetabringer", "Sofya De Nova", "Primal Clone", "What Charr U Saying", "Ark Darkness", "M A C U M B E I R O", "Rozaalyna", "Sumatra Satyricon", "Mac Aaroni", "Skye Nightroad", "Oo Dads Mad", "Iris S K", "Rayla Shadowmoon", "Kira Dragonblaze", "Sassy Daddy Demon", "Viral Marketing", "Demon Sekhmet", "Newtype Khan", "Belvyn Brightblade", "King Squid", "Echo Monchichi", "Veron Blackburn", "Shalowana", "Smol Gluvs", "Arka\u00f1", "Xyntharos", "Rozaalyna", "Nelliel T", "Be\u00eb", "Dark Sidiuz", "Grumyaar Lordsbane", "Recayd Mob", "Zefirokai", "Ocean Shadow Wolf", "Sofya De Nova"];
const professions = ["Chronomancer", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Scourge", "Scourge", "Firebrand", "Tempest", "Tempest", "Dragonhunter", "Firebrand", "Firebrand", "Weaver", "Chronomancer", "Berserker", "Firebrand", "Weaver", "Scourge", "Soulbeast", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker", "Herald", "Dragonhunter", "Vindicator", "Willbender", "Berserker", "Spellbreaker", "Firebrand", "Reaper", "Renegade", "Herald", "Soulbeast", "Reaper", "Chronomancer", "Vindicator", "Reaper", "Reaper", "Reaper", "Reaper", "Firebrand", "Catalyst", "Tempest", "Herald", "Catalyst"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[49.2214, 2092.8571, 7754.5, 4808.3684, 5680.0, 23.8083, 4338.9524, 3.4306, 707.5029, 20.1528, 9.8936, 77.5804, 4.5758, 46.0889, 404.0111, 644.9787], [111.1481, 214.5385, 19305.25, 5016.0526, 18.8514, 661.0129, 45.7917, 14.1522, 272.5705, 11.2619, 166.0556, 484.2039, 79.717], [93.6296, 372.9482, 915.7203, 599.8375, 752.1818, 1716.8824, 8063.3, 5105.5, 4016.92, 3.6218, 4580.12, 11.8435, 398.0437, 82.6757, 0.0, 152.6301, 35.8125, 11.0769, 249.8918, 10.7447], [493.2869, 83.8286, 2281.6875, 1137.9351, 1490.9322, 4210.2778, 1788.76, 4162.1429, 80.5493, 5691.5789, 16.6267, 375.8108, 163.5, 127.566, 139.7568, 58.4474, 140.6118, 334.4566, 4.1607], [891.275, 2057.1111, 809.0147, 758.0263, 8126.1818, 1548.6957, 6227.0, 35.5714, 2238.4286, 4.875, 503.0767, 25.0556, 98.7215, 0.0, 87.2809, 345.8164, 3.8276], [118.1443, 1089.5041, 2312.5606, 825.4, 1702.2778, 851.8478, 7653.9167, 4206.5625, 4729.0, 11.6116, 3893.12, 3.5536, 417.3922, 21.0, 0.0, 62.5302, 0.0, 88.4778, 202.981, 27.6939], [67.4206, 609.1477, 1316.2459, 794.3704, 1681.86, 3486.2, 13156.3333, 5480.1538, 6454.7, 29.3802, 3721.9048, 17.0556, 352.5554, 72.493, 1.45, 97.9496, 0.0, 36.0778, 200.9233, 3.3714], [238.3716, 722.573, 964.3083, 0.0, 398.7595, 509.9545, 575.5926, 168.0816, 650.2874, 46.5833, 3.18, 263.5065, 28.2432, 65.9032, 373.845, 47.3137], [1069.5369, 70.8438, 252.4627, 51.4524, 204.7778, 480.8655, 0.0], [193.7045, 1656.5, 761.562, 0.0, 416.1875, 858.3714, 3521.3171, 1222.625, 3385.5217, 329.1611, 1030.8557, 55.0638, 62.5319], [104.2955, 1008.3203, 996.1696, 0.0, 417.525, 1580.3125, 187.4483, 1277.6522, 5026.875, 3378.8182, 22.8762, 6229.2727, 26.7586, 706.7619, 285.4219, 0.0, 155.0205, 40.6875, 90.7253, 490.5986], [83.1176, 1311.8897, 2547.3462, 797.1646, 1164.377, 1464.7429, 6760.5385, 2383.2308, 1259.0714, 29.6667, 4383.3684, 27.0685, 385.0462, 7.1, 16.1538, 60.1974, 26.6, 85.75, 175.6569, 2.3111], [5928.5385, 5739.1429, 2148.7692, 2225.4286, 85.2759, 4778.2, 38.069, 579.8859, 19.04, 25.84, 101.8425, 0.0, 71.6854, 303.1645, 2.2979], [163.4857, 768.3716, 2221.7907, 4022.0833, 1280.9412, 486.0, 2.1014, 587.0348, 45.5143, 0.0, 120.9796, 0.0, 214.7778, 502.3588], [84.0672, 1235.4094, 1343.0833, 0.0, 3075.1429, 1040.7059, 2841.6429, 7159.7778, 1359.0769, 3732.6667, 0.0, 4447.1, 53.9781, 381.2051, 35.375], [44.4154, 690.7709, 746.925, 801.2208, 707.8873, 481.8889, 8133.4545, 728.8462, 3276.7143, 2.8833, 3752.1875, 27.6554, 303.2532, 14.7429, 3.18, 64.1111, 0.0, 57.4111, 225.4194, 12.8438], [0.0, 106.7407, 458.1489, 169.4615, 139.4231, 1100.6897, 45.3417, 915.3448, 14.1533, 578.6795, 91.9565, 0.0, 120.3793, 0.0, 495.6444, 422.8693, 46.0926], [43.3806, 565.0335, 843.2083, 395.5, 336.3333, 724.2692, 14040.8333, 329.8462, 1370.6552, 7.3898, 1989.6333, 20.3767, 515.6956, 45.6143, 0.0, 56.8684, 0.0, 42.25, 234.6707, 14.3617], [38.2381, 727.1164, 61.5, 36.0385, 258.3605, 0.0, 147.3871, 416.2207, 2.5111], [2270.375, 2023.6429, 1544.0192, 1138.4848, 932.35, 1783.9091, 2122.36, 49.5619, 3140.4583, 58.4863, 638.5637, 87.0286, 10.7447, 52.7351, 141.2941], [400.3265, 852.1054, 66.5342, 0.0, 250.7466, 0.0, 204.7595, 491.8971, 59.9388], [231.7737, 2917.225, 904.4706, 951.8205, 1950.7358, 3849.8205, 675.24, 4939.2941, 59.5906, 608.3508, 116.2676, 0.0], [115.6343, 1168.1639, 1497.0588, 0.0, 3081.8182, 1843.7347, 3295.04, 8784.6667, 2246.2273, 576.68, 66.4737, 1138.6957, 139.5957, 886.7596, 0.0, 0.0, 287.8421], [104.8741, 461.699, 937.5, 0.0, 228.359, 307.9104, 460.55, 1015.5385, 1101.8462, 651.6071, 29.8814, 980.0, 0.0, 334.7098, 47.6705, 8.52, 120.268, 6.6667, 61.234, 252.7997, 0.0213], [223.6866, 2005.8542, 3418.2344, 4256.0645, 960.0462, 1369.9574, 6030.4167, 5062.3529, 5885.5, 192.5763, 3927.6111], [129.0515, 1259.8516, 1178.6694, 3783.7419, 898.7746, 1743.4222, 9178.7778, 1149.0, 4842.92, 90.2857, 4780.4545], [95.2349, 759.6078, 106.3056, 141.2179, 132.1739, 162.7978, 392.7561, 79.9818], [433.0741, 2224.4483, 2988.6462, 5799.0455, 1772.3137, 3484.6538, 17089.0, 8376.4444, 7448.2727, 59.4915, 6484.4545], [153.5865, 978.8318, 1964.9861, 0.0, 1227.2653, 1620.0909, 2818.5484, 961.9091, 4579.4167, 3308.9565, 9.2269, 4859.3125], [147.2329, 1177.0274, 1614.0299, 0.0, 478.9383, 1386.1311, 2570.9333, 7157.2, 5107.8462, 4719.6, 46.5583, 4752.1905], [61.7761, 1281.1333, 700.405, 0.0, 471.6049, 1482.0, 991.5, 3165.087, 2987.2941, 2708.4583, 98.991, 2916.45], [70.9658, 735.3528, 111.0241, 90.1071, 168.1458, 21.0571, 156.2556, 48.9155], [33.9577, 7.5714, 167.0811, 14.7111, 139.4945, 417.3595, 77.1136], [49.8571, 1202.0168, 5451.8125, 0.0, 273.85, 1600.1964, 524.6923, 328.3043, 508.5769, 1747.4, 75.4068, 5270.6154], [392.5442, 32.2264], [345.0463, 225.1538], [107.0821, 1400.8268, 1775.9884, 0.0, 4485.7059], [139.2153, 711.9679], [6192.12, 31.3193, 2794.5], [1039.7642, 0.0, 1881.2157], [82.704, 1192.4231, 3381.1333], [2670.2308, 129.3109, 4751.125], [16530.4, 31.825, 9220.8], [3530.36, 113.9835, 2010.0], [7461.3333, 23.6102, 1203.2143], [119.6318, 35.44], [78.8087], [88.5108], [21.7388, 64.9245], [239.7286]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

