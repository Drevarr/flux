created: 20230626010646000
creator: Drevarr
modified: 20230705163537121
modifier: drevarr
tags: ChartData
title: 202306260106_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Iskalla", "Pale Pam", "Rednuii", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.9897, 0.0, 19.0172, 0.0, 25.1338, 10.7292, 16.9781, 8.7692, 3.9778, 0.0, 0.0, 1.9844, 1.0, 24.1342, 0.0, 0.0, 4.02, 0.0, 7.9333, 0.0, 0.0, 11.9434, 0.0, 1.6173, 10.0098, 0.0, 13.0471, 0.0, 1.9898, 0.0, 16.1429], [4.9794, 0.0, 7.2931, 8.1413, 16.493, 0.0, 45.2031, 0.0, 4.9778, 1.0, 3.9615, 4.9844, 5.0364, 38.1212, 0.0, 4.9677, 9.04, 3.0233, 8.0444, 2.0, 0.0, 5.9623, 1.0, 0.0, 6.963, 2.0, 0.0, 12.0353, 2.0, 12.5714, 0.9855, 12.1667, 4.925, 0.0, 8.0135, 7.2222, 8.2188, 9.5455], [62.4433, 0.0, 34.3103, 0.0, 75.9577, 60.7292, 77.6969, 64.8654, 11.2], [26.2165, 1.0, 33.2241, 1.2391, 32.2746, 54.35, 23.3077, 5.4889, 15.1778, 2.9615, 18.1719, 10.0909, 48.4113, 0.0, 6.9516, 1.0, 0.0, 2.9556, 0.0, 1.0, 0.0, 0.0, 30.1605, 16.2157, 0.0, 14.1882, 0.0, 25.2449, 14.3913, 38.9881, 13.825, 0.0, 14.0405, 0.0, 20.7656, 32.2841], [0.0, 6.0159, 6.0233, 0.0, 53.1031, 2.0, 46.8966, 14.413, 72.9507, 18.25, 105.5938, 32.2308, 22.8, 35.8444, 10.7692, 43.4375, 19.8727, 76.9827, 8.1795, 45.8871, 39.14, 25.0233, 40.5556, 20.6552, 62.6316, 41.566, 0.0, 26.8929, 46.3086, 58.8333, 25.5, 48.8235, 3.0723, 53.0408, 20.4058, 66.381, 27.25, 0.0, 35.1757, 22.5926, 39.875]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

