created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasah", "Lord Erin The Wise", "Necrotic Windrunner", "Elonith Requiem", "Elonith Requiem", "Hyde En Sikh", "Arriasa", "Fribble Bibble", "Body Ody Ody", "Black Raspberry Pie", "Tootsie Pop Rocks", "Koralia Danai", "Ateriuz", "Daphne Agla\u00e9", "Miphest\u00f6", "Glorious Gluvs", "Bella Sassy", "Rahani Sunray", "Xanvias Einzbern", "Drevarr Moonwillow", "Gavann"];
const professions = ["Vindicator", "Weaver", "Reaper", "Reaper", "Scourge", "Chronomancer", "Druid", "Scrapper", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Reaper", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2, 0.1731], [0.0353, 0.0, 0.0441, 0.0159, 0.0, 0.0455, 0.1071, 0.0139, 0.0, 0.0796, 0.0, 0.0], [0.0317, 0.0274, 0.1136, 0.0357, 0.0694, 0.02, 0.0885, 0.0581, 0.0], [0.2059, 0.0794, 0.137, 0.1136], [0.1882, 0.3077, 0.1071, 0.1944, 0.06, 0.2301, 0.0349, 0.0], [0.0941, 0.0577, 0.2941, 0.1429, 0.2055, 0.1136, 0.131, 0.0972, 0.0, 0.2212, 0.0814, 0.0], [0.1176, 0.2222, 0.4247, 0.1932, 0.1786, 0.0556, 0.04, 0.2478, 0.2558, 0.0], [0.1294, 0.1923, 0.1029, 0.2222, 0.0274, 0.2273, 0.131, 0.1806, 0.32, 0.1947, 0.2791, 0.0], [0.3294, 0.3654, 0.1912, 0.1746, 0.0959, 0.1591, 0.2262, 0.1667, 0.16, 0.1947, 0.1512, 0.0], [0.2, 0.2885, 0.2059, 0.0635, 0.3014, 0.2386, 0.1667, 0.0556, 0.0, 0.2743, 0.314, 0.0], [0.1765, 0.1538, 0.2059, 0.1429, 0.2877, 0.2273, 0.2381, 0.2361, 0.34, 0.1416, 0.1744, 0.011], [0.1412, 0.1538, 0.2794, 0.127, 0.0685, 0.3068, 0.3214, 0.0972, 0.14, 0.2301, 0.3721, 0.0], [0.2353, 0.1731, 0.1324, 0.1429, 0.1918, 0.2045, 0.1548, 0.1944, 0.26, 0.3009, 0.3256, 0.0], [0.1294, 0.0962, 0.2353, 0.2222, 0.1918, 0.2386, 0.3452, 0.1667, 0.18, 0.1947, 0.3605, 0.0], [0.1294, 0.2885, 0.3529, 0.2222, 0.1096, 0.125, 0.25, 0.1944, 0.4, 0.2389, 0.2326, 0.0], [0.1529, 0.3846, 0.1765, 0.1111, 0.2603, 0.2727, 0.131, 0.3194, 0.18, 0.2124, 0.3372, 0.0], [0.2, 0.25, 0.1471, 0.2857, 0.1233, 0.1591, 0.2143, 0.1944, 0.1, 0.3363, 0.4419, 0.0], [0.1059, 0.1538, 0.2353, 0.0952, 0.0274, 0.4091, 0.2976, 0.1944, 0.4, 0.3097, 0.3605, 0.0], [0.1529, 0.0962, 0.3971, 0.2222, 0.0959, 0.375, 0.1786, 0.2917, 0.18, 0.3628, 0.2442, 0.0], [0.2941, 0.1154, 0.2941, 0.3333, 0.0822, 0.3295, 0.2262, 0.3056, 0.36, 0.4159, 0.4302, 0.0], [0.2471, 0.0577, 0.3971, 0.3333, 0.2192, 0.25, 0.4048, 0.1111, 0.16, 0.3628, 0.5465, 0.033]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

