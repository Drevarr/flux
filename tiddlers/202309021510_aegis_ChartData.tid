created: 20230902151000000
creator: Drevarr
tags: ChartData
title: 202309021510_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Serene Azura", "Drevarr Moonwillow", "Banish Evil", "Surethang Jr", "Frozen Chaos", "Unbreakable Nemesis", "Wall Knot", "Lurker Holystrike", "Gestern Yesteryear"];
const professions = ["Dragonhunter", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 29.7175, 56.736, 0.0, 0.0, 0.0, 0.4554, 1.679, 0.0, 2.465, 0.0, 0.0, 5.908, 21.0244, 0.3542, 5.6628], [6.2382, 0.7656, 13.8373, 8.352, 1.2546, 6.8742, 0.0, 31.9194, 24.3302, 4.5698, 1.218, 27.3431, 15.1522], [39.4472, 20.676, 22.6867, 35.5169, 6.4427, 27.8421, 12.8957, 0.1162, 0.1458, 1.5453], [0.0, 14.3959, 1.344, 0.0, 0.0, 0.0, 0.9108, 2.1384, 0.0, 0.0, 18.2868, 0.0, 26.8223, 23.0656, 7.1512, 32.8757, 13.1032, 9.0948, 19.9214, 0.0, 0.0], [0.0, 0.0, 0.0, 44.712, 25.043, 2.1859, 14.5, 61.7397, 21.1747, 122.4138, 33.2035, 1.6826, 71.4142, 31.6327, 78.3022, 86.6554, 0.3985, 5.6763], [42.4195, 3.8333, 53.476, 217.0904, 8.3241, 42.1831, 83.4851, 12.0442, 183.4118], [0.0, 89.5356, 61.104, 0.0, 34.2376, 0.0, 45.7056, 9.0763, 6.6766, 20.01, 26.2111, 9.8585, 64.988, 73.6193, 10.4058, 89.3464, 41.5598, 7.1126, 72.2225], [0.0, 17.8832, 0.0, 30.0564, 6.0826, 0.0, 48.72, 175.7274, 19.1033, 240.5738, 107.5712, 0.2214, 113.5706, 0.0, 0.0, 27.999], [25.1748, 0.0, 69.0749, 49.8, 11.3856, 38.0851, 124.4808, 33.2442, 20.1802, 15.2856, 58.58, 78.6332, 46.032, 182.9117, 134.6512, 13.9039, 264.4213, 48.9812, 73.882, 45.041, 13.8802, 34.2567]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

