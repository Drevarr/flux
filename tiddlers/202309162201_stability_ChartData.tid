created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Howls", "Xeltrom", "Tribal S", "Gamora Titus", "Revenant Brandorf", "Zaedy Zae", "Oo Dads Mad", "Adrinz", "Regis Hawkesburne", "Arcanophage Farra", "Venomina The Fierce", "Belvyn Brightblade", "Leafzely", "Ax Axun", "Aira Draugr", "Xanvias Einzbern", "Mistwalker Cael", "Zori Fizbow", "Etcherii", "No Reserv\u00e9", "Sub Train", "Ryvalia Fazebringer", "Gabe Malhorn", "Crusader Siolith", "Bella Sassy", "Koralia Danai"];
const professions = ["Druid", "Druid", "Druid", "Firebrand", "Vindicator", "Druid", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Vindicator", "Herald", "Berserker", "Vindicator", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.6437, 6.8281, 0.6072], [6.697, 9.3111, 0.6589, 1.2852, 0.6076, 0.2464, 0.814], [4.8218, 7.1385, 0.7623, 1.5422, 0.0, 0.6496, 0.5267, 0.748, 0.3791, 0.2071, 0.0, 0.2683, 0.2052, 0.218, 0.6804, 0.3276, 0.3441, 0.1459, 0.3247, 0.8794, 0.63], [7.8084, 1.7745, 1.2961, 2.0976, 2.4502, 1.9619, 4.284], [23.5734, 1.2415, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2348, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.924], [9.6437, 10.5526, 0.0, 0.8996, 0.1764, 0.4928, 0.0, 0.476, 0.337, 0.7456, 0.0, 0.8385, 0.0, 0.2012, 0.486, 0.2184, 0.0, 0.2371, 0.0, 0.203, 0.588], [8.3043, 11.1733, 0.0, 3.9199, 0.0, 1.1424, 1.9631, 3.91, 1.5163, 1.9882, 0.0, 1.5764], [4.8047, 1.8229, 4.9304, 1.7852, 0.4025, 3.7908, 2.2523, 2.0417, 3.3926, 3.3948, 3.2472, 6.636], [8.0364, 12.1044, 0.0, 4.4339, 0.3136, 1.1648, 0.8618, 0.952, 0.6318, 1.3669, 1.1673, 1.6099, 0.0, 0.3857, 2.1384, 0.5323, 0.0, 0.529, 0.246, 1.0147, 2.31], [11.7867, 9.6215, 0.0, 2.5061, 0.0, 0.0, 0.0, 2.516, 1.3057, 1.7811, 1.3751, 2.9515, 0.0, 0.0, 0.9396, 1.1603, 0.8029, 0.4742, 0.0, 2.3678, 1.596], [10.5526, 1.8217, 4.4339, 1.9404, 1.7696, 1.9152, 3.638, 2.9063, 3.8521, 1.3592, 2.3143, 1.1696, 0.0838, 4.1472, 1.0783, 0.8029, 1.7328], [20.6268, 17.6911, 1.5116, 3.2773, 1.6128, 4.9795], [23.5734, 4.0348, 0.0, 3.3415, 0.0, 0.5376, 3.591, 1.938, 2.3166, 2.6509, 1.8069, 1.0397, 1.0055, 0.3354, 0.0, 0.5187, 0.0, 0.6749, 1.0332, 1.0824, 2.646], [15.0013, 23.8985, 1.5633, 3.0845, 0.9408, 1.6128, 0.0, 1.87, 0.716, 1.6982, 0.1439, 1.1068, 0.0, 0.0, 0.5508, 0.0, 0.0, 0.1642, 0.0394, 1.2853, 2.646], [23.0377, 25.14, 2.261, 8.4181, 2.1756, 0.672, 1.8194], [21.4304, 20.7948, 1.1886, 3.0845, 1.078, 1.0528, 2.4898, 3.196, 0.8003, 1.3254, 1.0234, 0.872, 0.8413, 0.4025, 1.6848, 0.9419, 0.7914, 1.0762, 1.3776], [25.4486, 23.2777, 3.2171, 2.3776, 0.0, 1.456, 0.4788, 0.748, 0.0842, 2.6923, 3.0701, 0.3019, 0.2668, 1.4925, 1.8468], [22.5019, 40.3481, 16.065, 1.2152, 3.5392], [13.8802, 1.9404, 6.048, 6.9426, 13.124, 9.6034, 11.8461, 1.9188, 7.7477, 3.0985, 4.2596, 9.4608, 6.0606, 1.1011, 4.487, 3.995, 5.6826, 6.762], [62.1482, 52.1422, 2.0284, 7.0043, 0.0, 0.4256, 1.6279], [34.2886, 37.8651, 1.4987, 8.6751, 0.0, 4.6144, 6.9905, 9.69, 3.3275, 8.9881, 3.2779, 5.5676, 3.2832, 4.4105, 11.826, 2.3751, 2.3858, 3.9034, 4.8216, 2.5707, 6.552], [39.9141, 50.5903, 3.0879, 10.7957, 2.156, 3.584, 5.1232, 4.828, 5.6862, 6.71, 0.0, 4.0583, 4.8632, 3.0689, 10.8216, 4.7365, 2.4316, 3.4474, 2.6076, 4.6679, 8.106], [54.1118, 58.3496, 5.336, 11.1812, 6.4064, 4.4528, 9.18, 7.708, 9.071, 4.9569, 3.0521, 1.6416, 2.4652, 4.6656, 3.7538, 2.099, 2.3894, 4.5067, 6.9003, 8.232], [60.0051, 83.1792, 2.5582, 13.4946, 3.1948, 3.6288, 7.3735, 11.356, 9.2243, 10.852, 3.5338, 6.1043, 3.7141, 3.2198, 8.0676, 6.3063, 0.9061, 1.3498, 4.4674, 3.856, 9.954], [78.4888, 83.4895, 4.5995, 18.5069, 4.3512, 3.696, 5.4583, 13.906, 10.867, 6.9171, 5.1968, 5.5341, 4.9658, 3.4211, 9.3636, 0.8327, 1.3076, 5.4173, 4.6543, 4.6002, 11.046], [80.6319, 94.6628, 6.3437, 16.1935, 4.0544, 8.379, 12.478, 10.3615, 8.9467, 3.9335, 4.595, 4.4323, 2.8509, 8.2296, 5.2143, 2.5234, 4.7242, 4.7035, 7.9827, 12.39]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

