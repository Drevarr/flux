created: 20230701000406000
creator: Drevarr
modified: 20230705163540076
modifier: drevarr
tags: ChartData
title: 202307010004_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Seiker Soulkeeper", "Sakis Ranger", "Drumina", "K\u00f4sair", "Dingle Mcbingle", "Traidoruns Maximus", "Ima Lou", "Mike The Archmagus", "Xanvias Einzbern", "Blancooo Padreee", "Audra Storm", "Klengah", "Latedoctor", "Smol Daddy Tika", "Bella Sassy", "Arriasa", "Lucky Leipreach\u00e1n", "Tribal S", "High Sorcer Baradun", "Mirallas Decountae", "Be\u00eb", "Gavann", "Fluffy No Care Bear", "Demon Staph", "Gestern Yesteryear", "Newtype Khan", "Primal Clone", "Morv\u00e4rth", "Solus Sanctus", "Gamora Titus", "Broken Cheese", "Morton Saltbringer", "Koralia Danai", "Aronorf Xideliesi", "Johosh The Mighty", "Ak\u00e1nt\u00f3r", "Drevarr Moonwillow", "Tegan Parker", "Mmathuss", "Mistwalker Cael", "Arcanophage Farra", "Melli Dragonswrath", "Smol Gluvs", "Zayde Sunsabre", "Lord Erin The Wise", "Mike The Archmagus", "Kary\u00edna", "Xyntharos", "Ryvalia Fazebringer", "Duke Silvver"];
const professions = ["Firebrand", "Druid", "Druid", "Berserker", "Firebrand", "Firebrand", "Druid", "Tempest", "Berserker", "Berserker", "Weaver", "Druid", "Reaper", "Berserker", "Firebrand", "Druid", "Scrapper", "Druid", "Tempest", "Daredevil", "Scourge", "Firebrand", "Berserker", "Druid", "Firebrand", "Spellbreaker", "Chronomancer", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Druid", "Scrapper", "Tempest", "Firebrand", "Vindicator", "Spellbreaker", "Berserker", "Reaper", "Spellbreaker", "Weaver", "Weaver", "Vindicator", "Vindicator", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10, 7, 9, 34, 11, 2, 0, 0], [2, 0, 1, 1, 0, 0, 0, 1, 30, 1, 7, 3, 5, 0, 5, 1, 5, 5, 0, 2, 3, 1], [9, 3, 12, 8, 13, 11, 5, 16, 0, 1, 0], [4, 10, 6, 7, 6, 4, 5, 14, 2, 7, 0, 0, 3, 14], [7, 9, 4, 6, 2, 1, 5, 2, 5, 12, 9, 1, 3, 20], [21, 24, 12, 1, 23, 0, 2, 2, 11], [17, 7, 28, 6, 10, 0, 0, 1, 13, 0, 8, 6], [0, 2, 30, 67], [15, 7, 0, 3, 0, 1, 0, 0, 11, 0, 12, 13, 3, 4, 4, 16, 3, 1, 0, 2, 2, 3], [1, 0, 2, 14, 1, 0, 21, 0, 5, 2, 2, 12, 0, 6, 13, 6, 0, 6, 0, 0, 4, 10], [0, 0, 75, 31], [13, 3, 1, 4, 18, 0, 0, 0, 8, 8, 10, 21, 0, 0, 10, 0, 7, 0, 1, 1, 6, 1], [9, 2, 13, 10, 12, 10, 14, 0, 1, 8, 35], [0, 2, 32, 1, 0, 1, 2, 0, 9, 9, 10, 0, 0, 0, 6, 3, 13, 0, 3, 12, 14], [0, 1, 15, 0, 11, 0, 0, 0, 8, 0, 37, 1, 10, 0, 15, 1, 0, 1, 0, 1, 13, 10], [5, 7, 1, 0, 3, 1, 0, 5, 12, 11, 18, 6, 3, 0, 13, 0, 2, 5, 0, 1, 7, 24], [7, 1, 0, 8, 1, 0, 0, 0, 3, 13, 8, 2, 6, 0, 1, 1, 19, 4, 3, 41, 9], [7, 9, 4, 5, 0, 0, 0, 1, 2, 0, 2, 12, 2, 0, 18, 0, 32, 1, 0, 0, 26, 7], [22, 16, 6, 4, 21, 0, 4, 0, 13, 9, 12, 22], [13, 33, 9, 76], [3, 4, 12, 10, 0, 1, 0, 12, 13, 17, 12, 0, 1, 6, 1, 5, 8, 0, 0, 6, 24], [5, 4, 5, 20, 4, 24, 4, 5, 0, 18, 0, 12, 14, 0, 9, 12], [5, 2, 23, 13, 12, 7, 0, 10, 31, 34], [16, 8, 25, 1, 12, 0, 1, 7, 11, 8, 7, 9, 3, 0, 3, 0, 8, 23], [11, 16, 10, 3, 5, 2, 1, 3, 7, 9, 20, 7, 2, 0, 16, 9, 14, 2, 0, 1, 4, 3], [0, 6, 10, 18, 0, 0, 5, 12, 15, 2, 21, 0, 0, 0, 9, 7, 7, 1, 0, 5, 10, 18], [15, 1, 2, 27, 5, 0, 9, 0, 4, 10, 6, 5, 10, 5, 4, 5, 5, 23, 0, 0, 10, 1], [21, 27, 7, 7, 11, 0, 1, 2, 9, 0, 16, 1, 0, 0, 7, 3, 2, 28, 0, 1, 0, 7], [4, 2, 12, 1, 8, 3, 1, 2, 2, 9, 15, 12, 0, 3, 1, 11, 32, 4, 0, 3, 14, 15], [20, 16, 0, 0, 0, 0, 5, 16, 19, 5, 4, 0, 17, 4, 2, 5, 0, 1, 15, 30], [6, 6, 2, 16, 11, 6, 2, 2, 5, 4, 22, 10, 10, 11, 10, 15, 0, 0, 28, 2], [25, 15, 32, 19, 4, 0, 2, 0, 19, 4, 2, 8, 0, 11, 4, 0, 6, 0, 4, 20, 10], [18, 4, 25, 14, 2, 0, 0, 0, 11, 8, 26, 14, 9, 8, 18, 6, 13, 7, 0, 0, 0, 4], [9, 5, 17, 25, 11, 1, 3, 1, 4, 10, 18, 8, 2, 1, 1, 7, 14, 24, 13, 8, 13], [11, 13, 15, 7, 12, 1, 1, 4, 7, 9, 10, 9, 3, 17, 23, 9, 3, 14, 0, 3, 10, 17], [9, 20, 11, 10, 0, 0, 0, 0, 19, 11, 10, 22, 2, 1, 50, 0, 0, 4, 0, 0, 23, 16], [11, 9, 28, 26, 20, 0, 0, 0, 4, 15, 28, 10, 1, 0, 10, 0, 10, 15, 0, 3, 15, 8], [5, 21, 5, 19, 9, 0, 0, 2, 19, 12, 15, 1, 0, 0, 4, 2, 29, 45, 0, 3, 5, 17], [26, 19, 3, 0, 10, 0, 4, 2, 10, 12, 11, 7, 4, 11, 32, 6, 13, 6, 0, 10, 13, 18], [45, 6, 12, 54, 47, 7, 9, 6, 28, 20], [16, 8, 13, 24, 13, 1, 2, 0, 25, 5, 8, 32, 24, 0, 9, 14, 9, 15, 2, 14, 1], [2, 10, 34, 16, 7, 0, 2, 4, 20, 14, 17, 4, 3, 5, 38, 6, 17, 13, 0, 2, 15, 11], [14, 7, 15, 21, 9, 5, 2, 5, 21, 12, 13, 12, 11, 4, 7, 0, 26, 9, 0, 6, 10, 41], [9, 11, 9, 17, 0, 15, 6, 0, 0, 0, 19, 30, 2, 0, 52, 5, 7, 18, 0, 3, 21, 36], [3, 4, 44, 53, 16, 0, 0, 1, 15, 7, 18, 39, 3, 1, 12, 20, 8, 10, 0, 25, 12], [33, 12, 18, 11, 16, 0, 1, 18, 10, 5, 59, 4, 6, 35, 27, 40, 97, 40], [32, 21, 6, 20, 12, 9, 12, 6, 22, 20, 43, 29, 42, 4, 53, 9, 7, 19, 0, 18, 14, 49], [40, 35, 35, 22, 29, 12, 26, 11, 31, 30, 42, 15, 23, 24, 52, 19, 0, 29], [32, 7, 68, 57, 31, 1, 2, 17, 14, 14, 39, 43, 21, 4, 18, 5, 41, 2, 0, 5, 47, 25], [6, 20, 13, 63, 55, 23, 20, 9, 56, 68, 33, 14, 14, 15, 79, 1, 55, 18, 0, 28, 62]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

