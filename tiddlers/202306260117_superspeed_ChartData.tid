created: 20230626011754000
creator: Drevarr
modified: 20230705163538077
modifier: drevarr
tags: ChartData
title: 202306260117_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Miphest\u00f6", "Seiker Novus Terra", "Sakis Ranger", "Grasszanine", "Newtype Khan", "Tegan Parker", "Warrior Constantine", "The Fancy Cheese", "Cerys Fireblade", "Johosh The Mighty", "Zayde Sunsabre", "Blancooo Padreee", "Arcanophage Farra", "Daddy Demon", "Etchery Of Ascalon", "Elon The Archmagus", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Tempest", "Tempest", "Druid", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Berserker", "Berserker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.429, 0, 0.121, 0.666, 0.27, 0.527, 0.528, 0, 0.591], [0.497, 0.019, 0, 0.523, 0.213, 0.425, 0.756, 0.324, 0.26, 0.493, 0.239, 0.397, 0], [0.994, 0.5, 0, 0.194, 0.202, 0.327, 0.632, 0.645, 0.967, 0.285, 0.878, 0.267, 0.632, 0.277, 0.095, 0, 0.362, 0.587, 0], [0.497, 0.247, 0, 0.385, 0.374, 0.232, 0.394, 0.632, 0, 0.519, 0.586, 0.306, 0.585, 0.069, 0, 0, 0.782, 0.187, 0.42, 0.378, 0.323, 0.307, 0.495, 0, 0.238, 0.558, 0], [0.829, 0.426, 0, 0.137, 0.231, 0.528, 0, 0.875, 0.366, 1.001, 0.768, 0.115, 0.147, 0.632, 0.534, 0.512, 0.826, 0, 0.1, 0.931, 0], [0.688, 0, 0, 0.202, 0.405, 0.313, 0, 0.647, 0.178, 0.354, 0.568, 0.346, 0.001, 0, 0.76, 0.222, 0.696, 1.374, 0.522, 0.542, 0.804, 0, 0.202, 0.771, 0], [0, 0.194, 0.252, 0.096, 0.316, 0.631, 0.415, 0.22, 0.442, 0.633, 0.277, 0.264, 0, 0.782, 0.08, 0.42, 0.646, 0.627, 0.614, 0.439, 0, 0.3, 0.291, 0], [0.829, 0.407, 0.283, 0.461, 0, 0.524, 0.395, 0, 0.445, 0.289, 0.642, 0.265, 0.466, 0.547, 0, 0.871, 0.534, 1.394], [0.497, 0.398, 0, 0.038, 0.423, 0, 0.711, 1.058, 0, 0.748, 0, 0.287, 0.389, 0.129, 0.388, 0, 0.493, 0.534, 1.36, 1.135, 0.357, 0.806, 0.248, 0, 0.231, 0.559, 0], [0.827, 0.889, 0, 0.799, 0.407, 0, 0.976, 1.154, 0.474, 0.685, 1.124, 0, 0, 0.144, 0, 0.71, 0.632, 0.54, 0.64, 0.823, 0.929, 0.51, 0, 0], [0.829, 0.429, 0, 0.162, 0.439, 0.414, 0.551, 0.509, 1.208, 0.267, 0.511, 0.794, 0.726, 0.261, 0.338, 0, 0.435, 0.178, 0.243, 0.632, 0.538, 0, 0.957, 0, 0.374, 1.088, 0], [0.826, 0.429, 0.465, 0, 0.54, 0.881, 0.412, 0.366, 0.441, 0.737, 0.446, 0, 0.868, 0.178, 0.699, 0.632, 0.405, 0.512, 0.826, 0, 0.477, 0.926, 0], [0.828, 0.429, 0, 0.415, 0.634, 0.647, 0.129, 0.488, 1.613, 0.695, 0.598, 0.511, 1.025, 0.49, 0.208, 0, 0.975, 0.133, 0.335, 0.73, 0.537, 0.512, 0.827, 0, 0.333, 0], [0.828, 0.433, 0, 0.314, 0.666, 0.519, 1.297, 0.756, 0, 0.782, 1.019, 0.555, 0.526, 0.462, 0.253, 0.868, 0.404, 0.533, 0.632, 0.54, 0.51, 0.951, 0, 0.123, 1.264, 0], [0.304, 0.129, 0, 0.388, 0.591, 0.645, 0.093, 0.444, 0.725, 0.877, 0.533, 0.739, 0.664, 0.602, 0.436, 0.434, 0.523, 0.213, 0.905, 0.759, 0.65, 0.615, 0.371, 0, 0.57, 0.546, 0.894], [1.986, 0.772, 0.149, 0.482, 0.755, 0.541, 0.408, 0.893, 0, 0.599, 0.868, 0.613, 1.077, 0.607, 0.483, 1.162, 1.043, 0.318, 1.684, 0.758], [1.057, 1.934, 0.639, 1.432, 0.803, 1.069, 1.009, 0.601, 0, 0.784, 0.32, 1.08, 1.133, 0.647, 0.615, 0.991, 0, 0.583, 1.116, 0.11], [1.988, 0.562, 0, 0.323, 0.918, 0.803, 1.477, 1.009, 1.612, 0.731, 1.558, 1.162, 0.653, 0.693, 0.371, 0, 0.871, 0.156, 1.65, 1.264, 0.54, 0.512, 0.827, 0, 0.258, 0.665, 0], [1.925, 0.763, 0.241, 0.867, 1.057, 0.683, 1.149, 2.003, 0.483, 1.509, 0.973, 0.817, 1.603, 1.222, 1.268, 0.291, 1.04, 0.414, 1.678, 1.384, 0.722, 1.382, 1.735, 1.664, 1.014, 1.12, 1.786]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

