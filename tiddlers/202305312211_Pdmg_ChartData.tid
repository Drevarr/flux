created: 20230531221142000
creator: Drevarr
modified: 20230705163532555
modifier: drevarr
tags: ChartData
title: 202305312211_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Smol Gluvs", "Newtype Khan", "Grasszanine", "Cedryn X", "Kira Dragonblaze", "Kosair", "Sumatra Satyricon", "Irin The Undeath", "No Reserv\u00e9", "Tootsie Pop Rocks", "Sister Elonith", "Rosie Sunray", "Zayde Sunsabre", "Soxx", "Jeckyll Mbs", "Be\u00eb", "Lord Erin The Wise", "Shaca Booey", "Permanent Dawn", "My Birthday Girl", "Kary\u00edna", "Mistwalker Cael", "Cyclotechnist Farra", "Xanvias Einzbern"];
const professions = ["Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Berserker", "Dragonhunter", "Guardian", "Soulbeast", "Scourge", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Berserker", "Willbender", "Berserker", "Scourge", "Weaver", "Berserker", "Weaver", "Scrapper", "Vindicator", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.0015, 36.2721, 106.8667, 82.0113, 116.9386, 59.7222, 47.0652, 115.573, 119.724, 57.0117, 115.7857, 91.1107, 43.9317, 2.3281, 35.5263], [62.3424, 72.947, 496.6222, 69.3136, 48.4035, 80.2778, 141.1848, 91.3892, 115.584, 117.9064, 104.5286, 109.7336, 30.8259, 11.375, 0.0], [101.2489, 79.5194, 339.8556, 81.4427, 64.1338, 169.5741, 104.7935, 115.8108, 157.664, 40.2865, 55.0643, 180.3402, 102.1672, 6.125, 0.0], [89.2941, 68.583, 366.6667, 82.3306, 92.2127, 223.1481, 139.5326, 158.9514, 173.032, 41.0643, 116.8714, 189.1516, 52.6587, 15.0625, 0.0], [181.5897, 219.6732, 160.3804, 258.773, 529.884, 312.7251, 101.7429, 255.2951, 54.6177, 53.5, 0.0], [172.1508, 289.8834, 646.7, 215.7733], [307.4087, 120.2332, 304.5778, 172.2922, 233.1776, 0.0], [152.73, 135.7774, 150.3556, 122.915, 178.0351, 195.537, 166.2283, 225.6432, 111.096, 259.4971, 97.4, 243.4877, 64.8703, 78.1406, 8.2281], [311.6848, 114.2615, 708.7667, 214.9181, 217.7478, 172.9457, 253.7892], [208.2036, 91.6396, 486.7889, 177.1807, 278.9846, 346.3704, 116.6087, 95.2, 271.384, 128.7719, 226.8714, 163.0287, 103.2628, 84.125, 0.0], [236.451, 170.742, 460.0333, 231.2695, 267.9868, 184.0926, 432.1304, 260.8304, 202.5714, 358.7828, 265.6519, 177.4688, 0.0], [0.0, 199.9329, 927.5, 159.1965, 371.9583, 106.7037, 439.0326, 413.7622, 1480.644], [242.4962, 184.0389, 806.3333, 198.5806, 237.5022, 473.2778, 63.5543, 256.573, 614.668, 135.4737, 82.7429, 336.5697, 110.0956, 83.2188, 28.8684], [307.1056, 275.8763, 1209.2111, 207.9395, 99.5, 355.0, 195.2065, 375.9027, 133.792, 268.4094, 469.9214, 352.5328, 128.0512, 117.9844, 0.0], [240.1267, 178.0671, 466.8667, 222.1423, 376.0702, 696.5741, 281.1304, 232.9405, 427.448, 396.2456, 209.9071, 242.3811, 149.9044, 20.0, 0.0], [155.3756, 173.9399, 914.8222, 260.4081, 302.1031, 219.8333, 142.7609, 411.027, 897.0, 338.9883, 244.9429, 326.8361, 125.5085, 43.9531, 0.0], [411.9065, 345.3286, 1327.1, 294.7991, 0.0, 82.1111, 351.2935, 382.7946, 599.1, 258.2339, 478.6214, 282.7418, 204.6109, 102.3438, 0.0], [298.6305, 381.9541, 1169.9778, 256.0838, 356.2303, 334.963, 127.413, 354.4811, 343.788, 631.8012, 390.8786, 567.1148, 16.6246], [303.4344, 104.1837, 779.8111, 262.301, 378.4759, 751.2037, 299.3261, 263.9297, 1006.524, 241.4737, 541.8, 274.2254, 138.9761, 58.3594, 50.5789], [542.4374, 231.689, 843.7333, 320.4093, 322.3925, 227.0741, 90.1087, 366.627, 643.512, 180.6199, 205.0857, 268.1721, 105.1877, 0.0, 0.0], [566.5249, 532.6996, 629.4111, 326.6228, 548.4211, 70.8704, 237.3043, 508.4865, 340.316, 369.9474, 471.1857, 191.9262], [354.8205, 272.7774, 880.2556, 350.9641, 430.0395, 320.2778, 296.2717, 554.6432, 819.108, 407.2456, 251.8786, 248.3074, 303.3515, 223.0156, 0.0], [497.4374, 319.636, 911.8222, 369.4125, 584.8202, 63.9815, 378.3043, 434.2541, 992.816, 413.2281, 319.5929, 249.6557, 173.6997, 47.4062, 64.4298], [555.0256, 467.0777, 1402.9, 382.8224, 340.2895, 310.537, 251.3261, 483.173, 796.112, 505.1696, 580.9929, 593.123, 100.686, 134.1562, 0.0], [632.092, 356.6078, 1124.2889, 742.8186, 426.4759, 399.4815, 464.5761, 477.7135, 1656.764, 428.7076, 430.9857, 796.1721, 291.4915, 107.8281, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

