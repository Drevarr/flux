created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Greg The Knight", "Darks Na", "Belvyn Brightblade", "Drevarr Moonwillow", "Yummy Kiwi", "Bearah", "Sub Train", "Crusader Siolith", "Gabe Malhorn", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Firebrand", "Dragonhunter", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[105.9822, 9.6495, 11.4492, 1.7597, 25.08, 45.76, 9.2895, 60.4141], [22.8726, 45.3288, 2.4346, 0.0, 9.348, 0.4867, 0.0, 28.3444, 2.093, 2.499, 24.235, 0.0, 0.0, 8.2069, 143.4804], [198.8694, 25.3429, 60.5031, 18.6545, 24.2592, 73.48, 0.0, 74.3465], [100.9188, 25.8924, 20.7435, 0.0, 44.232, 49.0, 0.0, 14.1757, 17.3135, 18.8632, 42.2096, 0.8568, 38.85, 34.7563, 101.2167, 98.0066, 174.3364], [354.7872, 84.9572, 36.8644, 13.1414, 66.348, 133.12, 109.147], [140.3784, 19.0244, 76.9038, 4.7923, 122.9832, 23.4, 55.9728, 34.0874, 66.9147, 53.0818, 0.0, 46.361, 104.9438, 124.2579, 113.2309, 203.87], [264.8682, 90.7263, 51.5214, 0.0, 34.4736, 42.16, 7.546, 52.3832, 140.0562, 43.1372, 59.8261, 16.7909, 73.371, 127.4398, 223.3351, 153.9084, 469.8928], [278.8362, 93.4048, 10.1661, 25.9927, 87.552, 62.84, 1.1275, 180.1472, 77.4884, 139.687, 167.7339, 55.6087, 40.811, 123.6155, 275.5069, 181.7403, 417.2172], [302.058, 52.9179, 35.1043, 0.0, 50.9808, 55.12, 51.1225, 310.2232, 184.3252, 77.4384, 92.9659, 24.6211, 40.108, 197.4024, 309.4104, 202.198, 298.8624], [437.373, 18.681, 21.1218, 12.8794, 157.1376, 67.2, 0.0, 43.8048, 83.7522, 63.6881, 151.8617, 16.8147, 142.376, 117.8228, 316.4873, 250.9634, 705.28], [629.9568, 91.9969, 37.1276, 0.0, 121.6608, 135.36, 249.0181, 129.4992, 120.7245, 103.6636, 11.9833, 110.519, 127.946, 416.7166, 666.8966, 1050.6468]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

