created: 20230408001602000
creator: Drevarr
modified: 20230705163524628
modifier: drevarr
tags: ChartData
title: 202304080016_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Newtype Khan", "Black Raspberry Pie", "Anita Strips", "Arriasa", "Venomina The Siren", "Mac Chiato", "Tegan Parker", "Zadie Miststep", "Drevarr Moonwillow", "Mike The Archmagus", "Zenek Tryst"];
const professions = ["Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Druid", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2453, 0.0244, 0.4935, 0.0517, 0.0566, 0.0, 0.2606, 0.2133, 0.0, 0.1644, 0.0, 0.4333, 0.2063, 0.0, 0.1525, 0.2, 0.25, 0.2778, 0.048, 0.1615, 0.1581, 0.1319, 0.3667, 0.2727, 0.025, 0.0523], [0.717, 0.2683, 0.4026, 0.1293, 0.2264, 0.038, 0.1972, 0.2933, 0.0, 0.4247, 0.1333, 0.7, 0.3651, 0.0066, 0.1864, 0.175, 0.2434, 0.6, 0.504, 0.2692, 0.0983, 0.6703, 0.4417, 0.4935, 0.075, 0.1111], [0.1698, 0.3415, 1.1818, 0.3621, 0.4906, 0.0633, 0.1831, 0.2533, 0.0, 0.1644, 0.0333, 0.35, 0.0, 0.1523, 0.3051, 0.0, 0.4079, 1.0444, 0.352, 0.5538, 0.1752, 0.5055, 0.825, 0.6494, 0.475, 0.1471], [1.2264, 0.2195, 1.0, 0.6638, 0.566, 0.0506, 0.4577, 0.2133, 0.2727, 0.3836, 0.0, 0.8667, 0.2698, 0.0265, 0.2712, 0.2, 0.5526, 0.9222, 0.912, 0.4038, 0.2436, 0.3736, 0.575, 0.7013, 0.425, 0.0392], [0.8933, 0.0, 0.4795, 1.9333, 0.0, 1.2381, 0.4636, 0.6271, 0.5066, 1.2778, 1.016, 1.0538, 0.6838, 0.8462, 0.375, 0.2857, 0.425, 0.6536], [2.1509, 0.3415, 1.2597, 0.069, 0.5283, 0.1646, 1.2042, 1.2667, 0.2727, 0.8219, 0.2667, 1.8667, 1.3333, 0.0728, 0.322, 0.075, 0.9605, 0.8444, 1.544, 1.1538, 0.7479, 1.1429, 1.525, 1.0779, 0.65, 0.2451], [1.2075, 1.0244, 1.2987, 0.9224, 0.8679, 0.6076, 0.3169, 1.4933, 0.0, 1.2603, 0.4333, 1.8333, 1.0635, 0.3377, 0.7627, 0.275, 1.5329, 2.5111, 1.728, 1.0115, 0.6923, 1.2527, 0.8083, 1.8961, 1.25, 0.7026], [1.5094, 0.4878, 1.1169, 1.0345, 0.8679, 0.2658, 1.3099, 0.3733, 0.0, 2.2192, 0.1667, 2.0167, 1.0794, 0.2384, 0.5593, 0.725, 1.7434, 2.1778, 0.328, 1.15, 0.7949, 1.5385, 1.325, 1.5974, 1.1, 0.6438], [2.2075, 1.2683, 1.9481, 0.8966, 1.6981, 0.443, 1.3732, 1.08, 0.3333, 1.3014, 0.7667, 1.55, 2.1111, 0.4503, 0.8475, 0.725, 1.4342, 2.9111, 1.304, 1.1, 0.8632, 1.3407, 2.3583, 2.2338, 1.175, 1.2745], [3.3019, 0.5854, 1.6494, 1.0345, 0.8302, 0.5443, 1.3521, 1.28, 0.7273, 1.5068, 1.0, 2.4333, 1.3492, 0.6954, 1.2712, 0.85, 1.9211, 2.2333, 1.784, 1.2077, 1.0171, 2.1209, 2.0, 1.7532, 1.525, 1.1765], [1.8679, 0.8537, 2.5065, 0.8534, 1.5094, 0.9114, 2.0986, 0.7333, 0.1212, 1.6438, 0.8667, 1.8833, 2.5079, 0.5629, 1.1525, 1.15, 0.4342, 3.1444, 2.232, 1.7923, 1.2436, 0.9121, 2.0667, 2.1948, 1.45, 1.0784], [2.2453, 0.878, 1.9221, 1.1897, 1.434, 0.3544, 1.0704, 1.6, 0.9091, 1.7671, 1.1333, 2.1167, 2.8889, 0.6159, 0.5085, 0.95, 2.0132, 3.3333, 1.904, 1.7923, 0.9017, 2.2857, 2.6, 2.1299, 1.65, 1.1765]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

